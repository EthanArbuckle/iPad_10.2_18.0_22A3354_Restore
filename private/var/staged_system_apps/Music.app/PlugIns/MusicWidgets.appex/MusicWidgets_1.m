uint64_t sub_1000883F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a5;
  v9 = sub_10000B4C8(&qword_10054B098);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v28 - v13;
  v15 = sub_10000B4C8(&qword_10054B0A0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v28 - v20;
  *(_QWORD *)v21 = static HorizontalAlignment.leading.getter(v19);
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 0;
  v22 = sub_10000B4C8(&qword_10054B0A8);
  v23 = sub_1000885EC(a1, a2, a3, a4, &v21[*(int *)(v22 + 44)]);
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v23);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v24 = sub_10000B4C8(&qword_10054B0B0);
  sub_100088A18(a1, a2, a3, a4, &v14[*(int *)(v24 + 44)]);
  sub_100011370((uint64_t)v21, (uint64_t)v18, &qword_10054B0A0);
  sub_100011370((uint64_t)v14, (uint64_t)v12, &qword_10054B098);
  v25 = v29;
  sub_100011370((uint64_t)v18, v29, &qword_10054B0A0);
  v26 = sub_10000B4C8(&qword_10054B0B8);
  sub_100011370((uint64_t)v12, v25 + *(int *)(v26 + 48), &qword_10054B098);
  sub_100011694((uint64_t)v14, &qword_10054B098);
  sub_100011694((uint64_t)v21, &qword_10054B0A0);
  sub_100011694((uint64_t)v12, &qword_10054B098);
  return sub_100011694((uint64_t)v18, &qword_10054B0A0);
}

uint64_t sub_1000885EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  int *v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v50 = a4;
  v56 = a3;
  v53 = a2;
  v54 = a1;
  v59 = a5;
  v5 = sub_10000B4C8(&qword_10054AE50);
  v6 = __chkstk_darwin(v5);
  v60 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v49 - v8;
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054B0C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054B0C8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v58 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v49 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v49 - v22;
  v24 = sub_10000B4C8(&qword_10054B008);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v57 = v28;
  v29 = *(uint64_t (**)(void))(v28 + 16);
  v61 = (char *)&v49 - v30;
  v55 = v29;
  v31 = v29();
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v31);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v32 = sub_10000B4C8(&qword_10054B0D0);
  v33 = sub_100088D68(v54, v53, &v14[*(int *)(v32 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v33);
  v34 = sub_100012324(&qword_10054B0D8, &qword_10054B0C0, (const char *)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v11, v12, v34);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v52);
  sub_100011694((uint64_t)v14, &qword_10054B0C0);
  v35 = v23;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v21, v15);
  if (*(_BYTE *)(v56 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 60)) == 1)
  {
    v36 = v62;
    sub_100011370(v50, v62, &qword_10054ADA0);
    v37 = sub_10000B4C8(&qword_10054ADA0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
  }
  else
  {
    v38 = sub_10000B4C8(&qword_10054ADA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v62, 1, 1, v38);
  }
  v39 = v55;
  ((void (*)(char *, char *, uint64_t))v55)(v27, v61, v24);
  v40 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v41 = v58;
  v42 = v35;
  v40(v58, v35, v15);
  v43 = v60;
  sub_100011370(v62, v60, &qword_10054AE50);
  v56 = v16;
  v44 = v59;
  *v59 = 0;
  *((_BYTE *)v44 + 8) = 0;
  v45 = (int *)sub_10000B4C8(&qword_10054B0F0);
  ((void (*)(char *, char *, uint64_t))v39)((char *)v44 + v45[12], v27, v24);
  v40((char *)v44 + v45[16], v41, v15);
  sub_100011370(v43, (uint64_t)v44 + v45[20], &qword_10054AE50);
  sub_100011694(v62, &qword_10054AE50);
  v46 = *(void (**)(char *, uint64_t))(v56 + 8);
  v46(v42, v15);
  v47 = *(void (**)(char *, uint64_t))(v57 + 8);
  v47(v61, v24);
  sub_100011694(v43, &qword_10054AE50);
  v46(v41, v15);
  return ((uint64_t (*)(char *, uint64_t))v47)(v27, v24);
}

uint64_t sub_100088A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;

  v38 = a4;
  v41 = a2;
  v42 = a3;
  v40 = a1;
  v44 = a5;
  v5 = sub_10000B4C8(&qword_10054AE50);
  v6 = __chkstk_darwin(v5);
  v45 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v43 = (uint64_t)&v38 - v8;
  v39 = type metadata accessor for AccessibilityChildBehavior(0);
  v9 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054B0C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054B0C8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v38 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v38 - v24;
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v23);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v26 = sub_10000B4C8(&qword_10054B0D0);
  v27 = sub_100088D68(v40, v41, &v14[*(int *)(v26 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v27);
  v28 = sub_100012324(&qword_10054B0D8, &qword_10054B0C0, (const char *)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v11, v12, v28);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v39);
  sub_100011694((uint64_t)v14, &qword_10054B0C0);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v22, v15);
  if (*(_BYTE *)(v42 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 60)) == 1)
  {
    v29 = v43;
    sub_100011370(v38, v43, &qword_10054ADA0);
    v30 = sub_10000B4C8(&qword_10054ADA0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
  else
  {
    v31 = sub_10000B4C8(&qword_10054ADA0);
    v29 = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v43, 1, 1, v31);
  }
  v32 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v32(v19, v25, v15);
  v33 = v45;
  sub_100011370(v29, v45, &qword_10054AE50);
  v34 = v44;
  *v44 = 0;
  *((_BYTE *)v34 + 8) = 0;
  v35 = sub_10000B4C8(&qword_10054B0E0);
  v32((char *)v34 + *(int *)(v35 + 48), v19, v15);
  sub_100011370(v33, (uint64_t)v34 + *(int *)(v35 + 64), &qword_10054AE50);
  sub_100011694(v29, &qword_10054AE50);
  v36 = *(void (**)(char *, uint64_t))(v16 + 8);
  v36(v25, v15);
  sub_100011694(v33, &qword_10054AE50);
  return ((uint64_t (*)(char *, uint64_t))v36)(v19, v15);
}

uint64_t sub_100088D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v27 = a2;
  v28 = a3;
  v4 = sub_10000B4C8(&qword_10054AFC8);
  v26 = *(_QWORD *)(v4 - 8);
  v5 = v26;
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_10000B4C8(&qword_10054AFD0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v25 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v25 - v16, a1, v11);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19(v10, v27, v4);
  v18(v15, (uint64_t)v17, v11);
  v19(v8, (uint64_t)v10, v4);
  v20 = v28;
  v18(v28, (uint64_t)v15, v11);
  v21 = sub_10000B4C8(&qword_10054B0E8);
  v19(&v20[*(int *)(v21 + 48)], (uint64_t)v8, v4);
  v22 = *(void (**)(char *, uint64_t))(v26 + 8);
  v22(v10, v4);
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v17, v11);
  v22(v8, v4);
  return ((uint64_t (*)(char *, uint64_t))v23)(v15, v11);
}

uint64_t sub_100088F20@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t OpaqueTypeConformance2;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t result;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  __int128 v143;

  v113 = a1;
  v119 = a2;
  v2 = type metadata accessor for RecentlyPlayedLargeContentView(0);
  v111 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v112 = v3;
  v114 = (uint64_t)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10000B4C8(&qword_10054AF20);
  v116 = *(_QWORD *)(v118 - 8);
  v4 = __chkstk_darwin(v118);
  v117 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v115 = (char *)&v106 - v6;
  v110 = sub_10000B4C8(&qword_100548A30);
  __chkstk_darwin(v110);
  v141 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Text.TruncationMode(0);
  v137 = *(_QWORD *)(v8 - 8);
  v138 = v8;
  __chkstk_darwin(v8);
  v134 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v121);
  v11 = (uint64_t *)((char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v12);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_10000B4C8(&qword_100549700);
  __chkstk_darwin(v120);
  v16 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10000B4C8(&qword_10054AF28);
  __chkstk_darwin(v122);
  v124 = (uint64_t)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_10000B4C8(&qword_10054AF30);
  __chkstk_darwin(v123);
  v127 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10000B4C8(&qword_10054AF38);
  __chkstk_darwin(v125);
  v126 = (uint64_t)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10000B4C8(&qword_10054AF40);
  __chkstk_darwin(v130);
  v128 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000B4C8(&qword_10054AF48);
  v131 = *(_QWORD *)(v21 - 8);
  v132 = v21;
  __chkstk_darwin(v21);
  v129 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054AF50);
  v135 = *(_QWORD *)(v23 - 8);
  v136 = v23;
  __chkstk_darwin(v23);
  v133 = (char *)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10000B4C8(&qword_10054AF58);
  __chkstk_darwin(v139);
  v140 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_10000B4C8(&qword_10054AF60);
  v142 = *(_QWORD *)(v109 - 8);
  v26 = __chkstk_darwin(v109);
  v108 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v107 = (char *)&v106 - v28;
  if (qword_1005478E0 != -1)
    swift_once(&qword_1005478E0, sub_10009F4CC);
  v143 = xmmword_100561408;
  v29 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v30 = Text.init<A>(_:)(&v143, &type metadata for String, v29);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  v37 = enum case for Text.Case.uppercase(_:);
  v38 = type metadata accessor for Text.Case(0);
  v39 = *(_QWORD *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 104))(v14, v37, v38);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v14, 0, 1, v38);
  KeyPath = swift_getKeyPath(&unk_100427228);
  sub_100011370((uint64_t)v14, (uint64_t)v11 + *(int *)(v121 + 28), &qword_100548A48);
  *v11 = KeyPath;
  sub_100011370((uint64_t)v11, (uint64_t)&v16[*(int *)(v120 + 36)], &qword_100548A40);
  *(_QWORD *)v16 = v30;
  *((_QWORD *)v16 + 1) = v32;
  v16[16] = v36;
  *((_QWORD *)v16 + 3) = v34;
  sub_10002EBA0(v30, v32, v36);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v11, &qword_100548A40);
  sub_100011694((uint64_t)v14, &qword_100548A48);
  sub_10001DA20(v30, v32, v36);
  swift_bridgeObjectRelease(v34);
  v41 = swift_getKeyPath(&unk_100427168);
  v42 = v124;
  sub_100011370((uint64_t)v16, v124, &qword_100549700);
  v43 = v42 + *(int *)(v122 + 36);
  *(_QWORD *)v43 = v41;
  *(_QWORD *)(v43 + 8) = 1;
  *(_BYTE *)(v43 + 16) = 0;
  sub_100011694((uint64_t)v16, &qword_100549700);
  v45 = v137;
  v44 = v138;
  v46 = v134;
  (*(void (**)(char *, _QWORD, uint64_t))(v137 + 104))(v134, enum case for Text.TruncationMode.tail(_:), v138);
  v47 = swift_getKeyPath(&unk_100427198);
  v48 = (uint64_t)v127;
  v49 = (uint64_t *)&v127[*(int *)(v123 + 36)];
  v50 = sub_10000B4C8(&qword_10054ACD8);
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v49 + *(int *)(v50 + 28), v46, v44);
  *v49 = v47;
  sub_100011370(v42, v48, &qword_10054AF28);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
  v51 = sub_100011694(v42, &qword_10054AF28);
  v52 = static Font.caption2.getter(v51);
  v53 = Font.bold()();
  swift_release(v52);
  v54 = swift_getKeyPath(&unk_1004271C8);
  v55 = v126;
  sub_100011370(v48, v126, &qword_10054AF30);
  v56 = (uint64_t *)(v55 + *(int *)(v125 + 36));
  *v56 = v54;
  v56[1] = v53;
  sub_100011694(v48, &qword_10054AF30);
  if (qword_1005477C8 != -1)
    swift_once(&qword_1005477C8, sub_1000339F4);
  v57 = sub_10000B4C8(&qword_100548AA0);
  v58 = sub_10000D78C(v57, (uint64_t)qword_100561238);
  v59 = v130;
  v60 = (uint64_t)v128;
  sub_100011370(v58, (uint64_t)&v128[*(int *)(v130 + 36)], &qword_100548AA0);
  sub_100011530(v55, v60, &qword_10054AF38);
  v61 = sub_10009590C();
  v62 = v129;
  View.widgetAccentable(_:)(1, v59, v61);
  sub_100011694(v60, &qword_10054AF40);
  *(_QWORD *)&v143 = v59;
  *((_QWORD *)&v143 + 1) = v61;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v143, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  v64 = v132;
  v65 = v133;
  View.unredacted()(v132, OpaqueTypeConformance2);
  v66 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v62, v64);
  LOBYTE(v64) = static Edge.Set.bottom.getter(v66);
  v67 = EdgeInsets.init(_all:)(-4.0);
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v75 = v135;
  v74 = v136;
  v76 = (uint64_t)v140;
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v140, v65, v136);
  v77 = v139;
  v78 = v76 + *(int *)(v139 + 36);
  *(_BYTE *)v78 = v64;
  *(double *)(v78 + 8) = v67;
  *(_QWORD *)(v78 + 16) = v69;
  *(_QWORD *)(v78 + 24) = v71;
  *(_QWORD *)(v78 + 32) = v73;
  *(_BYTE *)(v78 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v74);
  v79 = enum case for DynamicTypeSize.xxLarge(_:);
  v80 = type metadata accessor for DynamicTypeSize(0);
  v81 = (uint64_t)v141;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 104))(v141, v79, v80);
  v82 = sub_10001254C(&qword_100548AA8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v81, v81, v80, v82);
  if ((result & 1) != 0)
  {
    v84 = sub_100095B60();
    v85 = sub_100012324(&qword_100548B10, &qword_100548A30, (const char *)&protocol conformance descriptor for PartialRangeThrough<A>);
    v86 = v108;
    View.dynamicTypeSize<A>(_:)(v81, v77, v110, v84, v85);
    sub_100011694(v81, &qword_100548A30);
    sub_100011694(v76, &qword_10054AF58);
    v87 = v142;
    v88 = v107;
    v89 = v109;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v107, v86, v109);
    v90 = v114;
    sub_10000D964(v113, v114, type metadata accessor for RecentlyPlayedLargeContentView);
    v91 = *(unsigned __int8 *)(v111 + 80);
    v92 = (v91 + 16) & ~v91;
    v93 = swift_allocObject(&unk_1004FAAF0, v92 + v112, v91 | 7);
    sub_10000DB44(v90, v93 + v92, type metadata accessor for RecentlyPlayedLargeContentView);
    v94 = sub_10000B4C8(&qword_10054AF98);
    v95 = sub_100012324(&qword_10054AFA0, &qword_10054AF98, (const char *)&protocol conformance descriptor for Link<A>);
    v96 = v115;
    ForEach<>.init(_:content:)(1, 4, sub_100095F8C, v93, v94, v95);
    v97 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    v97(v86, v88, v89);
    v98 = v116;
    v99 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
    v100 = v117;
    v101 = v118;
    v99(v117, v96, v118);
    v102 = v119;
    v97(v119, v86, v89);
    v103 = sub_10000B4C8(&qword_10054AFA8);
    v99(&v102[*(int *)(v103 + 48)], v100, v101);
    v104 = *(void (**)(char *, uint64_t))(v98 + 8);
    v104(v96, v101);
    v105 = *(void (**)(char *, uint64_t))(v142 + 8);
    v105(v88, v89);
    v104(v100, v101);
    return ((uint64_t (*)(char *, uint64_t))v105)(v86, v89);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100089A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  int v18;
  void *v19;
  id v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;

  v1 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v24 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v24 - v12;
  v14 = *(_BYTE *)(v0 + *(int *)(v11 + 20)) & 0xFE;
  sub_10000D964(v0, (uint64_t)&v24 - v12, v15);
  if (v14 == 2)
  {
    sub_10000E750((uint64_t)v13, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    sub_10000D964(v0, (uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    v16 = 0;
    v7 = v10;
LABEL_15:
    sub_10000E750((uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    return v16;
  }
  sub_100011370((uint64_t)&v13[v4[6]], (uint64_t)v3, &qword_100548310);
  sub_10000E750((uint64_t)v13, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v17 = type metadata accessor for WidgetMusicItem(0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v3, 1, v17);
  sub_100011694((uint64_t)v3, &qword_100548310);
  sub_10000D964(v0, (uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (v18 == 1)
  {
    v16 = 0;
    v7 = v10;
    goto LABEL_15;
  }
  v19 = *(void **)&v10[v4[8]];
  v20 = v19;
  sub_10000E750((uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (v19)
  {

    v21 = (uint64_t *)(v0 + v4[10]);
    v16 = *v21;
    v22 = v21[1];
    sub_10000D964(v0, (uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    if (!v22)
    {
      if (*(_QWORD *)(*(_QWORD *)&v7[v4[7]] + 16))
      {
        v16 = 0;
      }
      else
      {
        if (qword_100547820 != -1)
          swift_once(&qword_100547820, sub_1000345E8);
        v16 = qword_100561308;
        swift_bridgeObjectRetain();
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  return 0;
}

uint64_t sub_100089CF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t OpaqueTypeConformance2;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t KeyPath;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD v162[2];

  v141 = a1;
  v140 = type metadata accessor for ColorScheme(0);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v138 = (uint64_t)&v125 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for AccessibilityChildBehavior(0);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v135 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100547A38);
  v5 = __chkstk_darwin(v4);
  v125 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v158 = (char *)&v125 - v7;
  v152 = sub_10000B4C8(&qword_100549640);
  __chkstk_darwin(v152);
  v155 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_10000B4C8(&qword_100549648);
  __chkstk_darwin(v153);
  v154 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100549AC8);
  __chkstk_darwin(v10);
  v147 = (uint64_t)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549A50);
  __chkstk_darwin(v12);
  v144 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_10000B4C8(&qword_100549AB8);
  v14 = __chkstk_darwin(v145);
  v143 = (uint64_t)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v149 = (uint64_t)&v125 - v16;
  v142 = type metadata accessor for SplitPercentageLayout(0);
  v17 = *(_QWORD *)(v142 - 8);
  v18 = __chkstk_darwin(v142);
  v20 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v125 - v21;
  v23 = sub_10000B4C8(&qword_100549A88);
  __chkstk_darwin(v23);
  v148 = (uint64_t)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000B4C8(&qword_10054B0F8);
  __chkstk_darwin(v25);
  v150 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10000B4C8(&qword_10054B100);
  __chkstk_darwin(v146);
  v151 = (uint64_t)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_10000B4C8(&qword_10054B108);
  __chkstk_darwin(v160);
  v156 = (char *)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_10000B4C8(&qword_10054B110);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v127 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10000B4C8(&qword_10054B118);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v157 = (char *)&v125 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10000B4C8(&qword_10054B120);
  v31 = __chkstk_darwin(v130);
  v132 = (char *)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v131 = (uint64_t)&v125 - v33;
  v34 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v34);
  v36 = (char *)&v125 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v42 = (char *)&v125 - v41;
  v43 = type metadata accessor for WidgetMusicItem(0);
  v44 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v161 = (uint64_t)&v125 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = v1;
  sub_10003EE7C((uint64_t)v42);
  v46 = sub_100081B90();
  v126 = v43;
  if ((v46 & 1) != 0)
  {
    sub_100011370((uint64_t)&v42[*(int *)(v37 + 24)], (uint64_t)v36, &qword_100548310);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v36, 1, v43);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      goto LABEL_21;
    }
    v48 = v161;
    sub_10000DB44((uint64_t)v36, v161, type metadata accessor for WidgetMusicItem);
    goto LABEL_6;
  }
  v49 = *(_QWORD *)&v42[*(int *)(v37 + 28)];
  if (*(_QWORD *)(v49 + 16))
  {
    v48 = v161;
    sub_10000D964(v49 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80)), v161, type metadata accessor for WidgetMusicItem);
LABEL_6:
    v50 = (uint64_t)v150;
    goto LABEL_7;
  }
  v48 = v161;
  v50 = (uint64_t)v150;
  if (qword_100547848 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v124 = sub_10000D78C(v126, (uint64_t)qword_100561330);
  sub_10000D964(v124, v48, type metadata accessor for WidgetMusicItem);
LABEL_7:
  sub_10000E750((uint64_t)v42, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  SplitPercentageLayout.init(axis:locations:)(0, &off_1004F8EE8);
  v51 = v17;
  v52 = v20;
  v53 = v22;
  v54 = v142;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v53, v142);
  v55 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v56 = (uint64_t)v144;
  v55(v144, v20, v54);
  v57 = v143;
  sub_100011370(v56, v143, &qword_100549A50);
  v58 = v147;
  sub_10008AAC0(v48, v159, v147);
  sub_100011694(v56, &qword_100549A50);
  sub_100011530(v58, v57 + *(int *)(v145 + 44), &qword_100549AC8);
  v59 = v149;
  sub_100011530(v57, v149, &qword_100549AB8);
  v60 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v54);
  v61 = static Alignment.center.getter(v60);
  v62 = v148;
  sub_10003F958(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v148, 0.0, 1, INFINITY, 0, v61, v63);
  sub_100011694(v59, &qword_100549AB8);
  sub_10003EE7C((uint64_t)v40);
  v64 = sub_100081594();
  v66 = v65;
  sub_10000E750((uint64_t)v40, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_10003E3B4(v64, v66, v50, 32.0, 16.0);
  swift_bridgeObjectRelease(v66);
  sub_100011694(v62, &qword_100549A88);
  sub_10003EE7C((uint64_t)v40);
  v67 = v151;
  sub_10000D964((uint64_t)v40, v151, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_100011370(v50, v67 + *(int *)(v146 + 36), &qword_10054B0F8);
  sub_10000E750((uint64_t)v40, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v68 = sub_100011694(v50, &qword_10054B0F8);
  v150 = (char *)static Alignment.topTrailing.getter(v68);
  v70 = v69;
  v71 = (uint64_t)v156;
  v72 = (uint64_t)&v156[*(int *)(v160 + 36)];
  v73 = v67;
  if (qword_100547800 != -1)
    swift_once(&qword_100547800, sub_100034248);
  v74 = sub_10000B4C8(&qword_100548BD0);
  v75 = sub_10000D78C(v74, (uint64_t)qword_1005612C0);
  v76 = static Edge.Set.trailing.getter(v75);
  v77 = EdgeInsets.init(_all:)(10.0);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  v84 = v155;
  v85 = sub_100011370(v75, v155, &qword_100548BD0);
  v86 = v84 + *(int *)(v152 + 36);
  *(_BYTE *)v86 = v76;
  *(double *)(v86 + 8) = v77;
  *(_QWORD *)(v86 + 16) = v79;
  *(_QWORD *)(v86 + 24) = v81;
  *(_QWORD *)(v86 + 32) = v83;
  *(_BYTE *)(v86 + 40) = 0;
  v87 = static Edge.Set.top.getter(v85);
  v88 = EdgeInsets.init(_all:)(12.0);
  v90 = v89;
  v92 = v91;
  v94 = v93;
  v95 = v154;
  sub_100011370(v84, v154, &qword_100549640);
  v96 = v95 + *(int *)(v153 + 36);
  *(_BYTE *)v96 = v87;
  *(double *)(v96 + 8) = v88;
  *(_QWORD *)(v96 + 16) = v90;
  *(_QWORD *)(v96 + 24) = v92;
  *(_QWORD *)(v96 + 32) = v94;
  *(_BYTE *)(v96 + 40) = 0;
  sub_100011694(v84, &qword_100549640);
  sub_100011530(v95, v72, &qword_100549648);
  v97 = (_QWORD *)(v72 + *(int *)(sub_10000B4C8(&qword_10054AD60) + 36));
  *v97 = v150;
  v97[1] = v70;
  sub_100011530(v73, v71, &qword_10054B100);
  sub_10003EE7C((uint64_t)v40);
  v98 = sub_100081B90();
  sub_10000E750((uint64_t)v40, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v98 & 1) == 0)
  {
    v104 = v161 + *(int *)(v126 + 28);
    v100 = type metadata accessor for URL(0);
    v102 = (uint64_t)v158;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v158, v104, v100);
    v103 = v157;
    goto LABEL_13;
  }
  v99 = v125;
  URL.init(string:)(0xD000000000000016, 0x8000000100445260);
  v100 = type metadata accessor for URL(0);
  v101 = *(_QWORD *)(v100 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100);
  v103 = v157;
  v102 = (uint64_t)v158;
  if ((_DWORD)result == 1)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v158, v99, v100);
LABEL_13:
  v105 = v160;
  type metadata accessor for URL(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v102, 0, 1, v100);
  v106 = sub_100095594(&qword_10054B128, &qword_10054B108, &qword_10054B130, &qword_10054B100);
  v107 = v127;
  View.widgetURL(_:)(v102, v105, v106);
  sub_100011694(v102, &qword_100547A38);
  v108 = sub_100011694(v71, &qword_10054B108);
  v109 = v135;
  static AccessibilityChildBehavior.contain.getter(v108);
  v162[0] = v105;
  v162[1] = v106;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v162, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
  v111 = v129;
  View.accessibilityElement(children:)(v109, v129, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v109, v137);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v107, v111);
  sub_10003EE7C((uint64_t)v40);
  LOBYTE(v109) = sub_100081B90();
  sub_10000E750((uint64_t)v40, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v109 & 1) != 0)
  {
    v112 = v139;
    v113 = v138;
    v114 = v140;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v139 + 104))(v138, enum case for ColorScheme.light(_:), v140);
    v115 = v141;
  }
  else
  {
    type metadata accessor for RecentlyPlayedExtraLargeContentView(0);
    v113 = v138;
    sub_10003E9D0(v138);
    v115 = v141;
    v114 = v140;
    v112 = v139;
  }
  v116 = v130;
  KeyPath = swift_getKeyPath(&unk_100427138);
  v118 = (uint64_t)v132;
  v119 = (uint64_t *)&v132[*(int *)(v116 + 36)];
  v120 = sub_10000B4C8(&qword_100548860);
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))((char *)v119 + *(int *)(v120 + 28), v113, v114);
  *v119 = KeyPath;
  v121 = v133;
  v122 = v134;
  (*(void (**)(uint64_t, char *, uint64_t))(v133 + 16))(v118, v103, v134);
  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v113, v114);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v103, v122);
  v123 = v131;
  sub_100011530(v118, v131, &qword_10054B120);
  sub_100011530(v123, v115, &qword_10054B120);
  return sub_10000E750(v161, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_10008AAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;

  v3 = a2;
  v132 = a2;
  v139 = a1;
  v158 = a3;
  v130 = type metadata accessor for RedactionReasons(0);
  v157 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v155 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v5 = __chkstk_darwin(v129);
  v156 = (uint64_t)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v147 = (uint64_t)&v129 - v7;
  v8 = sub_10000B4C8(&qword_100549B38);
  __chkstk_darwin(v8);
  v140 = (uint64_t *)((char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v143 = sub_10000B4C8(&qword_100549B28);
  __chkstk_darwin(v143);
  v141 = (uint64_t)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100549B18);
  __chkstk_darwin(v11);
  v142 = (uint64_t)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10000B4C8(&qword_100549B08);
  __chkstk_darwin(v146);
  v145 = (uint64_t)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_10000B4C8(&qword_100549AF0);
  __chkstk_darwin(v148);
  v144 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_100549AD0);
  v151 = *(_QWORD *)(v15 - 8);
  v152 = v15;
  __chkstk_darwin(v15);
  v150 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_10054B138);
  v18 = __chkstk_darwin(v17);
  v154 = (uint64_t)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v149 = (uint64_t)&v129 - v21;
  __chkstk_darwin(v20);
  v153 = (uint64_t)&v129 - v22;
  v138 = type metadata accessor for Text.TruncationMode(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10000B4C8(&qword_10054B140);
  __chkstk_darwin(v24);
  v26 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000B4C8(&qword_10054B148);
  __chkstk_darwin(v27);
  v29 = (char *)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10000B4C8(&qword_100549B50);
  __chkstk_darwin(v30);
  v32 = (char *)&v129 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10000B4C8(&qword_100549B58);
  __chkstk_darwin(v33);
  v35 = (char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10000B4C8(&qword_10054B150);
  __chkstk_darwin(v134);
  v37 = (char *)&v129 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_10000B4C8(&qword_10054B158);
  __chkstk_darwin(v135);
  v39 = (char *)&v129 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10000B4C8(&qword_10054B160);
  v41 = __chkstk_darwin(v40);
  v131 = (char *)&v129 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v133 = (uint64_t)&v129 - v44;
  *(_QWORD *)v26 = static HorizontalAlignment.center.getter(v43);
  *((_QWORD *)v26 + 1) = 0x4028000000000000;
  v26[16] = 0;
  v45 = sub_10000B4C8(&qword_10054B168);
  v46 = sub_10008B6F0(v139, v3, (uint64_t)&v26[*(int *)(v45 + 44)]);
  LOBYTE(v3) = static Edge.Set.all.getter(v46);
  v47 = EdgeInsets.init(_all:)(16.0);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  sub_100011370((uint64_t)v26, (uint64_t)v29, &qword_10054B140);
  v54 = &v29[*(int *)(v27 + 36)];
  *v54 = v3;
  *((double *)v54 + 1) = v47;
  *((_QWORD *)v54 + 2) = v49;
  *((_QWORD *)v54 + 3) = v51;
  *((_QWORD *)v54 + 4) = v53;
  v54[40] = 0;
  v55 = sub_100011694((uint64_t)v26, &qword_10054B140);
  LOBYTE(v3) = static Edge.Set.vertical.getter(v55);
  v56 = EdgeInsets.init(_all:)(9.0);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  sub_100011370((uint64_t)v29, (uint64_t)v32, &qword_10054B148);
  v63 = &v32[*(int *)(v30 + 36)];
  *v63 = v3;
  *((double *)v63 + 1) = v56;
  *((_QWORD *)v63 + 2) = v58;
  *((_QWORD *)v63 + 3) = v60;
  *((_QWORD *)v63 + 4) = v62;
  v63[40] = 0;
  v64 = sub_100011694((uint64_t)v29, &qword_10054B148);
  v65 = static Alignment.center.getter(v64);
  sub_10003F9B0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v35, 0.0, 1, INFINITY, 0, v65, v66);
  sub_100011694((uint64_t)v32, &qword_100549B50);
  KeyPath = swift_getKeyPath(&unk_100427168);
  sub_100011370((uint64_t)v35, (uint64_t)v37, &qword_100549B58);
  v68 = &v37[*(int *)(v134 + 36)];
  *(_QWORD *)v68 = KeyPath;
  *((_QWORD *)v68 + 1) = 1;
  v68[16] = 0;
  v69 = (uint64_t)v35;
  v70 = (uint64_t)v131;
  sub_100011694(v69, &qword_100549B58);
  v71 = v137;
  v72 = v136;
  v73 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v137 + 104))(v136, enum case for Text.TruncationMode.tail(_:), v138);
  v74 = swift_getKeyPath(&unk_100427198);
  v75 = v135;
  v76 = (uint64_t *)&v39[*(int *)(v135 + 36)];
  v77 = sub_10000B4C8(&qword_10054ACD8);
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))((char *)v76 + *(int *)(v77 + 28), v72, v73);
  *v76 = v74;
  sub_100011370((uint64_t)v37, (uint64_t)v39, &qword_10054B150);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
  v78 = (uint64_t)v37;
  v79 = v132;
  sub_100011694(v78, &qword_10054B150);
  v80 = sub_1000963C4();
  View.accessibility(sortPriority:)(v75, v80, 2.0);
  sub_100011694((uint64_t)v39, &qword_10054B158);
  v81 = v133;
  v82 = sub_100011530(v70, v133, &qword_10054B160);
  v83 = static HorizontalAlignment.leading.getter(v82);
  v84 = (uint64_t)v140;
  *v140 = v83;
  *(_QWORD *)(v84 + 8) = 0x4028000000000000;
  *(_BYTE *)(v84 + 16) = 0;
  v85 = sub_10000B4C8(&qword_10054B1A0);
  v86 = sub_10008CBE8(v79, v84 + *(int *)(v85 + 44));
  LOBYTE(v74) = static Edge.Set.all.getter(v86);
  v87 = v141;
  sub_100011370(v84, v141, &qword_100549B38);
  v88 = v87 + *(int *)(v143 + 36);
  *(_BYTE *)v88 = v74;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v88 + 8) = _Q0;
  *(_OWORD *)(v88 + 24) = xmmword_100425150;
  *(_BYTE *)(v88 + 40) = 0;
  v94 = sub_100011694(v84, &qword_100549B38);
  v95 = static Alignment.center.getter(v94);
  v96 = v142;
  sub_10003FA08(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v142, 0.0, 1, INFINITY, 0, v95, v97);
  sub_100011694(v87, &qword_100549B28);
  if (qword_1005478D8 != -1)
    swift_once(&qword_1005478D8, sub_10009F398);
  v98 = xmmword_1005613E0;
  v143 = *(__int128 *)((char *)&xmmword_1005613E0 + 8);
  v99 = qword_1005613F8;
  v100 = qword_100561400;
  v101 = swift_bridgeObjectRetain();
  v102 = static Edge.Set.all.getter(v101);
  v103 = v145;
  sub_100011370(v96, v145, &qword_100549B18);
  v104 = v146;
  v105 = v103 + *(int *)(v146 + 36);
  *(_QWORD *)v105 = v98;
  *(_OWORD *)(v105 + 8) = v143;
  *(_QWORD *)(v105 + 24) = v99;
  *(_QWORD *)(v105 + 32) = v100;
  *(_BYTE *)(v105 + 40) = v102;
  sub_100011694(v96, &qword_100549B18);
  v106 = sub_100056728();
  v107 = v144;
  View.accessibility(sortPriority:)(v104, v106, 1.0);
  sub_100011694(v103, &qword_100549B08);
  v108 = v147;
  sub_10003EE7C(v147);
  v109 = sub_100081B90();
  v110 = (uint64_t)v107;
  if ((v109 & 1) != 0)
  {
    v111 = v155;
    if (!*(_QWORD *)(*(_QWORD *)(v108 + *(int *)(v129 + 28)) + 16))
    {
      static RedactionReasons.placeholder.getter(v109);
      v116 = v130;
      goto LABEL_8;
    }
    v159 = _swiftEmptyArrayStorage;
    v112 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v113 = sub_10000B4C8(&qword_100548708);
    v114 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
  }
  else
  {
    v159 = _swiftEmptyArrayStorage;
    v112 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v113 = sub_10000B4C8(&qword_100548708);
    v114 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
    v111 = v155;
  }
  v115 = v113;
  v116 = v130;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v159, v115, v114, v130, v112);
LABEL_8:
  sub_10000E750(v108, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v117 = sub_1000566A4();
  v118 = v150;
  View.redacted(reason:)(v111, v148, v117);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v111, v116);
  sub_100011694(v110, &qword_100549AF0);
  v119 = v156;
  sub_10003EE7C(v156);
  v120 = sub_100089A58();
  v122 = v121;
  sub_10000E750(v119, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v123 = v149;
  sub_10003E670(v120, v122, v149, 32.0, 16.0);
  swift_bridgeObjectRelease(v122);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v118, v152);
  v124 = v153;
  sub_100011530(v123, v153, &qword_10054B138);
  sub_100011370(v81, v70, &qword_10054B160);
  v125 = v154;
  sub_100011370(v124, v154, &qword_10054B138);
  v126 = v158;
  sub_100011370(v70, v158, &qword_10054B160);
  v127 = sub_10000B4C8(&qword_10054B1A8);
  sub_100011370(v125, v126 + *(int *)(v127 + 48), &qword_10054B138);
  sub_100011694(v124, &qword_10054B138);
  sub_100011694(v81, &qword_10054B160);
  sub_100011694(v125, &qword_10054B138);
  return sub_100011694(v70, &qword_10054B160);
}

uint64_t sub_10008B6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v65 = a2;
  v68 = a3;
  v4 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v4);
  v66 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v6 = __chkstk_darwin(v62);
  v64 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v53 - v8;
  v10 = type metadata accessor for WidgetMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  __chkstk_darwin(v10);
  v56 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for PlaybackButtonLarge(0);
  __chkstk_darwin(v61);
  v59 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10000B4C8(&qword_10054B218);
  v14 = __chkstk_darwin(v63);
  v67 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v57 = (uint64_t)&v53 - v17;
  __chkstk_darwin(v16);
  v60 = (uint64_t)&v53 - v18;
  v19 = sub_10000B4C8(&qword_10054B220);
  v20 = __chkstk_darwin(v19);
  v58 = (uint64_t)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v53 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v53 - v25;
  v53 = (uint64_t)&v53 - v25;
  v27 = type metadata accessor for ArtworkView(0);
  v28 = __chkstk_darwin(v27);
  v55 = (uint64_t)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v31 = (char *)&v53 - v30;
  sub_10000D964(a1, (uint64_t)&v53 - v30, type metadata accessor for WidgetMusicItem);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v31, 0, 1, v10);
  v32 = Corner.large.unsafeMutableAddressor();
  v33 = *((_BYTE *)v32 + 16);
  v34 = &v31[*(int *)(v27 + 20)];
  *(_OWORD *)v34 = *(_OWORD *)v32;
  v34[16] = v33;
  *(_QWORD *)v24 = static HorizontalAlignment.center.getter(v32);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 0;
  v35 = sub_10000B4C8(&qword_10054B228);
  v36 = a1;
  sub_10008BC3C(v65, a1, (uint64_t)&v24[*(int *)(v35 + 44)]);
  sub_100011530((uint64_t)v24, (uint64_t)v26, &qword_10054B220);
  v37 = v56;
  sub_10000D964(a1, v56, type metadata accessor for WidgetMusicItem);
  sub_10003EE7C((uint64_t)v9);
  v38 = v62;
  v39 = v66;
  sub_100011370((uint64_t)&v9[*(int *)(v62 + 24)], v66, &qword_100548310);
  sub_10000E750((uint64_t)v9, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v40 = v64;
  sub_10003EE7C(v64);
  LOBYTE(v11) = *(_BYTE *)(v40 + *(int *)(v38 + 20));
  sub_10000E750(v40, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v41 = v59;
  sub_10000DB44(v37, v59, type metadata accessor for WidgetMusicItem);
  v42 = v61;
  sub_100011530(v39, v41 + *(int *)(v61 + 20), &qword_100548310);
  *(_BYTE *)(v41 + *(int *)(v42 + 24)) = v11;
  if (*(_BYTE *)(v36 + *(int *)(v54 + 60)))
    v43 = 1.0;
  else
    v43 = 0.0;
  v44 = v57;
  sub_10000D964(v41, v57, type metadata accessor for PlaybackButtonLarge);
  *(double *)(v44 + *(int *)(v63 + 36)) = v43;
  sub_10000E750(v41, type metadata accessor for PlaybackButtonLarge);
  v45 = v60;
  sub_100011530(v44, v60, &qword_10054B218);
  v46 = v55;
  sub_10000D964((uint64_t)v31, v55, type metadata accessor for ArtworkView);
  v47 = v53;
  v48 = v58;
  sub_100011370(v53, v58, &qword_10054B220);
  v49 = v67;
  sub_100011370(v45, v67, &qword_10054B218);
  v50 = v68;
  sub_10000D964(v46, v68, type metadata accessor for ArtworkView);
  v51 = sub_10000B4C8(&qword_10054B230);
  sub_100011370(v48, v50 + *(int *)(v51 + 48), &qword_10054B220);
  sub_100011370(v49, v50 + *(int *)(v51 + 64), &qword_10054B218);
  sub_100011694(v45, &qword_10054B218);
  sub_100011694(v47, &qword_10054B220);
  sub_10000E750((uint64_t)v31, type metadata accessor for ArtworkView);
  sub_100011694(v49, &qword_10054B218);
  sub_100011694(v48, &qword_10054B220);
  return sub_10000E750(v46, type metadata accessor for ArtworkView);
}

uint64_t sub_10008BC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t OpaqueTypeConformance2;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  char v131;
  _BYTE v132[24];
  uint64_t v133;
  __int128 v134;
  char v135;
  uint64_t v136;

  v121 = a2;
  v129 = a3;
  v124 = type metadata accessor for AccessibilityChildBehavior(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10000B4C8(&qword_10054B238);
  v126 = *(_QWORD *)(v128 - 8);
  v5 = __chkstk_darwin(v128);
  v127 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v125 = (char *)&v101 - v7;
  v103 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v103);
  v9 = (uint64_t *)((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v10);
  v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v14 = __chkstk_darwin(v13);
  v117 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v101 - v16;
  v101 = sub_10000B4C8(&qword_100549700);
  __chkstk_darwin(v101);
  v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10000B4C8(&qword_10054AFD8);
  __chkstk_darwin(v102);
  v104 = (uint64_t)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_10000B4C8(&qword_10054AFE0);
  __chkstk_darwin(v108);
  v105 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_10000B4C8(&qword_10054B240);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v107 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_10000B4C8(&qword_10054B248);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v112 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_10000B4C8(&qword_10054B250);
  __chkstk_darwin(v106);
  v116 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_10000B4C8(&qword_10054B258);
  v25 = __chkstk_darwin(v113);
  v119 = (uint64_t)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v111 = (uint64_t)&v101 - v28;
  __chkstk_darwin(v27);
  v118 = (uint64_t)&v101 - v29;
  v120 = a1;
  sub_10003EE7C((uint64_t)v17);
  if ((sub_100081B90() & 1) != 0)
  {
    v30 = LocalizedStringKey.init(stringLiteral:)(0x79616C5020776F4ELL, 0xEB00000000676E69);
    v31 = Text.init(_:tableName:bundle:comment:)(v30);
  }
  else
  {
    if (qword_1005478E0 != -1)
      swift_once(&qword_1005478E0, sub_10009F4CC);
    v130 = xmmword_100561408;
    v35 = sub_10001D9DC();
    swift_bridgeObjectRetain();
    v31 = Text.init<A>(_:)(&v130, &type metadata for String, v35);
  }
  v36 = v31;
  v37 = v32;
  v38 = v34;
  v39 = v33 & 1;
  sub_10000E750((uint64_t)v17, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v40 = enum case for Text.Case.uppercase(_:);
  v41 = type metadata accessor for Text.Case(0);
  v42 = *(_QWORD *)(v41 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v12, v40, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v12, 0, 1, v41);
  KeyPath = swift_getKeyPath(&unk_100427228);
  sub_100011370((uint64_t)v12, (uint64_t)v9 + *(int *)(v103 + 28), &qword_100548A48);
  *v9 = KeyPath;
  sub_100011370((uint64_t)v9, (uint64_t)&v19[*(int *)(v101 + 36)], &qword_100548A40);
  *(_QWORD *)v19 = v36;
  *((_QWORD *)v19 + 1) = v37;
  v19[16] = v39;
  *((_QWORD *)v19 + 3) = v38;
  sub_10002EBA0(v36, v37, v39);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v9, &qword_100548A40);
  sub_100011694((uint64_t)v12, &qword_100548A48);
  sub_10001DA20(v36, v37, v39);
  v44 = swift_bridgeObjectRelease(v38);
  v45 = static Font.caption2.getter(v44);
  v46 = Font.bold()();
  swift_release(v45);
  v47 = swift_getKeyPath(&unk_1004271C8);
  v48 = v104;
  sub_100011370((uint64_t)v19, v104, &qword_100549700);
  v49 = (uint64_t *)(v48 + *(int *)(v102 + 36));
  *v49 = v47;
  v49[1] = v46;
  sub_100011694((uint64_t)v19, &qword_100549700);
  if (qword_1005477C8 != -1)
    swift_once(&qword_1005477C8, sub_1000339F4);
  v50 = sub_10000B4C8(&qword_100548AA0);
  v51 = sub_10000D78C(v50, (uint64_t)qword_100561238);
  v52 = v108;
  v53 = (uint64_t)v105;
  sub_100011370(v51, (uint64_t)&v105[*(int *)(v108 + 36)], &qword_100548AA0);
  sub_100011530(v48, v53, &qword_10054AFD8);
  v54 = sub_100095FCC();
  v55 = v107;
  View.widgetAccentable(_:)(1, v52, v54);
  sub_100011694(v53, &qword_10054AFE0);
  *(_QWORD *)&v130 = v52;
  *((_QWORD *)&v130 + 1) = v54;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v130, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  v57 = v112;
  v58 = v110;
  View.unredacted()(v110, OpaqueTypeConformance2);
  v59 = (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v55, v58);
  LOBYTE(v58) = static Edge.Set.bottom.getter(v59);
  v60 = EdgeInsets.init(_all:)(1.0);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v67 = v114;
  v68 = (uint64_t)v116;
  v69 = v115;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v116, v57, v115);
  v70 = v68 + *(int *)(v106 + 36);
  *(_BYTE *)v70 = v58;
  *(double *)(v70 + 8) = v60;
  *(_QWORD *)(v70 + 16) = v62;
  *(_QWORD *)(v70 + 24) = v64;
  *(_QWORD *)(v70 + 32) = v66;
  *(_BYTE *)(v70 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v69);
  v71 = v117;
  sub_10003EE7C(v117);
  LOBYTE(v58) = sub_100081B90();
  sub_10000E750(v71, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v58 & 1) != 0)
    v72 = 1.0;
  else
    v72 = 0.0;
  v73 = v111;
  sub_100011370(v68, v111, &qword_10054B250);
  *(double *)(v73 + *(int *)(v113 + 36)) = v72;
  sub_100011694(v68, &qword_10054B250);
  v74 = v118;
  v75 = sub_100011530(v73, v118, &qword_10054B258);
  v76 = static HorizontalAlignment.center.getter(v75);
  v77 = sub_10008C694(v121, (uint64_t)&v130);
  v78 = v131;
  v79 = *(_QWORD *)v132;
  v80 = v133;
  v81 = v134;
  v82 = v130;
  v83 = *(_OWORD *)&v132[8];
  v130 = (unint64_t)v76;
  v131 = 0;
  *(_OWORD *)v132 = v82;
  v132[16] = v78;
  v133 = v79;
  v134 = v83;
  v135 = v80;
  v136 = v81;
  v84 = v122;
  static AccessibilityChildBehavior.combine.getter(v77);
  v85 = sub_10000B4C8(&qword_10054B260);
  v86 = sub_100012324(&qword_10054B268, &qword_10054B260, (const char *)&protocol conformance descriptor for VStack<A>);
  v87 = v127;
  View.accessibilityElement(children:)(v84, v85, v86);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v84, v124);
  v88 = v133;
  v89 = v134;
  v90 = v135;
  v91 = v136;
  sub_10001DA20(*(uint64_t *)v132, *(uint64_t *)&v132[8], v132[16]);
  swift_bridgeObjectRelease(v88);
  sub_10001DA20(v89, *((uint64_t *)&v89 + 1), v90);
  swift_bridgeObjectRelease(v91);
  v92 = v126;
  v93 = v125;
  v94 = v128;
  (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v125, v87, v128);
  v95 = v119;
  sub_100011370(v74, v119, &qword_10054B258);
  v96 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  v96(v87, v93, v94);
  v97 = v129;
  sub_100011370(v95, v129, &qword_10054B258);
  v98 = sub_10000B4C8(&qword_10054B270);
  v96((char *)(v97 + *(int *)(v98 + 48)), v87, v94);
  v99 = *(void (**)(char *, uint64_t))(v92 + 8);
  v99(v93, v94);
  sub_100011694(v74, &qword_10054B258);
  v99(v87, v94);
  return sub_100011694(v95, &qword_10054B258);
}

uint64_t sub_10008C694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;

  v3 = *(_QWORD *)(a1 + 24);
  v114 = *(_QWORD *)(a1 + 16);
  v115 = v3;
  v4 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v99 = v4;
  v5 = Text.init<A>(_:)(&v114, &type metadata for String, v4);
  v97 = v6;
  v8 = v7;
  v10 = v9;
  v98 = a1;
  v11 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 56));
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v94 = v8;
    v95 = v5;
    v96 = v10;
    v13 = qword_100547850;
    swift_bridgeObjectRetain_n(v11, 2);
    if (v13 != -1)
      swift_once(&qword_100547850, sub_100038244);
    v14 = 0;
    v15 = 0;
    LOBYTE(v111) = 0;
    v16 = 0xE000000000000000;
    v17 = _swiftEmptyArrayStorage;
    v101 = v12;
    v102 = v11;
    do
    {
      v106 = v16;
      v108 = v17;
      v18 = v15;
      v19 = v11 + v14++;
      TextBadge.view(favoriteBadgeConfiguration:)(qword_100549010, *(_BYTE *)(v19 + 32));
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v27 = v26 & 1;
      v28 = static Font.subheadline.getter(v20);
      v29 = static Font.Weight.semibold.getter(v28);
      v30 = Font.weight(_:)(v28, v29);
      swift_release(v28);
      v31 = Text.font(_:)(v30, v21, v23, v27, v25);
      v33 = v32;
      v35 = v34;
      v105 = v36;
      swift_release(v30);
      v37 = v35 & 1;
      sub_10001DA20(v21, v23, v27);
      swift_bridgeObjectRelease(v25);
      LOBYTE(v21) = v111 & 1;
      v38 = static Text.+ infix(_:_:)(v18, v106, v111 & 1, v108, v31, v33, v37, v105);
      v103 = v39;
      v104 = v38;
      v17 = v40;
      v111 = v41 & 1;
      v42 = v37;
      v11 = v102;
      sub_10001DA20(v31, v33, v42);
      swift_bridgeObjectRelease(v105);
      v16 = v103;
      v15 = v104;
      sub_10001DA20(v18, v106, v21);
      swift_bridgeObjectRelease(v108);
    }
    while (v101 != v14);
    swift_bridgeObjectRelease_n(v102, 2);
    v5 = v95;
    v10 = v96;
    v8 = v94;
    v43 = v111;
  }
  else
  {
    v15 = 0;
    v43 = 0;
    v17 = _swiftEmptyArrayStorage;
    v16 = 0xE000000000000000;
  }
  v44 = v8 & 1;
  v109 = static Text.+ infix(_:_:)(v5, v97, v8 & 1, v10, v15, v16, v43, v17);
  v112 = v45;
  v47 = v46;
  v49 = v48 & 1;
  sub_10001DA20(v15, v16, v43);
  swift_bridgeObjectRelease(v17);
  sub_10001DA20(v5, v97, v44);
  v50 = swift_bridgeObjectRelease(v10);
  v51 = static Font.body.getter(v50);
  v52 = Font.bold()();
  swift_release(v51);
  v53 = Text.font(_:)(v52, v109, v47, v49, v112);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  swift_release(v52);
  sub_10001DA20(v109, v47, v49);
  swift_bridgeObjectRelease(v112);
  if (qword_1005477D0 != -1)
    swift_once(&qword_1005477D0, sub_100033BF8);
  v110 = Text.foregroundColor(_:)(qword_100561250, v53, v55, v57 & 1, v59);
  v113 = v60;
  v62 = v61;
  v107 = v63;
  sub_10001DA20(v53, v55, v57 & 1);
  swift_bridgeObjectRelease(v59);
  v65 = *(_QWORD *)(v98 + 32);
  v64 = *(_QWORD *)(v98 + 40);
  if (!v64)
    v65 = 0;
  v66 = 0xE000000000000000;
  if (v64)
    v66 = *(_QWORD *)(v98 + 40);
  v114 = v65;
  v115 = v66;
  swift_bridgeObjectRetain();
  v67 = Text.init<A>(_:)(&v114, &type metadata for String, v99);
  v69 = v68;
  v71 = v70;
  v73 = v72 & 1;
  v74 = static Font.body.getter(v67);
  v75 = Text.font(_:)(v74, v67, v69, v73, v71);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  swift_release(v74);
  sub_10001DA20(v67, v69, v73);
  swift_bridgeObjectRelease(v71);
  if (qword_1005477D8 != -1)
    swift_once(&qword_1005477D8, sub_100033C14);
  v82 = v79 & 1;
  v83 = sub_10000B4C8(&qword_100548AA0);
  v84 = sub_10000D78C(v83, (uint64_t)qword_100561258);
  v85 = sub_100012324(&qword_100549740, &qword_100548AA0, (const char *)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v86 = Text.foregroundStyle<A>(_:)(v84, v75, v77, v82, v81, v83, v85);
  v88 = v87;
  v90 = v89;
  v92 = v91 & 1;
  sub_10001DA20(v75, v77, v82);
  swift_bridgeObjectRelease(v81);
  LOBYTE(v114) = v107 & 1;
  *(_QWORD *)a2 = v110;
  *(_QWORD *)(a2 + 8) = v62;
  *(_BYTE *)(a2 + 16) = v107 & 1;
  *(_QWORD *)(a2 + 24) = v113;
  *(_QWORD *)(a2 + 32) = v86;
  *(_QWORD *)(a2 + 40) = v88;
  *(_BYTE *)(a2 + 48) = v92;
  *(_QWORD *)(a2 + 56) = v90;
  sub_10002EBA0(v110, v62, v107 & 1);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v86, v88, v92);
  swift_bridgeObjectRetain();
  sub_10001DA20(v86, v88, v92);
  swift_bridgeObjectRelease(v90);
  sub_10001DA20(v110, v62, v114);
  return swift_bridgeObjectRelease(v113);
}

uint64_t sub_10008CBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  char *v47;
  uint64_t OpaqueTypeConformance2;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;

  v110 = a1;
  v116 = a2;
  v2 = type metadata accessor for RecentlyPlayedExtraLargeContentView(0);
  v108 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v109 = v3;
  v111 = (uint64_t)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_10000B4C8(&qword_10054AF20);
  v113 = *(_QWORD *)(v115 - 8);
  v4 = __chkstk_darwin(v115);
  v114 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v112 = (char *)&v90 - v6;
  v7 = sub_10000B4C8(&qword_10054ACD8);
  __chkstk_darwin(v7);
  v92 = (uint64_t *)((char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Text.TruncationMode(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10000B4C8(&qword_10054B1B0);
  __chkstk_darwin(v91);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10000B4C8(&qword_10054B1B8);
  __chkstk_darwin(v93);
  v94 = (uint64_t)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_10000B4C8(&qword_10054B1C0);
  __chkstk_darwin(v98);
  v95 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10000B4C8(&qword_10054B1C8);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v97 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_10054B1D0);
  v102 = *(_QWORD *)(v18 - 8);
  v103 = v18;
  __chkstk_darwin(v18);
  v101 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_10000B4C8(&qword_10054B1D8);
  __chkstk_darwin(v96);
  v105 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10000B4C8(&qword_10054B1E0);
  v21 = __chkstk_darwin(v104);
  v107 = (uint64_t)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v106 = (uint64_t)&v90 - v23;
  if (qword_1005478E0 != -1)
    swift_once(&qword_1005478E0, sub_10009F4CC);
  v117 = xmmword_100561408;
  v24 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v25 = Text.init<A>(_:)(&v117, &type metadata for String, v24);
  v27 = v26;
  v90 = v28;
  v30 = v29 & 1;
  KeyPath = swift_getKeyPath(&unk_100427168);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Text.TruncationMode.tail(_:), v9);
  v32 = swift_getKeyPath(&unk_100427198);
  v33 = *(int *)(v7 + 28);
  v34 = v92;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v92 + v33, v12, v9);
  *v34 = v32;
  sub_100011370((uint64_t)v34, (uint64_t)&v14[*(int *)(v91 + 36)], &qword_10054ACD8);
  *(_QWORD *)v14 = v25;
  *((_QWORD *)v14 + 1) = v27;
  v14[16] = v30;
  v35 = v90;
  *((_QWORD *)v14 + 3) = v90;
  *((_QWORD *)v14 + 4) = KeyPath;
  *((_QWORD *)v14 + 5) = 1;
  v14[48] = 0;
  sub_10002EBA0(v25, v27, v30);
  swift_bridgeObjectRetain();
  swift_retain(KeyPath);
  sub_100011694((uint64_t)v34, &qword_10054ACD8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10001DA20(v25, v27, v30);
  swift_release(KeyPath);
  v36 = swift_bridgeObjectRelease(v35);
  v37 = static Font.headline.getter(v36);
  v38 = swift_getKeyPath(&unk_1004271C8);
  v39 = v94;
  sub_100011370((uint64_t)v14, v94, &qword_10054B1B0);
  v40 = (uint64_t *)(v39 + *(int *)(v93 + 36));
  *v40 = v38;
  v40[1] = v37;
  sub_100011694((uint64_t)v14, &qword_10054B1B0);
  if (qword_1005477C0 != -1)
    swift_once(&qword_1005477C0, sub_100033964);
  v41 = qword_100561230;
  v42 = swift_getKeyPath(&unk_1004271F8);
  v43 = v95;
  sub_100011370(v39, v95, &qword_10054B1B8);
  v44 = v98;
  v45 = (uint64_t *)(v43 + *(int *)(v98 + 36));
  *v45 = v42;
  v45[1] = v41;
  swift_retain(v41);
  sub_100011694(v39, &qword_10054B1B8);
  v46 = sub_100096684();
  v47 = v97;
  View.widgetAccentable(_:)(1, v44, v46);
  sub_100011694(v43, &qword_10054B1C0);
  *(_QWORD *)&v117 = v44;
  *((_QWORD *)&v117 + 1) = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v117, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  v49 = v101;
  v50 = v100;
  View.unredacted()(v100, OpaqueTypeConformance2);
  v51 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v47, v50);
  LOBYTE(v50) = static Edge.Set.bottom.getter(v51);
  v52 = EdgeInsets.init(_all:)(8.0);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v102;
  v59 = v103;
  v61 = (uint64_t)v105;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v105, v49, v103);
  v62 = v61 + *(int *)(v96 + 36);
  *(_BYTE *)v62 = v50;
  *(double *)(v62 + 8) = v52;
  *(_QWORD *)(v62 + 16) = v54;
  *(_QWORD *)(v62 + 24) = v56;
  *(_QWORD *)(v62 + 32) = v58;
  *(_BYTE *)(v62 + 40) = 0;
  v63 = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v49, v59);
  v64 = static Edge.Set.trailing.getter(v63);
  if (qword_100547830 != -1)
    swift_once(&qword_100547830, sub_1000347B0);
  v65 = EdgeInsets.init(_all:)(*(double *)&qword_100561328);
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v72 = v107;
  sub_100011370(v61, v107, &qword_10054B1D8);
  v73 = v72 + *(int *)(v104 + 36);
  *(_BYTE *)v73 = v64;
  *(double *)(v73 + 8) = v65;
  *(_QWORD *)(v73 + 16) = v67;
  *(_QWORD *)(v73 + 24) = v69;
  *(_QWORD *)(v73 + 32) = v71;
  *(_BYTE *)(v73 + 40) = 0;
  sub_100011694(v61, &qword_10054B1D8);
  v74 = v106;
  sub_100011530(v72, v106, &qword_10054B1E0);
  v75 = v111;
  sub_10000D964(v110, v111, type metadata accessor for RecentlyPlayedExtraLargeContentView);
  v76 = *(unsigned __int8 *)(v108 + 80);
  v77 = (v76 + 16) & ~v76;
  v78 = swift_allocObject(&unk_1004FAB18, v77 + v109, v76 | 7);
  sub_10000DB44(v75, v78 + v77, type metadata accessor for RecentlyPlayedExtraLargeContentView);
  v79 = sub_10000B4C8(&qword_10054AF98);
  v80 = sub_100012324(&qword_10054AFA0, &qword_10054AF98, (const char *)&protocol conformance descriptor for Link<A>);
  v81 = v112;
  ForEach<>.init(_:content:)(1, 5, sub_100096B38, v78, v79, v80);
  sub_100011370(v74, v72, &qword_10054B1E0);
  v83 = v113;
  v82 = v114;
  v84 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  v85 = v115;
  v84(v114, v81, v115);
  v86 = v116;
  sub_100011370(v72, v116, &qword_10054B1E0);
  v87 = sub_10000B4C8(&qword_10054B210);
  v84((char *)(v86 + *(int *)(v87 + 48)), v82, v85);
  v88 = *(void (**)(char *, uint64_t))(v83 + 8);
  v88(v81, v85);
  sub_100011694(v74, &qword_10054B1E0);
  v88(v82, v85);
  return sub_100011694(v72, &qword_10054B1E0);
}

uint64_t sub_10008D494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a3;
  v26 = a2;
  v24 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetMusicItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003EE7C((uint64_t)v12);
  v17 = *(_QWORD *)&v12[*(int *)(v10 + 28)];
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v12, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  Array.subscript.getter(a1, v17, v13, (uint64_t)v9);
  swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
  {
    if (qword_100547848 != -1)
      swift_once(&qword_100547848, sub_100036D58);
    v18 = sub_10000D78C(v13, (uint64_t)qword_100561330);
    sub_10000D964(v18, (uint64_t)v16, type metadata accessor for WidgetMusicItem);
    sub_100011694((uint64_t)v9, &qword_100548310);
  }
  else
  {
    sub_10000DB44((uint64_t)v9, (uint64_t)v16, type metadata accessor for WidgetMusicItem);
  }
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v16[*(int *)(v13 + 28)], v24);
  __chkstk_darwin(v19);
  *(&v23 - 2) = (uint64_t)v16;
  v20 = _s12MusicWidgets12SongCellViewVMa_1(0);
  v21 = sub_10001254C(&qword_10054AFB0, _s12MusicWidgets12SongCellViewVMa_1, (uint64_t)&unk_1004272C8);
  Link.init(destination:label:)(v6, v26, &v23 - 4, v20, v21);
  return sub_10000E750((uint64_t)v16, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_10008D720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_10000D964(a1, a2, type metadata accessor for WidgetMusicItem);
  v3 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
  v4 = (_QWORD *)(a2 + *(int *)(_s12MusicWidgets12SongCellViewVMa_1(0) + 20));
  *v4 = swift_getKeyPath(&unk_100426E98);
  v5 = sub_10000B4C8(&qword_100548908);
  return swift_storeEnumTagMultiPayload(v4, v5, 0);
}

uint64_t sub_10008D7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  Swift::Int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t KeyPath;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _BYTE *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  _BYTE *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  uint64_t v167;
  _BYTE v169[12];
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  _BYTE *v180;
  uint64_t v181;
  _BYTE *v182;
  _BYTE *v183;
  _BYTE *v184;
  _BYTE *v185;
  _BYTE *v186;
  _BYTE *v187;
  _BYTE *v188;
  _BYTE *v189;
  uint64_t v190;
  _BYTE *v191;
  uint64_t *v192;
  _BYTE *v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;

  v196 = a2;
  v195 = sub_10000B4C8(&qword_10054B3C0);
  __chkstk_darwin(v195);
  v189 = &v169[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v178 = type metadata accessor for PlaybackButton.State(0);
  v177 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v180 = &v169[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000B4C8(&qword_100548350);
  __chkstk_darwin(v5);
  v179 = &v169[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10000B4C8(&qword_10054B3C8);
  v8 = __chkstk_darwin(v7);
  v186 = &v169[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v188 = &v169[-v10];
  v11 = sub_10000B4C8(&qword_10054B3D0);
  v12 = __chkstk_darwin(v11);
  v185 = &v169[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __chkstk_darwin(v12);
  v183 = &v169[-v15];
  __chkstk_darwin(v14);
  v187 = &v169[-v16];
  v17 = sub_10000B4C8(&qword_100548A18);
  __chkstk_darwin(v17);
  v182 = &v169[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v181 = sub_10000B4C8(&qword_100548A20);
  __chkstk_darwin(v181);
  v192 = (uint64_t *)&v169[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v190 = sub_10000B4C8(&qword_10054B3D8);
  __chkstk_darwin(v190);
  v21 = &v169[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v22);
  v24 = &v169[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = type metadata accessor for WidgetMusicItem(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = &v169[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = sub_10000B4C8(&qword_10054B3E0);
  v30 = __chkstk_darwin(v29);
  v194 = &v169[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  v33 = &v169[-v32];
  v34 = type metadata accessor for ArtworkView(0);
  v35 = __chkstk_darwin(v34);
  v193 = &v169[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v35);
  v38 = &v169[-v37];
  sub_100011370(a1, (uint64_t)&v169[-v37], &qword_100548310);
  v39 = Corner.small.unsafeMutableAddressor();
  v40 = *((_BYTE *)v39 + 16);
  v41 = *(int *)(v34 + 20);
  v191 = v38;
  v42 = &v38[v41];
  *(_OWORD *)v42 = *(_OWORD *)v39;
  v42[16] = v40;
  v43 = a1;
  v44 = v25;
  sub_100011370(v43, (uint64_t)v24, &qword_100548310);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_100011694((uint64_t)v24, &qword_100548310);
    *(_QWORD *)v21 = 0;
    v21[8] = 1;
    swift_storeEnumTagMultiPayload(v21, v190, 1);
    v45 = sub_100012324(&qword_10054B3E8, &qword_10054B3C0, (const char *)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v21, v195, &type metadata for Spacer, v45, &protocol witness table for Spacer);
  }
  else
  {
    v175 = v21;
    v176 = v33;
    sub_10000DB44((uint64_t)v24, (uint64_t)v28, type metadata accessor for WidgetMusicItem);
    v46 = *((_QWORD *)v28 + 3);
    v206 = *((_QWORD *)v28 + 2);
    v207 = v46;
    v47 = sub_10001D9DC();
    swift_bridgeObjectRetain();
    v173 = Text.init<A>(_:)(&v206, &type metadata for String, v47);
    v172 = v50;
    v51 = v49;
    v174 = v44;
    v52 = *(_QWORD *)&v28[*(int *)(v44 + 56)];
    v53 = *(_QWORD *)(v52 + 16);
    v184 = v28;
    if (v53)
    {
      v54 = v53;
      v170 = v48;
      v171 = v49;
      v55 = qword_100547850;
      swift_bridgeObjectRetain_n(v52, 2);
      if (v55 != -1)
        swift_once(&qword_100547850, sub_100038244);
      v56 = 0;
      v57 = 0;
      LODWORD(v205) = 0;
      v58 = 0xE000000000000000;
      v59 = _swiftEmptyArrayStorage;
      v197 = v52;
      do
      {
        v202 = v57;
        v203 = v58;
        v204 = v59;
        v60 = v52 + v56++;
        TextBadge.view(favoriteBadgeConfiguration:)(qword_100549010, *(_BYTE *)(v60 + 32));
        v62 = v61;
        v64 = v63;
        v66 = v65;
        v68 = v67 & 1;
        v69 = static Font.subheadline.getter(v61);
        v70 = static Font.Weight.semibold.getter(v69);
        v71 = Font.weight(_:)(v69, v70);
        swift_release(v69);
        v72 = Text.font(_:)(v71, v62, v64, v68, v66);
        v74 = v73;
        v76 = v75;
        v199 = v77;
        swift_release(v71);
        v78 = v76 & 1;
        sub_10001DA20(v62, v64, v68);
        swift_bridgeObjectRelease(v66);
        LOBYTE(v68) = v205 & 1;
        v79 = v54;
        v81 = v202;
        v80 = v203;
        v82 = v204;
        v83 = v199;
        v84 = static Text.+ infix(_:_:)(v202, v203, v205 & 1, v204, v72, v74, v78, v199);
        v200 = v85;
        v201 = v84;
        v198 = v86;
        LODWORD(v205) = v87 & 1;
        v88 = v72;
        v52 = v197;
        sub_10001DA20(v88, v74, v78);
        swift_bridgeObjectRelease(v83);
        v89 = v81;
        v58 = v198;
        sub_10001DA20(v89, v80, v68);
        swift_bridgeObjectRelease(v82);
        v54 = v79;
        v90 = v79 == v56;
        v59 = v200;
        v57 = v201;
      }
      while (!v90);
      swift_bridgeObjectRelease_n(v52, 2);
      v51 = v171;
      LOBYTE(v48) = v170;
    }
    else
    {
      v57 = 0;
      LODWORD(v205) = 0;
      v59 = _swiftEmptyArrayStorage;
      v58 = 0xE000000000000000;
    }
    v91 = v48 & 1;
    v92 = v173;
    v93 = v172;
    v94 = v205;
    v95 = static Text.+ infix(_:_:)(v173, v172, v48 & 1, v51, v57, v58, v205, v59);
    v97 = v96;
    v204 = v98;
    v99 = v94;
    v101 = v100 & 1;
    sub_10001DA20(v57, v58, v99);
    swift_bridgeObjectRelease(v59);
    sub_10001DA20(v92, v93, v91);
    v102 = swift_bridgeObjectRelease(v51);
    v103 = static Font.subheadline.getter(v102);
    v104 = static Font.Weight.medium.getter();
    v105 = Font.weight(_:)(v103, v104);
    swift_release(v103);
    v106 = v204;
    v107 = Text.font(_:)(v105, v95, v97, v101, v204);
    v109 = v108;
    v111 = v110;
    v113 = v112;
    swift_release(v105);
    sub_10001DA20(v95, v97, v101);
    swift_bridgeObjectRelease(v106);
    if (qword_1005477D0 != -1)
      swift_once(&qword_1005477D0, sub_100033BF8);
    v114 = Text.foregroundColor(_:)(qword_100561250, v107, v109, v111 & 1, v113);
    v202 = v115;
    v203 = v114;
    v205 = v116;
    LODWORD(v204) = v117;
    sub_10001DA20(v107, v109, v111 & 1);
    swift_bridgeObjectRelease(v113);
    v118 = (uint64_t)v184;
    v119 = *((_QWORD *)v184 + 4);
    v120 = *((_QWORD *)v184 + 5);
    v121 = sub_10004F9D0((uint64_t)&off_1004F8F18);
    swift_bridgeObjectRetain();
    v122 = Text.init(optional:options:)(v119, v120, v121);
    v201 = v123;
    v125 = v124;
    v127 = v126;
    v128 = static Font.subheadline.getter(v122);
    KeyPath = swift_getKeyPath(&unk_1004271C8);
    v130 = (uint64_t)v187;
    if (qword_1005477D8 != -1)
      swift_once(&qword_1005477D8, sub_100033C14);
    v131 = sub_10000B4C8(&qword_100548AA0);
    v132 = sub_10000D78C(v131, (uint64_t)qword_100561258);
    v133 = v182;
    sub_100011370(v132, (uint64_t)v182, &qword_100548AA0);
    v134 = v192;
    sub_100011370((uint64_t)v133, (uint64_t)v192 + *(int *)(v181 + 36), &qword_100548A18);
    v135 = v201;
    *v134 = v122;
    v134[1] = v135;
    v134[2] = v125;
    v134[3] = v127;
    v134[4] = KeyPath;
    v134[5] = v128;
    v136 = sub_100011694((uint64_t)v133, &qword_100548A18);
    v137 = static Axis.Set.vertical.getter(v136);
    v138 = (uint64_t)v183;
    *v183 = v137;
    v139 = sub_10000B4C8(&qword_10054B3F8);
    sub_10008E520(v203, v205, v204 & 1, v202, v118, (uint64_t)v134, v138 + *(int *)(v139 + 44));
    sub_100011530(v138, v130, &qword_10054B3D0);
    v140 = v174;
    v141 = v130;
    if ((*(_BYTE *)(v118 + *(int *)(v174 + 60)) & 1) != 0)
    {
      v142 = (uint64_t)v189;
      v33 = v176;
      v143 = (uint64_t)v175;
      if (qword_100547798 != -1)
        swift_once(&qword_100547798, sub_100014474);
      v144 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      sub_10000D78C(v144, (uint64_t)qword_1005611E8);
      v145 = v179;
      sub_1000145C8(v179);
      v146 = v180;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v177 + 104))(v180, enum case for PlaybackButton.State.unplayed(_:), v178);
      v147 = (uint64_t *)(v118 + *(int *)(v140 + 40));
      v148 = *v147;
      v149 = v147[1];
      swift_bridgeObjectRetain();
      v206 = sub_100030084(v148, v149, 0, 0);
      v207 = v150;
      v151 = sub_10002EE5C();
      v152 = (uint64_t)v188;
      PlaybackButton.init<A>(interval:state:intent:playSystemImage:pauseSystemImage:)(v145, v146, &v206, 0, 0, 0, 0, &type metadata for StartPlaybackAppIntent, v151);
      v153 = type metadata accessor for PlaybackButton(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v152, 0, 1, v153);
      v154 = v195;
    }
    else
    {
      v155 = type metadata accessor for PlaybackButton(0);
      v152 = (uint64_t)v188;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 56))(v188, 1, 1, v155);
      v154 = v195;
      v142 = (uint64_t)v189;
      v33 = v176;
      v143 = (uint64_t)v175;
    }
    v156 = v141;
    v157 = v141;
    v158 = v185;
    sub_100011370(v156, (uint64_t)v185, &qword_10054B3D0);
    v159 = v186;
    sub_100011370(v152, (uint64_t)v186, &qword_10054B3C8);
    sub_100011370((uint64_t)v158, v142, &qword_10054B3D0);
    v160 = sub_10000B4C8(&qword_10054B400);
    v161 = v142 + *(int *)(v160 + 48);
    *(_QWORD *)v161 = 0;
    *(_BYTE *)(v161 + 8) = 0;
    sub_100011370((uint64_t)v159, v142 + *(int *)(v160 + 64), &qword_10054B3C8);
    sub_100011694((uint64_t)v159, &qword_10054B3C8);
    sub_100011694((uint64_t)v158, &qword_10054B3D0);
    sub_100011370(v142, v143, &qword_10054B3C0);
    swift_storeEnumTagMultiPayload(v143, v190, 0);
    v162 = sub_100012324(&qword_10054B3E8, &qword_10054B3C0, (const char *)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v143, v154, &type metadata for Spacer, v162, &protocol witness table for Spacer);
    sub_10001DA20(v203, v205, v204 & 1);
    swift_bridgeObjectRelease(v202);
    sub_100011694(v142, &qword_10054B3C0);
    sub_100011694(v152, &qword_10054B3C8);
    sub_100011694(v157, &qword_10054B3D0);
    sub_100011694((uint64_t)v192, &qword_100548A20);
    sub_10000E750((uint64_t)v184, type metadata accessor for WidgetMusicItem);
  }
  v163 = v196;
  v164 = (uint64_t)v191;
  v165 = v193;
  sub_10000D964((uint64_t)v191, (uint64_t)v193, type metadata accessor for ArtworkView);
  v166 = v194;
  sub_100011370((uint64_t)v33, (uint64_t)v194, &qword_10054B3E0);
  sub_10000D964((uint64_t)v165, v163, type metadata accessor for ArtworkView);
  v167 = sub_10000B4C8(&qword_10054B3F0);
  sub_100011370((uint64_t)v166, v163 + *(int *)(v167 + 48), &qword_10054B3E0);
  sub_100011694((uint64_t)v33, &qword_10054B3E0);
  sub_10000E750(v164, type metadata accessor for ArtworkView);
  sub_100011694((uint64_t)v166, &qword_10054B3E0);
  return sub_10000E750((uint64_t)v165, type metadata accessor for ArtworkView);
}

uint64_t sub_10008E520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[16];

  v14 = sub_10000B4C8(&qword_100549930);
  v15 = __chkstk_darwin(v14);
  v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v15);
  v20 = &v26[-v19];
  *(_QWORD *)v20 = static HorizontalAlignment.leading.getter(v18);
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v21 = sub_10000B4C8(&qword_100549938);
  a3 &= 1u;
  v22 = sub_100047B88(a1, a2, a3, a4, a5, a6, (uint64_t)&v20[*(int *)(v21 + 44)]);
  v23 = static HorizontalAlignment.leading.getter(v22);
  sub_100011370((uint64_t)v20, (uint64_t)v17, &qword_100549930);
  sub_100011370((uint64_t)v17, a7, &qword_100549930);
  v24 = a7 + *(int *)(sub_10000B4C8(&qword_10054B408) + 48);
  *(_QWORD *)v24 = v23;
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = 1;
  *(_QWORD *)(v24 + 24) = a1;
  *(_QWORD *)(v24 + 32) = a2;
  *(_BYTE *)(v24 + 40) = a3;
  *(_QWORD *)(v24 + 48) = a4;
  sub_10002EBA0(a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_10002EBA0(a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v20, &qword_100549930);
  sub_10001DA20(a1, a2, a3);
  swift_bridgeObjectRelease(a4);
  return sub_100011694((uint64_t)v17, &qword_100549930);
}

uint64_t sub_10008E6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10054B3A8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v8 + 1) = 0x4028000000000000;
  v8[16] = 0;
  v9 = sub_10000B4C8(&qword_10054B3B0);
  v10 = sub_10008D7AC(v0, (uint64_t)&v8[*(int *)(v9 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v10);
  v11 = sub_100012324(&qword_10054B3B8, &qword_10054B3A8, (const char *)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v4, v5, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100011694((uint64_t)v8, &qword_10054B3A8);
}

uint64_t sub_10008E800@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _BYTE v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v34 = a2;
  v4 = type metadata accessor for ContainerBackgroundPlacement(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v30 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v5);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100011650(&qword_100548820);
  v31 = v11;
  v12 = *(_QWORD *)(a1 + 24);
  v29 = sub_100056068((unint64_t *)&qword_100548838, &qword_100548820, (uint64_t (*)(void))sub_100029E98, (uint64_t (*)(void))sub_100029F1C);
  v39[0] = v8;
  v39[1] = v11;
  v39[2] = v12;
  v39[3] = v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, v39, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 0);
  v14 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v15 = __chkstk_darwin(OpaqueTypeMetadata2);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v29 - v18;
  v20 = v2 + *(int *)(a1 + 36);
  v21 = v30;
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v10, v20, v8);
  v23 = static ContainerBackgroundPlacement.widget.getter(v22);
  v36 = v8;
  v37 = v12;
  v38 = v2;
  v24 = static Alignment.center.getter(v23);
  View.containerBackground<A>(for:alignment:content:)(v7, v24, v25, sub_10009EC64, v35, v8, v31, v12, v29);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  v26 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v26(v19, v17, OpaqueTypeMetadata2);
  v27 = *(void (**)(char *, uint64_t))(v14 + 8);
  v27(v17, OpaqueTypeMetadata2);
  v26(v34, v19, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v27)(v19, OpaqueTypeMetadata2);
}

uint64_t sub_10008EA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];

  v4 = sub_10000B4C8(&qword_100548870);
  __chkstk_darwin(v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Image.ResizingMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100548848);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v26 - v15;
  if ((sub_100081B90() & 1) != 0)
  {
    v26[0] = a2;
    result = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    v18 = *(void **)(a1 + *(int *)(result + 32));
    if (v18)
    {
      v19 = Image.init(uiImage:)(v18);
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v7);
      v20 = Image.resizable(capInsets:resizingMode:)(v10, v19, 0.0, 0.0, 0.0, 0.0);
      v21 = swift_release(v19);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v21);
      v26[1] = v20;
      View.accessibility(hidden:)(1, &type metadata for Image, &protocol witness table for Image);
      swift_release(v20);
      sub_100011530((uint64_t)v14, (uint64_t)v16, &qword_100548848);
      sub_100011370((uint64_t)v16, (uint64_t)v6, &qword_100548848);
      swift_storeEnumTagMultiPayload(v6, v4, 0);
      v22 = sub_100029E98();
      v23 = sub_100029F1C();
      _ConditionalContent<>.init(storage:)(v6, v11, &type metadata for LinearGradient, v22, v23);
      return sub_100011694((uint64_t)v16, &qword_100548848);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1005477F0 != -1)
      swift_once(&qword_1005477F0, sub_100033E68);
    *(_QWORD *)v6 = xmmword_100561280;
    *(_OWORD *)(v6 + 8) = *(__int128 *)((char *)&xmmword_100561280 + 8);
    *(_OWORD *)(v6 + 24) = *(_OWORD *)&algn_100561290[8];
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    v24 = sub_100029E98();
    v25 = sub_100029F1C();
    swift_bridgeObjectRetain();
    return _ConditionalContent<>.init(storage:)(v6, v11, &type metadata for LinearGradient, v24, v25);
  }
  return result;
}

uint64_t sub_10008ED00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  sub_10000D924(v0, qword_10054A7F8);
  v1 = sub_10000D78C(v0, (uint64_t)qword_10054A7F8);
  if (qword_100547888 != -1)
    swift_once(&qword_100547888, sub_100062DB0);
  v2 = sub_10000D78C(v0, (uint64_t)qword_100561378);
  return sub_10000D964(v2, v1, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
}

uint64_t sub_10008ED8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005478C0 != -1)
    swift_once(&qword_1005478C0, sub_10008ED00);
  v2 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_10054A7F8);
  return sub_10000D964(v3, a1, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
}

uint64_t sub_10008EDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_10001254C(&qword_10054A9D8, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry, (uint64_t)"A?\r");
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_10008EE60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482A9C, 1);
}

uint64_t type metadata accessor for RecentlyPlayedExtraLargeContentView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10054AA40, (uint64_t)&nominal type descriptor for RecentlyPlayedExtraLargeContentView);
}

uint64_t type metadata accessor for RecentlyPlayedLargeContentView(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054AAE0, (uint64_t)&nominal type descriptor for RecentlyPlayedLargeContentView);
}

uint64_t type metadata accessor for RecentlyPlayedMediumContentView(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054AB78, (uint64_t)&nominal type descriptor for RecentlyPlayedMediumContentView);
}

uint64_t type metadata accessor for RecentlyPlayedSmallContentView(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054AC10, (uint64_t)&nominal type descriptor for RecentlyPlayedSmallContentView);
}

unint64_t sub_10008EEC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054A9A8;
  if (!qword_10054A9A8)
  {
    v1 = sub_100011650(&qword_10054A990);
    v2[0] = sub_10001254C(&qword_10054A9B0, type metadata accessor for RecentlyPlayedSmallContentView, (uint64_t)&unk_1004270E8);
    v2[1] = sub_10001254C(&qword_10054A9B8, type metadata accessor for RecentlyPlayedMediumContentView, (uint64_t)&unk_100427098);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054A9A8);
  }
  return result;
}

unint64_t sub_10008EF5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054A9C0;
  if (!qword_10054A9C0)
  {
    v1 = sub_100011650(&qword_10054A970);
    v2[0] = sub_10001254C(&qword_10054A9C8, type metadata accessor for RecentlyPlayedLargeContentView, (uint64_t)&unk_100427048);
    v2[1] = sub_10001254C(&qword_10054A9D0, type metadata accessor for RecentlyPlayedExtraLargeContentView, (uint64_t)&unk_100426FF8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054A9C0);
  }
  return result;
}

uint64_t sub_10008F034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008F040);
}

uint64_t sub_10008F044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008F050);
}

_QWORD *sub_10008F058(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  void *v57;
  void (*v58)(_QWORD *, _QWORD, uint64_t, int *);
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  id v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *__dst;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  int *v111;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      *((_BYTE *)a1 + v9[5]) = *((_BYTE *)a2 + v9[5]);
      v10 = v9[6];
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = (int *)type metadata accessor for WidgetMusicItem(0);
      v14 = *((_QWORD *)v13 - 1);
      v111 = v6;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_10000B4C8(&qword_100548310);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v101 = v14;
        v102 = v7;
        v110 = v9;
        v19 = v12[1];
        *v11 = *v12;
        v11[1] = v19;
        v20 = v12[3];
        v11[2] = v12[2];
        v11[3] = v20;
        v21 = v12[5];
        v11[4] = v12[4];
        v11[5] = v21;
        v22 = v13[7];
        v105 = (char *)v12 + v22;
        v107 = (char *)v11 + v22;
        v23 = type metadata accessor for URL(0);
        v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v103(v107, v105, v23);
        v24 = v13[8];
        v25 = (_QWORD *)((char *)v11 + v24);
        v26 = (_QWORD *)((char *)v12 + v24);
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        v28 = v13[9];
        v29 = (_QWORD *)((char *)v11 + v28);
        v30 = (_QWORD *)((char *)v12 + v28);
        v108 = v30[1];
        *v29 = *v30;
        v29[1] = v108;
        v31 = v13[10];
        v32 = (_QWORD *)((char *)v11 + v31);
        v33 = (_QWORD *)((char *)v12 + v31);
        v106 = v33[1];
        *v32 = *v33;
        v32[1] = v106;
        v34 = v13[11];
        v35 = (_QWORD *)((char *)v11 + v34);
        v36 = (_QWORD *)((char *)v12 + v34);
        v37 = v36[1];
        *v35 = *v36;
        v35[1] = v37;
        v38 = v13[12];
        v39 = (_QWORD *)((char *)v11 + v38);
        v40 = (_QWORD *)((char *)v12 + v38);
        v41 = v40[1];
        *v39 = *v40;
        v39[1] = v41;
        v42 = v13[13];
        v43 = (_QWORD *)((char *)v11 + v42);
        v44 = (_QWORD *)((char *)v12 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        *(_QWORD *)((char *)v11 + v13[14]) = *(_QWORD *)((char *)v12 + v13[14]);
        *((_BYTE *)v11 + v13[15]) = *((_BYTE *)v12 + v13[15]);
        v46 = v13[16];
        __dst = (char *)v11 + v46;
        v104 = (char *)v12 + v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47 = sub_10000B4C8(&qword_100547B50);
        v48 = *(_QWORD *)(v47 - 8);
        if ((*(unsigned int (**)(void))(v48 + 48))())
        {
          v49 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v104, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          v50 = v101;
          v7 = v102;
        }
        else
        {
          v51 = type metadata accessor for Playlist.Variant(0);
          v52 = *(_QWORD *)(v51 - 8);
          v109 = v51;
          if ((*(unsigned int (**)(char *, uint64_t))(v52 + 48))(v104, 1))
          {
            v53 = sub_10000B4C8(&qword_100548358);
            v54 = __dst;
            memcpy(__dst, v104, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v104, v109);
            v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56);
            v54 = __dst;
            v55(__dst, 0, 1, v109);
          }
          v50 = v101;
          v7 = v102;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v54, 0, 10, v47);
        }
        *(_QWORD *)((char *)v11 + v13[17]) = *(_QWORD *)((char *)v12 + v13[17]);
        v56 = v13[18];
        v57 = *(void **)((char *)v12 + v56);
        *(_QWORD *)((char *)v11 + v56) = v57;
        *(_QWORD *)((char *)v11 + v13[19]) = *(_QWORD *)((char *)v12 + v13[19]);
        v58 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v50 + 56);
        v59 = v57;
        swift_bridgeObjectRetain();
        v58(v11, 0, 1, v13);
        v9 = v110;
      }
      *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
      v60 = v9[8];
      v61 = *(void **)((char *)a2 + v60);
      *(_QWORD *)((char *)a1 + v60) = v61;
      v62 = v9[9];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = type metadata accessor for TimelineEntryRelevance(0);
      v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
      swift_bridgeObjectRetain();
      v67 = v61;
      v66(v63, v64, v65);
      v68 = v9[10];
      v69 = (_QWORD *)((char *)a1 + v68);
      v70 = (_QWORD *)((char *)a2 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      swift_bridgeObjectRetain();
      v18 = 1;
      v6 = v111;
    }
    else
    {
      v17 = *a2;
      *a1 = *a2;
      swift_retain(v17);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v18);
    v72 = v6[5];
    v73 = (_QWORD *)((char *)a1 + v72);
    v74 = (_QWORD *)((char *)a2 + v72);
    v75 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
    {
      v76 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v73, v74, v76);
      v77 = v73;
      v78 = v75;
      v79 = 1;
    }
    else
    {
      v80 = *v74;
      *v73 = *v74;
      swift_retain(v80);
      v77 = v73;
      v78 = v75;
      v79 = 0;
    }
    swift_storeEnumTagMultiPayload(v77, v78, v79);
    v81 = v6[6];
    v82 = (_QWORD *)((char *)a1 + v81);
    v83 = (_QWORD *)((char *)a2 + v81);
    v84 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v83, v84) == 1)
    {
      v85 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v82, v83, v85);
      v86 = v82;
      v87 = v84;
      v88 = 1;
    }
    else
    {
      v89 = *v83;
      *v82 = *v83;
      swift_retain(v89);
      v86 = v82;
      v87 = v84;
      v88 = 0;
    }
    swift_storeEnumTagMultiPayload(v86, v87, v88);
    v90 = v6[7];
    v91 = (_QWORD *)((char *)a1 + v90);
    v92 = (_QWORD *)((char *)a2 + v90);
    v93 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v92, v93) == 1)
    {
      v94 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v91, v92, v94);
      v95 = v91;
      v96 = v93;
      v97 = 1;
    }
    else
    {
      v98 = *v92;
      *v91 = *v92;
      swift_retain(v98);
      v95 = v91;
      v96 = v93;
      v97 = 0;
    }
    swift_storeEnumTagMultiPayload(v95, v96, v97);
  }
  return a1;
}

double sub_10008F628(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  double result;

  v4 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    v7 = (_QWORD *)((char *)a1 + v6[6]);
    v8 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease(v7[1]);
      swift_bridgeObjectRelease(v7[3]);
      swift_bridgeObjectRelease(v7[5]);
      v9 = (char *)v7 + v8[7];
      v10 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[14]));
      v11 = (char *)v7 + v8[16];
      v12 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 10, v12))
      {
        v13 = type metadata accessor for Playlist.Variant(0);
        v14 = *(_QWORD *)(v13 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
          (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[19]));
    }
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v6[7]));

    v15 = (char *)a1 + v6[9];
    v16 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v6[10] + 8));
  }
  else
  {
    swift_release(*a1);
  }
  v17 = (_QWORD *)((char *)a1 + a2[5]);
  v18 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  v20 = (_QWORD *)((char *)a1 + a2[6]);
  v21 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
  }
  else
  {
    swift_release(*v20);
  }
  v23 = (_QWORD *)((char *)a1 + a2[7]);
  v24 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v23).n128_u64[0];
  }
  return result;
}

_QWORD *sub_10008F954(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  void *v56;
  void (*v57)(_QWORD *, _QWORD, uint64_t, int *);
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  int *v100;
  char *v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *__dsta;
  char *__dst;
  uint64_t v109;

  v6 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
    v9 = v8[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    v13 = *((_QWORD *)v12 - 1);
    v109 = v6;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10000B4C8(&qword_100548310);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v99 = v13;
      v100 = a3;
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = v11[3];
      v10[2] = v11[2];
      v10[3] = v18;
      v19 = v11[5];
      v10[4] = v11[4];
      v10[5] = v19;
      v20 = v12[7];
      v104 = (char *)v11 + v20;
      __dsta = (char *)v10 + v20;
      v21 = type metadata accessor for URL(0);
      v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v102(__dsta, v104, v21);
      v22 = v12[8];
      v23 = (_QWORD *)((char *)v10 + v22);
      v24 = (_QWORD *)((char *)v11 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = v12[9];
      v27 = (_QWORD *)((char *)v10 + v26);
      v28 = (_QWORD *)((char *)v11 + v26);
      v105 = v28[1];
      *v27 = *v28;
      v27[1] = v105;
      v29 = v12[10];
      v30 = (_QWORD *)((char *)v10 + v29);
      v31 = (_QWORD *)((char *)v11 + v29);
      v103 = v31[1];
      *v30 = *v31;
      v30[1] = v103;
      v32 = v12[11];
      v33 = (_QWORD *)((char *)v10 + v32);
      v34 = (_QWORD *)((char *)v11 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v12[12];
      v37 = (_QWORD *)((char *)v10 + v36);
      v38 = (_QWORD *)((char *)v11 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v12[13];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      __dst = (char *)v10 + v44;
      v101 = (char *)v11 + v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(void))(v46 + 48))())
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v99;
        a3 = v100;
      }
      else
      {
        v49 = type metadata accessor for Playlist.Variant(0);
        v50 = *(_QWORD *)(v49 - 8);
        v106 = v49;
        if ((*(unsigned int (**)(char *, uint64_t))(v50 + 48))(v101, 1))
        {
          v51 = sub_10000B4C8(&qword_100548358);
          v52 = __dst;
          memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v101, v106);
          v53 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56);
          v52 = __dst;
          v53(__dst, 0, 1, v106);
        }
        v54 = v52;
        v48 = v99;
        a3 = v100;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v54, 0, 10, v45);
      }
      *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
      v55 = v12[18];
      v56 = *(void **)((char *)v11 + v55);
      *(_QWORD *)((char *)v10 + v55) = v56;
      *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
      v57 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v48 + 56);
      v58 = v56;
      swift_bridgeObjectRetain();
      v57(v10, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v59 = v8[8];
    v60 = *(void **)((char *)a2 + v59);
    *(_QWORD *)((char *)a1 + v59) = v60;
    v61 = v8[9];
    v62 = (char *)a1 + v61;
    v63 = (char *)a2 + v61;
    v64 = type metadata accessor for TimelineEntryRelevance(0);
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
    swift_bridgeObjectRetain();
    v66 = v60;
    v65(v62, v63, v64);
    v67 = v8[10];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    swift_bridgeObjectRetain();
    v16 = 1;
    v6 = v109;
  }
  else
  {
    v15 = *a2;
    *a1 = *a2;
    swift_retain(v15);
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v16);
  v71 = a3[5];
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  v74 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v73, v74) == 1)
  {
    v75 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v72, v73, v75);
    v76 = v72;
    v77 = v74;
    v78 = 1;
  }
  else
  {
    v79 = *v73;
    *v72 = *v73;
    swift_retain(v79);
    v76 = v72;
    v77 = v74;
    v78 = 0;
  }
  swift_storeEnumTagMultiPayload(v76, v77, v78);
  v80 = a3[6];
  v81 = (_QWORD *)((char *)a1 + v80);
  v82 = (_QWORD *)((char *)a2 + v80);
  v83 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v82, v83) == 1)
  {
    v84 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v81, v82, v84);
    v85 = v81;
    v86 = v83;
    v87 = 1;
  }
  else
  {
    v88 = *v82;
    *v81 = *v82;
    swift_retain(v88);
    v85 = v81;
    v86 = v83;
    v87 = 0;
  }
  swift_storeEnumTagMultiPayload(v85, v86, v87);
  v89 = a3[7];
  v90 = (_QWORD *)((char *)a1 + v89);
  v91 = (_QWORD *)((char *)a2 + v89);
  v92 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v91, v92) == 1)
  {
    v93 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v90, v91, v93);
    v94 = v90;
    v95 = v92;
    v96 = 1;
  }
  else
  {
    v97 = *v91;
    *v90 = *v91;
    swift_retain(v97);
    v94 = v90;
    v95 = v92;
    v96 = 0;
  }
  swift_storeEnumTagMultiPayload(v94, v95, v96);
  return a1;
}

_QWORD *sub_10008FEE8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  id v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *__dsta;
  char *__dst;
  uint64_t v94;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005499E0);
    v6 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      v9 = v8[6];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = (int *)type metadata accessor for WidgetMusicItem(0);
      v13 = *((_QWORD *)v12 - 1);
      v94 = v6;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_100548310);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v91 = v13;
        *v10 = *v11;
        v10[1] = v11[1];
        v10[2] = v11[2];
        v10[3] = v11[3];
        v10[4] = v11[4];
        v10[5] = v11[5];
        v17 = v12[7];
        __dsta = (char *)v10 + v17;
        v89 = (char *)v11 + v17;
        v18 = type metadata accessor for URL(0);
        v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v88(__dsta, v89, v18);
        v19 = v12[8];
        v20 = (_QWORD *)((char *)v10 + v19);
        v21 = (_QWORD *)((char *)v11 + v19);
        *v20 = *v21;
        v20[1] = v21[1];
        v22 = v12[9];
        v23 = (_QWORD *)((char *)v10 + v22);
        v24 = (_QWORD *)((char *)v11 + v22);
        *v23 = *v24;
        v23[1] = v24[1];
        v25 = v12[10];
        v26 = (_QWORD *)((char *)v10 + v25);
        v27 = (_QWORD *)((char *)v11 + v25);
        *v26 = *v27;
        v26[1] = v27[1];
        v28 = v12[11];
        v29 = (_QWORD *)((char *)v10 + v28);
        v30 = (_QWORD *)((char *)v11 + v28);
        *v29 = *v30;
        v29[1] = v30[1];
        v31 = v12[12];
        v32 = (_QWORD *)((char *)v10 + v31);
        v33 = (_QWORD *)((char *)v11 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        v34 = v12[13];
        v35 = (_QWORD *)((char *)v10 + v34);
        v36 = (_QWORD *)((char *)v11 + v34);
        *v35 = *v36;
        v35[1] = v36[1];
        *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        v37 = v12[16];
        __dst = (char *)v10 + v37;
        v87 = (char *)v11 + v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_10000B4C8(&qword_100547B50);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(void))(v39 + 48))())
        {
          v40 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v87, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v41 = type metadata accessor for Playlist.Variant(0);
          v42 = *(_QWORD *)(v41 - 8);
          v90 = v41;
          if ((*(unsigned int (**)(char *, uint64_t))(v42 + 48))(v87, 1))
          {
            v43 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, v87, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 16))(__dst, v87, v90);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v90);
          }
          v13 = v91;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 10, v38);
        }
        *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
        v44 = v12[18];
        v45 = *(void **)((char *)v11 + v44);
        *(_QWORD *)((char *)v10 + v44) = v45;
        *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
        v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
        v47 = v45;
        swift_bridgeObjectRetain();
        v46(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
      v48 = v8[8];
      v49 = *(void **)((char *)a2 + v48);
      *(_QWORD *)((char *)a1 + v48) = v49;
      v50 = v8[9];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = type metadata accessor for TimelineEntryRelevance(0);
      v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      v55 = v49;
      v54(v51, v52, v53);
      v56 = v8[10];
      v57 = (_QWORD *)((char *)a1 + v56);
      v58 = (_QWORD *)((char *)a2 + v56);
      *v57 = *v58;
      v57[1] = v58[1];
      swift_bridgeObjectRetain();
      v16 = 1;
      v6 = v94;
    }
    else
    {
      v15 = *a2;
      *a1 = *a2;
      swift_retain(v15);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v16);
    v59 = a3[5];
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    sub_100011694((uint64_t)a1 + v59, &qword_100548900);
    v62 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v61, v62) == 1)
    {
      v63 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v60, v61, v63);
      v64 = v60;
      v65 = v62;
      v66 = 1;
    }
    else
    {
      v67 = *v61;
      *v60 = *v61;
      swift_retain(v67);
      v64 = v60;
      v65 = v62;
      v66 = 0;
    }
    swift_storeEnumTagMultiPayload(v64, v65, v66);
    v68 = a3[6];
    v69 = (_QWORD *)((char *)a1 + v68);
    v70 = (_QWORD *)((char *)a2 + v68);
    sub_100011694((uint64_t)a1 + v68, &qword_1005486F8);
    v71 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v70, v71) == 1)
    {
      v72 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v69, v70, v72);
      v73 = v69;
      v74 = v71;
      v75 = 1;
    }
    else
    {
      v76 = *v70;
      *v69 = *v70;
      swift_retain(v76);
      v73 = v69;
      v74 = v71;
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v74, v75);
    v77 = a3[7];
    v78 = (_QWORD *)((char *)a1 + v77);
    v79 = (_QWORD *)((char *)a2 + v77);
    sub_100011694((uint64_t)a1 + v77, &qword_100548908);
    v80 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v79, v80) == 1)
    {
      v81 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v78, v79, v81);
      v82 = v78;
      v83 = v80;
      v84 = 1;
    }
    else
    {
      v85 = *v79;
      *v78 = *v79;
      swift_retain(v85);
      v82 = v78;
      v83 = v80;
      v84 = 0;
    }
    swift_storeEnumTagMultiPayload(v82, v83, v84);
  }
  return a1;
}

_BYTE *sub_100090514(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *__dst;
  int *v55;
  uint64_t v56;
  char *__src;

  v6 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    a1[v8[5]] = a2[v8[5]];
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10000B4C8(&qword_100548310);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v55 = a3;
      v56 = v13;
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v10[2] = v11[2];
      v16 = v12[7];
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
      *(_OWORD *)((char *)v10 + v12[9]) = *(_OWORD *)((char *)v11 + v12[9]);
      *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
      *(_OWORD *)((char *)v10 + v12[11]) = *(_OWORD *)((char *)v11 + v12[11]);
      *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
      *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
      *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v20 = v12[16];
      __dst = (char *)v10 + v20;
      v21 = (char *)v11 + v20;
      v22 = sub_10000B4C8(&qword_100547B50);
      v23 = *(_QWORD *)(v22 - 8);
      __src = v21;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
      {
        v24 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        a3 = v55;
        v25 = v56;
      }
      else
      {
        v52 = v23;
        v53 = v22;
        v26 = type metadata accessor for Playlist.Variant(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(__src, 1, v26))
        {
          v28 = sub_10000B4C8(&qword_100548358);
          v29 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v51 = v27;
          v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
          v29 = __dst;
          v30(__dst, __src, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v26);
        }
        a3 = v55;
        v25 = v56;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v29, 0, 10, v53);
      }
      *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
      *(_QWORD *)((char *)v10 + v12[18]) = *(_QWORD *)((char *)v11 + v12[18]);
      *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v10, 0, 1, v12);
    }
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
    v31 = v8[9];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v35 = a3[5];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
  {
    v39 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload(v36, v38, 1);
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  v40 = a3[6];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
  {
    v44 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
    swift_storeEnumTagMultiPayload(v41, v43, 1);
  }
  else
  {
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  v45 = a3[7];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
  {
    v49 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v46, v47, v49);
    swift_storeEnumTagMultiPayload(v46, v48, 1);
  }
  else
  {
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_1000909E8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *__dst;
  uint64_t v53;
  char *__src;
  uint64_t v55;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005499E0);
    v6 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      a1[v8[5]] = a2[v8[5]];
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = (int *)type metadata accessor for WidgetMusicItem(0);
      v13 = *((_QWORD *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_100548310);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v53 = v6;
        v55 = v13;
        v15 = v11[1];
        *v10 = *v11;
        v10[1] = v15;
        v10[2] = v11[2];
        v16 = v12[7];
        v17 = (char *)v10 + v16;
        v18 = (char *)v11 + v16;
        v19 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
        *(_OWORD *)((char *)v10 + v12[9]) = *(_OWORD *)((char *)v11 + v12[9]);
        *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
        *(_OWORD *)((char *)v10 + v12[11]) = *(_OWORD *)((char *)v11 + v12[11]);
        *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
        *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
        *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        v20 = v12[16];
        __dst = (char *)v10 + v20;
        v21 = (char *)v11 + v20;
        v22 = sub_10000B4C8(&qword_100547B50);
        v23 = *(_QWORD *)(v22 - 8);
        __src = v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
        {
          v24 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          v25 = v55;
          v6 = v53;
        }
        else
        {
          v50 = v23;
          v51 = v22;
          v26 = type metadata accessor for Playlist.Variant(0);
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(__src, 1, v26))
          {
            v28 = sub_10000B4C8(&qword_100548358);
            v29 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            v29 = __dst;
            (*(void (**)(void))(v27 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
          }
          v6 = v53;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v29, 0, 10, v51);
          v25 = v55;
        }
        *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
        *(_QWORD *)((char *)v10 + v12[18]) = *(_QWORD *)((char *)v11 + v12[18]);
        *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
      v30 = v8[9];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = type metadata accessor for TimelineEntryRelevance(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v34 = a3[5];
    v35 = &a1[v34];
    v36 = &a2[v34];
    sub_100011694((uint64_t)&a1[v34], &qword_100548900);
    v37 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
      swift_storeEnumTagMultiPayload(v35, v37, 1);
    }
    else
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    v39 = a3[6];
    v40 = &a1[v39];
    v41 = &a2[v39];
    sub_100011694((uint64_t)&a1[v39], &qword_1005486F8);
    v42 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
    {
      v43 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v40, v41, v43);
      swift_storeEnumTagMultiPayload(v40, v42, 1);
    }
    else
    {
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    v44 = a3[7];
    v45 = &a1[v44];
    v46 = &a2[v44];
    sub_100011694((uint64_t)&a1[v44], &qword_100548908);
    v47 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v45, v46, v48);
      swift_storeEnumTagMultiPayload(v45, v47, 1);
    }
    else
    {
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100090F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100090F14);
}

uint64_t sub_100090F14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_10000B4C8(&qword_10054A9E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10000B4C8(&qword_100548910);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_10000B4C8(&qword_100548738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = sub_10000B4C8(&qword_100548918);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100090FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100090FEC);
}

uint64_t sub_100090FEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_10000B4C8(&qword_10054A9E0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_100548910);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_10000B4C8(&qword_100548738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = sub_10000B4C8(&qword_100548918);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000910C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  sub_10002E8E4(319, (unint64_t *)&unk_10054AA50, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, &qword_100548988, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_1005487B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 4, v10, a1 + 16);
        }
      }
    }
  }
}

_QWORD *sub_1000911DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  void *v57;
  void (*v58)(_QWORD *, _QWORD, uint64_t, int *);
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  id v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *__dst;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      *((_BYTE *)a1 + v9[5]) = *((_BYTE *)a2 + v9[5]);
      v10 = v9[6];
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = (int *)type metadata accessor for WidgetMusicItem(0);
      v14 = *((_QWORD *)v13 - 1);
      v102 = v6;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_10000B4C8(&qword_100548310);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v92 = v14;
        v93 = v7;
        v101 = v9;
        v19 = v12[1];
        *v11 = *v12;
        v11[1] = v19;
        v20 = v12[3];
        v11[2] = v12[2];
        v11[3] = v20;
        v21 = v12[5];
        v11[4] = v12[4];
        v11[5] = v21;
        v22 = v13[7];
        v96 = (char *)v12 + v22;
        v98 = (char *)v11 + v22;
        v23 = type metadata accessor for URL(0);
        v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94(v98, v96, v23);
        v24 = v13[8];
        v25 = (_QWORD *)((char *)v11 + v24);
        v26 = (_QWORD *)((char *)v12 + v24);
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        v28 = v13[9];
        v29 = (_QWORD *)((char *)v11 + v28);
        v30 = (_QWORD *)((char *)v12 + v28);
        v99 = v30[1];
        *v29 = *v30;
        v29[1] = v99;
        v31 = v13[10];
        v32 = (_QWORD *)((char *)v11 + v31);
        v33 = (_QWORD *)((char *)v12 + v31);
        v97 = v33[1];
        *v32 = *v33;
        v32[1] = v97;
        v34 = v13[11];
        v35 = (_QWORD *)((char *)v11 + v34);
        v36 = (_QWORD *)((char *)v12 + v34);
        v37 = v36[1];
        *v35 = *v36;
        v35[1] = v37;
        v38 = v13[12];
        v39 = (_QWORD *)((char *)v11 + v38);
        v40 = (_QWORD *)((char *)v12 + v38);
        v41 = v40[1];
        *v39 = *v40;
        v39[1] = v41;
        v42 = v13[13];
        v43 = (_QWORD *)((char *)v11 + v42);
        v44 = (_QWORD *)((char *)v12 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        *(_QWORD *)((char *)v11 + v13[14]) = *(_QWORD *)((char *)v12 + v13[14]);
        *((_BYTE *)v11 + v13[15]) = *((_BYTE *)v12 + v13[15]);
        v46 = v13[16];
        __dst = (char *)v11 + v46;
        v95 = (char *)v12 + v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47 = sub_10000B4C8(&qword_100547B50);
        v48 = *(_QWORD *)(v47 - 8);
        if ((*(unsigned int (**)(void))(v48 + 48))())
        {
          v49 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v95, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          v50 = v92;
          v7 = v93;
        }
        else
        {
          v51 = type metadata accessor for Playlist.Variant(0);
          v52 = *(_QWORD *)(v51 - 8);
          v100 = v51;
          if ((*(unsigned int (**)(char *, uint64_t))(v52 + 48))(v95, 1))
          {
            v53 = sub_10000B4C8(&qword_100548358);
            v54 = __dst;
            memcpy(__dst, v95, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v95, v100);
            v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56);
            v54 = __dst;
            v55(__dst, 0, 1, v100);
          }
          v50 = v92;
          v7 = v93;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v54, 0, 10, v47);
        }
        *(_QWORD *)((char *)v11 + v13[17]) = *(_QWORD *)((char *)v12 + v13[17]);
        v56 = v13[18];
        v57 = *(void **)((char *)v12 + v56);
        *(_QWORD *)((char *)v11 + v56) = v57;
        *(_QWORD *)((char *)v11 + v13[19]) = *(_QWORD *)((char *)v12 + v13[19]);
        v58 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v50 + 56);
        v59 = v57;
        swift_bridgeObjectRetain();
        v58(v11, 0, 1, v13);
        v9 = v101;
      }
      *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
      v60 = v9[8];
      v61 = *(void **)((char *)a2 + v60);
      *(_QWORD *)((char *)a1 + v60) = v61;
      v62 = v9[9];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = type metadata accessor for TimelineEntryRelevance(0);
      v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
      swift_bridgeObjectRetain();
      v67 = v61;
      v66(v63, v64, v65);
      v68 = v9[10];
      v69 = (_QWORD *)((char *)a1 + v68);
      v70 = (_QWORD *)((char *)a2 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      swift_bridgeObjectRetain();
      v18 = 1;
      v6 = v102;
    }
    else
    {
      v17 = *a2;
      *a1 = *a2;
      swift_retain(v17);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v18);
    v72 = *(int *)(v6 + 20);
    v73 = (_QWORD *)((char *)a1 + v72);
    v74 = (_QWORD *)((char *)a2 + v72);
    v75 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
    {
      v76 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v73, v74, v76);
      v77 = v73;
      v78 = v75;
      v79 = 1;
    }
    else
    {
      v80 = *v74;
      *v73 = *v74;
      swift_retain(v80);
      v77 = v73;
      v78 = v75;
      v79 = 0;
    }
    swift_storeEnumTagMultiPayload(v77, v78, v79);
    v81 = *(int *)(v6 + 24);
    v82 = (_QWORD *)((char *)a1 + v81);
    v83 = (_QWORD *)((char *)a2 + v81);
    v84 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v83, v84) == 1)
    {
      v85 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v82, v83, v85);
      v86 = v82;
      v87 = v84;
      v88 = 1;
    }
    else
    {
      v89 = *v83;
      *v82 = *v83;
      swift_retain(v89);
      v86 = v82;
      v87 = v84;
      v88 = 0;
    }
    swift_storeEnumTagMultiPayload(v86, v87, v88);
  }
  return a1;
}

double sub_100091730(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  double result;

  v4 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    v7 = (_QWORD *)((char *)a1 + v6[6]);
    v8 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease(v7[1]);
      swift_bridgeObjectRelease(v7[3]);
      swift_bridgeObjectRelease(v7[5]);
      v9 = (char *)v7 + v8[7];
      v10 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[14]));
      v11 = (char *)v7 + v8[16];
      v12 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 10, v12))
      {
        v13 = type metadata accessor for Playlist.Variant(0);
        v14 = *(_QWORD *)(v13 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
          (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[19]));
    }
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v6[7]));

    v15 = (char *)a1 + v6[9];
    v16 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v6[10] + 8));
  }
  else
  {
    swift_release(*a1);
  }
  v17 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v18 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  v20 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  v21 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v20).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100091A0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  void *v56;
  void (*v57)(_QWORD *, _QWORD, uint64_t, int *);
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *__dsta;
  char *__dst;
  uint64_t v100;

  v6 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
    v9 = v8[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    v13 = *((_QWORD *)v12 - 1);
    v100 = v6;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10000B4C8(&qword_100548310);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v90 = v13;
      v91 = a3;
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = v11[3];
      v10[2] = v11[2];
      v10[3] = v18;
      v19 = v11[5];
      v10[4] = v11[4];
      v10[5] = v19;
      v20 = v12[7];
      v95 = (char *)v11 + v20;
      __dsta = (char *)v10 + v20;
      v21 = type metadata accessor for URL(0);
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v93(__dsta, v95, v21);
      v22 = v12[8];
      v23 = (_QWORD *)((char *)v10 + v22);
      v24 = (_QWORD *)((char *)v11 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = v12[9];
      v27 = (_QWORD *)((char *)v10 + v26);
      v28 = (_QWORD *)((char *)v11 + v26);
      v96 = v28[1];
      *v27 = *v28;
      v27[1] = v96;
      v29 = v12[10];
      v30 = (_QWORD *)((char *)v10 + v29);
      v31 = (_QWORD *)((char *)v11 + v29);
      v94 = v31[1];
      *v30 = *v31;
      v30[1] = v94;
      v32 = v12[11];
      v33 = (_QWORD *)((char *)v10 + v32);
      v34 = (_QWORD *)((char *)v11 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v12[12];
      v37 = (_QWORD *)((char *)v10 + v36);
      v38 = (_QWORD *)((char *)v11 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v12[13];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      __dst = (char *)v10 + v44;
      v92 = (char *)v11 + v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(void))(v46 + 48))())
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v90;
        a3 = v91;
      }
      else
      {
        v49 = type metadata accessor for Playlist.Variant(0);
        v50 = *(_QWORD *)(v49 - 8);
        v97 = v49;
        if ((*(unsigned int (**)(char *, uint64_t))(v50 + 48))(v92, 1))
        {
          v51 = sub_10000B4C8(&qword_100548358);
          v52 = __dst;
          memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v92, v97);
          v53 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56);
          v52 = __dst;
          v53(__dst, 0, 1, v97);
        }
        v54 = v52;
        v48 = v90;
        a3 = v91;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v54, 0, 10, v45);
      }
      *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
      v55 = v12[18];
      v56 = *(void **)((char *)v11 + v55);
      *(_QWORD *)((char *)v10 + v55) = v56;
      *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
      v57 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v48 + 56);
      v58 = v56;
      swift_bridgeObjectRetain();
      v57(v10, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v59 = v8[8];
    v60 = *(void **)((char *)a2 + v59);
    *(_QWORD *)((char *)a1 + v59) = v60;
    v61 = v8[9];
    v62 = (char *)a1 + v61;
    v63 = (char *)a2 + v61;
    v64 = type metadata accessor for TimelineEntryRelevance(0);
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
    swift_bridgeObjectRetain();
    v66 = v60;
    v65(v62, v63, v64);
    v67 = v8[10];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    swift_bridgeObjectRetain();
    v16 = 1;
    v6 = v100;
  }
  else
  {
    v15 = *a2;
    *a1 = *a2;
    swift_retain(v15);
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v16);
  v71 = *(int *)(a3 + 20);
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  v74 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v73, v74) == 1)
  {
    v75 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v72, v73, v75);
    v76 = v72;
    v77 = v74;
    v78 = 1;
  }
  else
  {
    v79 = *v73;
    *v72 = *v73;
    swift_retain(v79);
    v76 = v72;
    v77 = v74;
    v78 = 0;
  }
  swift_storeEnumTagMultiPayload(v76, v77, v78);
  v80 = *(int *)(a3 + 24);
  v81 = (_QWORD *)((char *)a1 + v80);
  v82 = (_QWORD *)((char *)a2 + v80);
  v83 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v82, v83) == 1)
  {
    v84 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v81, v82, v84);
    v85 = v81;
    v86 = v83;
    v87 = 1;
  }
  else
  {
    v88 = *v82;
    *v81 = *v82;
    swift_retain(v88);
    v85 = v81;
    v86 = v83;
    v87 = 0;
  }
  swift_storeEnumTagMultiPayload(v85, v86, v87);
  return a1;
}

_QWORD *sub_100091F24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *);
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  id v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *__dsta;
  char *__dst;
  uint64_t v86;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005499E0);
    v6 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      v9 = v8[6];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = (int *)type metadata accessor for WidgetMusicItem(0);
      v13 = *((_QWORD *)v12 - 1);
      v86 = v6;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_100548310);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v83 = v13;
        *v10 = *v11;
        v10[1] = v11[1];
        v10[2] = v11[2];
        v10[3] = v11[3];
        v10[4] = v11[4];
        v10[5] = v11[5];
        v17 = v12[7];
        __dsta = (char *)v10 + v17;
        v81 = (char *)v11 + v17;
        v18 = type metadata accessor for URL(0);
        v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v80(__dsta, v81, v18);
        v19 = v12[8];
        v20 = (_QWORD *)((char *)v10 + v19);
        v21 = (_QWORD *)((char *)v11 + v19);
        *v20 = *v21;
        v20[1] = v21[1];
        v22 = v12[9];
        v23 = (_QWORD *)((char *)v10 + v22);
        v24 = (_QWORD *)((char *)v11 + v22);
        *v23 = *v24;
        v23[1] = v24[1];
        v25 = v12[10];
        v26 = (_QWORD *)((char *)v10 + v25);
        v27 = (_QWORD *)((char *)v11 + v25);
        *v26 = *v27;
        v26[1] = v27[1];
        v28 = v12[11];
        v29 = (_QWORD *)((char *)v10 + v28);
        v30 = (_QWORD *)((char *)v11 + v28);
        *v29 = *v30;
        v29[1] = v30[1];
        v31 = v12[12];
        v32 = (_QWORD *)((char *)v10 + v31);
        v33 = (_QWORD *)((char *)v11 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        v34 = v12[13];
        v35 = (_QWORD *)((char *)v10 + v34);
        v36 = (_QWORD *)((char *)v11 + v34);
        *v35 = *v36;
        v35[1] = v36[1];
        *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        v37 = v12[16];
        __dst = (char *)v10 + v37;
        v79 = (char *)v11 + v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_10000B4C8(&qword_100547B50);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(void))(v39 + 48))())
        {
          v40 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          v41 = v83;
        }
        else
        {
          v42 = type metadata accessor for Playlist.Variant(0);
          v43 = *(_QWORD *)(v42 - 8);
          v82 = v42;
          if ((*(unsigned int (**)(char *, uint64_t))(v43 + 48))(v79, 1))
          {
            v44 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v79, v82);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v82);
          }
          v41 = v83;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 10, v38);
        }
        *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
        v45 = v12[18];
        v46 = *(void **)((char *)v11 + v45);
        *(_QWORD *)((char *)v10 + v45) = v46;
        *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
        v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v41 + 56);
        v48 = v46;
        swift_bridgeObjectRetain();
        v47(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
      v49 = v8[8];
      v50 = *(void **)((char *)a2 + v49);
      *(_QWORD *)((char *)a1 + v49) = v50;
      v51 = v8[9];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      v54 = type metadata accessor for TimelineEntryRelevance(0);
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v56 = v50;
      v55(v52, v53, v54);
      v57 = v8[10];
      v58 = (_QWORD *)((char *)a1 + v57);
      v59 = (_QWORD *)((char *)a2 + v57);
      *v58 = *v59;
      v58[1] = v59[1];
      swift_bridgeObjectRetain();
      v16 = 1;
      v6 = v86;
    }
    else
    {
      v15 = *a2;
      *a1 = *a2;
      swift_retain(v15);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v16);
    v60 = *(int *)(a3 + 20);
    v61 = (_QWORD *)((char *)a1 + v60);
    v62 = (_QWORD *)((char *)a2 + v60);
    sub_100011694((uint64_t)a1 + v60, &qword_1005486F8);
    v63 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v62, v63) == 1)
    {
      v64 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v61, v62, v64);
      v65 = v61;
      v66 = v63;
      v67 = 1;
    }
    else
    {
      v68 = *v62;
      *v61 = *v62;
      swift_retain(v68);
      v65 = v61;
      v66 = v63;
      v67 = 0;
    }
    swift_storeEnumTagMultiPayload(v65, v66, v67);
    v69 = *(int *)(a3 + 24);
    v70 = (_QWORD *)((char *)a1 + v69);
    v71 = (_QWORD *)((char *)a2 + v69);
    sub_100011694((uint64_t)a1 + v69, &qword_100548908);
    v72 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
    {
      v73 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v70, v71, v73);
      v74 = v70;
      v75 = v72;
      v76 = 1;
    }
    else
    {
      v77 = *v71;
      *v70 = *v71;
      swift_retain(v77);
      v74 = v70;
      v75 = v72;
      v76 = 0;
    }
    swift_storeEnumTagMultiPayload(v74, v75, v76);
  }
  return a1;
}

_BYTE *sub_1000924C4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *__dst;
  uint64_t v50;
  uint64_t v51;
  char *__src;

  v6 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    a1[v8[5]] = a2[v8[5]];
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10000B4C8(&qword_100548310);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v50 = a3;
      v51 = v13;
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v10[2] = v11[2];
      v16 = v12[7];
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
      *(_OWORD *)((char *)v10 + v12[9]) = *(_OWORD *)((char *)v11 + v12[9]);
      *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
      *(_OWORD *)((char *)v10 + v12[11]) = *(_OWORD *)((char *)v11 + v12[11]);
      *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
      *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
      *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v20 = v12[16];
      __dst = (char *)v10 + v20;
      v21 = (char *)v11 + v20;
      v22 = sub_10000B4C8(&qword_100547B50);
      v23 = *(_QWORD *)(v22 - 8);
      __src = v21;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
      {
        v24 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        a3 = v50;
        v25 = v51;
      }
      else
      {
        v47 = v23;
        v48 = v22;
        v26 = type metadata accessor for Playlist.Variant(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(__src, 1, v26))
        {
          v28 = sub_10000B4C8(&qword_100548358);
          v29 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v46 = v27;
          v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
          v29 = __dst;
          v30(__dst, __src, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v26);
        }
        a3 = v50;
        v25 = v51;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v29, 0, 10, v48);
      }
      *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
      *(_QWORD *)((char *)v10 + v12[18]) = *(_QWORD *)((char *)v11 + v12[18]);
      *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v10, 0, 1, v12);
    }
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
    v31 = v8[9];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v35 = *(int *)(a3 + 20);
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
  {
    v39 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload(v36, v38, 1);
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  v40 = *(int *)(a3 + 24);
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
  {
    v44 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
    swift_storeEnumTagMultiPayload(v41, v43, 1);
  }
  else
  {
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_100092920(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *__dst;
  uint64_t v48;
  char *__src;
  uint64_t v50;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005499E0);
    v6 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      a1[v8[5]] = a2[v8[5]];
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = (int *)type metadata accessor for WidgetMusicItem(0);
      v13 = *((_QWORD *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_100548310);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v48 = a3;
        v50 = v13;
        v15 = v11[1];
        *v10 = *v11;
        v10[1] = v15;
        v10[2] = v11[2];
        v16 = v12[7];
        v17 = (char *)v10 + v16;
        v18 = (char *)v11 + v16;
        v19 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
        *(_OWORD *)((char *)v10 + v12[9]) = *(_OWORD *)((char *)v11 + v12[9]);
        *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
        *(_OWORD *)((char *)v10 + v12[11]) = *(_OWORD *)((char *)v11 + v12[11]);
        *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
        *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
        *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        v20 = v12[16];
        __dst = (char *)v10 + v20;
        v21 = (char *)v11 + v20;
        v22 = sub_10000B4C8(&qword_100547B50);
        v23 = *(_QWORD *)(v22 - 8);
        __src = v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
        {
          v24 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          v25 = v50;
          a3 = v48;
        }
        else
        {
          v45 = v23;
          v46 = v22;
          v26 = type metadata accessor for Playlist.Variant(0);
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(__src, 1, v26))
          {
            v28 = sub_10000B4C8(&qword_100548358);
            v29 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            v29 = __dst;
            (*(void (**)(void))(v27 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
          }
          a3 = v48;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v29, 0, 10, v46);
          v25 = v50;
        }
        *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
        *(_QWORD *)((char *)v10 + v12[18]) = *(_QWORD *)((char *)v11 + v12[18]);
        *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
      v30 = v8[9];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = type metadata accessor for TimelineEntryRelevance(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v34 = *(int *)(a3 + 20);
    v35 = &a1[v34];
    v36 = &a2[v34];
    sub_100011694((uint64_t)&a1[v34], &qword_1005486F8);
    v37 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
      swift_storeEnumTagMultiPayload(v35, v37, 1);
    }
    else
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    v39 = *(int *)(a3 + 24);
    v40 = &a1[v39];
    v41 = &a2[v39];
    sub_100011694((uint64_t)&a1[v39], &qword_100548908);
    v42 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
    {
      v43 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v40, v41, v43);
      swift_storeEnumTagMultiPayload(v40, v42, 1);
    }
    else
    {
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100092DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100092DC4);
}

uint64_t sub_100092DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_10000B4C8(&qword_10054A9E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10000B4C8(&qword_100548738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_10000B4C8(&qword_100548918);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100092E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100092E78);
}

uint64_t sub_100092E7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_10000B4C8(&qword_10054A9E0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_100548738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_100548918);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100092F28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_10002E8E4(319, (unint64_t *)&unk_10054AA50, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&unk_1005487B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

_QWORD *sub_100093010(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  void *v57;
  void (*v58)(_QWORD *, _QWORD, uint64_t, int *);
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  id v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *__dst;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  int *v114;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      *((_BYTE *)a1 + v9[5]) = *((_BYTE *)a2 + v9[5]);
      v10 = v9[6];
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = (int *)type metadata accessor for WidgetMusicItem(0);
      v14 = *((_QWORD *)v13 - 1);
      v114 = v6;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_10000B4C8(&qword_100548310);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v104 = v14;
        v105 = v7;
        v113 = v9;
        v19 = v12[1];
        *v11 = *v12;
        v11[1] = v19;
        v20 = v12[3];
        v11[2] = v12[2];
        v11[3] = v20;
        v21 = v12[5];
        v11[4] = v12[4];
        v11[5] = v21;
        v22 = v13[7];
        v108 = (char *)v12 + v22;
        v110 = (char *)v11 + v22;
        v23 = type metadata accessor for URL(0);
        v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106(v110, v108, v23);
        v24 = v13[8];
        v25 = (_QWORD *)((char *)v11 + v24);
        v26 = (_QWORD *)((char *)v12 + v24);
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        v28 = v13[9];
        v29 = (_QWORD *)((char *)v11 + v28);
        v30 = (_QWORD *)((char *)v12 + v28);
        v111 = v30[1];
        *v29 = *v30;
        v29[1] = v111;
        v31 = v13[10];
        v32 = (_QWORD *)((char *)v11 + v31);
        v33 = (_QWORD *)((char *)v12 + v31);
        v109 = v33[1];
        *v32 = *v33;
        v32[1] = v109;
        v34 = v13[11];
        v35 = (_QWORD *)((char *)v11 + v34);
        v36 = (_QWORD *)((char *)v12 + v34);
        v37 = v36[1];
        *v35 = *v36;
        v35[1] = v37;
        v38 = v13[12];
        v39 = (_QWORD *)((char *)v11 + v38);
        v40 = (_QWORD *)((char *)v12 + v38);
        v41 = v40[1];
        *v39 = *v40;
        v39[1] = v41;
        v42 = v13[13];
        v43 = (_QWORD *)((char *)v11 + v42);
        v44 = (_QWORD *)((char *)v12 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        *(_QWORD *)((char *)v11 + v13[14]) = *(_QWORD *)((char *)v12 + v13[14]);
        *((_BYTE *)v11 + v13[15]) = *((_BYTE *)v12 + v13[15]);
        v46 = v13[16];
        __dst = (char *)v11 + v46;
        v107 = (char *)v12 + v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47 = sub_10000B4C8(&qword_100547B50);
        v48 = *(_QWORD *)(v47 - 8);
        if ((*(unsigned int (**)(void))(v48 + 48))())
        {
          v49 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v107, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          v50 = v104;
          v7 = v105;
        }
        else
        {
          v51 = type metadata accessor for Playlist.Variant(0);
          v52 = *(_QWORD *)(v51 - 8);
          v112 = v51;
          if ((*(unsigned int (**)(char *, uint64_t))(v52 + 48))(v107, 1))
          {
            v53 = sub_10000B4C8(&qword_100548358);
            v54 = __dst;
            memcpy(__dst, v107, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v107, v112);
            v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56);
            v54 = __dst;
            v55(__dst, 0, 1, v112);
          }
          v50 = v104;
          v7 = v105;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v54, 0, 10, v47);
        }
        *(_QWORD *)((char *)v11 + v13[17]) = *(_QWORD *)((char *)v12 + v13[17]);
        v56 = v13[18];
        v57 = *(void **)((char *)v12 + v56);
        *(_QWORD *)((char *)v11 + v56) = v57;
        *(_QWORD *)((char *)v11 + v13[19]) = *(_QWORD *)((char *)v12 + v13[19]);
        v58 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v50 + 56);
        v59 = v57;
        swift_bridgeObjectRetain();
        v58(v11, 0, 1, v13);
        v9 = v113;
      }
      *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
      v60 = v9[8];
      v61 = *(void **)((char *)a2 + v60);
      *(_QWORD *)((char *)a1 + v60) = v61;
      v62 = v9[9];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = type metadata accessor for TimelineEntryRelevance(0);
      v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
      swift_bridgeObjectRetain();
      v67 = v61;
      v66(v63, v64, v65);
      v68 = v9[10];
      v69 = (_QWORD *)((char *)a1 + v68);
      v70 = (_QWORD *)((char *)a2 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      swift_bridgeObjectRetain();
      v18 = 1;
      v6 = v114;
    }
    else
    {
      v17 = *a2;
      *a1 = *a2;
      swift_retain(v17);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v18);
    v72 = v6[5];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    v75 = *(_QWORD *)v74;
    v76 = v74[8];
    sub_10004C60C(*(_QWORD *)v74, v76);
    *(_QWORD *)v73 = v75;
    v73[8] = v76;
    v77 = v6[6];
    v78 = (_QWORD *)((char *)a1 + v77);
    v79 = (_QWORD *)((char *)a2 + v77);
    v80 = sub_10000B4C8(&qword_100549378);
    if (swift_getEnumCaseMultiPayload(v79, v80) == 1)
    {
      v81 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v78, v79, v81);
      v82 = 1;
    }
    else
    {
      v83 = *v79;
      *v78 = *v79;
      swift_retain(v83);
      v82 = 0;
    }
    swift_storeEnumTagMultiPayload(v78, v80, v82);
    v84 = v6[7];
    v85 = (_QWORD *)((char *)a1 + v84);
    v86 = (_QWORD *)((char *)a2 + v84);
    v87 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v86, v87) == 1)
    {
      v88 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v85, v86, v88);
      v89 = v85;
      v90 = v87;
      v91 = 1;
    }
    else
    {
      v92 = *v86;
      *v85 = *v86;
      swift_retain(v92);
      v89 = v85;
      v90 = v87;
      v91 = 0;
    }
    swift_storeEnumTagMultiPayload(v89, v90, v91);
    v93 = v6[8];
    v94 = (_QWORD *)((char *)a1 + v93);
    v95 = (_QWORD *)((char *)a2 + v93);
    v96 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v95, v96) == 1)
    {
      v97 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v94, v95, v97);
      v98 = v94;
      v99 = v96;
      v100 = 1;
    }
    else
    {
      v101 = *v95;
      *v94 = *v95;
      swift_retain(v101);
      v98 = v94;
      v99 = v96;
      v100 = 0;
    }
    swift_storeEnumTagMultiPayload(v98, v99, v100);
  }
  return a1;
}

double sub_100093600(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  double result;

  v4 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    v7 = (_QWORD *)((char *)a1 + v6[6]);
    v8 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease(v7[1]);
      swift_bridgeObjectRelease(v7[3]);
      swift_bridgeObjectRelease(v7[5]);
      v9 = (char *)v7 + v8[7];
      v10 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[14]));
      v11 = (char *)v7 + v8[16];
      v12 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 10, v12))
      {
        v13 = type metadata accessor for Playlist.Variant(0);
        v14 = *(_QWORD *)(v13 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
          (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[19]));
    }
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v6[7]));

    v15 = (char *)a1 + v6[9];
    v16 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v6[10] + 8));
  }
  else
  {
    swift_release(*a1);
  }
  sub_10004CAC0(*(_QWORD *)((char *)a1 + a2[5]), *((_BYTE *)a1 + a2[5] + 8));
  v17 = (_QWORD *)((char *)a1 + a2[6]);
  v18 = sub_10000B4C8(&qword_100549378);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  v20 = (_QWORD *)((char *)a1 + a2[7]);
  v21 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
  }
  else
  {
    swift_release(*v20);
  }
  v23 = (_QWORD *)((char *)a1 + a2[8]);
  v24 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v23).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100093940(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  void *v56;
  void (*v57)(_QWORD *, _QWORD, uint64_t, int *);
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  int *v103;
  char *v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *__dsta;
  char *__dst;
  uint64_t v112;

  v6 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
    v9 = v8[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    v13 = *((_QWORD *)v12 - 1);
    v112 = v6;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10000B4C8(&qword_100548310);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v102 = v13;
      v103 = a3;
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = v11[3];
      v10[2] = v11[2];
      v10[3] = v18;
      v19 = v11[5];
      v10[4] = v11[4];
      v10[5] = v19;
      v20 = v12[7];
      v107 = (char *)v11 + v20;
      __dsta = (char *)v10 + v20;
      v21 = type metadata accessor for URL(0);
      v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v105(__dsta, v107, v21);
      v22 = v12[8];
      v23 = (_QWORD *)((char *)v10 + v22);
      v24 = (_QWORD *)((char *)v11 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = v12[9];
      v27 = (_QWORD *)((char *)v10 + v26);
      v28 = (_QWORD *)((char *)v11 + v26);
      v108 = v28[1];
      *v27 = *v28;
      v27[1] = v108;
      v29 = v12[10];
      v30 = (_QWORD *)((char *)v10 + v29);
      v31 = (_QWORD *)((char *)v11 + v29);
      v106 = v31[1];
      *v30 = *v31;
      v30[1] = v106;
      v32 = v12[11];
      v33 = (_QWORD *)((char *)v10 + v32);
      v34 = (_QWORD *)((char *)v11 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v12[12];
      v37 = (_QWORD *)((char *)v10 + v36);
      v38 = (_QWORD *)((char *)v11 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v12[13];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      __dst = (char *)v10 + v44;
      v104 = (char *)v11 + v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(void))(v46 + 48))())
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v104, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v102;
        a3 = v103;
      }
      else
      {
        v49 = type metadata accessor for Playlist.Variant(0);
        v50 = *(_QWORD *)(v49 - 8);
        v109 = v49;
        if ((*(unsigned int (**)(char *, uint64_t))(v50 + 48))(v104, 1))
        {
          v51 = sub_10000B4C8(&qword_100548358);
          v52 = __dst;
          memcpy(__dst, v104, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v104, v109);
          v53 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56);
          v52 = __dst;
          v53(__dst, 0, 1, v109);
        }
        v54 = v52;
        v48 = v102;
        a3 = v103;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v54, 0, 10, v45);
      }
      *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
      v55 = v12[18];
      v56 = *(void **)((char *)v11 + v55);
      *(_QWORD *)((char *)v10 + v55) = v56;
      *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
      v57 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v48 + 56);
      v58 = v56;
      swift_bridgeObjectRetain();
      v57(v10, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v59 = v8[8];
    v60 = *(void **)((char *)a2 + v59);
    *(_QWORD *)((char *)a1 + v59) = v60;
    v61 = v8[9];
    v62 = (char *)a1 + v61;
    v63 = (char *)a2 + v61;
    v64 = type metadata accessor for TimelineEntryRelevance(0);
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
    swift_bridgeObjectRetain();
    v66 = v60;
    v65(v62, v63, v64);
    v67 = v8[10];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    swift_bridgeObjectRetain();
    v16 = 1;
    v6 = v112;
  }
  else
  {
    v15 = *a2;
    *a1 = *a2;
    swift_retain(v15);
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v16);
  v71 = a3[5];
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = *(_QWORD *)v73;
  v75 = v73[8];
  sub_10004C60C(*(_QWORD *)v73, v75);
  *(_QWORD *)v72 = v74;
  v72[8] = v75;
  v76 = a3[6];
  v77 = (_QWORD *)((char *)a1 + v76);
  v78 = (_QWORD *)((char *)a2 + v76);
  v79 = sub_10000B4C8(&qword_100549378);
  if (swift_getEnumCaseMultiPayload(v78, v79) == 1)
  {
    v80 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v77, v78, v80);
    v81 = 1;
  }
  else
  {
    v82 = *v78;
    *v77 = *v78;
    swift_retain(v82);
    v81 = 0;
  }
  swift_storeEnumTagMultiPayload(v77, v79, v81);
  v83 = a3[7];
  v84 = (_QWORD *)((char *)a1 + v83);
  v85 = (_QWORD *)((char *)a2 + v83);
  v86 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v85, v86) == 1)
  {
    v87 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v84, v85, v87);
    v88 = v84;
    v89 = v86;
    v90 = 1;
  }
  else
  {
    v91 = *v85;
    *v84 = *v85;
    swift_retain(v91);
    v88 = v84;
    v89 = v86;
    v90 = 0;
  }
  swift_storeEnumTagMultiPayload(v88, v89, v90);
  v92 = a3[8];
  v93 = (_QWORD *)((char *)a1 + v92);
  v94 = (_QWORD *)((char *)a2 + v92);
  v95 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v94, v95) == 1)
  {
    v96 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v93, v94, v96);
    v97 = v93;
    v98 = v95;
    v99 = 1;
  }
  else
  {
    v100 = *v94;
    *v93 = *v94;
    swift_retain(v100);
    v97 = v93;
    v98 = v95;
    v99 = 0;
  }
  swift_storeEnumTagMultiPayload(v97, v98, v99);
  return a1;
}

_QWORD *sub_100093EF4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  void *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  id v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  uint64_t v98;
  char *__dsta;
  char *__dst;
  uint64_t v101;
  int *v102;
  int *v103;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005499E0);
    v6 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      v9 = v8[6];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = (int *)type metadata accessor for WidgetMusicItem(0);
      v13 = *((_QWORD *)v12 - 1);
      v103 = a3;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_100548310);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v101 = v13;
        v102 = v8;
        *v10 = *v11;
        v10[1] = v11[1];
        v10[2] = v11[2];
        v10[3] = v11[3];
        v10[4] = v11[4];
        v10[5] = v11[5];
        v17 = v12[7];
        v97 = (char *)v11 + v17;
        __dsta = (char *)v10 + v17;
        v18 = type metadata accessor for URL(0);
        v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96(__dsta, v97, v18);
        v19 = v12[8];
        v20 = (_QWORD *)((char *)v10 + v19);
        v21 = (_QWORD *)((char *)v11 + v19);
        *v20 = *v21;
        v20[1] = v21[1];
        v22 = v12[9];
        v23 = (_QWORD *)((char *)v10 + v22);
        v24 = (_QWORD *)((char *)v11 + v22);
        *v23 = *v24;
        v23[1] = v24[1];
        v25 = v12[10];
        v26 = (_QWORD *)((char *)v10 + v25);
        v27 = (_QWORD *)((char *)v11 + v25);
        *v26 = *v27;
        v26[1] = v27[1];
        v28 = v12[11];
        v29 = (_QWORD *)((char *)v10 + v28);
        v30 = (_QWORD *)((char *)v11 + v28);
        *v29 = *v30;
        v29[1] = v30[1];
        v31 = v12[12];
        v32 = (_QWORD *)((char *)v10 + v31);
        v33 = (_QWORD *)((char *)v11 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        v34 = v12[13];
        v35 = (_QWORD *)((char *)v10 + v34);
        v36 = (_QWORD *)((char *)v11 + v34);
        *v35 = *v36;
        v35[1] = v36[1];
        *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        v37 = v12[16];
        __dst = (char *)v10 + v37;
        v95 = (char *)v11 + v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_10000B4C8(&qword_100547B50);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(void))(v39 + 48))())
        {
          v40 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v95, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          v41 = v101;
        }
        else
        {
          v42 = type metadata accessor for Playlist.Variant(0);
          v43 = *(_QWORD *)(v42 - 8);
          v98 = v42;
          if ((*(unsigned int (**)(char *, uint64_t))(v43 + 48))(v95, 1))
          {
            v44 = sub_10000B4C8(&qword_100548358);
            v45 = __dst;
            memcpy(__dst, v95, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v95, v98);
            v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56);
            v45 = __dst;
            v46(__dst, 0, 1, v98);
          }
          v41 = v101;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v45, 0, 10, v38);
        }
        *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
        v47 = v12[18];
        v48 = *(void **)((char *)v11 + v47);
        *(_QWORD *)((char *)v10 + v47) = v48;
        *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
        v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v41 + 56);
        v50 = v48;
        swift_bridgeObjectRetain();
        v49(v10, 0, 1, v12);
        v8 = v102;
      }
      *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
      v51 = v8[8];
      v52 = *(void **)((char *)a2 + v51);
      *(_QWORD *)((char *)a1 + v51) = v52;
      v53 = v8[9];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      v56 = type metadata accessor for TimelineEntryRelevance(0);
      v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      v58 = v52;
      v57(v54, v55, v56);
      v59 = v8[10];
      v60 = (_QWORD *)((char *)a1 + v59);
      v61 = (_QWORD *)((char *)a2 + v59);
      *v60 = *v61;
      v60[1] = v61[1];
      swift_bridgeObjectRetain();
      v16 = 1;
      a3 = v103;
    }
    else
    {
      v15 = *a2;
      *a1 = *a2;
      swift_retain(v15);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v16);
  }
  v62 = a3[5];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = *(_QWORD *)v64;
  v66 = v64[8];
  sub_10004C60C(*(_QWORD *)v64, v66);
  v67 = *(_QWORD *)v63;
  v68 = v63[8];
  *(_QWORD *)v63 = v65;
  v63[8] = v66;
  sub_10004CAC0(v67, v68);
  if (a1 != a2)
  {
    v69 = a3[6];
    v70 = (_QWORD *)((char *)a1 + v69);
    v71 = (_QWORD *)((char *)a2 + v69);
    sub_100011694((uint64_t)a1 + v69, &qword_100549378);
    v72 = sub_10000B4C8(&qword_100549378);
    if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
    {
      v73 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v70, v71, v73);
      v74 = 1;
    }
    else
    {
      v75 = *v71;
      *v70 = *v71;
      swift_retain(v75);
      v74 = 0;
    }
    swift_storeEnumTagMultiPayload(v70, v72, v74);
    v76 = a3[7];
    v77 = (_QWORD *)((char *)a1 + v76);
    v78 = (_QWORD *)((char *)a2 + v76);
    sub_100011694((uint64_t)a1 + v76, &qword_1005486F8);
    v79 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v78, v79) == 1)
    {
      v80 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v77, v78, v80);
      v81 = v77;
      v82 = v79;
      v83 = 1;
    }
    else
    {
      v84 = *v78;
      *v77 = *v78;
      swift_retain(v84);
      v81 = v77;
      v82 = v79;
      v83 = 0;
    }
    swift_storeEnumTagMultiPayload(v81, v82, v83);
    v85 = a3[8];
    v86 = (_QWORD *)((char *)a1 + v85);
    v87 = (_QWORD *)((char *)a2 + v85);
    sub_100011694((uint64_t)a1 + v85, &qword_100548908);
    v88 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v87, v88) == 1)
    {
      v89 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v86, v87, v89);
      v90 = v86;
      v91 = v88;
      v92 = 1;
    }
    else
    {
      v93 = *v87;
      *v86 = *v87;
      swift_retain(v93);
      v90 = v86;
      v91 = v88;
      v92 = 0;
    }
    swift_storeEnumTagMultiPayload(v90, v91, v92);
  }
  return a1;
}

_BYTE *sub_10009456C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *__dst;
  uint64_t v58;
  uint64_t v59;
  char *__src;

  v6 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    a1[v8[5]] = a2[v8[5]];
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10000B4C8(&qword_100548310);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v58 = v6;
      v59 = v13;
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v10[2] = v11[2];
      v16 = v12[7];
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
      *(_OWORD *)((char *)v10 + v12[9]) = *(_OWORD *)((char *)v11 + v12[9]);
      *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
      *(_OWORD *)((char *)v10 + v12[11]) = *(_OWORD *)((char *)v11 + v12[11]);
      *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
      *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
      *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v20 = v12[16];
      __dst = (char *)v10 + v20;
      v21 = (char *)v11 + v20;
      v22 = sub_10000B4C8(&qword_100547B50);
      v23 = *(_QWORD *)(v22 - 8);
      __src = v21;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
      {
        v24 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v6 = v58;
        v25 = v59;
      }
      else
      {
        v55 = v23;
        v56 = v22;
        v26 = type metadata accessor for Playlist.Variant(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(__src, 1, v26))
        {
          v28 = sub_10000B4C8(&qword_100548358);
          v29 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v54 = v27;
          v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
          v29 = __dst;
          v30(__dst, __src, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v26);
        }
        v6 = v58;
        v25 = v59;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v29, 0, 10, v56);
      }
      *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
      *(_QWORD *)((char *)v10 + v12[18]) = *(_QWORD *)((char *)v11 + v12[18]);
      *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v10, 0, 1, v12);
    }
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
    v31 = v8[9];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v35 = a3[5];
  v36 = a3[6];
  v37 = &a1[v35];
  v38 = &a2[v35];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  v39 = &a1[v36];
  v40 = &a2[v36];
  v41 = sub_10000B4C8(&qword_100549378);
  if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
  {
    v42 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
    swift_storeEnumTagMultiPayload(v39, v41, 1);
  }
  else
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  v43 = a3[7];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
  {
    v47 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
    swift_storeEnumTagMultiPayload(v44, v46, 1);
  }
  else
  {
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  v48 = a3[8];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
  {
    v52 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v49, v50, v52);
    swift_storeEnumTagMultiPayload(v49, v51, 1);
  }
  else
  {
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_100094A58(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *__dst;
  uint64_t v59;
  char *__src;
  uint64_t v61;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005499E0);
    v6 = sub_10000B4C8(&qword_1005499E0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
      a1[v8[5]] = a2[v8[5]];
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = (int *)type metadata accessor for WidgetMusicItem(0);
      v13 = *((_QWORD *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_100548310);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v59 = v6;
        v61 = v13;
        v15 = v11[1];
        *v10 = *v11;
        v10[1] = v15;
        v10[2] = v11[2];
        v16 = v12[7];
        v17 = (char *)v10 + v16;
        v18 = (char *)v11 + v16;
        v19 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        *(_OWORD *)((char *)v10 + v12[8]) = *(_OWORD *)((char *)v11 + v12[8]);
        *(_OWORD *)((char *)v10 + v12[9]) = *(_OWORD *)((char *)v11 + v12[9]);
        *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
        *(_OWORD *)((char *)v10 + v12[11]) = *(_OWORD *)((char *)v11 + v12[11]);
        *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
        *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
        *(_QWORD *)((char *)v10 + v12[14]) = *(_QWORD *)((char *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        v20 = v12[16];
        __dst = (char *)v10 + v20;
        v21 = (char *)v11 + v20;
        v22 = sub_10000B4C8(&qword_100547B50);
        v23 = *(_QWORD *)(v22 - 8);
        __src = v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
        {
          v24 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          v25 = v61;
          v6 = v59;
        }
        else
        {
          v56 = v23;
          v57 = v22;
          v26 = type metadata accessor for Playlist.Variant(0);
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(__src, 1, v26))
          {
            v28 = sub_10000B4C8(&qword_100548358);
            v29 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            v29 = __dst;
            (*(void (**)(void))(v27 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
          }
          v6 = v59;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v29, 0, 10, v57);
          v25 = v61;
        }
        *(_QWORD *)((char *)v10 + v12[17]) = *(_QWORD *)((char *)v11 + v12[17]);
        *(_QWORD *)((char *)v10 + v12[18]) = *(_QWORD *)((char *)v11 + v12[18]);
        *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
      v30 = v8[9];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = type metadata accessor for TimelineEntryRelevance(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v34 = a3[5];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *(_QWORD *)v36;
  LOBYTE(v36) = v36[8];
  v38 = *(_QWORD *)v35;
  v39 = v35[8];
  *(_QWORD *)v35 = v37;
  v35[8] = (char)v36;
  sub_10004CAC0(v38, v39);
  if (a1 != a2)
  {
    v40 = a3[6];
    v41 = &a1[v40];
    v42 = &a2[v40];
    sub_100011694((uint64_t)&a1[v40], &qword_100549378);
    v43 = sub_10000B4C8(&qword_100549378);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
      swift_storeEnumTagMultiPayload(v41, v43, 1);
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    v45 = a3[7];
    v46 = &a1[v45];
    v47 = &a2[v45];
    sub_100011694((uint64_t)&a1[v45], &qword_1005486F8);
    v48 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
    {
      v49 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v46, v47, v49);
      swift_storeEnumTagMultiPayload(v46, v48, 1);
    }
    else
    {
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    v50 = a3[8];
    v51 = &a1[v50];
    v52 = &a2[v50];
    sub_100011694((uint64_t)&a1[v50], &qword_100548908);
    v53 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
    {
      v54 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
      swift_storeEnumTagMultiPayload(v51, v53, 1);
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100094FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100094FB4);
}

uint64_t sub_100094FB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_10000B4C8(&qword_10054A9E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = sub_10000B4C8(&qword_100549438);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[6];
    }
    else
    {
      v14 = sub_10000B4C8(&qword_100548738);
      v11 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
      {
        v12 = v14;
        v13 = a3[7];
      }
      else
      {
        v12 = sub_10000B4C8(&qword_100548918);
        v11 = *(_QWORD *)(v12 - 8);
        v13 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_1000950B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000950BC);
}

uint64_t sub_1000950BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_10000B4C8(&qword_10054A9E0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[5] + 8) = -(char)a2;
      return result;
    }
    v13 = sub_10000B4C8(&qword_100549438);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_10000B4C8(&qword_100548738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = sub_10000B4C8(&qword_100548918);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000951B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_10002E8E4(319, (unint64_t *)&unk_10054AA50, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = "\t";
    sub_10002E8E4(319, (unint64_t *)&unk_1005494A8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_1005487B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

unint64_t sub_1000952E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054AC58;
  if (!qword_10054AC58)
  {
    v1 = sub_100011650(&qword_10054AC60);
    v2[0] = sub_100056068(&qword_10054A9A0, &qword_10054A998, (uint64_t (*)(void))sub_10008EEC0, (uint64_t (*)(void))sub_10008EF5C);
    v2[1] = &protocol witness table for Text;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054AC58);
  }
  return result;
}

uint64_t sub_10009536C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482BC8, 1);
}

uint64_t sub_10009537C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482BA0, 1);
}

uint64_t sub_10009538C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482B78, 1);
}

uint64_t sub_10009539C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482B50, 1);
}

uint64_t sub_1000953AC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Text.TruncationMode(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.truncationMode.setter(v3);
}

unint64_t sub_100095428()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054AC98;
  if (!qword_10054AC98)
  {
    v1 = sub_100011650(&qword_10054AC78);
    v2[0] = sub_100012324(&qword_10054ACA0, &qword_10054AC70, "q8\r");
    v2[1] = sub_100012324(&qword_100549638, &qword_1005495F0, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054AC98);
  }
  return result;
}

unint64_t sub_1000954CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054ACC8;
  if (!qword_10054ACC8)
  {
    v1 = sub_100011650(&qword_100548A88);
    v2[0] = sub_10001254C(&qword_1005496A0, type metadata accessor for ArtworkView, (uint64_t)&unk_1004257A8);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054ACC8);
  }
  return result;
}

uint64_t sub_100095558()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_100095594(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = sub_100012324(a3, a4, "q8\r");
    v9[1] = sub_100012324(&qword_10054AD78, &qword_10054AD60, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009562C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054ADE0;
  if (!qword_10054ADE0)
  {
    v1 = sub_100011650(&qword_10054ADC0);
    v2[0] = sub_1000956B0();
    v2[1] = sub_100012324(&qword_100548B08, &qword_100548A18, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054ADE0);
  }
  return result;
}

unint64_t sub_1000956B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054ADE8;
  if (!qword_10054ADE8)
  {
    v1 = sub_100011650(&qword_10054ADB8);
    v2[0] = sub_100095734();
    v2[1] = sub_100012324(&qword_100548AF8, &qword_100548B00, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054ADE8);
  }
  return result;
}

unint64_t sub_100095734()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054ADF0;
  if (!qword_10054ADF0)
  {
    v1 = sub_100011650(&qword_10054ADB0);
    v2[0] = sub_1000957B8();
    v2[1] = sub_100012324(&qword_100548AE0, &qword_100548A40, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054ADF0);
  }
  return result;
}

unint64_t sub_1000957B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054ADF8;
  if (!qword_10054ADF8)
  {
    v1 = sub_100011650(&qword_10054AE00);
    v2[0] = &protocol witness table for Text;
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054ADF8);
  }
  return result;
}

uint64_t sub_100095824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  sub_10001DA20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v5);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v4);
  swift_release(v6);
  return a1;
}

uint64_t sub_100095898(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 144);
  v3 = *(_QWORD *)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 168);
  sub_10002EBA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v5);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

unint64_t sub_10009590C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054AF68;
  if (!qword_10054AF68)
  {
    v1 = sub_100011650(&qword_10054AF40);
    v2[0] = sub_100095990();
    v2[1] = sub_100012324(&qword_100548B08, &qword_100548A18, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054AF68);
  }
  return result;
}

unint64_t sub_100095990()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054AF70;
  if (!qword_10054AF70)
  {
    v1 = sub_100011650(&qword_10054AF38);
    v2[0] = sub_100095A14();
    v2[1] = sub_100012324(&qword_100548AF8, &qword_100548B00, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054AF70);
  }
  return result;
}

unint64_t sub_100095A14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054AF78;
  if (!qword_10054AF78)
  {
    v1 = sub_100011650(&qword_10054AF30);
    v2[0] = sub_100095AB8(&qword_10054AF80, &qword_10054AF28, &qword_100548AE8, &qword_100548AF0);
    v2[1] = sub_100012324(&qword_10054AF88, &qword_10054ACD8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054AF78);
  }
  return result;
}

uint64_t sub_100095AB8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = sub_1000962C0((unint64_t *)&qword_100549730, &qword_100549700, &qword_100548AE0, &qword_100548A40);
    v9[1] = sub_100012324(a3, a4, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100095B60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  _QWORD v4[2];
  uint64_t v5;
  unint64_t v6;

  result = qword_10054AF90;
  if (!qword_10054AF90)
  {
    v1 = sub_100011650(&qword_10054AF58);
    v2 = sub_100011650(&qword_10054AF48);
    v5 = sub_100011650(&qword_10054AF40);
    v6 = sub_10009590C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    v5 = v2;
    v6 = OpaqueTypeConformance2;
    v4[0] = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    v4[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_10054AF90);
  }
  return result;
}

uint64_t sub_100095C24()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v1 = (int *)type metadata accessor for RecentlyPlayedLargeContentView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
    v9 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    v10 = (_QWORD *)((char *)v6 + v9[6]);
    v11 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
    {
      v30 = v5;
      swift_bridgeObjectRelease(v10[1]);
      swift_bridgeObjectRelease(v10[3]);
      swift_bridgeObjectRelease(v10[5]);
      v12 = (char *)v10 + v11[7];
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[14]));
      v14 = (char *)v10 + v11[16];
      v15 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
      {
        v16 = type metadata accessor for Playlist.Variant(0);
        v29 = *(_QWORD *)(v16 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v14, 1, v16))
          (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v16);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[19]));
      v5 = v30;
    }
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v9[7]));

    v17 = (char *)v6 + v9[9];
    v18 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v9[10] + 8));
  }
  else
  {
    swift_release(*v6);
  }
  v19 = (_QWORD *)((char *)v6 + v1[5]);
  v20 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
  }
  else
  {
    swift_release(*v19);
  }
  v22 = (_QWORD *)((char *)v6 + v1[6]);
  v23 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {
    swift_release(*v22);
  }
  v25 = (_QWORD *)((char *)v6 + v1[7]);
  v26 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
  }
  else
  {
    swift_release(*v25);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100095F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100096B4C(a1, (void (*)(_QWORD))type metadata accessor for RecentlyPlayedLargeContentView, (uint64_t)sub_100095FA0, a2);
}

uint64_t sub_100095FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10008D720(*(_QWORD *)(v1 + 16), a1);
}

uint64_t _s12MusicWidgets12SongCellViewVMa_1(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054B2D0, (uint64_t)&_s12MusicWidgets12SongCellViewVMn_1);
}

unint64_t sub_100095FCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B018;
  if (!qword_10054B018)
  {
    v1 = sub_100011650(&qword_10054AFE0);
    v2[0] = sub_100095AB8(&qword_10054B020, &qword_10054AFD8, &qword_100548AF8, &qword_100548B00);
    v2[1] = sub_100012324(&qword_100548B08, &qword_100548A18, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B018);
  }
  return result;
}

unint64_t sub_100096070()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10054B030;
  if (!qword_10054B030)
  {
    v1 = sub_100011650(&qword_10054AFF8);
    v3[0] = sub_100011650(&qword_10054AFE8);
    v3[1] = sub_10002F800(&qword_10054B010, &qword_10054AFE8, (uint64_t (*)(void))sub_100095FCC, (uint64_t)&protocol witness table for _OpacityEffect);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B030);
  }
  return result;
}

unint64_t sub_10009612C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B048;
  if (!qword_10054B048)
  {
    v1 = sub_100011650(&qword_10054B050);
    v2[0] = sub_1000961B0();
    v2[1] = sub_100012324((unint64_t *)&qword_100548FF0, &qword_100548FF8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B048);
  }
  return result;
}

unint64_t sub_1000961B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B058;
  if (!qword_10054B058)
  {
    v1 = sub_100011650(&qword_10054B060);
    v2[0] = sub_100096234();
    v2[1] = sub_100012324(&qword_100548AF8, &qword_100548B00, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B058);
  }
  return result;
}

unint64_t sub_100096234()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B068;
  if (!qword_10054B068)
  {
    v1 = sub_100011650(&qword_10054B070);
    v2[0] = sub_1000962C0(&qword_10054B078, &qword_10054B080, &qword_100549B78, &qword_100549B80);
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B068);
  }
  return result;
}

uint64_t sub_1000962C0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = &protocol witness table for Text;
    v9[1] = sub_100012324(a3, a4, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100096340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 168);
  v6 = *(_QWORD *)(a1 + 176);
  v7 = *(_QWORD *)(a1 + 184);
  sub_10001DA20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v5);
  swift_release(v7);
  return a1;
}

unint64_t sub_1000963C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B170;
  if (!qword_10054B170)
  {
    v1 = sub_100011650(&qword_10054B158);
    v2[0] = sub_100096448();
    v2[1] = sub_100012324(&qword_10054AF88, &qword_10054ACD8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B170);
  }
  return result;
}

unint64_t sub_100096448()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B178;
  if (!qword_10054B178)
  {
    v1 = sub_100011650(&qword_10054B150);
    v2[0] = sub_10002F800(&qword_10054B180, &qword_100549B58, (uint64_t (*)(void))sub_1000964EC, (uint64_t)&protocol witness table for _FlexFrameLayout);
    v2[1] = sub_100012324(&qword_100548AE8, &qword_100548AF0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B178);
  }
  return result;
}

unint64_t sub_1000964EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B188;
  if (!qword_10054B188)
  {
    v1 = sub_100011650(&qword_100549B50);
    v2[0] = sub_100096578(&qword_10054B190, &qword_10054B148, &qword_10054B198, &qword_10054B140);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B188);
  }
  return result;
}

uint64_t sub_100096578(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = sub_100012324(a3, a4, (const char *)&protocol conformance descriptor for VStack<A>);
    v9[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000965F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549B10;
  if (!qword_100549B10)
  {
    v1 = sub_100011650(&qword_100549B18);
    v2[0] = sub_100096578((unint64_t *)&qword_100549B20, &qword_100549B28, &qword_100549B30, &qword_100549B38);
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549B10);
  }
  return result;
}

unint64_t sub_100096684()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B1E8;
  if (!qword_10054B1E8)
  {
    v1 = sub_100011650(&qword_10054B1C0);
    v2[0] = sub_100096708();
    v2[1] = sub_100012324((unint64_t *)&qword_100548FF0, &qword_100548FF8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B1E8);
  }
  return result;
}

unint64_t sub_100096708()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B1F0;
  if (!qword_10054B1F0)
  {
    v1 = sub_100011650(&qword_10054B1B8);
    v2[0] = sub_10009678C();
    v2[1] = sub_100012324(&qword_100548AF8, &qword_100548B00, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B1F0);
  }
  return result;
}

unint64_t sub_10009678C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B1F8;
  if (!qword_10054B1F8)
  {
    v1 = sub_100011650(&qword_10054B1B0);
    v2[0] = sub_1000962C0(&qword_10054B200, &qword_10054B208, &qword_100548AE8, &qword_100548AF0);
    v2[1] = sub_100012324(&qword_10054AF88, &qword_10054ACD8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B1F8);
  }
  return result;
}

uint64_t sub_100096830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for RecentlyPlayedExtraLargeContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000B4C8(&qword_1005499E0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
    v9 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    v10 = (_QWORD *)((char *)v6 + v9[6]);
    v11 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease(v10[1]);
      swift_bridgeObjectRelease(v10[3]);
      swift_bridgeObjectRelease(v10[5]);
      v12 = (char *)v10 + v11[7];
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[14]));
      v14 = (char *)v10 + v11[16];
      v15 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
      {
        v16 = type metadata accessor for Playlist.Variant(0);
        v26 = *(_QWORD *)(v16 - 8);
        v27 = v16;
        if (!(*(unsigned int (**)(char *, uint64_t))(v26 + 48))(v14, 1))
          (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[19]));
    }
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v9[7]));

    v17 = (char *)v6 + v9[9];
    v18 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v9[10] + 8));
  }
  else
  {
    swift_release(*v6);
  }
  v19 = (_QWORD *)((char *)v6 + *(int *)(v1 + 20));
  v20 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
  }
  else
  {
    swift_release(*v19);
  }
  v22 = (_QWORD *)((char *)v6 + *(int *)(v1 + 24));
  v23 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {
    swift_release(*v22);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100096B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100096B4C(a1, (void (*)(_QWORD))type metadata accessor for RecentlyPlayedExtraLargeContentView, (uint64_t)sub_10009ED50, a2);
}

uint64_t sub_100096B4C@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  a2(0);
  return sub_10008D494(a1, a3, a4);
}

uint64_t *sub_100096BA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void (*v54)(uint64_t *, _QWORD, uint64_t, int *);
  id v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for WidgetMusicItem(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100548310);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v66 = v8;
      v67 = v6;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      v14 = v7[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for URL(0);
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      v19 = v7[8];
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      v23 = v7[9];
      v24 = (uint64_t *)((char *)a1 + v23);
      v25 = (uint64_t *)((char *)a2 + v23);
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      v27 = v7[10];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = v7[11];
      v32 = (uint64_t *)((char *)a1 + v31);
      v33 = (uint64_t *)((char *)a2 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      v35 = v7[12];
      v36 = (uint64_t *)((char *)a1 + v35);
      v37 = (uint64_t *)((char *)a2 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v39 = v7[13];
      v40 = (uint64_t *)((char *)a1 + v39);
      v41 = (uint64_t *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
      v43 = v7[16];
      __dst = (char *)a1 + v43;
      v44 = (char *)a2 + v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 10, v45))
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v66;
        v6 = v67;
      }
      else
      {
        v49 = type metadata accessor for Playlist.Variant(0);
        v50 = *(_QWORD *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v44, 1, v49))
        {
          v51 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v44, v49);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
        }
        v48 = v66;
        v6 = v67;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 10, v45);
      }
      *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
      v52 = v7[18];
      v53 = *(void **)((char *)a2 + v52);
      *(uint64_t *)((char *)a1 + v52) = (uint64_t)v53;
      *(uint64_t *)((char *)a1 + v7[19]) = *(uint64_t *)((char *)a2 + v7[19]);
      v54 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v48 + 56);
      v55 = v53;
      swift_bridgeObjectRetain();
      v54(a1, 0, 1, v7);
    }
    v56 = *(int *)(v6 + 20);
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    v59 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v57, v58, v60);
      v61 = v57;
      v62 = v59;
      v63 = 1;
    }
    else
    {
      v64 = *v58;
      *v57 = *v58;
      swift_retain(v64);
      v61 = v57;
      v62 = v59;
      v63 = 0;
    }
    swift_storeEnumTagMultiPayload(v61, v62, v63);
  }
  return a1;
}

double sub_100096F50(_QWORD *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v4 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[5]);
    v5 = (char *)a1 + v4[7];
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[14]));
    v7 = (char *)a1 + v4[16];
    v8 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 10, v8))
    {
      v9 = type metadata accessor for Playlist.Variant(0);
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
        (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[19]));
  }
  v11 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v12 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v11).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100097128(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void (*v52)(_QWORD *, _QWORD, uint64_t, int *);
  id v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *__dst;
  uint64_t v65;
  uint64_t v66;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v65 = v7;
    v66 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = v6[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = v6[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[9];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v6[10];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v6[11];
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v6[12];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v6[13];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v41 = v6[16];
    __dst = (char *)a1 + v41;
    v42 = (char *)a2 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_10000B4C8(&qword_100547B50);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 10, v43))
    {
      v45 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      v46 = v65;
    }
    else
    {
      v47 = type metadata accessor for Playlist.Variant(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v42, 1, v47))
      {
        v49 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(__dst, v42, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
      }
      v46 = v65;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 10, v43);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v50 = v6[18];
    v51 = *(void **)((char *)a2 + v50);
    *(_QWORD *)((char *)a1 + v50) = v51;
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    v52 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v46 + 56);
    v53 = v51;
    swift_bridgeObjectRetain();
    v52(a1, 0, 1, v6);
    a3 = v66;
  }
  v54 = *(int *)(a3 + 20);
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v57 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v56, v57) == 1)
  {
    v58 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v56, v58);
    v59 = v55;
    v60 = v57;
    v61 = 1;
  }
  else
  {
    v62 = *v56;
    *v55 = *v56;
    swift_retain(v62);
    v59 = v55;
    v60 = v57;
    v61 = 0;
  }
  swift_storeEnumTagMultiPayload(v59, v60, v61);
  return a1;
}

_QWORD *sub_1000974AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, int *);
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  void *v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;
  uint64_t v114;
  uint64_t v115;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
LABEL_7:
      v39 = sub_10000B4C8(&qword_100548310);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      if (a1 == a2)
        return a1;
      goto LABEL_29;
    }
    *a1 = *a2;
    v40 = a1[1];
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    a1[2] = a2[2];
    v41 = a1[3];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v41);
    a1[4] = a2[4];
    v42 = a1[5];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v42);
    v43 = v6[7];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
    v47 = v6[8];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (_QWORD *)((char *)a2 + v47);
    *v48 = *v49;
    v50 = v48[1];
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v50);
    v51 = v6[9];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    *v52 = *v53;
    v54 = v52[1];
    v52[1] = v53[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v54);
    v55 = v6[10];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)a2 + v55);
    *v56 = *v57;
    v58 = v56[1];
    v56[1] = v57[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v59 = v6[11];
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    *v60 = *v61;
    v62 = v60[1];
    v60[1] = v61[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v62);
    v63 = v6[12];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    *v64 = *v65;
    v66 = v64[1];
    v64[1] = v65[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v66);
    v67 = v6[13];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    *v68 = *v69;
    v70 = v68[1];
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v70);
    v71 = v6[14];
    v72 = *(_QWORD *)((char *)a1 + v71);
    *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v73 = v6[16];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = sub_10000B4C8(&qword_100547B50);
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    v79 = v78(v74, 10, v76);
    v80 = v78(v75, 10, v76);
    if (v79)
    {
      if (!v80)
      {
        v81 = type metadata accessor for Playlist.Variant(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81))
        {
          v83 = sub_10000B4C8(&qword_100548358);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v74, v75, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v74, 0, 1, v81);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 10, v76);
LABEL_28:
        *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
        v97 = v6[18];
        v98 = *(void **)((char *)a1 + v97);
        v99 = *(void **)((char *)a2 + v97);
        *(_QWORD *)((char *)a1 + v97) = v99;
        v100 = v99;

        v101 = v6[19];
        v102 = *(_QWORD *)((char *)a1 + v101);
        *(_QWORD *)((char *)a1 + v101) = *(_QWORD *)((char *)a2 + v101);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v102);
        if (a1 == a2)
          return a1;
        goto LABEL_29;
      }
    }
    else
    {
      if (!v80)
      {
        v92 = type metadata accessor for Playlist.Variant(0);
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
        v95 = v94(v74, 1, v92);
        v96 = v94(v75, 1, v92);
        if (v95)
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v74, v75, v92);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v74, 0, 1, v92);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v74, v75, v92);
            goto LABEL_28;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v92);
        }
        v87 = sub_10000B4C8(&qword_100548358);
LABEL_18:
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        goto LABEL_28;
      }
      sub_100011694((uint64_t)v74, &qword_100547B50);
    }
    v87 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_18;
  }
  if (v10)
    goto LABEL_7;
  v114 = v7;
  v115 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for URL(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = v6[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v19 = v6[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = v6[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = v6[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = v6[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = v6[13];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  v34 = v6[16];
  __dst = (char *)a1 + v34;
  v35 = (char *)a2 + v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = sub_10000B4C8(&qword_100547B50);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
  {
    v38 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    a3 = v115;
  }
  else
  {
    v84 = type metadata accessor for Playlist.Variant(0);
    v85 = *(_QWORD *)(v84 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v35, 1, v84))
    {
      v86 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dst, v35, v84);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
    }
    a3 = v115;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 10, v36);
  }
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v88 = v6[18];
  v89 = *(void **)((char *)a2 + v88);
  *(_QWORD *)((char *)a1 + v88) = v89;
  *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
  v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v114 + 56);
  v91 = v89;
  swift_bridgeObjectRetain();
  v90(a1, 0, 1, v6);
  if (a1 != a2)
  {
LABEL_29:
    v103 = *(int *)(a3 + 20);
    v104 = (_QWORD *)((char *)a1 + v103);
    v105 = (_QWORD *)((char *)a2 + v103);
    sub_100011694((uint64_t)a1 + v103, &qword_100548908);
    v106 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v105, v106) == 1)
    {
      v107 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v104, v105, v107);
      v108 = v104;
      v109 = v106;
      v110 = 1;
    }
    else
    {
      v111 = *v105;
      *v104 = *v105;
      swift_retain(v111);
      v108 = v104;
      v109 = v106;
      v110 = 0;
    }
    swift_storeEnumTagMultiPayload(v108, v109, v110);
  }
  return a1;
}

_OWORD *sub_100097C84(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void (*v24)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *__dst;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v14 = v6[16];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_10000B4C8(&qword_100547B50);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 10, v17))
    {
      v19 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      __dst = v15;
      v20 = type metadata accessor for Playlist.Variant(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20))
      {
        v22 = sub_10000B4C8(&qword_100548358);
        v23 = __dst;
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v21 + 32))(__dst, v16, v20);
        v24 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56);
        v23 = __dst;
        v24(__dst, 0, 1, v20);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, 0, 10, v17);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v25 = *(int *)(a3 + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload(v26, v28, 1);
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100097F64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
LABEL_7:
      v22 = sub_10000B4C8(&qword_100548310);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      if (a1 == a2)
        return a1;
      goto LABEL_32;
    }
    v102 = a3;
    v23 = a2[1];
    v24 = a1[1];
    *a1 = *a2;
    a1[1] = v23;
    swift_bridgeObjectRelease(v24);
    v25 = a2[3];
    v26 = a1[3];
    a1[2] = a2[2];
    a1[3] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = a2[5];
    v28 = a1[5];
    a1[4] = a2[4];
    a1[5] = v27;
    swift_bridgeObjectRelease(v28);
    v29 = v6[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
    v33 = v6[8];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v37 = *v35;
    v36 = v35[1];
    v38 = v34[1];
    *v34 = v37;
    v34[1] = v36;
    swift_bridgeObjectRelease(v38);
    v39 = v6[9];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v43 = *v41;
    v42 = v41[1];
    v44 = v40[1];
    *v40 = v43;
    v40[1] = v42;
    swift_bridgeObjectRelease(v44);
    v45 = v6[10];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v49 = *v47;
    v48 = v47[1];
    v50 = v46[1];
    *v46 = v49;
    v46[1] = v48;
    swift_bridgeObjectRelease(v50);
    v51 = v6[11];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v55 = *v53;
    v54 = v53[1];
    v56 = v52[1];
    *v52 = v55;
    v52[1] = v54;
    swift_bridgeObjectRelease(v56);
    v57 = v6[12];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v61 = *v59;
    v60 = v59[1];
    v62 = v58[1];
    *v58 = v61;
    v58[1] = v60;
    swift_bridgeObjectRelease(v62);
    v63 = v6[13];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v67 = *v65;
    v66 = v65[1];
    v68 = v64[1];
    *v64 = v67;
    v64[1] = v66;
    swift_bridgeObjectRelease(v68);
    v69 = v6[14];
    v70 = *(_QWORD *)((char *)a1 + v69);
    *(_QWORD *)((char *)a1 + v69) = *(_QWORD *)((char *)a2 + v69);
    swift_bridgeObjectRelease(v70);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v71 = v6[16];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = sub_10000B4C8(&qword_100547B50);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v76(v72, 10, v74);
    v78 = v76(v73, 10, v74);
    if (v77)
    {
      if (!v78)
      {
        v79 = type metadata accessor for Playlist.Variant(0);
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
        {
          v81 = sub_10000B4C8(&qword_100548358);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v72, v73, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
        }
        a3 = v102;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 10, v74);
LABEL_31:
        *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
        v92 = v6[18];
        v93 = *(void **)((char *)a1 + v92);
        *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)((char *)a2 + v92);

        v94 = v6[19];
        v95 = *(_QWORD *)((char *)a1 + v94);
        *(_QWORD *)((char *)a1 + v94) = *(_QWORD *)((char *)a2 + v94);
        swift_bridgeObjectRelease(v95);
        if (a1 == a2)
          return a1;
        goto LABEL_32;
      }
    }
    else
    {
      if (!v78)
      {
        v86 = type metadata accessor for Playlist.Variant(0);
        v87 = *(_QWORD *)(v86 - 8);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
        v89 = v88(v72, 1, v86);
        v90 = v88(v73, 1, v86);
        if (v89)
        {
          a3 = v102;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v72, v73, v86);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v72, 0, 1, v86);
            goto LABEL_31;
          }
        }
        else
        {
          a3 = v102;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v72, v73, v86);
            goto LABEL_31;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v86);
        }
        v91 = sub_10000B4C8(&qword_100548358);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        goto LABEL_31;
      }
      sub_100011694((uint64_t)v72, &qword_100547B50);
    }
    v85 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    a3 = v102;
    goto LABEL_31;
  }
  if (v10)
    goto LABEL_7;
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  v16 = v6[16];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_10000B4C8(&qword_100547B50);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v103 = a3;
    v82 = type metadata accessor for Playlist.Variant(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v18, 1, v82))
    {
      v84 = sub_10000B4C8(&qword_100548358);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v17, v18, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v17, 0, 1, v82);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
    a3 = v103;
  }
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
  *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  if (a1 != a2)
  {
LABEL_32:
    v96 = *(int *)(a3 + 20);
    v97 = (char *)a1 + v96;
    v98 = (char *)a2 + v96;
    sub_100011694((uint64_t)a1 + v96, &qword_100548908);
    v99 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v98, v99) == 1)
    {
      v100 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v97, v98, v100);
      swift_storeEnumTagMultiPayload(v97, v99, 1);
    }
    else
    {
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000985D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000985DC);
}

uint64_t sub_1000985DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_10000B4C8(&qword_100548310);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10000B4C8(&qword_100548918);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100098658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100098664);
}

uint64_t sub_100098664(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_10000B4C8(&qword_100548310);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10000B4C8(&qword_100548918);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000986E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_10002E8E4(319, (unint64_t *)&qword_1005483C8, type metadata accessor for WidgetMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_10009879C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000987A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_10009882C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int v51;
  _QWORD *v52;
  _QWORD *v53;
  unsigned int v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(unint64_t, uint64_t, uint64_t);
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  _BYTE *v84;
  uint64_t v85;
  unsigned int v86;
  int v87;
  unint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  size_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  unsigned int v101;
  int v102;
  int v103;
  const void *v104;
  char *v105;
  size_t v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  unsigned int v110;
  _BOOL8 v111;
  BOOL v112;
  _BOOL8 v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  void **v117;
  void *v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  unsigned int v122;
  _BOOL8 v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  void *v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(unint64_t, unint64_t, uint64_t);
  id v134;
  _QWORD *v135;
  size_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  _BOOL8 v141;
  unint64_t v142;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  unsigned int v165;
  uint64_t v166;
  _QWORD *v167;
  size_t v168;

  v163 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v163 - 8);
  v166 = *(_QWORD *)(v4 + 64);
  v160 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v160 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = *(_DWORD *)(v8 + 80);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v11 = v9 - 1;
  else
    v11 = 0;
  v12 = v11 - 10;
  if (v11 <= 9)
    v12 = 0;
  if (*(_DWORD *)(v5 + 84) <= v12)
    v13 = v12;
  else
    v13 = *(_DWORD *)(v5 + 84);
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v155 = v14;
  v157 = *(_QWORD *)(v7 - 8);
  v158 = v7;
  if (v9)
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = v6;
  v17 = *(_DWORD *)(v8 + 80);
  v18 = v17 | v6;
  v19 = v15;
  v165 = v11;
  if (v11 <= 9)
  {
    if (v15 <= 3)
    {
      v21 = (~(-1 << (8 * v15)) - v11 + 10) >> (8 * v15);
      v22 = v21 != 0;
      if (v21 >= 0xFF)
        v22 = 2;
      if (v21 <= 0xFFFE)
        v20 = v22;
      else
        v20 = 4;
    }
    else
    {
      v20 = 1;
    }
    v19 = v20 + v15;
  }
  v156 = *(_DWORD *)(v5 + 84);
  v161 = *(_DWORD *)(v8 + 84);
  v168 = v15;
  v159 = v5;
  v23 = *(_QWORD *)(v5 + 64);
  v24 = type metadata accessor for TimelineEntryRelevance(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_DWORD *)(v25 + 80);
  v27 = *(_QWORD *)(a3 + 16);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_DWORD *)(v28 + 80);
  v30 = v18 | v29 | *(_DWORD *)(v4 + 80) & 0xF8 | v26 | 7;
  if (v30 != 7
    || ((v10 | v6 | *(_DWORD *)(v25 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v28 + 80)) & 0x100000) != 0
    || (v31 = v23 + 7,
        v32 = v18 | 7,
        v33 = ((v18 | 7) + v166 + 1) & ~(v18 | 7),
        v154 = ((v17
               + 9
               + ((((((((((((((v23 + 7 + ((v16 + 48) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                       + 23) & 0xFFFFFFFFFFFFFFF8)
                     + 23) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)
                 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v17)
             + 7,
        v34 = (v33
             + 23
             + ((((((v154 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8,
        v35 = v26 + 8,
        ((v29 + ((*(_QWORD *)(v25 + 64) + 7 + ((v26 + 8 + v34) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v29)
      + *(_QWORD *)(v28 + 64) > 0x18))
  {
    v43 = *a2;
    *a1 = *a2;
    v44 = (_QWORD *)(v43 + ((v30 + 16) & ~v30));
    swift_retain(v43);
    return v44;
  }
  v148 = *(_QWORD *)(v24 - 8);
  v149 = *(_QWORD *)(v25 + 64) + 7;
  v150 = v24;
  v151 = v33 + 23;
  v162 = *(_DWORD *)(v28 + 80);
  v152 = *(_QWORD *)(v27 - 8);
  v153 = v27;
  v145 = ~v17;
  v146 = v17 + 9;
  v147 = ~v26;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16))(a1, a2, v163);
  *((_BYTE *)a1 + v166) = *((_BYTE *)a2 + v166);
  v36 = (_QWORD *)(((unint64_t)a1 + v166 + v32 + 1) & ~v32);
  v37 = (_QWORD *)(((unint64_t)a2 + v166 + v32 + 1) & ~v32);
  v38 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 0x80000000) != 0)
  {
    v45 = (_QWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
    v46 = v16 + 16;
    v39 = ~v16;
    v47 = ((unint64_t)v45 + v16 + 16) & ~v16;
    v41 = v168;
    if (v156 == v155)
    {
      v48 = ((unint64_t)v45 + v16 + 16) & ~v16;
      v49 = v37;
      v50 = v36;
      v51 = (*(uint64_t (**)(uint64_t))(v159 + 48))(v48);
      v37 = v49;
      v36 = v50;
      v42 = v35;
      if (!v51)
      {
LABEL_35:
        v45 = (_QWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
        v46 = v16 + 16;
        v47 = ((unint64_t)v45 + v16 + 16) & v39;
        goto LABEL_38;
      }
    }
    else
    {
      v42 = v35;
      if (v161 < 2
        || (v52 = v37,
            v53 = v36,
            v54 = (*(uint64_t (**)(unint64_t))(v157 + 48))((v146
                                                                           + ((((((((((((((v31 + v47) & 0xFFFFFFFFFFFFFFF8)
                                                                                       + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                     + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                   + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                               + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                             + 23) & 0xFFFFFFFFFFFFFFF8)) & v145),
            v37 = v52,
            v36 = v53,
            v54 < 0xC))
      {
LABEL_38:
        v144 = v42;
        *v36 = *v37;
        v164 = v37;
        v55 = v37[1];
        v36[1] = v55;
        v167 = v36;
        v56 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v56 = *v38;
        v57 = v38[1];
        v56[1] = v57;
        v58 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v58 = *v45;
        v59 = v45[1];
        v58[1] = v59;
        v60 = ((unint64_t)v58 + v46) & v39;
        v61 = *(void (**)(unint64_t, uint64_t, uint64_t))(v159 + 16);
        swift_bridgeObjectRetain(v55);
        swift_bridgeObjectRetain(v57);
        swift_bridgeObjectRetain(v59);
        v61(v60, v47, v160);
        v62 = (_QWORD *)((v31 + v60) & 0xFFFFFFFFFFFFFFF8);
        v63 = (_QWORD *)((v31 + v47) & 0xFFFFFFFFFFFFFFF8);
        *v62 = *v63;
        v64 = v63[1];
        v62[1] = v64;
        v65 = (_QWORD *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8);
        v66 = (_QWORD *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v65 = *v66;
        v67 = v66[1];
        v65[1] = v67;
        v68 = (_QWORD *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8);
        v69 = (_QWORD *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v68 = *v69;
        v70 = v69[1];
        v68[1] = v70;
        v71 = (_QWORD *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFFFF8);
        v72 = (_QWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v71 = *v72;
        v73 = v72[1];
        v71[1] = v73;
        v74 = (_QWORD *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8);
        v75 = (_QWORD *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v74 = *v75;
        v76 = v75[1];
        v74[1] = v76;
        v77 = (_QWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8);
        v78 = (_QWORD *)(((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v77 = *v78;
        v79 = v78[1];
        v77[1] = v79;
        v80 = ((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8;
        v81 = ((unint64_t)v78 + 23) & 0xFFFFFFFFFFFFFFF8;
        v82 = *(_QWORD *)v81;
        *(_QWORD *)v80 = *(_QWORD *)v81;
        *(_BYTE *)(v80 + 8) = *(_BYTE *)(v81 + 8);
        v83 = (char *)((v146 + v80) & v145);
        v84 = (_BYTE *)((v146 + v81) & v145);
        swift_bridgeObjectRetain(v64);
        swift_bridgeObjectRetain(v67);
        v85 = v70;
        v41 = v168;
        swift_bridgeObjectRetain(v85);
        swift_bridgeObjectRetain(v73);
        swift_bridgeObjectRetain(v76);
        swift_bridgeObjectRetain(v79);
        swift_bridgeObjectRetain(v82);
        v86 = v165;
        if (v165 <= 9)
        {
          if (v168 > 3)
            goto LABEL_40;
          v101 = (~(-1 << (8 * v168)) - v165 + 10) >> (8 * v168);
          if (v101 > 0xFFFE)
          {
            v87 = *(_DWORD *)&v84[v168];
            if (v87)
              goto LABEL_57;
          }
          else
          {
            if (v101 <= 0xFE)
            {
              if (!v101)
                goto LABEL_66;
LABEL_40:
              v87 = v84[v168];
              if (!v84[v168])
                goto LABEL_66;
LABEL_57:
              v102 = (v87 - 1) << (8 * v168);
              if (v168 > 3)
                v102 = 0;
              if ((_DWORD)v168)
              {
                if (v168 <= 3)
                  v103 = v168;
                else
                  v103 = 4;
                __asm { BR              X11 }
              }
              v88 = v154;
              v95 = v147;
              v104 = v84;
              v105 = v83;
              v42 = v144;
              v44 = a1;
              if (v102 + v165 != -1)
                goto LABEL_71;
              goto LABEL_73;
            }
            v87 = *(unsigned __int16 *)&v84[v168];
            if (*(_WORD *)&v84[v168])
              goto LABEL_57;
          }
        }
LABEL_66:
        v88 = v154;
        v95 = v147;
        v104 = v84;
        v105 = v83;
        v42 = v144;
        v44 = a1;
        if (v161 >= 2 && (*(unsigned int (**)(const void *))(v157 + 48))(v104) >= 2)
        {
          if (v165 >= 0xA)
          {
            memcpy(v105, v104, v168);
            v106 = v168;
            goto LABEL_97;
          }
LABEL_71:
          if (v168 <= 3)
          {
            v110 = (~(-1 << (8 * v168)) - v165 + 10) >> (8 * v168);
            if (v110 > 0xFFFE)
            {
              v107 = 4;
            }
            else
            {
              v111 = v110 != 0;
              v112 = v110 >= 0xFF;
              v107 = 2;
              if (!v112)
                v107 = v111;
            }
          }
          else
          {
            v107 = 1;
          }
          memcpy(v105, v104, v107 + v168);
          if (v168 > 3)
            goto LABEL_92;
          goto LABEL_79;
        }
LABEL_73:
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v157 + 48))(v104, 1, v158))
        {
          memcpy(v105, v104, v168);
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v157 + 16))(v105, v104, v158);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v105, 0, 1, v158);
        }
        v106 = v168;
        if (v165 > 9)
        {
LABEL_97:
          v114 = (_QWORD *)((unint64_t)&v105[v106 + 7] & 0xFFFFFFFFFFFFFFF8);
          v115 = (_QWORD *)(((unint64_t)v104 + v106 + 7) & 0xFFFFFFFFFFFFFFF8);
          *v114 = *v115;
          v116 = (_QWORD *)(((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFF8);
          v117 = (void **)(((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8);
          v118 = *v117;
          *v116 = *v117;
          v119 = *(_QWORD *)(((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)(((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFF8) = v119;
          v120 = v118;
          swift_bridgeObjectRetain(v119);
          v92 = v168;
          v93 = v162;
          v94 = v148;
          v91 = v167;
          v89 = v164;
          if (v165 <= 9)
          {
LABEL_98:
            if (v41 <= 3)
            {
              v122 = (~(-1 << (8 * v41)) - v86 + 10) >> (8 * v41);
              if (v122 > 0xFFFE)
              {
                v121 = 4;
              }
              else
              {
                v123 = v122 != 0;
                v112 = v122 >= 0xFF;
                v121 = 2;
                if (!v112)
                  v121 = v123;
              }
            }
            else
            {
              v121 = 1;
            }
            v92 = v121 + v41;
            goto LABEL_106;
          }
          goto LABEL_106;
        }
        if (v168 <= 3)
        {
          v108 = (~(-1 << (8 * v168)) - v165 + 10) >> (8 * v168);
          if (v108 > 0xFFFE)
          {
            *(_DWORD *)&v105[v168] = 0;
            v109 = 4;
            goto LABEL_96;
          }
          if (v108 > 0xFE)
          {
            *(_WORD *)&v105[v168] = 0;
            goto LABEL_94;
          }
          if (!v108)
          {
LABEL_94:
            v113 = v108 != 0;
            v112 = v108 >= 0xFF;
            v109 = 2;
            if (!v112)
              v109 = v113;
            goto LABEL_96;
          }
        }
        v105[v168] = 0;
        if (v168 > 3)
        {
LABEL_92:
          v109 = 1;
          goto LABEL_96;
        }
LABEL_79:
        v108 = (~(-1 << (8 * v168)) - v165 + 10) >> (8 * v168);
        if (v108 > 0xFFFE)
        {
          v109 = 4;
LABEL_96:
          v106 = v109 + v168;
          goto LABEL_97;
        }
        goto LABEL_94;
      }
    }
  }
  else
  {
    v39 = ~v16;
    v40 = v38[1];
    if (v40 >= 0xFFFFFFFF)
      LODWORD(v40) = -1;
    v41 = v168;
    v42 = v35;
    if ((_DWORD)v40 == -1)
      goto LABEL_35;
  }
  v86 = v165;
  if (v165 <= 9)
  {
    v96 = 1;
    v97 = (~(-1 << (8 * v41)) - v165 + 10) >> (8 * v41);
    v98 = v97 != 0;
    if (v97 >= 0xFF)
      v98 = 2;
    if (v97 <= 0xFFFE)
      v99 = v98;
    else
      v99 = 4;
    if (v41 <= 3)
      v96 = v99;
    v88 = v154;
    v89 = v37;
    v100 = v36;
    memcpy(v36, v37, ((((((v154 + v96 + v41) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    v91 = v100;
    v93 = v162;
    v95 = v147;
    v94 = v148;
    v44 = a1;
    goto LABEL_98;
  }
  v88 = v154;
  v89 = v37;
  v90 = v36;
  memcpy(v36, v37, ((((((v154 + v41) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  v91 = v90;
  v92 = v41;
  v93 = v162;
  v95 = v147;
  v94 = v148;
  v44 = a1;
LABEL_106:
  v124 = ~v93;
  v125 = ((((((v88 + v92) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v127 = (unint64_t)v89 + v125 + 15;
  v126 = *(_QWORD *)((char *)v89 + v125);
  v128 = (_QWORD *)((char *)v91 + v125);
  *v128 = v126;
  v129 = (_QWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
  v127 &= 0xFFFFFFFFFFFFFFF8;
  v130 = *(void **)v127;
  *v129 = *(_QWORD *)v127;
  v131 = ((unint64_t)v129 + v42) & v95;
  v132 = (v42 + v127) & v95;
  v133 = *(void (**)(unint64_t, unint64_t, uint64_t))(v94 + 16);
  swift_bridgeObjectRetain(v126);
  v134 = v130;
  v133(v131, v132, v150);
  v135 = (_QWORD *)((v149 + v131) & 0xFFFFFFFFFFFFFFF8);
  v136 = v168;
  v137 = (_QWORD *)((v149 + v132) & 0xFFFFFFFFFFFFFFF8);
  *v135 = *v137;
  v138 = v137[1];
  v135[1] = v138;
  swift_bridgeObjectRetain(v138);
  if (v86 <= 9)
  {
    if (v168 <= 3)
    {
      v140 = (~(-1 << (8 * v168)) - v86 + 10) >> (8 * v168);
      if (v140 > 0xFFFE)
      {
        v139 = 4;
      }
      else
      {
        v141 = v140 != 0;
        v112 = v140 >= 0xFF;
        v139 = 2;
        if (!v112)
          v139 = v141;
      }
    }
    else
    {
      v139 = 1;
    }
    v136 = v139 + v168;
  }
  v142 = ((v149
         + ((v42
           + ((v151
             + ((((((v88 + v136) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)) & v95)) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v152 + 16))(((unint64_t)v44 + v162 + v142) & v124, ((unint64_t)a2 + v162 + v142) & v124, v153);
  return v44;
}

uint64_t sub_1000993F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  unsigned int v49;
  unint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  id *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  _BOOL8 v66;
  BOOL v67;
  unint64_t v68;
  unint64_t v69;
  id *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  _BOOL8 v80;
  uint64_t v81;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = type metadata accessor for Playlist.Variant(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v6 + 1;
  v93 = v9 | v12 | 7;
  v14 = (v6 + 1 + a1 + v93) & ~v93;
  v15 = *(_DWORD *)(v8 + 84);
  v16 = *(unsigned int *)(v11 + 84);
  if ((_DWORD)v16)
    v17 = v16 - 1;
  else
    v17 = 0;
  v18 = v17 - 10;
  v92 = v17;
  if (v17 <= 9)
    v18 = 0;
  if (v15 <= v18)
    v19 = v18;
  else
    v19 = *(_DWORD *)(v8 + 84);
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  v21 = ~v9;
  v22 = *(_QWORD *)(v8 + 64) + 7;
  v23 = v12
      + 9
      + ((((((((((((((v22 + ((v9 + 48) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8);
  v90 = v7;
  v91 = *(_QWORD *)(v10 - 8);
  if ((_DWORD)v16)
    v24 = *(_QWORD *)(v11 + 64);
  else
    v24 = *(_QWORD *)(v11 + 64) + 1;
  v25 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v95 = a2;
  v96 = a1;
  v94 = v13;
  v88 = v12 + 9;
  v89 = ~v12;
  if ((v19 & 0x80000000) == 0)
  {
    v26 = *(_QWORD *)(v25 + 8);
    if (v26 >= 0xFFFFFFFF)
      LODWORD(v26) = -1;
    if ((_DWORD)v26 == -1)
      goto LABEL_22;
    goto LABEL_29;
  }
  v27 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v9 + v27 + 16) & v21;
  if (v15 == v20)
  {
    v29 = (v9 + v27 + 16) & v21;
    v30 = v14;
    v31 = *(unsigned __int8 *)(v11 + 80);
    v85 = v10;
    v32 = v12
        + 9
        + ((((((((((((((v22 + ((v9 + 48) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8);
    v33 = *(_DWORD *)(v11 + 84);
    v34 = (*(uint64_t (**)(uint64_t))(v8 + 48))(v29);
    LODWORD(v16) = v33;
    v23 = v32;
    v10 = v85;
    v12 = v31;
    v14 = v30;
    if (!v34)
    {
LABEL_22:
      v27 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
      v28 = (v9 + v27 + 16) & v21;
      goto LABEL_25;
    }
LABEL_29:
    v53 = v93;
    v51 = v92;
    goto LABEL_60;
  }
  if (v16 >= 2)
  {
    v35 = v10;
    v36 = v14;
    v37 = *(unsigned __int8 *)(v11 + 80);
    v86 = v10;
    v38 = v23;
    v39 = *(_DWORD *)(v11 + 84);
    v40 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v12+ 9+ ((((((((((((((v22 + v28) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12, v16, v35);
    LODWORD(v16) = v39;
    v23 = v38;
    v10 = v86;
    v12 = v37;
    v14 = v36;
    if (v40 >= 0xC)
      goto LABEL_29;
  }
LABEL_25:
  v83 = v23;
  v84 = v12;
  v87 = v14;
  v41 = v16;
  swift_bridgeObjectRelease(*(_QWORD *)(v14 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v25 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v27 + 8));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v28, v90);
  v42 = (v22 + v28) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v42 + 8));
  v43 = (v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v43 + 8));
  v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v44 + 8));
  v45 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v45 + 8));
  v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v46 + 8));
  v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v47 + 8));
  v48 = (_QWORD *)((v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(*v48);
  v49 = v41;
  v50 = ((unint64_t)v48 + v88) & v89;
  v51 = v92;
  if (v92 > 9)
    goto LABEL_44;
  if (v24 > 3)
    goto LABEL_27;
  v54 = (~(-1 << (8 * v24)) - v92 + 10) >> (8 * v24);
  if (v54 > 0xFFFE)
  {
    v52 = *(_DWORD *)(v50 + v24);
    if (v52)
      goto LABEL_35;
    goto LABEL_44;
  }
  if (v54 > 0xFE)
  {
    v52 = *(unsigned __int16 *)(v50 + v24);
    if (*(_WORD *)(v50 + v24))
      goto LABEL_35;
LABEL_44:
    v53 = v93;
    if (v49 >= 2 && (*(unsigned int (**)(unint64_t))(v91 + 48))(v50) >= 2)
      goto LABEL_50;
    goto LABEL_48;
  }
  if (!v54)
    goto LABEL_44;
LABEL_27:
  v52 = *(unsigned __int8 *)(v50 + v24);
  if (!*(_BYTE *)(v50 + v24))
    goto LABEL_44;
LABEL_35:
  v55 = (v52 - 1) << (8 * v24);
  if (v24 > 3)
    v55 = 0;
  if ((_DWORD)v24)
  {
    if (v24 <= 3)
      v56 = v24;
    else
      v56 = 4;
    __asm { BR              X11 }
  }
  v53 = v93;
  if (v55 + v92 != -1)
    goto LABEL_51;
LABEL_48:
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v91 + 48))(v50, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v91 + 8))(v50, v10);
LABEL_50:
  v57 = v24;
  if (v92 <= 9)
  {
LABEL_51:
    if (v24 <= 3)
    {
      v59 = (~(-1 << (8 * v24)) - v92 + 10) >> (8 * v24);
      v60 = v59 != 0;
      if (v59 >= 0xFF)
        v60 = 2;
      if (v59 <= 0xFFFE)
        v58 = v60;
      else
        v58 = 4;
    }
    else
    {
      v58 = 1;
    }
    v57 = v58 + v24;
  }
  v61 = (id *)((((v50 + v57 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

  swift_bridgeObjectRelease(*(_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = v84;
  v14 = v87;
  v23 = v83;
LABEL_60:
  v62 = v23 & ~v12;
  v63 = v24;
  if (v51 <= 9)
  {
    if (v24 <= 3)
    {
      v65 = (~(-1 << (8 * v24)) - v51 + 10) >> (8 * v24);
      if (v65 > 0xFFFE)
      {
        v64 = 4;
      }
      else
      {
        v66 = v65 != 0;
        v67 = v65 >= 0xFF;
        v64 = 2;
        if (!v67)
          v64 = v66;
      }
    }
    else
    {
      v64 = 1;
    }
    v63 = v64 + v24;
  }
  v68 = v62 + 7;
  v69 = v14 + ((((((v62 + 7 + v63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(*(_QWORD *)(v69 + 8));
  v70 = (id *)((v69 + 23) & 0xFFFFFFFFFFFFFFF8);

  v71 = type metadata accessor for TimelineEntryRelevance(0);
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = v73 + 8;
  v75 = ~v73;
  v76 = ((unint64_t)v70 + v73 + 8) & ~v73;
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v76, v71);
  v77 = *(_QWORD *)(v72 + 64) + 7;
  swift_bridgeObjectRelease(*(_QWORD *)(((v77 + v76) & 0xFFFFFFFFFFFFF8) + 8));
  if (v51 <= 9)
  {
    if (v24 <= 3)
    {
      v79 = (~(-1 << (8 * v24)) - v51 + 10) >> (8 * v24);
      if (v79 > 0xFFFE)
      {
        v78 = 4;
      }
      else
      {
        v80 = v79 != 0;
        v67 = v79 >= 0xFF;
        v78 = 2;
        if (!v67)
          v78 = v80;
      }
    }
    else
    {
      v78 = 1;
    }
    v24 += v78;
  }
  v81 = *(_QWORD *)(*(_QWORD *)(v95 + 16) - 8);
  return (*(uint64_t (**)(unint64_t))(v81 + 8))((v96
                                                                + *(unsigned __int8 *)(v81 + 80)
                                                                + ((v77
                                                                  + ((v74
                                                                    + ((((v94 + v53) & ~v53)
                                                                      + ((((((v68 + v24) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 23) & 0xFFFFFFFFFFFFFFF8)) & v75)) & 0xFFFFFFFFFFFFFFF8)
                                                                + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
}

uint64_t sub_100099AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  _QWORD *v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  _QWORD *v38;
  unsigned int v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(unint64_t, uint64_t, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  _BYTE *v70;
  size_t v71;
  int v72;
  unint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  size_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  unsigned int v86;
  int v87;
  int v88;
  size_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  _BOOL8 v95;
  BOOL v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  void **v100;
  void *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  unsigned int v105;
  _BOOL8 v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  size_t v111;
  _QWORD *v112;
  void **v113;
  void *v114;
  uint64_t v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  id v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  _BOOL8 v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unsigned int v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  size_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;
  uint64_t v153;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
  v7 = *(_QWORD *)(v6 + 64);
  v153 = a1;
  v8 = v7 + a1;
  v152 = a2;
  v150 = v7;
  v9 = (_BYTE *)(v7 + a2);
  *(_BYTE *)(v7 + a1) = *v9;
  v142 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v142 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v141 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v141 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 | v13 | 7;
  v15 = (_QWORD *)((v14 + 1 + v8) & ~v14);
  v16 = (_QWORD *)((unint64_t)&v9[v14 + 1] & ~v14);
  v17 = *(_DWORD *)(v10 + 84);
  v18 = *(unsigned int *)(v12 + 84);
  if ((_DWORD)v18)
    v19 = v18 - 1;
  else
    v19 = 0;
  v20 = v19 - 10;
  if (v19 <= 9)
    v20 = 0;
  if (v17 <= v20)
    v21 = v20;
  else
    v21 = *(_DWORD *)(v10 + 84);
  if (v21 <= 0x7FFFFFFF)
    v22 = 0x7FFFFFFF;
  else
    v22 = v21;
  v23 = ~v11;
  v24 = *(_QWORD *)(v10 + 64) + 7;
  v25 = ~v13;
  v26 = v13 + 9;
  v143 = (v13
        + 9
        + ((((((((((((((v24 + ((v11 + 48) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  v145 = v11 | v13 | 7;
  v139 = ~v13;
  v140 = *(_QWORD *)(v141 - 8);
  v27 = *(_QWORD *)(v12 + 64);
  if (!(_DWORD)v18)
    ++v27;
  v147 = v27;
  v149 = v14 + 1;
  v28 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  if ((v21 & 0x80000000) != 0)
  {
    v30 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    v31 = v11 + 16;
    v32 = ((unint64_t)v30 + v11 + 16) & v23;
    if (v17 == v22)
    {
      v33 = ((unint64_t)v30 + v11 + 16) & v23;
      v34 = *(unsigned int *)(v12 + 84);
      v35 = v15;
      v36 = v16;
      v37 = (*(uint64_t (**)(uint64_t))(v10 + 48))(v33);
      v18 = v34;
      v16 = v36;
      v15 = v35;
      if (!v37)
      {
LABEL_21:
        v30 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
        v31 = v11 + 16;
        v32 = ((unint64_t)v30 + v11 + 16) & v23;
        goto LABEL_24;
      }
    }
    else if (v18 < 2
           || (v135 = *(_DWORD *)(v12 + 84),
               v137 = v15,
               v38 = v16,
               v39 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))((v26+ ((((((((((((((v24 + v32) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v25, v18, v141), v18 = v135, v16 = v38, v15 = v137, v39 < 0xC))
    {
LABEL_24:
      *v15 = *v16;
      v136 = v16;
      v138 = v15;
      v40 = v16[1];
      v15[1] = v40;
      v41 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v41 = *v28;
      v42 = v28[1];
      v41[1] = v42;
      v43 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v30;
      v44 = v30[1];
      v43[1] = v44;
      v45 = ((unint64_t)v43 + v31) & v23;
      v46 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16);
      v47 = v18;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v44);
      v46(v45, v32, v142);
      v48 = (_QWORD *)((v24 + v45) & 0xFFFFFFFFFFFFFFF8);
      v49 = (_QWORD *)((v24 + v32) & 0xFFFFFFFFFFFFFFF8);
      *v48 = *v49;
      v50 = v49[1];
      v48[1] = v50;
      v51 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v53 = v52[1];
      v51[1] = v53;
      v54 = (_QWORD *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8);
      v55 = (_QWORD *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v54 = *v55;
      v56 = v55[1];
      v54[1] = v56;
      v57 = (_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
      v58 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v59 = v58[1];
      v57[1] = v59;
      v60 = (_QWORD *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
      v61 = (_QWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v60 = *v61;
      v62 = v61[1];
      v60[1] = v62;
      v63 = (_QWORD *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
      v64 = (_QWORD *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v63 = *v64;
      v65 = v64[1];
      v63[1] = v65;
      v66 = ((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8;
      v67 = ((unint64_t)v64 + 23) & 0xFFFFFFFFFFFFFFF8;
      v68 = *(_QWORD *)v67;
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_BYTE *)(v66 + 8) = *(_BYTE *)(v67 + 8);
      v69 = (char *)((v26 + v66) & v139);
      v70 = (_BYTE *)((v26 + v67) & v139);
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v56);
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRetain(v62);
      swift_bridgeObjectRetain(v65);
      swift_bridgeObjectRetain(v68);
      v71 = v147;
      if (v19 <= 9)
      {
        if (v147 > 3)
          goto LABEL_26;
        v86 = (~(-1 << (8 * v147)) - v19 + 10) >> (8 * v147);
        if (v86 > 0xFFFE)
        {
          v72 = *(_DWORD *)&v70[v147];
          if (v72)
            goto LABEL_43;
        }
        else
        {
          if (v86 <= 0xFE)
          {
            if (!v86)
              goto LABEL_52;
LABEL_26:
            v72 = v70[v147];
            if (!v70[v147])
              goto LABEL_52;
LABEL_43:
            v87 = (v72 - 1) << (8 * v147);
            if (v147 > 3)
              v87 = 0;
            if ((_DWORD)v147)
            {
              if (v147 <= 3)
                v88 = v147;
              else
                v88 = 4;
              __asm { BR              X11 }
            }
            v73 = v143;
            if (v87 + v19 != -1)
              goto LABEL_57;
            goto LABEL_59;
          }
          v72 = *(unsigned __int16 *)&v70[v147];
          if (*(_WORD *)&v70[v147])
            goto LABEL_43;
        }
      }
LABEL_52:
      v73 = v143;
      if (v47 >= 2
        && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v140 + 48))(v70, v47, v141) >= 2)
      {
        if (v19 >= 0xA)
        {
          memcpy(v69, v70, v147);
          v89 = v147;
          goto LABEL_83;
        }
LABEL_57:
        if (v147 <= 3)
        {
          v93 = (~(-1 << (8 * v147)) - v19 + 10) >> (8 * v147);
          v94 = v93 != 0;
          if (v93 >= 0xFF)
            v94 = 2;
          if (v93 <= 0xFFFE)
            v90 = v94;
          else
            v90 = 4;
        }
        else
        {
          v90 = 1;
        }
        memcpy(v69, v70, v90 + v147);
        if (v147 > 3)
          goto LABEL_77;
        goto LABEL_65;
      }
LABEL_59:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v140 + 48))(v70, 1, v141))
      {
        memcpy(v69, v70, v147);
      }
      else
      {
        (*(void (**)(char *, _BYTE *, uint64_t))(v140 + 16))(v69, v70, v141);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v69, 0, 1, v141);
      }
      v89 = v147;
      if (v19 > 9)
      {
LABEL_83:
        v97 = (_QWORD *)((unint64_t)&v69[v89 + 7] & 0xFFFFFFFFFFFFFFF8);
        v98 = (_QWORD *)((unint64_t)&v70[v89 + 7] & 0xFFFFFFFFFFFFFFF8);
        *v97 = *v98;
        v99 = (_QWORD *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFF8);
        v100 = (void **)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
        v101 = *v100;
        *v99 = *v100;
        v102 = *(_QWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFF8);
        *(_QWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFF8) = v102;
        v103 = v101;
        swift_bridgeObjectRetain(v102);
        v78 = v147;
        v76 = v136;
        v77 = v138;
        v79 = v145;
        if (v19 > 9)
          goto LABEL_92;
        goto LABEL_84;
      }
      if (v147 <= 3)
      {
        v91 = (~(-1 << (8 * v147)) - v19 + 10) >> (8 * v147);
        if (v91 > 0xFFFE)
        {
          *(_DWORD *)&v69[v147] = 0;
          v92 = 4;
          goto LABEL_82;
        }
        if (v91 > 0xFE)
        {
          *(_WORD *)&v69[v147] = 0;
          goto LABEL_80;
        }
        if (!v91)
        {
LABEL_80:
          v95 = v91 != 0;
          v96 = v91 >= 0xFF;
          v92 = 2;
          if (!v96)
            v92 = v95;
          goto LABEL_82;
        }
      }
      v69[v147] = 0;
      if (v147 > 3)
      {
LABEL_77:
        v92 = 1;
        goto LABEL_82;
      }
LABEL_65:
      v91 = (~(-1 << (8 * v147)) - v19 + 10) >> (8 * v147);
      if (v91 > 0xFFFE)
      {
        v92 = 4;
LABEL_82:
        v89 = v92 + v147;
        goto LABEL_83;
      }
      goto LABEL_80;
    }
  }
  else
  {
    v29 = v28[1];
    if (v29 >= 0xFFFFFFFF)
      LODWORD(v29) = -1;
    if ((_DWORD)v29 == -1)
      goto LABEL_21;
  }
  if (v19 > 9)
  {
    v71 = v147;
    v73 = v143;
    v74 = v15;
    v75 = v16;
    memcpy(v15, v16, ((((((v143 + v147 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    v76 = v75;
    v77 = v74;
    v78 = v147;
    v79 = v145;
    goto LABEL_92;
  }
  v80 = 1;
  v71 = v147;
  v81 = (~(-1 << (8 * v147)) - v19 + 10) >> (8 * v147);
  v82 = v81 != 0;
  if (v81 >= 0xFF)
    v82 = 2;
  if (v81 <= 0xFFFE)
    v83 = v82;
  else
    v83 = 4;
  if (v147 <= 3)
    v80 = v83;
  v73 = v143;
  v84 = v15;
  v85 = v16;
  memcpy(v15, v16, ((((((v143 + v80 + v147 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  v76 = v85;
  v77 = v84;
  v79 = v145;
LABEL_84:
  if (v71 <= 3)
  {
    v105 = (~(-1 << (8 * v71)) - v19 + 10) >> (8 * v71);
    if (v105 > 0xFFFE)
    {
      v104 = 4;
    }
    else
    {
      v106 = v105 != 0;
      v96 = v105 >= 0xFF;
      v104 = 2;
      if (!v96)
        v104 = v106;
    }
  }
  else
  {
    v104 = 1;
  }
  v78 = v104 + v71;
LABEL_92:
  v148 = ~v79;
  v146 = v73 + 7;
  v107 = ((((((v73 + 7 + v78) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v108 = (_QWORD *)((char *)v77 + v107);
  v109 = (_QWORD *)((char *)v76 + v107);
  v110 = *v109;
  *v108 = *v109;
  v111 = v71;
  v112 = (_QWORD *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8);
  v113 = (void **)(((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8);
  v114 = *v113;
  *v112 = *v113;
  v115 = type metadata accessor for TimelineEntryRelevance(0);
  v116 = v19;
  v117 = *(_QWORD *)(v115 - 8);
  v118 = *(unsigned __int8 *)(v117 + 80);
  v119 = v118 + 8;
  v144 = ~v118;
  v120 = ((unint64_t)v112 + v118 + 8) & ~v118;
  v121 = ((unint64_t)v113 + v118 + 8) & ~v118;
  v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 16);
  swift_bridgeObjectRetain(v110);
  v123 = v114;
  v122(v120, v121, v115);
  v124 = *(_QWORD *)(v117 + 64) + 7;
  v125 = (_QWORD *)((v124 + v120) & 0xFFFFFFFFFFFFFFF8);
  v126 = (_QWORD *)((v124 + v121) & 0xFFFFFFFFFFFFFFF8);
  *v125 = *v126;
  v127 = v126[1];
  v125[1] = v127;
  swift_bridgeObjectRetain(v127);
  if (v116 <= 9)
  {
    if (v111 <= 3)
    {
      v129 = (~(-1 << (8 * v111)) - v116 + 10) >> (8 * v111);
      if (v129 > 0xFFFE)
      {
        v128 = 4;
      }
      else
      {
        v130 = v129 != 0;
        v96 = v129 >= 0xFF;
        v128 = 2;
        if (!v96)
          v128 = v130;
      }
    }
    else
    {
      v128 = 1;
    }
    v111 += v128;
  }
  v131 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v132 = *(unsigned __int8 *)(v131 + 80);
  v133 = ((v124
         + ((v119
           + ((((v149 + v150) & v148)
             + ((((((v146 + v111) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & v144)) & 0xFFFFFFFFFFFFFFF8)
       + v132
       + 16;
  (*(void (**)(unint64_t, unint64_t))(v131 + 16))((v133 + v153) & ~v132, (v133 + v152) & ~v132);
  return v153;
}

uint64_t sub_10009A4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  char *v42;
  size_t v43;
  unsigned int v44;
  uint64_t v45;
  char *v46;
  unsigned int v47;
  _BOOL8 v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 *v89;
  unsigned __int8 *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  int v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  void (*v112)(unint64_t, uint64_t, uint64_t);
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  _BYTE *v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  uint64_t (*v146)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v147;
  size_t v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t v151;
  id *v152;
  _QWORD *v153;
  size_t v154;
  size_t v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int (*v162)(unsigned __int8 *, uint64_t, uint64_t);
  uint64_t v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int v168;
  _BOOL8 v169;
  _QWORD *v170;
  _QWORD *v171;
  _QWORD *v172;
  void **v173;
  void *v174;
  uint64_t v175;
  id v176;
  uint64_t v177;
  int v178;
  int v179;
  unsigned int v180;
  size_t v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t (*v185)(unsigned __int8 *, uint64_t, uint64_t);
  int v186;
  int v187;
  unsigned __int8 *v188;
  const void *v189;
  size_t v190;
  unsigned int v191;
  _BOOL8 v192;
  unsigned int v193;
  uint64_t v194;
  _BOOL8 v195;
  _QWORD *v196;
  _QWORD *v197;
  void **v198;
  void **v199;
  void *v200;
  void *v201;
  id v202;
  uint64_t *v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  size_t v207;
  uint64_t v208;
  unsigned int v209;
  _BOOL8 v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  size_t v214;
  uint64_t v215;
  uint64_t v216;
  void **v217;
  unint64_t v218;
  void *v219;
  void *v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int v235;
  _BOOL8 v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned int v252;
  char *__dst;
  unint64_t v254;
  char *v255;
  size_t v256;
  unsigned int v257;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v5);
  v7 = *(_QWORD *)(v6 + 64);
  v249 = a1;
  v8 = (_BYTE *)(v7 + a1);
  v244 = a2;
  v247 = v7;
  v9 = (_BYTE *)(v7 + a2);
  *v8 = *v9;
  v251 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v251 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v243 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v243 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 | v13 | 7;
  __dst = (char *)((unint64_t)&v8[v14 + 1] & ~v14);
  v245 = v14;
  v246 = v14 + 1;
  v15 = (unint64_t)&v9[v14 + 1] & ~v14;
  v16 = *(unsigned int *)(v10 + 84);
  v17 = *(_DWORD *)(v12 + 84);
  if (v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v19 = v18 - 10;
  v257 = v18;
  if (v18 <= 9)
    v19 = 0;
  if (v16 > v19)
    v19 = *(_DWORD *)(v10 + 84);
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  v21 = ~v11;
  v22 = *(_QWORD *)(v10 + 64) + 7;
  v23 = ~v13;
  v24 = v13 + 9;
  v254 = (v13
        + 9
        + ((((((((((((((v22 + ((v11 + 48) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  v250 = *(_QWORD *)(v243 - 8);
  v25 = *(_QWORD *)(v12 + 64);
  if (!v17)
    ++v25;
  v256 = v25;
  v26 = (_QWORD *)((((unint64_t)&v8[v14 + 1] & ~v14) + 23) & 0xFFFFFFFFFFFFFFF8);
  v252 = *(_DWORD *)(v12 + 84);
  v255 = (char *)v15;
  v241 = v24;
  v242 = v23;
  if ((v19 & 0x80000000) == 0)
  {
    v27 = (_QWORD *)((v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    if (v28 >= 0xFFFFFFFF)
      LODWORD(v28) = -1;
    v29 = v28 + 1;
    if (v26[1] > 0xFFFFFFFEuLL)
    {
      if ((_DWORD)v28 == -1)
        goto LABEL_26;
      goto LABEL_43;
    }
    goto LABEL_29;
  }
  v30 = v11 + 16;
  v31 = (v11 + 16 + (((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8)) & v21;
  if ((_DWORD)v16 == v20)
  {
    v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v31, v16, v251);
    v21 = ~v11;
    v17 = v252;
    if (!v32)
      goto LABEL_24;
LABEL_27:
    v27 = (_QWORD *)((unint64_t)(v255 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    v39 = ((unint64_t)v38 + v30) & v21;
    if ((_DWORD)v16 != v20)
    {
      if (v17 >= 2)
      {
        v105 = v21;
        v106 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v250 + 48))((v241+ ((((((((((((((v22 + v39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v242, v252, v243);
        v21 = v105;
        if (v106 >= 0xC)
        {
LABEL_30:
          v42 = v255;
          v41 = v256;
          v43 = v256;
          v44 = v257;
          v45 = v244;
          v46 = __dst;
          if (v257 <= 9)
          {
            if (v256 > 3)
            {
LABEL_118:
              v50 = 1;
LABEL_119:
              v43 = v50 + v41;
              goto LABEL_120;
            }
LABEL_32:
            v47 = (~(-1 << (8 * v41)) - v44 + 10) >> (8 * v41);
            if (v47 > 0xFFFE)
            {
              v50 = 4;
            }
            else
            {
              v48 = v47 != 0;
              v49 = v47 >= 0xFF;
              v50 = 2;
              if (!v49)
                v50 = v48;
            }
            goto LABEL_119;
          }
LABEL_120:
          memcpy(v46, v42, ((((((v254 + v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
          goto LABEL_247;
        }
      }
LABEL_49:
      *(_QWORD *)__dst = *(_QWORD *)v255;
      v42 = v255;
      v107 = *((_QWORD *)v255 + 1);
      *((_QWORD *)__dst + 1) = v107;
      *v26 = *v27;
      v108 = v27[1];
      v26[1] = v108;
      v109 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v109 = *v38;
      v110 = v38[1];
      v109[1] = v110;
      v111 = ((unint64_t)v109 + v30) & v21;
      v112 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain(v107);
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRetain(v110);
      v112(v111, v39, v251);
      v113 = (_QWORD *)((v22 + v111) & 0xFFFFFFFFFFFFFFF8);
      v114 = (_QWORD *)((v22 + v39) & 0xFFFFFFFFFFFFFFF8);
      *v113 = *v114;
      v115 = v114[1];
      v113[1] = v115;
      v116 = (_QWORD *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
      v117 = (_QWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v116 = *v117;
      v118 = v117[1];
      v116[1] = v118;
      v119 = (_QWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
      v120 = (_QWORD *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v119 = *v120;
      v121 = v120[1];
      v119[1] = v121;
      v122 = (_QWORD *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8);
      v123 = (_QWORD *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v122 = *v123;
      v124 = v123[1];
      v122[1] = v124;
      v125 = (_QWORD *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFFFF8);
      v126 = (_QWORD *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v125 = *v126;
      v127 = v126[1];
      v125[1] = v127;
      v128 = (_QWORD *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
      v129 = (_QWORD *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v128 = *v129;
      v130 = v129[1];
      v128[1] = v130;
      v131 = ((unint64_t)v128 + 23) & 0xFFFFFFFFFFFFFFF8;
      v132 = ((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8;
      v133 = *(_QWORD *)v132;
      *(_QWORD *)v131 = *(_QWORD *)v132;
      *(_BYTE *)(v131 + 8) = *(_BYTE *)(v132 + 8);
      v134 = (char *)((v241 + v131) & v242);
      v135 = (_BYTE *)((v241 + v132) & v242);
      swift_bridgeObjectRetain(v115);
      swift_bridgeObjectRetain(v118);
      swift_bridgeObjectRetain(v121);
      swift_bridgeObjectRetain(v124);
      swift_bridgeObjectRetain(v127);
      swift_bridgeObjectRetain(v130);
      swift_bridgeObjectRetain(v133);
      v44 = v257;
      v45 = v244;
      if (v257 <= 9)
      {
        if (v256 > 3)
          goto LABEL_51;
        v139 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
        if (v139 > 0xFFFE)
        {
          v136 = *(_DWORD *)&v135[v256];
          if (v136)
            goto LABEL_84;
        }
        else
        {
          if (v139 <= 0xFE)
          {
            if (!v139)
              goto LABEL_122;
LABEL_51:
            v136 = v135[v256];
            if (!v135[v256])
              goto LABEL_122;
LABEL_84:
            v144 = (v136 - 1) << (8 * v256);
            if (v256 > 3)
              v144 = 0;
            if ((_DWORD)v256)
            {
              if (v256 <= 3)
                v145 = v256;
              else
                v145 = 4;
              __asm { BR              X11 }
            }
            v46 = __dst;
            if (v144 + v257 != -1)
              goto LABEL_155;
            goto LABEL_164;
          }
          v136 = *(unsigned __int16 *)&v135[v256];
          if (*(_WORD *)&v135[v256])
            goto LABEL_84;
        }
      }
LABEL_122:
      v46 = __dst;
      if (v252 >= 2 && (*(unsigned int (**)(_BYTE *))(v250 + 48))(v135) >= 2)
      {
        if (v257 >= 0xA)
        {
          memcpy(v134, v135, v256);
          v154 = v256;
LABEL_181:
          v170 = (_QWORD *)((unint64_t)&v134[v154 + 7] & 0xFFFFFFFFFFFFFFF8);
          v171 = (_QWORD *)((unint64_t)&v135[v154 + 7] & 0xFFFFFFFFFFFFFFF8);
          *v170 = *v171;
          v172 = (_QWORD *)(((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFF8);
          v173 = (void **)(((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8);
          v174 = *v173;
          *v172 = *v173;
          v175 = *(_QWORD *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)(((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFF8) = v175;
          v176 = v174;
          v177 = v175;
          v41 = v256;
          swift_bridgeObjectRetain(v177);
          goto LABEL_247;
        }
LABEL_155:
        v163 = 1;
        v164 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
        v165 = v164 != 0;
        if (v164 >= 0xFF)
          v165 = 2;
        if (v164 <= 0xFFFE)
          v166 = v165;
        else
          v166 = 4;
        if (v256 <= 3)
          v163 = v166;
        memcpy(v134, v135, v163 + v256);
        if (v256 > 3)
          goto LABEL_163;
        goto LABEL_170;
      }
LABEL_164:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v250 + 48))(v135, 1, v243))
      {
        memcpy(v134, v135, v256);
      }
      else
      {
        (*(void (**)(char *, _BYTE *, uint64_t))(v250 + 16))(v134, v135, v243);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v134, 0, 1, v243);
      }
      v154 = v256;
      if (v257 > 9)
        goto LABEL_181;
      if (v256 <= 3)
      {
        v168 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
        if (v168 > 0xFFFE)
        {
          *(_DWORD *)&v134[v256] = 0;
          v167 = 4;
          goto LABEL_180;
        }
        if (v168 > 0xFE)
        {
          *(_WORD *)&v134[v256] = 0;
          goto LABEL_178;
        }
        if (!v168)
        {
LABEL_178:
          v169 = v168 != 0;
          v49 = v168 >= 0xFF;
          v167 = 2;
          if (!v49)
            v167 = v169;
          goto LABEL_180;
        }
      }
      v134[v256] = 0;
      if (v256 > 3)
      {
LABEL_163:
        v167 = 1;
LABEL_180:
        v154 = v167 + v256;
        goto LABEL_181;
      }
LABEL_170:
      v168 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
      if (v168 > 0xFFFE)
      {
        v167 = 4;
        goto LABEL_180;
      }
      goto LABEL_178;
    }
    v40 = v21;
    v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v38 + v30) & v21, v16, v251);
    v21 = v40;
LABEL_29:
    if (v29)
      goto LABEL_30;
    v38 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = v11 + 16;
    v39 = ((unint64_t)v38 + v11 + 16) & v21;
    goto LABEL_49;
  }
  if (v17 >= 2)
  {
    v33 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v12 + 48))((v24+ ((((((((((((((v22 + v31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v23, v17, v243);
    v21 = ~v11;
    v17 = v252;
    if (v33 >= 0xC)
      goto LABEL_27;
  }
LABEL_24:
  v27 = (_QWORD *)((unint64_t)(v255 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = ((unint64_t)v34 + v30) & v21;
  if ((_DWORD)v16 == v20)
  {
    v36 = v21;
    v37 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v34 + v30) & v21, v16, v251);
    v21 = v36;
    if (!v37)
    {
LABEL_26:
      v34 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = v11 + 16;
      v35 = ((unint64_t)v34 + v11 + 16) & v21;
      goto LABEL_39;
    }
LABEL_43:
    v46 = __dst;
    v93 = v21;
    swift_bridgeObjectRelease(*((_QWORD *)__dst + 1));
    swift_bridgeObjectRelease(v26[1]);
    v94 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v94 + 8));
    v95 = (v11 + v94 + 16) & v93;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v95, v251);
    v96 = (v22 + v95) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v96 + 8));
    v97 = (v96 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v97 + 8));
    v98 = (v97 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v98 + 8));
    v99 = (v98 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v99 + 8));
    v100 = (v99 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v100 + 8));
    v101 = (v100 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v101 + 8));
    v102 = (_QWORD *)((v101 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRelease(*v102);
    v103 = ((unint64_t)v102 + v241) & v242;
    v44 = v257;
    v42 = v255;
    if (v257 <= 9)
    {
      if (v256 > 3)
        goto LABEL_45;
      v137 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
      if (v137 > 0xFFFE)
      {
        v104 = *(_DWORD *)(v103 + v256);
        if (v104)
          goto LABEL_67;
      }
      else
      {
        if (v137 <= 0xFE)
        {
          if (!v137)
            goto LABEL_94;
LABEL_45:
          v104 = *(unsigned __int8 *)(v103 + v256);
          if (!*(_BYTE *)(v103 + v256))
            goto LABEL_94;
LABEL_67:
          v140 = (v104 - 1) << (8 * v256);
          if (v256 > 3)
            v140 = 0;
          if ((_DWORD)v256)
          {
            if (v256 <= 3)
              v141 = v256;
            else
              v141 = 4;
            __asm { BR              X11 }
          }
          if (v140 + v257 != -1)
          {
LABEL_108:
            if (v256 <= 3)
            {
              v150 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
              v151 = v150 != 0;
              if (v150 >= 0xFF)
                v151 = 2;
              if (v150 <= 0xFFFE)
                v149 = v151;
              else
                v149 = 4;
            }
            else
            {
              v149 = 1;
            }
            v148 = v149 + v256;
LABEL_116:
            v152 = (id *)((((v103 + v148 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

            v153 = (_QWORD *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFF8);
            v41 = v256;
            swift_bridgeObjectRelease(*v153);
            v43 = v256;
            v45 = v244;
            if (v257 <= 9)
            {
              if (v256 > 3)
                goto LABEL_118;
              goto LABEL_32;
            }
            goto LABEL_120;
          }
LABEL_105:
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v250 + 48))(v103, 1, v243))
            (*(void (**)(unint64_t, uint64_t))(v250 + 8))(v103, v243);
LABEL_107:
          v148 = v256;
          if (v257 > 9)
            goto LABEL_116;
          goto LABEL_108;
        }
        v104 = *(unsigned __int16 *)(v103 + v256);
        if (*(_WORD *)(v103 + v256))
          goto LABEL_67;
      }
    }
LABEL_94:
    if (v252 >= 2 && (*(unsigned int (**)(unint64_t))(v250 + 48))(v103) >= 2)
      goto LABEL_107;
    goto LABEL_105;
  }
  if (v17 >= 2)
  {
    v51 = v21;
    v52 = (*(uint64_t (**)(unint64_t))(v250 + 48))((v241
                                                                   + ((((((((((((((v22 + v35) & 0xFFFFFFFFFFFFFFF8)
                                                                               + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                             + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                           + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                         + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v242);
    v21 = v51;
    if (v52 >= 0xC)
      goto LABEL_43;
  }
LABEL_39:
  *(_QWORD *)__dst = *(_QWORD *)v255;
  v53 = *((_QWORD *)v255 + 1);
  v54 = *((_QWORD *)__dst + 1);
  *((_QWORD *)__dst + 1) = v53;
  v55 = v21;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRelease(v54);
  *v26 = *v27;
  v56 = v27[1];
  v57 = v26[1];
  v26[1] = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  v58 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v58 = *v34;
  v59 = v34[1];
  v60 = v58[1];
  v58[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v60);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 24))(((unint64_t)v58 + v30) & v55, v35, v251);
  v61 = (_QWORD *)((v22 + (((unint64_t)v58 + v30) & v55)) & 0xFFFFFFFFFFFFFFF8);
  v62 = (_QWORD *)((v22 + v35) & 0xFFFFFFFFFFFFFFF8);
  *v61 = *v62;
  v63 = v62[1];
  v64 = v61[1];
  v61[1] = v63;
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRelease(v64);
  v65 = (_QWORD *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
  v66 = (_QWORD *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v65 = *v66;
  v67 = v66[1];
  v68 = v65[1];
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68);
  v69 = (_QWORD *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8);
  v70 = (_QWORD *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v69 = *v70;
  v71 = v70[1];
  v72 = v69[1];
  v69[1] = v71;
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease(v72);
  v73 = (_QWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
  v74 = (_QWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v73 = *v74;
  v75 = v74[1];
  v76 = v73[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease(v76);
  v77 = (_QWORD *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
  v78 = (_QWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v77 = *v78;
  v79 = v78[1];
  v80 = v77[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  v81 = (_QWORD *)(((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8);
  v82 = (_QWORD *)(((unint64_t)v78 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v81 = *v82;
  v83 = v82[1];
  v84 = v81[1];
  v81[1] = v83;
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRelease(v84);
  v85 = ((unint64_t)v81 + 23) & 0xFFFFFFFFFFFFFFF8;
  v86 = ((unint64_t)v82 + 23) & 0xFFFFFFFFFFFFFFF8;
  v87 = *(_QWORD *)v86;
  v88 = *(_QWORD *)v85;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRelease(v88);
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  v89 = (unsigned __int8 *)((v241 + v85) & v242);
  v90 = (unsigned __int8 *)((v241 + v86) & v242);
  v91 = v252;
  if (v257 <= 9)
  {
    if (v256 > 3)
      goto LABEL_41;
    v138 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
    if (v138 > 0xFFFE)
    {
      v92 = *(_DWORD *)&v89[v256];
      if (v92)
        goto LABEL_76;
    }
    else
    {
      if (v138 <= 0xFE)
      {
        if (!v138)
          goto LABEL_98;
LABEL_41:
        v92 = v89[v256];
        if (!v89[v256])
          goto LABEL_98;
LABEL_76:
        v142 = (v92 - 1) << (8 * v256);
        if (v256 > 3)
          v142 = 0;
        if ((_DWORD)v256)
        {
          if (v256 <= 3)
            v143 = v256;
          else
            v143 = 4;
          __asm { BR              X11 }
        }
        v46 = __dst;
        v42 = v255;
        if (v142 + v257 == -1)
          goto LABEL_129;
        goto LABEL_127;
      }
      v92 = *(unsigned __int16 *)&v89[v256];
      if (*(_WORD *)&v89[v256])
        goto LABEL_76;
    }
  }
LABEL_98:
  if (v252 >= 2)
  {
    v146 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v250 + 48);
    v147 = v146(v89, v252, v243);
    v91 = v252;
    if (v147 >= 2)
    {
      v46 = __dst;
      v42 = v255;
      if (v257 > 9)
      {
LABEL_193:
        v180 = v146(v90, v91, v243);
        v155 = v256;
        if (v180 >= 2)
        {
          v181 = v256;
          if (v257 > 9)
            goto LABEL_234;
LABEL_216:
          if (v155 <= 3)
          {
            v191 = (~(-1 << (8 * v155)) - v257 + 10) >> (8 * v155);
            if (v191 > 0xFFFE)
            {
              v184 = 4;
            }
            else
            {
              v192 = v191 != 0;
              v49 = v191 >= 0xFF;
              v184 = 2;
              if (!v49)
                v184 = v192;
            }
            goto LABEL_233;
          }
          goto LABEL_217;
        }
LABEL_218:
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v250 + 48))(v90, 1, v243))
        {
          memcpy(v89, v90, v155);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v250 + 16))(v89, v90, v243);
          (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v89, 0, 1, v243);
        }
        v190 = v155;
        if (v257 > 9)
          goto LABEL_246;
        if (v155 <= 3)
        {
          v193 = (~(-1 << (8 * v155)) - v257 + 10) >> (8 * v155);
          if (v193 > 0xFFFE)
          {
            *(_DWORD *)&v89[v155] = 0;
            goto LABEL_244;
          }
          if (v193 > 0xFE)
          {
            *(_WORD *)&v89[v155] = 0;
            goto LABEL_240;
          }
          if (!v193)
          {
LABEL_240:
            v195 = v193 != 0;
            v49 = v193 >= 0xFF;
            v194 = 2;
            if (!v49)
              v194 = v195;
            goto LABEL_245;
          }
        }
        v89[v155] = 0;
LABEL_237:
        if (v155 > 3)
        {
          v194 = 1;
LABEL_245:
          v190 = v194 + v155;
          goto LABEL_246;
        }
        v193 = (~(-1 << (8 * v155)) - v257 + 10) >> (8 * v155);
        if (v193 <= 0xFFFE)
          goto LABEL_240;
LABEL_244:
        v194 = 4;
        goto LABEL_245;
      }
LABEL_127:
      v155 = v256;
      if (v256 > 3)
      {
LABEL_128:
        v156 = v90[v256];
        goto LABEL_183;
      }
      v159 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
      if (v159 > 0xFFFE)
      {
        v156 = *(_DWORD *)&v90[v256];
      }
      else
      {
        if (v159 <= 0xFE)
        {
          if (!v159)
          {
LABEL_191:
            if (v91 < 2)
              goto LABEL_218;
            v146 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v250 + 48);
            goto LABEL_193;
          }
          goto LABEL_128;
        }
        v156 = *(unsigned __int16 *)&v90[v256];
      }
LABEL_183:
      if (v156)
      {
        v178 = (v156 - 1) << (8 * v256);
        if (v256 > 3)
          v178 = 0;
        if ((_DWORD)v256)
        {
          if (v256 <= 3)
            v179 = v256;
          else
            v179 = 4;
          __asm { BR              X11 }
        }
        if (v178 + v257 != -1)
          goto LABEL_216;
        goto LABEL_218;
      }
      goto LABEL_191;
    }
  }
  v46 = __dst;
  v42 = v255;
  if (v257 > 9)
    goto LABEL_150;
LABEL_129:
  if (v256 > 3)
  {
LABEL_130:
    v157 = v90[v256];
    goto LABEL_142;
  }
  v158 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
  if (v158 > 0xFFFE)
  {
    v157 = *(_DWORD *)&v90[v256];
  }
  else
  {
    if (v158 <= 0xFE)
    {
      if (!v158)
        goto LABEL_150;
      goto LABEL_130;
    }
    v157 = *(unsigned __int16 *)&v90[v256];
  }
LABEL_142:
  if (v157)
  {
    v160 = (v157 - 1) << (8 * v256);
    if (v256 > 3)
      v160 = 0;
    if ((_DWORD)v256)
    {
      if (v256 <= 3)
        v161 = v256;
      else
        v161 = 4;
      __asm { BR              X11 }
    }
    if (v160 + v257 != -1)
    {
      v162 = *(unsigned int (**)(_QWORD))(v250 + 48);
      goto LABEL_199;
    }
    goto LABEL_208;
  }
LABEL_150:
  if (v91 >= 2)
  {
    v162 = *(unsigned int (**)(_QWORD))(v250 + 48);
    if (v162(v90) >= 2)
    {
LABEL_199:
      if (!((unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v162)(v89, 1, v243))
        (*(void (**)(unsigned __int8 *, uint64_t))(v250 + 8))(v89, v243);
      v155 = v256;
      v181 = v256;
      if (v257 > 9)
        goto LABEL_234;
      if (v256 <= 3)
      {
        v182 = (~(-1 << (8 * v256)) - v257 + 10) >> (8 * v256);
        v183 = v182 != 0;
        if (v182 >= 0xFF)
          v183 = 2;
        if (v182 <= 0xFFFE)
          v184 = v183;
        else
          v184 = 4;
        goto LABEL_233;
      }
LABEL_217:
      v184 = 1;
LABEL_233:
      v181 = v184 + v155;
LABEL_234:
      v188 = v89;
      v189 = (const void *)((v241 + v86) & v242);
      goto LABEL_235;
    }
  }
LABEL_208:
  v185 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v250 + 48);
  v186 = v185(v89, 1, v243);
  v187 = v185(v90, 1, v243);
  if (v186)
  {
    if (!v187)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v250 + 16))(v89, v90, v243);
      (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v89, 0, 1, v243);
      v155 = v256;
      goto LABEL_236;
    }
  }
  else
  {
    if (!v187)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v250 + 24))(v89, v90, v243);
      v155 = v256;
      goto LABEL_236;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v250 + 8))(v89, v243);
  }
  v188 = v89;
  v189 = (const void *)((v241 + v86) & v242);
  v155 = v256;
  v181 = v256;
LABEL_235:
  memcpy(v188, v189, v181);
LABEL_236:
  v190 = v155;
  if (v257 <= 9)
    goto LABEL_237;
LABEL_246:
  v196 = (_QWORD *)((unint64_t)&v89[v190 + 7] & 0xFFFFFFFFFFFFF8);
  v197 = (_QWORD *)((unint64_t)&v90[v190 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v196 = *v197;
  v198 = (void **)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
  v199 = (void **)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
  v200 = *v198;
  v201 = *v199;
  *v198 = *v199;
  v202 = v201;

  v203 = (uint64_t *)(((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = v256;
  v204 = (uint64_t *)(((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFF8);
  v44 = v257;
  v205 = *v204;
  v206 = *v203;
  *v203 = *v204;
  swift_bridgeObjectRetain(v205);
  swift_bridgeObjectRelease(v206);
  v45 = v244;
LABEL_247:
  v207 = v41;
  if (v44 <= 9)
  {
    if (v41 <= 3)
    {
      v209 = (~(-1 << (8 * v41)) - v44 + 10) >> (8 * v41);
      if (v209 > 0xFFFE)
      {
        v208 = 4;
      }
      else
      {
        v210 = v209 != 0;
        v49 = v209 >= 0xFF;
        v208 = 2;
        if (!v49)
          v208 = v210;
      }
    }
    else
    {
      v208 = 1;
    }
    v207 = v208 + v41;
  }
  v211 = ((((((v254 + 7 + v207) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v213 = (uint64_t)&v42[v211 + 15];
  v212 = *(_QWORD *)&v42[v211];
  v214 = v41;
  v215 = *(_QWORD *)&v46[v211];
  *(_QWORD *)&v46[v211] = v212;
  v216 = (uint64_t)&v46[v211 + 15];
  swift_bridgeObjectRetain(v212);
  swift_bridgeObjectRelease(v215);
  v217 = (void **)(v216 & 0xFFFFFFFFFFFFFFF8);
  v218 = v213 & 0xFFFFFFFFFFFFFFF8;
  v219 = *(void **)(v213 & 0xFFFFFFFFFFFFFFF8);
  v220 = *v217;
  *v217 = v219;
  v221 = v219;

  v222 = type metadata accessor for TimelineEntryRelevance(0);
  v223 = *(_QWORD *)(v222 - 8);
  v224 = *(unsigned __int8 *)(v223 + 80);
  v225 = v224 + 8;
  v226 = ~v224;
  v227 = ((unint64_t)v217 + v224 + 8) & ~v224;
  v228 = (v224 + 8 + v218) & ~v224;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v223 + 24))(v227, v228, v222);
  v229 = *(_QWORD *)(v223 + 64) + 7;
  v230 = (_QWORD *)((v229 + v227) & 0xFFFFFFFFFFFFFFF8);
  v231 = (_QWORD *)((v229 + v228) & 0xFFFFFFFFFFFFFFF8);
  *v230 = *v231;
  v232 = v231[1];
  v233 = v230[1];
  v230[1] = v232;
  swift_bridgeObjectRetain(v232);
  swift_bridgeObjectRelease(v233);
  if (v257 <= 9)
  {
    if (v214 <= 3)
    {
      v235 = (~(-1 << (8 * v214)) - v257 + 10) >> (8 * v214);
      if (v235 > 0xFFFE)
      {
        v234 = 4;
      }
      else
      {
        v236 = v235 != 0;
        v49 = v235 >= 0xFF;
        v234 = 2;
        if (!v49)
          v234 = v236;
      }
    }
    else
    {
      v234 = 1;
    }
    v214 += v234;
  }
  v237 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v238 = *(unsigned __int8 *)(v237 + 80);
  v239 = ((v229
         + ((v225
           + ((((v246 + v247) & ~v245)
             + ((((((v254 + 7 + v214) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & v226)) & 0xFFFFFFFFFFFFFFF8)
       + v238
       + 16;
  (*(void (**)(unint64_t, unint64_t))(v237 + 24))((v239 + v249) & ~v238, (v239 + v45) & ~v238);
  return v249;
}

uint64_t sub_10009BB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  unint64_t v26;
  unint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  int v32;
  unsigned int v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  unint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  _OWORD *v45;
  _OWORD *v46;
  _OWORD *v47;
  _OWORD *v48;
  _OWORD *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  _BYTE *v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  unsigned int v67;
  int v68;
  int v69;
  size_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  _BOOL8 v75;
  BOOL v76;
  _BOOL8 v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  unsigned int v83;
  _BOOL8 v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  _BOOL8 v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  _OWORD *v107;
  _OWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  unsigned int v121;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
  v7 = *(_QWORD *)(v6 + 64);
  v113 = a1;
  v8 = (_BYTE *)(v7 + a1);
  v120 = a2;
  v118 = v7;
  v9 = (_BYTE *)(v7 + a2);
  *v8 = *v9;
  v112 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v112 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v111 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v111 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 | v13 | 7;
  v116 = (_OWORD *)((unint64_t)&v8[v14 + 1] & ~v14);
  v15 = (_OWORD *)((unint64_t)&v9[v14 + 1] & ~v14);
  v16 = *(_DWORD *)(v10 + 84);
  v17 = *(unsigned int *)(v12 + 84);
  if ((_DWORD)v17)
    v18 = v17 - 1;
  else
    v18 = 0;
  v19 = v18 - 10;
  v121 = v18;
  if (v18 <= 9)
    v19 = 0;
  if (v16 <= v19)
    v20 = v19;
  else
    v20 = *(_DWORD *)(v10 + 84);
  if (v20 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  v22 = ~v11;
  v23 = *(_QWORD *)(v10 + 64) + 7;
  v24 = v13 + 9;
  v114 = v11 | v13 | 7;
  v115 = (v13
        + 9
        + ((((((((((((((v23 + ((v11 + 48) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  v109 = ~v13;
  v110 = *(_QWORD *)(v111 - 8);
  if ((_DWORD)v17)
    v25 = *(_QWORD *)(v12 + 64);
  else
    v25 = *(_QWORD *)(v12 + 64) + 1;
  v26 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v117 = v14 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    v28 = (_OWORD *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v29 = v11 + 16;
    v30 = ((unint64_t)v28 + v11 + 16) & v22;
    if (v16 == v21)
    {
      v31 = v15;
      v32 = (*(uint64_t (**)(unint64_t))(v10 + 48))(((unint64_t)v28 + v11 + 16) & v22);
      v22 = ~v11;
      v15 = v31;
      if (!v32)
      {
LABEL_22:
        v28 = (_OWORD *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
        v29 = v11 + 16;
        v30 = ((unint64_t)v28 + v11 + 16) & v22;
        goto LABEL_25;
      }
    }
    else if (v17 < 2
           || (v107 = v15,
               v33 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))((v24+ ((((((((((((((v23 + v30) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13, v17, v111), v22 = ~v11, v15 = v107, v33 < 0xC))
    {
LABEL_25:
      v108 = v15;
      v34 = v116;
      *v116 = *v15;
      v35 = (_OWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v35 = *(_OWORD *)v26;
      v36 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v36 = *v28;
      v37 = ((unint64_t)v36 + v29) & v22;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v37, v30, v112);
      v38 = (_OWORD *)((v23 + v37) & 0xFFFFFFFFFFFFFFF8);
      v39 = (_OWORD *)((v23 + v30) & 0xFFFFFFFFFFFFFFF8);
      *v38 = *v39;
      v40 = (_OWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
      v41 = (_OWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v40 = *v41;
      v42 = (_OWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
      v43 = (_OWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v42 = *v43;
      v44 = (_OWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
      v45 = (_OWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v44 = *v45;
      v46 = (_OWORD *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      v47 = (_OWORD *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v46 = *v47;
      v48 = (_OWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8);
      v49 = (_OWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v48 = *v49;
      v50 = ((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8;
      v51 = ((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
      v52 = (char *)((v24 + v50) & v109);
      v53 = (_BYTE *)((v24 + v51) & v109);
      v54 = v121;
      if (v121 <= 9)
      {
        if (v25 > 3)
          goto LABEL_27;
        v67 = (~(-1 << (8 * v25)) - v121 + 10) >> (8 * v25);
        if (v67 > 0xFFFE)
        {
          v55 = *(_DWORD *)&v53[v25];
          if (v55)
            goto LABEL_44;
        }
        else
        {
          if (v67 <= 0xFE)
          {
            if (!v67)
              goto LABEL_53;
LABEL_27:
            v55 = v53[v25];
            if (!v53[v25])
              goto LABEL_53;
LABEL_44:
            v68 = (v55 - 1) << (8 * v25);
            if (v25 > 3)
              v68 = 0;
            if ((_DWORD)v25)
            {
              if (v25 <= 3)
                v69 = v25;
              else
                v69 = 4;
              __asm { BR              X11 }
            }
            v56 = v115;
            if (v68 + v121 != -1)
              goto LABEL_58;
            goto LABEL_60;
          }
          v55 = *(unsigned __int16 *)&v53[v25];
          if (*(_WORD *)&v53[v25])
            goto LABEL_44;
        }
      }
LABEL_53:
      v56 = v115;
      if (v17 >= 2
        && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v110 + 48))(v53, v17, v111) >= 2)
      {
        if (v121 >= 0xA)
        {
          memcpy(v52, v53, v25);
          v70 = v25;
          v61 = v113;
          v60 = v114;
          v58 = v108;
          goto LABEL_84;
        }
LABEL_58:
        if (v25 <= 3)
        {
          v74 = (~(-1 << (8 * v25)) - v121 + 10) >> (8 * v25);
          if (v74 > 0xFFFE)
          {
            v71 = 4;
          }
          else
          {
            v75 = v74 != 0;
            v76 = v74 >= 0xFF;
            v71 = 2;
            if (!v76)
              v71 = v75;
          }
        }
        else
        {
          v71 = 1;
        }
        v61 = v113;
        memcpy(v52, v53, v71 + v25);
        v58 = v108;
        v60 = v114;
        if (v25 > 3)
          goto LABEL_79;
        goto LABEL_66;
      }
LABEL_60:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v110 + 48))(v53, 1, v111))
      {
        memcpy(v52, v53, v25);
      }
      else
      {
        (*(void (**)(char *, _BYTE *, uint64_t))(v110 + 32))(v52, v53, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v52, 0, 1, v111);
      }
      v61 = v113;
      v60 = v114;
      v58 = v108;
      v70 = v25;
      if (v121 > 9)
      {
LABEL_84:
        v78 = (_QWORD *)((unint64_t)&v52[v70 + 7] & 0xFFFFFFFFFFFFFFF8);
        v79 = (_QWORD *)((unint64_t)&v53[v70 + 7] & 0xFFFFFFFFFFFFFFF8);
        *v78 = *v79;
        v80 = (_QWORD *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFF8);
        v81 = (_QWORD *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v80 = *v81;
        *(_QWORD *)(((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFF8);
        v59 = v25;
        if (v121 > 9)
          goto LABEL_93;
        goto LABEL_85;
      }
      if (v25 <= 3)
      {
        v72 = (~(-1 << (8 * v25)) - v121 + 10) >> (8 * v25);
        if (v72 > 0xFFFE)
        {
          *(_DWORD *)&v52[v25] = 0;
          v73 = 4;
          goto LABEL_83;
        }
        if (v72 > 0xFE)
        {
          *(_WORD *)&v52[v25] = 0;
          goto LABEL_81;
        }
        if (!v72)
        {
LABEL_81:
          v77 = v72 != 0;
          v76 = v72 >= 0xFF;
          v73 = 2;
          if (!v76)
            v73 = v77;
          goto LABEL_83;
        }
      }
      v52[v25] = 0;
      if (v25 > 3)
      {
LABEL_79:
        v73 = 1;
        goto LABEL_83;
      }
LABEL_66:
      v72 = (~(-1 << (8 * v25)) - v121 + 10) >> (8 * v25);
      if (v72 > 0xFFFE)
      {
        v73 = 4;
LABEL_83:
        v70 = v73 + v25;
        goto LABEL_84;
      }
      goto LABEL_81;
    }
  }
  else
  {
    v27 = *(_QWORD *)(v26 + 8);
    if (v27 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    if ((_DWORD)v27 == -1)
      goto LABEL_22;
  }
  v54 = v121;
  if (v121 > 9)
  {
    v56 = v115;
    v34 = v116;
    v57 = v15;
    memcpy(v116, v15, ((((((v115 + v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    v58 = v57;
    v59 = v25;
    v61 = v113;
    v60 = v114;
    goto LABEL_93;
  }
  v62 = 1;
  v63 = (~(-1 << (8 * v25)) - v121 + 10) >> (8 * v25);
  v64 = v63 != 0;
  if (v63 >= 0xFF)
    v64 = 2;
  if (v63 <= 0xFFFE)
    v65 = v64;
  else
    v65 = 4;
  if (v25 <= 3)
    v62 = v65;
  v56 = v115;
  v34 = v116;
  v66 = v15;
  memcpy(v116, v15, ((((((v115 + v62 + v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  v58 = v66;
  v61 = v113;
  v60 = v114;
LABEL_85:
  if (v25 <= 3)
  {
    v83 = (~(-1 << (8 * v25)) - v54 + 10) >> (8 * v25);
    if (v83 > 0xFFFE)
    {
      v82 = 4;
    }
    else
    {
      v84 = v83 != 0;
      v76 = v83 >= 0xFF;
      v82 = 2;
      if (!v76)
        v82 = v84;
    }
  }
  else
  {
    v82 = 1;
  }
  v59 = v82 + v25;
LABEL_93:
  v85 = ~v60;
  v86 = v56 + 7;
  v87 = ((((((v56 + 7 + v59) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v88 = (_QWORD *)((char *)v34 + v87);
  v89 = (_QWORD *)((char *)v58 + v87);
  *v88 = *v89;
  v90 = (_QWORD *)(((unint64_t)v88 + 15) & 0xFFFFFFFFFFFFFFF8);
  v91 = (_QWORD *)(((unint64_t)v89 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v90 = *v91;
  v92 = type metadata accessor for TimelineEntryRelevance(0);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(unsigned __int8 *)(v93 + 80);
  v95 = v94 + 8;
  v96 = ~v94;
  v97 = ((unint64_t)v90 + v94 + 8) & ~v94;
  v98 = ((unint64_t)v91 + v94 + 8) & ~v94;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v97, v98, v92);
  v99 = *(_QWORD *)(v93 + 64) + 7;
  *(_OWORD *)((v99 + v97) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v99 + v98) & 0xFFFFFFFFFFFFF8);
  if (v121 <= 9)
  {
    if (v25 <= 3)
    {
      v101 = (~(-1 << (8 * v25)) - v121 + 10) >> (8 * v25);
      if (v101 > 0xFFFE)
      {
        v100 = 4;
      }
      else
      {
        v102 = v101 != 0;
        v76 = v101 >= 0xFF;
        v100 = 2;
        if (!v76)
          v100 = v102;
      }
    }
    else
    {
      v100 = 1;
    }
    v25 += v100;
  }
  v103 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v104 = *(unsigned __int8 *)(v103 + 80);
  v105 = ((v99
         + ((v95
           + ((((v117 + v118) & v85)
             + ((((((v86 + v25) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & v96)) & 0xFFFFFFFFFFFFFFF8)
       + v104
       + 16;
  (*(void (**)(unint64_t, unint64_t))(v103 + 32))((v105 + v61) & ~v104, (v105 + v120) & ~v104);
  return v61;
}

uint64_t sub_10009C4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  size_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  _OWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  size_t v46;
  uint64_t v47;
  size_t v48;
  unsigned int v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unsigned int v53;
  _BOOL8 v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  uint64_t v103;
  unsigned int v104;
  _OWORD *v105;
  unint64_t v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  unint64_t v119;
  unint64_t v120;
  char *v121;
  _BYTE *v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  uint64_t (*v131)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v132;
  size_t v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  id *v137;
  uint64_t v138;
  size_t v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int (*v146)(unsigned __int8 *, uint64_t, uint64_t);
  uint64_t v147;
  unsigned int v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t v151;
  _BOOL8 v152;
  _QWORD *v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  size_t v157;
  int v158;
  int v159;
  size_t v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)(unsigned __int8 *, uint64_t, uint64_t);
  int v165;
  int v166;
  void *v167;
  unsigned __int8 *v168;
  size_t v169;
  unsigned int v170;
  _BOOL8 v171;
  unsigned int v172;
  uint64_t v173;
  _BOOL8 v174;
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  _QWORD *v178;
  void *v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int v182;
  _BOOL8 v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  void **v190;
  size_t v191;
  unint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  unint64_t v203;
  size_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned int v207;
  _BOOL8 v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  size_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD *v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  unsigned int v229;
  char *v230;
  unsigned int v231;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(a1, a2, v5);
  v7 = *(_QWORD *)(v6 + 64);
  v220 = a2;
  v221 = a1;
  v8 = (_BYTE *)(v7 + a1);
  v223 = v7;
  v9 = v7 + a2;
  *v8 = *(_BYTE *)(v7 + a2);
  v228 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v228 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v216 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v216 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 | v13 | 7;
  v15 = (unint64_t)&v8[v14 + 1] & ~v14;
  v230 = (char *)v15;
  v222 = v14 + 1;
  v218 = v14;
  v16 = (v14 + 1 + v9) & ~v14;
  v17 = *(unsigned int *)(v10 + 84);
  v18 = *(_DWORD *)(v12 + 84);
  if (v18)
    v19 = v18 - 1;
  else
    v19 = 0;
  v20 = v19 - 10;
  v231 = v19;
  if (v19 <= 9)
    v20 = 0;
  if (v17 > v20)
    v20 = *(_DWORD *)(v10 + 84);
  if (v20 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  v22 = ~v11;
  v23 = *(_QWORD *)(v10 + 64) + 7;
  v24 = ~v13;
  v25 = v13 + 9;
  v26 = (v13
       + 9
       + ((((((((((((((v23 + ((v11 + 48) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  v27 = *(_QWORD *)(v12 + 64);
  if (!v18)
    ++v27;
  v219 = v27;
  v28 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v215 = *(_QWORD *)(v216 - 8);
  v229 = *(_DWORD *)(v12 + 84);
  v217 = v26;
  v213 = v25;
  v214 = v24;
  if ((v20 & 0x80000000) == 0)
  {
    v29 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
    v30 = *(_QWORD *)(v29 + 8);
    if (v30 >= 0xFFFFFFFF)
      LODWORD(v30) = -1;
    v31 = v30 + 1;
    v32 = (_QWORD *)v16;
    if (*(_QWORD *)(v28 + 8) > 0xFFFFFFFEuLL)
    {
      if ((_DWORD)v30 == -1)
        goto LABEL_26;
      goto LABEL_47;
    }
    goto LABEL_29;
  }
  v225 = (_QWORD *)v16;
  v33 = v11 + 16;
  v34 = (v11 + 16 + ((v28 + 23) & 0xFFFFFFFFFFFFFFF8)) & v22;
  if ((_DWORD)v17 == v21)
  {
    v35 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v34, v17, v228);
    v22 = ~v11;
    v18 = v229;
    if (!v35)
      goto LABEL_24;
LABEL_27:
    v29 = ((unint64_t)v225 + 23) & 0xFFFFFFFFFFFFFFF8;
    v42 = (_OWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    v43 = ((unint64_t)v42 + v33) & v22;
    if ((_DWORD)v17 != v21)
    {
      if (v18 >= 2)
      {
        v103 = v22;
        v104 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v215 + 48))((v213+ ((((((((((((((v23 + v43) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v214, v229, v216);
        v22 = v103;
        v32 = v225;
        if (v104 >= 0xC)
        {
LABEL_30:
          v46 = v219;
          v47 = v220;
          v48 = v219;
          v49 = v231;
          v50 = v221;
          v51 = v230;
          v52 = v217;
          if (v231 <= 9)
          {
            if (v219 > 3)
            {
LABEL_120:
              v56 = 1;
LABEL_121:
              v48 = v56 + v46;
              goto LABEL_122;
            }
LABEL_32:
            v53 = (~(-1 << (8 * v46)) - v49 + 10) >> (8 * v46);
            if (v53 > 0xFFFE)
            {
              v56 = 4;
            }
            else
            {
              v54 = v53 != 0;
              v55 = v53 >= 0xFF;
              v56 = 2;
              if (!v55)
                v56 = v54;
            }
            goto LABEL_121;
          }
LABEL_122:
          memcpy(v51, v32, ((((((v52 + v48 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
          v138 = v218;
          goto LABEL_250;
        }
      }
      else
      {
        v32 = v225;
      }
LABEL_60:
      v227 = v32;
      *(_OWORD *)v230 = *(_OWORD *)v32;
      *(_OWORD *)v28 = *(_OWORD *)v29;
      v105 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v105 = *v42;
      v106 = ((unint64_t)v105 + v33) & v22;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v106, v43, v228);
      v107 = (_OWORD *)((v23 + v106) & 0xFFFFFFFFFFFFFFF8);
      v108 = (_OWORD *)((v23 + v43) & 0xFFFFFFFFFFFFFFF8);
      *v107 = *v108;
      v109 = (_OWORD *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8);
      v110 = (_OWORD *)(((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v109 = *v110;
      v111 = (_OWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
      v112 = (_OWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v111 = *v112;
      v113 = (_OWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
      v114 = (_OWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v113 = *v114;
      v115 = (_OWORD *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
      v116 = (_OWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v115 = *v116;
      v117 = (_OWORD *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8);
      v118 = (_OWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v117 = *v118;
      v119 = ((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8;
      v120 = ((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *(_BYTE *)(v119 + 8) = *(_BYTE *)(v120 + 8);
      v121 = (char *)((v213 + v119) & v214);
      v122 = (_BYTE *)((v213 + v120) & v214);
      v49 = v231;
      v50 = v221;
      v46 = v219;
      if (v231 <= 9)
      {
        if (v219 > 3)
          goto LABEL_62;
        v124 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
        if (v124 > 0xFFFE)
        {
          v123 = *(_DWORD *)&v122[v219];
          if (v123)
            goto LABEL_86;
        }
        else
        {
          if (v124 <= 0xFE)
          {
            if (!v124)
              goto LABEL_124;
LABEL_62:
            v123 = v122[v219];
            if (!v122[v219])
              goto LABEL_124;
LABEL_86:
            v129 = (v123 - 1) << (8 * v219);
            if (v219 > 3)
              v129 = 0;
            if ((_DWORD)v219)
            {
              if (v219 <= 3)
                v130 = v219;
              else
                v130 = 4;
              __asm { BR              X11 }
            }
            v51 = v230;
            v52 = v217;
            if (v129 + v231 != -1)
              goto LABEL_157;
            goto LABEL_159;
          }
          v123 = *(unsigned __int16 *)&v122[v219];
          if (*(_WORD *)&v122[v219])
            goto LABEL_86;
        }
      }
LABEL_124:
      v51 = v230;
      v52 = v217;
      if (v229 >= 2 && (*(unsigned int (**)(_BYTE *))(v215 + 48))(v122) >= 2)
      {
        if (v231 >= 0xA)
        {
          memcpy(v121, v122, v219);
          v139 = v219;
          v138 = v218;
          goto LABEL_183;
        }
LABEL_157:
        if (v219 <= 3)
        {
          v150 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
          v151 = v150 != 0;
          if (v150 >= 0xFF)
            v151 = 2;
          if (v150 <= 0xFFFE)
            v147 = v151;
          else
            v147 = 4;
        }
        else
        {
          v147 = 1;
        }
        memcpy(v121, v122, v147 + v219);
        v138 = v218;
        if (v219 > 3)
          goto LABEL_177;
        goto LABEL_165;
      }
LABEL_159:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v215 + 48))(v122, 1, v216))
      {
        memcpy(v121, v122, v219);
      }
      else
      {
        (*(void (**)(char *, _BYTE *, uint64_t))(v215 + 32))(v121, v122, v216);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v121, 0, 1, v216);
      }
      v138 = v218;
      v139 = v219;
      if (v231 > 9)
      {
LABEL_183:
        v153 = (_QWORD *)((unint64_t)&v121[v139 + 7] & 0xFFFFFFFFFFFFFFF8);
        v154 = (_QWORD *)((unint64_t)&v122[v139 + 7] & 0xFFFFFFFFFFFFFFF8);
        *v153 = *v154;
        v155 = (_QWORD *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFF8);
        v156 = (_QWORD *)(((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v155 = *v156;
        *(_QWORD *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFF8);
        v157 = v219;
        v47 = v220;
        v32 = v227;
        if (v231 > 9)
          goto LABEL_259;
        goto LABEL_251;
      }
      if (v219 <= 3)
      {
        v148 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
        if (v148 > 0xFFFE)
        {
          *(_DWORD *)&v121[v219] = 0;
          v149 = 4;
          goto LABEL_182;
        }
        if (v148 > 0xFE)
        {
          *(_WORD *)&v121[v219] = 0;
          goto LABEL_180;
        }
        if (!v148)
        {
LABEL_180:
          v152 = v148 != 0;
          v55 = v148 >= 0xFF;
          v149 = 2;
          if (!v55)
            v149 = v152;
          goto LABEL_182;
        }
      }
      v121[v219] = 0;
      if (v219 > 3)
      {
LABEL_177:
        v149 = 1;
        goto LABEL_182;
      }
LABEL_165:
      v148 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
      if (v148 > 0xFFFE)
      {
        v149 = 4;
LABEL_182:
        v139 = v149 + v219;
        goto LABEL_183;
      }
      goto LABEL_180;
    }
    v44 = ((unint64_t)v42 + v33) & v22;
    v45 = v22;
    v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v44, v17, v228);
    v22 = v45;
    v32 = v225;
LABEL_29:
    if (v31)
      goto LABEL_30;
    v42 = (_OWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    v33 = v11 + 16;
    v43 = ((unint64_t)v42 + v11 + 16) & v22;
    goto LABEL_60;
  }
  if (v18 >= 2)
  {
    v36 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v12 + 48))((v25+ ((((((((((((((v23 + v34) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v24, v18, v216);
    v22 = ~v11;
    v18 = v229;
    if (v36 >= 0xC)
      goto LABEL_27;
  }
LABEL_24:
  v29 = ((unint64_t)v225 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = (_QWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v38 = ((unint64_t)v37 + v33) & v22;
  if ((_DWORD)v17 == v21)
  {
    v39 = ((unint64_t)v37 + v33) & v22;
    v40 = v22;
    v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v39, v17, v228);
    v22 = v40;
    v32 = v225;
    if (!v41)
    {
LABEL_26:
      v37 = (_QWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
      v33 = v11 + 16;
      v38 = ((unint64_t)v37 + v11 + 16) & v22;
      goto LABEL_43;
    }
LABEL_47:
    v51 = v230;
    v89 = v22;
    swift_bridgeObjectRelease(*((_QWORD *)v230 + 1));
    swift_bridgeObjectRelease(*(_QWORD *)(v28 + 8));
    v90 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v90 + 8));
    v91 = (v11 + v90 + 16) & v89;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v91, v228);
    v92 = (v23 + v91) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v92 + 8));
    v93 = (v92 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v93 + 8));
    v94 = (v93 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v94 + 8));
    v95 = (v94 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v95 + 8));
    v96 = (v95 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v96 + 8));
    v97 = (v96 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v97 + 8));
    v98 = (_QWORD *)((v97 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRelease(*v98);
    v99 = ((unint64_t)v98 + v213) & v214;
    v49 = v231;
    v50 = v221;
    v46 = v219;
    v52 = v217;
    if (v231 <= 9)
    {
      if (v219 > 3)
        goto LABEL_49;
      v101 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
      if (v101 > 0xFFFE)
      {
        v100 = *(_DWORD *)(v99 + v219);
        if (v100)
          goto LABEL_69;
      }
      else
      {
        if (v101 <= 0xFE)
        {
          if (!v101)
            goto LABEL_96;
LABEL_49:
          v100 = *(unsigned __int8 *)(v99 + v219);
          if (!*(_BYTE *)(v99 + v219))
            goto LABEL_96;
LABEL_69:
          v125 = (v100 - 1) << (8 * v219);
          if (v219 > 3)
            v125 = 0;
          if ((_DWORD)v219)
          {
            if (v219 <= 3)
              v126 = v219;
            else
              v126 = 4;
            __asm { BR              X11 }
          }
          if (v125 + v231 != -1)
          {
LABEL_110:
            if (v219 <= 3)
            {
              v135 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
              v136 = v135 != 0;
              if (v135 >= 0xFF)
                v136 = 2;
              if (v135 <= 0xFFFE)
                v134 = v136;
              else
                v134 = 4;
            }
            else
            {
              v134 = 1;
            }
            v133 = v134 + v219;
LABEL_118:
            v137 = (id *)((((v99 + v133 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

            swift_bridgeObjectRelease(*(_QWORD *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFF8));
            v48 = v219;
            v47 = v220;
            if (v231 <= 9)
            {
              if (v219 > 3)
                goto LABEL_120;
              goto LABEL_32;
            }
            goto LABEL_122;
          }
LABEL_107:
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v215 + 48))(v99, 1, v216))
            (*(void (**)(unint64_t, uint64_t))(v215 + 8))(v99, v216);
LABEL_109:
          v133 = v219;
          if (v231 > 9)
            goto LABEL_118;
          goto LABEL_110;
        }
        v100 = *(unsigned __int16 *)(v99 + v219);
        if (*(_WORD *)(v99 + v219))
          goto LABEL_69;
      }
    }
LABEL_96:
    if (v229 >= 2 && (*(unsigned int (**)(unint64_t))(v215 + 48))(v99) >= 2)
      goto LABEL_109;
    goto LABEL_107;
  }
  if (v18 >= 2)
  {
    v57 = v22;
    v58 = (*(uint64_t (**)(unint64_t))(v215 + 48))((v213
                                                                   + ((((((((((((((v23 + v38) & 0xFFFFFFFFFFFFFFF8)
                                                                               + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                             + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                           + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                         + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v214);
    v22 = v57;
    v32 = v225;
    if (v58 >= 0xC)
      goto LABEL_47;
  }
  else
  {
    v32 = v225;
  }
LABEL_43:
  *(_QWORD *)v230 = *v32;
  v226 = v32;
  v59 = *((_QWORD *)v230 + 1);
  *((_QWORD *)v230 + 1) = v32[1];
  v60 = v22;
  swift_bridgeObjectRelease(v59);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v61 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_bridgeObjectRelease(v61);
  v62 = (_QWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v62 = *v37;
  v63 = v62[1];
  v62[1] = v37[1];
  swift_bridgeObjectRelease(v63);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 40))(((unint64_t)v62 + v33) & v60, v38, v228);
  v64 = (_QWORD *)((v23 + (((unint64_t)v62 + v33) & v60)) & 0xFFFFFFFFFFFFFFF8);
  v65 = (_QWORD *)((v23 + v38) & 0xFFFFFFFFFFFFFFF8);
  *v64 = *v65;
  v66 = v64[1];
  v64[1] = v65[1];
  swift_bridgeObjectRelease(v66);
  v67 = (_QWORD *)(((unint64_t)v64 + 23) & 0xFFFFFFFFFFFFFFF8);
  v68 = (_QWORD *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v67 = *v68;
  v69 = v67[1];
  v67[1] = v68[1];
  swift_bridgeObjectRelease(v69);
  v70 = (_QWORD *)(((unint64_t)v67 + 23) & 0xFFFFFFFFFFFFFFF8);
  v71 = (_QWORD *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v70 = *v71;
  v72 = v70[1];
  v70[1] = v71[1];
  swift_bridgeObjectRelease(v72);
  v73 = (_QWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
  v74 = (_QWORD *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v73 = *v74;
  v75 = v73[1];
  v73[1] = v74[1];
  swift_bridgeObjectRelease(v75);
  v76 = (_QWORD *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
  v77 = (_QWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v76 = *v77;
  v78 = v76[1];
  v76[1] = v77[1];
  swift_bridgeObjectRelease(v78);
  v79 = (_QWORD *)(((unint64_t)v76 + 23) & 0xFFFFFFFFFFFFFFF8);
  v80 = (_QWORD *)(((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v79 = *v80;
  v81 = v79[1];
  v79[1] = v80[1];
  swift_bridgeObjectRelease(v81);
  v82 = ((unint64_t)v79 + 23) & 0xFFFFFFFFFFFFFFF8;
  v83 = ((unint64_t)v80 + 23) & 0xFFFFFFFFFFFFFFF8;
  v84 = *(_QWORD *)v82;
  *(_QWORD *)v82 = *(_QWORD *)v83;
  swift_bridgeObjectRelease(v84);
  *(_BYTE *)(v82 + 8) = *(_BYTE *)(v83 + 8);
  v85 = (unsigned __int8 *)((v213 + v82) & v214);
  v86 = (unsigned __int8 *)((v213 + v83) & v214);
  v49 = v231;
  v50 = v221;
  v46 = v219;
  v87 = v229;
  if (v231 <= 9)
  {
    if (v219 > 3)
      goto LABEL_45;
    v102 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
    if (v102 > 0xFFFE)
    {
      v88 = *(_DWORD *)&v85[v219];
      if (v88)
        goto LABEL_78;
    }
    else
    {
      if (v102 <= 0xFE)
      {
        if (!v102)
          goto LABEL_100;
LABEL_45:
        v88 = v85[v219];
        if (!v85[v219])
          goto LABEL_100;
LABEL_78:
        v127 = (v88 - 1) << (8 * v219);
        if (v219 > 3)
          v127 = 0;
        if ((_DWORD)v219)
        {
          if (v219 <= 3)
            v128 = v219;
          else
            v128 = 4;
          __asm { BR              X11 }
        }
        v51 = v230;
        if (v127 + v231 == -1)
          goto LABEL_131;
        goto LABEL_129;
      }
      v88 = *(unsigned __int16 *)&v85[v219];
      if (*(_WORD *)&v85[v219])
        goto LABEL_78;
    }
  }
LABEL_100:
  if (v229 >= 2)
  {
    v131 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v215 + 48);
    v132 = v131(v85, v229, v216);
    v87 = v229;
    if (v132 >= 2)
    {
      v51 = v230;
      if (v231 > 9)
      {
LABEL_196:
        if (v131(v86, v87, v216) >= 2)
        {
          v160 = v219;
          if (v231 > 9)
            goto LABEL_237;
LABEL_219:
          if (v219 <= 3)
          {
            v170 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
            if (v170 > 0xFFFE)
            {
              v163 = 4;
            }
            else
            {
              v171 = v170 != 0;
              v55 = v170 >= 0xFF;
              v163 = 2;
              if (!v55)
                v163 = v171;
            }
            goto LABEL_236;
          }
          goto LABEL_220;
        }
LABEL_221:
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v215 + 48))(v86, 1, v216))
        {
          memcpy(v85, v86, v219);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v215 + 32))(v85, v86, v216);
          (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v85, 0, 1, v216);
        }
        v169 = v219;
        if (v231 > 9)
          goto LABEL_249;
        if (v219 <= 3)
        {
          v172 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
          if (v172 > 0xFFFE)
          {
            *(_DWORD *)&v85[v219] = 0;
            goto LABEL_247;
          }
          if (v172 > 0xFE)
          {
            *(_WORD *)&v85[v219] = 0;
            goto LABEL_243;
          }
          if (!v172)
          {
LABEL_243:
            v174 = v172 != 0;
            v55 = v172 >= 0xFF;
            v173 = 2;
            if (!v55)
              v173 = v174;
            goto LABEL_248;
          }
        }
        v85[v219] = 0;
LABEL_240:
        if (v219 > 3)
        {
          v173 = 1;
LABEL_248:
          v169 = v173 + v219;
          goto LABEL_249;
        }
        v172 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
        if (v172 <= 0xFFFE)
          goto LABEL_243;
LABEL_247:
        v173 = 4;
        goto LABEL_248;
      }
LABEL_129:
      if (v219 > 3)
      {
LABEL_130:
        v140 = v86[v219];
        goto LABEL_186;
      }
      v143 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
      if (v143 > 0xFFFE)
      {
        v140 = *(_DWORD *)&v86[v219];
      }
      else
      {
        if (v143 <= 0xFE)
        {
          if (!v143)
          {
LABEL_194:
            if (v87 < 2)
              goto LABEL_221;
            v131 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v215 + 48);
            goto LABEL_196;
          }
          goto LABEL_130;
        }
        v140 = *(unsigned __int16 *)&v86[v219];
      }
LABEL_186:
      if (v140)
      {
        v158 = (v140 - 1) << (8 * v219);
        if (v219 > 3)
          v158 = 0;
        if ((_DWORD)v219)
        {
          if (v219 <= 3)
            v159 = v219;
          else
            v159 = 4;
          __asm { BR              X11 }
        }
        if (v158 + v231 != -1)
          goto LABEL_219;
        goto LABEL_221;
      }
      goto LABEL_194;
    }
  }
  v51 = v230;
  if (v231 > 9)
    goto LABEL_152;
LABEL_131:
  if (v219 > 3)
  {
LABEL_132:
    v141 = v86[v219];
    goto LABEL_144;
  }
  v142 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
  if (v142 > 0xFFFE)
  {
    v141 = *(_DWORD *)&v86[v219];
  }
  else
  {
    if (v142 <= 0xFE)
    {
      if (!v142)
        goto LABEL_152;
      goto LABEL_132;
    }
    v141 = *(unsigned __int16 *)&v86[v219];
  }
LABEL_144:
  if (v141)
  {
    v144 = (v141 - 1) << (8 * v219);
    if (v219 > 3)
      v144 = 0;
    if ((_DWORD)v219)
    {
      if (v219 <= 3)
        v145 = v219;
      else
        v145 = 4;
      __asm { BR              X11 }
    }
    if (v144 + v231 != -1)
    {
      v146 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v215 + 48);
      goto LABEL_202;
    }
    goto LABEL_211;
  }
LABEL_152:
  if (v87 >= 2)
  {
    v146 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v215 + 48);
    if (((unsigned int (*)(unsigned __int8 *))v146)(v86) >= 2)
    {
LABEL_202:
      if (!v146(v85, 1, v216))
        (*(void (**)(unsigned __int8 *, uint64_t))(v215 + 8))(v85, v216);
      v160 = v219;
      if (v231 > 9)
        goto LABEL_237;
      if (v219 <= 3)
      {
        v161 = (~(-1 << (8 * v219)) - v231 + 10) >> (8 * v219);
        v162 = v161 != 0;
        if (v161 >= 0xFF)
          v162 = 2;
        if (v161 <= 0xFFFE)
          v163 = v162;
        else
          v163 = 4;
        goto LABEL_236;
      }
LABEL_220:
      v163 = 1;
LABEL_236:
      v160 = v163 + v219;
LABEL_237:
      v167 = (void *)((v213 + v82) & v214);
      v168 = v86;
      goto LABEL_238;
    }
  }
LABEL_211:
  v164 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v215 + 48);
  v165 = v164(v85, 1, v216);
  v166 = v164(v86, 1, v216);
  if (v165)
  {
    if (!v166)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v215 + 32))(v85, v86, v216);
      (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v85, 0, 1, v216);
      goto LABEL_239;
    }
  }
  else
  {
    if (!v166)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v215 + 40))(v85, v86, v216);
      goto LABEL_239;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v215 + 8))(v85, v216);
  }
  v167 = (void *)((v213 + v82) & v214);
  v168 = v86;
  v160 = v219;
LABEL_238:
  memcpy(v167, v168, v160);
LABEL_239:
  v169 = v219;
  if (v231 <= 9)
    goto LABEL_240;
LABEL_249:
  v175 = (_QWORD *)((unint64_t)&v85[v169 + 7] & 0xFFFFFFFFFFFFF8);
  v176 = (_QWORD *)((unint64_t)&v86[v169 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v175 = *v176;
  v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
  v178 = (_QWORD *)(((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8);
  v179 = *(void **)v177;
  *(_QWORD *)v177 = *v178;
  v177 += 15;

  v180 = *(_QWORD *)(v177 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v177 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(v180);
  v47 = v220;
  v32 = v226;
  v52 = v217;
  v138 = v218;
LABEL_250:
  v157 = v46;
  if (v49 > 9)
    goto LABEL_259;
LABEL_251:
  if (v46 <= 3)
  {
    v182 = (~(-1 << (8 * v46)) - v49 + 10) >> (8 * v46);
    if (v182 > 0xFFFE)
    {
      v181 = 4;
    }
    else
    {
      v183 = v182 != 0;
      v55 = v182 >= 0xFF;
      v181 = 2;
      if (!v55)
        v181 = v183;
    }
  }
  else
  {
    v181 = 1;
  }
  v157 = v181 + v46;
LABEL_259:
  v184 = ~v138;
  v185 = v52 + 7;
  v186 = ((((((v185 + v157) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v187 = &v51[v186];
  v188 = (uint64_t)v32 + v186 + 15;
  v189 = *(_QWORD *)&v51[v186];
  *(_QWORD *)&v51[v186] = *(_QWORD *)((char *)v32 + v186);
  swift_bridgeObjectRelease(v189);
  v190 = (void **)((unint64_t)(v187 + 15) & 0xFFFFFFFFFFFFFFF8);
  v191 = v46;
  v192 = v188 & 0xFFFFFFFFFFFFFFF8;
  v193 = *v190;
  *v190 = *(void **)(v188 & 0xFFFFFFFFFFFFFFF8);

  v194 = type metadata accessor for TimelineEntryRelevance(0);
  v195 = *(_QWORD *)(v194 - 8);
  v196 = *(unsigned __int8 *)(v195 + 80);
  v197 = v196 + 8;
  v198 = ~v196;
  v199 = ((unint64_t)v190 + v196 + 8) & ~v196;
  v200 = (v196 + 8 + v192) & ~v196;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 40))(v199, v200, v194);
  v201 = *(_QWORD *)(v195 + 64) + 7;
  v202 = (_QWORD *)((v201 + v199) & 0xFFFFFFFFFFFFFFF8);
  v203 = v201 + v200;
  v204 = v191;
  v203 &= 0xFFFFFFFFFFFFFFF8;
  *v202 = *(_QWORD *)v203;
  v205 = v202[1];
  v202[1] = *(_QWORD *)(v203 + 8);
  swift_bridgeObjectRelease(v205);
  if (v231 <= 9)
  {
    if (v191 <= 3)
    {
      v207 = (~(-1 << (8 * v191)) - v231 + 10) >> (8 * v191);
      if (v207 > 0xFFFE)
      {
        v206 = 4;
      }
      else
      {
        v208 = v207 != 0;
        v55 = v207 >= 0xFF;
        v206 = 2;
        if (!v55)
          v206 = v208;
      }
    }
    else
    {
      v206 = 1;
    }
    v204 = v206 + v191;
  }
  v209 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v210 = *(unsigned __int8 *)(v209 + 80);
  v211 = ((v201
         + ((v197
           + ((((v222 + v223) & v184)
             + ((((((v185 + v204) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & v198)) & 0xFFFFFFFFFFFFFFF8)
       + v210
       + 16;
  (*(void (**)(unint64_t, unint64_t))(v209 + 40))((v211 + v50) & ~v210, (v211 + v47) & ~v210);
  return v50;
}

uint64_t sub_10009DA24(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(unint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  unint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unsigned int v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;

  v67 = type metadata accessor for Date(0);
  v71 = *(_QWORD *)(v67 - 8);
  v5 = *(unsigned int *)(v71 + 84);
  v70 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = *(_DWORD *)(v70 + 84);
  v7 = *(_QWORD *)(type metadata accessor for Playlist.Variant(0) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = v9 - 10;
  if (v9 <= 9)
    v10 = 0;
  if (v6 <= v10)
    v11 = v10;
  else
    v11 = v6;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v65 = v12;
  v66 = v6;
  v13 = v12 - 1;
  if (v5 <= v12 - 1)
    v14 = v12 - 1;
  else
    v14 = v5;
  v15 = type metadata accessor for TimelineEntryRelevance(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v14 <= v17)
    v18 = *(_DWORD *)(v16 + 84);
  else
    v18 = v14;
  if (v18 <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v18;
  v20 = *(_QWORD *)(a3 + 16);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 84);
  if (v22 <= v19)
    v23 = v19;
  else
    v23 = *(_DWORD *)(v21 + 84);
  if (v8)
    v24 = *(_QWORD *)(v7 + 64);
  else
    v24 = *(_QWORD *)(v7 + 64) + 1;
  v25 = v24;
  if (v9 <= 9)
  {
    if (v24 <= 3)
    {
      v27 = (~(-1 << (8 * v24)) - v9 + 10) >> (8 * v24);
      v28 = v27 != 0;
      if (v27 >= 0xFF)
        v28 = 2;
      if (v27 <= 0xFFFE)
        v26 = v28;
      else
        v26 = 4;
    }
    else
    {
      v26 = 1;
    }
    v25 = v26 + v24;
  }
  if (!a2)
    return 0;
  v29 = *(unsigned __int8 *)(v70 + 80);
  v63 = *(_QWORD *)(v70 + 64) + 7;
  v64 = v15;
  v30 = *(unsigned __int8 *)(v7 + 80);
  v31 = *(_QWORD *)(v71 + 64);
  v32 = v29 | v30 | 7;
  v68 = ((v30
        + 9
        + ((((((((((((((v63 + ((v29 + 48) & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v30)
      + 7;
  v33 = ((v31 + v32 + 1) & ~v32) + 23;
  v34 = *(unsigned __int8 *)(v16 + 80);
  v35 = v34 + 8;
  v36 = *(_QWORD *)(v16 + 64) + 7;
  v37 = *(unsigned __int8 *)(v21 + 80);
  v38 = a2 - v23;
  v39 = a1;
  if (a2 > v23)
  {
    v40 = ((v37
          + ((v36
            + ((v35
              + ((v33
                + ((((((v68 + v25) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8)
          + 16) & ~v37)
        + *(_QWORD *)(v21 + 64);
    v41 = 8 * v40;
    if (v40 > 3)
      goto LABEL_39;
    v43 = ((v38 + ~(-1 << v41)) >> v41) + 1;
    if (HIWORD(v43))
    {
      v42 = *(_DWORD *)(a1 + v40);
      v35 = v34 + 8;
      if (v42)
        goto LABEL_46;
    }
    else
    {
      if (v43 <= 0xFF)
      {
        v35 = v34 + 8;
        if (v43 < 2)
          goto LABEL_55;
LABEL_39:
        v42 = *(unsigned __int8 *)(a1 + v40);
        if (!*(_BYTE *)(a1 + v40))
          goto LABEL_55;
LABEL_46:
        v44 = (v42 - 1) << v41;
        if (v40 > 3)
          v44 = 0;
        if ((_DWORD)v40)
        {
          if (v40 <= 3)
            v45 = v40;
          else
            v45 = 4;
          __asm { BR              X11 }
        }
        return v23 + v44 + 1;
      }
      v42 = *(unsigned __int16 *)(a1 + v40);
      v35 = v34 + 8;
      if (*(_WORD *)(a1 + v40))
        goto LABEL_46;
    }
  }
LABEL_55:
  v46 = ~v34;
  if (v19 < v22)
  {
    if (v9 <= 9)
    {
      if (v24 <= 3)
      {
        v53 = (~(-1 << (8 * v24)) - v9 + 10) >> (8 * v24);
        v54 = v53 != 0;
        if (v53 >= 0xFF)
          v54 = 2;
        if (v53 <= 0xFFFE)
          v47 = v54;
        else
          v47 = 4;
      }
      else
      {
        v47 = 1;
      }
      v24 += v47;
    }
    v39 = (a1
         + v37
         + ((v36
           + ((v35
             + ((v33
               + ((((((v68 + v24) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)) & v46)) & 0xFFFFFFFFFFFFFFF8)
         + 16) & ~v37;
    v48 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v21 + 48);
    v17 = *(unsigned int *)(v21 + 84);
    return v48(v39, v17, v20);
  }
  if ((_DWORD)v5 == v19)
  {
    v48 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v71 + 48);
    v17 = v5;
    v20 = v67;
    return v48(v39, v17, v20);
  }
  v49 = (a1 + v31 + v32 + 1) & ~v32;
  if (v13 == v19)
  {
    v50 = (v49 + 23) & 0xFFFFFFFFFFFFFFF8;
    if ((v11 & 0x80000000) == 0)
    {
      v51 = *(_QWORD *)(v50 + 8);
      if (v51 >= 0xFFFFFFFF)
        LODWORD(v51) = -1;
      v52 = v51 + 1;
LABEL_93:
      v62 = v52 != 0;
      result = v52 - 1;
      if ((_DWORD)result != 0 && v62)
        return result;
      return 0;
    }
    v57 = (v29 + ((v50 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v29;
    if (v66 == v65)
    {
      v52 = (*(uint64_t (**)(unint64_t))(v70 + 48))(v57);
      goto LABEL_93;
    }
    if (v8 >= 2)
    {
      v61 = (*(uint64_t (**)(unint64_t))(v7 + 48))((v30
                                                                   + 9
                                                                   + ((((((((((((((v63 + v57) & 0xFFFFFFFFFFFFFFF8)
                                                                               + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                             + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                           + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                         + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                     + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v30);
      if (v61 >= 0xC)
      {
        v52 = v61 - 11;
        goto LABEL_93;
      }
    }
    return 0;
  }
  v20 = v64;
  if (v9 <= 9)
  {
    if (v24 <= 3)
    {
      v58 = (~(-1 << (8 * v24)) - v9 + 10) >> (8 * v24);
      v59 = v58 != 0;
      if (v58 >= 0xFF)
        v59 = 2;
      if (v58 <= 0xFFFE)
        v55 = v59;
      else
        v55 = 4;
    }
    else
    {
      v55 = 1;
    }
    v24 += v55;
  }
  if ((v18 & 0x80000000) != 0)
  {
    v39 = (v35
         + ((v49
           + ((((((v68 + v24) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)) & v46;
    v48 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v16 + 48);
    return v48(v39, v17, v20);
  }
  v60 = *(_QWORD *)(v49
                  + ((((((v68 + v24) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 8);
  if (v60 >= 0xFFFFFFFF)
    LODWORD(v60) = -1;
  return (v60 + 1);
}

void sub_10009E00C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  size_t v28;
  BOOL v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;

  v6 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(type metadata accessor for Playlist.Variant(0) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  v13 = v12 - 10;
  if (v12 <= 9)
    v13 = 0;
  if (v9 > v13)
    v13 = v9;
  if (v13 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  v14 = v13 - 1;
  if (v7 <= v14)
    v15 = v14;
  else
    v15 = v7;
  v16 = *(_QWORD *)(type metadata accessor for TimelineEntryRelevance(0) - 8);
  if (v15 <= *(_DWORD *)(v16 + 84))
    v17 = *(_DWORD *)(v16 + 84);
  else
    v17 = v15;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v19 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v19 + 84) <= v18)
    v20 = v18;
  else
    v20 = *(_DWORD *)(v19 + 84);
  if (v11)
    v21 = *(_QWORD *)(v10 + 64);
  else
    v21 = *(_QWORD *)(v10 + 64) + 1;
  v24 = v21;
  if (v12 <= 9)
  {
    if (v21 <= 3)
    {
      v26 = (~(-1 << (8 * v21)) - v12 + 10) >> (8 * v21);
      v27 = v26 != 0;
      if (v26 >= 0xFF)
        v27 = 2;
      if (v26 <= 0xFFFE)
        v25 = v27;
      else
        v25 = 4;
    }
    else
    {
      v25 = 1;
    }
    v24 = v25 + v21;
  }
  v22 = *(unsigned __int8 *)(v8 + 80);
  v23 = *(unsigned __int8 *)(v10 + 80);
  v28 = ((*(unsigned __int8 *)(v19 + 80)
        + ((*(_QWORD *)(v16 + 64)
          + 7
          + ((*(unsigned __int8 *)(v16 + 80)
            + 8
            + ((((*(_QWORD *)(v6 + 64) + (v22 | v23 | 7) + 1) & ~(v22 | v23 | 7))
              + 23
              + ((((((((v23
                      + 9
                      + ((((((((((((((*(_QWORD *)(v8 + 64) + 7 + ((v22 + 48) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                + 23) & 0xFFFFFFFFFFFFFFF8)
                              + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v23)
                    + 7
                    + v24) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
      + *(_QWORD *)(v19 + 64);
  v29 = a3 >= v20;
  v30 = a3 - v20;
  if (v30 != 0 && v29)
  {
    if (v28 <= 3)
    {
      v33 = ((v30 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
      if (HIWORD(v33))
      {
        v31 = 4;
      }
      else if (v33 >= 0x100)
      {
        v31 = 2;
      }
      else
      {
        v31 = v33 > 1;
      }
    }
    else
    {
      v31 = 1;
    }
  }
  else
  {
    v31 = 0;
  }
  if (v20 < a2)
  {
    v32 = ~v20 + a2;
    if (v28 < 4)
    {
      if ((_DWORD)v28)
      {
        v34 = v32 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if ((_DWORD)v28 == 3)
        {
          *(_WORD *)a1 = v34;
          a1[2] = BYTE2(v34);
        }
        else if ((_DWORD)v28 == 2)
        {
          *(_WORD *)a1 = v34;
        }
        else
        {
          *a1 = v34;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v32;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X24 }
}

void sub_10009E40C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v2 - 88) + v1) = v0;
  JUMPOUT(0x10009E58CLL);
}

void sub_10009E418()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(*(_QWORD *)(v2 - 88) + v1) = v0;
  JUMPOUT(0x10009E58CLL);
}

void sub_10009E424()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(*(_QWORD *)(v2 - 88) + v1) = v0;
  JUMPOUT(0x10009E58CLL);
}

void sub_10009E868()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x10009E58CLL);
}

void sub_10009E898()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x10009E58CLL);
}

void sub_10009E8A0()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x10009E58CLL);
}

uint64_t type metadata accessor for DynamicWidgetBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicWidgetBackground);
}

unint64_t sub_10009E8C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10054B388;
  if (!qword_10054B388)
  {
    v1 = sub_100011650(&qword_10054AC88);
    v3[0] = sub_100011650(&qword_10054AC78);
    v3[1] = sub_100095428();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    v2[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B388);
  }
  return result;
}

unint64_t sub_10009E974()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10054B390;
  if (!qword_10054B390)
  {
    v1 = sub_100011650(&qword_10054AD50);
    v3[0] = sub_100011650(&qword_10054AD40);
    v3[1] = sub_100095594(&qword_10054AD68, &qword_10054AD40, &qword_10054AD70, &qword_10054AD38);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    v2[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B390);
  }
  return result;
}

unint64_t sub_10009EA4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10054B398;
  if (!qword_10054B398)
  {
    v1 = sub_100011650(&qword_10054AEC0);
    v3[0] = sub_100011650(&qword_10054AEB0);
    v3[1] = sub_100095594(&qword_10054AEC8, &qword_10054AEB0, &qword_10054AED0, &qword_10054AEA8);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    v2[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B398);
  }
  return result;
}

unint64_t sub_10009EB24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  _QWORD v4[2];
  uint64_t v5;
  uint64_t v6;

  result = qword_10054B3A0;
  if (!qword_10054B3A0)
  {
    v1 = sub_100011650(&qword_10054B120);
    v2 = sub_100011650(&qword_10054B110);
    v5 = sub_100011650(&qword_10054B108);
    v6 = sub_100095594(&qword_10054B128, &qword_10054B108, &qword_10054B130, &qword_10054B100);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    v5 = v2;
    v6 = OpaqueTypeConformance2;
    v4[0] = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v4[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_10054B3A0);
  }
  return result;
}

uint64_t sub_10009EC20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482C24, 1);
}

uint64_t sub_10009EC30(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100482BF0, 1);
}

uint64_t sub_10009EC64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10008EA34(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10009EC70(_QWORD *a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v1 = a1[1];
  v3[0] = *a1;
  v3[1] = sub_100011650(&qword_100548820);
  v3[2] = v1;
  v3[3] = sub_100056068((unint64_t *)&qword_100548838, &qword_100548820, (uint64_t (*)(void))sub_100029E98, (uint64_t (*)(void))sub_100029F1C);
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
}

uint64_t sub_10009ECEC()
{
  _QWORD v1[2];

  v1[0] = sub_100011650(&qword_10054B3A8);
  v1[1] = sub_100012324(&qword_10054B3B8, &qword_10054B3A8, (const char *)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_10009ED54()
{
  return sub_10009ED64(3u);
}

uint64_t sub_10009ED5C()
{
  return sub_10009ED64(4u);
}

uint64_t sub_10009ED64(unsigned __int8 a1)
{
  unint64_t v1;
  unint64_t v2;
  unsigned __int8 v4;
  __int128 v5;
  uint64_t v6;

  v4 = a1;
  v1 = sub_10009EEB4();
  v2 = sub_10001D9DC();
  NSUserDefaults.subscript.getter((uint64_t)&_s21WidgetUserDefaultsKeyON, v1, v2, &v5);
  if (v6)
  {
    if (swift_dynamicCast(&v4, &v5, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      return v4;
    else
      return 2;
  }
  else
  {
    sub_10009EEF8((uint64_t)&v5);
    return 2;
  }
}

uint64_t sub_10009EDFC()
{
  return sub_10009EE14(1);
}

uint64_t sub_10009EE04()
{
  return sub_10009EE14(2);
}

uint64_t sub_10009EE0C()
{
  return sub_10009EE14(0);
}

uint64_t sub_10009EE14(char a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  LOBYTE(v4) = a1;
  v1 = sub_10009EEB4();
  v2 = sub_10001D9DC();
  NSUserDefaults.subscript.getter((uint64_t)&_s21WidgetUserDefaultsKeyON, v1, v2, &v5);
  if (v6)
  {
    if (swift_dynamicCast(&v4, &v5, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10009EEF8((uint64_t)&v5);
    return 0;
  }
}

unint64_t sub_10009EEB4()
{
  unint64_t result;

  result = qword_10054B410;
  if (!qword_10054B410)
  {
    result = swift_getWitnessTable(&unk_100427448, &_s21WidgetUserDefaultsKeyON);
    atomic_store(result, (unint64_t *)&qword_10054B410);
  }
  return result;
}

uint64_t sub_10009EEF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_10054B418);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009EF38(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10009EF74 + 4 * byte_100427370[a1]))(0xD000000000000027, 0x8000000100444330);
}

uint64_t sub_10009EF74()
{
  uint64_t v0;

  return v0 - 12;
}

unint64_t sub_10009EF9C()
{
  return 0xD00000000000002ALL;
}

void sub_10009EFC4()
{
  id v0;
  NSString v1;
  id v2;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  qword_1005613B0 = (uint64_t)v2;
}

uint64_t _s21WidgetUserDefaultsKeyOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10009F07C + 4 * byte_10042737A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10009F0B0 + 4 * byte_100427375[v4]))();
}

uint64_t sub_10009F0B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009F0B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009F0C0);
  return result;
}

uint64_t sub_10009F0CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009F0D4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10009F0D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009F0E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s21WidgetUserDefaultsKeyOMa()
{
  return &_s21WidgetUserDefaultsKeyON;
}

unint64_t sub_10009F100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054B420;
  if (!qword_10054B420)
  {
    v1 = sub_100011650(&qword_10054B428);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10054B420);
  }
  return result;
}

void sub_10009F14C(char *a1)
{
  sub_1000668FC(*a1);
}

void sub_10009F158()
{
  char *v0;

  sub_10006BBB0(*v0);
}

void sub_10009F160(uint64_t a1)
{
  char *v1;

  sub_1000AA4CC(a1, *v1);
}

void sub_10009F168(uint64_t a1)
{
  char *v1;

  sub_1000AA66C(a1, *v1);
}

unint64_t sub_10009F170@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10009F21C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10009F19C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10009EF38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10009F1C4(_QWORD *a1@<X8>)
{
  *a1 = &off_1004F8FD8;
}

unint64_t sub_10009F1D8()
{
  unint64_t result;

  result = qword_10054B430;
  if (!qword_10054B430)
  {
    result = swift_getWitnessTable(&unk_100427420, &_s21WidgetUserDefaultsKeyON);
    atomic_store(result, (unint64_t *)&qword_10054B430);
  }
  return result;
}

unint64_t sub_10009F21C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004F8F40, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

double sub_10009F264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double result;
  _OWORD v12[2];
  uint64_t v13;

  v0 = sub_10000B4C8(&qword_100549008);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100427490;
  if (qword_1005478E8 != -1)
    swift_once(&qword_1005478E8, sub_10009F5B8);
  v2 = qword_10054B438;
  *(_QWORD *)(v1 + 32) = qword_10054B438;
  v3 = qword_1005478F0;
  v4 = swift_retain(v2);
  if (v3 != -1)
    v4 = swift_once(&qword_1005478F0, sub_10009F5CC);
  v5 = qword_10054B440;
  *(_QWORD *)(v1 + 40) = qword_10054B440;
  *(_QWORD *)(v1 + 48) = v5;
  *(_QWORD *)&v12[0] = v1;
  specialized Array._endMutation()(v4);
  swift_retain_n(v5, 2);
  Gradient.init(colors:)(v1);
  v6 = static UnitPoint.top.getter();
  v8 = v7;
  v9 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v12, v6, v8, v9, v10);
  result = *(double *)v12;
  xmmword_1005613B8 = v12[0];
  *(_OWORD *)algn_1005613C8 = v12[1];
  qword_1005613D8 = v13;
  return result;
}

double sub_10009F398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double result;
  _OWORD v12[2];
  uint64_t v13;

  v0 = sub_10000B4C8(&qword_100549008);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100427490;
  if (qword_1005478E8 != -1)
    swift_once(&qword_1005478E8, sub_10009F5B8);
  v2 = qword_10054B438;
  *(_QWORD *)(v1 + 32) = qword_10054B438;
  v3 = qword_1005478F0;
  v4 = swift_retain(v2);
  if (v3 != -1)
    v4 = swift_once(&qword_1005478F0, sub_10009F5CC);
  v5 = qword_10054B440;
  *(_QWORD *)(v1 + 40) = qword_10054B440;
  *(_QWORD *)(v1 + 48) = v5;
  *(_QWORD *)&v12[0] = v1;
  specialized Array._endMutation()(v4);
  swift_retain_n(v5, 2);
  Gradient.init(colors:)(v1);
  v6 = static UnitPoint.leading.getter();
  v8 = v7;
  v9 = static UnitPoint.trailing.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v12, v6, v8, v9, v10);
  result = *(double *)v12;
  xmmword_1005613E0 = v12[0];
  unk_1005613F0 = v12[1];
  qword_100561400 = v13;
  return result;
}

uint64_t sub_10009F4CC()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0x796C746E65636552, 0xEF646579616C5020);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "Recently Played widget default title", 36, 2);
  qword_100561408 = result;
  unk_100561410 = v6;
  return result;
}

uint64_t sub_10009F5B8(uint64_t a1)
{
  return sub_10009F5DC(0.08, a1, &qword_10054B438);
}

uint64_t sub_10009F5CC(uint64_t a1)
{
  return sub_10009F5DC(0.0, a1, &qword_10054B440);
}

uint64_t sub_10009F5DC(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = static Color.black.getter();
  v6 = Color.opacity(_:)(a1);
  result = swift_release(v5);
  *a3 = v6;
  return result;
}

void **initializeBufferWithCopyOfBuffer for CodableImage(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for CodableImage(id *a1)
{

}

void **assignWithCopy for CodableImage(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *initializeWithTake for CodableImage(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for CodableImage(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CodableImage(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableImage()
{
  return &type metadata for CodableImage;
}

void sub_10009F78C(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  UIImage *v12;
  NSData *v13;
  NSData *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[2];

  v5 = sub_10000B4C8(&qword_10054B460);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_10009FC68();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableImage.CodingKeys, &type metadata for CodableImage.CodingKeys, v11, v9, v10);
  if (!a2)
    goto LABEL_7;
  v12 = a2;
  v13 = UIImageJPEGRepresentation(v12, 0.9);
  if (v13)
  {
    v14 = v13;
    v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0xF000000000000000;
  }
  v24[0] = v15;
  v24[1] = v17;
  v23 = 0;
  v18 = sub_10000B4C8(&qword_10054B468);
  v19 = sub_10009FD04();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v24, &v23, v5, v18, v19);
  if (v2)
  {

    sub_10009FCF0(v15, v17);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return;
  }
  sub_10009FCF0(v15, v17);
  -[UIImage scale](v12, "scale");
  v24[0] = v20;
  v23 = 1;
  v21 = sub_1000381DC();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v24, &v23, v5, &type metadata for CGFloat, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

}

BOOL sub_10009F95C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10009F974()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C616373;
  else
    return 1635017060;
}

uint64_t sub_10009F9A4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10009FFEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10009F9C8(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10009F9D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10009FC68();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009F9FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10009FC68();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_10009FA24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_10009FA64(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_10009FA4C(_QWORD *a1)
{
  void **v1;

  sub_10009F78C(a1, *v1);
}

_QWORD *sub_10009FA64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  Class isa;
  uint64_t v19;
  double v20;
  unint64_t v21;
  char v22;

  v3 = sub_10000B4C8(&qword_10054B448);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10000D900(a1, v7);
  v10 = sub_10009FC68();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableImage.CodingKeys, &type metadata for CodableImage.CodingKeys, v10, v7, v8);
  if (!v1)
  {
    v22 = 1;
    v11 = sub_1000380CC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CGFloat, &v22, v3, &type metadata for CGFloat, v11);
    if ((v21 & 1) != 0
      || (v13 = v20,
          v22 = 0,
          v14 = sub_10009FCAC(),
          KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v22, v3, &type metadata for Data, v14), v15 = v21, v21 >> 60 == 15))
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v9 = 0;
    }
    else
    {
      v16 = *(_QWORD *)&v20;
      v17 = objc_allocWithZone((Class)UIImage);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v9 = objc_msgSend(v17, "initWithData:scale:", isa, v13);
      sub_10009FCF0(v16, v15);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  sub_100011758(a1);
  return v9;
}

unint64_t sub_10009FC68()
{
  unint64_t result;

  result = qword_10054B450;
  if (!qword_10054B450)
  {
    result = swift_getWitnessTable(&unk_1004275E0, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054B450);
  }
  return result;
}

unint64_t sub_10009FCAC()
{
  unint64_t result;

  result = qword_10054B458;
  if (!qword_10054B458)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_10054B458);
  }
  return result;
}

uint64_t sub_10009FCF0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10003A628(result, a2);
  return result;
}

unint64_t sub_10009FD04()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10054B470;
  if (!qword_10054B470)
  {
    v1 = sub_100011650(&qword_10054B468);
    v2 = sub_10009FD68();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10054B470);
  }
  return result;
}

unint64_t sub_10009FD68()
{
  unint64_t result;

  result = qword_10054B478;
  if (!qword_10054B478)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_10054B478);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CodableImage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10009FE88 + 4 * byte_1004274AD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10009FEBC + 4 * byte_1004274A8[v4]))();
}

uint64_t sub_10009FEBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009FEC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009FECCLL);
  return result;
}

uint64_t sub_10009FED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009FEE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10009FEE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009FEEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10009FEF8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CodableImage.CodingKeys()
{
  return &type metadata for CodableImage.CodingKeys;
}

unint64_t sub_10009FF18()
{
  unint64_t result;

  result = qword_10054B480;
  if (!qword_10054B480)
  {
    result = swift_getWitnessTable(&unk_1004275B8, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054B480);
  }
  return result;
}

unint64_t sub_10009FF60()
{
  unint64_t result;

  result = qword_10054B488;
  if (!qword_10054B488)
  {
    result = swift_getWitnessTable("I9\r", &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054B488);
  }
  return result;
}

unint64_t sub_10009FFA8()
{
  unint64_t result;

  result = qword_10054B490;
  if (!qword_10054B490)
  {
    result = swift_getWitnessTable(&unk_100427550, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054B490);
  }
  return result;
}

uint64_t sub_10009FFEC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C616373, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1000A00C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unsigned int (*v55)(_QWORD *, uint64_t, int *);
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void (*v95)(_QWORD *, _QWORD, uint64_t, int *);
  id v96;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *__dst;
  void *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v45);
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = (int *)type metadata accessor for WidgetMusicItem(0);
    v10 = v9[7];
    v11 = (char *)v4 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for URL(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v102 = v14;
    v104 = v13;
    v14(v11, v12, v13);
    v15 = v9[8];
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v9[9];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v9[10];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v9[11];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v9[12];
    v32 = (_QWORD *)((char *)v4 + v31);
    v33 = (_QWORD *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v9[13];
    v36 = (_QWORD *)((char *)v4 + v35);
    v37 = (_QWORD *)((char *)a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    *(_QWORD *)((char *)v4 + v9[14]) = *(_QWORD *)((char *)a2 + v9[14]);
    *((_BYTE *)v4 + v9[15]) = *((_BYTE *)a2 + v9[15]);
    v39 = v9[16];
    __dst = (char *)v4 + v39;
    v40 = (char *)a2 + v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = sub_10000B4C8(&qword_100547B50);
    v42 = *(_QWORD *)(v41 - 8);
    v100 = v42;
    v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    if (v101(v40, 10, v41))
    {
      v43 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      v44 = a3;
    }
    else
    {
      v46 = type metadata accessor for Playlist.Variant(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v40, 1, v46))
      {
        v48 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v40, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      v44 = a3;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 10, v41);
    }
    *(_QWORD *)((char *)v4 + v9[17]) = *(_QWORD *)((char *)a2 + v9[17]);
    v49 = v9[18];
    v50 = *(void **)((char *)a2 + v49);
    *(_QWORD *)((char *)v4 + v49) = v50;
    *(_QWORD *)((char *)v4 + v9[19]) = *(_QWORD *)((char *)a2 + v9[19]);
    v51 = *(int *)(v44 + 20);
    v52 = (_QWORD *)((char *)v4 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v54 = *((_QWORD *)v9 - 1);
    v55 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v54 + 48);
    v56 = v50;
    swift_bridgeObjectRetain();
    if (v55(v53, 1, v9))
    {
      v57 = sub_10000B4C8(&qword_100548310);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v98 = v54;
      v58 = v53[1];
      *v52 = *v53;
      v52[1] = v58;
      v59 = v53[3];
      v52[2] = v53[2];
      v52[3] = v59;
      v60 = v53[5];
      v52[4] = v53[4];
      v52[5] = v60;
      v61 = v9[7];
      v62 = (char *)v52 + v61;
      __dsta = (void *)v41;
      v63 = (char *)v53 + v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v102(v62, v63, v104);
      v64 = v9[8];
      v65 = (_QWORD *)((char *)v52 + v64);
      v66 = (_QWORD *)((char *)v53 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      v68 = v9[9];
      v69 = (_QWORD *)((char *)v52 + v68);
      v70 = (_QWORD *)((char *)v53 + v68);
      v105 = v70[1];
      *v69 = *v70;
      v69[1] = v105;
      v71 = v9[10];
      v72 = (_QWORD *)((char *)v52 + v71);
      v73 = (_QWORD *)((char *)v53 + v71);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      v75 = v9[11];
      v76 = (_QWORD *)((char *)v52 + v75);
      v77 = (_QWORD *)((char *)v53 + v75);
      v78 = v77[1];
      *v76 = *v77;
      v76[1] = v78;
      v79 = v9[12];
      v80 = (_QWORD *)((char *)v52 + v79);
      v81 = (_QWORD *)((char *)v53 + v79);
      v82 = v81[1];
      *v80 = *v81;
      v80[1] = v82;
      v83 = v9[13];
      v84 = (_QWORD *)((char *)v52 + v83);
      v85 = (_QWORD *)((char *)v53 + v83);
      v86 = v85[1];
      *v84 = *v85;
      v84[1] = v86;
      *(_QWORD *)((char *)v52 + v9[14]) = *(_QWORD *)((char *)v53 + v9[14]);
      *((_BYTE *)v52 + v9[15]) = *((_BYTE *)v53 + v9[15]);
      v87 = v9[16];
      v99 = (char *)v52 + v87;
      v103 = (char *)v53 + v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v101(v103, 10, (uint64_t)__dsta))
      {
        v88 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v99, v103, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        v44 = a3;
        v89 = v98;
      }
      else
      {
        v90 = type metadata accessor for Playlist.Variant(0);
        v91 = *(_QWORD *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v103, 1, v90))
        {
          v92 = sub_10000B4C8(&qword_100548358);
          memcpy(v99, v103, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v99, v103, v90);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v99, 0, 1, v90);
        }
        v44 = a3;
        v89 = v98;
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v100 + 56))(v99, 0, 10, __dsta);
      }
      *(_QWORD *)((char *)v52 + v9[17]) = *(_QWORD *)((char *)v53 + v9[17]);
      v93 = v9[18];
      v94 = *(void **)((char *)v53 + v93);
      *(_QWORD *)((char *)v52 + v93) = v94;
      *(_QWORD *)((char *)v52 + v9[19]) = *(_QWORD *)((char *)v53 + v9[19]);
      v95 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v89 + 56);
      v96 = v94;
      swift_bridgeObjectRetain();
      v95(v52, 0, 1, v9);
    }
    *((_BYTE *)v4 + *(int *)(v44 + 24)) = *((_BYTE *)a2 + *(int *)(v44 + 24));
  }
  return v4;
}

uint64_t sub_1000A0650(_QWORD *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  char *v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  v4 = (int *)type metadata accessor for WidgetMusicItem(0);
  v5 = (char *)a1 + v4[7];
  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[14]));
  v8 = (char *)a1 + v4[16];
  v9 = sub_10000B4C8(&qword_100547B50);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (!v10(v8, 10, v9))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  }

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[19]));
  v13 = (char *)a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(char *, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v13, 1, v4);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)v13 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)v13 + 5));
    v7(&v13[v4[7]], v6);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[8] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[9] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[10] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[11] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[12] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[13] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[14]]);
    v15 = &v13[v4[16]];
    if (!v10(v15, 10, v9))
    {
      v16 = type metadata accessor for Playlist.Variant(0);
      v17 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    }

    return swift_bridgeObjectRelease(*(_QWORD *)&v13[v4[19]]);
  }
  return result;
}

_QWORD *sub_1000A0908(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, void *);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  unsigned int (*v53)(_QWORD *, uint64_t, int *);
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  const void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void (*v94)(_QWORD *, _QWORD, uint64_t, int *);
  id v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, uint64_t);
  void (*v101)(char *, char *, void *);
  uint64_t v102;
  void *v103;
  char *v104;
  char *__dst;
  void *__dsta;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = (int *)type metadata accessor for WidgetMusicItem(0);
  v9 = v8[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(void (**)(char *, char *, void *))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v101 = v13;
  v103 = (void *)v12;
  v13(v10, v11, (void *)v12);
  v14 = v8[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v8[9];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v8[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v8[11];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = v8[12];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v8[13];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_QWORD *)((char *)a1 + v8[14]) = *(_QWORD *)((char *)a2 + v8[14]);
  *((_BYTE *)a1 + v8[15]) = *((_BYTE *)a2 + v8[15]);
  v38 = v8[16];
  __dst = (char *)a1 + v38;
  v39 = (char *)a2 + v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = sub_10000B4C8(&qword_100547B50);
  v41 = *(_QWORD *)(v40 - 8);
  v99 = v41;
  v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v100(v39, 10, v40))
  {
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    v43 = a3;
  }
  else
  {
    v44 = type metadata accessor for Playlist.Variant(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v39, 1, v44))
    {
      v46 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v39, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
    }
    v43 = a3;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 10, v40);
  }
  *(_QWORD *)((char *)a1 + v8[17]) = *(_QWORD *)((char *)a2 + v8[17]);
  v47 = v8[18];
  v48 = *(void **)((char *)a2 + v47);
  *(_QWORD *)((char *)a1 + v47) = v48;
  *(_QWORD *)((char *)a1 + v8[19]) = *(_QWORD *)((char *)a2 + v8[19]);
  v49 = *(int *)(v43 + 20);
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  v52 = *((_QWORD *)v8 - 1);
  v53 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v52 + 48);
  v54 = v48;
  swift_bridgeObjectRetain();
  if (v53(v51, 1, v8))
  {
    v55 = sub_10000B4C8(&qword_100548310);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v98 = v52;
    v56 = v51[1];
    *v50 = *v51;
    v50[1] = v56;
    v57 = v51[3];
    v50[2] = v51[2];
    v50[3] = v57;
    v58 = v51[5];
    v50[4] = v51[4];
    v50[5] = v58;
    v59 = v8[7];
    v60 = (char *)v50 + v59;
    __dsta = (void *)v40;
    v61 = (char *)v51 + v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v101(v60, v61, v103);
    v62 = v8[8];
    v63 = (_QWORD *)((char *)v50 + v62);
    v64 = (_QWORD *)((char *)v51 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    v66 = v8[9];
    v67 = (_QWORD *)((char *)v50 + v66);
    v68 = (_QWORD *)((char *)v51 + v66);
    v102 = v68[1];
    *v67 = *v68;
    v67[1] = v102;
    v69 = v8[10];
    v70 = (_QWORD *)((char *)v50 + v69);
    v71 = (_QWORD *)((char *)v51 + v69);
    v97 = v71[1];
    *v70 = *v71;
    v70[1] = v97;
    v72 = v8[11];
    v73 = (_QWORD *)((char *)v50 + v72);
    v74 = (_QWORD *)((char *)v51 + v72);
    v75 = v74[1];
    *v73 = *v74;
    v73[1] = v75;
    v76 = v8[12];
    v77 = (_QWORD *)((char *)v50 + v76);
    v78 = (_QWORD *)((char *)v51 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    v80 = v8[13];
    v81 = (_QWORD *)((char *)v50 + v80);
    v82 = (_QWORD *)((char *)v51 + v80);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    *(_QWORD *)((char *)v50 + v8[14]) = *(_QWORD *)((char *)v51 + v8[14]);
    *((_BYTE *)v50 + v8[15]) = *((_BYTE *)v51 + v8[15]);
    v84 = v8[16];
    v104 = (char *)v50 + v84;
    v85 = (char *)v51 + v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v86 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v100(v85, 10, (uint64_t)__dsta))
    {
      v87 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v104, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      v43 = a3;
      v88 = v98;
    }
    else
    {
      v89 = type metadata accessor for Playlist.Variant(0);
      v90 = *(_QWORD *)(v89 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v90 + 48))(v86, 1, v89))
      {
        v91 = sub_10000B4C8(&qword_100548358);
        memcpy(v104, v86, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v90 + 16))(v104, v86, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v104, 0, 1, v89);
      }
      v43 = a3;
      v88 = v98;
      (*(void (**)(char *, _QWORD, uint64_t, void *))(v99 + 56))(v104, 0, 10, __dsta);
    }
    *(_QWORD *)((char *)v50 + v8[17]) = *(_QWORD *)((char *)v51 + v8[17]);
    v92 = v8[18];
    v93 = *(void **)((char *)v51 + v92);
    *(_QWORD *)((char *)v50 + v92) = v93;
    *(_QWORD *)((char *)v50 + v8[19]) = *(_QWORD *)((char *)v51 + v8[19]);
    v94 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v88 + 56);
    v95 = v93;
    swift_bridgeObjectRetain();
    v94(v50, 0, 1, v8);
  }
  *((_BYTE *)a1 + *(int *)(v43 + 24)) = *((_BYTE *)a2 + *(int *)(v43 + 24));
  return a1;
}

_QWORD *sub_1000A0E60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t (*v68)(char *, uint64_t, int *);
  int v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  void (*v141)(_QWORD *, _QWORD, uint64_t, int *);
  id v142;
  uint64_t v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);
  int v145;
  int v146;
  uint64_t v147;
  void *v148;
  void *v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*__dst)(char *, char *);
  char *__dsta;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(char *, uint64_t, uint64_t);
  uint64_t v167;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = (int *)type metadata accessor for WidgetMusicItem(0);
  v10 = v9[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for URL(0);
  v164 = *(_QWORD *)(v13 - 8);
  v165 = v13;
  __dst = *(void (**)(char *, char *))(v164 + 24);
  __dst(v11, v12);
  v14 = v9[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v17 = v15[1];
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v17);
  v18 = v9[9];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v21 = v19[1];
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v21);
  v22 = v9[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v25 = v23[1];
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v25);
  v26 = v9[11];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  *v27 = *v28;
  v29 = v27[1];
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v29);
  v30 = v9[12];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  *v31 = *v32;
  v33 = v31[1];
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v33);
  v34 = v9[13];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v37 = v35[1];
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v37);
  v38 = v9[14];
  v39 = *(_QWORD *)((char *)a1 + v38);
  *(_QWORD *)((char *)a1 + v38) = *(_QWORD *)((char *)a2 + v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v39);
  *((_BYTE *)a1 + v9[15]) = *((_BYTE *)a2 + v9[15]);
  v40 = v9[16];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_10000B4C8(&qword_100547B50);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 10, v43);
  v47 = v45(v42, 10, v43);
  v166 = v45;
  if (!v46)
  {
    if (v47)
    {
      sub_100011694((uint64_t)v41, &qword_100547B50);
      goto LABEL_7;
    }
    v156 = v44;
    v159 = v43;
    v52 = a3;
    v53 = type metadata accessor for Playlist.Variant(0);
    v54 = *(_QWORD *)(v53 - 8);
    v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    v56 = v55(v41, 1, v53);
    v57 = v55(v42, 1, v53);
    a3 = v52;
    if (v56)
    {
      v44 = v156;
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v41, v42, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v41, 0, 1, v53);
LABEL_16:
        v43 = v159;
        goto LABEL_17;
      }
    }
    else
    {
      v44 = v156;
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 24))(v41, v42, v53);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v53);
    }
    v58 = sub_10000B4C8(&qword_100548358);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_16;
  }
  if (v47)
  {
LABEL_7:
    v51 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_17;
  }
  v48 = type metadata accessor for Playlist.Variant(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v42, 1, v48))
  {
    v50 = sub_10000B4C8(&qword_100548358);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v41, v42, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v41, 0, 1, v48);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 10, v43);
LABEL_17:
  *(_QWORD *)((char *)a1 + v9[17]) = *(_QWORD *)((char *)a2 + v9[17]);
  v59 = v9[18];
  v60 = *(void **)((char *)a1 + v59);
  v61 = *(void **)((char *)a2 + v59);
  *(_QWORD *)((char *)a1 + v59) = v61;
  v62 = v61;

  v63 = v9[19];
  v64 = *(_QWORD *)((char *)a1 + v63);
  *(_QWORD *)((char *)a1 + v63) = *(_QWORD *)((char *)a2 + v63);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v64);
  v65 = *(int *)(a3 + 20);
  v66 = (_QWORD *)((char *)a1 + v65);
  v67 = (char *)a2 + v65;
  v163 = *((_QWORD *)v9 - 1);
  v68 = *(uint64_t (**)(char *, uint64_t, int *))(v163 + 48);
  v69 = v68((char *)a1 + v65, 1, v9);
  v70 = v68(v67, 1, v9);
  if (!v69)
  {
    if (v70)
    {
      sub_10000E750((uint64_t)v66, type metadata accessor for WidgetMusicItem);
      goto LABEL_23;
    }
    v155 = a3;
    v158 = v44;
    *v66 = *(_QWORD *)v67;
    v97 = v66[1];
    v66[1] = *((_QWORD *)v67 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v97);
    v66[2] = *((_QWORD *)v67 + 2);
    v98 = v66[3];
    v66[3] = *((_QWORD *)v67 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v98);
    v66[4] = *((_QWORD *)v67 + 4);
    v99 = v66[5];
    v66[5] = *((_QWORD *)v67 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v99);
    ((void (*)(char *, char *, uint64_t))__dst)((char *)v66 + v9[7], &v67[v9[7]], v165);
    v100 = v9[8];
    v101 = (_QWORD *)((char *)v66 + v100);
    v102 = &v67[v100];
    *v101 = *(_QWORD *)v102;
    v103 = v101[1];
    v101[1] = *((_QWORD *)v102 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v103);
    v104 = v9[9];
    v105 = (_QWORD *)((char *)v66 + v104);
    v106 = &v67[v104];
    *v105 = *(_QWORD *)v106;
    v107 = v105[1];
    v105[1] = *((_QWORD *)v106 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v107);
    v108 = v9[10];
    v109 = (_QWORD *)((char *)v66 + v108);
    v110 = &v67[v108];
    *v109 = *(_QWORD *)v110;
    v111 = v109[1];
    v109[1] = *((_QWORD *)v110 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v111);
    v112 = v9[11];
    v113 = (_QWORD *)((char *)v66 + v112);
    v114 = &v67[v112];
    *v113 = *(_QWORD *)v114;
    v115 = v113[1];
    v113[1] = *((_QWORD *)v114 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v115);
    v116 = v9[12];
    v117 = (_QWORD *)((char *)v66 + v116);
    v118 = &v67[v116];
    *v117 = *(_QWORD *)v118;
    v119 = v117[1];
    v117[1] = *((_QWORD *)v118 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v119);
    v120 = v9[13];
    v121 = (_QWORD *)((char *)v66 + v120);
    v122 = &v67[v120];
    *v121 = *(_QWORD *)v122;
    v123 = v121[1];
    v121[1] = *((_QWORD *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v123);
    v124 = v9[14];
    v125 = *(_QWORD *)((char *)v66 + v124);
    *(_QWORD *)((char *)v66 + v124) = *(_QWORD *)&v67[v124];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v125);
    *((_BYTE *)v66 + v9[15]) = v67[v9[15]];
    v126 = v9[16];
    v127 = (char *)v66 + v126;
    v128 = &v67[v126];
    v129 = v166((char *)v66 + v126, 10, v43);
    v130 = v166(v128, 10, v43);
    if (v129)
    {
      if (!v130)
      {
        v131 = v43;
        v132 = type metadata accessor for Playlist.Variant(0);
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v128, 1, v132))
        {
          v134 = sub_10000B4C8(&qword_100548358);
          memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v127, v128, v132);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v127, 0, 1, v132);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v127, 0, 10, v131);
        goto LABEL_43;
      }
    }
    else
    {
      if (!v130)
      {
        v143 = type metadata accessor for Playlist.Variant(0);
        v167 = *(_QWORD *)(v143 - 8);
        v144 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v167 + 48);
        v145 = v144(v127, 1, v143);
        v146 = v144(v128, 1, v143);
        if (v145)
        {
          if (!v146)
          {
            (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v127, v128, v143);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v127, 0, 1, v143);
            goto LABEL_43;
          }
        }
        else
        {
          if (!v146)
          {
            (*(void (**)(char *, char *, uint64_t))(v167 + 24))(v127, v128, v143);
            goto LABEL_43;
          }
          (*(void (**)(char *, uint64_t))(v167 + 8))(v127, v143);
        }
        v138 = sub_10000B4C8(&qword_100548358);
LABEL_33:
        memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
LABEL_43:
        a3 = v155;
        *(_QWORD *)((char *)v66 + v9[17]) = *(_QWORD *)&v67[v9[17]];
        v147 = v9[18];
        v148 = *(void **)((char *)v66 + v147);
        v149 = *(void **)&v67[v147];
        *(_QWORD *)((char *)v66 + v147) = v149;
        v150 = v149;

        v151 = v9[19];
        v152 = *(_QWORD *)((char *)v66 + v151);
        *(_QWORD *)((char *)v66 + v151) = *(_QWORD *)&v67[v151];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v152);
        goto LABEL_44;
      }
      sub_100011694((uint64_t)v127, &qword_100547B50);
    }
    v138 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_33;
  }
  if (v70)
  {
LABEL_23:
    v96 = sub_10000B4C8(&qword_100548310);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_44;
  }
  v154 = a3;
  v157 = v44;
  *v66 = *(_QWORD *)v67;
  v66[1] = *((_QWORD *)v67 + 1);
  v66[2] = *((_QWORD *)v67 + 2);
  v66[3] = *((_QWORD *)v67 + 3);
  v66[4] = *((_QWORD *)v67 + 4);
  v66[5] = *((_QWORD *)v67 + 5);
  v71 = v9[7];
  v160 = v43;
  v72 = (char *)v66 + v71;
  v73 = &v67[v71];
  v74 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v74(v72, v73, v165);
  v75 = v9[8];
  v76 = (_QWORD *)((char *)v66 + v75);
  v77 = &v67[v75];
  *v76 = *(_QWORD *)v77;
  v76[1] = *((_QWORD *)v77 + 1);
  v78 = v9[9];
  v79 = (_QWORD *)((char *)v66 + v78);
  v80 = &v67[v78];
  *v79 = *(_QWORD *)v80;
  v79[1] = *((_QWORD *)v80 + 1);
  v81 = v9[10];
  v82 = (_QWORD *)((char *)v66 + v81);
  v83 = &v67[v81];
  *v82 = *(_QWORD *)v83;
  v82[1] = *((_QWORD *)v83 + 1);
  v84 = v9[11];
  v85 = (_QWORD *)((char *)v66 + v84);
  v86 = &v67[v84];
  *v85 = *(_QWORD *)v86;
  v85[1] = *((_QWORD *)v86 + 1);
  v87 = v9[12];
  v88 = (_QWORD *)((char *)v66 + v87);
  v89 = &v67[v87];
  *v88 = *(_QWORD *)v89;
  v88[1] = *((_QWORD *)v89 + 1);
  v90 = v9[13];
  v91 = (_QWORD *)((char *)v66 + v90);
  v92 = &v67[v90];
  *v91 = *(_QWORD *)v92;
  v91[1] = *((_QWORD *)v92 + 1);
  *(_QWORD *)((char *)v66 + v9[14]) = *(_QWORD *)&v67[v9[14]];
  *((_BYTE *)v66 + v9[15]) = v67[v9[15]];
  v93 = v9[16];
  __dsta = (char *)v66 + v93;
  v94 = &v67[v93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v166(v94, 10, v160))
  {
    v95 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dsta, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    a3 = v154;
  }
  else
  {
    v135 = type metadata accessor for Playlist.Variant(0);
    v136 = *(_QWORD *)(v135 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v94, 1, v135))
    {
      v137 = sub_10000B4C8(&qword_100548358);
      memcpy(__dsta, v94, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(__dsta, v94, v135);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(__dsta, 0, 1, v135);
    }
    a3 = v154;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(__dsta, 0, 10, v160);
  }
  *(_QWORD *)((char *)v66 + v9[17]) = *(_QWORD *)&v67[v9[17]];
  v139 = v9[18];
  v140 = *(void **)&v67[v139];
  *(_QWORD *)((char *)v66 + v139) = v140;
  *(_QWORD *)((char *)v66 + v9[19]) = *(_QWORD *)&v67[v9[19]];
  v141 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v163 + 56);
  v142 = v140;
  swift_bridgeObjectRetain();
  v141(v66, 0, 1, v9);
LABEL_44:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1000A1984(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = (int *)type metadata accessor for WidgetMusicItem(0);
  v8 = v7[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
  *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
  *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
  *(_OWORD *)((char *)a1 + v7[11]) = *(_OWORD *)((char *)a2 + v7[11]);
  *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
  *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
  *(_QWORD *)((char *)a1 + v7[14]) = *(_QWORD *)((char *)a2 + v7[14]);
  *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
  v13 = v7[16];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_10000B4C8(&qword_100547B50);
  v39 = *(_QWORD *)(v16 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v35 = v12;
  if (v17(v15, 10, v16))
  {
    v18 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v37 = a3;
    v19 = type metadata accessor for Playlist.Variant(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      v21 = sub_10000B4C8(&qword_100548358);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v14, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v14, 0, 10, v16);
    a3 = v37;
  }
  *(_QWORD *)((char *)a1 + v7[17]) = *(_QWORD *)((char *)a2 + v7[17]);
  *(_QWORD *)((char *)a1 + v7[18]) = *(_QWORD *)((char *)a2 + v7[18]);
  *(_QWORD *)((char *)a1 + v7[19]) = *(_QWORD *)((char *)a2 + v7[19]);
  v22 = *(int *)(a3 + 20);
  v23 = (_OWORD *)((char *)a1 + v22);
  v24 = (_OWORD *)((char *)a2 + v22);
  v25 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))((char *)a2 + v22, 1, v7))
  {
    v26 = sub_10000B4C8(&qword_100548310);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v38 = a3;
    v27 = v24[1];
    *v23 = *v24;
    v23[1] = v27;
    v23[2] = v24[2];
    v35((char *)v23 + v7[7], (char *)v24 + v7[7], v11);
    *(_OWORD *)((char *)v23 + v7[8]) = *(_OWORD *)((char *)v24 + v7[8]);
    *(_OWORD *)((char *)v23 + v7[9]) = *(_OWORD *)((char *)v24 + v7[9]);
    *(_OWORD *)((char *)v23 + v7[10]) = *(_OWORD *)((char *)v24 + v7[10]);
    *(_OWORD *)((char *)v23 + v7[11]) = *(_OWORD *)((char *)v24 + v7[11]);
    *(_OWORD *)((char *)v23 + v7[12]) = *(_OWORD *)((char *)v24 + v7[12]);
    *(_OWORD *)((char *)v23 + v7[13]) = *(_OWORD *)((char *)v24 + v7[13]);
    *(_QWORD *)((char *)v23 + v7[14]) = *(_QWORD *)((char *)v24 + v7[14]);
    *((_BYTE *)v23 + v7[15]) = *((_BYTE *)v24 + v7[15]);
    v28 = v7[16];
    v29 = (char *)v23 + v28;
    v30 = (char *)v24 + v28;
    if (v17((char *)v24 + v28, 10, v16))
    {
      v31 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = type metadata accessor for Playlist.Variant(0);
      v36 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v30, 1, v32))
      {
        v33 = sub_10000B4C8(&qword_100548358);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v29, v30, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v29, 0, 1, v32);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v29, 0, 10, v16);
    }
    a3 = v38;
    *(_QWORD *)((char *)v23 + v7[17]) = *(_QWORD *)((char *)v24 + v7[17]);
    *(_QWORD *)((char *)v23 + v7[18]) = *(_QWORD *)((char *)v24 + v7[18]);
    *(_QWORD *)((char *)v23 + v7[19]) = *(_QWORD *)((char *)v24 + v7[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v23, 0, 1, v7);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1000A1DA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, int *);
  int v79;
  int v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);
  int v145;
  int v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(char *, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for WidgetMusicItem(0);
  v13 = v12[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for URL(0);
  v154 = *(_QWORD *)(v16 - 8);
  v153 = *(void (**)(char *, char *, uint64_t))(v154 + 40);
  v153(v14, v15, v16);
  v17 = v12[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = v12[9];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = v12[10];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease(v34);
  v35 = v12[11];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = v36[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease(v40);
  v41 = v12[12];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  v46 = v42[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease(v46);
  v47 = v12[13];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  v52 = v48[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease(v52);
  v53 = v12[14];
  v54 = *(_QWORD *)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
  swift_bridgeObjectRelease(v54);
  *((_BYTE *)a1 + v12[15]) = *((_BYTE *)a2 + v12[15]);
  v55 = v12[16];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = sub_10000B4C8(&qword_100547B50);
  v155 = *(_QWORD *)(v58 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
  v60 = v59(v56, 10, v58);
  v156 = v59;
  v61 = v59(v57, 10, v58);
  v159 = a3;
  if (!v60)
  {
    if (!v61)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v152 = *(_QWORD *)(v66 - 8);
      v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v152 + 48);
      v68 = v67(v56, 1, v66);
      v69 = v67(v57, 1, v66);
      if (v68)
      {
        a3 = v159;
        if (!v69)
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v56, v57, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v56, 0, 1, v66);
          goto LABEL_14;
        }
      }
      else
      {
        a3 = v159;
        if (!v69)
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 40))(v56, v57, v66);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v152 + 8))(v56, v66);
      }
      v65 = sub_10000B4C8(&qword_100548358);
LABEL_8:
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      goto LABEL_14;
    }
    sub_100011694((uint64_t)v56, &qword_100547B50);
LABEL_7:
    v65 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_8;
  }
  if (v61)
    goto LABEL_7;
  v62 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v57, 1, v62))
  {
    v64 = sub_10000B4C8(&qword_100548358);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v56, v57, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v56, 0, 1, v62);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v56, 0, 10, v58);
LABEL_14:
  *(_QWORD *)((char *)a1 + v12[17]) = *(_QWORD *)((char *)a2 + v12[17]);
  v70 = v12[18];
  v71 = *(void **)((char *)a1 + v70);
  *(_QWORD *)((char *)a1 + v70) = *(_QWORD *)((char *)a2 + v70);

  v72 = v12[19];
  v73 = *(_QWORD *)((char *)a1 + v72);
  *(_QWORD *)((char *)a1 + v72) = *(_QWORD *)((char *)a2 + v72);
  swift_bridgeObjectRelease(v73);
  v74 = *(int *)(a3 + 20);
  v75 = (char *)a1 + v74;
  v76 = (char *)a2 + v74;
  v77 = *((_QWORD *)v12 - 1);
  v78 = *(uint64_t (**)(char *, uint64_t, int *))(v77 + 48);
  v79 = v78((char *)a1 + v74, 1, v12);
  v80 = v78(v76, 1, v12);
  if (!v79)
  {
    if (v80)
    {
      sub_10000E750((uint64_t)v75, type metadata accessor for WidgetMusicItem);
      goto LABEL_20;
    }
    v88 = *((_QWORD *)v76 + 1);
    v89 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *((_QWORD *)v75 + 1) = v88;
    swift_bridgeObjectRelease(v89);
    v90 = *((_QWORD *)v76 + 3);
    v91 = *((_QWORD *)v75 + 3);
    *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
    *((_QWORD *)v75 + 3) = v90;
    swift_bridgeObjectRelease(v91);
    v92 = *((_QWORD *)v76 + 5);
    v93 = *((_QWORD *)v75 + 5);
    *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
    *((_QWORD *)v75 + 5) = v92;
    swift_bridgeObjectRelease(v93);
    v153(&v75[v12[7]], &v76[v12[7]], v16);
    v94 = v12[8];
    v95 = &v75[v94];
    v96 = (uint64_t *)&v76[v94];
    v98 = *v96;
    v97 = v96[1];
    v99 = *((_QWORD *)v95 + 1);
    *(_QWORD *)v95 = v98;
    *((_QWORD *)v95 + 1) = v97;
    swift_bridgeObjectRelease(v99);
    v100 = v12[9];
    v101 = &v75[v100];
    v102 = (uint64_t *)&v76[v100];
    v104 = *v102;
    v103 = v102[1];
    v105 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v101 = v104;
    *((_QWORD *)v101 + 1) = v103;
    swift_bridgeObjectRelease(v105);
    v106 = v12[10];
    v107 = &v75[v106];
    v108 = (uint64_t *)&v76[v106];
    v110 = *v108;
    v109 = v108[1];
    v111 = *((_QWORD *)v107 + 1);
    *(_QWORD *)v107 = v110;
    *((_QWORD *)v107 + 1) = v109;
    swift_bridgeObjectRelease(v111);
    v112 = v12[11];
    v113 = &v75[v112];
    v114 = (uint64_t *)&v76[v112];
    v116 = *v114;
    v115 = v114[1];
    v117 = *((_QWORD *)v113 + 1);
    *(_QWORD *)v113 = v116;
    *((_QWORD *)v113 + 1) = v115;
    swift_bridgeObjectRelease(v117);
    v118 = v12[12];
    v119 = &v75[v118];
    v120 = (uint64_t *)&v76[v118];
    v122 = *v120;
    v121 = v120[1];
    v123 = *((_QWORD *)v119 + 1);
    *(_QWORD *)v119 = v122;
    *((_QWORD *)v119 + 1) = v121;
    swift_bridgeObjectRelease(v123);
    v124 = v12[13];
    v125 = &v75[v124];
    v126 = (uint64_t *)&v76[v124];
    v128 = *v126;
    v127 = v126[1];
    v129 = *((_QWORD *)v125 + 1);
    *(_QWORD *)v125 = v128;
    *((_QWORD *)v125 + 1) = v127;
    swift_bridgeObjectRelease(v129);
    v130 = v12[14];
    v131 = *(_QWORD *)&v75[v130];
    *(_QWORD *)&v75[v130] = *(_QWORD *)&v76[v130];
    swift_bridgeObjectRelease(v131);
    v75[v12[15]] = v76[v12[15]];
    v132 = v12[16];
    v133 = &v75[v132];
    v134 = &v76[v132];
    v135 = v156(&v75[v132], 10, v58);
    v136 = v156(v134, 10, v58);
    v85 = v159;
    if (v135)
    {
      if (!v136)
      {
        v137 = type metadata accessor for Playlist.Variant(0);
        v138 = *(_QWORD *)(v137 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v134, 1, v137))
        {
          v139 = sub_10000B4C8(&qword_100548358);
          memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v133, v134, v137);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v133, 0, 1, v137);
        }
        v85 = v159;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v133, 0, 10, v58);
        goto LABEL_43;
      }
    }
    else
    {
      if (!v136)
      {
        v143 = type metadata accessor for Playlist.Variant(0);
        v158 = *(_QWORD *)(v143 - 8);
        v144 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 48);
        v145 = v144(v133, 1, v143);
        v146 = v144(v134, 1, v143);
        if (v145)
        {
          v85 = v159;
          if (!v146)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v133, v134, v143);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v133, 0, 1, v143);
            goto LABEL_43;
          }
        }
        else
        {
          v85 = v159;
          if (!v146)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 40))(v133, v134, v143);
            goto LABEL_43;
          }
          (*(void (**)(char *, uint64_t))(v158 + 8))(v133, v143);
        }
        v142 = sub_10000B4C8(&qword_100548358);
LABEL_33:
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
LABEL_43:
        *(_QWORD *)&v75[v12[17]] = *(_QWORD *)&v76[v12[17]];
        v147 = v12[18];
        v148 = *(void **)&v75[v147];
        *(_QWORD *)&v75[v147] = *(_QWORD *)&v76[v147];

        v149 = v12[19];
        v150 = *(_QWORD *)&v75[v149];
        *(_QWORD *)&v75[v149] = *(_QWORD *)&v76[v149];
        swift_bridgeObjectRelease(v150);
        goto LABEL_44;
      }
      sub_100011694((uint64_t)v133, &qword_100547B50);
    }
    v142 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_33;
  }
  if (v80)
  {
LABEL_20:
    v87 = sub_10000B4C8(&qword_100548310);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    v85 = v159;
    goto LABEL_44;
  }
  v81 = *((_OWORD *)v76 + 1);
  *(_OWORD *)v75 = *(_OWORD *)v76;
  *((_OWORD *)v75 + 1) = v81;
  *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
  (*(void (**)(char *, char *, uint64_t))(v154 + 32))(&v75[v12[7]], &v76[v12[7]], v16);
  *(_OWORD *)&v75[v12[8]] = *(_OWORD *)&v76[v12[8]];
  *(_OWORD *)&v75[v12[9]] = *(_OWORD *)&v76[v12[9]];
  *(_OWORD *)&v75[v12[10]] = *(_OWORD *)&v76[v12[10]];
  *(_OWORD *)&v75[v12[11]] = *(_OWORD *)&v76[v12[11]];
  *(_OWORD *)&v75[v12[12]] = *(_OWORD *)&v76[v12[12]];
  *(_OWORD *)&v75[v12[13]] = *(_OWORD *)&v76[v12[13]];
  *(_QWORD *)&v75[v12[14]] = *(_QWORD *)&v76[v12[14]];
  v75[v12[15]] = v76[v12[15]];
  v82 = v12[16];
  v83 = &v75[v82];
  v84 = &v76[v82];
  v85 = v159;
  if (v156(&v76[v82], 10, v58))
  {
    v86 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v140 = type metadata accessor for Playlist.Variant(0);
    v157 = *(_QWORD *)(v140 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v84, 1, v140))
    {
      v141 = sub_10000B4C8(&qword_100548358);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v83, v84, v140);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v83, 0, 1, v140);
    }
    v85 = v159;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v83, 0, 10, v58);
  }
  *(_QWORD *)&v75[v12[17]] = *(_QWORD *)&v76[v12[17]];
  *(_QWORD *)&v75[v12[18]] = *(_QWORD *)&v76[v12[18]];
  *(_QWORD *)&v75[v12[19]] = *(_QWORD *)&v76[v12[19]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v77 + 56))(v75, 0, 1, v12);
LABEL_44:
  *((_BYTE *)a1 + *(int *)(v85 + 24)) = *((_BYTE *)a2 + *(int *)(v85 + 24));
  return a1;
}

uint64_t sub_1000A2694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A26A0);
}

uint64_t sub_1000A26A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = type metadata accessor for WidgetMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10000B4C8(&qword_100548310);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 3u)
    v14 = 3;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v15 = v14 - 3;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 3u)
    return v15;
  else
    return 0;
}

uint64_t sub_1000A2754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A2760);
}

uint64_t sub_1000A2760(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for WidgetMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_10000B4C8(&qword_100548310);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
  return result;
}

uint64_t type metadata accessor for PlaybackButtonLarge(uint64_t a1)
{
  uint64_t result;

  result = qword_10054B4F0;
  if (!qword_10054B4F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaybackButtonLarge);
  return result;
}

void sub_1000A2844(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for WidgetMusicItem(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100031FFC(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100427668;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_1000A28D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482D00, 1);
}

uint64_t sub_1000A28E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v2 = sub_10000B4C8(&qword_10054B530);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054B538);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A2AF0(v30);
  v10 = v31;
  v11 = v32;
  v12 = sub_10000D900(v30, v31);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v27 = v1;
  v16 = sub_10000B4C8(&qword_10054B540);
  v17 = sub_1000A3688();
  Button.init<A>(intent:label:)(v14, sub_1000A3680, v26, v16, v10, v17, v11);
  KeyPath = swift_getKeyPath(&unk_1004276D0);
  v28 = KeyPath;
  v29 = 0;
  v19 = sub_100012324(&qword_10054B570, &qword_10054B530, (const char *)&protocol conformance descriptor for Button<A>);
  v20 = sub_1000A3E6C();
  View.buttonStyle<A>(_:)(&v28, v2, &type metadata for TogglePlaybackButtonStyle, v19, v20);
  v21 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v21);
  sub_100011758(v30);
  v22 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v25, v9, v6);
  *(_BYTE *)(v22 + *(int *)(sub_10000B4C8(&qword_10054B580) + 36)) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1000A2AF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t result;
  uint64_t v32;
  uint64_t *v33;

  v33 = a1;
  v2 = type metadata accessor for WidgetMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100548310);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v32 - v16;
  v32 = type metadata accessor for PlaybackButtonLarge(0);
  sub_100011370(v1 + *(int *)(v32 + 20), (uint64_t)v17, &qword_100548310);
  sub_10000D964(v1, (uint64_t)v15, type metadata accessor for WidgetMusicItem);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v18 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100011370((uint64_t)v17, (uint64_t)v8, &qword_100548310);
  sub_100011370((uint64_t)v15, v18, &qword_100548310);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v19((uint64_t)v8, 1, v2) == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100548310);
    sub_100011694((uint64_t)v17, &qword_100548310);
    if (v19(v18, 1, v2) == 1)
    {
      sub_100011694((uint64_t)v8, &qword_100548310);
      v20 = v33;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011370((uint64_t)v8, (uint64_t)v12, &qword_100548310);
  if (v19(v18, 1, v2) == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100548310);
    sub_100011694((uint64_t)v17, &qword_100548310);
    sub_10000E750((uint64_t)v12, type metadata accessor for WidgetMusicItem);
LABEL_6:
    sub_100011694((uint64_t)v8, &qword_100548868);
    v20 = v33;
LABEL_9:
    v22 = (uint64_t *)(v1 + *(int *)(v2 + 40));
    v23 = *v22;
    v24 = v22[1];
    v25 = (uint64_t *)(v1 + *(int *)(v2 + 52));
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_100030084(v23, v24, v26, v27);
    v30 = v29;
    v20[3] = (uint64_t)&type metadata for StartPlaybackAppIntent;
    result = sub_10002EE5C();
    v20[4] = result;
    *v20 = v28;
    v20[1] = v30;
    return result;
  }
  sub_100033568(v18, (uint64_t)v5);
  v21 = sub_100038B84((uint64_t)v12, (uint64_t)v5);
  sub_10000E750((uint64_t)v5, type metadata accessor for WidgetMusicItem);
  sub_100011694((uint64_t)v15, &qword_100548310);
  sub_100011694((uint64_t)v17, &qword_100548310);
  sub_10000E750((uint64_t)v12, type metadata accessor for WidgetMusicItem);
  sub_100011694((uint64_t)v8, &qword_100548310);
  v20 = v33;
  if ((v21 & 1) == 0)
    goto LABEL_9;
LABEL_8:
  if ((*(_BYTE *)(v1 + *(int *)(v32 + 24)) & 0xFE) == 2)
    goto LABEL_9;
  v20[3] = (uint64_t)&type metadata for TogglePlaybackAppIntent;
  result = sub_10002EEA0();
  v20[4] = result;
  return result;
}

uint64_t sub_1000A2E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[10];
  _BYTE v13[167];
  char v14;

  v3 = static VerticalAlignment.center.getter(a1);
  sub_1000A2F70((uint64_t)v12);
  *(_OWORD *)&v13[103] = v12[6];
  *(_OWORD *)&v13[119] = v12[7];
  *(_OWORD *)&v13[135] = v12[8];
  *(_OWORD *)&v13[151] = v12[9];
  *(_OWORD *)&v13[39] = v12[2];
  *(_OWORD *)&v13[55] = v12[3];
  *(_OWORD *)&v13[71] = v12[4];
  *(_OWORD *)&v13[87] = v12[5];
  *(_OWORD *)&v13[7] = v12[0];
  v14 = 0;
  *(_OWORD *)&v13[23] = v12[1];
  if (qword_1005477D0 != -1)
    swift_once(&qword_1005477D0, sub_100033BF8);
  v4 = *(_OWORD *)&v13[96];
  *(_OWORD *)(a2 + 129) = *(_OWORD *)&v13[112];
  v5 = *(_OWORD *)&v13[144];
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v13[128];
  *(_OWORD *)(a2 + 161) = v5;
  v6 = *(_OWORD *)&v13[32];
  *(_OWORD *)(a2 + 65) = *(_OWORD *)&v13[48];
  v7 = *(_OWORD *)&v13[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v13[64];
  *(_OWORD *)(a2 + 97) = v7;
  *(_OWORD *)(a2 + 113) = v4;
  v8 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v13;
  *(_OWORD *)(a2 + 33) = v8;
  v9 = qword_100561250;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = 0x4018000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v10 = *(_QWORD *)&v13[159];
  *(_OWORD *)(a2 + 49) = v6;
  *(_QWORD *)(a2 + 176) = v10;
  *(_QWORD *)(a2 + 184) = v9;
  return swift_retain(v9);
}

void sub_1000A2F70(uint64_t a1@<X8>)
{
  char v2;
  BOOL v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _QWORD v56[2];
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;

  v2 = sub_1000A3280();
  v3 = (v2 & 1) == 0;
  if ((v2 & 1) != 0)
    v4 = 0x69662E6573756170;
  else
    v4 = 0x6C69662E79616C70;
  if (v3)
    v5 = 0xE90000000000006CLL;
  else
    v5 = 0xEA00000000006C6CLL;
  v6 = Image.init(systemName:)(v4, v5);
  v7 = static Font.footnote.getter(v6);
  v8 = ((uint64_t (*)(void))Font.bold())();
  swift_release(v7);
  v43 = v8;
  v44 = v6;
  KeyPath = swift_getKeyPath(&unk_1004276F8);
  if ((sub_1000A3280() & 1) != 0)
  {
    v10 = 0x6573756150;
    v11 = 0xE500000000000000;
  }
  else
  {
    v10 = 2036427856;
    v11 = 0xE400000000000000;
  }
  v12 = LocalizedStringKey.init(stringLiteral:)(v10, v11);
  LOWORD(v41) = 256;
  v13 = Text.init(_:tableName:bundle:comment:)(v12);
  v15 = v14;
  HIDWORD(v41) = v16;
  v18 = v17;
  v19 = swift_getKeyPath(&unk_100427728);
  v20 = static Font.subheadline.getter(v19);
  v22 = Font.bold()(v20, v21);
  swift_release(v20);
  v23 = swift_getKeyPath(&unk_1004276F8);
  v24 = swift_getKeyPath(&unk_100427758);
  v25 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleSubheadline, UIContentSizeCategoryExtraExtraExtraLarge, 0, v41);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "lineHeight");
    v28 = v27;

    v30 = static Alignment.center.getter(v29);
    _FrameLayout.init(width:height:alignment:)(&v72, 0, 1, v28, 0, v30, v31);
    v32 = v72;
    v33 = v74;
    v34 = v76;
    v35 = v77;
    v46 = v73;
    v45 = v75;
    *(_QWORD *)&v47 = v13;
    *((_QWORD *)&v47 + 1) = v15;
    LOBYTE(v48) = v42 & 1;
    *((_QWORD *)&v48 + 1) = v18;
    *(_QWORD *)&v49 = v19;
    *((_QWORD *)&v49 + 1) = 0x3FE3333333333333;
    *(_QWORD *)&v50 = v23;
    *((_QWORD *)&v50 + 1) = v22;
    *(_QWORD *)&v51 = v24;
    *((_QWORD *)&v51 + 1) = 1;
    LOBYTE(v52) = 0;
    *((_QWORD *)&v52 + 1) = v72;
    LOBYTE(v53) = v73;
    *((_QWORD *)&v53 + 1) = v74;
    LOBYTE(v54) = v75;
    *((_QWORD *)&v54 + 1) = v76;
    v55 = v77;
    v36 = v48;
    *(_OWORD *)(a1 + 24) = v47;
    v37 = v52;
    *(_OWORD *)(a1 + 88) = v51;
    v38 = v49;
    *(_OWORD *)(a1 + 72) = v50;
    *(_OWORD *)(a1 + 56) = v38;
    *(_OWORD *)(a1 + 40) = v36;
    v39 = v53;
    v40 = v54;
    *(_QWORD *)(a1 + 152) = v35;
    *(_OWORD *)(a1 + 136) = v40;
    *(_OWORD *)(a1 + 120) = v39;
    *(_OWORD *)(a1 + 104) = v37;
    *(_QWORD *)a1 = v44;
    *(_QWORD *)(a1 + 8) = KeyPath;
    *(_QWORD *)(a1 + 16) = v43;
    v56[0] = v13;
    v56[1] = v15;
    v57 = v42 & 1;
    v58 = v18;
    v59 = v19;
    v60 = 0x3FE3333333333333;
    v61 = v23;
    v62 = v22;
    v63 = v24;
    v64 = 1;
    v65 = 0;
    v66 = v32;
    v67 = v46;
    v68 = v33;
    v69 = v45;
    v70 = v34;
    v71 = v35;
    swift_retain(v44);
    swift_retain(KeyPath);
    swift_retain(v43);
    sub_1000A3F0C((uint64_t)&v47);
    sub_1000A3F80((uint64_t)v56);
    swift_release(v43);
    swift_release(KeyPath);
    swift_release(v44);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000A3280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v0 = type metadata accessor for PlaybackButtonLarge(0);
  __chkstk_darwin(v0);
  v28 = (uint64_t)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for WidgetMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100548310);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v26 - v16;
  v27 = v0;
  v18 = *(int *)(v0 + 20);
  v19 = v29;
  sub_100011370(v29 + v18, (uint64_t)&v26 - v16, &qword_100548310);
  sub_10000D964(v19, (uint64_t)v15, type metadata accessor for WidgetMusicItem);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100011370((uint64_t)v17, (uint64_t)v8, &qword_100548310);
  sub_100011370((uint64_t)v15, v20, &qword_100548310);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v21((uint64_t)v8, 1, v2) == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100548310);
    sub_100011694((uint64_t)v17, &qword_100548310);
    v22 = v21(v20, 1, v2);
    v23 = v28;
    if (v22 == 1)
    {
      sub_100011694((uint64_t)v8, &qword_100548310);
      sub_10000D964(v19, v23, type metadata accessor for PlaybackButtonLarge);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011370((uint64_t)v8, (uint64_t)v12, &qword_100548310);
  if (v21(v20, 1, v2) == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100548310);
    sub_100011694((uint64_t)v17, &qword_100548310);
    sub_10000E750((uint64_t)v12, type metadata accessor for WidgetMusicItem);
    v23 = v28;
LABEL_6:
    sub_100011694((uint64_t)v8, &qword_100548868);
    sub_10000D964(v19, v23, type metadata accessor for PlaybackButtonLarge);
    goto LABEL_9;
  }
  sub_100033568(v20, (uint64_t)v5);
  v24 = sub_100038B84((uint64_t)v12, (uint64_t)v5);
  sub_10000E750((uint64_t)v5, type metadata accessor for WidgetMusicItem);
  sub_100011694((uint64_t)v15, &qword_100548310);
  sub_100011694((uint64_t)v17, &qword_100548310);
  sub_10000E750((uint64_t)v12, type metadata accessor for WidgetMusicItem);
  sub_100011694((uint64_t)v8, &qword_100548310);
  v23 = v28;
  sub_10000D964(v19, v28, type metadata accessor for PlaybackButtonLarge);
  if ((v24 & 1) != 0)
LABEL_8:
    __asm { BR              X10 }
LABEL_9:
  sub_10000E750(v23, type metadata accessor for PlaybackButtonLarge);
  return 0;
}

uint64_t sub_1000A3680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000A2E5C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000A3688()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B548;
  if (!qword_10054B548)
  {
    v1 = sub_100011650(&qword_10054B540);
    v2[0] = sub_100012324(&qword_10054B550, &qword_10054B558, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = sub_100012324(&qword_10054B560, &qword_10054B568, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B548);
  }
  return result;
}

uint64_t sub_1000A3724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  int64x2_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v65 = a2;
  v68 = a4;
  v69 = a1;
  v64 = a3 & 1;
  v67 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v67);
  v66 = (int64x2_t *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10054B5A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054B5A8);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10000B4C8(&qword_10054B5B0);
  __chkstk_darwin(v62);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10000B4C8(&qword_10054B5B8);
  v17 = __chkstk_darwin(v63);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = ButtonStyleConfiguration.label.getter(v17);
  v21 = static Edge.Set.leading.getter(v20);
  v22 = EdgeInsets.init(_all:)(12.0);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  v29 = &v11[*(int *)(v9 + 36)];
  *v29 = v21;
  *((double *)v29 + 1) = v22;
  *((_QWORD *)v29 + 2) = v24;
  *((_QWORD *)v29 + 3) = v26;
  *((_QWORD *)v29 + 4) = v28;
  v29[40] = 0;
  v30 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v9) = static Edge.Set.trailing.getter(v30);
  v31 = EdgeInsets.init(_all:)(16.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_10054B5A0);
  v38 = &v14[*(int *)(v12 + 36)];
  *v38 = v9;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  v39 = sub_100011694((uint64_t)v11, &qword_10054B5A0);
  LOBYTE(v9) = static Edge.Set.vertical.getter(v39);
  v40 = EdgeInsets.init(_all:)(5.0);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_100011370((uint64_t)v14, (uint64_t)v16, &qword_10054B5A8);
  v47 = &v16[*(int *)(v62 + 36)];
  *v47 = v9;
  *((double *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  v48 = sub_100011694((uint64_t)v14, &qword_10054B5A8);
  v49 = static Alignment.center.getter(v48);
  v51 = v50;
  v52 = (uint64_t)&v19[*(int *)(v63 + 36)];
  sub_1000A3B20(v65, v64, v69, v52);
  v53 = (uint64_t *)(v52 + *(int *)(sub_10000B4C8(&qword_10054B5C0) + 36));
  *v53 = v49;
  v53[1] = v51;
  sub_100011530((uint64_t)v16, (uint64_t)v19, &qword_10054B5B0);
  v54 = v66;
  v55 = &v66->i8[*(int *)(v67 + 20)];
  v56 = enum case for RoundedCornerStyle.continuous(_:);
  v57 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v55, v56, v57);
  *v54 = vdupq_n_s64(0x7FF0000000000000uLL);
  v58 = sub_10000B4C8(&qword_10054B5C8);
  v59 = v68;
  v60 = v68 + *(int *)(v58 + 36);
  sub_10000D964((uint64_t)v54, v60, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v60 + *(int *)(sub_10000B4C8(&qword_10054B5D0) + 36)) = 256;
  sub_100011370((uint64_t)v19, v59, &qword_10054B5B8);
  sub_10000E750((uint64_t)v54, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  return sub_100011694((uint64_t)v19, &qword_10054B5B8);
}

uint64_t sub_1000A3B20@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a3;
  v37 = a4;
  v36 = sub_10000B4C8(&qword_10054B5D8);
  __chkstk_darwin(v36);
  v7 = (_WORD *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10000B4C8(&qword_100548F48);
  v15 = __chkstk_darwin(v38);
  v17 = (uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v19 = (char *)&v35 - v18;
  a2 &= 1u;
  sub_10004C60C(a1, a2);
  v20 = sub_10003EC98(a1, a2);
  v21 = sub_10004CAC0(a1, a2);
  if ((v20 & 1) != 0)
  {
    v22 = ButtonStyleConfiguration.isPressed.getter(v21);
    v23.n128_u64[0] = 0x3FBEB851EB851EB8;
    if ((v22 & 1) != 0)
      v24 = 0.4;
    else
      v24 = 0.12;
    v25 = static Color.white.getter(v23);
    v26 = Color.opacity(_:)(v24);
    v27 = swift_release(v25);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104))(v14, enum case for BlendMode.plusLighter(_:), v11, v27);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v14, v11);
    sub_10000D964((uint64_t)v10, (uint64_t)v17 + *(int *)(v38 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    *v17 = v26;
    swift_retain(v26);
    sub_10000E750((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release(v26);
    sub_100011530((uint64_t)v17, (uint64_t)v19, &qword_100548F48);
    sub_100011370((uint64_t)v19, (uint64_t)v7, &qword_100548F48);
    swift_storeEnumTagMultiPayload(v7, v36, 0);
    v28 = sub_10000B4C8(&qword_10054B5E0);
    v29 = sub_100033440();
    v30 = sub_100012324(&qword_10054B5E8, &qword_10054B5E0, (const char *)&protocol conformance descriptor for _ShapeView<A, B>);
    _ConditionalContent<>.init(storage:)(v7, v38, v28, v29, v30);
    return sub_100011694((uint64_t)v19, &qword_100548F48);
  }
  else
  {
    *v7 = 256;
    swift_storeEnumTagMultiPayload(v7, v36, 1);
    v32 = sub_10000B4C8(&qword_10054B5E0);
    v33 = sub_100033440();
    v34 = sub_100012324(&qword_10054B5E8, &qword_10054B5E0, (const char *)&protocol conformance descriptor for _ShapeView<A, B>);
    return _ConditionalContent<>.init(storage:)(v7, v38, v32, v33, v34);
  }
}

uint64_t sub_1000A3E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1000A3724(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), a2);
}

unint64_t sub_1000A3E6C()
{
  unint64_t result;

  result = qword_10054B578;
  if (!qword_10054B578)
  {
    result = swift_getWitnessTable("%8\r", &type metadata for TogglePlaybackButtonStyle);
    atomic_store(result, (unint64_t *)&qword_10054B578);
  }
  return result;
}

void sub_1000A3EB8(double *a1@<X8>)
{
  *a1 = EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_1000A3EE0(double *a1)
{
  return EnvironmentValues.minimumScaleFactor.setter(*a1);
}

uint64_t sub_1000A3F0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  sub_10002EBA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_1000A3F80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  sub_10001DA20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v5);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for TogglePlaybackButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10004C60C(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for TogglePlaybackButtonStyle(uint64_t a1)
{
  return sub_10004CAC0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for TogglePlaybackButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10004C60C(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10004CAC0(v5, v6);
  return a1;
}

uint64_t initializeWithTake for TogglePlaybackButtonStyle(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for TogglePlaybackButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10004CAC0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TogglePlaybackButtonStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TogglePlaybackButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TogglePlaybackButtonStyle()
{
  return &type metadata for TogglePlaybackButtonStyle;
}

unint64_t sub_1000A4188()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[4];

  result = qword_10054B588;
  if (!qword_10054B588)
  {
    v1 = sub_100011650(&qword_10054B580);
    v3[0] = sub_100011650(&qword_10054B530);
    v3[1] = &type metadata for TogglePlaybackButtonStyle;
    v3[2] = sub_100012324(&qword_10054B570, &qword_10054B530, (const char *)&protocol conformance descriptor for Button<A>);
    v3[3] = sub_1000A3E6C();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v2[1] = sub_100012324(&qword_10054B590, &qword_10054B598, (const char *)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B588);
  }
  return result;
}

uint64_t sub_1000A4268(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482D28, 1);
}

unint64_t sub_1000A427C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B5F0;
  if (!qword_10054B5F0)
  {
    v1 = sub_100011650(&qword_10054B5C8);
    v2[0] = sub_1000A4300();
    v2[1] = sub_100012324(&qword_10054B628, &qword_10054B5D0, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B5F0);
  }
  return result;
}

unint64_t sub_1000A4300()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054B5F8;
  if (!qword_10054B5F8)
  {
    v1 = sub_100011650(&qword_10054B5B8);
    v2[0] = sub_1000A43B8(&qword_10054B600, &qword_10054B5B0, sub_1000A439C);
    v2[1] = sub_100012324(&qword_10054B620, &qword_10054B5C0, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054B5F8);
  }
  return result;
}

uint64_t sub_1000A439C()
{
  return sub_1000A43B8(&qword_10054B608, &qword_10054B5A8, sub_1000A4424);
}

uint64_t sub_1000A43B8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = sub_100011650(a2);
    v7[0] = a3();
    v7[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A4424()
{
  return sub_1000A43B8(&qword_10054B610, &qword_10054B5A0, (uint64_t (*)(void))sub_1000A4440);
}

unint64_t sub_1000A4440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054B618;
  if (!qword_10054B618)
  {
    v1 = type metadata accessor for ButtonStyleConfiguration.Label(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ButtonStyleConfiguration.Label, v1);
    atomic_store(result, (unint64_t *)&qword_10054B618);
  }
  return result;
}

unint64_t sub_1000A4490()
{
  unint64_t result;

  result = qword_10054B648;
  if (!qword_10054B648)
  {
    result = swift_getWitnessTable("\t8\r", &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_10054B648);
  }
  return result;
}

unint64_t sub_1000A44DC()
{
  unint64_t result;

  result = qword_10054B650;
  if (!qword_10054B650)
  {
    result = swift_getWitnessTable(byte_1004278D0, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_10054B650);
  }
  return result;
}

unint64_t sub_1000A4524()
{
  unint64_t result;

  result = qword_10054B658;
  if (!qword_10054B658)
  {
    result = swift_getWitnessTable(byte_1004278F8, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_10054B658);
  }
  return result;
}

uint64_t sub_1000A4568(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482D6C, 1);
}

uint64_t sub_1000A4578(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10002EEA0();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_1000A45B8()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10000D924(v0, qword_100561418);
  sub_10000D78C(v0, (uint64_t)qword_100561418);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000003DLL);
}

uint64_t sub_1000A4618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005478F8 != -1)
    swift_once(&qword_1005478F8, sub_1000A45B8);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100561418);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1000A4688(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1000A46A0, 0, 0);
}

uint64_t sub_1000A46A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_100547900 != -1)
    swift_once(&qword_100547900, sub_1000A47C8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10000D78C(v1, (uint64_t)qword_10054B630);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "MusicWidgets process should not be performing TogglePlaybackAppIntent.", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  static IntentResult.result<>()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000A478C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002EEA0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for TogglePlaybackAppIntent()
{
  return &type metadata for TogglePlaybackAppIntent;
}

uint64_t sub_1000A47C8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_10054B630);
  sub_10000D78C(v0, (uint64_t)qword_10054B630);
  return static Logger.music(_:)(0xD000000000000017, 0x8000000100427910);
}

ValueMetadata *type metadata accessor for RecentlyPlayedWidget()
{
  return &type metadata for RecentlyPlayedWidget;
}

uint64_t sub_1000A4838(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482DB0, 1);
}

uint64_t sub_1000A4848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[4];
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  unint64_t v65;
  unint64_t v66;

  v63 = a1;
  v1 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider(0);
  __chkstk_darwin(v1);
  v3 = &v46[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10000B4C8(&qword_10054B668);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = sub_10000B4C8(&qword_10054B670);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = sub_10000B4C8(&qword_10054B678);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v56 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10000B4C8(&qword_10054B680);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  __chkstk_darwin(v11);
  v59 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Logger.music(_:)(0xD000000000000024, 0x8000000100445330);
  v13 = type metadata accessor for RecentlyPlayedWidgetView(0);
  v14 = sub_10001254C(&qword_10054B688, type metadata accessor for RecentlyPlayedWidgetView, (uint64_t)&unk_100426CEC);
  v15 = sub_10001254C(&qword_10054B690, type metadata accessor for RecentlyPlayedWidgetTimelineProvider, (uint64_t)&unk_100426790);
  StaticConfiguration.init<A>(kind:provider:content:)(0xD00000000000001ALL, 0x8000000100445310, v3, sub_1000A4DD0, 0, v13, v1, v14, v15);
  if (qword_1005478E0 != -1)
    swift_once(&qword_1005478E0, sub_10009F4CC);
  v64 = xmmword_100561408;
  v16 = sub_1000A4DDC();
  v17 = sub_10001D9DC();
  WidgetConfiguration.configurationDisplayName<A>(_:)(&v64, v4, &type metadata for String, v16, v17);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v18 = LocalizedStringKey.init(stringLiteral:)(0x1000000000000048, 0x8000000100445360);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  *(_QWORD *)&v64 = v4;
  *((_QWORD *)&v64 + 1) = &type metadata for String;
  v65 = v16;
  v66 = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName<A>(_:)>>, 1);
  v26 = v22 & 1;
  v28 = v56;
  v27 = v57;
  WidgetConfiguration.description(_:)(v18, v20, v26, v24, v57, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v20);
  (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v9, v27);
  v29 = sub_10000B4C8(&qword_100547ED0);
  v55 = v29;
  v30 = type metadata accessor for WidgetFamily(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = *(unsigned __int8 *)(v31 + 80);
  v34 = (v33 + 32) & ~v33;
  v53 = v33 | 7;
  v54 = v34 + 4 * v32;
  v35 = swift_allocObject(v29, v54, v33 | 7);
  v52 = xmmword_100424BC0;
  *(_OWORD *)(v35 + 16) = xmmword_100424BC0;
  v51 = enum case for WidgetFamily.systemSmall(_:);
  v36 = *(void (**)(uint64_t))(v31 + 104);
  v36(v35 + v34);
  v50 = enum case for WidgetFamily.systemMedium(_:);
  v36(v35 + v34 + v32);
  v49 = enum case for WidgetFamily.systemLarge(_:);
  v36(v35 + v34 + 2 * v32);
  v48 = 3 * v32;
  v47 = enum case for WidgetFamily.systemExtraLarge(_:);
  v36(v35 + v34 + 3 * v32);
  *(_QWORD *)&v64 = v27;
  *((_QWORD *)&v64 + 1) = OpaqueTypeConformance2;
  v57 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v38 = v59;
  v37 = v60;
  WidgetConfiguration.supportedFamilies(_:)(v35, v60, v57);
  swift_bridgeObjectRelease(v35);
  (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v28, v37);
  v39 = sub_10000B4C8(&qword_100547ED8);
  v40 = type metadata accessor for WidgetLocation(0);
  v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) | 7);
  *(_OWORD *)(v41 + 16) = xmmword_100424BB0;
  static WidgetLocation.iPhoneWidgetsOnMac.getter();
  v42 = swift_allocObject(v55, v54, v53);
  *(_OWORD *)(v42 + 16) = v52;
  ((void (*)(uint64_t, _QWORD, uint64_t))v36)(v42 + v34, v51, v30);
  ((void (*)(uint64_t, _QWORD, uint64_t))v36)(v42 + v34 + v32, v50, v30);
  ((void (*)(uint64_t, _QWORD, uint64_t))v36)(v42 + v34 + 2 * v32, v49, v30);
  ((void (*)(uint64_t, _QWORD, uint64_t))v36)(v42 + v34 + v48, v47, v30);
  *(_QWORD *)&v64 = v37;
  *((_QWORD *)&v64 + 1) = v57;
  v43 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v44 = v62;
  WidgetConfiguration.disfavoredLocations(_:for:)(v41, v42, v62, v43);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v42);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v61 + 8))(v38, v44);
}

uint64_t sub_1000A4DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A4E28(a1, a2);
}

unint64_t sub_1000A4DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054B698;
  if (!qword_10054B698)
  {
    v1 = sub_100011650(&qword_10054B668);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for StaticConfiguration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10054B698);
  }
  return result;
}

uint64_t sub_1000A4E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A4E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v0 = sub_100011650(&qword_10054B680);
  v1 = sub_100011650(&qword_10054B678);
  v2 = sub_100011650(&qword_10054B670);
  v7 = sub_100011650(&qword_10054B668);
  v8 = &type metadata for String;
  v9 = sub_1000A4DDC();
  v10 = sub_10001D9DC();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName<A>(_:)>>, 1);
  v7 = v2;
  v8 = (_QWORD *)OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v7 = v1;
  v8 = (_QWORD *)v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v7 = v0;
  v8 = (_QWORD *)v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disfavoredLocations(_:for:)>>, 1);
}

ValueMetadata *type metadata accessor for RecommendationsWidget()
{
  return &type metadata for RecommendationsWidget;
}

uint64_t sub_1000A4F64(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482DF4, 1);
}

uint64_t sub_1000A4F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;

  v61 = a1;
  v1 = type metadata accessor for RecommendationsWidgetTimelineProvider(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10054B6A0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_10000B4C8(&qword_10054B6A8);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10000B4C8(&qword_10054B6B0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v54 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10054B6B8);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  __chkstk_darwin(v11);
  v57 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.music(_:)(0xD000000000000025, 0x80000001004453D0);
  v13 = type metadata accessor for RecommendationsWidgetView(0);
  v14 = sub_10001254C(&qword_10054B6C0, type metadata accessor for RecommendationsWidgetView, (uint64_t)&unk_1004251AC);
  v15 = sub_10001254C(&qword_10054B6C8, type metadata accessor for RecommendationsWidgetTimelineProvider, (uint64_t)&unk_100425018);
  AppIntentConfiguration.init<A>(kind:intent:provider:content:)(0xD00000000000001BLL, 0x80000001004453B0, &type metadata for RecommendationsWidgetConfigurationIntent, v3, sub_1000A54DC, 0, &type metadata for RecommendationsWidgetConfigurationIntent, v13, v1, v14, v15);
  if (qword_100547880 != -1)
    swift_once(&qword_100547880, sub_100060E3C);
  v62 = qword_100561368;
  v63 = (_QWORD *)unk_100561370;
  v16 = sub_1000A54E8();
  v17 = sub_10001D9DC();
  WidgetConfiguration.configurationDisplayName<A>(_:)(&v62, v4, &type metadata for String, v16, v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v18 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000045, 0x8000000100445400);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v62 = v4;
  v63 = &type metadata for String;
  v64 = v16;
  v65 = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName<A>(_:)>>, 1);
  v27 = v54;
  v26 = v55;
  WidgetConfiguration.description(_:)(v18, v20, v22 & 1, v24, v55, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v26);
  v28 = sub_10000B4C8(&qword_100547ED0);
  v53 = v28;
  v29 = type metadata accessor for WidgetFamily(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_QWORD *)(v30 + 72);
  v32 = *(unsigned __int8 *)(v30 + 80);
  v33 = (v32 + 32) & ~v32;
  v48 = 2 * v31;
  v51 = v32 | 7;
  v52 = v33 + 3 * v31;
  v34 = swift_allocObject(v28, v52, v32 | 7);
  v50 = xmmword_100427490;
  *(_OWORD *)(v34 + 16) = xmmword_100427490;
  v49 = enum case for WidgetFamily.systemMedium(_:);
  v35 = *(void (**)(uint64_t))(v30 + 104);
  v35(v34 + v33);
  v47 = enum case for WidgetFamily.systemLarge(_:);
  v35(v34 + v33 + v31);
  v46 = enum case for WidgetFamily.systemExtraLarge(_:);
  v35(v34 + v33 + 2 * v31);
  v62 = v26;
  v63 = (_QWORD *)OpaqueTypeConformance2;
  v55 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v37 = v57;
  v36 = v58;
  WidgetConfiguration.supportedFamilies(_:)(v34, v58, v55);
  swift_bridgeObjectRelease(v34);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v36);
  v38 = sub_10000B4C8(&qword_100547ED8);
  v39 = type metadata accessor for WidgetLocation(0);
  v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
  *(_OWORD *)(v40 + 16) = xmmword_100424BB0;
  static WidgetLocation.iPhoneWidgetsOnMac.getter();
  v41 = swift_allocObject(v53, v52, v51);
  *(_OWORD *)(v41 + 16) = v50;
  ((void (*)(uint64_t, _QWORD, uint64_t))v35)(v41 + v33, v49, v29);
  ((void (*)(uint64_t, _QWORD, uint64_t))v35)(v41 + v33 + v31, v47, v29);
  ((void (*)(uint64_t, _QWORD, uint64_t))v35)(v41 + v33 + v48, v46, v29);
  v62 = v36;
  v63 = (_QWORD *)v55;
  v42 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v43 = v60;
  WidgetConfiguration.disfavoredLocations(_:for:)(v40, v41, v60, v42);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v41);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v37, v43);
}

uint64_t sub_1000A54DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A5534(a1, a2);
}

unint64_t sub_1000A54E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054B6D0;
  if (!qword_10054B6D0)
  {
    v1 = sub_100011650(&qword_10054B6A0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for AppIntentConfiguration<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10054B6D0);
  }
  return result;
}

uint64_t sub_1000A5534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A5578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v0 = sub_100011650(&qword_10054B6B8);
  v1 = sub_100011650(&qword_10054B6B0);
  v2 = sub_100011650(&qword_10054B6A8);
  v7 = sub_100011650(&qword_10054B6A0);
  v8 = &type metadata for String;
  v9 = sub_1000A54E8();
  v10 = sub_10001D9DC();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName<A>(_:)>>, 1);
  v7 = v2;
  v8 = (_QWORD *)OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v7 = v1;
  v8 = (_QWORD *)v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v7 = v0;
  v8 = (_QWORD *)v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disfavoredLocations(_:for:)>>, 1);
}

char *sub_1000A5660(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(_QWORD *, uint64_t, int *);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void (*v80)(_QWORD *, _QWORD, uint64_t, int *);
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  id v98;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *__dsta;
  char *__dst;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v37);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v107 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v105 = v7;
    v109 = v8;
    v8(&a1[v9], &a2[v9], v7);
    v12 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v12[7];
    v22 = &v10[v21];
    v23 = &v11[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
    v25 = a3[7];
    v106 = a3;
    a1[a3[6]] = a2[a3[6]];
    v26 = &a1[v25];
    v108 = a2;
    v27 = &a2[v25];
    v28 = (int *)type metadata accessor for WidgetMusicItem(0);
    v29 = *((_QWORD *)v28 - 1);
    v30 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      v31 = sub_10000B4C8(&qword_100548310);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v33 = v107;
      v32 = v108;
      v35 = v7;
      v34 = v106;
      v36 = v109;
    }
    else
    {
      v100 = v29;
      v38 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *((_QWORD *)v26 + 1) = v38;
      v39 = *((_QWORD *)v27 + 3);
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
      *((_QWORD *)v26 + 3) = v39;
      v40 = *((_QWORD *)v27 + 5);
      *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
      *((_QWORD *)v26 + 5) = v40;
      v41 = v28[7];
      v42 = &v26[v41];
      __dsta = &v27[v41];
      v43 = type metadata accessor for URL(0);
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v42, __dsta, v43);
      v45 = v28[8];
      v46 = &v26[v45];
      v47 = &v27[v45];
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = v28[9];
      v50 = &v26[v49];
      v51 = &v27[v49];
      v101 = v51[1];
      *v50 = *v51;
      v50[1] = v101;
      v52 = v28[10];
      v53 = &v26[v52];
      v54 = &v27[v52];
      v55 = v54[1];
      *v53 = *v54;
      v53[1] = v55;
      v56 = v28[11];
      v57 = &v26[v56];
      v58 = &v27[v56];
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      v60 = v28[12];
      v61 = &v26[v60];
      v62 = &v27[v60];
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      v64 = v28[13];
      v65 = &v26[v64];
      v66 = &v27[v64];
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      *(_QWORD *)&v26[v28[14]] = *(_QWORD *)&v27[v28[14]];
      v26[v28[15]] = v27[v28[15]];
      v68 = v28[16];
      __dst = &v26[v68];
      v69 = &v27[v68];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70 = sub_10000B4C8(&qword_100547B50);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 10, v70))
      {
        v72 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        v35 = v105;
        v34 = v106;
        v36 = v109;
        v73 = v100;
      }
      else
      {
        v74 = type metadata accessor for Playlist.Variant(0);
        v75 = *(_QWORD *)(v74 - 8);
        v102 = v69;
        v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48))(v69, 1, v74);
        v73 = v100;
        v34 = v106;
        if (v76)
        {
          v77 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v102, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v102, v74);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v74);
        }
        v35 = v105;
        v36 = v109;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 10, v70);
      }
      *(_QWORD *)&v26[v28[17]] = *(_QWORD *)&v27[v28[17]];
      v78 = v28[18];
      v79 = *(void **)&v27[v78];
      *(_QWORD *)&v26[v78] = v79;
      *(_QWORD *)&v26[v28[19]] = *(_QWORD *)&v27[v28[19]];
      v80 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56);
      v81 = v79;
      swift_bridgeObjectRetain();
      v80(v26, 0, 1, v28);
      v33 = v107;
      v32 = v108;
    }
    v82 = v34[8];
    v83 = &a1[v82];
    v84 = (char *)v32 + v82;
    v85 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v86 = *(_QWORD *)(v85 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
    {
      v87 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v36(v83, v84, v35);
      v36(&v83[*(int *)(v85 + 20)], &v84[*(int *)(v85 + 20)], v35);
      v88 = *(int *)(v85 + 24);
      v89 = &v83[v88];
      v90 = &v84[v88];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v90, 1, v35))
      {
        v91 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        v109(v89, v90, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v89, 0, 1, v35);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
    }
    v92 = v34[9];
    v93 = v34[10];
    v94 = *(void **)((char *)v32 + v92);
    *(_QWORD *)&a1[v92] = v94;
    v95 = &a1[v93];
    v96 = (_QWORD *)((char *)v32 + v93);
    v97 = v96[1];
    *(_QWORD *)v95 = *v96;
    *((_QWORD *)v95 + 1) = v97;
    v98 = v94;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000A5BC8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  v6(v7, v4);
  v8 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[8]));
  v9 = (_QWORD *)(a1 + a2[7]);
  v10 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease(v9[1]);
    swift_bridgeObjectRelease(v9[3]);
    swift_bridgeObjectRelease(v9[5]);
    v11 = (char *)v9 + v10[7];
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[14]));
    v13 = (char *)v9 + v10[16];
    v14 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 10, v14))
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[19]));
  }
  v17 = a1 + a2[8];
  v18 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v6(v17, v4);
    v6(v17 + *(int *)(v18 + 20), v4);
    v19 = v17 + *(int *)(v18 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4))
      v6(v19, v4);
  }

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
}

uint64_t sub_1000A5E6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD *, uint64_t, int *);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void (*v79)(_QWORD *, _QWORD, uint64_t, int *);
  id v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  id v97;
  char *__src;
  char *__dst;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for Date(0);
  v104 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v105 = v6;
  v107 = v7;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v11[6];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v11[7];
  v21 = (_QWORD *)(v9 + v20);
  v22 = (_QWORD *)(v10 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  v24 = a3[7];
  v106 = a3;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v103 = a1;
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = (int *)type metadata accessor for WidgetMusicItem(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = sub_10000B4C8(&qword_100548310);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    v32 = v6;
    v31 = v106;
    v33 = v104;
    v34 = (void (*)(char *, char *, uint64_t))v107;
  }
  else
  {
    v101 = v28;
    v102 = a2;
    v35 = v26[1];
    *v25 = *v26;
    v25[1] = v35;
    v36 = v26[3];
    v25[2] = v26[2];
    v25[3] = v36;
    v37 = v26[5];
    v25[4] = v26[4];
    v25[5] = v37;
    v38 = v27[7];
    v39 = (char *)v25 + v38;
    v40 = (char *)v26 + v38;
    v41 = type metadata accessor for URL(0);
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
    v43 = v27[8];
    v44 = (_QWORD *)((char *)v25 + v43);
    v45 = (_QWORD *)((char *)v26 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = v27[9];
    v48 = (_QWORD *)((char *)v25 + v47);
    v49 = (_QWORD *)((char *)v26 + v47);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = v27[10];
    v52 = (_QWORD *)((char *)v25 + v51);
    v53 = (_QWORD *)((char *)v26 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = v27[11];
    v56 = (_QWORD *)((char *)v25 + v55);
    v57 = (_QWORD *)((char *)v26 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = v27[12];
    v60 = (_QWORD *)((char *)v25 + v59);
    v61 = (_QWORD *)((char *)v26 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = v27[13];
    v64 = (_QWORD *)((char *)v25 + v63);
    v65 = (_QWORD *)((char *)v26 + v63);
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    *(_QWORD *)((char *)v25 + v27[14]) = *(_QWORD *)((char *)v26 + v27[14]);
    *((_BYTE *)v25 + v27[15]) = *((_BYTE *)v26 + v27[15]);
    v67 = v27[16];
    __dst = (char *)v25 + v67;
    v68 = (char *)v26 + v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69 = sub_10000B4C8(&qword_100547B50);
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 10, v69))
    {
      v71 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      v32 = v105;
      v31 = v106;
      v34 = (void (*)(char *, char *, uint64_t))v107;
      v72 = v101;
    }
    else
    {
      v73 = type metadata accessor for Playlist.Variant(0);
      v74 = *(_QWORD *)(v73 - 8);
      __src = v68;
      v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48))(v68, 1, v73);
      v32 = v105;
      v31 = v106;
      if (v75)
      {
        v76 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, __src, v73);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v73);
      }
      v34 = (void (*)(char *, char *, uint64_t))v107;
      v72 = v101;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(__dst, 0, 10, v69);
    }
    *(_QWORD *)((char *)v25 + v27[17]) = *(_QWORD *)((char *)v26 + v27[17]);
    v77 = v27[18];
    v78 = *(void **)((char *)v26 + v77);
    *(_QWORD *)((char *)v25 + v77) = v78;
    *(_QWORD *)((char *)v25 + v27[19]) = *(_QWORD *)((char *)v26 + v27[19]);
    v79 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v72 + 56);
    v80 = v78;
    swift_bridgeObjectRetain();
    v79(v25, 0, 1, v27);
    a2 = v102;
    v33 = v104;
  }
  v81 = v31[8];
  v82 = (char *)(v103 + v81);
  v83 = (char *)(a2 + v81);
  v84 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v85 = *(_QWORD *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
  {
    v86 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v34(v82, v83, v32);
    v34(&v82[*(int *)(v84 + 20)], &v83[*(int *)(v84 + 20)], v32);
    v87 = *(int *)(v84 + 24);
    v88 = &v82[v87];
    v89 = &v83[v87];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v89, 1, v32))
    {
      v90 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      v107((uint64_t)v88, (uint64_t)v89, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v88, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  }
  v91 = v31[9];
  v92 = v31[10];
  v93 = *(void **)(a2 + v91);
  *(_QWORD *)(v103 + v91) = v93;
  v94 = (_QWORD *)(v103 + v92);
  v95 = (_QWORD *)(a2 + v92);
  v96 = v95[1];
  *v94 = *v95;
  v94[1] = v96;
  v97 = v93;
  swift_bridgeObjectRetain();
  return v103;
}

uint64_t sub_1000A63A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int *v30;
  uint64_t (*v31)(_QWORD *, uint64_t, int *);
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t, uint64_t);
  void *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void (*v112)(_QWORD *, _QWORD, uint64_t, int *);
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(void *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(uint64_t, uint64_t, uint64_t);
  int v132;
  int v133;
  void (*v134)(uint64_t, char *, uint64_t);
  uint64_t v135;
  char *v136;
  uint64_t v137;
  size_t v138;
  void *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  char *v143;
  uint64_t (*v144)(void *, uint64_t, uint64_t);
  int v145;
  int v146;
  uint64_t v147;
  void *v148;
  void *v149;
  id v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  char *__dst;
  uint64_t v157;
  int *v158;
  int *v159;
  uint64_t v160;
  void (*v161)(uint64_t, char *, uint64_t);
  _QWORD *v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;

  v6 = type metadata accessor for Date(0);
  v164 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = v11[6];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  *v17 = *v18;
  v19 = v17[1];
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = v11[7];
  v21 = (_QWORD *)(v9 + v20);
  v22 = (_QWORD *)(v10 + v20);
  *v21 = *v22;
  v23 = v21[1];
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = v11[8];
  v25 = *(_QWORD *)(v10 + v24);
  v26 = *(_QWORD *)(v9 + v24);
  *(_QWORD *)(v9 + v24) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v26);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v27 = a3[7];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = (int *)type metadata accessor for WidgetMusicItem(0);
  v162 = (_QWORD *)*((_QWORD *)v30 - 1);
  v31 = (uint64_t (*)(_QWORD *, uint64_t, int *))v162[6];
  LODWORD(v23) = v31(v28, 1, v30);
  v32 = v31(v29, 1, v30);
  v165 = v6;
  v161 = (void (*)(uint64_t, char *, uint64_t))v7;
  if (!(_DWORD)v23)
  {
    if (v32)
    {
      sub_10000E750((uint64_t)v28, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v159 = a3;
    v160 = a2;
    *v28 = *v29;
    v62 = v28[1];
    v28[1] = v29[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v62);
    v28[2] = v29[2];
    v63 = v28[3];
    v28[3] = v29[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v63);
    v28[4] = v29[4];
    v64 = v28[5];
    v28[5] = v29[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v64);
    v65 = v30[7];
    v66 = (char *)v28 + v65;
    v67 = (char *)v29 + v65;
    v68 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
    v69 = v30[8];
    v70 = (_QWORD *)((char *)v28 + v69);
    v71 = (_QWORD *)((char *)v29 + v69);
    *v70 = *v71;
    v72 = v70[1];
    v70[1] = v71[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    v73 = v30[9];
    v74 = (_QWORD *)((char *)v28 + v73);
    v75 = (_QWORD *)((char *)v29 + v73);
    *v74 = *v75;
    v76 = v74[1];
    v74[1] = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v76);
    v77 = v30[10];
    v78 = (_QWORD *)((char *)v28 + v77);
    v79 = (_QWORD *)((char *)v29 + v77);
    *v78 = *v79;
    v80 = v78[1];
    v78[1] = v79[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v80);
    v81 = v30[11];
    v82 = (_QWORD *)((char *)v28 + v81);
    v83 = (_QWORD *)((char *)v29 + v81);
    *v82 = *v83;
    v84 = v82[1];
    v82[1] = v83[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v84);
    v85 = v30[12];
    v86 = (_QWORD *)((char *)v28 + v85);
    v87 = (_QWORD *)((char *)v29 + v85);
    *v86 = *v87;
    v88 = v86[1];
    v86[1] = v87[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v88);
    v89 = v30[13];
    v90 = (_QWORD *)((char *)v28 + v89);
    v91 = (_QWORD *)((char *)v29 + v89);
    *v90 = *v91;
    v92 = v90[1];
    v90[1] = v91[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v92);
    v93 = v30[14];
    v94 = *(_QWORD *)((char *)v28 + v93);
    *(_QWORD *)((char *)v28 + v93) = *(_QWORD *)((char *)v29 + v93);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v94);
    *((_BYTE *)v28 + v30[15]) = *((_BYTE *)v29 + v30[15]);
    v95 = v30[16];
    v96 = (char *)v28 + v95;
    v97 = (char *)v29 + v95;
    v98 = sub_10000B4C8(&qword_100547B50);
    v99 = *(_QWORD *)(v98 - 8);
    v100 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48);
    v101 = v96;
    LODWORD(v96) = v100(v96, 10, v98);
    v102 = v100(v97, 10, v98);
    if ((_DWORD)v96)
    {
      if (!v102)
      {
        v103 = type metadata accessor for Playlist.Variant(0);
        v104 = *(_QWORD *)(v103 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v97, 1, v103))
        {
          v105 = sub_10000B4C8(&qword_100548358);
          memcpy(v101, v97, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v104 + 16))(v101, v97, v103);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v101, 0, 10, v98);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v102)
      {
        v114 = type metadata accessor for Playlist.Variant(0);
        v115 = *(_QWORD *)(v114 - 8);
        v116 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v115 + 48);
        v117 = v116(v101, 1, v114);
        v118 = v116(v97, 1, v114);
        if (v117)
        {
          if (!v118)
          {
            (*(void (**)(void *, char *, uint64_t))(v115 + 16))(v101, v97, v114);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v101, 0, 1, v114);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v118)
          {
            (*(void (**)(void *, char *, uint64_t))(v115 + 24))(v101, v97, v114);
            goto LABEL_26;
          }
          (*(void (**)(void *, uint64_t))(v115 + 8))(v101, v114);
        }
        v109 = sub_10000B4C8(&qword_100548358);
LABEL_17:
        memcpy(v101, v97, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
LABEL_26:
        a3 = v159;
        a2 = v160;
        *(_QWORD *)((char *)v28 + v30[17]) = *(_QWORD *)((char *)v29 + v30[17]);
        v119 = v30[18];
        v120 = *(void **)((char *)v28 + v119);
        v121 = *(void **)((char *)v29 + v119);
        *(_QWORD *)((char *)v28 + v119) = v121;
        v122 = v121;

        v123 = v30[19];
        v124 = *(_QWORD *)((char *)v29 + v123);
        v125 = *(_QWORD *)((char *)v28 + v123);
        *(_QWORD *)((char *)v28 + v123) = v124;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v125);
        goto LABEL_27;
      }
      sub_100011694((uint64_t)v101, &qword_100547B50);
    }
    v109 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_17;
  }
  if (v32)
  {
LABEL_7:
    v61 = sub_10000B4C8(&qword_100548310);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_27;
  }
  v158 = a3;
  v157 = a1;
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v28[4] = v29[4];
  v28[5] = v29[5];
  v33 = v30[7];
  v34 = (char *)v28 + v33;
  v35 = (char *)v29 + v33;
  v36 = type metadata accessor for URL(0);
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  v38 = v30[8];
  v39 = (_QWORD *)((char *)v28 + v38);
  v40 = (_QWORD *)((char *)v29 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  v41 = v30[9];
  v42 = (_QWORD *)((char *)v28 + v41);
  v43 = (_QWORD *)((char *)v29 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  v44 = v30[10];
  v45 = (_QWORD *)((char *)v28 + v44);
  v46 = (_QWORD *)((char *)v29 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  v47 = v30[11];
  v48 = (_QWORD *)((char *)v28 + v47);
  v49 = (_QWORD *)((char *)v29 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  v50 = v30[12];
  v51 = (_QWORD *)((char *)v28 + v50);
  v52 = (_QWORD *)((char *)v29 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  v53 = v30[13];
  v54 = (_QWORD *)((char *)v28 + v53);
  v55 = (_QWORD *)((char *)v29 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  *(_QWORD *)((char *)v28 + v30[14]) = *(_QWORD *)((char *)v29 + v30[14]);
  *((_BYTE *)v28 + v30[15]) = *((_BYTE *)v29 + v30[15]);
  v56 = v30[16];
  __dst = (char *)v28 + v56;
  v57 = (char *)v29 + v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = sub_10000B4C8(&qword_100547B50);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 10, v58))
  {
    v60 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    a1 = v157;
  }
  else
  {
    v106 = type metadata accessor for Playlist.Variant(0);
    v107 = *(_QWORD *)(v106 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v57, 1, v106))
    {
      v108 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(__dst, v57, v106);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(__dst, 0, 1, v106);
    }
    a1 = v157;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 10, v58);
  }
  a3 = v158;
  *(_QWORD *)((char *)v28 + v30[17]) = *(_QWORD *)((char *)v29 + v30[17]);
  v110 = v30[18];
  v111 = *(void **)((char *)v29 + v110);
  *(_QWORD *)((char *)v28 + v110) = v111;
  *(_QWORD *)((char *)v28 + v30[19]) = *(_QWORD *)((char *)v29 + v30[19]);
  v112 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))v162[7];
  v113 = v111;
  swift_bridgeObjectRetain();
  v112(v28, 0, 1, v30);
LABEL_27:
  v126 = a3[8];
  v127 = a1 + v126;
  v128 = (char *)(a2 + v126);
  v129 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v130 = *(_QWORD *)(v129 - 8);
  v131 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
  v132 = v131(v127, 1, v129);
  v133 = v131((uint64_t)v128, 1, v129);
  if (!v132)
  {
    if (!v133)
    {
      v161(v127, v128, v165);
      v161(v127 + *(int *)(v129 + 20), &v128[*(int *)(v129 + 20)], v165);
      v141 = *(int *)(v129 + 24);
      v142 = (void *)(v127 + v141);
      v143 = &v128[v141];
      v144 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v164 + 48);
      v145 = v144(v142, 1, v165);
      v146 = v144(v143, 1, v165);
      if (v145)
      {
        if (!v146)
        {
          (*(void (**)(void *, char *, uint64_t))(v164 + 16))(v142, v143, v165);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v142, 0, 1, v165);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v146)
        {
          v161((uint64_t)v142, v143, v165);
          goto LABEL_40;
        }
        (*(void (**)(void *, uint64_t))(v164 + 8))(v142, v165);
      }
      v138 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005481F0) - 8) + 64);
      v139 = v142;
      v140 = v143;
      goto LABEL_34;
    }
    sub_10000E750(v127, type metadata accessor for NowPlayingDataProvider.ItemProgress);
LABEL_33:
    v138 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005482D8) - 8) + 64);
    v139 = (void *)v127;
    v140 = v128;
LABEL_34:
    memcpy(v139, v140, v138);
    goto LABEL_40;
  }
  if (v133)
    goto LABEL_33;
  v134 = *(void (**)(uint64_t, char *, uint64_t))(v164 + 16);
  v134(v127, v128, v165);
  v134(v127 + *(int *)(v129 + 20), &v128[*(int *)(v129 + 20)], v165);
  v135 = *(int *)(v129 + 24);
  v163 = (void *)(v127 + v135);
  v136 = &v128[v135];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v136, 1, v165))
  {
    v137 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v163, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
  }
  else
  {
    v134((uint64_t)v163, v136, v165);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v163, 0, 1, v165);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
LABEL_40:
  v147 = a3[9];
  v148 = *(void **)(a1 + v147);
  v149 = *(void **)(a2 + v147);
  *(_QWORD *)(a1 + v147) = v149;
  v150 = v149;

  v151 = a3[10];
  v152 = (_QWORD *)(a1 + v151);
  v153 = (_QWORD *)(a2 + v151);
  *v152 = *v153;
  v154 = v152[1];
  v152[1] = v153[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v154);
  return a1;
}

uint64_t sub_1000A6E68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *__dst;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  void (*v53)(char *, char *, uint64_t);

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v8(a1 + v9, a2 + v9, v6);
  v12 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  *(_OWORD *)(v10 + v12[5]) = *(_OWORD *)(v11 + v12[5]);
  *(_OWORD *)(v10 + v12[6]) = *(_OWORD *)(v11 + v12[6]);
  *(_OWORD *)(v10 + v12[7]) = *(_OWORD *)(v11 + v12[7]);
  *(_QWORD *)(v10 + v12[8]) = *(_QWORD *)(v11 + v12[8]);
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for WidgetMusicItem(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_10000B4C8(&qword_100548310);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v50 = v17;
    v51 = v7;
    v52 = v8;
    v19 = v15[1];
    *v14 = *v15;
    v14[1] = v19;
    v14[2] = v15[2];
    v20 = v16[7];
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    *(_OWORD *)((char *)v14 + v16[8]) = *(_OWORD *)((char *)v15 + v16[8]);
    *(_OWORD *)((char *)v14 + v16[9]) = *(_OWORD *)((char *)v15 + v16[9]);
    *(_OWORD *)((char *)v14 + v16[10]) = *(_OWORD *)((char *)v15 + v16[10]);
    *(_OWORD *)((char *)v14 + v16[11]) = *(_OWORD *)((char *)v15 + v16[11]);
    *(_OWORD *)((char *)v14 + v16[12]) = *(_OWORD *)((char *)v15 + v16[12]);
    *(_OWORD *)((char *)v14 + v16[13]) = *(_OWORD *)((char *)v15 + v16[13]);
    *(_QWORD *)((char *)v14 + v16[14]) = *(_QWORD *)((char *)v15 + v16[14]);
    *((_BYTE *)v14 + v16[15]) = *((_BYTE *)v15 + v16[15]);
    v24 = v16[16];
    __dst = (char *)v14 + v24;
    v25 = (char *)v15 + v24;
    v26 = sub_10000B4C8(&qword_100547B50);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 10, v26))
    {
      v28 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      v7 = v51;
      v8 = v52;
    }
    else
    {
      v47 = v26;
      v48 = v27;
      v29 = type metadata accessor for Playlist.Variant(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
      {
        v31 = sub_10000B4C8(&qword_100548358);
        v32 = __dst;
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v46 = v30;
        v32 = __dst;
        v33(__dst, v25, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v29);
      }
      v8 = v52;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v32, 0, 10, v47);
      v7 = v51;
    }
    *(_QWORD *)((char *)v14 + v16[17]) = *(_QWORD *)((char *)v15 + v16[17]);
    *(_QWORD *)((char *)v14 + v16[18]) = *(_QWORD *)((char *)v15 + v16[18]);
    *(_QWORD *)((char *)v14 + v16[19]) = *(_QWORD *)((char *)v15 + v16[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v50 + 56))(v14, 0, 1, v16);
  }
  v34 = a3[8];
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v35, (uint64_t)v36, v6);
    v8((uint64_t)&v35[*(int *)(v37 + 20)], (uint64_t)&v36[*(int *)(v37 + 20)], v6);
    v40 = *(int *)(v37 + 24);
    v53 = (void (*)(char *, char *, uint64_t))v8;
    v41 = &v35[v40];
    v42 = &v36[v40];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v42, 1, v6))
    {
      v43 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v53(v41, v42, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v44 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v44) = *(_OWORD *)(a2 + v44);
  return a1;
}

uint64_t sub_1000A72A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  int *v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD *, uint64_t, int *);
  int v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  uint64_t v106;
  size_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(void *, uint64_t, uint64_t);
  int v121;
  int v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(char *, uint64_t, uint64_t);
  int v133;
  int v134;
  void (*v135)(char *, char *, uint64_t);
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v157)(void *, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *__dst;
  void *__dsta;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;

  v6 = type metadata accessor for Date(0);
  v169 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v168 = (void (*)(char *, char *, uint64_t))v7;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (uint64_t *)(v10 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  v18 = v11[6];
  v19 = (_QWORD *)(v9 + v18);
  v20 = (uint64_t *)(v10 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = v19[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease(v23);
  v24 = v11[7];
  v25 = (_QWORD *)(v9 + v24);
  v26 = (uint64_t *)(v10 + v24);
  v28 = *v26;
  v27 = v26[1];
  v29 = v25[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease(v29);
  v30 = v11[8];
  v31 = *(_QWORD *)(v9 + v30);
  *(_QWORD *)(v9 + v30) = *(_QWORD *)(v10 + v30);
  swift_bridgeObjectRelease(v31);
  v32 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = (int *)type metadata accessor for WidgetMusicItem(0);
  v36 = *((_QWORD *)v35 - 1);
  v37 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (v39)
    {
      sub_10000E750((uint64_t)v33, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v167 = v6;
    v52 = v34[1];
    v53 = v33[1];
    *v33 = *v34;
    v33[1] = v52;
    swift_bridgeObjectRelease(v53);
    v54 = v34[3];
    v55 = v33[3];
    v33[2] = v34[2];
    v33[3] = v54;
    swift_bridgeObjectRelease(v55);
    v56 = v34[5];
    v57 = v33[5];
    v33[4] = v34[4];
    v33[5] = v56;
    swift_bridgeObjectRelease(v57);
    v58 = v35[7];
    v59 = (char *)v33 + v58;
    v60 = (char *)v34 + v58;
    v61 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v59, v60, v61);
    v62 = v35[8];
    v63 = (_QWORD *)((char *)v33 + v62);
    v64 = (_QWORD *)((char *)v34 + v62);
    v66 = *v64;
    v65 = v64[1];
    v67 = v63[1];
    *v63 = v66;
    v63[1] = v65;
    swift_bridgeObjectRelease(v67);
    v68 = v35[9];
    v69 = (_QWORD *)((char *)v33 + v68);
    v70 = (_QWORD *)((char *)v34 + v68);
    v72 = *v70;
    v71 = v70[1];
    v73 = v69[1];
    *v69 = v72;
    v69[1] = v71;
    swift_bridgeObjectRelease(v73);
    v74 = v35[10];
    v75 = (_QWORD *)((char *)v33 + v74);
    v76 = (_QWORD *)((char *)v34 + v74);
    v78 = *v76;
    v77 = v76[1];
    v79 = v75[1];
    *v75 = v78;
    v75[1] = v77;
    swift_bridgeObjectRelease(v79);
    v80 = v35[11];
    v81 = (_QWORD *)((char *)v33 + v80);
    v82 = (_QWORD *)((char *)v34 + v80);
    v84 = *v82;
    v83 = v82[1];
    v85 = v81[1];
    *v81 = v84;
    v81[1] = v83;
    swift_bridgeObjectRelease(v85);
    v86 = v35[12];
    v87 = (_QWORD *)((char *)v33 + v86);
    v88 = (_QWORD *)((char *)v34 + v86);
    v90 = *v88;
    v89 = v88[1];
    v91 = v87[1];
    *v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease(v91);
    v92 = v35[13];
    v93 = (_QWORD *)((char *)v33 + v92);
    v94 = (_QWORD *)((char *)v34 + v92);
    v96 = *v94;
    v95 = v94[1];
    v97 = v93[1];
    *v93 = v96;
    v93[1] = v95;
    swift_bridgeObjectRelease(v97);
    v98 = v35[14];
    v99 = *(_QWORD *)((char *)v33 + v98);
    *(_QWORD *)((char *)v33 + v98) = *(_QWORD *)((char *)v34 + v98);
    swift_bridgeObjectRelease(v99);
    *((_BYTE *)v33 + v35[15]) = *((_BYTE *)v34 + v35[15]);
    v100 = v35[16];
    v101 = (char *)v33 + v100;
    v102 = (char *)v34 + v100;
    v103 = sub_10000B4C8(&qword_100547B50);
    v160 = *(_QWORD *)(v103 - 8);
    v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v160 + 48);
    v165 = v101;
    LODWORD(v101) = v104(v101, 10, v103);
    __dst = v102;
    v105 = v104(v102, 10, v103);
    if ((_DWORD)v101)
    {
      if (!v105)
      {
        v115 = type metadata accessor for Playlist.Variant(0);
        v116 = *(_QWORD *)(v115 - 8);
        v159 = v115;
        if ((*(unsigned int (**)(char *, uint64_t))(v116 + 48))(v102, 1))
        {
          v117 = sub_10000B4C8(&qword_100548358);
          memcpy(v165, v102, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v116 + 32))(v165, v102, v159);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v165, 0, 1, v159);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v165, 0, 10, v103);
        goto LABEL_28;
      }
      v106 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_11:
      v107 = *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64);
      v108 = v165;
LABEL_17:
      memcpy(v108, __dst, v107);
LABEL_28:
      v6 = v167;
      *(_QWORD *)((char *)v33 + v35[17]) = *(_QWORD *)((char *)v34 + v35[17]);
      v123 = v35[18];
      v124 = *(void **)((char *)v33 + v123);
      *(_QWORD *)((char *)v33 + v123) = *(_QWORD *)((char *)v34 + v123);

      v125 = v35[19];
      v126 = *(_QWORD *)((char *)v33 + v125);
      *(_QWORD *)((char *)v33 + v125) = *(_QWORD *)((char *)v34 + v125);
      swift_bridgeObjectRelease(v126);
      goto LABEL_29;
    }
    if (v105)
    {
      v113 = v165;
      sub_100011694((uint64_t)v165, &qword_100547B50);
      v114 = type metadata accessor for ArtworkImage.Placeholder(0);
    }
    else
    {
      v118 = type metadata accessor for Playlist.Variant(0);
      v119 = *(_QWORD *)(v118 - 8);
      v120 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v119 + 48);
      v121 = v120(v165, 1, v118);
      v122 = v120(__dst, 1, v118);
      if (v121)
      {
        if (!v122)
        {
          (*(void (**)(void *, char *, uint64_t))(v119 + 32))(v165, __dst, v118);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v165, 0, 1, v118);
          goto LABEL_28;
        }
        v106 = sub_10000B4C8(&qword_100548358);
        goto LABEL_11;
      }
      if (!v122)
      {
        (*(void (**)(void *, char *, uint64_t))(v119 + 40))(v165, __dst, v118);
        goto LABEL_28;
      }
      v157 = *(void (**)(void *, uint64_t))(v119 + 8);
      v113 = v165;
      v157(v165, v118);
      v114 = sub_10000B4C8(&qword_100548358);
    }
    v107 = *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64);
    v108 = v113;
    goto LABEL_17;
  }
  if (v39)
  {
LABEL_7:
    v51 = sub_10000B4C8(&qword_100548310);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_29;
  }
  v164 = a2;
  v166 = v6;
  v40 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v40;
  *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
  v41 = v35[7];
  v42 = (char *)v33 + v41;
  v43 = (char *)v34 + v41;
  v44 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  *(_OWORD *)((char *)v33 + v35[8]) = *(_OWORD *)((char *)v34 + v35[8]);
  *(_OWORD *)((char *)v33 + v35[9]) = *(_OWORD *)((char *)v34 + v35[9]);
  *(_OWORD *)((char *)v33 + v35[10]) = *(_OWORD *)((char *)v34 + v35[10]);
  *(_OWORD *)((char *)v33 + v35[11]) = *(_OWORD *)((char *)v34 + v35[11]);
  *(_OWORD *)((char *)v33 + v35[12]) = *(_OWORD *)((char *)v34 + v35[12]);
  *(_OWORD *)((char *)v33 + v35[13]) = *(_OWORD *)((char *)v34 + v35[13]);
  *(_QWORD *)((char *)v33 + v35[14]) = *(_QWORD *)((char *)v34 + v35[14]);
  *((_BYTE *)v33 + v35[15]) = *((_BYTE *)v34 + v35[15]);
  v45 = v35[16];
  v46 = (char *)v33 + v45;
  v47 = (char *)v34 + v45;
  v48 = sub_10000B4C8(&qword_100547B50);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 10, v48))
  {
    v50 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v158 = v49;
    v161 = v48;
    __dsta = v46;
    v109 = type metadata accessor for Playlist.Variant(0);
    v110 = *(_QWORD *)(v109 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v47, 1, v109))
    {
      v111 = sub_10000B4C8(&qword_100548358);
      v112 = __dsta;
      memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      v112 = __dsta;
      (*(void (**)(void *, char *, uint64_t))(v110 + 32))(__dsta, v47, v109);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(__dsta, 0, 1, v109);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v112, 0, 10, v161);
  }
  a2 = v164;
  v6 = v166;
  *(_QWORD *)((char *)v33 + v35[17]) = *(_QWORD *)((char *)v34 + v35[17]);
  *(_QWORD *)((char *)v33 + v35[18]) = *(_QWORD *)((char *)v34 + v35[18]);
  *(_QWORD *)((char *)v33 + v35[19]) = *(_QWORD *)((char *)v34 + v35[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
LABEL_29:
  v127 = a3[8];
  v128 = (char *)(a1 + v127);
  v129 = (char *)(a2 + v127);
  v130 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v131 = *(_QWORD *)(v130 - 8);
  v132 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48);
  v133 = v132(v128, 1, v130);
  v134 = v132(v129, 1, v130);
  if (!v133)
  {
    if (!v134)
    {
      v168(v128, v129, v6);
      v168(&v128[*(int *)(v130 + 20)], &v129[*(int *)(v130 + 20)], v6);
      v141 = *(int *)(v130 + 24);
      v142 = &v128[v141];
      v143 = &v129[v141];
      v144 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v169 + 48);
      v145 = v144(v142, 1, v6);
      v146 = v144(v143, 1, v6);
      if (v145)
      {
        if (!v146)
        {
          (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v142, v143, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v142, 0, 1, v6);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v146)
        {
          v168(v142, v143, v6);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v169 + 8))(v142, v6);
      }
      v147 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
      goto LABEL_44;
    }
    sub_10000E750((uint64_t)v128, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    goto LABEL_35;
  }
  if (v134)
  {
LABEL_35:
    v140 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
    goto LABEL_44;
  }
  v135 = *(void (**)(char *, char *, uint64_t))(v169 + 32);
  v135(v128, v129, v6);
  v135(&v128[*(int *)(v130 + 20)], &v129[*(int *)(v130 + 20)], v6);
  v136 = *(int *)(v130 + 24);
  v137 = &v128[v136];
  v138 = &v129[v136];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v138, 1, v6))
  {
    v139 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
  }
  else
  {
    v135(v137, v138, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v137, 0, 1, v6);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
LABEL_44:
  v148 = a3[9];
  v149 = *(void **)(a1 + v148);
  *(_QWORD *)(a1 + v148) = *(_QWORD *)(a2 + v148);

  v150 = a3[10];
  v151 = (_QWORD *)(a1 + v150);
  v152 = (uint64_t *)(a2 + v150);
  v154 = *v152;
  v153 = v152[1];
  v155 = v151[1];
  *v151 = v154;
  v151[1] = v153;
  swift_bridgeObjectRelease(v155);
  return a1;
}

uint64_t sub_1000A7BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A7BDC);
}

uint64_t sub_1000A7BDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  int v18;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_10000B4C8(&qword_100548310);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_9;
  }
  v15 = sub_10000B4C8(&qword_1005482D8);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[8];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  v18 = v17 - 1;
  if (v18 < 0)
    v18 = -1;
  return (v18 + 1);
}

uint64_t sub_1000A7CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A7CEC);
}

uint64_t sub_1000A7CEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_10000B4C8(&qword_100548310);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[7];
    goto LABEL_9;
  }
  result = sub_10000B4C8(&qword_1005482D8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[9]) = a2;
  return result;
}

uint64_t type metadata accessor for TopChartsWidgetTimelineProvider.Entry(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054B730, (uint64_t)&nominal type descriptor for TopChartsWidgetTimelineProvider.Entry);
}

void sub_1000A7DF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TopChartsWidgetDataProvider.Chart(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v10[2] = &unk_100427A38;
      sub_100019B6C(319, (unint64_t *)&qword_1005483C8, type metadata accessor for WidgetMusicItem);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_100019B6C(319, (unint64_t *)&unk_1005483D0, type metadata accessor for NowPlayingDataProvider.ItemProgress);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          v10[5] = &unk_100427A50;
          v10[6] = &unk_100427A68;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1000A7EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A7EF8);
}

uint64_t sub_1000A7EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000A7F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A7F40);
}

uint64_t sub_1000A7F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TopChartsWidgetTimelineProvider(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054B7D8, (uint64_t)&nominal type descriptor for TopChartsWidgetTimelineProvider);
}

uint64_t sub_1000A7F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  unsigned int v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self(ICPrivacyInfo);
  v5 = objc_msgSend(v4, "sharedPrivacyInfo");
  v6 = objc_msgSend(v5, "privacyAcknowledgementRequiredForMusic");

  v7 = objc_msgSend(v4, "sharedPrivacyInfo");
  v8 = objc_msgSend(v7, "preflightDisclosureRequiredForMusic");

  v9 = static Logger.music(_:)(0xD000000000000018, 0x8000000100445450);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(14, -1);
    *(_DWORD *)v12 = 67240448;
    v16 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    *(_WORD *)(v12 + 8) = 1026;
    v15 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "privacyAcknowledgementRequired= %{BOOL,public}d, preflightDisclosureRequired= %{BOOL,public}d)", (uint8_t *)v12, 0xEu);
    swift_slowDealloc(v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6 & v8;
}

uint64_t sub_1000A8158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  sub_10000D924((uint64_t)v10, qword_100561430);
  v11 = sub_10000D78C((uint64_t)v10, (uint64_t)qword_100561430);
  if (qword_100547760 != -1)
    swift_once(&qword_100547760, sub_1000067CC);
  v12 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v13 = sub_10000D78C(v12, (uint64_t)qword_1005611C0);
  v14 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  v15 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  Date.init()(v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v11, v3, v0);
  sub_10000D964(v13, v11 + v10[5], type metadata accessor for TopChartsWidgetDataProvider.Chart);
  *(_BYTE *)(v11 + v10[6]) = 3;
  sub_100011530((uint64_t)v9, v11 + v10[7], &qword_100548310);
  result = sub_100011530((uint64_t)v6, v11 + v10[8], &qword_1005482D8);
  *(_QWORD *)(v11 + v10[9]) = 0;
  v18 = (_QWORD *)(v11 + v10[10]);
  *v18 = 0;
  v18[1] = 0;
  return result;
}

unint64_t sub_1000A837C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054B810[0];
  if (!qword_10054B810[0])
  {
    v1 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(255);
    result = swift_getWitnessTable(byte_100427AB0, v1);
    atomic_store(result, qword_10054B810);
  }
  return result;
}

uint64_t sub_1000A83C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[24] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[25] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[26] = swift_task_alloc(v6);
  v3[27] = swift_task_alloc(v6);
  v3[28] = swift_task_alloc(v6);
  v3[29] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date(0);
  v3[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[31] = v8;
  v3[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_1005482D8);
  v3[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100548310);
  v3[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100547AF0);
  v3[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v3[36] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[37] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[38] = swift_task_alloc(v14);
  v3[39] = swift_task_alloc(v14);
  return swift_task_switch(sub_1000A8520, 0, 0);
}

uint64_t sub_1000A8520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = sub_1000A7F98();
  if ((v1 & 1) == 0)
  {
    v9 = (char *)&loc_1000A8638 + dword_1000A8D74[sub_1000AA740(v1)];
    __asm { BR              X10 }
  }
  v2 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 16))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Can't use widget: privacyAcknowledgementRequired", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (qword_100547808 != -1)
    swift_once(&qword_100547808, sub_10003433C);
  v11 = qword_1005612D8;
  v10 = unk_1005612E0;
  v12 = qword_100547760;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once(&qword_100547760, sub_1000067CC);
  v13 = *(_QWORD *)(v0 + 168);
  v14 = sub_10000D78C(*(_QWORD *)(v0 + 288), (uint64_t)qword_1005611C0);
  v15 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  sub_10000D964(v14, v13 + v15[5], type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v16 = v13 + v15[7];
  v17 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v13 + v15[8];
  v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  Date.init()(v20);
  *(_BYTE *)(v13 + v15[6]) = 3;
  *(_QWORD *)(v13 + v15[9]) = 0;
  v21 = (uint64_t *)(v13 + v15[10]);
  *v21 = v11;
  v21[1] = v10;
  v22 = *(_QWORD *)(v0 + 304);
  v24 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 232);
  v30 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000A8D84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 320);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1000A8DE0, 0, 0);
}

uint64_t sub_1000A8DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 296) + 48))(v1, 1, *(_QWORD *)(v0 + 288)) == 1)
  {
    sub_100011694(v1, &qword_100547AF0);
    v2 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 16))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
    v3 = swift_retain_n(v2, 2);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.error.getter();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 176);
    if (v6)
    {
      v47 = *(_QWORD *)(v0 + 232);
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v49 = v12;
      *(_DWORD *)v11 = 136315138;
      IntentParameter.wrappedValue.getter();
      v13 = *(_OWORD *)(v0 + 80);
      v14 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 128) = v13;
      *(_OWORD *)(v0 + 144) = v14;
      v15 = sub_10000B4C8(&qword_100549ED0);
      v16 = String.init<A>(describing:)(v0 + 112, v15);
      v18 = v17;
      *(_QWORD *)(v0 + 160) = sub_1000759E0(v16, v17, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168);
      swift_bridgeObjectRelease(v18);
      swift_release_n(v10, 2);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Can't fetch chart %s.", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v47, v8);
    }
    else
    {
      swift_release_n(*(_QWORD *)(v0 + 176), 2);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    if (qword_100547760 != -1)
      swift_once(&qword_100547760, sub_1000067CC);
    v25 = *(_QWORD *)(v0 + 168);
    v30 = sub_10000D78C(*(_QWORD *)(v0 + 288), (uint64_t)qword_1005611C0);
    v29 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    sub_10000D964(v30, v25 + v29[5], type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v31 = v25 + v29[7];
    v32 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
    v33 = v25 + v29[8];
    v34 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
    Date.init()(v35);
    *(_BYTE *)(v25 + v29[6]) = 3;
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 304);
    v20 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 272);
    v24 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 256);
    v48 = *(_QWORD *)(v0 + 240);
    v25 = *(_QWORD *)(v0 + 168);
    sub_10000DB44(v1, v20, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(v20, v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v26 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 1, 1, v26);
    v27 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v21, 1, 1, v27);
    Date.init()(v28);
    sub_10000E750(v20, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v25, v23, v48);
    v29 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    sub_10000DB44(v19, v25 + v29[5], type metadata accessor for TopChartsWidgetDataProvider.Chart);
    *(_BYTE *)(v25 + v29[6]) = 3;
    sub_100011530(v22, v25 + v29[7], &qword_100548310);
    sub_100011530(v21, v25 + v29[8], &qword_1005482D8);
  }
  *(_QWORD *)(v25 + v29[9]) = 0;
  v36 = (_QWORD *)(v25 + v29[10]);
  *v36 = 0;
  v36[1] = 0;
  v37 = *(_QWORD *)(v0 + 304);
  v39 = *(_QWORD *)(v0 + 272);
  v38 = *(_QWORD *)(v0 + 280);
  v41 = *(_QWORD *)(v0 + 256);
  v40 = *(_QWORD *)(v0 + 264);
  v43 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 232);
  v45 = *(_QWORD *)(v0 + 208);
  v44 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000A924C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for Date(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[7] = swift_task_alloc(v6);
  v3[8] = swift_task_alloc(v6);
  v3[9] = swift_task_alloc(v6);
  v3[10] = swift_task_alloc(v6);
  v7 = type metadata accessor for TimelineReloadPolicy(0);
  v3[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[12] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v9);
  v3[14] = swift_task_alloc(v9);
  v10 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v3[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[16] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v12);
  v3[18] = swift_task_alloc(v12);
  v3[19] = swift_task_alloc(v12);
  v3[20] = swift_task_alloc(v12);
  v3[21] = swift_task_alloc(v12);
  v13 = sub_10000B4C8(&qword_1005482D0);
  v3[22] = v13;
  v3[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v3[24] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[25] = v15;
  v3[26] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_1005482C0);
  v3[27] = v16;
  v3[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_100548310);
  v3[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000A9408, 0, 0);
}

uint64_t sub_1000A9408()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_100547768 != -1)
    swift_once(&qword_100547768, sub_100009F14);
  sub_1000077D4();
  if (qword_100547790 != -1)
    swift_once(&qword_100547790, sub_1000134D8);
  v1 = qword_1005611E0;
  *(_QWORD *)(v0 + 240) = qword_1005611E0;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 248) = v2;
  *v2 = v0;
  v2[1] = sub_1000A94FC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 296, 0, 0, 0x7453726579616C70, 0xEB00000000657461, sub_100016D2C, v1, &type metadata for NowPlayingDataProvider.PlayerState);
}

uint64_t sub_1000A94FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 248));
  return swift_task_switch(sub_1000A9550, 0, 0);
}

uint64_t sub_1000A9550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  *(_BYTE *)(v0 + 297) = *(_BYTE *)(v0 + 296);
  sub_100011370(*(_QWORD *)(v1 + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItem, v3, &qword_1005482C0);
  sub_100069BDC(*(_QWORD *)(v3 + *(int *)(v4 + 44)), *(_QWORD *)(v3 + *(int *)(v4 + 44) + 8), v2);
  sub_100011694(v3, &qword_1005482C0);
  v5 = (_QWORD *)swift_task_alloc(dword_100547F34);
  *(_QWORD *)(v0 + 256) = v5;
  *v5 = v0;
  v5[1] = sub_1000A9600;
  return sub_100014178(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1000A9600()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  return swift_task_switch(sub_1000A9654, 0, 0);
}

uint64_t sub_1000A9654()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t **v5;

  v2 = v0[22];
  v1 = v0[23];
  sub_100011370(*(_QWORD *)(v0[30] + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentItemBackground, v1, &qword_1005482D0);
  v3 = (void *)sub_100069C08(*(_QWORD *)(v1 + *(int *)(v2 + 44)), *(_QWORD *)(v1 + *(int *)(v2 + 44) + 8));
  sub_100011694(v1, &qword_1005482D0);
  if (v3 == (void *)1)
  {
    v3 = 0;
  }
  else
  {
    v4 = v3;
    sub_100017318(v3);
  }
  v0[33] = (uint64_t)v3;
  v5 = (uint64_t **)swift_task_alloc(dword_10054B844);
  v0[34] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_1000A971C;
  return sub_1000A83C8(v0[21], v0[3]);
}

uint64_t sub_1000A971C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 272));
  return swift_task_switch(sub_1000A9770, 0, 0);
}

uint64_t sub_1000A9770(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(v1 + 297);
  Date.init()(a1);
  if (!v2)
  {
    v7 = (_QWORD *)swift_task_alloc(dword_100547F2C);
    *(_QWORD *)(v1 + 280) = v7;
    *v7 = v1;
    v7[1] = sub_1000A9F04;
    return sub_100013E68();
  }
  if (v2 != 1)
  {
    v9 = *(_QWORD *)(v1 + 168) + *(int *)(*(_QWORD *)(v1 + 120) + 20);
    if (qword_100547760 != -1)
      swift_once(&qword_100547760, sub_1000067CC);
    v10 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v11 = sub_10000D78C(v10, (uint64_t)qword_1005611C0);
    if ((sub_10000E1D4(v9, v11) & 1) != 0)
    {
      v13 = 0x4072C00000000000;
    }
    else
    {
      if (qword_1005478C8 != -1)
        swift_once(&qword_1005478C8, sub_10009EFC4);
      if (qword_1005613B0)
      {
        v12.n128_u64[0] = sub_10009EDFC();
        if ((v15 & 1) != 0)
          v12.n128_f64[0] = 21600.0;
        goto LABEL_32;
      }
      v13 = 0x40D5180000000000;
    }
    v12.n128_u64[0] = v13;
LABEL_32:
    v44 = *(_QWORD *)(v1 + 200);
    v85 = *(_QWORD *)(v1 + 192);
    v45 = *(_QWORD *)(v1 + 168);
    v89 = *(_QWORD *)(v1 + 160);
    v46 = *(int **)(v1 + 120);
    v47 = *(_QWORD *)(v1 + 72);
    v49 = *(_QWORD *)(v1 + 40);
    v48 = *(_QWORD *)(v1 + 48);
    Date.addingTimeInterval(_:)(v12);
    static TimelineReloadPolicy.after(_:)(v47);
    v90 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v90(v47, v49);
    *(_BYTE *)(v45 + v46[6]) = 2;
    v50 = v45 + v46[7];
    sub_100011694(v50, &qword_100548310);
    v51 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
    v52 = v45 + v46[8];
    sub_100011694(v52, &qword_1005482D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v52, 1, 1, v85);
    v53 = v46[9];

    *(_QWORD *)(v45 + v53) = 0;
    sub_10000D964(v45, v89, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    v27 = sub_10007595C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v55 = *(_QWORD *)(v27 + 16);
    v54 = *(_QWORD *)(v27 + 24);
    if (v55 >= v54 >> 1)
      v27 = sub_10007595C(v54 > 1, v55 + 1, 1, v27);
    v88 = *(void **)(v1 + 264);
    v42 = *(_QWORD *)(v1 + 160);
    v56 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v27 + 16) = v55 + 1;
    v43 = v27
        + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))
        + *(_QWORD *)(v56 + 72) * v55;
    goto LABEL_35;
  }
  v3 = *(_QWORD *)(v1 + 168) + *(int *)(*(_QWORD *)(v1 + 120) + 20);
  if (qword_100547760 != -1)
    swift_once(&qword_100547760, sub_1000067CC);
  v4 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v5 = sub_10000D78C(v4, (uint64_t)qword_1005611C0);
  if ((sub_10000E1D4(v3, v5) & 1) != 0)
  {
    v6.n128_u64[0] = 0x4072C00000000000;
  }
  else
  {
    if (qword_1005478C8 != -1)
      swift_once(&qword_1005478C8, sub_10009EFC4);
    if (qword_1005613B0)
    {
      v6.n128_u64[0] = sub_10009EDFC();
      if ((v14 & 1) != 0)
        v6.n128_f64[0] = 21600.0;
    }
    else
    {
      v6.n128_u64[0] = 0x40D5180000000000;
    }
  }
  v16 = *(void **)(v1 + 264);
  v17 = *(_QWORD *)(v1 + 232);
  v78 = *(_QWORD *)(v1 + 208);
  v81 = *(_QWORD *)(v1 + 200);
  v87 = *(_QWORD *)(v1 + 192);
  v18 = *(_QWORD *)(v1 + 168);
  v73 = *(_QWORD *)(v1 + 144);
  v19 = *(int **)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 48);
  v21 = *(_QWORD *)(v1 + 56);
  v22 = *(_QWORD *)(v1 + 40);
  Date.addingTimeInterval(_:)(v6);
  static TimelineReloadPolicy.after(_:)(v21);
  v90 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v90(v21, v22);
  *(_BYTE *)(v18 + v19[6]) = 1;
  v84 = v18 + v19[7];
  sub_10001C424(v17, v84);
  v23 = v18 + v19[8];
  sub_100011694(v23, &qword_1005482D8);
  sub_10000D964(v78, v23, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  v76 = v23;
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
  v82(v23, 0, 1, v87);
  v24 = v19[9];
  v25 = *(void **)(v18 + v24);
  v26 = v16;

  v79 = v24;
  *(_QWORD *)(v18 + v24) = v16;
  sub_10000D964(v18, v73, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v27 = sub_10007595C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v29 = *(_QWORD *)(v27 + 16);
  v28 = *(_QWORD *)(v27 + 24);
  v88 = v26;
  if (v29 >= v28 >> 1)
    v27 = sub_10007595C(v28 > 1, v29 + 1, 1, v27);
  v30 = *(_QWORD *)(v1 + 168);
  v31 = *(_QWORD *)(v1 + 144);
  v71 = *(_QWORD *)(v1 + 192);
  v74 = *(_QWORD *)(v1 + 136);
  v32 = *(_QWORD *)(v1 + 128);
  v33 = *(_QWORD *)(v1 + 64);
  v34 = *(_QWORD *)(v1 + 40);
  v35 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v27 + 16) = v29 + 1;
  v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v37 = *(_QWORD *)(v32 + 72);
  sub_10000DB44(v31, v27 + v36 + v37 * v29, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v38.n128_u64[0] = 0x407E000000000000;
  Date.addingTimeInterval(_:)(v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 40))(v30, v33, v34);
  sub_100011694(v84, &qword_100548310);
  v39 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v84, 1, 1, v39);
  sub_100011694(v76, &qword_1005482D8);
  v82(v76, 1, 1, v71);

  *(_QWORD *)(v18 + v79) = 0;
  sub_10000D964(v30, v74, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v41 = *(_QWORD *)(v27 + 16);
  v40 = *(_QWORD *)(v27 + 24);
  if (v41 >= v40 >> 1)
    v27 = sub_10007595C(v40 > 1, v41 + 1, 1, v27);
  v42 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v27 + 16) = v41 + 1;
  v43 = v27 + v36 + v41 * v37;
LABEL_35:
  sub_10000DB44(v42, v43, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v65 = *(_QWORD *)(v1 + 208);
  v66 = *(_QWORD *)(v1 + 232);
  v68 = *(_QWORD *)(v1 + 224);
  v69 = *(_QWORD *)(v1 + 184);
  v67 = *(_QWORD *)(v1 + 168);
  v70 = *(_QWORD *)(v1 + 160);
  v72 = *(_QWORD *)(v1 + 152);
  v75 = *(_QWORD *)(v1 + 144);
  v77 = *(_QWORD *)(v1 + 136);
  v57 = *(_QWORD *)(v1 + 112);
  v58 = *(_QWORD *)(v1 + 120);
  v59 = *(_QWORD *)(v1 + 96);
  v60 = *(_QWORD *)(v1 + 104);
  v62 = *(_QWORD *)(v1 + 80);
  v61 = *(_QWORD *)(v1 + 88);
  v80 = *(_QWORD *)(v1 + 72);
  v83 = *(_QWORD *)(v1 + 64);
  v86 = *(_QWORD *)(v1 + 56);
  v63 = *(_QWORD *)(v1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v60, v57, v61);
  v64 = sub_1000A837C();
  Timeline.init(entries:policy:)(v27, v60, v58, v64);

  v90(v62, v63);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v61);
  sub_10000E750(v65, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  sub_100011694(v66, &qword_100548310);
  sub_10000E750(v67, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v65);
  swift_task_dealloc(v69);
  swift_task_dealloc(v67);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v75);
  swift_task_dealloc(v77);
  swift_task_dealloc(v57);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v80);
  swift_task_dealloc(v83);
  swift_task_dealloc(v86);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1000A9F04(double a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  *(double *)(*(_QWORD *)v1 + 288) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000A9F58, 0, 0);
}

uint64_t sub_1000A9F58(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);

  a1.n128_u64[0] = *(_QWORD *)(v1 + 288);
  v2 = *(void **)(v1 + 264);
  v3 = *(_QWORD *)(v1 + 232);
  v35 = *(_QWORD *)(v1 + 208);
  v37 = *(_QWORD *)(v1 + 200);
  v39 = *(_QWORD *)(v1 + 192);
  v4 = *(_QWORD *)(v1 + 168);
  v41 = *(_QWORD *)(v1 + 152);
  v5 = *(int **)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  Date.addingTimeInterval(_:)(a1);
  static TimelineReloadPolicy.after(_:)(v6);
  v43 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v43(v6, v8);
  *(_BYTE *)(v4 + v5[6]) = 0;
  sub_10001C424(v3, v4 + v5[7]);
  v9 = v4 + v5[8];
  sub_100011694(v9, &qword_1005482D8);
  sub_10000D964(v35, v9, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v9, 0, 1, v39);
  v10 = v5[9];
  v11 = *(void **)(v4 + v10);
  v40 = v2;

  *(_QWORD *)(v4 + v10) = v2;
  sub_10000D964(v4, v41, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v12 = sub_10007595C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (v14 >= v13 >> 1)
    v12 = sub_10007595C(v13 > 1, v14 + 1, 1, v12);
  v15 = *(_QWORD *)(v1 + 152);
  v16 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v12 + 16) = v14 + 1;
  sub_10000DB44(v15, v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v14, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v26 = *(_QWORD *)(v1 + 208);
  v27 = *(_QWORD *)(v1 + 232);
  v29 = *(_QWORD *)(v1 + 224);
  v30 = *(_QWORD *)(v1 + 184);
  v28 = *(_QWORD *)(v1 + 168);
  v31 = *(_QWORD *)(v1 + 160);
  v32 = *(_QWORD *)(v1 + 152);
  v33 = *(_QWORD *)(v1 + 144);
  v34 = *(_QWORD *)(v1 + 136);
  v18 = *(_QWORD *)(v1 + 112);
  v17 = *(_QWORD *)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 104);
  v21 = *(_QWORD *)(v1 + 80);
  v22 = *(_QWORD *)(v1 + 88);
  v36 = *(_QWORD *)(v1 + 72);
  v38 = *(_QWORD *)(v1 + 64);
  v42 = *(_QWORD *)(v1 + 56);
  v23 = *(_QWORD *)(v1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v18, v22);
  v24 = sub_1000A837C();
  Timeline.init(entries:policy:)(v12, v19, v17, v24);

  v43(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v22);
  sub_10000E750(v26, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  sub_100011694(v27, &qword_100548310);
  sub_10000E750(v28, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v26);
  swift_task_dealloc(v30);
  swift_task_dealloc(v28);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1000AA278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100547908 != -1)
    swift_once(&qword_100547908, sub_1000A8158);
  v2 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100561430);
  return sub_10000D964(v3, a1, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
}

uint64_t sub_1000AA2E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc(dword_10054B844);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return sub_1000A83C8(a1, v4);
}

uint64_t sub_1000AA344(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc(dword_10054B83C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return sub_1000A924C(a1, v4);
}

uint64_t sub_1000AA3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

unint64_t sub_1000AA3E4()
{
  unint64_t result;

  result = qword_10054B848;
  if (!qword_10054B848)
  {
    result = swift_getWitnessTable(byte_100427BB8, &type metadata for RecommendationsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_10054B848);
  }
  return result;
}

unint64_t sub_1000AA42C()
{
  unint64_t result;

  result = qword_10054B850;
  if (!qword_10054B850)
  {
    result = swift_getWitnessTable("y6\r", &type metadata for RecommendationsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_10054B850);
  }
  return result;
}

unint64_t sub_1000AA474()
{
  unint64_t result;

  result = qword_10054B858;
  if (!qword_10054B858)
  {
    result = swift_getWitnessTable("a6\r", &type metadata for RecommendationsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_10054B858);
  }
  return result;
}

uint64_t sub_1000AA4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAD74(a1, a2, a3, (uint64_t (*)(void))sub_1000AA3E4, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

void sub_1000AA4CC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1000AA514(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 - 12, 0x8000000100444360);
  return swift_bridgeObjectRelease(0x8000000100444360);
}

void sub_1000AA578(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_1000AA5C4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x61656C655277656ELL, 0xEB00000000736573);
  swift_bridgeObjectRelease(0xEB00000000736573);
  return Hasher._finalize()();
}

void sub_1000AA66C(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_1000AA6C4()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 - 12, 0x8000000100444360);
  swift_bridgeObjectRelease(0x8000000100444360);
  return Hasher._finalize()();
}

uint64_t sub_1000AA744()
{
  id v0;
  id v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v1 = objc_msgSend(v0, "musicSubscriptionStatus");

  if (!v1)
    return 0;
  if ((objc_msgSend(v1, "capabilities") & 1) != 0)
  {

    return 2;
  }
  else
  {
    v2 = objc_msgSend(v1, "capabilities");

    if ((v2 & 0x80) != 0)
      return 3;
    else
      return 0;
  }
}

uint64_t sub_1000AA7E8()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10000D924(v0, qword_100561448);
  sub_10000D78C(v0, (uint64_t)qword_100561448);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000004ELL);
}

uint64_t sub_1000AA848@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AACF0(&qword_100547910, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100561448, (uint64_t)sub_1000AA7E8, a1);
}

uint64_t sub_1000AA86C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to WidgetConfigurationIntent.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_10001A0F4();
  *v4 = v2;
  v4[1] = sub_10005E1F8;
  return WidgetConfigurationIntent.perform()(a2, v5);
}

uint64_t sub_1000AA8D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1000AB4E4();
  *a1 = result;
  return result;
}

uint64_t sub_1000AA8F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000AA3E4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1000AA920()
{
  unint64_t result;

  result = qword_10054B868;
  if (!qword_10054B868)
  {
    result = swift_getWitnessTable("56\r", &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B868);
  }
  return result;
}

unint64_t sub_1000AA968()
{
  unint64_t result;

  result = qword_10054B870;
  if (!qword_10054B870)
  {
    result = swift_getWitnessTable(byte_100427D04, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B870);
  }
  return result;
}

void *sub_1000AA9B0()
{
  return &protocol witness table for String;
}

unint64_t sub_1000AA9C0()
{
  unint64_t result;

  result = qword_10054B878;
  if (!qword_10054B878)
  {
    result = swift_getWitnessTable(byte_100427D34, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B878);
  }
  return result;
}

unint64_t sub_1000AAA08()
{
  unint64_t result;

  result = qword_10054B880;
  if (!qword_10054B880)
  {
    result = swift_getWitnessTable(byte_100427D5C, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B880);
  }
  return result;
}

unint64_t sub_1000AAA50()
{
  unint64_t result;

  result = qword_10054B888;
  if (!qword_10054B888)
  {
    result = swift_getWitnessTable(byte_100427D84, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B888);
  }
  return result;
}

unint64_t sub_1000AAA98()
{
  unint64_t result;

  result = qword_10054B890;
  if (!qword_10054B890)
  {
    result = swift_getWitnessTable(byte_100427DDC, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B890);
  }
  return result;
}

uint64_t sub_1000AAADC()
{
  uint64_t v0;

  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000D924(v0, qword_100561460);
  sub_10000D78C(v0, (uint64_t)qword_100561460);
  return TypeDisplayRepresentation.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100444850);
}

void sub_1000AAB3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_10000B4C8(&qword_10054B8F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6
    && (sub_10000B4C8(&qword_10054B8F8),
        v7 = static _DictionaryStorage.allocate(capacity:)(v6),
        v8 = (_QWORD *)v7,
        (v9 = *(_QWORD *)(a1 + 16)) != 0))
  {
    v10 = &v5[*(int *)(v2 + 48)];
    v11 = v7 + 64;
    v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v26 = a1;
    v13 = a1 + v12;
    v14 = *(_QWORD *)(v3 + 72);
    swift_retain(v7);
    while (1)
    {
      sub_1000ABD10(v13, (uint64_t)v5);
      v15 = *v5;
      sub_1000AB190(*v5);
      if ((v17 & 1) != 0)
        break;
      v18 = v16;
      *(_QWORD *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(v8[6] + v16) = v15;
      v19 = v8[7];
      v20 = type metadata accessor for DisplayRepresentation(0);
      (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
      v21 = v8[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_11;
      v8[2] = v23;
      v13 += v14;
      if (!--v9)
      {
        swift_release(v8);
        v24 = v26;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
    v24 = a1;
LABEL_9:
    swift_bridgeObjectRelease(v24);
  }
}

uint64_t sub_1000AACCC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AACF0(&qword_100547918, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100561460, (uint64_t)sub_1000AAADC, a1);
}

uint64_t sub_1000AACF0@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_10000D78C(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1000AAD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAD74(a1, a2, a3, (uint64_t (*)(void))sub_1000AADB4, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

uint64_t sub_1000AAD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  _QWORD v7[2];

  v7[0] = a2;
  v7[1] = a4();
  return swift_getOpaqueTypeConformance2(v7, a5, 1);
}

unint64_t sub_1000AADB4()
{
  unint64_t result;

  result = qword_10054B898;
  if (!qword_10054B898)
  {
    result = swift_getWitnessTable("M6\r", &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B898);
  }
  return result;
}

uint64_t sub_1000AADF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000AADB4();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000AAE34()
{
  unint64_t result;

  result = qword_10054B8A0;
  if (!qword_10054B8A0)
  {
    result = swift_getWitnessTable(byte_100427E1C, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B8A0);
  }
  return result;
}

unint64_t sub_1000AAE7C()
{
  unint64_t result;

  result = qword_10054B8A8;
  if (!qword_10054B8A8)
  {
    result = swift_getWitnessTable("\rA\r", &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B8A8);
  }
  return result;
}

unint64_t sub_1000AAEC4()
{
  unint64_t result;

  result = qword_10054B8B0;
  if (!qword_10054B8B0)
  {
    result = swift_getWitnessTable("=A\r", &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054B8B0);
  }
  return result;
}

uint64_t sub_1000AAF0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000AAA98();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000AAF48()
{
  unint64_t result;

  result = qword_10054B8B8;
  if (!qword_10054B8B8)
  {
    result = swift_getWitnessTable("-4\r", &type metadata for RecommendationWidgetOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_10054B8B8);
  }
  return result;
}

unint64_t sub_1000AAF90()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10054B8C0[0];
  if (!qword_10054B8C0[0])
  {
    v1 = sub_100011650(&qword_10054A220);
    v2 = sub_1000AAA50();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, qword_10054B8C0);
  }
  return result;
}

uint64_t sub_1000AAFF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_10054B8E4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1000AB050;
  return swift_task_switch(sub_1000ABB00, 0, 0);
}

uint64_t sub_1000AB050(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t (*v9)(void);

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    v7 = *(uint64_t (**)(void))(v6 + 8);
  }
  else
  {
    **(_QWORD **)(v4 + 16) = a1;
    v9 = *(uint64_t (**)(void))(v6 + 8);
    swift_bridgeObjectRetain(a1);
    v7 = v9;
  }
  return v7();
}

uint64_t sub_1000AB0C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_10054B8DC);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1000AB120;
  return swift_task_switch(sub_1000ABC1C, 0, 0);
}

uint64_t sub_1000AB120(char a1)
{
  uint64_t *v1;
  _BYTE *v3;
  uint64_t v5;

  v3 = *(_BYTE **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 24));
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

ValueMetadata *type metadata accessor for RecommendationWidgetOptionsProvider()
{
  return &type metadata for RecommendationWidgetOptionsProvider;
}

ValueMetadata *type metadata accessor for RecommendationsWidgetConfigurationIntent()
{
  return &type metadata for RecommendationsWidgetConfigurationIntent;
}

void sub_1000AB190(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

uint64_t sub_1000AB1E8()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x61656C655277656ELL, 0xEB00000000736573);
  swift_bridgeObjectRelease(0xEB00000000736573);
  v1 = Hasher._finalize()();
  return sub_1000AB29C(v0, v1);
}

uint64_t sub_1000AB29C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1000AB4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v20[15];
  char v21;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10000B4C8(&qword_100548E00);
  v5 = __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v20[-v8];
  v10 = sub_10000B4C8(&qword_100548E10);
  __chkstk_darwin(v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B4C8(&qword_10054B900);
  LocalizedStringResource.init(stringLiteral:)(0x6E656D6D6F636552);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v21 = 5;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v7, 1, 1, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  sub_1000ABD58();
  sub_1000AADB4();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)(v16, v12, &v21, v9, v7, v3, &off_1004F9000);
}

void sub_1000AB714()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _BYTE *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);

  v0 = sub_10000B4C8(&qword_100549EF8);
  __chkstk_darwin(v0);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_100548E10);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10054B8E8);
  v11 = sub_10000B4C8(&qword_10054B8F0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v33 = v13;
  v34 = 4 * v13;
  v16 = swift_allocObject(v10, v15 + 5 * v13, v14 | 7);
  v35 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_100427F30;
  v17 = (_BYTE *)(v16 + v15);
  *v17 = 0;
  v30 = v17;
  LocalizedStringResource.init(stringLiteral:)(0x6B63695020706F54);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v36(v5, 1, 1, v6);
  v18 = type metadata accessor for DisplayRepresentation.Image(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v2, 1, 1, v18);
  v31 = v19;
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v20 = v33;
  v32 = v11;
  v17[v33] = 1;
  LocalizedStringResource.init(stringLiteral:)(0x656C65522077654ELL);
  v21 = v36;
  v36(v5, 1, 1, v6);
  v19(v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v22 = v30;
  v30[2 * v20] = 2;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010);
  v21(v5, 1, 1, v6);
  v23 = v31;
  v31(v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v24 = &v22[3 * v20];
  v25 = v22;
  *v24 = 3;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000018);
  v26 = v6;
  v27 = v6;
  v28 = v36;
  v36(v5, 1, 1, v27);
  v23(v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v25[v34] = 4;
  LocalizedStringResource.init(stringLiteral:)(0x1000000000000010);
  v28(v5, 1, 1, v26);
  v23(v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  sub_1000AAB3C(v35);
}

uint64_t sub_1000ABAEC()
{
  return swift_task_switch(sub_1000ABB00, 0, 0);
}

void sub_1000ABB00()
{
  char *v0;

  v0 = (char *)sub_1000ABB50 + 4 * byte_100427B7E[sub_1000AA744()];
  __asm { BR              X10 }
}

uint64_t sub_1000ABB50()
{
  uint64_t v0;
  char v1;
  _UNKNOWN **v2;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x63697373616C63, 0xE700000000000000, 0x6275536563696F76, 0xEF72656269726373, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v1 & 1) != 0)
    v2 = &off_1004F9028;
  else
    v2 = &off_1004F9050;
  return (*(uint64_t (**)(_UNKNOWN **))(v0 + 8))(v2);
}

uint64_t sub_1000ABC08()
{
  return swift_task_switch(sub_1000ABC1C, 0, 0);
}

void sub_1000ABC1C()
{
  char *v0;

  v0 = (char *)sub_1000ABC6C + 4 * byte_100427B82[sub_1000AA744()];
  __asm { BR              X10 }
}

uint64_t sub_1000ABC6C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x63697373616C63, 0xE700000000000000, 0x6275536563696F76, 0xEF72656269726373, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v1 & 1) != 0)
    v2 = 4;
  else
    v2 = 0;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1000ABD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054B8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000ABD58()
{
  unint64_t result;

  result = qword_10054B908;
  if (!qword_10054B908)
  {
    result = swift_getWitnessTable("}5\r", &type metadata for RecommendationWidgetOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_10054B908);
  }
  return result;
}

uint64_t BackgroundFetchManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC12MusicWidgetsP33_18FD63B47A49998A2640F27BE9E6E50619ResourceBundleClass);
}

uint64_t sub_1000ABDCC()
{
  uint64_t result;

  result = sub_1000ABDE8();
  qword_100561480 = result;
  return result;
}

uint64_t sub_1000ABDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  char *v45;
  id v46;
  NSURL *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v61 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_10054C950);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v54 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v54 - v12;
  v14 = __chkstk_darwin(v11);
  v58 = (void (*)(uint64_t, char *, uint64_t))((char *)&v54 - v15);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - v16;
  v56 = sub_10024D57C((uint64_t)_swiftEmptyArrayStorage);
  v18 = sub_10000B4C8(&qword_10054C958);
  v19 = *(_QWORD *)(v4 + 72);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 32) & ~v20;
  v62 = v19;
  v22 = swift_allocObject(v18, v21 + 3 * v19, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100427490;
  v57 = v21;
  v55 = v22;
  v23 = v22 + v21;
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = objc_msgSend(v24, "mainBundle");
  v26 = objc_msgSend(v25, "resourceURL");

  v60 = v1;
  if (v26)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 0, 1, v0);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 1, 1, v0);
  }
  sub_1000AECC8((uint64_t)v17, v23);
  type metadata accessor for BundleFinder();
  v28 = objc_msgSend(v24, "bundleForClass:", swift_getObjCClassFromMetadata());
  v29 = objc_msgSend(v28, "resourceURL");

  if (v29)
  {
    v30 = (uint64_t)v58;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v31 = 0;
  }
  else
  {
    v31 = 1;
    v30 = (uint64_t)v58;
  }
  v27((char *)v30, v31, 1, v0);
  v32 = v62;
  sub_1000AECC8(v30, v23 + v62);
  v33 = v23 + 2 * v32;
  v34 = objc_msgSend(v24, "mainBundle");
  v35 = objc_msgSend(v34, "bundleURL");

  v36 = v61;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

  v37 = v60;
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v60 + 32);
  v58(v33, v36, v0);
  v27((char *)v33, 0, 1, v0);
  v63 = v56;
  sub_10012AE34(v55);
  v38 = v63;
  v39 = v63[2];
  if (v39)
  {
    v40 = (uint64_t)v63 + v57;
    v56 = v63;
    v57 = 0x8000000100446790;
    v59 = v13;
    do
    {
      sub_1000AED10(v40, (uint64_t)v10);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      if (v41(v10, 1, v0) == 1)
      {
        sub_1000AED58((uint64_t)v10);
        v42 = 1;
      }
      else
      {
        URL.appendingPathComponent(_:)(0xD000000000000020, v57);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v0);
        v42 = 0;
      }
      v27(v13, v42, 1, v0);
      sub_1000AED10((uint64_t)v13, (uint64_t)v7);
      if (v41(v7, 1, v0) == 1)
      {
        sub_1000AED58((uint64_t)v13);
      }
      else
      {
        v43 = v10;
        v44 = v27;
        v45 = v61;
        v58((uint64_t)v61, v7, v0);
        v46 = objc_allocWithZone((Class)NSBundle);
        URL._bridgeToObjectiveC()(v47);
        v49 = v48;
        v50 = v46;
        v37 = v60;
        v51 = objc_msgSend(v50, "initWithURL:", v49);

        v52 = v45;
        v27 = v44;
        v10 = v43;
        v13 = v59;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v0);
        sub_1000AED58((uint64_t)v13);
        if (v51)
        {
          swift_bridgeObjectRelease(v56);
          return (uint64_t)v51;
        }
      }
      v40 += v62;
      --v39;
    }
    while (v39);
    v38 = v56;
  }
  swift_bridgeObjectRelease(v38);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000035, 0x8000000100446750, "MusicCore/resource_bundle_accessor.swift", 40, 2, 44, 0);
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Actions.SortPlaylist.Context.playlistVariant@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Variant, a1);
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.actionContext()
{
  return 0;
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.page@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0(type metadata accessor for MetricsEvent.Page, a1);
}

uint64_t static MPCPlayerRequestTracklistRange.nowPlayingItem.getter()
{
  return 0;
}

uint64_t static MPMediaLibraryFilteringOptions.none.getter()
{
  return 0;
}

uint64_t variable initialization expression of Notice.thumbnail@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0(type metadata accessor for Notice.Thumbnail, a1);
}

uint64_t static MPCPlayerCommandRequest.isAvailable(in:)()
{
  return 1;
}

double variable initialization expression of AnyAction.displayConfiguration@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_100427F70;
  a1[1] = 0u;
  a1[2] = 0u;
  return result;
}

_QWORD *variable initialization expression of Library.Context.playlistVariants()
{
  return _swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of ArtworkVideoReportingController.signpostsForIndex(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v5;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a1, &type metadata for ComponentRenderEventSignposts, 0, 0);
  v5 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v5, a1, &type metadata for ComponentRenderEventSignposts, a2);
}

uint64_t variable initialization expression of MetricsEvent.ComponentRender.componentType()
{
  return 24;
}

uint64_t static ActionDisplayConfiguration.Attributes.hidden.getter()
{
  return 4;
}

uint64_t variable initialization expression of MetricsReportingController.componentRenderEventSampler()
{
  return sub_1000AC3E0(&qword_10054C428);
}

uint64_t variable initialization expression of MetricsReportingController.pageRenderEventSampler()
{
  return sub_1000AC3E0((uint64_t *)&unk_10054C430);
}

uint64_t sub_1000AC3E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_10000B4C8(a1);
  v2 = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(v2 + 16) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  return v2;
}

id variable initialization expression of MetricsReportingController.carFocusedMetricsController()
{
  return objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
}

uint64_t variable initialization expression of MetricsReportingController.carMetricsReporter()
{
  uint64_t v0;

  v0 = type metadata accessor for CarNowPlayingMetrics.Reporter();
  return swift_allocObject(v0, 16, 7);
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.Metadata.URL@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for URL, a1);
}

uint64_t variable initialization expression of MetricsEvent.PageRender.request@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

id variable initialization expression of ApplicationCapabilities.hasNetworkConnectivity()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *variable initialization expression of Library.Menu.Request.excludedIdentifiers()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of ApplicationCapabilities.ratingWarning@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0x7FFFFFFFFFFFFFFFLL;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

id variable initialization expression of ApplicationCapabilities.subscriptionStatus()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v1 = objc_msgSend(v0, "musicSubscriptionStatus");

  return v1;
}

char *variable initialization expression of ApplicationCapabilities.tabs()
{
  return sub_100159B80((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ApplicationCapabilities.Controller.storeBag()
{
  uint64_t v1;

  if (qword_10054BB60 != -1)
    swift_once(&qword_10054BB60, sub_100164080);
  sub_10000B4C8(&qword_10054FFE0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000AE4C0);
  return v1;
}

id variable initialization expression of BackgroundRefreshController.cloudClient()
{
  return objc_msgSend(objc_allocWithZone((Class)ICCloudClient), "init");
}

uint64_t variable initialization expression of GroupActivitiesManager.signpostInitiationToFirstAudioFrame@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0(type metadata accessor for Signpost, a1);
}

uint64_t variable initialization expression of BagProvider.durableObservers()
{
  uint64_t v0;

  v0 = type metadata accessor for BagProvider.Observer();
  return WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v0);
}

uint64_t variable initialization expression of BagProvider.logger()
{
  if (qword_10054BBB0 != -1)
    swift_once(&qword_10054BBB0, sub_100190C98);
  return Logger.init(_:)((id)static OS_os_log.musicBag);
}

id variable initialization expression of BagProvider.retry()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()), "init");
}

unint64_t variable initialization expression of Collaboration.ArtworkCachingReference.identifier()
{
  return 0xD000000000000027;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._hasDisregardedBanner()
{
  id v0;
  unint64_t v1;
  _QWORD v3[2];
  char v4;
  uint64_t v5;

  v4 = 2;
  v3[0] = 0xD000000000000014;
  v3[1] = 0x8000000100446650;
  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_1000AE4D8();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v4, (uint64_t)v0, (uint64_t)v3, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Bool, v1, (char *)&v5);
  return v5;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver.capabilitiesController()
{
  if (qword_10054BA98 != -1)
    swift_once(&qword_10054BA98, sub_100154564);
  return swift_retain(static ApplicationCapabilities.Controller.shared);
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._status()
{
  return 0x80000000;
}

uint64_t static MPIdentifierSet.Purpose.Options.catalog.getter()
{
  return 2;
}

uint64_t variable initialization expression of MusicLibrary.ActionableStateController.currentState()
{
  return 0;
}

void variable initialization expression of MusicLibrary.ActionableStateController.itemStateSubscriptions()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_100174580((uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t variable initialization expression of Library.Context.musicLibrary()
{
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.shared.getter();
}

uint64_t variable initialization expression of Library.Context.album@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t variable initialization expression of Library.Context.artist@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t variable initialization expression of Library.Context.composer@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Composer, a1);
}

uint64_t variable initialization expression of Library.Context.genre@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Genre, a1);
}

uint64_t variable initialization expression of Library.Context.playlist@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t variable initialization expression of Library.Context.tvShow@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t variable initialization expression of Library.Context.tvSeason@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t static MPIdentifierSet.Purpose.Options.all.getter()
{
  return 3;
}

id variable initialization expression of Library.Menu.Request.librarySource()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

unint64_t variable initialization expression of PushNotificationObserver.registeredHandlers()
{
  return sub_100139E40((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of PushNotificationObserver.connection()
{
  return 0;
}

double variable initialization expression of SharePlayTogetherSession._qrCode@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id variable initialization expression of Player._path()
{
  id v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;
  void *v5;

  v0 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v1 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_10054BC98 != -1)
    swift_once(&qword_10054BC98, sub_1001F14DC);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "systemMusicPathWithRoute:playerID:", v0, v2);

  if (objc_msgSend(v0, "isDeviceRoute"))
    v4 = v3;
  else
    v4 = objc_msgSend(v1, "pathWithRoute:bundleID:playerID:", v0, 0, 0);
  v5 = v4;

  return v3;
}

uint64_t variable initialization expression of Player.nowPlayingConfiguration()
{
  uint64_t v0;
  id v1;

  if (qword_10054BCC8 != -1)
    swift_once(&qword_10054BCC8, sub_10021E3B4);
  v0 = qword_100552B50;
  v1 = (id)qword_100552B50;
  return v0;
}

unint64_t variable initialization expression of Player.failingPlayerPathTimers()
{
  return sub_100139FF0((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t _s9MusicCore6PlayerC4lock33_031AD420BBF8BBF113A2662767DAC2BBLL0A9Utilities10UnfairLockCvpfi_0()
{
  uint64_t v0;

  v0 = type metadata accessor for UnfairLock();
  swift_allocObject(v0, 24, 7);
  return UnfairLock.init()();
}

id sub_1000ACAF0()
{
  if (qword_10054BCC8 != -1)
    swift_once(&qword_10054BCC8, sub_10021E3B4);
  return (id)qword_100552B50;
}

void *variable initialization expression of Player.NowPlayingConfiguration.tracklistRanges()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of Player.NowPlayingConfiguration.BadCountedSet.dictionary(uint64_t a1, uint64_t a2)
{
  return Dictionary.init()(a1, &type metadata for Int, a2);
}

uint64_t variable initialization expression of MusicItemState._playabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of MusicItemState._previewCapabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:);
  v5 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t variable initialization expression of SequentialVocalCommandsFilter.queuedCommand()
{
  return 0x1000000000000;
}

id variable initialization expression of PlaylistCovers.ArtworkDataSource.cache()
{
  return objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
}

double variable initialization expression of PresentationSource.position@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 40) = -1;
  return result;
}

uint64_t ActionMenuItemConfiguring.menuItemImage.getter()
{
  return 0;
}

uint64_t variable initialization expression of LibraryModelRequest.itemRange()
{
  return 0;
}

uint64_t variable initialization expression of RequestResponse.Controller.enqueuedRevisionCompletions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t FunctionTypeMetadata2;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  return static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
}

uint64_t variable initialization expression of RequestResponse.Controller.revisionIDCompletionsMap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  v9 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v9, 0, 0);
  v11 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v11, &type metadata for Int, v9, &protocol witness table for Int);
}

uint64_t variable initialization expression of SharePlayTogetherSession._host@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0(type metadata accessor for SharePlayTogetherSession.Participant, a1);
}

unint64_t variable initialization expression of SharePlayTogetherSession.participantProfileMap()
{
  return sub_10013A0F8((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SharePlayTogetherSession.Participant.socialProfile@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for SocialProfile, a1);
}

double variable initialization expression of GroupActivitiesManager.Activity.Metadata.artworkSize()
{
  return 300.0;
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.customMetadata@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0(type metadata accessor for GroupActivitiesManager.Activity.Metadata, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.pendingNoticeAlert()
{
  return 0;
}

double variable initialization expression of GroupActivitiesManager._reaction@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t variable initialization expression of GroupActivitiesManager.artworkCachingReference()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v1 + 24) = 0x8000000100446670;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v3, v1);

  return v1;
}

uint64_t variable initialization expression of GroupActivitiesManager.sessionStateObserver()
{
  type metadata accessor for GroupStateObserver(0);
  return GroupStateObserver.__allocating_init()();
}

uint64_t variable initialization expression of GroupActivitiesManager.activity@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0(type metadata accessor for GroupActivitiesManager.Activity, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.autoBugCaptureIntervalBeginDate@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ACEF0((uint64_t (*)(_QWORD))&type metadata accessor for Date, a1);
}

uint64_t sub_1000ACEF0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t variable initialization expression of GroupActivitiesManager.eligibilityContext()
{
  return 0;
}

id variable initialization expression of EnvironmentMonitorObserver.environmentMonitor()
{
  return objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
}

uint64_t variable initialization expression of ExplicitRestrictionsController.symbol()
{
  uint64_t v0;

  if (qword_10054C380 != -1)
    swift_once(&qword_10054C380, sub_100291488);
  v0 = static ExplicitRestrictionsController.symbols;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t variable initialization expression of LaunchURL.Resolver.logger()
{
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001004466B0, 0xD000000000000012, 0x8000000100446690);
}

uint64_t sub_1000AD000(uint64_t a1, uint64_t a2)
{
  return sub_1000AE34C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_1000AD020(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1000AD028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

BOOL sub_1000AD040(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1000AD070(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1000AD084@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1000AD098(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_1000AD0AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000AD0C0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1000AD0D4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000AD0E0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id UIView.Shadow.color.getter()
{
  id *v0;

  return *v0;
}

_QWORD *sub_1000AD0F0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

_QWORD *sub_1000AD100@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1000AD114@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1000AD128@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1000AD154@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1000AD178(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1000AD18C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000AD1A0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000AD1B4()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1000AD1C4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

void sub_1000AD1D8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1000AD1E0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1000AD1F4(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1000AD224(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1000AD238(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

unsigned __int8 *sub_1000AD24C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1000AD25C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1000AD268(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1000AD2DC(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_1000AD358@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_1000AD398(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042990C);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000AD3D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042990C);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000AD41C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1000AD45C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("}I\r", a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1000AD498(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable("}I\r");
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1000AD4E0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  WitnessTable = swift_getWitnessTable("}I\r", a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_1000AD538(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable("}I\r", a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

BOOL sub_1000AD584(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000AD59C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerEnqueueErrorDomain);
}

uint64_t sub_1000AD5AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1000AD5EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000AD62C(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000AD690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_1000AD6E4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerRequestErrorDomain);
}

uint64_t sub_1000AD6F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1000AD734(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000AD774(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000AD7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_1000AD828()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
}

uint64_t sub_1000AD838(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1000AD878(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000AD8B8(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000AD91C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_1000AD950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_1000AD9A0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCMusicBehaviorErrorDomain);
}

uint64_t sub_1000AD9B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1000AD9F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000ADA30(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000ADA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1000ADAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_1000ADB40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1000AE520(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

_DWORD *sub_1000ADB7C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1000ADB88(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1000ADB98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C((unint64_t *)&qword_100552720, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10042A468);
  v3 = sub_10001254C(&qword_10054CBA0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100429D50);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000ADC1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C(&qword_10054CBC8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100429794);
  v3 = sub_10001254C(&qword_10054CBD0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100429734);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000ADCA0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000ADCC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C(&qword_10054C8E0, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100428CF8);
  v3 = sub_10001254C(&qword_10054C8E8, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100428CA0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000ADD4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C(&qword_10054C8D0, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_10042913C);
  v3 = sub_10001254C(&qword_10054C8D8, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1004290E4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000ADDD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB48, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100429A38);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000ADE10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB48, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100429A38);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000ADE50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1000ADE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000ADEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000ADF40(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429EE4);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000ADF80(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429EE4);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000ADFC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1000AE000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000AE058(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CA98, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A160);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000AE098(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CA98, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A160);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000AE0D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1000AE118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000AE170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C((unint64_t *)&qword_10054CBB8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10042A4AC);
  v3 = sub_10001254C(&qword_10054CBC0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100429AE4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000AE1F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C(&qword_10054CBA8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100429C58);
  v3 = sub_10001254C(&qword_10054CBB0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100429BF8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000AE278@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_1000AE2BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10001254C(&qword_10054C8C0, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1004292B4);
  v3 = sub_10001254C(&qword_10054C8C8, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_10042925C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000AE340(uint64_t a1, uint64_t a2)
{
  return sub_1000AE34C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000AE34C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1000AE388(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000AE3C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_1000AE438(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

_BYTE *sub_1000AE4C0@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *v1;

  return sub_100164154(v1, a1);
}

unint64_t sub_1000AE4D8()
{
  unint64_t result;

  result = qword_10054C4A0;
  if (!qword_10054C4A0)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10054C4A0);
  }
  return result;
}

uint64_t sub_1000AE520(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC9MusicCoreP33_77107B98A7172A040C127BED6BB4A6AC12BundleFinder);
}

{
  return objc_opt_self(_TtC11MusicCoreUIP33_78477A7C4507C6B926161B408121F9AD12BundleFinder);
}

void type metadata accessor for ErrorCorrectionLevel(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C720, (uint64_t)&unk_1004FE0C0);
}

__n128 initializeWithTake for ActionSupportedStatus(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void _s3__C6CGSizeVMa_0(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C728, (uint64_t)&unk_1004FE138);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C730, (uint64_t)&unk_1004FE160);
}

void type metadata accessor for MSVAutoBugCaptureDomain(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C738, (uint64_t)&unk_1004FE190);
}

void type metadata accessor for MRGroupSessionRouteType(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C740, (uint64_t)&unk_1004FE1B8);
}

uint64_t sub_1000AE5EC(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_1000AE630(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C748, (uint64_t)&unk_1004FE230);
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C750, (uint64_t)&unk_1004FE258);
}

void type metadata accessor for ICPrivacyIdentifier(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C758, (uint64_t)&unk_1004FE278);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C760, (uint64_t)&unk_1004FE2A0);
}

void type metadata accessor for ICMusicSubscriptionStatusType(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C768, (uint64_t)&unk_1004FE2C0);
}

void type metadata accessor for ICMusicSubscriptionStatusCapabilities(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C770, (uint64_t)&unk_1004FE2E0);
}

void type metadata accessor for FeedbackType(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C778, (uint64_t)&unk_1004FE308);
}

void type metadata accessor for MPCPlayerRequestTracklistRange(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C780, (uint64_t)&unk_1004FE380);
}

void type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C788, (uint64_t)&unk_1004FE3A8);
}

void type metadata accessor for MPNowPlayingAudioFormatBadging(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C790, (uint64_t)&unk_1004FE3C8);
}

void type metadata accessor for ICEnvironmentNetworkType(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C798, (uint64_t)&unk_1004FE3E8);
}

void type metadata accessor for ICURLBagKey(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7A0, (uint64_t)&unk_1004FE408);
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7A8, (uint64_t)&unk_1004FE430);
}

void type metadata accessor for MPCPlayerTracklistReplaceIntent(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7B0, (uint64_t)&unk_1004FE458);
}

void type metadata accessor for MPCPlaybackIntentOptions(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7B8, (uint64_t)&unk_1004FE478);
}

void type metadata accessor for MPCPlaybackIntentRepeatMode(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7C0, (uint64_t)&unk_1004FE4A0);
}

void type metadata accessor for MPCPlaybackIntentShuffleMode(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7C8, (uint64_t)&unk_1004FE4C0);
}

void type metadata accessor for MPCExplicitContentAuthorizationReason(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7D0, (uint64_t)&unk_1004FE4E0);
}

__n128 _s12EditPlaylistO7ContextVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7D8, (uint64_t)&unk_1004FE558);
}

void type metadata accessor for MPMediaLibraryFilteringOptions(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7E0, (uint64_t)&unk_1004FE580);
}

void type metadata accessor for MPModelStoreBrowseContentItemType(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7E8, (uint64_t)&unk_1004FE5A8);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C7F0, (uint64_t)&unk_1004FE5C8);
}

uint64_t sub_1000AE87C()
{
  return sub_10001254C(&qword_10054C7F8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_1004286D8);
}

uint64_t sub_1000AE8A8()
{
  return sub_10001254C(&qword_10054C800, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_1004286A8);
}

uint64_t sub_1000AE8D4()
{
  return sub_10001254C(&qword_10054C808, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100428700);
}

uint64_t sub_1000AE900()
{
  return sub_10001254C(&qword_10054C810, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100428738);
}

uint64_t sub_1000AE92C()
{
  return sub_10001254C(&qword_10054C818, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1004288F0);
}

uint64_t sub_1000AE958()
{
  return sub_10001254C(&qword_10054C820, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1004288BC);
}

uint64_t sub_1000AE984()
{
  return sub_10001254C(&qword_10054C828, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_10042891C);
}

uint64_t sub_1000AE9B0()
{
  return sub_10001254C(&qword_10054C830, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100428958);
}

uint64_t sub_1000AE9DC()
{
  return sub_10001254C(&qword_10054C838, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100428AD0);
}

uint64_t sub_1000AEA08()
{
  return sub_10001254C(&qword_10054C840, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100428A9C);
}

uint64_t sub_1000AEA34()
{
  return sub_10001254C(&qword_10054C848, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100428AFC);
}

uint64_t sub_1000AEA60()
{
  return sub_10001254C(&qword_10054C850, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100428B38);
}

uint64_t sub_1000AEA8C()
{
  return sub_10001254C(&qword_10054C858, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100428C68);
}

uint64_t sub_1000AEAB8()
{
  return sub_10001254C(&qword_10054C860, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100428C40);
}

uint64_t sub_1000AEAE4()
{
  return sub_10001254C(&qword_10054C868, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100428CD0);
}

uint64_t sub_1000AEB10()
{
  return sub_10001254C(&qword_10054C870, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100428E5C);
}

uint64_t sub_1000AEB3C()
{
  return sub_10001254C(&qword_10054C878, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100428E2C);
}

uint64_t sub_1000AEB68()
{
  return sub_10001254C(&qword_10054C880, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100428E84);
}

uint64_t sub_1000AEB94()
{
  return sub_10001254C(&qword_10054C888, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100428EBC);
}

uint64_t sub_1000AEBC0()
{
  return sub_10001254C(&qword_10054C890, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_1004290AC);
}

uint64_t sub_1000AEBEC()
{
  return sub_10001254C(&qword_10054C898, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100429084);
}

uint64_t sub_1000AEC18()
{
  return sub_10001254C(&qword_10054C8A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100429114);
}

uint64_t sub_1000AEC44()
{
  return sub_10001254C(&qword_10054C8A8, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100429224);
}

uint64_t sub_1000AEC70()
{
  return sub_10001254C(&qword_10054C8B0, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_1004291FC);
}

uint64_t sub_1000AEC9C()
{
  return sub_10001254C(&qword_10054C8B8, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_10042928C);
}

uint64_t sub_1000AECC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054C950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AED10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054C950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AED58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_10054C950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C960, (uint64_t)&unk_1004FE5F0);
}

void type metadata accessor for MPCMusicBehaviorError(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C968, (uint64_t)&unk_1004FE618);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C970, (uint64_t)&unk_1004FE640);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C978, (uint64_t)&unk_1004FE660);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C980, (uint64_t)&unk_1004FE680);
}

void type metadata accessor for MPModelCuratorKind(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C988, (uint64_t)&unk_1004FE6B0);
}

void type metadata accessor for MPCSharedListeningSessionEventKind(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C990, (uint64_t)&unk_1004FE6D0);
}

void type metadata accessor for MPCSharedListeningPlaybackEventKind(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C998, (uint64_t)&unk_1004FE6F0);
}

void type metadata accessor for MPCSharedListeningEventType(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9A0, (uint64_t)&unk_1004FE710);
}

void type metadata accessor for MPCError(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9A8, (uint64_t)&unk_1004FE730);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9B0, (uint64_t)&unk_1004FE758);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9B8, (uint64_t)&unk_1004FE780);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9C0, (uint64_t)&unk_1004FE7A8);
}

__n128 _s12AddToLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1000AEEB0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1000AEED0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9C8, (uint64_t)&unk_1004FE828);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9D0, (uint64_t)&unk_1004FE860);
}

void type metadata accessor for MPCPlayerEnqueueError(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9D8, (uint64_t)&unk_1004FE890);
}

void type metadata accessor for MPCPlayerRequestError(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9E0, (uint64_t)&unk_1004FE8B8);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9E8, (uint64_t)&unk_1004FE8E0);
}

_QWORD *initializeBufferWithCopyOfBuffer for CloudLibrary.UpdateContext(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s29CompressionResistancePriorityVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s29CompressionResistancePriorityVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9F0, (uint64_t)&unk_1004FE960);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054C9F8, (uint64_t)&unk_1004FE9E0);
}

uint64_t sub_1000AEFE8()
{
  return sub_10001254C(&qword_10054CA00, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1004296F8);
}

uint64_t sub_1000AF014()
{
  return sub_10001254C(&qword_10054CA08, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1004296CC);
}

uint64_t sub_1000AF040()
{
  return sub_10001254C(&qword_10054CA10, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100429768);
}

uint64_t sub_1000AF06C()
{
  return sub_10001254C(&qword_10054CA18, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100429824);
}

uint64_t sub_1000AF098()
{
  return sub_10001254C(&qword_10054CA20, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100429850);
}

uint64_t sub_1000AF0C4()
{
  return sub_10001254C(&qword_10054CA28, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100429950);
}

uint64_t sub_1000AF0F0()
{
  return sub_10001254C(&qword_10054CA30, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042997C);
}

uint64_t sub_1000AF11C()
{
  return sub_10001254C(&qword_10054CA38, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100429AA8);
}

uint64_t sub_1000AF148()
{
  return sub_10001254C(&qword_10054CA40, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100429A7C);
}

uint64_t sub_1000AF174()
{
  return sub_10001254C(&qword_10054CA48, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100429BBC);
}

uint64_t sub_1000AF1A0()
{
  return sub_10001254C(&qword_10054CA50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100429B90);
}

uint64_t sub_1000AF1CC()
{
  return sub_10001254C(&qword_10054CA58, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100429C2C);
}

uint64_t sub_1000AF1F8()
{
  return sub_10001254C(&qword_10054CA60, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100429D14);
}

uint64_t sub_1000AF224()
{
  return sub_10001254C(&qword_10054CA68, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100429CE8);
}

uint64_t sub_1000AF250()
{
  return sub_10001254C(&qword_10054CA70, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429DFC);
}

uint64_t sub_1000AF27C()
{
  return sub_10001254C(&qword_10054CA78, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429E28);
}

uint64_t sub_1000AF2A8()
{
  return sub_10001254C(&qword_10054CA80, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100429F38);
}

uint64_t sub_1000AF2D4()
{
  return sub_10001254C(&qword_10054CA88, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A078);
}

uint64_t sub_1000AF300()
{
  return sub_10001254C(&qword_10054CA90, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A0A4);
}

uint64_t sub_1000AF32C()
{
  return sub_10001254C(&qword_10054CA98, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A160);
}

uint64_t sub_1000AF358()
{
  return sub_10001254C(&qword_10054CAA0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A12C);
}

uint64_t sub_1000AF384()
{
  return sub_10001254C(&qword_10054CAA8, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A0E8);
}

uint64_t sub_1000AF3B0()
{
  return sub_10001254C(&qword_10054CAB0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_10042A24C);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
  sub_1000AF65C(a1, (unint64_t *)&unk_10054CBE0, (uint64_t)&unk_1004FEA28);
}

uint64_t sub_1000AF3F0()
{
  return sub_10001254C(&qword_10054CAB8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_10042A210);
}

unint64_t sub_1000AF420()
{
  unint64_t result;

  result = qword_10054CAC0;
  if (!qword_10054CAC0)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_10054CAC0);
  }
  return result;
}

uint64_t sub_1000AF464()
{
  return sub_10001254C(&qword_10054CAC8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_10042A288);
}

uint64_t sub_1000AF490()
{
  return sub_10001254C(&qword_10054CAD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_10042A1A4);
}

uint64_t sub_1000AF4BC()
{
  return sub_10001254C(&qword_10054CAD8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10042A010);
}

uint64_t sub_1000AF4E8()
{
  return sub_10001254C(&qword_10054CAE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042A55C);
}

uint64_t sub_1000AF514()
{
  return sub_10001254C(&qword_10054CAE8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100429FA8);
}

uint64_t sub_1000AF540()
{
  return sub_10001254C(&qword_10054CAF0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10042A4F0);
}

uint64_t sub_1000AF56C()
{
  return sub_10001254C(&qword_10054CAF8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100429F64);
}

uint64_t sub_1000AF598()
{
  return sub_10001254C(&qword_10054CB00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429EE4);
}

uint64_t sub_1000AF5C4()
{
  return sub_10001254C(&qword_10054CB08, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429EB0);
}

uint64_t sub_1000AF5F0()
{
  return sub_10001254C(&qword_10054CB10, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100429E6C);
}

uint64_t sub_1000AF61C()
{
  return sub_10001254C(&qword_10054CB18, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_10042A400);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_1000AF65C(a1, &qword_10054CBD8, (uint64_t)&unk_1004FEA08);
}

void sub_1000AF65C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1000AF6A0()
{
  return sub_10001254C(&qword_10054CB20, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_10042A3C4);
}

uint64_t sub_1000AF6CC()
{
  return sub_10001254C(&qword_10054CB28, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_10042A43C);
}

uint64_t sub_1000AF6F8()
{
  return sub_10001254C(&qword_10054CB30, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10042A358);
}

uint64_t sub_1000AF724()
{
  return sub_10001254C(&qword_10054CB38, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100429D84);
}

uint64_t sub_1000AF750()
{
  return sub_10001254C(&qword_10054CB40, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100429B18);
}

uint64_t sub_1000AF77C()
{
  return sub_10001254C(&qword_10054CB48, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100429A38);
}

uint64_t sub_1000AF7A8()
{
  return sub_10001254C(&qword_10054CB50, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100429A04);
}

uint64_t sub_1000AF7D4()
{
  return sub_10001254C(&qword_10054CB58, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1004299C0);
}

uint64_t sub_1000AF800()
{
  return sub_10001254C(&qword_10054CB60, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_10042A2F0);
}

uint64_t sub_1000AF82C()
{
  return sub_10001254C(&qword_10054CB68, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100429FD4);
}

uint64_t sub_1000AF858()
{
  return sub_10001254C(&qword_10054CB70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10042990C);
}

uint64_t sub_1000AF884()
{
  return sub_10001254C(&qword_10054CB78, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1004298D8);
}

uint64_t sub_1000AF8B0()
{
  return sub_10001254C(&qword_10054CB80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100429894);
}

uint64_t sub_1000AF8DC()
{
  return sub_10001254C(&qword_10054CB88, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10042A2B4);
}

uint64_t sub_1000AF908()
{
  return sub_10001254C((unint64_t *)&unk_10054CB90, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10042A03C);
}

uint64_t static Actions.ReportConcern.action(context:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v7;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 6);
  *(_BYTE *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v3;
  v5 = *((_OWORD *)a1 + 1);
  v7 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 48) = v4;
  *(_BYTE *)(a2 + 56) = v2;
  *(_QWORD *)(a2 + 64) = sub_1000AFA40;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0x4014000000000000;
  *(_QWORD *)(a2 + 88) = &unk_10054CD10;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = &unk_10054CD18;
  *(_QWORD *)(a2 + 112) = 0;
  swift_retain(v5);
  swift_retain(v7);
  return swift_retain(v4);
}

uint64_t sub_1000AFA40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_1000AFA60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 24);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000DC64;
  return v6();
}

uint64_t sub_1000AFAB4(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 40);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return v5();
}

uint64_t (*Actions.ReportConcern.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FECC8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x80000001004467C0;
  v1 = swift_allocObject(&unk_1004FECF0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x80000001004467C0;
  return sub_1000B020C;
}

uint64_t (*sub_1000AFB90())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FEE18, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x80000001004467C0;
  v1 = swift_allocObject(&unk_1004FEE40, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x80000001004467C0;
  return sub_1000B0870;
}

uint64_t Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;

  v16 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (*(_QWORD *)(v16 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1004FED18, v20 + 16, v17 | 7);
  result = sub_1000B03D0(a11, v21 + v18);
  v23 = (_QWORD *)(v21 + v19);
  *v23 = a1;
  v23[1] = a2;
  v24 = (_QWORD *)(v21 + v20);
  *v24 = a3;
  v24[1] = a4;
  *(_BYTE *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = a7;
  *(_QWORD *)(a9 + 24) = a8;
  *(_QWORD *)(a9 + 32) = a10;
  *(_QWORD *)(a9 + 40) = &unk_10054CD30;
  *(_QWORD *)(a9 + 48) = v21;
  return result;
}

uint64_t sub_1000AFD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v6 = sub_10000B4C8(&qword_10054C950);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10054CD28);
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[20] = v9;
  v5[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000AFDC4, 0, 0);
}

uint64_t sub_1000AFDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  sub_1000B0750(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 144), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    sub_1000B0798(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v8;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100427F80;
    *(_BYTE *)(inited + 72) = 3;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 184) = v13;
    *(_QWORD *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v16 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v16);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000AFF64, v17, v18);
  }
}

uint64_t sub_1000AFF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(uint64_t **)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_1000D44DC(v7, v6, 5, 32, v5, v3, v2, v1, v8, v4);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  sub_100011694(v5, &qword_10054C950);
  return swift_task_switch(sub_1000B002C, 0, 0);
}

uint64_t sub_1000B002C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000B0834(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO13ReportConcernO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000013, 0x80000001004467E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000B01E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B020C()
{
  uint64_t v0;

  return sub_1000DE38C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_1000B0214()
{
  uint64_t v0;

  return sub_1000DE40C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000B021C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v12 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 8));
  return swift_deallocObject(v0, v13 + 16, v2 | 7);
}

uint64_t sub_1000B03D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054CD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B0418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = (uint64_t *)(v0 + v4);
  v8 = *v7;
  v9 = v7[1];
  v10 = v0 + v5;
  v11 = *(_QWORD *)(v0 + v5);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc(dword_10054CD24);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000DC64;
  return sub_1000AFD14(v6, v8, v9, v11, v12);
}

unint64_t sub_1000B04CC()
{
  unint64_t result;

  result = qword_10054CD38;
  if (!qword_10054CD38)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_10054CD38);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern()
{
  return &type metadata for Actions.ReportConcern;
}

uint64_t _s13ReportConcernO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[2]);
  swift_release(a1[4]);
  return swift_release(a1[6]);
}

uint64_t _s13ReportConcernO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v3);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 _s13ReportConcernO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13ReportConcernO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ReportConcernO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern.Context()
{
  return &type metadata for Actions.ReportConcern.Context;
}

uint64_t sub_1000B0750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054CD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B0798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1000B07DC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 3:
      return (void *)swift_bridgeObjectRelease(result);
    case 2:
      result = (void *)a2;
      return (void *)swift_bridgeObjectRelease(result);
    case 1:
      return sub_1000B0808(result, a2, a3);
  }
  return result;
}

void *sub_1000B0808(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_1000B0834(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Actions.AddToLibrary.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_1000B0910;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10054CD78;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10054CD80;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t sub_1000B0910(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t sub_1000B0930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000DC64;
  return v6();
}

uint64_t sub_1000B0984(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 32);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return v5();
}

uint64_t Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)();
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t (**v42)();
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (**v54)();
  uint64_t v55;
  uint64_t v56;

  v52 = a4;
  v53 = a8;
  v49 = a7;
  v50 = a5;
  v55 = a2;
  v56 = a6;
  v51 = a3;
  v44 = a1;
  v54 = a9;
  v47 = a11;
  v48 = a12;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v45 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  (*(void (**)(char *))(v12 + 16))((char *)&v43 - v15);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 40) & ~v17;
  v46 = v17 | 7;
  v19 = v13 + 7;
  v20 = (v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  v21 = (uint64_t (*)())swift_allocObject(&unk_1004FEE80, v20 + 8, v17 | 7);
  *((_QWORD *)v21 + 2) = a10;
  *((_QWORD *)v21 + 3) = a11;
  *((_QWORD *)v21 + 4) = a12;
  v22 = (char *)v21 + v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v22, v16, a10);
  *(_QWORD *)((char *)v21 + v20) = v55;
  v24 = v45;
  v23(v45, (char *)v44, a10);
  v25 = (v17 + 56) & ~v17;
  v26 = (v19 + v25) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 79) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (((v28 + 47) & 0xFFFFFFFFFFFFFFF8) + v30 + 40) & ~v30;
  v32 = (uint64_t (*)())swift_allocObject(&unk_1004FEEA8, v31 + *(_QWORD *)(v29 + 64), v46 | v30);
  v33 = v47;
  *((_QWORD *)v32 + 2) = a10;
  *((_QWORD *)v32 + 3) = v33;
  v34 = v56;
  *((_QWORD *)v32 + 4) = v48;
  *((_QWORD *)v32 + 5) = v34;
  v35 = (char *)v32 + v25;
  v36 = v49;
  *((_QWORD *)v32 + 6) = v49;
  v23(v35, v24, a10);
  v37 = v55;
  *(_QWORD *)((char *)v32 + v26) = v55;
  sub_100011530(v50, (uint64_t)v32 + v27, &qword_10054CD90);
  sub_1000B47A8(v51, (uint64_t)v32 + v28);
  sub_100011530(v52, (uint64_t)v32 + v44, &qword_10054CD98);
  sub_100011530(v53, (uint64_t)v32 + v31, &qword_10054CD28);
  v38 = swift_allocObject(&unk_1004FEED0, 32, 7);
  v39 = v56;
  *(_QWORD *)(v38 + 16) = v56;
  *(_QWORD *)(v38 + 24) = v36;
  v40 = swift_allocObject(&unk_1004FEEF8, 32, 7);
  *(_QWORD *)(v40 + 16) = &unk_10054CDB0;
  *(_QWORD *)(v40 + 24) = v38;
  swift_unknownObjectRetain(v39);
  result = swift_retain(v37);
  v42 = v54;
  *v54 = sub_1000B0F6C;
  v42[1] = v21;
  v42[2] = (uint64_t (*)())&unk_10054CDA0;
  v42[3] = v32;
  v42[4] = (uint64_t (*)())&unk_10054CDC0;
  v42[5] = (uint64_t (*)())v40;
  return result;
}

uint64_t sub_1000B0C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a2;
  v7 = type metadata accessor for MusicLibrary.AddAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10000B4C8(&qword_10054CDC8);
  v31 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054CE38);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v14);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a3);
  v24 = swift_dynamicCast(v16, v19, a3, v20, 6);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v16, 1, 1, v20);
    v27 = sub_100011694((uint64_t)v16, &qword_10054CE38);
    goto LABEL_5;
  }
  v25(v16, 0, 1, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v16, v20);
  v26 = Album.childrenAddStatus(_:)(v36);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (v26 != 1)
  {
LABEL_5:
    static MusicLibraryAction<>.add.getter(v27);
    v29 = v32;
    MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v10, a3, v32, v35, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v29);
    v28 = sub_1000B1460();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v34);
    return v28;
  }
  return 0;
}

uint64_t sub_1000B0F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1000B0F6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1000B0C6C((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t Album.childrenAddStatus(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD);
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[6];

  v56 = a1;
  v1 = type metadata accessor for MusicLibrary.AddAction(0);
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  __chkstk_darwin(v1);
  v53 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_10054CDC8);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v58 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Track(0);
  v57 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v49 = (char *)&v45 - v8;
  v9 = sub_10000B4C8(&qword_10054CDD0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  v15 = sub_10000B4C8(&qword_10054CDD8);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_10054CDE0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v45 - v24;
  Album.tracks.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_100011694((uint64_t)v17, &qword_10054CDD8);
    return 0;
  }
  v48 = v14;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v17, v18);
  v26 = sub_1000B5A48((unint64_t *)&qword_10054CDE8, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v18);
  dispatch thunk of Collection.endIndex.getter(v18, v26);
  if (v59[0] == v59[4])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    return 0;
  }
  v46 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v47 = v19;
  v46(v12, v25, v18);
  v45 = v25;
  dispatch thunk of Collection.startIndex.getter(v18);
  *(_QWORD *)&v12[*(int *)(v9 + 36)] = v59[0];
  v28 = (uint64_t)v48;
  sub_100011530((uint64_t)v12, (uint64_t)v48, &qword_10054CDD0);
  v29 = (uint64_t *)(v28 + *(int *)(v9 + 36));
  v30 = v57;
  v31 = v50;
  while (1)
  {
    v32 = *v29;
    dispatch thunk of Collection.endIndex.getter(v18, v26);
    if (v32 == v59[0])
      break;
    v33 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v59, v29, v18, v26);
    v34 = v49;
    (*(void (**)(char *))(v30 + 16))(v49);
    v33(v59, 0);
    v46(v22, (char *)v28, v18);
    dispatch thunk of Collection.formIndex(after:)(v29, v18, v26);
    v35 = *(void (**)(char *, uint64_t))(v47 + 8);
    v35(v22, v18);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v31, v34, v5);
    v37 = v53;
    static MusicLibraryAction<>.add.getter(v36);
    v38 = v55;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v31, v37, v5, v55, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
    v39 = v37;
    v40 = v58;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
    v41 = sub_1000B1460();
    v43 = v42;
    v44 = v40;
    v30 = v57;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v52);
    sub_1000B5000(v41, v43);
    v28 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v5);
    if (v43 == 1)
    {
      sub_100011694(v28, &qword_10054CDD0);
      v35(v45, v18);
      return 1;
    }
  }
  sub_100011694(v28, &qword_10054CDD0);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v18);
  return 2;
}

BOOL static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1000B1460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  int v28;
  int v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - v5;
  v7 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v32 - v12;
  v14 = sub_10000B4C8(&qword_10054CDC8);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v19 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      v28 = v19;
      v26 = 0xD000000000000010;
      if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return 0xD000000000000012;
      }
      else
      {
        v29 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
        v30 = *(void (**)(char *, uint64_t))(v8 + 8);
        v30(v13, v7);
        if (v28 != v29)
        {
          v26 = 0x206E776F6E6B6E55;
          v30(v11, v7);
        }
      }
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    v20 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v6, v11, v2);
    v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v6, v2);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v2);
    if (v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v34 = 0;
      v35 = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease(v35);
      v34 = 0xD000000000000016;
      v35 = 0x8000000100446850;
      v23 = sub_1000B598C(&qword_10054CE28, (const char *)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v23);
      object = v24._object;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(object);
      v26 = v34;
      v27 = *(void (**)(char *, uint64_t))(v20 + 8);
      v27(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v27(v21, v2);
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return 0;
  }
  if (v18 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+AddToLibrary.swift", 36, 2, 158, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000B18D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8[81] = v33;
  v8[80] = v32;
  v8[79] = v31;
  v8[78] = a8;
  v8[77] = a7;
  v8[76] = a6;
  v8[75] = a5;
  v8[74] = a4;
  v8[73] = a3;
  v8[72] = a2;
  v8[71] = a1;
  v9 = sub_10000B4C8(&qword_10054C950);
  v8[82] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10054CD28);
  v8[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Actions.MetricsReportingContext(0);
  v8[84] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[85] = v12;
  v8[86] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice.Variant(0);
  v8[87] = v13;
  v8[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[89] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[90] = v15;
  v8[91] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_10054CE30);
  v8[92] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[93] = swift_task_alloc(v17);
  v8[94] = swift_task_alloc(v17);
  v18 = type metadata accessor for MusicLibrary.AddAction(0);
  v8[95] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[96] = v19;
  v8[97] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054CDC8);
  v8[98] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v8[99] = v21;
  v8[100] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000B4C8(&qword_10054CDD8);
  v8[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CDE0);
  v8[102] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v8[103] = v24;
  v8[104] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000B4C8(&qword_10054CE38);
  v8[105] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v31 - 8);
  v8[106] = v26;
  v8[107] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v8[108] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v8[109] = v28;
  v8[110] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CE40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[111] = swift_task_alloc(v29);
  v8[112] = swift_task_alloc(v29);
  v8[113] = swift_task_alloc(v29);
  v8[114] = swift_task_alloc(v29);
  v8[115] = swift_task_alloc(v29);
  v8[116] = swift_task_alloc(v29);
  v8[117] = swift_task_alloc(v29);
  return swift_task_switch(sub_1000B1BB0, 0, 0);
}

uint64_t sub_1000B1BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD, uint64_t);
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  void (*v96)(uint64_t, uint64_t);
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  void (*v110)(uint64_t, uint64_t);
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t WitnessTable;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t inited;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int16 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, uint64_t, uint64_t);
  size_t v174[2];

  if (*(_QWORD *)(v0 + 568))
  {
    v1 = *(_QWORD *)(v0 + 576);
    *(_QWORD *)(v0 + 944) = swift_getObjectType();
    *(_BYTE *)(v0 + 516) = 0;
    *(_QWORD *)(v0 + 952) = *(_QWORD *)(v1 + 8);
    v2 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 960) = static MainActor.shared.getter(v2);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    v5 = v4;
    v6 = sub_1000B29D8;
    return swift_task_switch(v6, v3, v5);
  }
  if (qword_10054BA98 != -1)
    swift_once(&qword_10054BA98, sub_100154564);
  v8 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10042A748);
  v10 = swift_getKeyPath(&unk_10042A770);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v8, KeyPath, v10);
  swift_release(v10);
  swift_release(KeyPath);
  v11 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(void **)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  if ((v11 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_1000B5908(v0 + 472);
    v18 = *(_QWORD *)(v0 + 928);
    v19 = *(_QWORD *)(v0 + 920);
    v20 = *(_QWORD *)(v0 + 912);
    v21 = *(_QWORD *)(v0 + 904);
    v22 = *(_QWORD *)(v0 + 896);
    v23 = *(_QWORD *)(v0 + 888);
    v24 = *(_QWORD *)(v0 + 880);
    v25 = *(_QWORD *)(v0 + 856);
    v26 = *(_QWORD *)(v0 + 840);
    v158 = *(_QWORD *)(v0 + 832);
    v159 = *(_QWORD *)(v0 + 808);
    v160 = *(_QWORD *)(v0 + 800);
    v161 = *(_QWORD *)(v0 + 776);
    v162 = *(_QWORD *)(v0 + 752);
    v163 = *(_QWORD *)(v0 + 744);
    v164 = *(_QWORD *)(v0 + 728);
    v165 = *(_QWORD *)(v0 + 704);
    v167 = *(_QWORD *)(v0 + 688);
    v169 = *(_QWORD *)(v0 + 664);
    v172 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v163);
    swift_task_dealloc(v164);
    swift_task_dealloc(v165);
    swift_task_dealloc(v167);
    swift_task_dealloc(v169);
    swift_task_dealloc(v172);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v27 = *(_QWORD *)(v0 + 872);
  v28 = *(_QWORD *)(v0 + 864);
  v29 = *(_QWORD *)(v0 + 856);
  v30 = *(_QWORD *)(v0 + 848);
  v31 = *(_QWORD *)(v0 + 840);
  v32 = *(_QWORD *)(v0 + 632);
  v33 = *(_QWORD *)(v0 + 584);
  v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v173(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  *(_QWORD *)(v0 + 968) = v34;
  v34(v29, v33, v32);
  v35 = swift_dynamicCast(v31, v29, v32, v28, 6);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  if ((v35 & 1) == 0)
  {
    v47 = *(_QWORD *)(v0 + 840);
    v36(v47, 1, 1, *(_QWORD *)(v0 + 864));
    v48 = (uint64_t *)&unk_10054CE38;
    goto LABEL_13;
  }
  v37 = *(_QWORD *)(v0 + 880);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 840);
  v41 = *(_QWORD *)(v0 + 592);
  v36(v40, 0, 1, v39);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v37, v40, v39);
  v42 = Album.childrenAddStatus(_:)(v41);
  v43 = *(_QWORD *)(v0 + 880);
  if (v42 != 1)
  {
    v49 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v43, *(_QWORD *)(v0 + 864));
    goto LABEL_15;
  }
  v44 = *(_QWORD *)(v0 + 824);
  v45 = *(_QWORD *)(v0 + 816);
  v46 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v46, 1, v45) == 1)
  {
    v47 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v48 = &qword_10054CDD8;
LABEL_13:
    v49 = sub_100011694(v47, v48);
LABEL_15:
    v50 = *(_QWORD *)(v0 + 920);
    v51 = *(_QWORD *)(v0 + 800);
    v166 = *(_QWORD *)(v0 + 792);
    v168 = *(_QWORD *)(v0 + 784);
    v170 = *(_QWORD *)(v0 + 936);
    v52 = *(_QWORD *)(v0 + 776);
    v53 = *(_QWORD *)(v0 + 768);
    v54 = *(_QWORD *)(v0 + 760);
    v55 = *(_QWORD *)(v0 + 648);
    v56 = *(_QWORD *)(v0 + 632);
    v57 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v49);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v57, v52, v56, v54, v55, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v50);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v51, v168);
    sub_100011694(v170, &qword_10054CE40);
    sub_100011530(v50, v170, &qword_10054CE40);
    goto LABEL_16;
  }
  v130 = *(_QWORD *)(v0 + 832);
  v131 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v130, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v174[0] = (size_t)_swiftEmptyArrayStorage;
  swift_retain(v131);
  LOBYTE(v130) = sub_1000B5640(v130, v131, v174);
  v132 = swift_release(v131);
  if ((v130 & 1) != 0)
  {
    v133 = *(_QWORD *)(v0 + 880);
    v134 = *(_QWORD *)(v0 + 872);
    v135 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v132);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
    v136 = (_QWORD *)v174[0];
  }
  else
  {
    v136 = (_QWORD *)v174[0];
    if (*(_QWORD *)(v174[0] + 16))
    {
      (*(void (**)(_QWORD, size_t, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), v174[0]+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)), *(_QWORD *)(v0 + 712), v132);
      v149 = 0;
    }
    else
    {
      v149 = 1;
    }
    v150 = *(_QWORD *)(v0 + 936);
    v151 = *(_QWORD *)(v0 + 928);
    v152 = *(_QWORD *)(v0 + 880);
    v153 = *(_QWORD *)(v0 + 872);
    v154 = *(_QWORD *)(v0 + 864);
    v155 = *(_QWORD *)(v0 + 832);
    v156 = *(_QWORD *)(v0 + 824);
    v157 = *(_QWORD *)(v0 + 816);
    v173(v151, v149, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v155, v157);
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
    sub_100011694(v150, &qword_10054CE40);
    sub_100011530(v151, v150, &qword_10054CE40);
  }
  swift_bridgeObjectRelease(v136);
LABEL_16:
  v58 = *(_QWORD *)(v0 + 936);
  v59 = *(_QWORD *)(v0 + 912);
  v60 = *(_QWORD *)(v0 + 752);
  v61 = *(_QWORD *)(v0 + 736);
  v62 = *(_QWORD *)(v0 + 720);
  v63 = *(_QWORD *)(v0 + 712);
  v64 = *(void (**)(uint64_t, _QWORD, uint64_t))(v62 + 104);
  v64(v59, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v63);
  v173(v59, 0, 1, v63);
  v65 = v60 + *(int *)(v61 + 48);
  sub_100011370(v58, v60, &qword_10054CE40);
  sub_100011370(v59, v65, &qword_10054CE40);
  v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v66(v60, 1, v63) == 1)
  {
    v67 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 912), &qword_10054CE40);
    if (v66(v65, 1, v67) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 752), &qword_10054CE40);
LABEL_31:
      sub_100011370(*(_QWORD *)(v0 + 600), v0 + 288, &qword_10054CD90);
      if (*(_QWORD *)(v0 + 344) == 1)
      {
        v97 = *(_QWORD **)(v0 + 608);
        sub_100011694(v0 + 288, &qword_10054CD90);
        v98 = v97[3];
        *(_QWORD *)(v0 + 976) = v98;
        *(_QWORD *)(v0 + 984) = v97[4];
        *(_QWORD *)(v0 + 992) = sub_10000D900(v97, v98);
        v99 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v99);
        v3 = dispatch thunk of Actor.unownedExecutor.getter(v99, &protocol witness table for MainActor);
        v5 = v100;
        v6 = sub_1000B3820;
        return swift_task_switch(v6, v3, v5);
      }
      sub_1000B59CC(v0 + 288, v0 + 216);
      v101 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1016) = v101;
      *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v101);
      v102 = dispatch thunk of Actor.unownedExecutor.getter(v101, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 1032) = v102;
      *(_QWORD *)(v0 + 1040) = v103;
      return swift_task_switch(sub_1000B3904, v102, v103);
    }
    goto LABEL_21;
  }
  v68 = *(_QWORD *)(v0 + 712);
  sub_100011370(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_10054CE40);
  v69 = v66(v65, 1, v68);
  v70 = *(_QWORD *)(v0 + 912);
  v71 = *(_QWORD *)(v0 + 904);
  if (v69 == 1)
  {
    v72 = *(_QWORD *)(v0 + 720);
    v73 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 912), &qword_10054CE40);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
LABEL_21:
    sub_100011694(*(_QWORD *)(v0 + 752), &qword_10054CE30);
    goto LABEL_22;
  }
  v171 = *(_QWORD *)(v0 + 752);
  v91 = *(_QWORD *)(v0 + 728);
  v92 = *(_QWORD *)(v0 + 720);
  v93 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v91, v65, v93);
  v94 = sub_1000B598C(&qword_10054CE48, (const char *)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v95 = dispatch thunk of static Equatable.== infix(_:_:)(v71, v91, v93, v94);
  v96 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
  v96(v91, v93);
  sub_100011694(v70, &qword_10054CE40);
  v96(v71, v93);
  sub_100011694(v171, &qword_10054CE40);
  if ((v95 & 1) != 0)
    goto LABEL_31;
LABEL_22:
  v74 = *(_QWORD *)(v0 + 936);
  v75 = *(_QWORD *)(v0 + 896);
  v76 = *(_QWORD *)(v0 + 744);
  v77 = *(_QWORD *)(v0 + 712);
  v64(v75, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v77);
  v173(v75, 0, 1, v77);
  v78 = v76 + *(int *)(v61 + 48);
  sub_100011370(v74, v76, &qword_10054CE40);
  sub_100011370(v75, v78, &qword_10054CE40);
  if (v66(v76, 1, v77) == 1)
  {
    v79 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 896), &qword_10054CE40);
    if (v66(v78, 1, v79) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 744), &qword_10054CE40);
LABEL_35:
      v111 = *(_QWORD **)(v0 + 608);
      v112 = v111[3];
      *(_QWORD *)(v0 + 1072) = v112;
      *(_QWORD *)(v0 + 1080) = v111[4];
      *(_QWORD *)(v0 + 1088) = sub_10000D900(v111, v112);
      v113 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v113);
      v3 = dispatch thunk of Actor.unownedExecutor.getter(v113, &protocol witness table for MainActor);
      v5 = v114;
      v6 = sub_1000B3BE8;
      return swift_task_switch(v6, v3, v5);
    }
    goto LABEL_27;
  }
  v80 = *(_QWORD *)(v0 + 712);
  sub_100011370(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_10054CE40);
  v81 = v66(v78, 1, v80);
  v82 = *(_QWORD *)(v0 + 896);
  v83 = *(_QWORD *)(v0 + 888);
  if (v81 == 1)
  {
    v84 = *(_QWORD *)(v0 + 720);
    v85 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 896), &qword_10054CE40);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
LABEL_27:
    sub_100011694(*(_QWORD *)(v0 + 744), &qword_10054CE30);
    goto LABEL_28;
  }
  v104 = *(_QWORD *)(v0 + 744);
  v105 = *(_QWORD *)(v0 + 728);
  v106 = *(_QWORD *)(v0 + 720);
  v107 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v105, v78, v107);
  v108 = sub_1000B598C(&qword_10054CE48, (const char *)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v109 = dispatch thunk of static Equatable.== infix(_:_:)(v83, v105, v107, v108);
  v110 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
  v110(v105, v107);
  sub_100011694(v82, &qword_10054CE40);
  v110(v83, v107);
  sub_100011694(v104, &qword_10054CE40);
  if ((v109 & 1) != 0)
    goto LABEL_35;
LABEL_28:
  sub_100011370(*(_QWORD *)(v0 + 616), v0 + 520, &qword_10054CD98);
  v86 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v86;
  if (v86)
  {
    v87 = *(_QWORD *)(v0 + 704);
    v88 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_10000D900((_QWORD *)(v0 + 520), v86);
    swift_storeEnumTagMultiPayload(v87, v88, 7);
    v89 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v89);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v89, &protocol witness table for MainActor);
    v5 = v90;
    v6 = sub_1000B3E38;
    return swift_task_switch(v6, v3, v5);
  }
  sub_100011694(v0 + 520, &qword_10054CD98);
  v115 = *(_QWORD *)(v0 + 680);
  v116 = *(_QWORD *)(v0 + 672);
  v117 = *(_QWORD *)(v0 + 664);
  sub_100011370(*(_QWORD *)(v0 + 624), v117, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v117, 1, v116) != 1)
  {
    v137 = *(_QWORD *)(v0 + 656);
    v138 = *(_QWORD *)(v0 + 632);
    sub_1000B0798(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v138);
    *(_QWORD *)(v0 + 1152) = v139;
    v140 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 56))(v137, 1, 1, v140);
    v141 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v141, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v138);
    *(_QWORD *)(inited + 40) = v143;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 1168) = v144;
    *(_QWORD *)(v0 + 1176) = v145;
    *(_WORD *)(v0 + 514) = v146;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v147 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v147);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v147, &protocol witness table for MainActor);
    v5 = v148;
    v6 = sub_1000B4144;
    return swift_task_switch(v6, v3, v5);
  }
  sub_100011694(*(_QWORD *)(v0 + 664), &qword_10054CD28);
  v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
  v119 = *(_QWORD *)(v0 + 848);
  v120 = *(_QWORD *)(v0 + 632);
  v121 = *(_QWORD *)(v0 + 584);
  v122 = sub_1001C40D8(v120, v120);
  v123 = swift_allocObject(v122, ((*(unsigned __int8 *)(v119 + 80) + (unint64_t)*(unsigned int *)(v122 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72), *(unsigned __int8 *)(v119 + 80) | (unint64_t)*(unsigned __int16 *)(v122 + 52));
  v124 = static Array._adoptStorage(_:count:)(v123, 1);
  v118(v125, v121, v120);
  v126 = sub_1000D0CFC(v124);
  *(_QWORD *)(v0 + 1192) = v126;
  *(_QWORD *)(v0 + 560) = v126;
  v127 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  *(_QWORD *)(v0 + 1200) = v127;
  v128 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v128);
  *v127 = v0;
  v127[1] = sub_1000B4338;
  return MusicLibrary.add<A, B>(_:)(v0 + 560, v128, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
}

uint64_t sub_1000B29D8()
{
  char *v0;
  void (*v1)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))*((_QWORD *)v0 + 119);
  v2 = *((_QWORD *)v0 + 118);
  v3 = *((_QWORD *)v0 + 72);
  swift_release(*((_QWORD *)v0 + 120));
  v4 = sub_1000B04CC();
  v1(v0 + 516, &type metadata for ActionType, v4, v2, v3);
  return swift_task_switch(sub_1000B2A58, 0, 0);
}

uint64_t sub_1000B2A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t);
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)();
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  void (*v93)(uint64_t, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  void (*v107)(uint64_t, uint64_t);
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t WitnessTable;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t inited;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int16 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t, uint64_t);
  size_t v171[2];

  if (qword_10054BA98 != -1)
    swift_once(&qword_10054BA98, sub_100154564);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10042A748);
  v3 = swift_getKeyPath(&unk_10042A770);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(void **)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);

  if ((v4 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_1000B5908(v0 + 472);
    v11 = *(_QWORD *)(v0 + 928);
    v12 = *(_QWORD *)(v0 + 920);
    v13 = *(_QWORD *)(v0 + 912);
    v14 = *(_QWORD *)(v0 + 904);
    v15 = *(_QWORD *)(v0 + 896);
    v16 = *(_QWORD *)(v0 + 888);
    v17 = *(_QWORD *)(v0 + 880);
    v18 = *(_QWORD *)(v0 + 856);
    v19 = *(_QWORD *)(v0 + 840);
    v155 = *(_QWORD *)(v0 + 832);
    v156 = *(_QWORD *)(v0 + 808);
    v157 = *(_QWORD *)(v0 + 800);
    v158 = *(_QWORD *)(v0 + 776);
    v159 = *(_QWORD *)(v0 + 752);
    v160 = *(_QWORD *)(v0 + 744);
    v161 = *(_QWORD *)(v0 + 728);
    v162 = *(_QWORD *)(v0 + 704);
    v164 = *(_QWORD *)(v0 + 688);
    v166 = *(_QWORD *)(v0 + 664);
    v169 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v155);
    swift_task_dealloc(v156);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v164);
    swift_task_dealloc(v166);
    swift_task_dealloc(v169);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v21 = *(_QWORD *)(v0 + 872);
  v22 = *(_QWORD *)(v0 + 864);
  v23 = *(_QWORD *)(v0 + 856);
  v24 = *(_QWORD *)(v0 + 848);
  v25 = *(_QWORD *)(v0 + 840);
  v26 = *(_QWORD *)(v0 + 632);
  v27 = *(_QWORD *)(v0 + 584);
  v170 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v170(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(_QWORD *)(v0 + 968) = v28;
  v28(v23, v27, v26);
  v29 = swift_dynamicCast(v25, v23, v26, v22, 6);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v29 & 1) == 0)
  {
    v41 = *(_QWORD *)(v0 + 840);
    v30(v41, 1, 1, *(_QWORD *)(v0 + 864));
    v42 = (uint64_t *)&unk_10054CE38;
    goto LABEL_10;
  }
  v31 = *(_QWORD *)(v0 + 880);
  v32 = *(_QWORD *)(v0 + 872);
  v33 = *(_QWORD *)(v0 + 864);
  v34 = *(_QWORD *)(v0 + 840);
  v35 = *(_QWORD *)(v0 + 592);
  v30(v34, 0, 1, v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v34, v33);
  v36 = Album.childrenAddStatus(_:)(v35);
  v37 = *(_QWORD *)(v0 + 880);
  if (v36 != 1)
  {
    v43 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v37, *(_QWORD *)(v0 + 864));
    goto LABEL_12;
  }
  v38 = *(_QWORD *)(v0 + 824);
  v39 = *(_QWORD *)(v0 + 816);
  v40 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v39) == 1)
  {
    v41 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v42 = &qword_10054CDD8;
LABEL_10:
    v43 = sub_100011694(v41, v42);
LABEL_12:
    v44 = *(_QWORD *)(v0 + 920);
    v45 = *(_QWORD *)(v0 + 800);
    v163 = *(_QWORD *)(v0 + 792);
    v165 = *(_QWORD *)(v0 + 784);
    v167 = *(_QWORD *)(v0 + 936);
    v46 = *(_QWORD *)(v0 + 776);
    v47 = *(_QWORD *)(v0 + 768);
    v48 = *(_QWORD *)(v0 + 760);
    v49 = *(_QWORD *)(v0 + 648);
    v50 = *(_QWORD *)(v0 + 632);
    v51 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v43);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v51, v46, v50, v48, v49, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v44);
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v45, v165);
    sub_100011694(v167, &qword_10054CE40);
    sub_100011530(v44, v167, &qword_10054CE40);
    goto LABEL_13;
  }
  v127 = *(_QWORD *)(v0 + 832);
  v128 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v127, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v171[0] = (size_t)_swiftEmptyArrayStorage;
  swift_retain(v128);
  LOBYTE(v127) = sub_1000B5640(v127, v128, v171);
  v129 = swift_release(v128);
  if ((v127 & 1) != 0)
  {
    v130 = *(_QWORD *)(v0 + 880);
    v131 = *(_QWORD *)(v0 + 872);
    v132 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v129);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v130, v132);
    v133 = (_QWORD *)v171[0];
  }
  else
  {
    v133 = (_QWORD *)v171[0];
    if (*(_QWORD *)(v171[0] + 16))
    {
      (*(void (**)(_QWORD, size_t, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), v171[0]+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)), *(_QWORD *)(v0 + 712), v129);
      v146 = 0;
    }
    else
    {
      v146 = 1;
    }
    v147 = *(_QWORD *)(v0 + 936);
    v148 = *(_QWORD *)(v0 + 928);
    v149 = *(_QWORD *)(v0 + 880);
    v150 = *(_QWORD *)(v0 + 872);
    v151 = *(_QWORD *)(v0 + 864);
    v152 = *(_QWORD *)(v0 + 832);
    v153 = *(_QWORD *)(v0 + 824);
    v154 = *(_QWORD *)(v0 + 816);
    v170(v148, v146, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
    sub_100011694(v147, &qword_10054CE40);
    sub_100011530(v148, v147, &qword_10054CE40);
  }
  swift_bridgeObjectRelease(v133);
LABEL_13:
  v52 = *(_QWORD *)(v0 + 936);
  v53 = *(_QWORD *)(v0 + 912);
  v54 = *(_QWORD *)(v0 + 752);
  v55 = *(_QWORD *)(v0 + 736);
  v56 = *(_QWORD *)(v0 + 720);
  v57 = *(_QWORD *)(v0 + 712);
  v58 = *(void (**)(uint64_t, _QWORD, uint64_t))(v56 + 104);
  v58(v53, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v57);
  v170(v53, 0, 1, v57);
  v59 = v54 + *(int *)(v55 + 48);
  sub_100011370(v52, v54, &qword_10054CE40);
  sub_100011370(v53, v59, &qword_10054CE40);
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v60(v54, 1, v57) == 1)
  {
    v61 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 912), &qword_10054CE40);
    if (v60(v59, 1, v61) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 752), &qword_10054CE40);
LABEL_28:
      sub_100011370(*(_QWORD *)(v0 + 600), v0 + 288, &qword_10054CD90);
      if (*(_QWORD *)(v0 + 344) != 1)
      {
        sub_1000B59CC(v0 + 288, v0 + 216);
        v98 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1016) = v98;
        *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v98);
        v99 = dispatch thunk of Actor.unownedExecutor.getter(v98, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 1032) = v99;
        *(_QWORD *)(v0 + 1040) = v100;
        return swift_task_switch(sub_1000B3904, v99, v100);
      }
      v94 = *(_QWORD **)(v0 + 608);
      sub_100011694(v0 + 288, &qword_10054CD90);
      v95 = v94[3];
      *(_QWORD *)(v0 + 976) = v95;
      *(_QWORD *)(v0 + 984) = v94[4];
      *(_QWORD *)(v0 + 992) = sub_10000D900(v94, v95);
      v96 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v96);
      v84 = dispatch thunk of Actor.unownedExecutor.getter(v96, &protocol witness table for MainActor);
      v86 = v97;
      v87 = sub_1000B3820;
      return swift_task_switch(v87, v84, v86);
    }
    goto LABEL_18;
  }
  v62 = *(_QWORD *)(v0 + 712);
  sub_100011370(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_10054CE40);
  v63 = v60(v59, 1, v62);
  v64 = *(_QWORD *)(v0 + 912);
  v65 = *(_QWORD *)(v0 + 904);
  if (v63 == 1)
  {
    v66 = *(_QWORD *)(v0 + 720);
    v67 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 912), &qword_10054CE40);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
LABEL_18:
    sub_100011694(*(_QWORD *)(v0 + 752), &qword_10054CE30);
    goto LABEL_19;
  }
  v168 = *(_QWORD *)(v0 + 752);
  v88 = *(_QWORD *)(v0 + 728);
  v89 = *(_QWORD *)(v0 + 720);
  v90 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v88, v59, v90);
  v91 = sub_1000B598C(&qword_10054CE48, (const char *)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v92 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v88, v90, v91);
  v93 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
  v93(v88, v90);
  sub_100011694(v64, &qword_10054CE40);
  v93(v65, v90);
  sub_100011694(v168, &qword_10054CE40);
  if ((v92 & 1) != 0)
    goto LABEL_28;
LABEL_19:
  v68 = *(_QWORD *)(v0 + 936);
  v69 = *(_QWORD *)(v0 + 896);
  v70 = *(_QWORD *)(v0 + 744);
  v71 = *(_QWORD *)(v0 + 712);
  v58(v69, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v71);
  v170(v69, 0, 1, v71);
  v72 = v70 + *(int *)(v55 + 48);
  sub_100011370(v68, v70, &qword_10054CE40);
  sub_100011370(v69, v72, &qword_10054CE40);
  if (v60(v70, 1, v71) == 1)
  {
    v73 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 896), &qword_10054CE40);
    if (v60(v72, 1, v73) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 744), &qword_10054CE40);
LABEL_32:
      v108 = *(_QWORD **)(v0 + 608);
      v109 = v108[3];
      *(_QWORD *)(v0 + 1072) = v109;
      *(_QWORD *)(v0 + 1080) = v108[4];
      *(_QWORD *)(v0 + 1088) = sub_10000D900(v108, v109);
      v110 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v110);
      v84 = dispatch thunk of Actor.unownedExecutor.getter(v110, &protocol witness table for MainActor);
      v86 = v111;
      v87 = sub_1000B3BE8;
      return swift_task_switch(v87, v84, v86);
    }
    goto LABEL_24;
  }
  v74 = *(_QWORD *)(v0 + 712);
  sub_100011370(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_10054CE40);
  v75 = v60(v72, 1, v74);
  v76 = *(_QWORD *)(v0 + 896);
  v77 = *(_QWORD *)(v0 + 888);
  if (v75 == 1)
  {
    v78 = *(_QWORD *)(v0 + 720);
    v79 = *(_QWORD *)(v0 + 712);
    sub_100011694(*(_QWORD *)(v0 + 896), &qword_10054CE40);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
LABEL_24:
    sub_100011694(*(_QWORD *)(v0 + 744), &qword_10054CE30);
    goto LABEL_25;
  }
  v101 = *(_QWORD *)(v0 + 744);
  v102 = *(_QWORD *)(v0 + 728);
  v103 = *(_QWORD *)(v0 + 720);
  v104 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v102, v72, v104);
  v105 = sub_1000B598C(&qword_10054CE48, (const char *)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v106 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v102, v104, v105);
  v107 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v107(v102, v104);
  sub_100011694(v76, &qword_10054CE40);
  v107(v77, v104);
  sub_100011694(v101, &qword_10054CE40);
  if ((v106 & 1) != 0)
    goto LABEL_32;
LABEL_25:
  sub_100011370(*(_QWORD *)(v0 + 616), v0 + 520, &qword_10054CD98);
  v80 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v80;
  if (v80)
  {
    v81 = *(_QWORD *)(v0 + 704);
    v82 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_10000D900((_QWORD *)(v0 + 520), v80);
    swift_storeEnumTagMultiPayload(v81, v82, 7);
    v83 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v83);
    v84 = dispatch thunk of Actor.unownedExecutor.getter(v83, &protocol witness table for MainActor);
    v86 = v85;
    v87 = sub_1000B3E38;
  }
  else
  {
    sub_100011694(v0 + 520, &qword_10054CD98);
    v112 = *(_QWORD *)(v0 + 680);
    v113 = *(_QWORD *)(v0 + 672);
    v114 = *(_QWORD *)(v0 + 664);
    sub_100011370(*(_QWORD *)(v0 + 624), v114, &qword_10054CD28);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v114, 1, v113) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 664), &qword_10054CD28);
      v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
      v116 = *(_QWORD *)(v0 + 848);
      v117 = *(_QWORD *)(v0 + 632);
      v118 = *(_QWORD *)(v0 + 584);
      v119 = sub_1001C40D8(v117, v117);
      v120 = swift_allocObject(v119, ((*(unsigned __int8 *)(v116 + 80) + (unint64_t)*(unsigned int *)(v119 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v116 + 72), *(unsigned __int8 *)(v116 + 80) | (unint64_t)*(unsigned __int16 *)(v119 + 52));
      v121 = static Array._adoptStorage(_:count:)(v120, 1);
      v115(v122, v118, v117);
      v123 = sub_1000D0CFC(v121);
      *(_QWORD *)(v0 + 1192) = v123;
      *(_QWORD *)(v0 + 560) = v123;
      v124 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
      *(_QWORD *)(v0 + 1200) = v124;
      v125 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v125);
      *v124 = v0;
      v124[1] = sub_1000B4338;
      return MusicLibrary.add<A, B>(_:)(v0 + 560, v125, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
    }
    v134 = *(_QWORD *)(v0 + 656);
    v135 = *(_QWORD *)(v0 + 632);
    sub_1000B0798(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v135);
    *(_QWORD *)(v0 + 1152) = v136;
    v137 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v134, 1, 1, v137);
    v138 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v138, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v135);
    *(_QWORD *)(inited + 40) = v140;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 1168) = v141;
    *(_QWORD *)(v0 + 1176) = v142;
    *(_WORD *)(v0 + 514) = v143;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v144 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v144);
    v84 = dispatch thunk of Actor.unownedExecutor.getter(v144, &protocol witness table for MainActor);
    v86 = v145;
    v87 = sub_1000B4144;
  }
  return swift_task_switch(v87, v84, v86);
}

uint64_t sub_1000B3820()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[123];
  swift_release(v0[125]);
  sub_10017E1D4(0, (uint64_t)(v0 + 52));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[126] = v3;
  *v3 = v0;
  v3[1] = sub_1000B38A4;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 52, v0[122], v0[123]);
}

uint64_t sub_1000B38A4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 416);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1008));
  sub_1000B593C(v1);
  return swift_task_switch(sub_1000B5A8C, 0, 0);
}

uint64_t sub_1000B3904(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[131] = v2;
  v3 = swift_task_alloc(48);
  v1[132] = v3;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = v1 + 27;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[133] = v4;
  *v4 = v1;
  v4[1] = sub_1000B39C4;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 513, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001004468B0, sub_1000B5A08, v3, &type metadata for Bool);
}

uint64_t sub_1000B39C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1056);
  v3 = *(_QWORD *)(*v0 + 1048);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1064));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000B3A34, *(_QWORD *)(v1 + 1032), *(_QWORD *)(v1 + 1040));
}

uint64_t sub_1000B3A34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 1024));
  return swift_task_switch(sub_1000B3A70, 0, 0);
}

uint64_t sub_1000B3A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  sub_1000B5A14(v0 + 216);
  sub_100011694(v1, &qword_10054CE40);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v10 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B3BE8()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[135];
  swift_release(v0[137]);
  sub_10017E3C8(0, (uint64_t)(v0 + 45));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[138] = v3;
  *v3 = v0;
  v3[1] = sub_1000B3C6C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 45, v0[134], v0[135]);
}

uint64_t sub_1000B3C6C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 360);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1104));
  sub_1000B593C(v1);
  return swift_task_switch(sub_1000B3CCC, 0, 0);
}

uint64_t sub_1000B3CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_100011694(*(_QWORD *)(v0 + 936), &qword_10054CE40);
  v1 = *(_QWORD *)(v0 + 928);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = *(_QWORD *)(v0 + 912);
  v4 = *(_QWORD *)(v0 + 904);
  v5 = *(_QWORD *)(v0 + 896);
  v6 = *(_QWORD *)(v0 + 888);
  v7 = *(_QWORD *)(v0 + 880);
  v8 = *(_QWORD *)(v0 + 856);
  v9 = *(_QWORD *)(v0 + 840);
  v11 = *(_QWORD *)(v0 + 832);
  v12 = *(_QWORD *)(v0 + 808);
  v13 = *(_QWORD *)(v0 + 800);
  v14 = *(_QWORD *)(v0 + 776);
  v15 = *(_QWORD *)(v0 + 752);
  v16 = *(_QWORD *)(v0 + 744);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 704);
  v19 = *(_QWORD *)(v0 + 688);
  v20 = *(_QWORD *)(v0 + 664);
  v21 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B3E38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[140];
  v2 = v0[139];
  v3 = v0[88];
  swift_release(v0[142]);
  sub_10012501C(v3, 0, v2, v1);
  sub_10000E750(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_1000B3EB0, 0, 0);
}

uint64_t sub_1000B3EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_100011758((_QWORD *)(v0 + 520));
  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 664);
  sub_100011370(*(_QWORD *)(v0 + 624), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 664), &qword_10054CD28);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
    v5 = *(_QWORD *)(v0 + 848);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = *(_QWORD *)(v0 + 584);
    v8 = sub_1001C40D8(v6, v6);
    v9 = swift_allocObject(v8, ((*(unsigned __int8 *)(v5 + 80) + (unint64_t)*(unsigned int *)(v8 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | (unint64_t)*(unsigned __int16 *)(v8 + 52));
    v10 = static Array._adoptStorage(_:count:)(v9, 1);
    v4(v11, v7, v6);
    v12 = sub_1000D0CFC(v10);
    *(_QWORD *)(v0 + 1192) = v12;
    *(_QWORD *)(v0 + 560) = v12;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
    *(_QWORD *)(v0 + 1200) = v13;
    v14 = type metadata accessor for Array(0);
    WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v14);
    *v13 = v0;
    v13[1] = sub_1000B4338;
    return MusicLibrary.add<A, B>(_:)(v0 + 560, v14, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 656);
    v18 = *(_QWORD *)(v0 + 632);
    sub_1000B0798(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v18);
    *(_QWORD *)(v0 + 1152) = v19;
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    v21 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v21, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v18);
    *(_QWORD *)(inited + 40) = v23;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 1168) = v24;
    *(_QWORD *)(v0 + 1176) = v25;
    *(_WORD *)(v0 + 514) = v26;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v27 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v27);
    v28 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000B4144, v28, v29);
  }
}

uint64_t sub_1000B4144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 1176);
  v2 = *(_QWORD *)(v0 + 1168);
  v3 = *(void **)(v0 + 1160);
  v4 = *(_QWORD *)(v0 + 1152);
  v5 = *(_QWORD *)(v0 + 1144);
  v6 = *(uint64_t **)(v0 + 688);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(unsigned __int16 *)(v0 + 514);
  swift_release(*(_QWORD *)(v0 + 1184));
  sub_1000D44DC(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000B4220, 0, 0);
}

uint64_t sub_1000B4220()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t WitnessTable;

  sub_10000E750(v0[86], type metadata accessor for Actions.MetricsReportingContext);
  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[121];
  v2 = v0[106];
  v3 = v0[79];
  v4 = v0[73];
  v5 = sub_1001C40D8(v3, v3);
  v6 = swift_allocObject(v5, ((*(unsigned __int8 *)(v2 + 80) + (unint64_t)*(unsigned int *)(v5 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72), *(unsigned __int8 *)(v2 + 80) | (unint64_t)*(unsigned __int16 *)(v5 + 52));
  v7 = static Array._adoptStorage(_:count:)(v6, 1);
  v1(v8, v4, v3);
  v9 = sub_1000D0CFC(v7);
  v0[149] = v9;
  v0[70] = v9;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  v0[150] = v10;
  v11 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v11);
  *v10 = v0;
  v10[1] = sub_1000B4338;
  return MusicLibrary.add<A, B>(_:)(v0 + 70, v11, v0[79], WitnessTable, v0[80]);
}

uint64_t sub_1000B4338(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 1200);
  *(_QWORD *)(*v2 + 1208) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 1192));
    v6 = sub_1000B43C4;
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 1192);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v7);
    v6 = sub_1000B5A8C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1000B43C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v11 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  sub_100011694(v1, &qword_10054CE40);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B4538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v23 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v23 + 56) & ~v23;
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(_QWORD *)(v0 + v4));
  v10 = v0 + v5;
  if (*(_QWORD *)(v0 + v5 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v5);
    v11 = *(unsigned __int8 *)(v10 + 48);
    if (v11 != 255)
      sub_1000B4784(*(id *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), v11);
    if (*(_QWORD *)(v10 + 56))
      swift_release(*(_QWORD *)(v10 + 64));
  }
  v12 = (v9 + v7 + 40) & ~v9;
  sub_100011758((_QWORD *)(v0 + v6));
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_100011758((_QWORD *)(v0 + v7));
  v13 = v0 + v12;
  v14 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v0 + v12, 1, v14))
  {
    v15 = *(_QWORD *)(v13 + 8);
    if (v15 >= 0xA)
      swift_bridgeObjectRelease(v15);
    v16 = v13 + v14[5];
    v17 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v17 - 1) + 48))(v16, 1, v17))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 24));
      v18 = v16 + v17[6];
      v19 = type metadata accessor for URL(0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[8]));
  }
  return swift_deallocObject(v0, v12 + v22, v23 | v9 | 7);
}

void sub_1000B4784(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease(a1);
  }
  else if (a6 <= 1u)
  {

  }
}

uint64_t sub_1000B47A8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000B47C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0[2] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8) + 80);
  v9 = v8 + v7 + 40;
  v10 = v0[5];
  v11 = v0[6];
  v12 = (uint64_t)v0 + v3;
  v13 = *(_QWORD *)((char *)v0 + v4);
  v14 = (uint64_t)v0 + v5;
  v15 = (uint64_t)v0 + v6;
  v16 = (uint64_t)v0 + v7;
  v17 = (uint64_t)v0 + (v9 & ~v8);
  v18 = (_QWORD *)swift_task_alloc(dword_10054CD8C);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_10000DC64;
  return sub_1000B18D4(v10, v11, v12, v13, v14, v15, v16, v17);
}

BOOL sub_1000B48D8(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  size_t *v25;
  size_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v35;
  char *v36;
  size_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a3;
  v38 = a2;
  v4 = sub_10000B4C8(&qword_10054CE40);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for MusicLibrary.AddAction(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_10054CDC8);
  v39 = *(_QWORD *)(v17 - 8);
  v40 = v17;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.add.getter(v18);
  v21 = type metadata accessor for Track(0);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v16, v21, v13, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011694((uint64_t)v6, &qword_10054CE40);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v22(v12, v6, v7);
    v23 = v36;
    v24 = v7;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v36, v12, v7);
    v25 = v37;
    v26 = *v37;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v37);
    *v25 = v26;
    v28 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v26 = sub_1000DEAC4(0, *(_QWORD *)(v26 + 16) + 1, 1, (char *)v26);
      *v25 = v26;
    }
    v30 = *(_QWORD *)(v26 + 16);
    v29 = *(_QWORD *)(v26 + 24);
    if (v30 >= v29 >> 1)
    {
      v26 = sub_1000DEAC4(v29 > 1, v30 + 1, 1, (char *)v26);
      *v37 = v26;
    }
    *(_QWORD *)(v26 + 16) = v30 + 1;
    v22((char *)(v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30), v28, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v24);
  }
  v31 = sub_1000B1460();
  v33 = v32 == 1;
  sub_1000B5000(v31, v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  return v33;
}

uint64_t MusicLibrary.SupportedStatus<>.unaddableReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_10000B4C8(&qword_10054CDC8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v14, v7, v8);
    v15(v12, v14, v8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v12, v8) == enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      v16 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
      v17 = *(_QWORD *)(v16 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v12, v16);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
}

uint64_t sub_1000B4DBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000B4E28, v4, v5);
}

uint64_t sub_1000B4E28()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 40) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_1000B04CC();
    v5(v0 + 40, &type metadata for ActionType, v6, ObjectType, v3);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1000B4EAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B4ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10054CDAC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DC64;
  return sub_1000B4DBC(v2, v3);
}

uint64_t sub_1000B4F20(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100075040;
  return v4();
}

uint64_t sub_1000B4F78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B4F9C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10054CDBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return ((uint64_t (*)(int *))((char *)&dword_10054CDB8 + dword_10054CDB8))(v2);
}

uint64_t sub_1000B5000(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t Actions.AddToLibrary.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x4C206F7420646441, 0xEE00797261726269);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.AddToLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FEF20, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1004FEF48, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_1000B020C;
}

uint64_t (*sub_1000B5200())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FF0D8, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1004FF100, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_1000B0870;
}

void NSDirectionalEdgeInsets.Edge.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int MPCPlaybackEngine.Option.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

uint64_t sub_1000B52E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000B5308()
{
  unint64_t result;

  result = qword_10054CE20;
  if (!qword_10054CE20)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for Album.ChildrenAddStatus, &type metadata for Album.ChildrenAddStatus);
    atomic_store(result, (unint64_t *)&qword_10054CE20);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary()
{
  return &type metadata for Actions.AddToLibrary;
}

uint64_t _s12AddToLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t _s12AddToLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *_s12AddToLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12AddToLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary.Context()
{
  return &type metadata for Actions.AddToLibrary.Context;
}

_BYTE *initializeBufferWithCopyOfBuffer for ActionType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s17ChildrenAddStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000B55B8 + 4 * byte_10042A665[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000B55EC + 4 * asc_10042A660[v4]))();
}

uint64_t sub_1000B55EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B55F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B55FCLL);
  return result;
}

uint64_t sub_1000B5608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B5610);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000B5614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B561C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Album.ChildrenAddStatus()
{
  return &type metadata for Album.ChildrenAddStatus;
}

BOOL sub_1000B5640(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  uint64_t v47;

  v42 = a2;
  v43 = a3;
  v4 = type metadata accessor for Track(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v39 = (char *)&v34 - v8;
  v9 = sub_10000B4C8(&qword_10054CDE0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054CDD0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v10;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36(v12, a1, v9);
  v16 = sub_1000B5A48(&qword_10054CE50, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  v37 = v12;
  dispatch thunk of Sequence.makeIterator()(v9, v16);
  v17 = &v15[*(int *)(v13 + 36)];
  v18 = sub_1000B5A48((unint64_t *)&qword_10054CDE8, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  v35 = v15;
  v19 = v39;
  while (1)
  {
    v20 = *(_QWORD *)v17;
    dispatch thunk of Collection.endIndex.getter(v9, v18);
    v44 = v46[0];
    v45 = v20;
    if (v20 == v46[0])
    {
LABEL_5:
      v32 = (uint64_t)v15;
      goto LABEL_7;
    }
    v21 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v46, v17, v9, v18);
    v22 = v40;
    v23 = v9;
    v24 = v17;
    v25 = v15;
    v26 = v41;
    (*(void (**)(char *))(v40 + 16))(v19);
    v21(v46, 0);
    v27 = v37;
    v28 = v25;
    v17 = v24;
    v9 = v23;
    v36(v37, (uint64_t)v28, v23);
    dispatch thunk of Collection.formIndex(after:)(v17, v23, v18);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v23);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v19, v26);
    v29 = v47;
    v30 = sub_1000B48D8((uint64_t)v7, v42, v43);
    v47 = v29;
    if (v29)
      break;
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v26);
    v15 = v35;
    if (v31)
      goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v26);
  v32 = (uint64_t)v35;
LABEL_7:
  sub_100011694(v32, &qword_10054CDD0);
  return v45 != v44;
}

uint64_t sub_1000B5908(uint64_t a1)
{
  destroy for SubscriptionUpsellPresenter.Placement(a1);
  return a1;
}

_QWORD *sub_1000B593C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  return a1;
}

uint64_t sub_1000B598C(unint64_t *a1, const char *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B59CC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for PresentationSource(a2, a1);
  return a2;
}

double sub_1000B5A08(uint64_t a1)
{
  uint64_t v1;

  return sub_10019CE40(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1000B5A14(uint64_t a1)
{
  destroy for PresentationSource(a1);
  return a1;
}

uint64_t sub_1000B5A48(unint64_t *a1, const char *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100011650(&qword_10054CDE0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Actions.AddToPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 2;
  *(_QWORD *)(a2 + 56) = sub_1000B0910;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10054CE58;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10054CE60;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t (*Actions.AddToPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FF180, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_1004FF1A8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_1000B020C;
}

uint64_t (*sub_1000B5BBC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FF2A8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_1004FF2D0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_1000B0870;
}

double Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v14;
  double result;
  _OWORD v16[2];
  __int128 v17;

  sub_1000BA87C(a1, a2, a3, a4, a5, a6, a7, a8, (unint64_t (**)())v16, a10, a11, a12);
  swift_release(a2);
  v14 = v16[1];
  *a9 = v16[0];
  a9[1] = v14;
  result = *(double *)&v17;
  a9[2] = v17;
  return result;
}

unint64_t sub_1000B5CA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  int v45;
  int v46;
  void (*v47)(char *, uint64_t);
  int v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v57 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v55 = *(_QWORD *)(v57 - 8);
  v2 = __chkstk_darwin(v57);
  v56 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v54 = (char *)&v51 - v4;
  v5 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v51 - v10;
  v12 = sub_10000B4C8(&qword_10054CDC8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v52 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v53 = (char *)&v51 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v51 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21 = a1;
  v20((char *)&v51 - v18, a1, v12);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v19, v12);
  if (v22 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v22 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      if (qword_10054B9D0 != -1)
        swift_once(&qword_10054B9D0, sub_100127138);
      v32 = type metadata accessor for Logger(0);
      sub_10000D78C(v32, (uint64_t)static Logger.actions);
      v33 = v53;
      v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v53, v21, v12);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.fault.getter(v35);
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v58 = v38;
        *(_DWORD *)v37 = 136315138;
        v39 = v52;
        v20(v52, (uint64_t)v33, v12);
        v40 = (char *)String.init<A>(describing:)(v39, v12);
        v41 = v33;
        v43 = v42;
        *(_QWORD *)(v37 + 4) = sub_1000BA30C(v40, v42, &v58);
        swift_bridgeObjectRelease(v43);
        v44 = *(void (**)(char *, uint64_t))(v13 + 8);
        v44(v41, v12);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Unknown status=%s", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);
      }
      else
      {
        v44 = *(void (**)(char *, uint64_t))(v13 + 8);
        v44(v33, v12);
      }

      v31 = 0x206E776F6E6B6E55;
      v44(v19, v12);
      return v31;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v19, v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v19, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v23 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
  {
    v45 = v23;
    if (v23 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
    {
      v31 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v31;
    }
    if (v23 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      goto LABEL_27;
    v46 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
    v47 = *(void (**)(char *, uint64_t))(v6 + 8);
    v47(v11, v5);
    if (v45 != v46)
    {
      v31 = 0x206E776F6E6B6E55;
      v47(v9, v5);
      return v31;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
  v25 = v54;
  v24 = v55;
  v26 = v9;
  v27 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v26, v57);
  v28 = v56;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v56, v25, v27);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v28, v27);
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
    goto LABEL_26;
  v30 = v29;
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
    goto LABEL_26;
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001CLL;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001ELL;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000014;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000025;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
  {
LABEL_26:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000016;
  }
  else
  {
    v31 = 0x206E776F6E6B6E55;
    v49 = enum case for MusicLibrary.AddStatus.UnaddableReason.unknown(_:);
    v50 = *(void (**)(char *, uint64_t))(v24 + 8);
    v50(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    if (v30 != v49)
      v50(v28, v27);
  }
  return v31;
}

uint64_t sub_1000B63A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[48] = v17;
  v8[49] = v18;
  v8[46] = a7;
  v8[47] = a8;
  v8[44] = a5;
  v8[45] = a6;
  v8[42] = a3;
  v8[43] = a4;
  v8[40] = a1;
  v8[41] = a2;
  v9 = sub_10000B4C8(&qword_10054CDD8);
  v8[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10054CDE0);
  v8[51] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[52] = v11;
  v8[53] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054CE40);
  v8[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[55] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[56] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[57] = swift_task_alloc(v15);
  v8[58] = swift_task_alloc(v15);
  v8[59] = swift_task_alloc(v15);
  return swift_task_switch(sub_1000B64A8, 0, 0);
}

uint64_t sub_1000B64A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 432);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 432), &qword_10054CE40);
    v4 = (_QWORD *)swift_task_alloc(dword_10054CE6C);
    *(_QWORD *)(v0 + 480) = v4;
    *v4 = v0;
    v4[1] = sub_1000B698C;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 360));
  }
  v6 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 448);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, *(_QWORD *)(v0 + 432), v8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v10(v6, v7, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v6, v8);
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
  {
    v12 = *(_QWORD **)(v0 + 328);
    v13 = v12[3];
    *(_QWORD *)(v0 + 488) = v13;
    *(_QWORD *)(v0 + 496) = v12[4];
    *(_QWORD *)(v0 + 504) = sub_10000D900(v12, v13);
    v14 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v14);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
    v17 = v16;
    v18 = sub_1000B6AD0;
    return swift_task_switch(v18, v15, v17);
  }
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
  {
    sub_100011370(*(_QWORD *)(v0 + 336), v0 + 88, &qword_10054CD90);
    if (*(_QWORD *)(v0 + 144) == 1)
    {
      v19 = *(_QWORD **)(v0 + 328);
      sub_100011694(v0 + 88, &qword_10054CD90);
      v20 = v19[3];
      *(_QWORD *)(v0 + 528) = v20;
      *(_QWORD *)(v0 + 536) = v19[4];
      *(_QWORD *)(v0 + 544) = sub_10000D900(v19, v20);
      v21 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 552) = static MainActor.shared.getter(v21);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
      v17 = v22;
      v18 = sub_1000B6C38;
      return swift_task_switch(v18, v15, v17);
    }
    sub_1000B59CC(v0 + 88, v0 + 16);
    v26 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 568) = v26;
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v26);
    v27 = dispatch thunk of Actor.unownedExecutor.getter(v26, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 584) = v27;
    *(_QWORD *)(v0 + 592) = v28;
    return swift_task_switch(sub_1000B6D1C, v27, v28);
  }
  else
  {
    if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v23 = *(_QWORD *)(v0 + 472);
      v24 = *(_QWORD *)(v0 + 440);
      v25 = *(_QWORD *)(v0 + 448);
      *(_OWORD *)(v0 + 272) = 0u;
      *(_OWORD *)(v0 + 288) = 0u;
      *(_QWORD *)(v0 + 304) = 0;
      *(_BYTE *)(v0 + 312) = -2;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 272);
      sub_1000B5908(v0 + 272);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    else
    {
      if (qword_10054B9D0 != -1)
        swift_once(&qword_10054B9D0, sub_100127138);
      v29 = *(_QWORD *)(v0 + 472);
      v30 = *(_QWORD *)(v0 + 456);
      v31 = *(_QWORD *)(v0 + 440);
      v32 = type metadata accessor for Logger(0);
      sub_10000D78C(v32, (uint64_t)static Logger.actions);
      v33 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v30, v29, v31);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.fault.getter(v34);
      v36 = os_log_type_enabled(v34, v35);
      v37 = *(_QWORD *)(v0 + 472);
      v39 = *(_QWORD *)(v0 + 448);
      v38 = *(_QWORD *)(v0 + 456);
      v40 = *(_QWORD *)(v0 + 440);
      if (v36)
      {
        v41 = swift_slowAlloc(12, -1);
        v42 = swift_slowAlloc(32, -1);
        v53 = v42;
        *(_DWORD *)v41 = 136315138;
        v43 = sub_10001254C(&qword_10054CE28, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v44 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v40, v43);
        v46 = v45;
        *(_QWORD *)(v41 + 4) = sub_1000BA30C(v44, v45, &v53);
        swift_bridgeObjectRelease(v46);
        v47 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v47(v38, v40);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Unhandled unaddableReason=%s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v41, -1, -1);

      }
      else
      {

        v47 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v47(v38, v40);
      }
      v47(v37, v40);
      v47(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    }
    v48 = *(_QWORD *)(v0 + 464);
    v49 = *(_QWORD *)(v0 + 456);
    v51 = *(_QWORD *)(v0 + 424);
    v50 = *(_QWORD *)(v0 + 432);
    v52 = *(_QWORD *)(v0 + 400);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000B698C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  return swift_task_switch(sub_1000B69E0, 0, 0);
}

uint64_t sub_1000B69E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int *v8;

  v1 = v0[51];
  v2 = v0[52];
  v3 = v0[50];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v4, &protocol witness table for Track);
    sub_100011694(v3, &qword_10054CDD8);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[53], v3, v1);
  }
  v5 = *(int **)(v0[49] + 8);
  v8 = (int *)((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc(v5[1]);
  v0[78] = v6;
  *v6 = v0;
  v6[1] = sub_1000B6F24;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v8)(v0[53], v0[43], v0[45], v0[47], v0[48], v0[46], v0[49]);
}

uint64_t sub_1000B6AD0()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[62];
  swift_release(v0[64]);
  sub_10017E3C8(0, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[65] = v3;
  *v3 = v0;
  v3[1] = sub_1000B6B50;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[61], v0[62]);
}

uint64_t sub_1000B6B50()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  sub_1000B593C(v1);
  return swift_task_switch(sub_1000B6BB0, 0, 0);
}

uint64_t sub_1000B6BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B6C38()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release(v0[69]);
  sub_10017E1D4(2, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_1000B6CBC;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[66], v0[67]);
}

uint64_t sub_1000B6CBC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_1000B593C(v1);
  return swift_task_switch(sub_1000BB1F8, 0, 0);
}

uint64_t sub_1000B6D1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_1000B6DE0;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 313, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001004468B0, sub_1000B5A08, v3, &type metadata for Bool);
}

uint64_t sub_1000B6DE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  v3 = *(_QWORD *)(*v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000B6E50, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_1000B6E50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 576));
  return swift_task_switch(sub_1000B6E8C, 0, 0);
}

uint64_t sub_1000B6E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  sub_1000B5A14(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B6F24()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 624));
  return swift_task_switch(sub_1000B6F78, 0, 0);
}

uint64_t sub_1000B6F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 8))(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 408));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MusicPlaylistAddable.tracks.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v5 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v7);
  v3[9] = swift_task_alloc(v7);
  v8 = sub_10000B4C8(&qword_10054CE70);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Entry(0);
  v3[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[12] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v11);
  v3[14] = swift_task_alloc(v11);
  v12 = sub_10000B4C8(&qword_10054CE78);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Track(0);
  v3[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[17] = v14;
  v3[18] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054CE80);
  v3[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicVideo(0);
  v3[20] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[21] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v18);
  v3[23] = swift_task_alloc(v18);
  v19 = sub_10000B4C8(&qword_10054CE88);
  v3[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Song(0);
  v3[25] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[26] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[27] = swift_task_alloc(v22);
  v3[28] = swift_task_alloc(v22);
  v23 = sub_10000B4C8(&qword_10054CDE0);
  v3[29] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[30] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[31] = swift_task_alloc(v25);
  v3[32] = swift_task_alloc(v25);
  v26 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CDD8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v26);
  v3[34] = swift_task_alloc(v26);
  v3[35] = swift_task_alloc(v26);
  v27 = sub_10000B4C8(&qword_1005506A0);
  v3[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Playlist(0);
  v3[37] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[38] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[39] = swift_task_alloc(v30);
  v3[40] = swift_task_alloc(v30);
  v3[41] = swift_task_alloc(v30);
  v31 = sub_10000B4C8(&qword_10054CE38);
  v3[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(a2 - 8);
  v3[43] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[44] = swift_task_alloc(v33);
  v3[45] = swift_task_alloc(v33);
  v3[46] = swift_task_alloc(v33);
  v3[47] = swift_task_alloc(v33);
  v3[48] = swift_task_alloc(v33);
  v3[49] = swift_task_alloc(v33);
  v3[50] = swift_task_alloc(v33);
  v3[51] = swift_task_alloc(v33);
  v34 = type metadata accessor for Album(0);
  v3[52] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v3[53] = v35;
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[54] = swift_task_alloc(v36);
  v3[55] = swift_task_alloc(v36);
  return swift_task_switch(sub_1000B738C, 0, 0);
}

uint64_t sub_1000B738C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  _BOOL4 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  void (*v167)(uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 344) + 16);
  *(_QWORD *)(v0 + 448) = v7;
  v7(v3, v5, v6);
  v8 = swift_dynamicCast(v4, v3, v6, v1, 6);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 416);
    v12 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 336);
    v9(v13, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v13, v11);
    v14 = sub_10000B4C8((uint64_t *)&unk_100550D50);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100424B90;
    sub_10000B4C8(&qword_10054CEB0);
    v16 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v204 = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v0 + 456) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v0 + 464) = v18;
    v19 = sub_10001254C(&qword_10054CEB8, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    *v18 = v0;
    v18[1] = sub_1000B8078;
    return MusicItem<>.with(_:)(*(_QWORD *)(v0 + 432), v17, *(_QWORD *)(v0 + 416), &protocol witness table for Album, &protocol witness table for Album, v19);
  }
  v21 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 336);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  v27 = *(_QWORD *)(v0 + 32);
  v26 = *(_QWORD *)(v0 + 40);
  v9(v22, 1, 1, *(_QWORD *)(v0 + 416));
  sub_100011694(v22, &qword_10054CE38);
  v7(v21, v26, v27);
  v28 = swift_dynamicCast(v25, v21, v27, v23, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v28)
  {
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_QWORD *)(v0 + 288);
    v29(v33, 0, 1, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v33, v31);
    v34 = sub_10000B4C8((uint64_t *)&unk_100550D50);
    *(_QWORD *)(v0 + 480) = v34;
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100424B90;
    *(_QWORD *)(v0 + 488) = sub_10000B4C8(&qword_10054CEA0);
    v36 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v35 + 32) = v36;
    v204 = v35;
    specialized Array._endMutation()(v36);
    *(_QWORD *)(v0 + 496) = v35;
    v37 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 504) = v37;
    *v37 = v0;
    v37[1] = sub_1000B82FC;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 320), v35, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
  }
  v38 = *(_QWORD *)(v0 + 392);
  v39 = *(_QWORD *)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 32);
  v43 = *(_QWORD *)(v0 + 40);
  v29(v39, 1, 1, *(_QWORD *)(v0 + 296));
  sub_100011694(v39, &qword_1005506A0);
  v7(v38, v43, v44);
  v45 = swift_dynamicCast(v42, v38, v44, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if (v45)
  {
    v47 = *(_QWORD *)(v0 + 240);
    v201 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 224);
    v49 = *(_QWORD *)(v0 + 200);
    v50 = *(_QWORD *)(v0 + 208);
    v51 = *(_QWORD *)(v0 + 192);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v46(v51, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v51, v49);
    v55 = sub_10000B4C8(&qword_10054CE98);
    v56 = *(unsigned __int8 *)(v52 + 80);
    v57 = (v56 + 32) & ~v56;
    v58 = swift_allocObject(v55, v57 + *(_QWORD *)(v52 + 72), v56 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_100424BB0;
    v59 = v58 + v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.song(_:);
  }
  else
  {
    v61 = *(_QWORD *)(v0 + 384);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 168);
    v65 = *(_QWORD *)(v0 + 152);
    v67 = *(_QWORD *)(v0 + 32);
    v66 = *(_QWORD *)(v0 + 40);
    v46(v62, 1, 1, *(_QWORD *)(v0 + 200));
    sub_100011694(v62, &qword_10054CE88);
    v7(v61, v66, v67);
    v68 = swift_dynamicCast(v65, v61, v67, v63, 6);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    if (!v68)
    {
      v87 = *(_QWORD *)(v0 + 376);
      v88 = *(_QWORD *)(v0 + 152);
      v89 = *(_QWORD *)(v0 + 128);
      v90 = *(_QWORD *)(v0 + 136);
      v91 = *(_QWORD *)(v0 + 120);
      v93 = *(_QWORD *)(v0 + 32);
      v92 = *(_QWORD *)(v0 + 40);
      v69(v88, 1, 1, *(_QWORD *)(v0 + 160));
      sub_100011694(v88, &qword_10054CE80);
      v7(v87, v92, v93);
      v94 = swift_dynamicCast(v91, v87, v93, v89, 6);
      v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
      if (v94)
      {
        v96 = *(_QWORD *)(v0 + 232);
        v97 = *(_QWORD *)(v0 + 240);
        v99 = *(_QWORD *)(v0 + 136);
        v98 = *(_QWORD *)(v0 + 144);
        v101 = *(_QWORD *)(v0 + 120);
        v100 = *(_QWORD *)(v0 + 128);
        v102 = *(_QWORD *)(v0 + 24);
        v95(v101, 0, 1, v100);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v98, v101, v100);
        v103 = sub_10000B4C8(&qword_10054CE98);
        v104 = *(unsigned __int8 *)(v99 + 80);
        v105 = (v104 + 32) & ~v104;
        v106 = swift_allocObject(v103, v105 + *(_QWORD *)(v99 + 72), v104 | 7);
        *(_OWORD *)(v106 + 16) = xmmword_100424BB0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v106 + v105, v98, v100);
        MusicItemCollection.init(arrayLiteral:)(v106, v100, &protocol witness table for Track);
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56);
        v75 = v102;
        v76 = 0;
      }
      else
      {
        v107 = *(_QWORD *)(v0 + 368);
        v108 = *(_QWORD *)(v0 + 120);
        v109 = *(_QWORD *)(v0 + 88);
        v110 = *(_QWORD *)(v0 + 96);
        v111 = *(_QWORD *)(v0 + 80);
        v113 = *(_QWORD *)(v0 + 32);
        v112 = *(_QWORD *)(v0 + 40);
        v95(v108, 1, 1, *(_QWORD *)(v0 + 128));
        sub_100011694(v108, &qword_10054CE78);
        v7(v107, v112, v113);
        v114 = swift_dynamicCast(v111, v107, v113, v109, 6);
        v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
        if (v114)
        {
          v116 = *(_QWORD *)(v0 + 112);
          v117 = *(_QWORD *)(v0 + 88);
          v118 = *(_QWORD *)(v0 + 96);
          v120 = *(_QWORD *)(v0 + 72);
          v119 = *(_QWORD *)(v0 + 80);
          v121 = *(_QWORD *)(v0 + 48);
          v122 = *(_QWORD *)(v0 + 56);
          v115(v119, 0, 1, v117);
          v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 32))(v116, v119, v117);
          Playlist.Entry.internalItem.getter(v123);
          v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 88))(v120, v121);
          if (v124 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
          {
            v199 = *(_QWORD *)(v0 + 240);
            v201 = *(_QWORD *)(v0 + 232);
            v125 = *(_QWORD *)(v0 + 168);
            v126 = *(_QWORD *)(v0 + 176);
            v127 = *(_QWORD *)(v0 + 160);
            v129 = *(_QWORD *)(v0 + 128);
            v128 = *(_QWORD *)(v0 + 136);
            v130 = *(_QWORD *)(v0 + 96);
            v193 = *(_QWORD *)(v0 + 88);
            v196 = *(_QWORD *)(v0 + 112);
            v131 = *(_QWORD *)(v0 + 72);
            v132 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v131, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v126, v131, v127);
            v133 = sub_10000B4C8(&qword_10054CE98);
            v134 = *(unsigned __int8 *)(v128 + 80);
            v135 = (v134 + 32) & ~v134;
            v136 = swift_allocObject(v133, v135 + *(_QWORD *)(v128 + 72), v134 | 7);
            *(_OWORD *)(v136 + 16) = xmmword_100424BB0;
            v137 = v136 + v135;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v137, v126, v127);
            v138 = (unsigned int *)&enum case for Track.musicVideo(_:);
          }
          else
          {
            if (v124 != enum case for Playlist.Entry.InternalItem.song(_:))
            {
              if (qword_10054B9D0 != -1)
                swift_once(&qword_10054B9D0, sub_100127138);
              v146 = *(_QWORD *)(v0 + 104);
              v147 = *(_QWORD *)(v0 + 112);
              v148 = *(_QWORD *)(v0 + 88);
              v149 = *(_QWORD *)(v0 + 96);
              v150 = type metadata accessor for Logger(0);
              sub_10000D78C(v150, (uint64_t)static Logger.actions);
              v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v146, v147, v148);
              v152 = Logger.logObject.getter(v151);
              v153 = static os_log_type_t.fault.getter(v152);
              v154 = os_log_type_enabled(v152, v153);
              v156 = *(_QWORD *)(v0 + 104);
              v155 = *(_QWORD *)(v0 + 112);
              v158 = *(_QWORD *)(v0 + 88);
              v157 = *(_QWORD *)(v0 + 96);
              if (v154)
              {
                v159 = *(_QWORD *)(v0 + 64);
                v197 = *(_QWORD *)(v0 + 56);
                v203 = *(_QWORD *)(v0 + 112);
                v160 = *(_QWORD *)(v0 + 48);
                v161 = swift_slowAlloc(12, -1);
                v200 = swift_slowAlloc(32, -1);
                v204 = v200;
                *(_DWORD *)v161 = 136315138;
                v194 = v157;
                Playlist.Entry.internalItem.getter(v200);
                v162 = sub_10001254C(&qword_10054CE90, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
                v163 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v160, v162);
                v164 = v158;
                v166 = v165;
                (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v159, v160);
                *(_QWORD *)(v161 + 4) = sub_1000BA30C(v163, v166, &v204);
                swift_bridgeObjectRelease(v166);
                v167 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
                v167(v156, v164);
                _os_log_impl((void *)&_mh_execute_header, v152, v153, "Unsupported Playlist.Entry.InternalItem=%s", (uint8_t *)v161, 0xCu);
                swift_arrayDestroy(v200, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v200, -1, -1);
                swift_slowDealloc(v161, -1, -1);

                v168 = v203;
                v169 = v164;
              }
              else
              {

                v167 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
                v167(v156, v158);
                v168 = v155;
                v169 = v158;
              }
              v167(v168, v169);
              v170 = *(_QWORD *)(v0 + 72);
              v171 = *(_QWORD *)(v0 + 48);
              v172 = *(_QWORD *)(v0 + 56);
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
              (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v170, v171);
              goto LABEL_12;
            }
            v199 = *(_QWORD *)(v0 + 240);
            v201 = *(_QWORD *)(v0 + 232);
            v125 = *(_QWORD *)(v0 + 208);
            v126 = *(_QWORD *)(v0 + 216);
            v127 = *(_QWORD *)(v0 + 200);
            v129 = *(_QWORD *)(v0 + 128);
            v128 = *(_QWORD *)(v0 + 136);
            v130 = *(_QWORD *)(v0 + 96);
            v193 = *(_QWORD *)(v0 + 88);
            v196 = *(_QWORD *)(v0 + 112);
            v142 = *(_QWORD *)(v0 + 72);
            v132 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v142, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v126, v142, v127);
            v143 = sub_10000B4C8(&qword_10054CE98);
            v144 = *(unsigned __int8 *)(v128 + 80);
            v145 = (v144 + 32) & ~v144;
            v136 = swift_allocObject(v143, v145 + *(_QWORD *)(v128 + 72), v144 | 7);
            *(_OWORD *)(v136 + 16) = xmmword_100424BB0;
            v137 = v136 + v145;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v137, v126, v127);
            v138 = (unsigned int *)&enum case for Track.song(_:);
          }
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v128 + 104))(v137, *v138, v129);
          MusicItemCollection.init(arrayLiteral:)(v136, v129, &protocol witness table for Track);
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v127);
          (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v196, v193);
          v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v199 + 56);
          v75 = v132;
          goto LABEL_10;
        }
        v96 = *(_QWORD *)(v0 + 232);
        v139 = *(_QWORD *)(v0 + 240);
        v140 = *(_QWORD *)(v0 + 80);
        v141 = *(_QWORD *)(v0 + 24);
        v115(v140, 1, 1, *(_QWORD *)(v0 + 88));
        sub_100011694(v140, &qword_10054CE70);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56);
        v75 = v141;
        v76 = 1;
      }
      v77 = v96;
      goto LABEL_11;
    }
    v47 = *(_QWORD *)(v0 + 240);
    v201 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 184);
    v49 = *(_QWORD *)(v0 + 160);
    v50 = *(_QWORD *)(v0 + 168);
    v70 = *(_QWORD *)(v0 + 152);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v69(v70, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v70, v49);
    v71 = sub_10000B4C8(&qword_10054CE98);
    v72 = *(unsigned __int8 *)(v52 + 80);
    v73 = (v72 + 32) & ~v72;
    v58 = swift_allocObject(v71, v73 + *(_QWORD *)(v52 + 72), v72 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_100424BB0;
    v59 = v58 + v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.musicVideo(_:);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v59, *v60, v53);
  MusicItemCollection.init(arrayLiteral:)(v58, v53, &protocol witness table for Track);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v75 = v54;
LABEL_10:
  v76 = 0;
  v77 = v201;
LABEL_11:
  v74(v75, v76, 1, v77);
LABEL_12:
  v78 = *(_QWORD *)(v0 + 432);
  v80 = *(_QWORD *)(v0 + 400);
  v79 = *(_QWORD *)(v0 + 408);
  v81 = *(_QWORD *)(v0 + 384);
  v82 = *(_QWORD *)(v0 + 392);
  v84 = *(_QWORD *)(v0 + 368);
  v83 = *(_QWORD *)(v0 + 376);
  v86 = *(_QWORD *)(v0 + 352);
  v85 = *(_QWORD *)(v0 + 360);
  v173 = *(_QWORD *)(v0 + 336);
  v174 = *(_QWORD *)(v0 + 328);
  v175 = *(_QWORD *)(v0 + 320);
  v176 = *(_QWORD *)(v0 + 312);
  v177 = *(_QWORD *)(v0 + 288);
  v178 = *(_QWORD *)(v0 + 280);
  v179 = *(_QWORD *)(v0 + 272);
  v180 = *(_QWORD *)(v0 + 264);
  v181 = *(_QWORD *)(v0 + 256);
  v182 = *(_QWORD *)(v0 + 248);
  v183 = *(_QWORD *)(v0 + 224);
  v184 = *(_QWORD *)(v0 + 216);
  v185 = *(_QWORD *)(v0 + 192);
  v186 = *(_QWORD *)(v0 + 184);
  v187 = *(_QWORD *)(v0 + 176);
  v188 = *(_QWORD *)(v0 + 152);
  v189 = *(_QWORD *)(v0 + 144);
  v190 = *(_QWORD *)(v0 + 120);
  v191 = *(_QWORD *)(v0 + 112);
  v192 = *(_QWORD *)(v0 + 104);
  v195 = *(_QWORD *)(v0 + 80);
  v198 = *(_QWORD *)(v0 + 72);
  v202 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v173);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v187);
  swift_task_dealloc(v188);
  swift_task_dealloc(v189);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v192);
  swift_task_dealloc(v195);
  swift_task_dealloc(v198);
  swift_task_dealloc(v202);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B8078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1000B969C;
  else
    v4 = sub_1000B80E4;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000B80E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 424);
  Album.tracks.getter();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 376);
  v14 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 360);
  v16 = *(_QWORD *)(v0 + 336);
  v17 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v36 = *(_QWORD *)(v0 + 80);
  v37 = *(_QWORD *)(v0 + 72);
  v38 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B82FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1000B86A8;
  else
    v4 = sub_1000B8368;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000B8368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  ((void (*)(void))Playlist.tracks.getter)();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 520) = v4;
  v5 = v4(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 280);
  if (v5 == 1)
  {
    v7 = sub_100011694(*(_QWORD *)(v0 + 280), &qword_10054CDD8);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 240);
    v10 = MusicItemCollection.hasNextBatch.getter(v8);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    *(_QWORD *)(v0 + 528) = v11;
    v7 = v11(v6, v8);
    if ((v10 & 1) != 0)
    {
      v12 = swift_allocObject(*(_QWORD *)(v0 + 480), 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100424B90;
      v13 = static PartialMusicProperty<A>.tracks.getter();
      v14 = MusicRelationshipProperty.limit(_:)(10000);
      swift_release(v13);
      *(_QWORD *)(v12 + 32) = v14;
      specialized Array._endMutation()(v15);
      *(_QWORD *)(v0 + 536) = v12;
      v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
      *(_QWORD *)(v0 + 544) = v16;
      *v16 = v0;
      v16[1] = sub_1000B8AD8;
      return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 312), v12, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
    }
  }
  v19 = *(_QWORD *)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 328);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  Playlist.tracks.getter(v7);
  v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v22(v19, v20);
  v22(v18, v20);
  v23 = *(_QWORD *)(v0 + 432);
  v25 = *(_QWORD *)(v0 + 400);
  v24 = *(_QWORD *)(v0 + 408);
  v26 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 368);
  v28 = *(_QWORD *)(v0 + 376);
  v31 = *(_QWORD *)(v0 + 352);
  v30 = *(_QWORD *)(v0 + 360);
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 320);
  v35 = *(_QWORD *)(v0 + 312);
  v36 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 256);
  v41 = *(_QWORD *)(v0 + 248);
  v42 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 216);
  v44 = *(_QWORD *)(v0 + 192);
  v45 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 152);
  v48 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 120);
  v50 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 80);
  v53 = *(_QWORD *)(v0 + 72);
  v54 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B86A8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  v1 = *(_QWORD *)(v0 + 512);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v3 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_10000D78C(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v12 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 360);
    v57 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v60[0] = v15;
    *(_DWORD *)v14 = 136446466;
    v10(v12, v11, v13);
    v16 = (char *)String.init<A>(describing:)(v12, v13);
    v18 = v17;
    *(_QWORD *)(v14 + 4) = sub_1000BA30C(v16, v17, v60);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v11, v13);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v19 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v20 = (char *)String.init<A>(describing:)(v0 + 16, v19);
    v22 = v21;
    *(_QWORD *)(v14 + 14) = sub_1000BA30C(v20, v21, v60);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v26 = *(_QWORD *)(v0 + 432);
  v28 = *(_QWORD *)(v0 + 400);
  v27 = *(_QWORD *)(v0 + 408);
  v29 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 392);
  v32 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 376);
  v34 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 360);
  v36 = *(_QWORD *)(v0 + 336);
  v37 = *(_QWORD *)(v0 + 328);
  v38 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 312);
  v40 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 280);
  v42 = *(_QWORD *)(v0 + 272);
  v43 = *(_QWORD *)(v0 + 264);
  v44 = *(_QWORD *)(v0 + 256);
  v45 = *(_QWORD *)(v0 + 248);
  v46 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 176);
  v51 = *(_QWORD *)(v0 + 152);
  v52 = *(_QWORD *)(v0 + 144);
  v53 = *(_QWORD *)(v0 + 120);
  v54 = *(_QWORD *)(v0 + 112);
  v55 = *(_QWORD *)(v0 + 104);
  v56 = *(_QWORD *)(v0 + 80);
  v58 = *(_QWORD *)(v0 + 72);
  v59 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B8AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1000B8EAC;
  else
    v4 = sub_1000B8B48;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000B8B48()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 232);
  Playlist.tracks.getter();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 560) = v7;
  v7(v2, v4);
  v8 = v1(v5, 1, v6);
  v9 = *(_QWORD *)(v0 + 272);
  if (v8 == 1)
  {
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, *(_QWORD *)(v0 + 128), &protocol witness table for Track);
    sub_100011694(v9, &qword_10054CDD8);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 232));
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v10;
    v11 = sub_10001254C(&qword_10054CEA8, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v10 = v0;
    v10[1] = sub_1000B92EC;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v11);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v14 = *(_QWORD *)(v0 + 328);
    v15 = *(_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 240);
    v19 = *(_QWORD *)(v0 + 24);
    v13(*(_QWORD *)(v0 + 320), v15);
    v13(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v16, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v17);
    v20 = *(_QWORD *)(v0 + 432);
    v22 = *(_QWORD *)(v0 + 400);
    v21 = *(_QWORD *)(v0 + 408);
    v23 = *(_QWORD *)(v0 + 384);
    v24 = *(_QWORD *)(v0 + 392);
    v26 = *(_QWORD *)(v0 + 368);
    v25 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 352);
    v27 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 336);
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 320);
    v32 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 272);
    v36 = *(_QWORD *)(v0 + 264);
    v37 = *(_QWORD *)(v0 + 256);
    v38 = *(_QWORD *)(v0 + 248);
    v39 = *(_QWORD *)(v0 + 224);
    v40 = *(_QWORD *)(v0 + 216);
    v41 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 144);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = *(_QWORD *)(v0 + 112);
    v48 = *(_QWORD *)(v0 + 104);
    v49 = *(_QWORD *)(v0 + 80);
    v50 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v23);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000B8EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
  v3(*(_QWORD *)(v0 + 320), v2);
  v3(v1, v2);
  v4 = *(_QWORD *)(v0 + 552);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v9 = type metadata accessor for Logger(0);
  sub_10000D78C(v9, (uint64_t)static Logger.actions);
  v5(v6, v7, v8);
  swift_errorRetain(v4);
  v10 = swift_errorRetain(v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v15 = *(_QWORD *)(v0 + 352);
    v14 = *(_QWORD *)(v0 + 360);
    v60 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 32);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v63[0] = v18;
    *(_DWORD *)v17 = 136446466;
    v13(v15, v14, v16);
    v19 = (char *)String.init<A>(describing:)(v15, v16);
    v21 = v20;
    *(_QWORD *)(v17 + 4) = sub_1000BA30C(v19, v20, v63);
    swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v14, v16);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v4;
    swift_errorRetain(v4);
    v22 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v23 = (char *)String.init<A>(describing:)(v0 + 16, v22);
    v25 = v24;
    *(_QWORD *)(v17 + 14) = sub_1000BA30C(v23, v24, v63);
    swift_bridgeObjectRelease(v25);
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 360);
    v27 = *(_QWORD *)(v0 + 344);
    v28 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v4);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v29 = *(_QWORD *)(v0 + 432);
  v31 = *(_QWORD *)(v0 + 400);
  v30 = *(_QWORD *)(v0 + 408);
  v32 = *(_QWORD *)(v0 + 384);
  v33 = *(_QWORD *)(v0 + 392);
  v35 = *(_QWORD *)(v0 + 368);
  v34 = *(_QWORD *)(v0 + 376);
  v37 = *(_QWORD *)(v0 + 352);
  v36 = *(_QWORD *)(v0 + 360);
  v39 = *(_QWORD *)(v0 + 336);
  v40 = *(_QWORD *)(v0 + 328);
  v41 = *(_QWORD *)(v0 + 320);
  v42 = *(_QWORD *)(v0 + 312);
  v43 = *(_QWORD *)(v0 + 288);
  v44 = *(_QWORD *)(v0 + 280);
  v45 = *(_QWORD *)(v0 + 272);
  v46 = *(_QWORD *)(v0 + 264);
  v47 = *(_QWORD *)(v0 + 256);
  v48 = *(_QWORD *)(v0 + 248);
  v49 = *(_QWORD *)(v0 + 224);
  v50 = *(_QWORD *)(v0 + 216);
  v51 = *(_QWORD *)(v0 + 192);
  v52 = *(_QWORD *)(v0 + 184);
  v53 = *(_QWORD *)(v0 + 176);
  v54 = *(_QWORD *)(v0 + 152);
  v55 = *(_QWORD *)(v0 + 144);
  v56 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 112);
  v58 = *(_QWORD *)(v0 + 104);
  v59 = *(_QWORD *)(v0 + 80);
  v61 = *(_QWORD *)(v0 + 72);
  v62 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B92EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  *(_QWORD *)(*(_QWORD *)v1 + 576) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000B9ACC;
  else
    v3 = sub_1000B9350;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B9350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 520))(v1, 1, v2) == 1)
  {
    sub_100011694(v1, &qword_10054CDD8);
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    v5 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 32))(v5, v1, v2);
    static MusicItemCollection.+= infix(_:_:)(v4, v5, v6, &protocol witness table for Track);
    v3(v5, v2);
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v7;
    v8 = sub_10001254C(&qword_10054CEA8, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v7 = v0;
    v7[1] = sub_1000B92EC;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v8);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 24);
    v10(*(_QWORD *)(v0 + 320), v12);
    v10(v11, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v13, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 384);
    v21 = *(_QWORD *)(v0 + 392);
    v23 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 376);
    v25 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 360);
    v26 = *(_QWORD *)(v0 + 336);
    v27 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 320);
    v29 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 288);
    v31 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 192);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 104);
    v46 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 72);
    v48 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000B969C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
  v1 = *(_QWORD *)(v0 + 472);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v3 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_10000D78C(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v12 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 360);
    v57 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v60[0] = v15;
    *(_DWORD *)v14 = 136446466;
    v10(v12, v11, v13);
    v16 = (char *)String.init<A>(describing:)(v12, v13);
    v18 = v17;
    *(_QWORD *)(v14 + 4) = sub_1000BA30C(v16, v17, v60);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v11, v13);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v19 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v20 = (char *)String.init<A>(describing:)(v0 + 16, v19);
    v22 = v21;
    *(_QWORD *)(v14 + 14) = sub_1000BA30C(v20, v21, v60);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v26 = *(_QWORD *)(v0 + 432);
  v28 = *(_QWORD *)(v0 + 400);
  v27 = *(_QWORD *)(v0 + 408);
  v29 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 392);
  v32 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 376);
  v34 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 360);
  v36 = *(_QWORD *)(v0 + 336);
  v37 = *(_QWORD *)(v0 + 328);
  v38 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 312);
  v40 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 280);
  v42 = *(_QWORD *)(v0 + 272);
  v43 = *(_QWORD *)(v0 + 264);
  v44 = *(_QWORD *)(v0 + 256);
  v45 = *(_QWORD *)(v0 + 248);
  v46 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 176);
  v51 = *(_QWORD *)(v0 + 152);
  v52 = *(_QWORD *)(v0 + 144);
  v53 = *(_QWORD *)(v0 + 120);
  v54 = *(_QWORD *)(v0 + 112);
  v55 = *(_QWORD *)(v0 + 104);
  v56 = *(_QWORD *)(v0 + 80);
  v58 = *(_QWORD *)(v0 + 72);
  v59 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B9ACC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD))(v0 + 528))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));
  v1(v2, v4);
  v1(v3, v4);
  v5 = *(_QWORD *)(v0 + 576);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v7 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = type metadata accessor for Logger(0);
  sub_10000D78C(v10, (uint64_t)static Logger.actions);
  v6(v7, v8, v9);
  swift_errorRetain(v5);
  v11 = swift_errorRetain(v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v16 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 360);
    v61 = *(_QWORD *)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v64[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v14(v16, v15, v17);
    v20 = (char *)String.init<A>(describing:)(v16, v17);
    v22 = v21;
    *(_QWORD *)(v18 + 4) = sub_1000BA30C(v20, v21, v64);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v15, v17);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v23 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v24 = (char *)String.init<A>(describing:)(v0 + 16, v23);
    v26 = v25;
    *(_QWORD *)(v18 + 14) = sub_1000BA30C(v24, v25, v64);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v30 = *(_QWORD *)(v0 + 432);
  v32 = *(_QWORD *)(v0 + 400);
  v31 = *(_QWORD *)(v0 + 408);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 376);
  v38 = *(_QWORD *)(v0 + 352);
  v37 = *(_QWORD *)(v0 + 360);
  v40 = *(_QWORD *)(v0 + 336);
  v41 = *(_QWORD *)(v0 + 328);
  v42 = *(_QWORD *)(v0 + 320);
  v43 = *(_QWORD *)(v0 + 312);
  v44 = *(_QWORD *)(v0 + 288);
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 272);
  v47 = *(_QWORD *)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 256);
  v49 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 152);
  v56 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = *(_QWORD *)(v0 + 104);
  v60 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 72);
  v63 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000B9F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_10000B4C8(&qword_10054C950);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10054CD28);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000B9FCC, 0, 0);
}

uint64_t sub_1000B9FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100011370(*(_QWORD *)(v0 + 96), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 136), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1000B0798(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100427F90;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 184) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000BA19C, v18, v19);
  }
}

uint64_t sub_1000BA19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1000D44DC(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000BA26C, 0, 0);
}

uint64_t sub_1000BA26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000B0834(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BA2BC(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  _QWORD *v10;
  uint64_t result;

  v6 = (char *)a4();
  v8 = v7;
  v9 = sub_1000BA30C(v6, v7, a3);
  v10 = (_QWORD *)*a1;
  *(_QWORD *)*a1 = v9;
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10 + 1;
  return result;
}

char *sub_1000BA30C(char *a1, char *a2, uint64_t *a3)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v12[3];
  void *ObjectType;

  v6 = sub_1000BA3DC(v12, 0, 0, 1, (uint64_t)a1, (unint64_t)a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1000760E0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1000760E0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100011758(v12);
  return v7;
}

char *sub_1000BA3DC(char **a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  char *result;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          result = 0;
          *((_BYTE *)__dst + v10) = 0;
          *a1 = (char *)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1000BA4D8(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    result = (char *)((a6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    result = (char *)_StringObject.sharedUTF8.getter(a5, a6);
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (char *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

char *sub_1000BA4D8(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (char *)sub_1000BA56C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_1000BA604(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_1000BA604((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

_QWORD *sub_1000BA56C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *result;
  char v7;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10028AF04(v4, 0);
      result = (_QWORD *)_StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v7 & 1) != 0)
        break;
      if (result == (_QWORD *)v4)
        return v5;
      __break(1u);
LABEL_9:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_1000BA604(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054CEF0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t _s9MusicCore7ActionsO13AddToPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000014, 0x80000001004469A0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000BA858()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BA87C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t (*v55)();
  uint64_t v56;
  uint64_t result;
  unint64_t (**v58)();
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t (**v73)();
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = a2;
  v66 = a8;
  v71 = a3;
  v72 = a6;
  v68 = a4;
  v69 = a5;
  v73 = a9;
  v67 = a12;
  v79 = a10;
  v80 = a7;
  v75 = *(_QWORD *)(a7 - 8);
  v76 = a11;
  v78 = *(_QWORD *)(v75 + 64);
  v13 = __chkstk_darwin(a1);
  v70 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v77 = (char *)&v60 - v15;
  v16 = type metadata accessor for MusicLibrary.AddAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054CDC8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v74 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v60 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v60 - v28;
  static MusicLibraryAction<>.add.getter(v27);
  v64 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, v80, v16, a11, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v29, v20);
  v30 = *(unsigned __int8 *)(v21 + 80);
  v31 = (v30 + 16) & ~v30;
  v62 = v30 | 7;
  v65 = swift_allocObject(&unk_1004FF2F8, v31 + v22, v30 | 7);
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v63 = v20;
  v32(v65 + v31, v26, v20);
  v32((uint64_t)v74, v29, v20);
  v33 = v75;
  v34 = v80;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v77, a1, v80);
  v35 = (v30 + 56) & ~v30;
  v36 = (v22 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(unsigned __int8 *)(v33 + 80);
  v39 = (v37 + v38 + 72) & ~v38;
  v40 = v66;
  v41 = *(_QWORD *)(v66 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v61 = (v39 + v78 + v42) & ~v42;
  v43 = (char *)swift_allocObject(&unk_1004FF320, v61 + *(_QWORD *)(v41 + 64), v62 | v38 | v42);
  *((_QWORD *)v43 + 2) = v34;
  *((_QWORD *)v43 + 3) = v40;
  v44 = v76;
  *((_QWORD *)v43 + 4) = v79;
  *((_QWORD *)v43 + 5) = v44;
  v45 = &v43[v35];
  v46 = v67;
  *((_QWORD *)v43 + 6) = v67;
  v32((uint64_t)v45, v74, v63);
  sub_1000B47A8(v68, (uint64_t)&v43[v36]);
  sub_100011530(v69, (uint64_t)&v43[v37], &qword_10054CD90);
  v47 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v48 = v80;
  v47(&v43[v39], v77, v80);
  v49 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v43[v61], v71, v40);
  v50 = v70;
  v47(v70, v64, v48);
  v51 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v52 = *(unsigned __int8 *)(v51 + 80);
  v53 = (v52 + 56) & ~v52;
  v54 = (*(_QWORD *)(v51 + 64) + v38 + v53) & ~v38;
  v55 = (unint64_t (*)())swift_allocObject(&unk_1004FF348, v54 + v78, v38 | v52 | 7);
  *((_QWORD *)v55 + 2) = v48;
  *((_QWORD *)v55 + 3) = v49;
  v56 = v76;
  *((_QWORD *)v55 + 4) = v79;
  *((_QWORD *)v55 + 5) = v56;
  *((_QWORD *)v55 + 6) = v46;
  sub_100011530(v72, (uint64_t)v55 + v53, &qword_10054CD28);
  result = ((uint64_t (*)(char *, char *, uint64_t))v47)((char *)v55 + v54, v50, v48);
  v58 = v73;
  v59 = v65;
  *v73 = sub_1000BACE4;
  v58[1] = (unint64_t (*)())v59;
  v58[2] = (unint64_t (*)())&unk_10054CF00;
  v58[3] = (unint64_t (*)())v43;
  v58[4] = (unint64_t (*)())&unk_10054CF10;
  v58[5] = v55;
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist()
{
  return &type metadata for Actions.AddToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist.Context()
{
  return &type metadata for Actions.AddToPlaylist.Context;
}

uint64_t sub_1000BAC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000B4C8(&qword_10054CDC8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1000BACE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CDC8) - 8) + 80);
  return sub_1000B5CA0(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1000BAD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = sub_10000B4C8(&qword_10054CDC8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = (*(_QWORD *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v2 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v1 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_QWORD *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v3);
  sub_100011758((_QWORD *)(v0 + v7));
  v14 = v0 + v8;
  if (*(_QWORD *)(v0 + v8 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v8);
    v15 = *(unsigned __int8 *)(v14 + 48);
    if (v15 != 255)
      sub_1000B4784(*(id *)(v14 + 8), *(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), v15);
    if (*(_QWORD *)(v14 + 56))
      v13 = swift_release(*(_QWORD *)(v14 + 64));
  }
  v16 = (v10 + v8 + 72) & ~v10;
  v17 = (v20 + v12 + v16) & ~v12;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v0 + v16, v2, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v17, v1);
  return swift_deallocObject(v0, v17 + v19, v5 | v10 | v12 | 7);
}

uint64_t sub_1000BAE60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v3 = v0[2];
  v2 = v0[3];
  v18 = v0[4];
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CDC8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v11 = (uint64_t)v0 + v5;
  v12 = (uint64_t)v0 + v6;
  v13 = (uint64_t)v0 + v7;
  v14 = (uint64_t)v0 + v9;
  v15 = (uint64_t)v0 + ((*(_QWORD *)(v8 + 64) + v10 + v9) & ~v10);
  v16 = (_QWORD *)swift_task_alloc(dword_10054CEFC);
  *(_QWORD *)(v1 + 16) = v16;
  *v16 = v1;
  v16[1] = sub_10000DC64;
  return sub_1000B63A4(v11, v12, v13, v14, v15, v3, v2, v18);
}

uint64_t sub_1000BAF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000BB12C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_10054CF0C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_100012D1C;
  return sub_1000B9F20(v8, v9, v2, v3, v4);
}

uint64_t Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a5;
  v30 = a6;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a7, a1, v12);
  v15 = (int *)type metadata accessor for Actions.Collaborate.Context(0);
  v16 = (_QWORD *)(a7 + v15[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = swift_allocObject(&unk_1004FF388, 32, 7);
  v18 = v29;
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = (_QWORD *)(a7 + v15[6]);
  *v19 = &unk_10054CF20;
  v19[1] = v17;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v20((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v21 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = (v23 + *(_QWORD *)(v21 + 64) + v24) & ~v24;
  v26 = swift_allocObject(&unk_1004FF3B0, v25 + v14, v22 | v24 | 7);
  sub_1000B03D0(v30, v26 + v23);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v26 + v25, (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v28 = (_QWORD *)(a7 + v15[7]);
  *v28 = &unk_10054CF30;
  v28[1] = v26;
  return result;
}

uint64_t type metadata accessor for Actions.Collaborate.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_10054CFD8;
  if (!qword_10054CFD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.Collaborate.Context);
  return result;
}

uint64_t sub_1000BB3B4(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return sub_1000BC388(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1000BB3EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BB410()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;

  v2 = *(void (**)(void))(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10054CF1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return ((uint64_t (*)(void (*)(void)))((char *)&dword_10054CF18 + dword_10054CF18))(v2);
}

uint64_t sub_1000BB474(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_10000B4C8(&qword_10054C950);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10054CD28);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000BB51C, 0, 0);
}

uint64_t sub_1000BB51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1000B0750(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 96), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = sub_1000B0798(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = Playlist.catalogID.getter(v8);
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = sub_1000D2C44();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 152) = v15;
    *(_QWORD *)(v0 + 160) = v16;
    *(_WORD *)(v0 + 176) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000BB6AC, v19, v20);
  }
}

uint64_t sub_1000BB6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 168));
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_1000D44DC(v9, v4, 5, 8, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000BB7A0, 0, 0);
}

uint64_t sub_1000BB7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000B0834(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BB7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_1000BB9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_10054CF2C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000DC64;
  return sub_1000BB474(v7, v8);
}

int *static Actions.Collaborate.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *result;
  uint64_t (**v4)(uint64_t);
  _QWORD *v5;
  _QWORD *v6;

  sub_1000BBAD4(a1, a2);
  result = (int *)sub_10000B4C8(&qword_10054CF48);
  *(_BYTE *)(a2 + result[13]) = 7;
  *(_QWORD *)(a2 + result[15]) = 0x4014000000000000;
  v4 = (uint64_t (**)(uint64_t))(a2 + result[14]);
  *v4 = sub_1000BBB18;
  v4[1] = 0;
  v5 = (_QWORD *)(a2 + result[16]);
  *v5 = &unk_10054CF38;
  v5[1] = 0;
  v6 = (_QWORD *)(a2 + result[17]);
  *v6 = &unk_10054CF40;
  v6[1] = 0;
  return result;
}

uint64_t sub_1000BBAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.Collaborate.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BBB18(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.Collaborate.Context(0);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 20)))();
}

uint64_t sub_1000BBB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch(sub_1000BBB64, 0, 0);
}

uint64_t sub_1000BBB64()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 24));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_1000BBBCC;
  return v5();
}

uint64_t sub_1000BBBCC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000BBC14(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1000BBC2C, 0, 0);
}

uint64_t sub_1000BBC2C()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 28));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_1000BC39C;
  return v5();
}

uint64_t Actions.Collaborate.Context.menuItemTitle.getter()
{
  char active;

  active = Playlist.hasActiveCollaboration.getter();
  return _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0(active & 1);
}

uint64_t (*Actions.Collaborate.Context.menuItemImage.getter())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x80000001004469C0;
  v3 = swift_allocObject(&unk_1004FF3D8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1004FF400, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_1000BBE34;
}

uint64_t (*sub_1000BBD70())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x80000001004469C0;
  v3 = swift_allocObject(&unk_1004FF478, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1004FF4A0, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_1000BC394;
}

uint64_t sub_1000BBE34()
{
  uint64_t v0;

  return sub_1000DE5D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000BBE3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1000BBE60()
{
  uint64_t v0;

  return sub_1000DE600(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for Actions.Collaborate()
{
  return &type metadata for Actions.Collaborate;
}

uint64_t *_s11CollaborateO7ContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain(v12);
    swift_retain(v15);
  }
  swift_retain(v19);
  return v4;
}

uint64_t _s11CollaborateO7ContextVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t _s11CollaborateO7ContextVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v18);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  v16 = v13[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  v21 = v18[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  swift_release(v12);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BC210);
}

uint64_t sub_1000BC210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s11CollaborateO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BC298);
}

uint64_t sub_1000BC298(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1000BC310(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1000BC388(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static Actions.DeleteFromLibrary.action(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;

  v4 = *a1;
  v5 = a1[7];
  v6 = (_OWORD *)swift_allocObject(&unk_1004FF4E0, 80, 7);
  v7 = *(_OWORD *)(a1 + 1);
  v11 = *(_OWORD *)(a1 + 3);
  v12 = *(_OWORD *)(a1 + 5);
  v8 = *((_OWORD *)a1 + 1);
  v6[1] = *(_OWORD *)a1;
  v6[2] = v8;
  v9 = *((_OWORD *)a1 + 3);
  v6[3] = *((_OWORD *)a1 + 2);
  v6[4] = v9;
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v5;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_1000BC4FC;
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10054D018;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10054D020;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v7, 2);
  swift_retain_n(v11, 2);
  swift_retain_n(v12, 2);
  return swift_retain_n(v5, 2);
}

uint64_t sub_1000BC498(uint64_t (**a1)(void), uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (*a1)();
  if (v4 == 1)
  {
    v5 = (*(uint64_t (**)(uint64_t))(a2 + 32))(result);
    v7 = v6;
    sub_1000B5000(v5, v6);
    if (v7 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_1000BC4FC(uint64_t (**a1)(void))
{
  uint64_t v1;

  return sub_1000BC498(a1, v1 + 16);
}

uint64_t sub_1000BC504(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 48);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return v5();
}

uint64_t sub_1000BC558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054D078);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_1000BC680();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_1000BC680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  v9 = sub_10000B4C8(&qword_10054D078);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = String.init<A>(describing:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v14;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+DeleteFromLibrary.swift", 41, 2, 94, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000BC860@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v10 = a1[6];
  v9 = a1[7];
  v11 = (_QWORD *)swift_allocObject(&unk_1004FF720, 80, 7);
  v11[2] = v4;
  v11[3] = v3;
  v11[4] = v6;
  v11[5] = v5;
  v11[6] = v8;
  v11[7] = v7;
  v11[8] = v10;
  v11[9] = v9;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v9;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_1000BDC18;
  *(_QWORD *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10054D018;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10054D020;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v3, 2);
  swift_retain_n(v5, 2);
  swift_retain_n(v7, 2);
  return swift_retain_n(v9, 2);
}

uint64_t (*Actions.DeleteFromLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FF508, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1004FF530, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_1000B020C;
}

uint64_t (*sub_1000BC9C4())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FF6D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1004FF6F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_1000B0870;
}

uint64_t Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (**v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (**v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v81 = a7;
  v82 = a8;
  v76 = a4;
  v77 = a9;
  v72 = a3;
  v83 = a2;
  v63 = a10;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = __chkstk_darwin(a1);
  v75 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v71 = (char *)&v63 - v17;
  v18 = __chkstk_darwin(v16);
  v66 = (char *)&v63 - v19;
  v21 = v20;
  v74 = v20;
  __chkstk_darwin(v18);
  v23 = (char *)&v63 - v22;
  v80 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v65 = a1;
  v80((char *)&v63 - v22, (uint64_t)a1, v24);
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = v25;
  v64 = v21 + 7;
  v28 = (v21 + 7 + v26) & 0xFFFFFFFFFFFFFFF8;
  v69 = v28 + 8;
  v70 = v26;
  v68 = v28;
  v29 = v25 | 7;
  v79 = v25 | 7;
  v30 = (_QWORD *)swift_allocObject(&unk_1004FF558, v28 + 8, v25 | 7);
  v30[2] = a5;
  v30[3] = a6;
  v31 = v82;
  v30[4] = v81;
  v30[5] = v31;
  v30[6] = a10;
  v32 = v30;
  v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30;
  v78 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v78((char *)v30 + v26, v23, a5);
  *(_QWORD *)((char *)v32 + v28) = v83;
  v33 = v66;
  v80(v66, (uint64_t)a1, a5);
  v34 = a6;
  v35 = *(_QWORD *)(a6 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = *(_QWORD *)(v35 + 64);
  v67 = v27;
  v39 = (v38 + v27 + v37) & ~v27;
  v40 = v29 | v36;
  v41 = (v64 + v39) & 0xFFFFFFFFFFFFFFF8;
  v42 = (char *)swift_allocObject(&unk_1004FF580, v41 + 8, v40);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = v34;
  v43 = v34;
  v45 = v81;
  v44 = v82;
  *((_QWORD *)v42 + 4) = v81;
  *((_QWORD *)v42 + 5) = v44;
  v46 = v63;
  *((_QWORD *)v42 + 6) = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v42[v37], v72, v43);
  v47 = v78;
  v78(&v42[v39], v33, a5);
  v48 = v83;
  *(_QWORD *)&v42[v41] = v83;
  v49 = v71;
  v50 = v65;
  v80(v71, (uint64_t)v65, a5);
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_1004FF5A8, v69, v79);
  *((_QWORD *)v51 + 2) = a5;
  *((_QWORD *)v51 + 3) = v43;
  *((_QWORD *)v51 + 4) = v45;
  v52 = v82;
  *((_QWORD *)v51 + 5) = v82;
  v53 = (char *)v51 + v70;
  *((_QWORD *)v51 + 6) = v46;
  v47(v53, v49, a5);
  *(_QWORD *)((char *)v51 + v68) = v48;
  v54 = v75;
  v47(v75, v50, a5);
  v55 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 56) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v67 + v57) & ~v67;
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_1004FF5D0, v58 + v74, v79 | v56);
  *((_QWORD *)v59 + 2) = a5;
  *((_QWORD *)v59 + 3) = v43;
  *((_QWORD *)v59 + 4) = v81;
  *((_QWORD *)v59 + 5) = v52;
  *((_QWORD *)v59 + 6) = v46;
  sub_1000B03D0(v76, (uint64_t)v59 + v57);
  v78((char *)v59 + v58, v54, a5);
  result = swift_retain_n(v83, 2);
  v61 = v77;
  v62 = v73;
  *v77 = sub_1000BD48C;
  v61[1] = v62;
  v61[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_10054D030;
  v61[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42;
  v61[4] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BD6A4;
  v61[5] = v51;
  v61[6] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_10054D040;
  v61[7] = v59;
  return result;
}

uint64_t sub_1000BCDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a6;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v8[16] = v9;
  v8[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000BCE20, 0, 0);
}

uint64_t sub_1000BCE20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 16))(v0[17], v0[10], v0[12]);
  v1 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000BCE9C, v2, v3);
}

uint64_t sub_1000BCE9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;

  v1 = v0[17];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  swift_release(v0[18]);
  sub_1001775CC(v1, v6, v5, v4, (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  v7 = *(int **)(v3 + 8);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[19] = v8;
  *v8 = v0;
  v8[1] = sub_1000BCF58;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v10)(v0 + 2, v0[13], v0[15]);
}

uint64_t sub_1000BCF58()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (_QWORD *)(*v0 + 16);
  v2 = *(_QWORD *)(*v0 + 136);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  sub_1000B593C(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1000BCFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_10000B4C8(&qword_10054C950);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10054CD28);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000BD068, 0, 0);
}

uint64_t sub_1000BD068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_1000B0750(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 136), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1000B0798(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 184) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000BD228, v18, v19);
  }
}

uint64_t sub_1000BD228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1000D44DC(v5, v4, 5, 14, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000BA26C, 0, 0);
}

uint64_t _s9MusicCore7ActionsO17DeleteFromLibraryO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100446A10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000BD464()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BD48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1000BC558(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 40));
}

uint64_t sub_1000BD4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v3 | v6 | 7;
  v9 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v8);
}

uint64_t sub_1000BD568()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2 - 8);
  v10 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (uint64_t)v0 + v8;
  v12 = (uint64_t)v0 + v10;
  v13 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_10054D02C);
  *(_QWORD *)(v1 + 16) = v14;
  *v14 = v1;
  v14[1] = sub_10000DC64;
  return sub_1000BCDC0(v11, v12, v13, v2, v3, v4, v5, v6);
}

uint64_t sub_1000BD638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 56) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1000BD6A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1000C5E48((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[4], v0[5]);
}

uint64_t sub_1000BD6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000BD898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_10054D03C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_100012D1C;
  return sub_1000BCFBC(v8, v9, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary()
{
  return &type metadata for Actions.DeleteFromLibrary;
}

uint64_t _s17DeleteFromLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s17DeleteFromLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s17DeleteFromLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

__n128 _s17DeleteFromLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s17DeleteFromLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];
  swift_release(v7);
  return a1;
}

uint64_t _s17DeleteFromLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17DeleteFromLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary.Context()
{
  return &type metadata for Actions.DeleteFromLibrary.Context;
}

uint64_t sub_1000BDBD0()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1000BDC1C(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v19[-v12];
  if (!a2)
  {
    if ((a1 & 1) != 0)
    {
      v15 = 0x8000000100446E50;
      v14 = 0xD000000000000010;
    }
    else
    {
      v14 = 0x442065766F6D6552;
      v15 = 0xEF64616F6C6E776FLL;
    }
    goto LABEL_10;
  }
  if (a2 == 1)
  {
    v14 = 0xD000000000000013;
    v15 = 0x8000000100446A10;
LABEL_10:
    String.LocalizationValue.init(stringLiteral:)(v14, v15);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v17 = qword_100561480;
    static Locale.current.getter((id)qword_100561480);
    v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v17, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    return v16;
  }
  if (qword_10054C290 != -1)
    swift_once(&qword_10054C290, sub_10028CD9C);
  v16 = static String.cancelButtonTitle;
  swift_bridgeObjectRetain();
  return v16;
}

_UNKNOWN **static Actions.DeleteOrRemoveDownload.Choice.allCases.getter()
{
  return &off_1004FB720;
}

uint64_t Actions.DeleteOrRemoveDownload.Choice.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6F4465766F6D6572;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x6C65636E6163;
}

uint64_t sub_1000BDEAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000C8A54(*a1, *a2);
}

Swift::Int sub_1000BDEB8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0x80000001004455F0;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1000BDF64(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x80000001004455F0;
  v3 = 0xD000000000000011;
  if (*v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000BDFEC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0x80000001004455F0;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1000BE094@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1000BE0C0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE0064616F6C6E77;
  v4 = 0x80000001004455F0;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x6C65636E6163;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6F4465766F6D6572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1000BE12C(_QWORD *a1@<X8>)
{
  *a1 = &off_1004FB748;
}

uint64_t static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_1000C117C(a1, a2);
  result = swift_allocObject(&unk_1004FF760, 32, 7);
  *(_QWORD *)(result + 16) = &unk_10054D080;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_1000BE1B4;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_10054D098;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_10054D088;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

unint64_t sub_1000BE1B4(uint64_t (**a1)(void))
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v2 = sub_10000B4C8(&qword_10054D168);
  inited = swift_initStackObject(v2, &v8);
  *(_OWORD *)(inited + 16) = xmmword_100424BA0;
  *(_QWORD *)(inited + 32) = (*a1)();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = a1[4]();
  *(_QWORD *)(inited + 56) = v5;
  v6 = _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for ActionSupportedStatus);
  return v6;
}

uint64_t sub_1000BE258(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[28] = a1;
  v2[29] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[30] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[31] = v4;
  v2[32] = v5;
  return swift_task_switch(sub_1000BE2C4, v4, v5);
}

uint64_t sub_1000BE2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  sub_1000C117C(*(_QWORD *)(v0 + 224), v0 + 16);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 264) = v2;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v0 + 16;
  *(_QWORD *)(v4 + 24) = v1;
  swift_bridgeObjectRetain();
  v5 = sub_1000BEA64((void (*)(uint64_t *__return_ptr, char *))sub_1000C1FDC, v4, (uint64_t)&off_1004FB770);
  *(_QWORD *)(v0 + 272) = v5;
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_QWORD *)(v0 + 176) = v3;
  *(_QWORD *)(v0 + 184) = v2;
  *(_BYTE *)(v0 + 192) = 1;
  *(_QWORD *)(v0 + 200) = v5;
  *(_QWORD *)(v0 + 208) = 0;
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  sub_10000D900((_QWORD *)(v0 + 96), v6);
  v8 = *(int **)(v7 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  *(_QWORD *)(v0 + 280) = v9;
  *v9 = v0;
  v9[1] = sub_1000BE3D0;
  return v11(v0 + 160, v6, v7);
}

uint64_t sub_1000BE3D0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 280));
  return swift_task_switch(sub_1000BE41C, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_1000BE41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_release(v3);
  sub_1000C1FF8((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BE484@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _OWORD v29[7];
  _OWORD v30[2];

  v8 = sub_10000B4C8(&qword_10054D128);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = *a1;
  if (*a1)
  {
    if (v11 == 1)
    {
      v28 = 0x80000001004455F0;
      v12 = 0xD000000000000011;
    }
    else
    {
      v28 = 0xE600000000000000;
      v12 = 0x6C65636E6163;
    }
  }
  else
  {
    v28 = 0xEE0064616F6C6E77;
    v12 = 0x6F4465766F6D6572;
  }
  v27 = v12;
  v26 = sub_1000BDC1C(*(_BYTE *)(a2 + 136), v11);
  v25 = v13;
  sub_1000C117C(a2, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 161) & ~v14;
  v16 = swift_allocObject(&unk_1004FFAB8, v15 + v10, v14 | 7);
  v17 = v29[4];
  *(_OWORD *)(v16 + 104) = v29[5];
  v18 = v30[0];
  *(_OWORD *)(v16 + 120) = v29[6];
  *(_OWORD *)(v16 + 136) = v18;
  *(_OWORD *)(v16 + 145) = *(_OWORD *)((char *)v30 + 9);
  v19 = v29[0];
  *(_OWORD *)(v16 + 40) = v29[1];
  v20 = v29[3];
  *(_OWORD *)(v16 + 56) = v29[2];
  *(_OWORD *)(v16 + 72) = v20;
  *(_OWORD *)(v16 + 88) = v17;
  *(_BYTE *)(v16 + 16) = v11;
  *(_OWORD *)(v16 + 24) = v19;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v22 = v28;
  *(_QWORD *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v22;
  v23 = v25;
  *(_QWORD *)(a4 + 16) = v26;
  *(_QWORD *)(a4 + 24) = v23;
  *(_BYTE *)(a4 + 32) = v11 < 2;
  *(_QWORD *)(a4 + 40) = &unk_10054D150;
  *(_QWORD *)(a4 + 48) = v16;
  return result;
}

uint64_t sub_1000BE678(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = a3;
  *(_BYTE *)(v3 + 153) = a1;
  v4 = sub_10000B4C8(&qword_10054D128);
  *(_QWORD *)(v3 + 176) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 184) = v5;
  v6 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v3 + 192) = v6;
  *(_QWORD *)(v3 + 200) = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000BE708, 0, 0);
}

uint64_t sub_1000BE708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_BYTE *)(v0 + 153);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  sub_1000C117C(v7, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 177) & ~v10;
  v12 = swift_allocObject(&unk_1004FFAE0, v11 + v4, v10 | 7);
  v13 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v12 + 120) = *(_OWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v12 + 136) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v12 + 152) = v14;
  *(_OWORD *)(v12 + 161) = *(_OWORD *)(v0 + 137);
  v15 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v0 + 32);
  v16 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v12 + 88) = v16;
  *(_OWORD *)(v12 + 104) = v13;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = v8;
  *(_OWORD *)(v12 + 40) = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v11, v2, v5);
  v17 = sub_10024D8EC(v1, (uint64_t)&unk_10054D160, v12);
  swift_release(v17);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BE84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = a5;
  *(_QWORD *)(v6 + 24) = a6;
  *(_BYTE *)(v6 + 49) = a4;
  return swift_task_switch(sub_1000BE868, 0, 0);
}

uint64_t sub_1000BE868()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v3)();
  int *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t (*v8)(void);

  if (*(_BYTE *)(v0 + 49))
  {
    if (*(_BYTE *)(v0 + 49) != 1)
    {
      *(_BYTE *)(v0 + 48) = 2;
      v6 = sub_10000B4C8(&qword_10054D128);
      CheckedContinuation.resume(returning:)(v0 + 48, v6);
      v5 = *(uint64_t (**)(void))(v0 + 8);
      return v5();
    }
    v1 = *(int **)(*(_QWORD *)(v0 + 16) + 16);
    v8 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 40) = v2;
    v3 = sub_1000BE9F8;
  }
  else
  {
    v4 = *(int **)(*(_QWORD *)(v0 + 16) + 48);
    v8 = (uint64_t (*)(void))((char *)v4 + *v4);
    v2 = (_QWORD *)swift_task_alloc(v4[1]);
    *(_QWORD *)(v0 + 32) = v2;
    v3 = sub_1000BE938;
  }
  *v2 = v0;
  v2[1] = v3;
  v5 = v8;
  return v5();
}

uint64_t sub_1000BE938()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_1000BE9A4, 0, 0);
}

uint64_t sub_1000BE9A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 48) = *(_BYTE *)(v0 + 49);
  v1 = sub_10000B4C8(&qword_10054D128);
  CheckedContinuation.resume(returning:)(v0 + 48, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BE9F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_1000C228C, 0, 0);
}

_QWORD *sub_1000BEA64(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  __int128 v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  _QWORD *v32;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v32 = _swiftEmptyArrayStorage;
    sub_100117EAC(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (char *)(a3 + 32);
    while (1)
    {
      v9 = *v8++;
      v25 = v9;
      a1(&v26, &v25);
      if (v4)
        break;
      v4 = 0;
      v11 = v26;
      v10 = v27;
      v13 = v28;
      v12 = v29;
      v14 = v30;
      v15 = v31;
      v32 = v6;
      v17 = v6[2];
      v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        v23 = v31;
        v22 = v27;
        v19 = v29;
        v21 = v30;
        sub_100117EAC((char *)(v16 > 1), v17 + 1, 1);
        v14 = v21;
        v12 = v19;
        v10 = v22;
        v15 = v23;
        v6 = v32;
      }
      v6[2] = v17 + 1;
      v18 = &v6[7 * v17];
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v13;
      v18[7] = v12;
      *((_BYTE *)v18 + 64) = v14;
      *(_OWORD *)(v18 + 9) = v15;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

uint64_t sub_1000BEBA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1000BEBBC, 0, 0);
}

uint64_t sub_1000BEBBC()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 16) + 64);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_1000BBBCC;
  return v4();
}

uint64_t sub_1000BEC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_1000C117C(a1, a2);
  result = swift_allocObject(&unk_1004FFA68, 32, 7);
  *(_QWORD *)(result + 16) = &unk_10054D080;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_1000BE1B4;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_10054D118;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_10054D088;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)()@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t (*v43)();
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)();
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)();
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)();
  void (*v87)(uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (**v100)();
  uint64_t (*v101)();
  uint64_t (*v102)();
  uint64_t (*v103)();
  uint64_t (*v104)();
  uint64_t result;
  uint64_t (*v106)();
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)();
  char *v126;
  uint64_t (*v127)();
  char *v128;
  uint64_t (*v129)();
  uint64_t v130;
  uint64_t (**v131)();
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t (*v142)();
  __int128 v143;
  uint64_t v144;
  uint64_t v145;

  v137 = a4;
  v138 = a8;
  v130 = a2;
  v131 = a9;
  v139 = a1;
  v141 = a10;
  v142 = a3;
  v113 = type metadata accessor for Playlist(0);
  v108 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v112 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for Album(0);
  v111 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v128 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_10054CD28);
  v122 = *(_QWORD *)(v17 - 8);
  v123 = *(_QWORD *)(v122 + 64);
  v18 = __chkstk_darwin(v17);
  v121 = (uint64_t)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a5 - 8);
  v21 = __chkstk_darwin(v18);
  v109 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v132 = (char *)&v107 - v24;
  v25 = __chkstk_darwin(v23);
  v126 = (char *)&v107 - v26;
  v27 = __chkstk_darwin(v25);
  v120 = (char *)&v107 - v28;
  v29 = __chkstk_darwin(v27);
  v118 = (char *)&v107 - v30;
  v31 = __chkstk_darwin(v29);
  v116 = (char *)&v107 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v107 - v34;
  v125 = (uint64_t (*)())((char *)&v107 - v34);
  v37 = v36;
  v117 = v36;
  __chkstk_darwin(v33);
  v39 = (char *)&v107 - v38;
  v140 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v140((char *)&v107 - v38, a1, a5);
  v119 = *(unsigned __int8 *)(v20 + 80);
  v40 = ((v119 + 64) & ~v119) + v37;
  v41 = (v119 + 64) & ~v119;
  v133 = (_QWORD *)v41;
  v134 = v119 | 7;
  v42 = (uint64_t (*)())swift_allocObject(&unk_1004FF788, v40, v119 | 7);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = a6;
  v114 = a6;
  *((_QWORD *)v42 + 4) = a7;
  *((_QWORD *)v42 + 5) = a8;
  v43 = v142;
  *((_QWORD *)v42 + 6) = v141;
  *((_QWORD *)v42 + 7) = v43;
  v129 = v42;
  v110 = v20;
  v44 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v45 = v39;
  v46 = a5;
  v44((char *)v42 + v41, v45, a5);
  v136 = v44;
  v47 = v35;
  v48 = v139;
  v49 = v140;
  v140(v47, v139, v46);
  v115 = v40;
  v50 = v134;
  v51 = (uint64_t (*)())swift_allocObject(&unk_1004FF7B0, v40, v134);
  v52 = v46;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = a6;
  v53 = a7;
  v135 = a7;
  v54 = v138;
  *((_QWORD *)v51 + 4) = a7;
  *((_QWORD *)v51 + 5) = v54;
  v55 = v133;
  v56 = (char *)v133 + (_QWORD)v51;
  v57 = v141;
  *((_QWORD *)v51 + 6) = v141;
  *((_QWORD *)v51 + 7) = v43;
  v127 = v51;
  v58 = v52;
  ((void (*)(char *, uint64_t (*)()))v44)(v56, v125);
  v59 = v116;
  v49(v116, v48, v58);
  v60 = (char *)swift_allocObject(&unk_1004FF7D8, v40, v50);
  v61 = v58;
  *((_QWORD *)v60 + 2) = v58;
  v62 = v114;
  *((_QWORD *)v60 + 3) = v114;
  *((_QWORD *)v60 + 4) = v53;
  *((_QWORD *)v60 + 5) = v54;
  v63 = v54;
  v64 = (char *)v55 + (_QWORD)v60;
  v65 = v57;
  *((_QWORD *)v60 + 6) = v57;
  v125 = (uint64_t (*)())v60;
  v66 = v142;
  *((_QWORD *)v60 + 7) = v142;
  v67 = v136;
  v136(v64, v59, v61);
  v68 = v118;
  v69 = v139;
  v49(v118, v139, v61);
  v70 = (_QWORD *)swift_allocObject(&unk_1004FF800, v115, v50);
  v70[2] = v61;
  v70[3] = v62;
  v71 = v135;
  v70[4] = v135;
  v70[5] = v63;
  v72 = (char *)v133 + (_QWORD)v70;
  v70[6] = v65;
  v70[7] = v66;
  v133 = v70;
  v67(v72, v68, v61);
  v73 = v121;
  sub_100011370(v137, v121, &qword_10054CD28);
  v74 = v120;
  v140(v120, v69, v61);
  v75 = *(unsigned __int8 *)(v122 + 80);
  v76 = (v75 + 56) & ~v75;
  v77 = (v123 + v119 + v76) & ~v119;
  v78 = (uint64_t (*)())swift_allocObject(&unk_1004FF828, v77 + v117, v134 | v75);
  *((_QWORD *)v78 + 2) = v61;
  *((_QWORD *)v78 + 3) = v62;
  v79 = v138;
  *((_QWORD *)v78 + 4) = v71;
  *((_QWORD *)v78 + 5) = v79;
  v80 = v141;
  *((_QWORD *)v78 + 6) = v141;
  sub_1000B03D0(v73, (uint64_t)v78 + v76);
  v67((char *)v78 + v77, v74, v61);
  v144 = v62;
  v145 = v80;
  v81 = sub_1000C16E0(&v143);
  v82 = *(_QWORD *)(v62 - 8);
  v83 = v130;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v82 + 16))(v81, v130, v62);
  swift_retain_n(v142, 3);
  v84 = v139;
  v85 = sub_1000BFA50(v139, v61);
  v142 = v86;
  sub_100011694(v137, &qword_10054CD28);
  v87 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v88 = v128;
  v87(v83, v62);
  v89 = v126;
  v140(v126, v84, v61);
  v90 = v124;
  if (swift_dynamicCast(v88, v89, v61, v124, 6))
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v88, v90);
    v91 = v132;
    v136(v132, (char *)v84, v61);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v91, v61);
    v92 = 1;
  }
  else
  {
    v93 = v85;
    v94 = v132;
    v95 = v136;
    v136(v132, (char *)v84, v61);
    v96 = v109;
    v95(v109, v94, v61);
    v97 = v112;
    v98 = v61;
    v99 = v113;
    if (swift_dynamicCast(v112, v96, v98, v113, 6))
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v97, v99);
      v92 = 1;
    }
    else
    {
      v92 = 0;
    }
    v85 = v93;
  }
  v100 = v131;
  v101 = v129;
  *v131 = sub_1000C1258;
  v100[1] = v101;
  v102 = v127;
  v100[2] = (uint64_t (*)())&unk_10054D0A8;
  v100[3] = v102;
  v103 = v125;
  v100[4] = sub_1000C1314;
  v100[5] = v103;
  v104 = (uint64_t (*)())v133;
  v100[6] = (uint64_t (*)())&unk_10054D0B8;
  v100[7] = v104;
  v100[8] = (uint64_t (*)())&unk_10054D0C8;
  v100[9] = v78;
  result = sub_1000B47A8(&v143, (uint64_t)(v100 + 10));
  v106 = v142;
  v100[15] = (uint64_t (*)())v85;
  v100[16] = v106;
  *((_BYTE *)v100 + 136) = v92;
  return result;
}

uint64_t sub_1000BF398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054D078);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_1000BC680();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_1000BF4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_100012D1C;
  return MusicLibrary.remove<A>(_:)(a2, a3, a5);
}

uint64_t sub_1000BF530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054D120);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_1000C5F70();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_1000BF658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_100012D1C;
  return MusicLibrary.removeDownload<A>(_:)(a2, a3, a5);
}

uint64_t sub_1000BF6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a3;
  v5[12] = a5;
  v5[9] = a1;
  v5[10] = a2;
  v6 = sub_10000B4C8(&qword_10054C950);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10054CD28);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[16] = v9;
  v5[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000BF774, 0, 0);
}

uint64_t sub_1000BF774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000B0798(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000BF930, v18, v19);
  }
}

uint64_t sub_1000BF930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 30, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000BFA00, 0, 0);
}

uint64_t sub_1000BFA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000B0834(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000BFA50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  char *v124;
  char *v125;
  void (*v126)(char *, uint64_t, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;

  v159 = a1;
  v131 = type metadata accessor for Genre(0);
  v128 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v130 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Composer(0);
  v129 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v133 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Artist(0);
  v132 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v136 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for TVEpisode(0);
  v135 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v139 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for TVSeason(0);
  v138 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for TVShow(0);
  v141 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for MusicMovie(0);
  v146 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v148 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for Song(0);
  v147 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v152 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Playlist(0);
  v150 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v155 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v153 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v158 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v125 - v22;
  v24 = type metadata accessor for Album(0);
  v156 = *(char **)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v25);
  v125 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v127 = (char *)&v125 - v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v125 - v32;
  v157 = v34;
  v126 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v126((char *)&v125 - v32, v159, a2);
  if (swift_dynamicCast(v27, v33, a2, v24, 0))
  {
    v159 = a2;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100446DB0);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    v35 = v17;
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v36 = qword_100561480;
    v37 = (id)qword_100561480;
    v38 = v158;
    static Locale.current.getter(v37);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v36, v38, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v35);
    (*((void (**)(char *, uint64_t))v156 + 1))(v27, v24);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v33, v159);
    return v39;
  }
  v40 = v33;
  if (swift_dynamicCast(v14, v33, a2, v12, 0))
  {
    v41 = v12;
    v42 = v14;
    v43 = v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100446D50);
    v44 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v45 = qword_100561480;
    v46 = (id)qword_100561480;
    v47 = v158;
    static Locale.current.getter(v46);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v45, v47, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v17);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v42, v41);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v157 + 8))(v40, a2);
    return v39;
  }
  v48 = v154;
  v49 = v21;
  if (swift_dynamicCast(v155, v33, a2, v154, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000100446CF0);
    v50 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v51 = qword_100561480;
    v52 = (id)qword_100561480;
    v53 = v158;
    static Locale.current.getter(v52);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v51, v53, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v155, v48);
    goto LABEL_17;
  }
  v54 = v151;
  if (swift_dynamicCast(v152, v33, a2, v151, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x8000000100446A50);
    v55 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v56 = qword_100561480;
    v57 = (id)qword_100561480;
    v58 = v158;
    static Locale.current.getter(v57);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v56, v58, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v152, v54);
    goto LABEL_17;
  }
  v60 = v17;
  if (swift_dynamicCast(v148, v33, a2, v149, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100446C90);
    v61 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v23, v17);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v62 = qword_100561480;
    v63 = (id)qword_100561480;
    v64 = v158;
    static Locale.current.getter(v63);
    v65 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v62, v64, 0, 0, 256);
    v66 = *(void (**)(char *, uint64_t))(v61 + 8);
    v39 = v65;
    v66(v23, v17);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v149);
    goto LABEL_17;
  }
  v156 = v23;
  v67 = v144;
  v68 = v145;
  if (swift_dynamicCast(v144, v33, a2, v145, 0))
  {
    (*(void (**)(char *, uint64_t))(v141 + 8))(v67, v68);
LABEL_27:
    v72 = v156;
    (*(void (**)(char *, uint64_t))(v157 + 8))(v40, a2);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x8000000100446C30);
    v73 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v72, v60);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v74 = qword_100561480;
    v75 = (id)qword_100561480;
    v76 = v158;
    static Locale.current.getter(v75);
    v39 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v74, v76, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v60);
    return v39;
  }
  v69 = v60;
  v70 = v142;
  v71 = v143;
  if (swift_dynamicCast(v142, v40, a2, v143, 0))
  {
    (*(void (**)(char *, uint64_t))(v138 + 8))(v70, v71);
    v60 = v69;
    goto LABEL_27;
  }
  v77 = swift_dynamicCast(v139, v40, a2, v140, 0);
  v78 = v156;
  if (v77)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000056, 0x8000000100446BD0);
    v79 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v80 = qword_100561480;
    v81 = (id)qword_100561480;
    v82 = v158;
    static Locale.current.getter(v81);
    v83 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v80, v82, 0, 0, 256);
    v84 = *(void (**)(char *, uint64_t))(v79 + 8);
    v39 = v83;
    v84(v78, v69);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v139, v140);
    goto LABEL_17;
  }
  v85 = v69;
  if (swift_dynamicCast(v136, v40, a2, v137, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x8000000100446B70);
    v86 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v87 = qword_100561480;
    v88 = (id)qword_100561480;
    v89 = v158;
    static Locale.current.getter(v88);
    v90 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v87, v89, 0, 0, 256);
    v91 = *(void (**)(char *, uint64_t))(v86 + 8);
    v39 = v90;
    v91(v78, v69);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v136, v137);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v133, v40, a2, v134, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000100446B10);
    v92 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v93 = qword_100561480;
    v94 = (id)qword_100561480;
    v95 = v158;
    static Locale.current.getter(v94);
    v96 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v93, v95, 0, 0, 256);
    v97 = *(void (**)(char *, uint64_t))(v92 + 8);
    v39 = v96;
    v97(v78, v69);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v133, v134);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v130, v40, a2, v131, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100446AB0);
    v98 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10054B9B0 != -1)
      swift_once(&qword_10054B9B0, sub_1000ABDCC);
    v99 = qword_100561480;
    v100 = (id)qword_100561480;
    v101 = v158;
    static Locale.current.getter(v100);
    v102 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v99, v101, 0, 0, 256);
    v103 = *(void (**)(char *, uint64_t))(v98 + 8);
    v39 = v102;
    v103(v78, v69);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v130, v131);
    goto LABEL_17;
  }
  v156 = v40;
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v104 = type metadata accessor for Logger(0);
  sub_10000D78C(v104, (uint64_t)static Logger.actions);
  v105 = v127;
  v106 = v126;
  v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v126)(v127, v159, a2);
  v108 = Logger.logObject.getter(v107);
  v109 = static os_log_type_t.fault.getter(v108);
  if (os_log_type_enabled(v108, v109))
  {
    v110 = swift_slowAlloc(12, -1);
    v159 = swift_slowAlloc(32, -1);
    v160 = v159;
    *(_DWORD *)v110 = 136315138;
    v111 = (void (*)(char *, char *, uint64_t))v106;
    v112 = v125;
    v111(v125, v105, a2);
    v113 = (char *)String.init<A>(describing:)(v112, a2);
    v114 = v105;
    v116 = v115;
    *(_QWORD *)(v110 + 4) = sub_1000BA30C(v113, v115, &v160);
    swift_bridgeObjectRelease(v116);
    v117 = *(void (**)(char *, uint64_t))(v157 + 8);
    v117(v114, a2);
    _os_log_impl((void *)&_mh_execute_header, v108, v109, "DeleteOrRemoveDownload: unhandled item type=%s", (uint8_t *)v110, 0xCu);
    v118 = v159;
    swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v118, -1, -1);
    swift_slowDealloc(v110, -1, -1);
  }
  else
  {
    v119 = v105;
    v117 = *(void (**)(char *, uint64_t))(v157 + 8);
    v117(v119, a2);
  }

  v120 = v156;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x8000000100446A50);
  v121 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v85);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v122 = qword_100561480;
  v123 = (id)qword_100561480;
  v124 = v158;
  static Locale.current.getter(v123);
  v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v122, v124, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v23, v85);
  v117(v120, a2);
  return v39;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x80E265766F6D6552, 0xA9000000000000A6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.DeleteOrRemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FF850, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1004FF878, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_1000B020C;
}

uint64_t (*sub_1000C0CFC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FFA18, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1004FFA40, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_1000B0870;
}

double sub_1000C0D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  _OWORD v27[12];
  uint64_t v28;

  v8 = sub_10000B4C8(&qword_10054D128);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_100011370(a4, (uint64_t)v27, &qword_10054D130);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 248) & ~v15;
  v17 = swift_allocObject(&unk_1004FFA90, v16 + v10, v15 | 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  v18 = v27[11];
  *(_OWORD *)(v17 + 208) = v27[10];
  *(_OWORD *)(v17 + 224) = v18;
  *(_QWORD *)(v17 + 240) = v28;
  v19 = v27[7];
  *(_OWORD *)(v17 + 144) = v27[6];
  *(_OWORD *)(v17 + 160) = v19;
  v20 = v27[9];
  *(_OWORD *)(v17 + 176) = v27[8];
  *(_OWORD *)(v17 + 192) = v20;
  v21 = v27[3];
  *(_OWORD *)(v17 + 80) = v27[2];
  *(_OWORD *)(v17 + 96) = v21;
  v22 = v27[5];
  *(_OWORD *)(v17 + 112) = v27[4];
  *(_OWORD *)(v17 + 128) = v22;
  v23 = v27[1];
  *(_OWORD *)(v17 + 48) = v27[0];
  *(_OWORD *)(v17 + 64) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain(a3);
  v24 = sub_10024D8EC((uint64_t)v13, (uint64_t)&unk_10054D140, v17);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_1000C0F40(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10000DC64;
  return v12(a6, a7);
}

uint64_t sub_1000C0FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1000C0FCC, 0, 0);
}

uint64_t sub_1000C0FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1000C107C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD00000000000003ALL, 0x8000000100446E10, sub_1000C1E4C, v2, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_1000C107C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v5;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000C1100, 0, 0);
  v5 = *(_BYTE **)(v3 + 16);
  swift_task_dealloc(*(_QWORD *)(v3 + 48));
  *v5 = *(_BYTE *)(v3 + 72);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1000C1100()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FB6B8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1000C117C(uint64_t a1, uint64_t a2)
{
  _s22DeleteOrRemoveDownloadO7ContextVwcp(a2, a1);
  return a2;
}

uint64_t sub_1000C11B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C11D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_10054D094);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054D090 + dword_10054D090))(a1, a2, v7, v6);
}

uint64_t sub_1000C1258()
{
  return sub_1000C1320((uint64_t (*)(_QWORD, uint64_t))sub_1000BF398);
}

uint64_t sub_1000C1268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10054D0A4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_100012D1C;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_100012D1C;
  return MusicLibrary.remove<A>(_:)(v5, v2, v3);
}

uint64_t sub_1000C1314()
{
  return sub_1000C1320((uint64_t (*)(_QWORD, uint64_t))sub_1000BF530);
}

uint64_t sub_1000C1320(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 56), v1 + ((v2 + 64) & ~v2));
}

uint64_t sub_1000C134C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C13B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10054D0B4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_100012D1C;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_100012D1C;
  return MusicLibrary.removeDownload<A>(_:)(v5, v2, v3);
}

uint64_t sub_1000C1460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000C1620()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_10054D0C4);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_100012D1C;
  return sub_1000BF6C8(v8, v9, v2, v3, v4);
}

_QWORD *sub_1000C16E0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_1000C171C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000C1744()
{
  unint64_t result;

  result = qword_10054D0D0;
  if (!qword_10054D0D0)
  {
    result = swift_getWitnessTable("}R\r", &type metadata for Actions.DeleteOrRemoveDownload.Choice);
    atomic_store(result, (unint64_t *)&qword_10054D0D0);
  }
  return result;
}

unint64_t sub_1000C178C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054D0D8;
  if (!qword_10054D0D8)
  {
    v1 = sub_100011650(&qword_10054D0E0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10054D0D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload()
{
  return &type metadata for Actions.DeleteOrRemoveDownload;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  swift_release(a1[9]);
  sub_100011758(a1 + 10);
  return swift_bridgeObjectRelease(a1[16]);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  v13 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v13;
  v14 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v14;
  v5 = *(_QWORD *)(a2 + 72);
  v15 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 72) = v5;
  v6 = a1 + 80;
  v7 = a2 + 80;
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain(v4);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v5);
  v10(v6, v7, v9);
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_retain(v12);
  swift_release(v13);
  sub_1000C1A04((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

_QWORD *sub_1000C1A04(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 _s22DeleteOrRemoveDownloadO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v8);
  sub_100011758((_QWORD *)(a1 + 80));
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v10 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 137))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Context()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Context;
}

uint64_t _s22DeleteOrRemoveDownloadO6ChoiceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000C1D4C + 4 * byte_10042A875[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000C1D80 + 4 * asc_10042A870[v4]))();
}

uint64_t sub_1000C1D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000C1D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000C1D90);
  return result;
}

uint64_t sub_1000C1D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000C1DA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000C1DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000C1DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Choice()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Choice;
}

uint64_t sub_1000C1DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_10054D094);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000DC64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054D090 + dword_10054D090))(a1, a2, v7, v6);
}

double sub_1000C1E4C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1000C0D78(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000C1E58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_10000B4C8(&qword_10054D128);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 248) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 5));
  swift_release(*((_QWORD *)v0 + 7));
  swift_release(*((_QWORD *)v0 + 9));
  swift_release(*((_QWORD *)v0 + 11));
  swift_release(*((_QWORD *)v0 + 13));
  swift_release(*((_QWORD *)v0 + 15));
  sub_100011758((_QWORD *)v0 + 16);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 22));
  swift_release(*((_QWORD *)v0 + 25));
  swift_release(*((_QWORD *)v0 + 28));
  v7 = swift_release(*((_QWORD *)v0 + 30));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C1F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054D128) - 8) + 80);
  v3 = *(int **)(v0 + 32);
  v4 = v0 + 48;
  v5 = v0 + ((v2 + 248) & ~v2);
  v6 = (_QWORD *)swift_task_alloc(dword_10054D13C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_100012D1C;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v7 = (_QWORD *)swift_task_alloc(v3[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10000DC64;
  return v9(v4, v5);
}

uint64_t sub_1000C1FDC@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1000BE484(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *sub_1000C1FF8(_QWORD *a1)
{
  _s22DeleteOrRemoveDownloadO7ContextVwxx(a1);
  return a1;
}

uint64_t sub_1000C2024()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000B4C8(&qword_10054D128);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 161) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 4));
  swift_release(*((_QWORD *)v0 + 6));
  swift_release(*((_QWORD *)v0 + 8));
  swift_release(*((_QWORD *)v0 + 10));
  swift_release(*((_QWORD *)v0 + 12));
  sub_100011758((_QWORD *)v0 + 13);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 19));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C20CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054D128) - 8) + 80);
  v3 = v0 + 24;
  v4 = v0 + ((v2 + 161) & ~v2);
  v5 = *(_BYTE *)(v0 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_10054D14C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000DC64;
  return sub_1000BE678(v5, v3, v4);
}

uint64_t sub_1000C214C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000B4C8(&qword_10054D128);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 177) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 6));
  swift_release(*((_QWORD *)v0 + 8));
  swift_release(*((_QWORD *)v0 + 10));
  swift_release(*((_QWORD *)v0 + 12));
  swift_release(*((_QWORD *)v0 + 14));
  sub_100011758((_QWORD *)v0 + 15);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 21));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C21FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054D128) - 8) + 80);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = v0 + 40;
  v5 = v0 + ((v2 + 177) & ~v2);
  v6 = swift_task_alloc(dword_10054D15C);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_100012D1C;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 49) = v3;
  return swift_task_switch(sub_1000BE868, 0, 0);
}

uint64_t static Actions.Download.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_1000B0910;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10054D170;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10054D178;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t (**a8)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t (*v58)();
  uint64_t v59;
  uint64_t result;
  unint64_t (**v61)();
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  __int128 *v67;
  char *v68;
  uint64_t v69;
  unint64_t (**v70)();
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v77 = a6;
  v69 = a4;
  v70 = a8;
  v66 = a2;
  v67 = a3;
  v72 = *(_QWORD *)(a5 - 8);
  v73 = a7;
  v74 = *(_QWORD *)(v72 + 64);
  v11 = __chkstk_darwin(a1);
  v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v78 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  v71 = (char *)&v62 - v15;
  v16 = type metadata accessor for MusicLibrary.DownloadAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_10000B4C8(&qword_10054D180);
  v64 = *(_QWORD *)(v79 - 8);
  v20 = *(_QWORD *)(v64 + 64);
  v21 = __chkstk_darwin(v79);
  v76 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v62 - v23;
  v62 = (char *)&v62 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v62 - v26;
  static MusicLibraryAction<>.download.getter(v25);
  v75 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, a5, v16, a7, &protocol witness table for MusicLibrary.DownloadAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v28 = v72;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v29 = a5;
  v65(v71, a1, a5);
  v30 = v64;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v24, v27, v79);
  v31 = *(unsigned __int8 *)(v28 + 80);
  v32 = (v31 + 40) & ~v31;
  v33 = *(unsigned __int8 *)(v30 + 80);
  v34 = v30;
  v35 = v74;
  v36 = (v74 + v32 + v33) & ~v33;
  v63 = v31 | v33 | 7;
  v37 = (unint64_t (*)())swift_allocObject(&unk_1004FFB98, v36 + v20, v63);
  v38 = v29;
  *((_QWORD *)v37 + 2) = v29;
  v39 = v77;
  v40 = v73;
  *((_QWORD *)v37 + 3) = v77;
  *((_QWORD *)v37 + 4) = v40;
  v41 = (char *)v37 + v32;
  v72 = *(_QWORD *)(v72 + 32);
  v42 = v38;
  ((void (*)(char *, char *))v72)(v41, v71);
  v43 = (char *)v37 + v36;
  v44 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v45 = v79;
  v44(v43, v62, v79);
  v44(v76, v27, v45);
  v65(v78, v75, v42);
  v46 = (v33 + 80) & ~v33;
  v47 = (v20 + v31 + v46) & ~v31;
  v48 = (v35 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = (unint64_t (*)())swift_allocObject(&unk_1004FFBC0, v48 + 8, v63);
  *((_QWORD *)v49 + 2) = v42;
  *((_QWORD *)v49 + 3) = v39;
  v50 = v73;
  *((_QWORD *)v49 + 4) = v73;
  sub_1000B47A8(v67, (uint64_t)v49 + 40);
  v44((char *)v49 + v46, v76, v79);
  v51 = (void (*)(char *, uint64_t, uint64_t))v72;
  ((void (*)(char *, char *, uint64_t))v72)((char *)v49 + v47, v78, v42);
  *(_QWORD *)((char *)v49 + v48) = v66;
  v52 = v68;
  v51(v68, v75, v42);
  v53 = (uint64_t (*)(char *, char *, uint64_t))v51;
  v54 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = (v55 + 40) & ~v55;
  v57 = (*(_QWORD *)(v54 + 64) + v31 + v56) & ~v31;
  v58 = (unint64_t (*)())swift_allocObject(&unk_1004FFBE8, v57 + v74, v31 | v55 | 7);
  v59 = v77;
  *((_QWORD *)v58 + 2) = v42;
  *((_QWORD *)v58 + 3) = v59;
  *((_QWORD *)v58 + 4) = v50;
  sub_1000B03D0(v69, (uint64_t)v58 + v56);
  result = v53((char *)v58 + v57, v52, v42);
  v61 = v70;
  *v70 = sub_1000C2A7C;
  v61[1] = v37;
  v61[2] = (unint64_t (*)())&unk_10054D190;
  v61[3] = v49;
  v61[4] = (unint64_t (*)())&unk_10054D1A0;
  v61[5] = v58;
  return result;
}

unint64_t sub_1000C270C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a2;
  v36 = a1;
  v4 = sub_10000B4C8(&qword_10054D208);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100550690);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_1005506A0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v36, a3);
  v21 = swift_dynamicCast(v13, v16, a3, v17, 6);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v21 & 1) == 0)
  {
    v22(v13, 1, 1, v17);
    v26 = &qword_1005506A0;
    v27 = (uint64_t)v13;
    goto LABEL_5;
  }
  v23 = v9;
  v22(v13, 0, 1, v17);
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v13, v17);
  Playlist.entries.getter(v24);
  v25 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v26 = &qword_10054D208;
    v27 = (uint64_t)v6;
LABEL_5:
    sub_100011694(v27, v26);
    return sub_1000C2AF4();
  }
  v29 = v23;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v23, v6, v7);
  v30 = sub_1000C5608();
  dispatch thunk of Collection.startIndex.getter(v7);
  dispatch thunk of Collection.endIndex.getter(v7, v30);
  v32 = v37;
  v31 = v38;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v31 == v32)
    return 0xD000000000000011;
  return sub_1000C2AF4();
}

uint64_t sub_1000C29CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_10000B4C8(&qword_10054D180);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_1000C2A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054D180) - 8) + 80);
  return sub_1000C270C(v0 + v3, v0 + ((v3 + v4 + v5) & ~v5), v1);
}

uint64_t sub_1000C2AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41[2];

  v1 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v37 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v37 - v9;
  v11 = sub_10000B4C8(&qword_10054D180);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v39 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v37 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v40 = v0;
  v19((char *)&v37 - v17, v0, v11);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v20 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v18, v11);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v18, v1);
    v21 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v21(v8, v10, v1);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v8, v1) != enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v21(v5, v10, v1);
      v22 = String.init<A>(describing:)(v5, v1);
      v23 = *(void (**)(char *, uint64_t))(v2 + 8);
      v23(v10, v1);
      v23(v8, v1);
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
    return 0;
  }
  if (v20 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v24 = type metadata accessor for Logger(0);
  sub_10000D78C(v24, (uint64_t)static Logger.actions);
  v25 = v39;
  v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v39, v40, v11);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.fault.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v41[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v31 = v38;
    v19(v38, (uint64_t)v25, v11);
    v32 = (char *)String.init<A>(describing:)(v31, v11);
    v34 = v33;
    *(_QWORD *)(v29 + 4) = sub_1000BA30C(v32, v33, v41);
    swift_bridgeObjectRelease(v34);
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v25, v11);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unknown status=%s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v25, v11);
  }

  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(v40, v41, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v22 = v41[0];
  v35(v18, v11);
  return v22;
}

uint64_t sub_1000C2ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  v9 = type metadata accessor for Locale(0);
  v7[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v7[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[28] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[29] = swift_task_alloc(v12);
  v7[30] = swift_task_alloc(v12);
  v13 = *(_QWORD *)(a5 - 8);
  v7[31] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v7[32] = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[33] = swift_task_alloc(v15);
  v7[34] = swift_task_alloc(v15);
  v16 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v7[35] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[36] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[37] = swift_task_alloc(v18);
  v7[38] = swift_task_alloc(v18);
  v7[39] = swift_task_alloc(v18);
  v7[40] = swift_task_alloc(v18);
  v19 = sub_10000B4C8(&qword_10054D180);
  v7[41] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[42] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[43] = swift_task_alloc(v21);
  v7[44] = swift_task_alloc(v21);
  v7[45] = swift_task_alloc(v21);
  return swift_task_switch(sub_1000C3034, 0, 0);
}

uint64_t sub_1000C3034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unsigned __int8 v58;
  void *v59;
  id v60;
  NSString v61;
  unsigned __int8 v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v4(v1, *(_QWORD *)(v0 + 160), v2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v6 = *(_QWORD *)(v0 + 360);
    v8 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 288);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 336) + 96))(v6, *(_QWORD *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v6, v9);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v11(v8, v7, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v8, v9) == enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v12 = *(_QWORD *)(v0 + 152);
      v13 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 368) = v13;
      *(_QWORD *)(v13 + 16) = v12;
      v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 376) = v14;
      *v14 = v0;
      v14[1] = sub_1000C38C8;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 440, 0, 0, 0xD00000000000001DLL, 0x8000000100446F60, sub_1000C53B4, v13, &type metadata for Bool);
    }
    else
    {
      if (qword_10054B9D0 != -1)
        swift_once(&qword_10054B9D0, sub_100127138);
      v33 = *(_QWORD *)(v0 + 320);
      v34 = *(_QWORD *)(v0 + 304);
      v35 = *(_QWORD *)(v0 + 280);
      v36 = type metadata accessor for Logger(0);
      sub_10000D78C(v36, (uint64_t)static Logger.actions);
      v37 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v34, v33, v35);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.error.getter();
      v40 = os_log_type_enabled(v38, v39);
      v41 = *(_QWORD *)(v0 + 320);
      v42 = *(_QWORD *)(v0 + 304);
      if (v40)
      {
        v43 = *(_QWORD *)(v0 + 296);
        v101 = *(_QWORD *)(v0 + 288);
        v44 = *(_QWORD *)(v0 + 280);
        v45 = swift_slowAlloc(12, -1);
        v46 = swift_slowAlloc(32, -1);
        v104 = v46;
        *(_DWORD *)v45 = 136315138;
        v11(v43, v42, v44);
        v47 = (char *)String.init<A>(describing:)(v43, v44);
        v49 = v48;
        *(_QWORD *)(v45 + 4) = sub_1000BA30C(v47, v48, &v104);
        swift_bridgeObjectRelease(v49);
        v50 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
        v50(v42, v44);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Couldn't download for reason: %s", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v45, -1, -1);

      }
      else
      {
        v44 = *(_QWORD *)(v0 + 280);
        v64 = *(_QWORD *)(v0 + 288);

        v50 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v50(v42, v44);
      }
      v50(v41, v44);
      v50(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
      v65 = *(_QWORD *)(v0 + 352);
      v66 = *(_QWORD *)(v0 + 344);
      v68 = *(_QWORD *)(v0 + 312);
      v67 = *(_QWORD *)(v0 + 320);
      v70 = *(_QWORD *)(v0 + 296);
      v69 = *(_QWORD *)(v0 + 304);
      v72 = *(_QWORD *)(v0 + 264);
      v71 = *(_QWORD *)(v0 + 272);
      v73 = *(_QWORD *)(v0 + 240);
      v98 = *(_QWORD *)(v0 + 232);
      v102 = *(_QWORD *)(v0 + 208);
      swift_task_dealloc(*(_QWORD *)(v0 + 360));
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v98);
      swift_task_dealloc(v102);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  if (v5 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    if (qword_10054B9D0 != -1)
      swift_once(&qword_10054B9D0, sub_100127138);
    v16 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 328);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = type metadata accessor for Logger(0);
    sub_10000D78C(v19, (uint64_t)static Logger.actions);
    v20 = v4(v16, v18, v17);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter(v21);
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 352);
    if (v23)
    {
      v25 = *(_QWORD *)(v0 + 344);
      v100 = *(_QWORD *)(v0 + 336);
      v26 = *(_QWORD *)(v0 + 328);
      v27 = swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v104 = v28;
      *(_DWORD *)v27 = 136315138;
      v4(v25, v24, v26);
      v29 = (char *)String.init<A>(describing:)(v25, v26);
      v31 = v30;
      *(_QWORD *)(v27 + 4) = sub_1000BA30C(v29, v30, &v104);
      swift_bridgeObjectRelease(v31);
      v32 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v32(v24, v26);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Unknown status=%s", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      v32 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 8);
      v32(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
    }

    v32(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 328));
  }
  v51 = *(_QWORD *)(v0 + 272);
  v52 = *(_QWORD *)(v0 + 184);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v53(v51, *(_QWORD *)(v0 + 168), v52);
  v54 = sub_10000B4C8(&qword_10054D1D8);
  if ((swift_dynamicCast(v0 + 112, v51, v52, v54, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_100011694(v0 + 112, &qword_10054D1E0);
    goto LABEL_21;
  }
  sub_1000B47A8((__int128 *)(v0 + 112), v0 + 72);
  v56 = *(_QWORD *)(v0 + 96);
  v55 = *(_QWORD *)(v0 + 104);
  sub_10000D900((_QWORD *)(v0 + 72), v56);
  if (!sub_10018D9C8(v56, v55))
    goto LABEL_19;
  v57 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v58 = objc_msgSend(v57, "prefersSpatialDownloads");

  if ((v58 & 1) != 0
    || (v59 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v59,
        v60 = objc_msgSend(v59, "standardUserDefaults"),
        v61 = String._bridgeToObjectiveC()(),
        v62 = objc_msgSend(v60, "BOOLForKey:", v61),
        v61,
        v60,
        (v62 & 1) != 0))
  {
LABEL_19:
    sub_100011758((_QWORD *)(v0 + 72));
LABEL_21:
    v63 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v63;
    *v63 = v0;
    v63[1] = sub_1000C40B4;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v74 = *(_QWORD *)(v0 + 232);
  v75 = *(_QWORD *)(v0 + 240);
  v76 = *(_QWORD *)(v0 + 216);
  v77 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x8000000100446EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v74, v75, v76);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v78 = *(_QWORD *)(v0 + 248);
  v95 = *(_QWORD *)(v0 + 264);
  v96 = *(_QWORD *)(v0 + 256);
  v80 = *(_QWORD *)(v0 + 232);
  v79 = *(_QWORD *)(v0 + 240);
  v82 = *(_QWORD *)(v0 + 216);
  v81 = *(_QWORD *)(v0 + 224);
  v83 = *(_QWORD *)(v0 + 208);
  v84 = *(_QWORD *)(v0 + 168);
  v97 = *(_QWORD *)(v0 + 176);
  v99 = *(_QWORD *)(v0 + 200);
  v85 = qword_100561480;
  v86 = (id)qword_100561480;
  v103 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v86);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v80, 0, 0, v85, v83, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v87;
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v82);
  v53(v95, v84, v103);
  v88 = *(unsigned __int8 *)(v78 + 80);
  v89 = (v88 + 48) & ~v88;
  v90 = swift_allocObject(&unk_1004FFD88, v89 + v96, v88 | 7);
  *(_QWORD *)(v0 + 408) = v90;
  *(_OWORD *)(v90 + 16) = v103;
  *(_QWORD *)(v90 + 32) = v99;
  *(_QWORD *)(v90 + 40) = v97;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v78 + 32))(v90 + v89, v95, v103);
  v91 = type metadata accessor for MainActor(0);
  v92 = swift_retain(v97);
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v92);
  v93 = dispatch thunk of Actor.unownedExecutor.getter(v91, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000C3E14, v93, v94);
}

uint64_t sub_1000C38C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 368);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1000C3924, 0, 0);
}

uint64_t sub_1000C3924()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned __int8 v17;
  void *v18;
  id v19;
  NSString v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;

  v1 = *(unsigned __int8 *)(v0 + 440);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D78C(v2, (uint64_t)static Logger.actions);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67109120;
    *(_DWORD *)(v6 + 4) = v1;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Cellular data enablement: %{BOOL}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (!v1)
  {
    v22 = *(_QWORD *)(v0 + 352);
    v23 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 312);
    v24 = *(_QWORD *)(v0 + 320);
    v27 = *(_QWORD *)(v0 + 296);
    v26 = *(_QWORD *)(v0 + 304);
    v29 = *(_QWORD *)(v0 + 264);
    v28 = *(_QWORD *)(v0 + 272);
    v30 = *(_QWORD *)(v0 + 240);
    v57 = *(_QWORD *)(v0 + 232);
    v59 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v12(v10, *(_QWORD *)(v0 + 168), v11);
  v13 = sub_10000B4C8(&qword_10054D1D8);
  if ((swift_dynamicCast(v0 + 112, v10, v11, v13, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_100011694(v0 + 112, &qword_10054D1E0);
    goto LABEL_13;
  }
  sub_1000B47A8((__int128 *)(v0 + 112), v0 + 72);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 104);
  sub_10000D900((_QWORD *)(v0 + 72), v14);
  if (!sub_10018D9C8(v14, v15))
    goto LABEL_10;
  v16 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v17 = objc_msgSend(v16, "prefersSpatialDownloads");

  if ((v17 & 1) != 0
    || (v18 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v18,
        v19 = objc_msgSend(v18, "standardUserDefaults"),
        v20 = String._bridgeToObjectiveC()(),
        v21 = objc_msgSend(v19, "BOOLForKey:", v20),
        v20,
        v19,
        (v21 & 1) != 0))
  {
LABEL_10:
    sub_100011758((_QWORD *)(v0 + 72));
LABEL_13:
    v32 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v32;
    *v32 = v0;
    v32[1] = sub_1000C40B4;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v33 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 240);
  v35 = *(_QWORD *)(v0 + 216);
  v36 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x8000000100446EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v34, v35);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v37 = *(_QWORD *)(v0 + 248);
  v54 = *(_QWORD *)(v0 + 264);
  v55 = *(_QWORD *)(v0 + 256);
  v39 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 240);
  v41 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 208);
  v43 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 176);
  v58 = *(_QWORD *)(v0 + 200);
  v44 = qword_100561480;
  v45 = (id)qword_100561480;
  v60 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v45);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, v44, v42, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v46;
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
  v12(v54, v43, v60);
  v47 = *(unsigned __int8 *)(v37 + 80);
  v48 = (v47 + 48) & ~v47;
  v49 = swift_allocObject(&unk_1004FFD88, v48 + v55, v47 | 7);
  *(_QWORD *)(v0 + 408) = v49;
  *(_OWORD *)(v49 + 16) = v60;
  *(_QWORD *)(v49 + 32) = v58;
  *(_QWORD *)(v49 + 40) = v56;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v37 + 32))(v49 + v48, v54, v60);
  v50 = type metadata accessor for MainActor(0);
  v51 = swift_retain(v56);
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v51);
  v52 = dispatch thunk of Actor.unownedExecutor.getter(v50, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000C3E14, v52, v53);
}

uint64_t sub_1000C3E14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[51];
  v3 = v0[49];
  v2 = v0[50];
  swift_release(v0[52]);
  sub_10017ED5C(v3, v2, (uint64_t)&unk_10054D1F0, v1, (uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v2);
  swift_release(v1);
  return swift_task_switch(sub_1000C3E8C, 0, 0);
}

uint64_t sub_1000C3E8C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  sub_10000D900(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 424) = v5;
  *v5 = v0;
  v5[1] = sub_1000C3F14;
  return v7(v0 + 16, v2, v3);
}

uint64_t sub_1000C3F14()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_1000C3F68, 0, 0);
}

uint64_t sub_1000C3F68()
{
  uint64_t v0;
  id v1;
  Class isa;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(*(id *)(v0 + 384), "standardUserDefaults");
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v3);

  sub_1000B593C((_QWORD *)(v0 + 16));
  sub_100011758((_QWORD *)(v0 + 72));
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C40B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(*v0 + 432);
  v2 = *v0;
  swift_task_dealloc(v1);
  v3 = *(_QWORD *)(v2 + 352);
  v4 = *(_QWORD *)(v2 + 344);
  v6 = *(_QWORD *)(v2 + 312);
  v5 = *(_QWORD *)(v2 + 320);
  v8 = *(_QWORD *)(v2 + 296);
  v7 = *(_QWORD *)(v2 + 304);
  v9 = *(_QWORD *)(v2 + 272);
  v11 = *(_QWORD *)(v2 + 264);
  v12 = *(_QWORD *)(v2 + 240);
  v13 = *(_QWORD *)(v2 + 232);
  v14 = *(_QWORD *)(v2 + 208);
  swift_task_dealloc(*(_QWORD *)(v2 + 360));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000C41B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_10000B4C8(&qword_10054D180);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 80) & ~v4;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + *(_QWORD *)(v3 + 64) + v7) & ~v7;
  v9 = v4 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100011758((_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v9);
}

uint64_t sub_1000C427C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_10054D180) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t)(v0 + 5);
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v8;
  v12 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_10054D18C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000DC64;
  return sub_1000C2ECC(v9, v10, v11, v12, v2, v3, v4);
}

double sub_1000C4350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21[2];

  v4 = sub_10000B4C8(&qword_100551610);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1000C53BC(a2, (uint64_t)v21);
  v12 = type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_1004FFDB0, v16 + 40, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v7, v4);
  sub_1000B47A8(v21, v17 + v16);
  v18 = sub_10016702C((uint64_t)v10, (uint64_t)&unk_10054D200, v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1000C44D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_10000B4C8(&qword_100551610);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[13] = v8;
  v5[14] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[15] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[16] = v10;
  v5[17] = v11;
  return swift_task_switch(sub_1000C456C, v10, v11);
}

uint64_t sub_1000C456C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t **v18;
  uint64_t (*v20)(uint64_t *, uint64_t, uint64_t);

  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10000D78C(v1, (uint64_t)static Logger.actions);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Will present cellular data enablement alert", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[13];
  v6 = v0[14];
  v8 = v0[11];
  v9 = v0[12];
  v11 = v0[9];
  v10 = (_QWORD *)v0[10];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v11, v8);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_1004FFDD8, v13 + v7, v12 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v6, v8);
  sub_10017F100((uint64_t)sub_1000C55A0, v14, v0 + 2);
  swift_release(v14);
  v15 = v10[3];
  v16 = v10[4];
  sub_10000D900(v10, v15);
  v17 = *(int **)(v16 + 8);
  v20 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v17 + *v17);
  v18 = (uint64_t **)swift_task_alloc(v17[1]);
  v0[18] = (uint64_t)v18;
  *v18 = v0;
  v18[1] = (uint64_t *)sub_1000C4724;
  return v20(v0 + 2, v15, v16);
}

uint64_t sub_1000C4724()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_1000C4770, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_1000C4770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  sub_1000B593C((_QWORD *)(v0 + 16));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C47B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  *(_QWORD *)(v5 + 24) = v9;
  *v9 = v5;
  v9[1] = sub_1000C4824;
  return MusicLibrary.download<A>(_:)(a3, a4, a5);
}

uint64_t sub_1000C4824()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000C4890, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1000C4890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v15;

  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for Logger(0);
  sub_10000D78C(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 32);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v11 = (char *)String.init<A>(describing:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v8 + 4) = sub_1000BA30C(v11, v12, &v15);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Download: perform failed: %{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 32));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C4A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000C4B00, 0, 0);
}

uint64_t sub_1000C4B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1000B0750(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000B0798(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000C4CB4, v18, v19);
  }
}

uint64_t sub_1000C4CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 12, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000BFA00, 0, 0);
}

uint64_t sub_1000C4D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000C4F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054D19C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000C4A54(v7, v8, v2, v3);
}

uint64_t Actions.Download.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.Download.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FFC10, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x8000000100446E70;
  v1 = swift_allocObject(&unk_1004FFC38, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x8000000100446E70;
  return sub_1000B020C;
}

uint64_t (*sub_1000C51DC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FFD38, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x8000000100446E70;
  v1 = swift_allocObject(&unk_1004FFD60, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x8000000100446E70;
  return sub_1000B0870;
}

uint64_t sub_1000C5260()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.Download()
{
  return &type metadata for Actions.Download;
}

ValueMetadata *type metadata accessor for Actions.Download.Context()
{
  return &type metadata for Actions.Download.Context;
}

uint64_t sub_1000C52A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C5310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 48) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10054D1EC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_100012D1C;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  v6[3] = v7;
  *v7 = v6;
  v7[1] = sub_1000C4824;
  return MusicLibrary.download<A>(_:)(v5, v2, v3);
}

double sub_1000C53B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1000C4350(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000C53BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000C5400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_10000B4C8(&qword_100551610);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_100011758((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_1000C5494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_10000B4C8(&qword_100551610) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_10054D1FC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000DC64;
  return sub_1000C44D0(a1, v6, v7, v8, v9);
}

uint64_t sub_1000C553C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000B4C8(&qword_100551610);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C55A0(char a1)
{
  uint64_t v2;
  char v4;

  sub_10000B4C8(&qword_100551610);
  v4 = a1;
  v2 = sub_10000B4C8(&qword_100551610);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

unint64_t sub_1000C5608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005506C0;
  if (!qword_1005506C0)
  {
    v1 = sub_100011650(&qword_100550690);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005506C0);
  }
  return result;
}

uint64_t NSUserDefaults.ValueTransformer.transform.getter(uint64_t a1, uint64_t a2)
{
  swift_retain(a2);
  return a1;
}

uint64_t NSUserDefaults.ValueTransformer.transform.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.color.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain(a4);
  return a3;
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.radius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.init(canEditPlaylist:presentEditPlaylistView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = swift_allocObject(&unk_1004FFE18, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  return a1;
}

uint64_t sub_1000C57A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000C5810, v4, v5);
}

uint64_t sub_1000C5810()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C5848()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C586C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10054D214);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DC64;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10054D210 + dword_10054D210))(v2, v3);
}

uint64_t static Actions.EditPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 25;
  *(_QWORD *)(a5 + 40) = sub_1000B0910;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_10054D220;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_10054D228;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain(a2);
  return swift_retain(a4);
}

uint64_t sub_1000C5934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100075040;
  return v6();
}

uint64_t sub_1000C5988()
{
  uint64_t v0;

  return sub_1000BC388(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1000C5998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 25;
  *(_QWORD *)(a2 + 40) = sub_1000B0910;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_10054D220;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_10054D228;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain(v3);
  return swift_retain(v2);
}

uint64_t Actions.EditPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.EditPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FFE40, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_1004FFE68, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_1000B020C;
}

uint64_t (*sub_1000C5BE4())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FFF60, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_1004FFF88, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_1000B0870;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist()
{
  return &type metadata for Actions.EditPlaylist;
}

uint64_t _s12EditPlaylistO7ContextVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t _s12EditPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *_s12EditPlaylistO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12EditPlaylistO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist.Context()
{
  return &type metadata for Actions.EditPlaylist.Context;
}

uint64_t sub_1000C5E18()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C5E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054D120);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_1000C5F70();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_1000C5F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_10000B4C8(&qword_10054D120);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.unsupportedType(_:))
    {
      v15 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.removalNotPermitted(_:))
      {
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        v15 = 0xD000000000000015;
      }
      else
      {
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.notDownloaded(_:))
        {
          v15 = 0x6E776F6420746F4ELL;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v15;
        }
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.sharedLibrary(_:))
        {
          v15 = 0x61685320656D6F48;
        }
        else
        {
          v15 = 0x206E776F6E6B6E55;
          v16(v6, v2);
        }
      }
      v16(v8, v2);
    }
    return v15;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+RemoveDownload.swift", 38, 2, 109, 0);
  __break(1u);
  return result;
}

uint64_t static Actions.RemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  v6 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 56) = v2;
  *(_BYTE *)(a2 + 64) = 40;
  *(_QWORD *)(a2 + 72) = sub_1000C62F8;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10054D260;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10054D268;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  return swift_retain(v2);
}

uint64_t sub_1000C62F8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t (**)(uint64_t))a1;
  result = (*(uint64_t (**)(void))(a1 + 16))();
  if (v3 == 1)
  {
    v4 = v1(result);
    v6 = v5;
    sub_1000B5000(v4, v5);
    if (v6 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_1000C6360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100012D1C;
  return v6();
}

uint64_t sub_1000C63B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000DC64;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t Actions.RemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x442065766F6D6552, 0xEF64616F6C6E776FLL);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004FFFC8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1004FFFF0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_1000B020C;
}

uint64_t (*sub_1000C6614())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100500190, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1005001B8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_1000B0870;
}

uint64_t Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t result;
  uint64_t (**v52)();
  uint64_t (*v53)();
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)();
  char *v63;
  uint64_t v64;
  uint64_t (**v65)();
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;

  v67 = a6;
  v64 = a3;
  v65 = a7;
  v69 = a2;
  v11 = *(_QWORD *)(a4 - 8);
  v12 = __chkstk_darwin(a1);
  v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v59 = (char *)&v54 - v15;
  v16 = __chkstk_darwin(v14);
  v58 = (char *)&v54 - v17;
  v19 = v18;
  v60 = v18;
  __chkstk_darwin(v16);
  v21 = (char *)&v54 - v20;
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v68((char *)&v54 - v20, a1, v22);
  v61 = *(unsigned __int8 *)(v11 + 80);
  v23 = (v61 + 40) & ~v61;
  v66 = v61 | 7;
  v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  v56 = v24;
  v57 = v24 + 8;
  v26 = (_QWORD *)swift_allocObject(&unk_100500018, v24 + 8, v61 | 7);
  v26[2] = a4;
  v26[3] = a5;
  v27 = a5;
  v54 = a5;
  v26[4] = a6;
  v28 = v26;
  v62 = (uint64_t (*)())v26;
  v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v29((char *)v26 + v23, v21, a4);
  v30 = v29;
  v55 = (void (*)(char *, uint64_t, uint64_t))v29;
  v31 = v68;
  v32 = v69;
  *(_QWORD *)((char *)v28 + v24) = v69;
  v33 = v58;
  v31(v58, a1, a4);
  v34 = v25;
  v35 = v66;
  v36 = (uint64_t (*)())swift_allocObject(&unk_100500040, v34, v66);
  *((_QWORD *)v36 + 2) = a4;
  *((_QWORD *)v36 + 3) = v27;
  v37 = v67;
  *((_QWORD *)v36 + 4) = v67;
  v30((char *)v36 + v23, v33, a4);
  v38 = v56;
  *(_QWORD *)((char *)v36 + v56) = v32;
  v39 = v59;
  v40 = a1;
  v68(v59, a1, a4);
  v41 = (uint64_t (*)())swift_allocObject(&unk_100500068, v57, v35);
  v42 = v54;
  *((_QWORD *)v41 + 2) = a4;
  *((_QWORD *)v41 + 3) = v42;
  *((_QWORD *)v41 + 4) = v37;
  v43 = v55;
  v55((char *)v41 + v23, (uint64_t)v39, a4);
  v44 = v69;
  *(_QWORD *)((char *)v41 + v38) = v69;
  v45 = v63;
  v43(v63, v40, a4);
  v46 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v47 = *(unsigned __int8 *)(v46 + 80);
  v48 = (v47 + 40) & ~v47;
  v49 = (*(_QWORD *)(v46 + 64) + v61 + v48) & ~v61;
  v50 = (uint64_t (*)())swift_allocObject(&unk_100500090, v49 + v60, v66 | v47);
  *((_QWORD *)v50 + 2) = a4;
  *((_QWORD *)v50 + 3) = v42;
  *((_QWORD *)v50 + 4) = v67;
  sub_1000B03D0(v64, (uint64_t)v50 + v48);
  v43((char *)v50 + v49, (uint64_t)v45, a4);
  result = swift_retain_n(v44, 2);
  v52 = v65;
  v53 = v62;
  *v65 = sub_1000C6D84;
  v52[1] = v53;
  v52[2] = (uint64_t (*)())sub_1000C6DBC;
  v52[3] = v36;
  v52[4] = (uint64_t (*)())&unk_10054D278;
  v52[5] = v41;
  v52[6] = (uint64_t (*)())&unk_10054D288;
  v52[7] = v50;
  return result;
}

uint64_t sub_1000C6994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)swift_task_alloc(dword_10054D2C4);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_100012D1C;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v8[2] = v9;
  *v9 = v8;
  v9[1] = sub_10000DC64;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t sub_1000C6A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000C6AD8, 0, 0);
}

uint64_t sub_1000C6AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1000B0750(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000B0798(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000C6C8C, v18, v19);
  }
}

uint64_t sub_1000C6C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 29, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000BFA00, 0, 0);
}

uint64_t sub_1000C6D5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C6D84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1000BC558((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t sub_1000C6DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1000C5E48(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 32));
}

uint64_t sub_1000C6DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1000C6E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + v5;
  v7 = *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_10054D274);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10000DC64;
  return sub_1000C6994(v6, v7, v2, v3);
}

uint64_t sub_1000C6EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000C70B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054D284);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000C6A2C(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload()
{
  return &type metadata for Actions.RemoveDownload;
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload.Context()
{
  return &type metadata for Actions.RemoveDownload.Context;
}

uint64_t static Actions.RemoveFromPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 41;
  *(_QWORD *)(a2 + 56) = sub_1000B0910;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10054D2C8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10054D2D0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t (*Actions.RemoveFromPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1005001F8, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_100500220, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_1000B020C;
}

uint64_t (*sub_1000C72AC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100500398, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_1005003C0, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_1000B0870;
}

uint64_t Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t (**v48)();
  char *v49;
  uint64_t v50;

  v46 = a3;
  v47 = a4;
  v42 = a2;
  v48 = a5;
  v49 = a1;
  v43 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v43 - 8);
  v50 = *(_QWORD *)(v6 + 64);
  v7 = __chkstk_darwin(v43);
  v45 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - v9;
  v40 = (char *)&v39 - v9;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v39 - v15, a2, v11);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = v17 | 7;
  v44 = swift_allocObject(&unk_100500248, v18 + v13, v17 | 7);
  v20 = v44 + v18;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v21(v20, v16, v11);
  v22 = v10;
  v23 = v43;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v49, v43);
  v21((uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v11);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = (v50 + v17 + v25) & ~v17;
  v27 = swift_allocObject(&unk_100500270, v26 + v13, v19 | v24);
  *(_QWORD *)(v27 + 16) = v46;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v29 = v23;
  v28(v27 + v25, v40, v23);
  v21(v27 + v26, v41, v11);
  v30 = v45;
  v28((uint64_t)v45, v49, v29);
  v31 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 16) & ~v32;
  v34 = (*(_QWORD *)(v31 + 64) + v24 + v33) & ~v24;
  v35 = swift_allocObject(&unk_100500298, v34 + v50, v24 | v32 | 7);
  sub_1000B03D0(v47, v35 + v33);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v35 + v34, v30, v29);
  v37 = v48;
  v38 = v44;
  *v48 = sub_1000C8088;
  v37[1] = (unint64_t (*)())v38;
  v37[2] = (unint64_t (*)())&unk_10054D2E0;
  v37[3] = (unint64_t (*)())v27;
  v37[4] = (unint64_t (*)())&unk_10054D2F0;
  v37[5] = (unint64_t (*)())v35;
  return result;
}

unint64_t sub_1000C75C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v0 = type metadata accessor for Playlist.EditableComponents(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8((uint64_t *)&unk_100550A80);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_100011694((uint64_t)v7, (uint64_t *)&unk_100550A80);
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    v8 = sub_1000C848C();
    v9 = dispatch thunk of SetAlgebra.isSuperset(of:)(v3, v0, v8);
    v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v3, v0);
    v10(v7, v0);
    if ((v9 & 1) != 0)
      return 0;
  }
  return 0xD00000000000001ALL;
}

uint64_t sub_1000C7700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[3] = a2;
  v3[4] = a3;
  v6 = type metadata accessor for Playlist(0);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[6] = v7;
  v3[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v3[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[9] = v9;
  v3[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove(_:from:)[1]);
  v3[11] = v10;
  *v10 = v3;
  v10[1] = sub_1000C77BC;
  return MusicLibrary.remove(_:from:)(a2, a3);
}

uint64_t sub_1000C77BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000C7840, 0, 0);
  v5 = *(_QWORD *)(v3 + 56);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1000C7840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  os_log_type_t type;
  NSObject *log;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v37 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = type metadata accessor for Logger(0);
  sub_10000D78C(v9, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v37, v7, v6);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 48);
  if (v13)
  {
    log = v11;
    v21 = swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(96, -1);
    v39 = v38;
    *(_DWORD *)v21 = 136446722;
    v22 = (char *)Playlist.Entry.description.getter();
    type = v12;
    v24 = v23;
    *(_QWORD *)(v21 + 4) = sub_1000BA30C(v22, v23, &v39);
    swift_bridgeObjectRelease(v24);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = (char *)Playlist.description.getter(v25);
    v28 = v27;
    *(_QWORD *)(v21 + 14) = sub_1000BA30C(v26, v27, &v39);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v20);
    *(_WORD *)(v21 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v14;
    swift_errorRetain(v14);
    v29 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v30 = (char *)String.init<A>(describing:)(v0 + 16, v29);
    v32 = v31;
    *(_QWORD *)(v21 + 24) = sub_1000BA30C(v30, v31, &v39);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to remove entry=%{public}s from playlist=%{public}s with error=%{public}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    swift_errorRelease(v14);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v20);
    swift_errorRelease(v14);
    swift_errorRelease(v14);

  }
  v33 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C7B08(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_10000B4C8(&qword_10054C950);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10054CD28);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000C7BB0, 0, 0);
}

uint64_t sub_1000C7BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_1000B0750(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 120), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = sub_1000B0798(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    v9 = Playlist.Entry.catalogID.getter(v8);
    *(_QWORD *)(v0 + 152) = v10;
    *(_QWORD *)(v0 + 160) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = Playlist.Entry.metricsContentType.getter();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100427F90;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 168) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 176) = v15;
    *(_QWORD *)(v0 + 184) = v16;
    *(_WORD *)(v0 + 200) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000C7D54, v19, v20);
  }
}

uint64_t sub_1000C7D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 192));
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_1000D44DC(v9, v4, 5, 31, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000C7E48, 0, 0);
}

uint64_t sub_1000C7E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000B0834(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO18RemoveFromPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100447010);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000C8004()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C8028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1000C8088()
{
  type metadata accessor for Playlist(0);
  return sub_1000C75C0();
}

uint64_t sub_1000C80B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000C8170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_10054D2DC);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10000DC64;
  return sub_1000C7700(v7, v8, v9);
}

uint64_t sub_1000C820C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_1000C83D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_10054D2EC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000C7B08(v7, v8);
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist()
{
  return &type metadata for Actions.RemoveFromPlaylist;
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist.Context()
{
  return &type metadata for Actions.RemoveFromPlaylist.Context;
}

unint64_t sub_1000C848C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054D328;
  if (!qword_10054D328)
  {
    v1 = type metadata accessor for Playlist.EditableComponents(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Playlist.EditableComponents, v1);
    atomic_store(result, (unint64_t *)&qword_10054D328);
  }
  return result;
}

uint64_t sub_1000C84E0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001CLL;
  else
    v3 = 0xD00000000000001DLL;
  if (v2)
    v4 = 0x8000000100446420;
  else
    v4 = 0x8000000100446440;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001CLL;
  else
    v5 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100446440;
  else
    v6 = 0x8000000100446420;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1000C8588(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1000C85D8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1000C863C + 4 * byte_10042AAE4[a2]))(v2 + 16);
}

uint64_t sub_1000C863C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001004460E0;
  if (a1 == v1 + 16 && v2 == 0x80000001004460E0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 16, 0x80000001004460E0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_1000C86D8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C8734(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C879C + 4 * byte_10042AAEC[a2]))(0x6C61727475656ELL);
}

uint64_t sub_1000C879C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61727475656ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C61727475656ELL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_1000C884C(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  v2 = 0xE900000000000073;
  v3 = 7105633;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x657469726F766166;
    else
      v4 = 0x64616F6C6E776F64;
    v5 = 0xE900000000000073;
    v6 = a2;
    if (a2)
    {
LABEL_6:
      if (v6 == 1)
        v3 = 0x657469726F766166;
      else
        v3 = 0x64616F6C6E776F64;
      if (v4 != v3)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 7105633;
    v6 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xE300000000000000;
  if (v4 != 7105633)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v3, v2, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v5 != v2)
    goto LABEL_15;
  v7 = 1;
  v2 = v5;
LABEL_16:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  return v7 & 1;
}

uint64_t sub_1000C894C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64657463656C6573;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 7105633;
    else
      v4 = 0x6E6F6973726576;
    if (v3 == 1)
      v5 = 0xE300000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 7105633;
      else
        v2 = 0x6E6F6973726576;
      if (v6 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x64657463656C6573;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x64657463656C6573)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1000C8A54(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE0064616F6C6E77;
  v3 = 0x6F4465766F6D6572;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000011;
    else
      v5 = 0x6C65636E6163;
    if (v4 == 1)
      v6 = 0x80000001004455F0;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6F4465766F6D6572;
  v6 = 0xEE0064616F6C6E77;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x6C65636E6163;
    if (v7 == 1)
      v2 = 0x80000001004455F0;
    else
      v2 = 0xE600000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_1000C8B74(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C8BE0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C8C54 + 4 * byte_10042AAF5[a2]))(0x656C746974);
}

uint64_t sub_1000C8C54(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_1000C8D14(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1000C8D60(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1000C8DC4 + 4 * byte_10042AAFE[a2]))(v2 + 11);
}

uint64_t sub_1000C8DC4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001004461D0;
  if (a1 == v1 + 11 && v2 == 0x80000001004461D0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 11, 0x80000001004461D0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_1000C8E60(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x8000000100446160;
  else
    v4 = 0x8000000100446180;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100446180;
  else
    v6 = 0x8000000100446160;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1000C8F0C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C8F5C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C8FE4 + 4 * byte_10042AB08[a2]))(0x6F4E6E657473696CLL);
}

uint64_t sub_1000C8FE4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4E6E657473696CLL && v1 == 0xE900000000000077)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F4E6E657473696CLL, 0xE900000000000077, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000077);
  return v2 & 1;
}

void sub_1000C90BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C910C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C91A8 + 4 * byte_10042AB15[a2]))(0x756F795F726F66);
}

uint64_t sub_1000C91A8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x756F795F726F66 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x756F795F726F66, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_1000C9298(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C92F4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C9364 + 4 * byte_10042AB20[a2]))(0x63697373616C63);
}

uint64_t sub_1000C9364(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x63697373616C63 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x63697373616C63, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_1000C941C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1000C9468(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C94D4 + 4 * byte_10042AB28[a2]))(0x6E776F6E6B6E75);
}

uint64_t sub_1000C94D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E776F6E6B6E75 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_1000C9584(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001004465E0;
  else
    v4 = 0x8000000100446600;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100446600;
  else
    v6 = 0x80000001004465E0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1000C962C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D75626C61;
  else
    v3 = 0x747369747261;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D75626C61;
  else
    v5 = 0x747369747261;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1000C96C8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E69646E6570;
  else
    v3 = 1852403562;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E69646E6570;
  else
    v5 = 1852403562;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1000C9764(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x7972617262696CLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7473696C79616C70;
  else
    v5 = 0x7972617262696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1000C9808(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C9850(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C98BC + 4 * byte_10042AB30[a2]))(0x747369747241);
}

uint64_t sub_1000C98BC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x747369747241 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x747369747241, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_1000C996C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000C99AC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000C9A24 + 4 * byte_10042AB38[a2]))(0x6C616974726170);
}

uint64_t sub_1000C9A24(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C616974726170 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C616974726170, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t LaunchURL.Resolver.option.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Actions.SortPlaylist.Context.sortOption.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t Actions.SortPlaylist.Context.currentSort.getter()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 2))
    v1 = 256;
  else
    v1 = 0;
  return v1 | *(unsigned __int8 *)(v0 + 1);
}

uint64_t Actions.SortPlaylist.Context.currentSort.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  *(_BYTE *)(v1 + 2) = BYTE1(result) & 1;
  return result;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.currentSort.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_1000C9B98(v3, a1);
}

uint64_t type metadata accessor for Actions.SortPlaylist.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_10054D418;
  if (!qword_10054D418)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.SortPlaylist.Context);
  return result;
}

uint64_t sub_1000C9B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054D330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_1000C9C10(a1, v3);
}

uint64_t sub_1000C9C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054D330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.playlistVariant.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.didSelectSort.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

void Actions.SortPlaylist.Context.didSelectSort.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  swift_release(v5[1]);
  *v5 = a1;
  v5[1] = a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.didSelectSort.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.init(sortOption:currentSort:playlistVariant:didSelectSort:)@<X0>(char a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v12 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v13 = (uint64_t)&a6[*(int *)(v12 + 24)];
  v14 = type metadata accessor for Playlist.Variant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = HIBYTE(a2) & 1;
  result = sub_1000C9C10(a3, v13);
  v16 = &a6[*(int *)(v12 + 28)];
  *v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t static Actions.SortPlaylist.action(context:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t result;
  uint64_t (**v17)();
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  sub_1000C9F28((uint64_t)a1, (uint64_t)&v20 - v9);
  v11 = 0x1D1B1C1E1FuLL >> (8 * *a1);
  sub_1000C9F28((uint64_t)a1, (uint64_t)v8);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_100500400, v13 + v6, v12 | 7);
  sub_1000CA180((uint64_t)v8, v14 + v13);
  v15 = (int *)sub_10000B4C8(&qword_10054D350);
  *(_BYTE *)(a2 + v15[13]) = v11;
  result = sub_1000CA180((uint64_t)v10, a2);
  *(_QWORD *)(a2 + v15[15]) = 0x4014000000000000;
  v17 = (uint64_t (**)())(a2 + v15[14]);
  *v17 = variable initialization expression of _NSRange.NSRangeIterator.current;
  v17[1] = 0;
  v18 = (_QWORD *)(a2 + v15[16]);
  *v18 = &unk_10054D340;
  v18[1] = v14;
  v19 = (_QWORD *)(a2 + v15[17]);
  *v19 = &unk_10054D348;
  v19[1] = 0;
  return result;
}

uint64_t sub_1000C9F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C9F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a3;
  return swift_task_switch(sub_1000C9F84, 0, 0);
}

uint64_t sub_1000C9F84()
{
  uint64_t v0;
  unsigned int v1;
  char v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = **(unsigned __int8 **)(v0 + 16);
  *(_BYTE *)(v0 + 52) = v1;
  sub_1000C8B74(v1);
  if ((v2 & 1) != 0)
  {
    v3 = 0;
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_BYTE *)(v4 + 2);
    v6 = 256;
  }
  else
  {
    v6 = 0;
    v5 = v1 < 4;
    v4 = *(_QWORD *)(v0 + 16);
    v3 = 256;
  }
  *(_BYTE *)(v0 + 53) = v5;
  *(_WORD *)(v0 + 50) = v3;
  *(_WORD *)(v0 + 48) = v6;
  v7 = (_QWORD *)(v4 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  *(_QWORD *)(v0 + 24) = *v7;
  *(_QWORD *)(v0 + 32) = v7[1];
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000CA05C, v9, v10);
}

uint64_t sub_1000CA05C()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  unsigned int v2;
  unsigned __int16 *v3;
  int v4;

  v1 = *(void (**)(_QWORD))(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 52);
  if (*(_BYTE *)(v0 + 53))
    v3 = (unsigned __int16 *)(v0 + 50);
  else
    v3 = (unsigned __int16 *)(v0 + 48);
  v4 = *v3;
  swift_release(*(_QWORD *)(v0 + 40));
  v1(v4 | v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CA0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000CA180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CA1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actions.SortPlaylist.Context(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_10054D33C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DC64;
  v4[2] = v3;
  return swift_task_switch(sub_1000C9F84, 0, 0);
}

uint64_t Actions.SortPlaylist.TrackListSort.init(option:isAscending:)(unsigned __int8 a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return v2 & 0xFFFFFF00 | a1;
}

void Actions.SortPlaylist.Context.menuItemTitle.getter()
{
  char *v0;
  char v1;
  uint64_t v2;

  v1 = *v0;
  v2 = (uint64_t)&v0[*(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24)];
  sub_1000CA288(v2, v1);
}

void sub_1000CA288(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  v11[1] = a1;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v11[3] = *(_QWORD *)(v5 - 8);
  v11[4] = v5;
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin(v7);
  v8 = sub_10000B4C8(&qword_10054D490);
  __chkstk_darwin(v8);
  v9 = sub_10000B4C8(&qword_10054D330);
  v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  __asm { BR              X10 }
}

uint64_t sub_1000CA420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v0, enum case for Playlist.Variant.favoriteSongs(_:), v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v0, 0, 1, v1);
  v10 = v5 + *(int *)(v3 + 48);
  sub_1000C9B98(*(_QWORD *)(v9 - 120), v5);
  sub_1000C9B98(v0, v10);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v11(v5, 1, v1) != 1)
  {
    sub_1000C9B98(v5, v8);
    if (v11(v10, 1, v1) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v10, v1);
      v14 = sub_1000CC9F8();
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v1, v14);
      v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v16(v6, v1);
      sub_100011694(v0, &qword_10054D330);
      v16(v8, v1);
      sub_100011694(v5, &qword_10054D330);
      if ((v15 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v12 = 0x7473696C79616C50;
      v13 = 0x726564724F20;
      goto LABEL_10;
    }
    sub_100011694(v0, &qword_10054D330);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v1);
LABEL_6:
    sub_100011694(v5, &qword_10054D490);
    goto LABEL_7;
  }
  sub_100011694(v0, &qword_10054D330);
  if (v11(v10, 1, v1) != 1)
    goto LABEL_6;
  sub_100011694(v5, &qword_10054D330);
LABEL_9:
  v12 = 0x7661462065746144;
  v13 = 0x64657469726FLL;
LABEL_10:
  String.LocalizationValue.init(stringLiteral:)(v12, v13 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000);
  v18 = *(_QWORD *)(v9 - 104);
  v17 = *(_QWORD *)(v9 - 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, v2, v17);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v19 = qword_100561480;
  v20 = (id)qword_100561480;
  v21 = *(_QWORD *)(v9 - 112);
  static Locale.current.getter(v20);
  v22 = String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, v19, v21, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
  return v22;
}

void Actions.SortPlaylist.Context.menuItemImage.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1000CA774@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)&loc_1000CA7D4 + dword_1000CAA44[a1]))(0x656C746974);
}

uint64_t (*sub_1000CA7E4(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    goto LABEL_5;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v3 & 1) != 0)
  {
LABEL_5:
    v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
    if (*(_BYTE *)(v1 + 2) == 1)
    {
      v5 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v6)
        goto LABEL_9;
    }
    else
    {
      v7 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      if (v6)
      {
LABEL_9:
        v8 = objc_msgSend(v6, "imageWithConfiguration:", v4);

LABEL_11:
        v9 = swift_allocObject(&unk_100500428, 24, 7);
        *(_QWORD *)(v9 + 16) = v8;
        v10 = swift_allocObject(&unk_100500450, 32, 7);
        *(_QWORD *)(v10 + 16) = Artwork.Placeholder.image.getter;
        *(_QWORD *)(v10 + 24) = v9;
        swift_retain(v9);
        return sub_1000CB974;
      }
    }

    v8 = 0;
    goto LABEL_11;
  }
  return 0;
}

void Actions.SortPlaylist.Context.menuItemState.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1000CAAC8@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000CAB38 + 4 * byte_10042AB46[a1]))(0x656C746974);
}

uint64_t sub_1000CAB38(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    return 1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(0xE500000000000000);
    return v3 & 1;
  }
}

void sub_1000CAC00(uint64_t a1)
{
  char *v1;

  sub_1000CA288((uint64_t)&v1[*(int *)(a1 + 24)], *v1);
}

uint64_t sub_1000CAC14()
{
  uint64_t v0;
  char v1;

  sub_1000C8B74(*(_BYTE *)(v0 + 1));
  return v1 & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

_UNKNOWN **static Actions.SortPlaylist.TrackListSort.Option.allCases.getter()
{
  return &off_1004FB830;
}

uint64_t Actions.SortPlaylist.TrackListSort.Option.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1000CAC94 + 4 * byte_10042AB4B[a1]))(0x7473696C79616C70, 0xED0000726564724FLL);
}

uint64_t sub_1000CAC94()
{
  return 0x656C746974;
}

uint64_t sub_1000CACA8()
{
  return 0x747369747261;
}

uint64_t sub_1000CACBC()
{
  return 0x6D75626C61;
}

uint64_t sub_1000CACD0()
{
  return 0x44657361656C6572;
}

uint64_t sub_1000CACF0(char *a1)
{
  char v1;

  sub_1000C8B74(*a1);
  return v1 & 1;
}

void sub_1000CAD10()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1000CAD68()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_1000CADEC()
{
  __asm { BR              X10 }
}

uint64_t sub_1000CAE34(uint64_t a1)
{
  String.hash(into:)(a1, 0x656C746974, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_1000CAEA4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1000CAEF8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1000CAF7C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000CAFA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1000CAFE4 + 4 * byte_10042AB5F[*v0]))();
}

void sub_1000CAFE4(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_1000CAFFC(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747261;
  a1[1] = 0xE600000000000000;
}

void sub_1000CB014(_QWORD *a1@<X8>)
{
  *a1 = 0x6D75626C61;
  a1[1] = 0xE500000000000000;
}

void sub_1000CB02C(_QWORD *a1@<X8>)
{
  *a1 = 0x44657361656C6572;
  a1[1] = 0xEB00000000657461;
}

uint64_t sub_1000CB050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1000CC970();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1000CB0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1000CC970();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1000CB0F8(_QWORD *a1@<X8>)
{
  *a1 = &off_1004FB858;
}

void Actions.SortPlaylist.TrackListSort.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_1000CB15C()
{
  __int16 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
}

void static Actions.SortPlaylist.TrackListSort.__derived_struct_equals(_:_:)(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1000CB25C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000CB2CC + 4 * byte_10042AB6E[a1]))(0x656C746974);
}

uint64_t sub_1000CB2CC(uint64_t a1)
{
  __int16 v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t result;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(0xE500000000000000);
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  return ((v1 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

uint64_t sub_1000CB3A8()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E656373417369;
  else
    return 0x6E6F6974706FLL;
}

uint64_t sub_1000CB3E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1000CBA4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000CB40C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000CB9C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CB434(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000CB9C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Actions.SortPlaylist.TrackListSort.encode(to:)(_QWORD *a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = sub_10000B4C8(&qword_10054D358);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_1000CB9C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v11, v9, v10);
  v17 = a2;
  v16 = 0;
  v12 = sub_1000CBA08();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v16, v5, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v12);
  if (!v2)
  {
    v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(HIBYTE(a2) & 1, &v15, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void Actions.SortPlaylist.TrackListSort.hashValue.getter(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_1000CB5E4()
{
  __int16 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
  return Hasher._finalize()();
}

uint64_t Actions.SortPlaylist.TrackListSort.init(from:)(_QWORD *a1)
{
  return sub_1000CBB4C(a1) & 0x1FF;
}

void sub_1000CB68C()
{
  char *v0;

  Actions.SortPlaylist.TrackListSort.hashValue.getter(*v0);
}

void sub_1000CB6A8()
{
  __asm { BR              X10 }
}

void sub_1000CB6FC()
{
  Swift::UInt8 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
}

void sub_1000CB784()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1000CB7E0()
{
  Swift::UInt8 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

uint64_t sub_1000CB874@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1000CBB4C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1000CB8A4(_QWORD *a1)
{
  unsigned __int8 *v1;
  __int16 v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  return Actions.SortPlaylist.TrackListSort.encode(to:)(a1, v2 | *v1);
}

uint64_t sub_1000CB8D0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1000C8B74(*(_BYTE *)a1);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t sub_1000CB908()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *Artwork.Placeholder.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_1000CB950()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CB974()
{
  uint64_t v0;

  return sub_1000DE55C(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FB798, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_1000CB9C4()
{
  unint64_t result;

  result = qword_10054D360;
  if (!qword_10054D360)
  {
    result = swift_getWitnessTable("YX\r", &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10054D360);
  }
  return result;
}

unint64_t sub_1000CBA08()
{
  unint64_t result;

  result = qword_10054D368;
  if (!qword_10054D368)
  {
    result = swift_getWitnessTable("=Z\r", &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10054D368);
  }
  return result;
}

uint64_t sub_1000CBA4C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6E6F6974706FLL && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974706FLL, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x646E656373417369 && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease(0xEB00000000676E69);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x646E656373417369, 0xEB00000000676E69, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1000CBB4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  char v12;
  int v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v3 = sub_10000B4C8(&qword_10054D480);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000D900(a1, v7);
  v9 = sub_1000CB9C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v9, v7, v8);
  if (v1)
    return sub_100011758(a1);
  v17 = 0;
  v10 = sub_1000CC9B4();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v18, &type metadata for Actions.SortPlaylist.TrackListSort.Option, &v17, v3, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v10);
  v11 = v18;
  v16 = 1;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100011758(a1);
  if ((v12 & 1) != 0)
    v14 = 256;
  else
    v14 = 0;
  return v14 | v11;
}

unint64_t sub_1000CBCC0()
{
  unint64_t result;

  result = qword_10054D3A0;
  if (!qword_10054D3A0)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10054D3A0);
  }
  return result;
}

unint64_t sub_1000CBD08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054D3A8;
  if (!qword_10054D3A8)
  {
    v1 = sub_100011650(&qword_10054D3B0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10054D3A8);
  }
  return result;
}

unint64_t sub_1000CBD58()
{
  unint64_t result;

  result = qword_10054D3B8;
  if (!qword_10054D3B8)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for Actions.SortPlaylist.TrackListSort, &type metadata for Actions.SortPlaylist.TrackListSort);
    atomic_store(result, (unint64_t *)&qword_10054D3B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist()
{
  return &type metadata for Actions.SortPlaylist;
}

_QWORD *_s12SortPlaylistO7ContextVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Playlist.Variant(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_10000B4C8(&qword_10054D330);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 28);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v13 = v16[1];
    *v15 = *v16;
    v15[1] = v13;
  }
  swift_retain(v13);
  return v4;
}

uint64_t _s12SortPlaylistO7ContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Playlist.Variant(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t _s12SortPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10000B4C8(&qword_10054D330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  return a1;
}

_BYTE *_s12SortPlaylistO7ContextVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_10000B4C8(&qword_10054D330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v17[1];
  v19 = v16[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v18);
  swift_release(v19);
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10000B4C8(&qword_10054D330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_10000B4C8(&qword_10054D330);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = *(_QWORD *)(a1 + v15 + 8);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_release(v16);
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000CC398);
}

uint64_t sub_1000CC398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10000B4C8(&qword_10054D330);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s12SortPlaylistO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000CC428);
}

uint64_t sub_1000CC428(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10000B4C8(&qword_10054D330);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_1000CC4A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10042ADC8;
  v4[1] = &unk_10042ADE0;
  sub_1000CC530(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1000CC530(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10054D428)
  {
    v2 = type metadata accessor for Playlist.Variant(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10054D428);
  }
}

_WORD *_s12SortPlaylistO13TrackListSortVwCP(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s12SortPlaylistO13TrackListSortVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000CC680 + 4 * byte_10042AB87[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1000CC6B4 + 4 * byte_10042AB82[v4]))();
}

uint64_t sub_1000CC6B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1000CC6BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1000CC6C4);
  return result;
}

uint64_t sub_1000CC6D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1000CC6D8);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1000CC6DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1000CC6E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort;
}

uint64_t _s12SortPlaylistO13TrackListSortV6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1000CC74C + 4 * byte_10042AB91[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1000CC780 + 4 * byte_10042AB8C[v4]))();
}

uint64_t sub_1000CC780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000CC788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000CC790);
  return result;
}

uint64_t sub_1000CC79C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000CC7A4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1000CC7A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000CC7B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort.Option()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort.Option;
}

uint64_t _s12SortPlaylistO13TrackListSortV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000CC818 + 4 * byte_10042AB9B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000CC84C + 4 * byte_10042AB96[v4]))();
}

uint64_t sub_1000CC84C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000CC854(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000CC85CLL);
  return result;
}

uint64_t sub_1000CC868(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000CC870);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000CC874(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000CC87C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12SortPlaylistO13TrackListSortV10CodingKeysOMa()
{
  return &_s12SortPlaylistO13TrackListSortV10CodingKeysON;
}

unint64_t sub_1000CC89C()
{
  unint64_t result;

  result = qword_10054D460;
  if (!qword_10054D460)
  {
    result = swift_getWitnessTable(byte_10042AEA8, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10054D460);
  }
  return result;
}

unint64_t sub_1000CC8E4()
{
  unint64_t result;

  result = qword_10054D468;
  if (!qword_10054D468)
  {
    result = swift_getWitnessTable(byte_10042AE18, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10054D468);
  }
  return result;
}

unint64_t sub_1000CC92C()
{
  unint64_t result;

  result = qword_10054D470;
  if (!qword_10054D470)
  {
    result = swift_getWitnessTable(byte_10042AE40, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10054D470);
  }
  return result;
}

unint64_t sub_1000CC970()
{
  unint64_t result;

  result = qword_10054D478;
  if (!qword_10054D478)
  {
    result = swift_getWitnessTable("mZ\r", &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10054D478);
  }
  return result;
}

unint64_t sub_1000CC9B4()
{
  unint64_t result;

  result = qword_10054D488;
  if (!qword_10054D488)
  {
    result = swift_getWitnessTable("UZ\r", &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10054D488);
  }
  return result;
}

unint64_t sub_1000CC9F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054FFD0;
  if (!qword_10054FFD0)
  {
    v1 = type metadata accessor for Playlist.Variant(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Playlist.Variant, v1);
    atomic_store(result, (unint64_t *)&qword_10054FFD0);
  }
  return result;
}

uint64_t Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v28[4];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(a9, a1, a11);
  v28[0] = a11;
  v28[1] = a12;
  v28[2] = a13;
  v28[3] = a14;
  v21 = (int *)type metadata accessor for Action(0, (uint64_t)v28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(a9 + v21[13], a2, a12);
  *(double *)(a9 + v21[15]) = a10;
  v23 = (_QWORD *)(a9 + v21[14]);
  *v23 = a3;
  v23[1] = a4;
  v24 = (_QWORD *)(a9 + v21[16]);
  *v24 = a5;
  v24[1] = a6;
  v25 = (_QWORD *)(a9 + v21[17]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

{
  _QWORD *v21;

  v21 = (_QWORD *)swift_allocObject(&unk_100500770, 64, 7);
  v21[2] = a11;
  v21[3] = a12;
  v21[4] = a13;
  v21[5] = a14;
  v21[6] = a5;
  v21[7] = a6;
  return Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, a2, a3, a4, (uint64_t)&unk_10054D4B8, (uint64_t)v21, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t type metadata accessor for Action(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Action);
}

uint64_t AnyAction.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Action.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t Action.supportedStatus()(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 56)))(v1);
}

uint64_t Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 340) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  v6 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v4 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 80) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 88) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 96) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 112) = swift_task_alloc(v10);
  v11 = sub_10000B4C8(&qword_10054D4C8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v4 + 128) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 136) = v13;
  *(_QWORD *)(v4 + 144) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  *(_QWORD *)(v4 + 152) = v14;
  v15 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v4 + 160) = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 200) = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 208) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v4 + 216) = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 224) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 232) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 240) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 248) = swift_task_alloc(v19);
  return swift_task_switch(sub_1000CCE04, 0, 0);
}

uint64_t sub_1000CCE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int **v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t type;
  os_log_type_t typea;
  os_log_type_t typeb[8];
  NSObject *log;
  os_log_t loga;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t, uint64_t, __n128);
  int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117[2];

  if ((*(_BYTE *)(v0 + 340) & 1) != 0
    || (v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56)))(), v2 == 1))
  {
    if (qword_10054B9B8 != -1)
      swift_once(&qword_10054B9B8, sub_1000CF368);
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v10 = sub_10000D78C(v4, (uint64_t)qword_10054D498);
    *(_QWORD *)(v0 + 256) = v10;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 264) = v11;
    v11(v3, v10, v4);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16);
    *(_QWORD *)(v0 + 272) = v12;
    v113 = v12;
    v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v6, v8, v9);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 152);
    if (v16)
    {
      v22 = *(_QWORD *)(v0 + 144);
      v97 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 128);
      v109 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 48);
      v105 = *(_QWORD *)(v0 + 208);
      v25 = swift_slowAlloc(12, -1);
      type = swift_slowAlloc(32, -1);
      v117[0] = type;
      *(_DWORD *)v25 = 136446210;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v22, v20 + *(int *)(v24 + 52), v23);
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v20, v24);
      v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, *(_QWORD *)(*(_QWORD *)(v24 + 40) + 8));
      v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v22, v23);
      *(_QWORD *)(v25 + 4) = sub_1000BA30C(v27, v29, v117);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s: performing…", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v109, v105);
    }
    else
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 48));

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    *(_QWORD *)(v0 + 280) = v26;
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 120);
    v106 = *(_QWORD *)(v0 + 72);
    v110 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v0 + 56);
    sub_1000CF7AC();
    v36 = *(double *)(v34 + *(int *)(v35 + 60));
    v37 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v38 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 1, 1, v38);
    v39 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v37, NSRunLoopCommonModes, v33, v36);

    sub_100011694(v33, &qword_10054D4C8);
    *(_QWORD *)(v0 + 16) = v39;
    v40 = type metadata accessor for NSTimer.TimerPublisher(0);
    v41 = sub_1000CF7E8();
    v42 = ConnectablePublisher.autoconnect()(v40, v41);
    v43 = swift_release(v39);
    *(_QWORD *)(v0 + 24) = v42;
    v113(v30, v34, v35, v43);
    LODWORD(v44) = *(_DWORD *)(v31 + 80);
    *(_DWORD *)(v0 + 336) = v44;
    v44 = v44;
    v45 = (v44 + 48) & ~v44;
    v46 = (char *)swift_allocObject(&unk_100500798, v45 + v32, v44 | 7);
    v47 = *(_QWORD *)(v35 + 16);
    *(_QWORD *)(v0 + 288) = v47;
    *((_QWORD *)v46 + 2) = v47;
    *((_QWORD *)v46 + 3) = v110;
    *((_QWORD *)v46 + 4) = v106;
    v48 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v0 + 296) = v48;
    *((_QWORD *)v46 + 5) = v48;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    *(_QWORD *)(v0 + 304) = v49;
    v49(&v46[v45], v30, v35);
    v50 = sub_10000B4C8(&qword_10054D4E0);
    v51 = sub_100012324(&qword_10054D4E8, &qword_10054D4E0, (const char *)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 312) = Publisher<>.sink(receiveValue:)(sub_1000CF834, v46, v50, v51);
    swift_release(v46);
    swift_release(*(_QWORD *)(v0 + 24));
    v52 = (int **)(v34 + *(int *)(v35 + 64));
    v114 = (int *)((char *)*v52 + **v52);
    v53 = (_QWORD *)swift_task_alloc((*v52)[1]);
    *(_QWORD *)(v0 + 320) = v53;
    *v53 = v0;
    v53[1] = sub_1000CD624;
    return ((uint64_t (*)(_QWORD, _QWORD))v114)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 56));
  }
  else
  {
    v55 = v1;
    v56 = v2;
    if (qword_10054B9B8 != -1)
      swift_once(&qword_10054B9B8, sub_1000CF368);
    v57 = *(_QWORD *)(v0 + 248);
    v58 = *(_QWORD *)(v0 + 208);
    v59 = *(_QWORD *)(v0 + 216);
    v60 = *(_QWORD *)(v0 + 200);
    v61 = *(_QWORD *)(v0 + 152);
    v63 = *(_QWORD *)(v0 + 48);
    v62 = *(_QWORD *)(v0 + 56);
    v64 = sub_10000D78C(v58, (uint64_t)qword_10054D498);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v64, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v62, v63);
    sub_1000CFA98(v55, v56);
    v65 = swift_bridgeObjectRetain();
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter();
    v68 = os_log_type_enabled(v66, v67);
    v69 = *(_QWORD *)(v0 + 248);
    v70 = *(_QWORD *)(v0 + 208);
    v71 = *(_QWORD *)(v0 + 216);
    v72 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 152);
    if (v68)
    {
      v111 = *(_QWORD *)(v0 + 208);
      v115 = *(_QWORD *)(v0 + 248);
      log = v66;
      v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 144);
      v76 = *(_QWORD *)(v0 + 128);
      typea = v67;
      v77 = *(_QWORD *)(v0 + 48);
      v107 = *(_QWORD *)(v0 + 216);
      v78 = swift_slowAlloc(22, -1);
      v98 = swift_slowAlloc(64, -1);
      v117[0] = v98;
      *(_DWORD *)v78 = 136446466;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v75, v72 + *(int *)(v77 + 52), v76);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v77);
      v79 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v76, *(_QWORD *)(*(_QWORD *)(v77 + 40) + 8));
      v81 = v80;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      *(_QWORD *)(v78 + 4) = sub_1000BA30C(v79, v81, v117);
      swift_bridgeObjectRelease(v81);
      *(_WORD *)(v78 + 12) = 2082;
      swift_bridgeObjectRetain();
      v82 = (char *)Optional<A>.description.getter(v55, v56);
      v84 = v83;
      sub_1000B5000(v55, v56);
      *(_QWORD *)(v78 + 14) = sub_1000BA30C(v82, v84, v117);
      swift_bridgeObjectRelease(v84);
      sub_1000B5000(v55, v56);
      sub_1000B5000(v55, v56);
      _os_log_impl((void *)&_mh_execute_header, log, typea, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy(v98, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v115, v111);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v73 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 48));
      sub_1000B5000(v55, v56);
      sub_1000B5000(v55, v56);

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v70);
    }
    v85 = sub_1000CFAAC();
    v116 = swift_allocError(&type metadata for ActionError, v85, 0, 0);
    *v86 = v55;
    v86[1] = v56;
    v88 = *(_QWORD *)(v0 + 240);
    v87 = *(_QWORD *)(v0 + 248);
    v90 = *(_QWORD *)(v0 + 224);
    v89 = *(_QWORD *)(v0 + 232);
    v91 = *(_QWORD *)(v0 + 192);
    v92 = *(_QWORD *)(v0 + 200);
    v93 = *(_QWORD *)(v0 + 176);
    v94 = *(_QWORD *)(v0 + 184);
    v95 = *(_QWORD *)(v0 + 168);
    v96 = *(_QWORD *)(v0 + 144);
    v99 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 112);
    loga = *(os_log_t *)(v0 + 104);
    v108 = *(_QWORD *)(v0 + 96);
    v112 = *(_QWORD *)(v0 + 64);
    swift_willThrow(v116);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v91);
    swift_task_dealloc(v94);
    swift_task_dealloc(v93);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v99);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(loga);
    swift_task_dealloc(v108);
    swift_task_dealloc(v112);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000CD624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000CDBFC;
  else
    v3 = sub_1000CD688;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000CD688()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void *object;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  _QWORD v94[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v88 = *(_QWORD *)(v0 + 112);
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v82 = *(_QWORD *)(v0 + 80);
  v85 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 40);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v91(v5, v6, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  v10 = v9(v88, v8, v85);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v92 = v9;
  if (os_log_type_enabled(v11, v12))
  {
    v86 = v12;
    v89 = v11;
    v13 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 104);
    v78 = *(_QWORD *)(v0 + 296);
    v80 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v83 = swift_slowAlloc(64, -1);
    v93 = v83;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v13 + *(int *)(v20 + 52), v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, *(_QWORD *)(v78 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    *(_QWORD *)(v21 + 4) = sub_1000BA30C(v22, v24, &v93);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    v25 = v92(v18, v80, v19);
    v26 = swift_dynamicCast(v25, v18, v19, (char *)&type metadata for () + 8, 6);
    v27 = (char *)0xE000000000000000;
    if ((v26 & 1) != 0)
    {
      v28 = 0;
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 112);
      v36 = *(_QWORD *)(v0 + 96);
      v37 = *(_QWORD *)(v0 + 72);
      v94[0] = 0;
      v94[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v94[1]);
      strcpy((char *)v94, " with result: ");
      HIBYTE(v94[1]) = -18;
      v92(v36, v35, v37);
      v38._countAndFlagsBits = String.init<A>(describing:)(v36, v37);
      object = v38._object;
      String.append(_:)(v38);
      swift_bridgeObjectRelease(object);
      v28 = (char *)v94[0];
      v27 = (char *)v94[1];
    }
    v40 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 72);
    v44 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v21 + 14) = sub_1000BA30C(v28, v27, &v93);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    _os_log_impl((void *)&_mh_execute_header, v89, v86, "%{public}s: perform success%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v83, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 208);
    v30 = *(_QWORD *)(v0 + 216);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 72);
    v34 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 48));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 304);
  v70 = *(_QWORD *)(v0 + 312);
  v67 = *(_QWORD *)(v0 + 288);
  v68 = *(_QWORD *)(v0 + 296);
  v46 = *(unsigned __int8 *)(v0 + 336);
  v71 = *(_QWORD *)(v0 + 248);
  v72 = *(_QWORD *)(v0 + 240);
  v73 = *(_QWORD *)(v0 + 232);
  v74 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 184);
  v75 = *(_QWORD *)(v0 + 200);
  v76 = *(_QWORD *)(v0 + 192);
  v77 = *(_QWORD *)(v0 + 176);
  v79 = *(_QWORD *)(v0 + 168);
  v63 = *(_QWORD *)(v0 + 160);
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v81 = *(_QWORD *)(v0 + 144);
  v66 = *(_QWORD *)(v0 + 128);
  v84 = *(_QWORD *)(v0 + 120);
  v87 = *(_QWORD *)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 96);
  v90 = *(_QWORD *)(v0 + 104);
  v49 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 88);
  v50 = *(_QWORD *)(v0 + 64);
  v51 = *(_QWORD *)(v0 + 72);
  v65 = v50;
  v53 = *(_QWORD *)(v0 + 48);
  v52 = *(_QWORD *)(v0 + 56);
  v54 = *(_QWORD *)(v0 + 40);
  v55 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v50, 1, 1, v55);
  v64(v47, v52, v53);
  v92(v48, v54, v51);
  v56 = (v46 + 64) & ~v46;
  v57 = *(unsigned __int8 *)(v49 + 80);
  v58 = (v63 + v56 + v57) & ~v57;
  v59 = (char *)swift_allocObject(&unk_1005007C0, v58 + v62, v46 | v57 | 7);
  *((_QWORD *)v59 + 2) = 0;
  *((_QWORD *)v59 + 3) = 0;
  *((_QWORD *)v59 + 4) = v67;
  *((_QWORD *)v59 + 5) = v66;
  *((_QWORD *)v59 + 6) = v51;
  *((_QWORD *)v59 + 7) = v68;
  v69(&v59[v56], v47, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(&v59[v58], v48, v51);
  v60 = sub_1000CEC3C(v65, (uint64_t)&unk_10054D4F8, (uint64_t)v59);
  swift_release(v60);
  swift_release(v70);
  sub_100011694(v65, (uint64_t *)&unk_100552B60);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v47);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v84);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v48);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CDBFC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];

  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 264);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v10 = swift_release(*(_QWORD *)(v0 + 312));
  v3(v5, v4, v6, v10);
  v2(v7, v8, v9);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 216);
    v53 = *(_QWORD *)(v0 + 208);
    v55 = *(_QWORD *)(v0 + 224);
    type = v13;
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(64, -1);
    v56[0] = v47;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v15 + *(int *)(v20 + 52), v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v45 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    *(_QWORD *)(v21 + 4) = sub_1000BA30C(v22, v24, v56);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v14;
    swift_errorRetain(v14);
    v25 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v26 = (char *)String.init<A>(describing:)(v0 + 32, v25);
    v28 = v27;
    *(_QWORD *)(v21 + 14) = sub_1000BA30C(v26, v27, v56);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v55, v53);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 328);
    v32 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(v0 + 280))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 48));
    swift_errorRelease(v30);
    swift_errorRelease(v30);

    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v35 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  v40 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 120);
  v48 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 96);
  v54 = *(_QWORD *)(v0 + 64);
  swift_willThrow(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(*(_QWORD *)typea);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CDF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v8[13] = a8;
  v8[14] = v21;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v12 = sub_10000B4C8(&qword_10054D4C8);
  v8[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[2] = a6;
  v8[3] = a7;
  v8[4] = a8;
  v8[5] = v21;
  v13 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  v8[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[17] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[18] = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[19] = swift_task_alloc(v16);
  v8[20] = swift_task_alloc(v16);
  v8[21] = swift_task_alloc(v16);
  v8[22] = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  v8[23] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[24] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[25] = swift_task_alloc(v19);
  v8[26] = swift_task_alloc(v19);
  v8[27] = swift_task_alloc(v19);
  return swift_task_switch(sub_1000CE088, 0, 0);
}

uint64_t sub_1000CE088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int **v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, __n128);
  int *v58;
  uint64_t v59;

  if (qword_10054B9B8 != -1)
    swift_once(&qword_10054B9B8, sub_1000CF368);
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = sub_10000D78C(v2, (uint64_t)qword_10054D498);
  *(_QWORD *)(v0 + 224) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 232) = v9;
  v9(v1, v8, v2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  *(_QWORD *)(v0 + 240) = v10;
  v57 = v10;
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 136);
  if (v14)
  {
    v55 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 96);
    v53 = *(_QWORD *)(v0 + 184);
    v22 = swift_slowAlloc(12, -1);
    v52 = v17;
    v23 = swift_slowAlloc(32, -1);
    v59 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, *(_QWORD *)(v21 + 8));
    v26 = v25;
    *(_QWORD *)(v22 + 4) = sub_1000BA30C(v24, v25, &v59);
    swift_bridgeObjectRelease(v26);
    v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v27(v18, v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    v28 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v28(v55, v53);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v27(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 128));

    v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v15, v16);
  }
  *(_QWORD *)(v0 + 248) = v28;
  *(_QWORD *)(v0 + 256) = v27;
  v29 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 72);
  sub_1000CF7AC();
  v35 = *(double *)(v34 + *(int *)(v32 + 60));
  v54 = *(_OWORD *)(v0 + 104);
  v56 = *(_OWORD *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v33, v35);

  sub_100011694(v33, &qword_10054D4C8);
  *(_QWORD *)(v0 + 48) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_1000CF7E8();
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  v42 = swift_release(v38);
  *(_QWORD *)(v0 + 56) = v41;
  v57(v29, v34, v32, v42);
  v43 = *(unsigned __int8 *)(v30 + 80);
  v44 = (v43 + 48) & ~v43;
  v45 = swift_allocObject(&unk_100500988, v44 + v31, v43 | 7);
  *(_OWORD *)(v45 + 16) = v56;
  *(_OWORD *)(v45 + 32) = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v45 + v44, v29, v32);
  v46 = sub_10000B4C8(&qword_10054D4E0);
  v47 = sub_100012324(&qword_10054D4E8, &qword_10054D4E0, (const char *)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 264) = Publisher<>.sink(receiveValue:)(sub_1000D09D4, v45, v46, v47);
  swift_release(v45);
  swift_release(*(_QWORD *)(v0 + 56));
  v48 = (int **)(v34 + *(int *)(v32 + 68));
  v58 = (int *)((char *)*v48 + **v48);
  v49 = (_QWORD *)swift_task_alloc((*v48)[1]);
  *(_QWORD *)(v0 + 272) = v49;
  *v49 = v0;
  v49[1] = sub_1000CE484;
  return ((uint64_t (*)(_QWORD, _QWORD))v58)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1000CE484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000CE720;
  else
    v3 = sub_1000CE4E8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000CE4E8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 72);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v9 = v1(v6, v8, v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v14 = *(_QWORD *)(v0 + 264);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v16 = *(_QWORD *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 128);
  if (v12)
  {
    v38 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 264);
    v21 = swift_slowAlloc(12, -1);
    v37 = v17;
    v22 = swift_slowAlloc(32, -1);
    v39 = v22;
    *(_DWORD *)v21 = 136446210;
    v35 = v15;
    v23 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v34, *(_QWORD *)(v20 + 8));
    v25 = v24;
    *(_QWORD *)(v21 + 4) = sub_1000BA30C(v23, v24, &v39);
    swift_bridgeObjectRelease(v25);
    v13(v18, v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
    swift_release(v36);

    v35(v38, v37);
  }
  else
  {
    v13(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128));
    swift_release(v14);

    v15(v16, v17);
  }
  v26 = *(_QWORD *)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CE720()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = swift_release(*(_QWORD *)(v0 + 264));
  v3(v5, v4, v6, v10);
  v2(v7, v9, v8);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 280);
    v42 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v45 = *(_QWORD *)(v0 + 200);
    v46 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v44 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = swift_slowAlloc(22, -1);
    v43 = swift_slowAlloc(64, -1);
    v47 = v43;
    *(_DWORD *)v19 = 136446466;
    v20 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v17 + 8));
    v22 = v21;
    *(_QWORD *)(v19 + 4) = sub_1000BA30C(v20, v21, &v47);
    swift_bridgeObjectRelease(v22);
    v42(v15, v16);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 64) = v14;
    swift_errorRetain(v14);
    v23 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v24 = (char *)String.init<A>(describing:)(v0 + 64, v23);
    v26 = v25;
    *(_QWORD *)(v19 + 14) = sub_1000BA30C(v24, v25, &v47);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(v14);
    v46(v45, v44);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 280);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v30 = *(_QWORD *)(v0 + 200);
    v31 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v27);
    v28(v32, v33);
    swift_errorRelease(v27);
    swift_errorRelease(v27);

    v29(v30, v31);
  }
  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(_QWORD *)(v0 + 200);
  v37 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 176);
  v39 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CE9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[4];

  v32 = a4;
  v33[0] = a3;
  v33[1] = a4;
  v33[2] = a5;
  v31 = a6;
  v33[3] = a6;
  v9 = type metadata accessor for Action(0, (uint64_t)v33);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - v11;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10054B9B8 != -1)
    swift_once(&qword_10054B9B8, sub_1000CF368);
  v17 = sub_10000D78C(v13, (uint64_t)qword_10054D498);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v29 = a7;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v30 = v14;
    v24 = v23;
    v33[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v32, *(_QWORD *)(v31 + 8));
    v27 = v26;
    *(_QWORD *)(v22 + 4) = sub_1000BA30C(v25, v26, v33);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v29, (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1000CEC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D0808(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if ((_DWORD)v11 == 1)
  {
    sub_100011694((uint64_t)v8, (uint64_t *)&unk_100552B60);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v19 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_100500960, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v12, v21);
}

uint64_t sub_1000CEDCC(uint64_t *a1, uint64_t *a2)
{
  return _s9MusicCore21ActionSupportedStatusO21__derived_enum_equalsySbAC_ACtFZ_0(*a1, a1[1], *a2, a2[1]);
}

unint64_t ActionError.description.getter(uint64_t a1, void *a2)
{
  void *v4;
  Swift::String v5;

  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a2)
  {
    v4 = a2;
  }
  else
  {
    a1 = 0x6E776F6E6B6E75;
    v4 = (void *)0xE700000000000000;
  }
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = a1;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return 0xD000000000000020;
}

BOOL static ActionError.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
    return a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0);
  if (a4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

uint64_t sub_1000CEEEC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      v6 = v5 == *a2 && v3 == v4;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0) & 1) != 0)
        return 1;
    }
    return 0;
  }
  if (v4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

unint64_t sub_1000CEF50()
{
  uint64_t v0;

  return ActionError.description.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

uint64_t sub_1000CEF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch(sub_1000CEF7C, 0, 0);
}

uint64_t sub_1000CEF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_OWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 64) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_1000CF024;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD00000000000003ALL, 0x8000000100446E10, sub_1000D0A6C, v2, *(_QWORD *)(v0 + 64));
}

uint64_t sub_1000CF024()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000CF098, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1000CF098()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1000CF0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];

  v42 = a6;
  v43 = a8;
  v41 = a5;
  v39 = a4;
  v45 = a2;
  v46 = a3;
  v44 = a1;
  v12 = sub_100011650((uint64_t *)&unk_100550630);
  v40 = a7;
  v13 = type metadata accessor for CheckedContinuation(0, a7, v12, &protocol self-conformance witness table for Error);
  v14 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v37 - v16;
  v47[0] = a5;
  v47[1] = a6;
  v47[2] = a7;
  v47[3] = a8;
  v18 = type metadata accessor for Action(0, (uint64_t)v47);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v22 = (char *)&v37 - v21;
  v23 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  __chkstk_darwin(v23);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v39, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v44, v13);
  v27 = *(unsigned __int8 *)(v19 + 80);
  v28 = (v27 + 80) & ~v27;
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v20 + v28 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_1005009B0, v30 + v15, v27 | v29 | 7);
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  v32 = v42;
  *((_QWORD *)v31 + 4) = v41;
  *((_QWORD *)v31 + 5) = v32;
  v33 = v43;
  *((_QWORD *)v31 + 6) = v40;
  *((_QWORD *)v31 + 7) = v33;
  v34 = v46;
  *((_QWORD *)v31 + 8) = v45;
  *((_QWORD *)v31 + 9) = v34;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[v28], v22, v18);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v31[v30], v17, v38);
  swift_retain(v34);
  v35 = sub_10024D8EC((uint64_t)v25, (uint64_t)&unk_10054D590, (uint64_t)v31);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

uint64_t sub_1000CF2F8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10000DC64;
  return v12(a6, a7);
}

uint64_t sub_1000CF368()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_10054D498);
  sub_10000D78C(v0, (uint64_t)qword_10054D498);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001004466B0, 0x6E6F69746341, 0xE600000000000000);
}

uint64_t _s9MusicCore21ActionSupportedStatusO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 1)
  {
    if (a4 == 1)
      return 1;
  }
  else if (a4 != 1)
  {
    if (a2)
    {
      if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0))
        return 1;
    }
    else
    {
      if (!a4)
        return 1;
      sub_1000B5000(a1, 0);
    }
  }
  return 0;
}

unint64_t _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t inited;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25[64];

  v1 = a1[2];
  if (!v1)
    return 0xD000000000000015;
  v4 = a1[4];
  v3 = a1[5];
  swift_bridgeObjectRetain();
  sub_1000CFA98(v4, v3);
  v5 = v1 - 1;
  v24 = a1;
  if (v1 != 1)
  {
    v8 = a1 + 7;
    while (1)
    {
      v6 = *(v8 - 1);
      v15 = *v8;
      if (v3 == 1 && v15 == 1)
      {
        sub_1000D0CDC(v4, 1);
        v3 = 1;
        goto LABEL_10;
      }
      v16 = sub_10000B4C8(&qword_10054D168);
      inited = swift_initStackObject(v16, v25);
      *(_OWORD *)(inited + 16) = xmmword_100424BA0;
      *(_QWORD *)(inited + 32) = v4;
      *(_QWORD *)(inited + 40) = v3;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v15;
      if (v3 == 1)
      {
        sub_1000CFA98(v6, v15);
      }
      else
      {
        sub_1000CFA98(v6, v15);
        if (v3)
        {
          sub_1000D0CEC(v4, v3);
          sub_1000CFA98(v6, v15);
          sub_1000D0CEC(v4, v3);
          v18 = sub_1000DEAD8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
          v20 = *((_QWORD *)v18 + 2);
          v19 = *((_QWORD *)v18 + 3);
          if (v20 >= v19 >> 1)
            v18 = sub_1000DEAD8((char *)(v19 > 1), v20 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v20 + 1;
          v21 = &v18[16 * v20];
          *((_QWORD *)v21 + 4) = v4;
          *((_QWORD *)v21 + 5) = v3;
          if (v15 < 2)
            goto LABEL_9;
LABEL_22:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
            v18 = sub_1000DEAD8(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
          v23 = *((_QWORD *)v18 + 2);
          v22 = *((_QWORD *)v18 + 3);
          if (v23 >= v22 >> 1)
            v18 = sub_1000DEAD8((char *)(v22 > 1), v23 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v23 + 1;
          v9 = &v18[16 * v23];
          *((_QWORD *)v9 + 4) = v6;
          *((_QWORD *)v9 + 5) = v15;
          goto LABEL_9;
        }
      }
      sub_1000CFA98(v6, v15);
      v18 = (char *)_swiftEmptyArrayStorage;
      if (v15 >= 2)
        goto LABEL_22;
LABEL_9:
      swift_release(inited);
      v10 = sub_10000B4C8(&qword_10054D598);
      v11 = sub_100012324((unint64_t *)&qword_100550CB0, &qword_10054D598, (const char *)&protocol conformance descriptor for [A]);
      v12 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
      v14 = v13;
      swift_bridgeObjectRelease(v18);
      sub_1000B5000(v6, v15);
      sub_1000D0CDC(v4, v3);
      v6 = v12;
      v3 = v14;
LABEL_10:
      v8 += 2;
      v4 = v6;
      if (!--v5)
        goto LABEL_4;
    }
  }
  v6 = v4;
LABEL_4:
  swift_bridgeObjectRelease(v24);
  return v6;
}

uint64_t sub_1000CF70C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000CF730(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v6 = swift_task_alloc(dword_10054D4B4);
  v8 = v2[2];
  v7 = v2[3];
  v9 = v2[1];
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_10000DC64;
  *(_OWORD *)(v6 + 48) = v9;
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch(sub_1000CEF7C, 0, 0);
}

unint64_t sub_1000CF7AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054D4D0;
  if (!qword_10054D4D0)
  {
    v1 = objc_opt_self(NSTimer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10054D4D0);
  }
  return result;
}

unint64_t sub_1000CF7E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054D4D8;
  if (!qword_10054D4D8)
  {
    v1 = type metadata accessor for NSTimer.TimerPublisher(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSTimer.TimerPublisher, v1);
    atomic_store(result, (unint64_t *)&qword_10054D4D8);
  }
  return result;
}

uint64_t sub_1000CF834(uint64_t a1)
{
  return sub_1000D09E0(a1, "%{public}s: waiting for perform to return…");
}

uint64_t sub_1000CF840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  _QWORD v16[2];
  __int128 v17;

  v2 = *(_QWORD *)(v0 + 40);
  v16[0] = *(_QWORD *)(v0 + 32);
  v1 = v16[0];
  v16[1] = v2;
  v17 = *(_OWORD *)(v0 + 48);
  v15 = v17;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v16);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 64) & ~v5;
  v7 = *(_QWORD *)(v15 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v6 + *(_QWORD *)(v4 + 64) + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v5 | v8 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v12, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v12 + v3[13], v2);
  swift_release(*(_QWORD *)(v12 + v3[14] + 8));
  swift_release(*(_QWORD *)(v12 + v3[16] + 8));
  v13 = swift_release(*(_QWORD *)(v12 + v3[17] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v15, v13);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000CF96C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v11 = v1[2];
  v12 = v1[3];
  v13 = (uint64_t)v1 + v9;
  v14 = (uint64_t)v1 + ((v9 + *(_QWORD *)(v8 + 64) + v10) & ~v10);
  v15 = (_QWORD *)swift_task_alloc(dword_10054D4F4);
  v2[6] = v15;
  *v15 = v2;
  v15[1] = sub_1000CFA50;
  return sub_1000CDF60(a1, v11, v12, v13, v14, v4, v5, v6);
}

uint64_t sub_1000CFA50()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000CFA98(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t sub_1000CFAAC()
{
  unint64_t result;

  result = qword_10054D500[0];
  if (!qword_10054D500[0])
  {
    result = swift_getWitnessTable("9Z\r", &type metadata for ActionError);
    atomic_store(result, qword_10054D500);
  }
  return result;
}

uint64_t sub_1000CFAF0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
}

uint64_t sub_1000CFAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_1000CFB04(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = (char *)&value witness table for () + 64;
      v5[5] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 6, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000CFBB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v26 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain(v18);
    swift_retain(v23);
  }
  swift_retain(v26);
  return v4;
}

uint64_t sub_1000CFD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v8 + 8));
  v9 = (((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 8));
  return swift_release(*(_QWORD *)(((v9 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000CFDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain(v16);
  swift_retain(v21);
  swift_retain(v24);
  return a1;
}

uint64_t sub_1000CFEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  v23 = v20[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  v27 = v24[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain(v26);
  swift_release(v27);
  return a1;
}

uint64_t sub_1000CFFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *v18;
  _OWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000D0070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = v13 + v12;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v16);
  v18 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (v17 & 0xFFFFFFFFFFFFF8) + 15;
  *v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 8);
  v22 = (v19 & 0xFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v20 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)(v23 + 8);
  *(_OWORD *)v23 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFF8);
  swift_release(v24);
  return a1;
}

uint64_t sub_1000D0154(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1000D020C + 4 * byte_10042AF20[v15]))();
  }
}

void sub_1000D02B4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1000D03E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1000D0478);
}

void sub_1000D03F0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1000D03F8);
  JUMPOUT(0x1000D0478);
}

void sub_1000D043C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1000D0478);
}

void sub_1000D0444()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1000D0478);
}

uint64_t sub_1000D044C(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x1000D0478);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x1000D0458);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

unint64_t destroy for ActionSupportedStatus(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s9MusicCore21ActionSupportedStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for ActionSupportedStatus(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 + 1;
  if (v7 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_12;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease(v4);
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSupportedStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionSupportedStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1000D06EC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1000D070C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionSupportedStatus()
{
  return &type metadata for ActionSupportedStatus;
}

uint64_t getEnumTagSinglePayload for ActionError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionError()
{
  return &type metadata for ActionError;
}

uint64_t sub_1000D0808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D0850()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D0874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100555A8C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100555A88 + dword_100555A88))(a1, v4);
}

uint64_t sub_1000D08E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 16);
  v1 = v12;
  v13 = *(_OWORD *)(v0 + 24);
  v11 = v13;
  v14 = v2;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)&v12);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v6, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9 + v3[13]);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_1000D09D4(uint64_t a1)
{
  return sub_1000D09E0(a1, "%{public}s: waiting for finish to return…");
}

uint64_t sub_1000D09E0(uint64_t a1, const char *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v11) - 8) + 80);
  return sub_1000CE9F0(a1, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

double sub_1000D0A6C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1000CF0CC(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1000D0A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  _QWORD v20[2];
  __int128 v21;

  v1 = *(_QWORD *)(v0 + 40);
  v20[0] = *(_QWORD *)(v0 + 32);
  v2 = v20[0];
  v20[1] = v1;
  v21 = *(_OWORD *)(v0 + 48);
  v19 = v21;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v20);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 80) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = sub_100011650((uint64_t *)&unk_100550630);
  v9 = type metadata accessor for CheckedContinuation(0, v19, v8, &protocol self-conformance witness table for Error);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 64);
  v14 = v5 | v11 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v15 = swift_release(*(_QWORD *)(v0 + 72));
  v16 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 8) + 8))(v16, v2, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v16 + v3[13], v1);
  swift_release(*(_QWORD *)(v16 + v3[14] + 8));
  swift_release(*(_QWORD *)(v16 + v3[16] + 8));
  v17 = swift_release(*(_QWORD *)(v16 + v3[17] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v0 + v12, v9, v17);
  return swift_deallocObject(v0, v13, v14);
}

uint64_t sub_1000D0BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v14;
  v2 = *(_QWORD *)(type metadata accessor for Action(0, v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100011650((uint64_t *)&unk_100550630);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CheckedContinuation(0, v14, v5, &protocol self-conformance witness table for Error)- 8)+ 80);
  v7 = v3 + v4 + v6;
  v8 = *(int **)(v0 + 64);
  v9 = v0 + v3;
  v10 = v0 + (v7 & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_10054D58C);
  *(_QWORD *)(v1 + 48) = v11;
  *v11 = v1;
  v11[1] = sub_1000CFA50;
  *(_QWORD *)&v14 = (char *)v8 + *v8;
  v12 = (_QWORD *)swift_task_alloc(v8[1]);
  v11[2] = v12;
  *v12 = v11;
  v12[1] = sub_10000DC64;
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v9, v10);
}

uint64_t sub_1000D0CDC(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_1000B5000(a1, a2);
  return a1;
}

uint64_t sub_1000D0CEC(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_1000CFA98(a1, a2);
  return a1;
}

uint64_t sub_1000D0CFC(uint64_t a1)
{
  type metadata accessor for Array(0);
  return a1;
}

uint64_t sub_1000D0D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 v16;
  _QWORD v18[4];

  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5);
  if ((_DWORD)v7 == 1)
  {
    sub_1000D2A64(a1);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
    {
LABEL_6:
      v15 = 0;
      return swift_task_create(v8, v15);
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v9);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
  v14 = v13;
  swift_unknownObjectRelease(v9);
  if (!(v14 | v12))
    goto LABEL_6;
  v18[0] = 0;
  v18[1] = 0;
  v15 = v18;
  v18[2] = v12;
  v18[3] = v14;
  return swift_task_create(v8, v15);
}

uint64_t ActionMenu.Element.id.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v5 = v4;
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = type metadata accessor for ActionMenu.Item(0, v8, v7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v15, v5, a1);
  if (swift_getEnumCaseMultiPayload(v15, a1) == 1)
  {
    v17 = *v15;
    v18 = v15[3];
    v19 = v15[5];
    v20 = (void *)v15[6];
    swift_release(v15[9]);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v13, v15, v9);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v8, *(_QWORD *)(v7 + 8));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return v17;
}

uint64_t static ActionMenu.Element.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[5];
  _OWORD v40[6];

  v38 = a2;
  v35 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v34 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v33 = (char *)&v33 - v7;
  v36 = a3;
  v37 = a4;
  v9 = type metadata accessor for ActionMenu.Element(0, a3, a4, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v33 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, v9, 0, 0);
  v17 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v18 = __chkstk_darwin(TupleTypeMetadata2);
  v20 = (char *)&v33 - v19;
  v21 = (char *)&v33 + *(int *)(v18 + 48) - v19;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22((char *)&v33 - v19, a1, v9);
  v22(v21, v38, v9);
  if (swift_getEnumCaseMultiPayload(v20, v9) != 1)
  {
    v22(v15, (uint64_t)v20, v9);
    if (swift_getEnumCaseMultiPayload(v21, v9) != 1)
    {
      v28 = v34;
      v29 = (uint64_t)v33;
      v30 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v21, v35);
      v27 = static ActionMenu.Item.== infix(_:_:)((uint64_t)v15, v29, v36, v37);
      v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v31(v29, v30);
      v31((uint64_t)v15, v30);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v35);
    goto LABEL_7;
  }
  v22(v13, (uint64_t)v20, v9);
  v23 = *((_OWORD *)v13 + 3);
  v39[2] = *((_OWORD *)v13 + 2);
  v39[3] = v23;
  v39[4] = *((_OWORD *)v13 + 4);
  v24 = *((_OWORD *)v13 + 1);
  v39[0] = *(_OWORD *)v13;
  v39[1] = v24;
  if (swift_getEnumCaseMultiPayload(v21, v9) != 1)
  {
    sub_1000D1A14(v39);
LABEL_7:
    v27 = 0;
    v10 = v17;
    v9 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v25 = *((_OWORD *)v21 + 3);
  v40[2] = *((_OWORD *)v21 + 2);
  v40[3] = v25;
  v40[4] = *((_OWORD *)v21 + 4);
  v26 = *((_OWORD *)v21 + 1);
  v40[0] = *(_OWORD *)v21;
  v40[1] = v26;
  v27 = static ActionMenu.== infix(_:_:)((uint64_t *)v39, v40);
  sub_1000D1A14(v40);
  sub_1000D1A14(v39);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
  return v27 & 1;
}

uint64_t sub_1000D1280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = ActionMenu.Element.id.getter(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1000D12A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Element.__derived_enum_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t static ActionMenu.ElementBuilder.buildBlock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D12C8(a1, a2, a3, (uint64_t)sub_1000D2AA8);
}

uint64_t static ActionMenu.ElementBuilder.buildArray(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D12C8(a1, a2, a3, (uint64_t)sub_1000D1A74);
}

uint64_t sub_1000D12C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  _QWORD v10[6];

  v10[5] = a1;
  v10[2] = a2;
  v10[3] = a3;
  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v5 = type metadata accessor for Array(255);
  v6 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v6);
  v8 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v5);
  return Sequence.flatMap<A>(_:)(a4, v10, v6, v5, WitnessTable, v8);
}

uint64_t static ActionMenu.ElementBuilder.buildIf(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    v5 = type metadata accessor for ActionMenu.Element(0, a2, a3, a4);
    v4 = static Array._allocateUninitialized(_:)(0, v5);
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];

  v69 = a3;
  v70 = a6;
  v71[0] = a3;
  v71[1] = a2;
  v71[2] = a4;
  v71[3] = a5;
  v59 = a5;
  v10 = type metadata accessor for Action(0, (uint64_t)v71);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  v13 = *(_QWORD *)(v11 + 64);
  v14 = __chkstk_darwin(v10);
  v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v62 = (char *)&v52 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v52 - v18;
  v57 = (char *)&v52 - v18;
  v20 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v17);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v22;
  v24 = type metadata accessor for ActionMenu.Element(255, a2, a5, v23);
  v65 = v24;
  v25 = type metadata accessor for _ContiguousArrayStorage(0, v24);
  v26 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
  v63 = static Array._adoptStorage(_:count:)(v26, 1);
  v61 = v27;
  v28 = *(int *)(v12 + 52);
  v68 = a1;
  v29 = a1 + v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v56 = a2;
  v30(v22, v29, a2);
  v31 = v11;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v32 = v12;
  v58(v19, a1, v12);
  v33 = *(unsigned __int8 *)(v11 + 80);
  v34 = (v33 + 56) & ~v33;
  v35 = v34 + v13;
  v67 = v33 | 7;
  v54 = v34 + v13;
  v36 = (char *)swift_allocObject(&unk_100500A48, v34 + v13, v33 | 7);
  v37 = v69;
  v38 = v70;
  *((_QWORD *)v36 + 2) = a2;
  *((_QWORD *)v36 + 3) = v37;
  v55 = a4;
  v39 = v59;
  *((_QWORD *)v36 + 4) = a4;
  *((_QWORD *)v36 + 5) = v39;
  *((_QWORD *)v36 + 6) = v38;
  v53 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v66 = v32;
  v53(&v36[v34], v57, v32);
  v40 = v62;
  v41 = v58;
  v58(v62, v68, v32);
  v42 = (char *)swift_allocObject(&unk_100500A70, v35, v67);
  v43 = v56;
  *((_QWORD *)v42 + 2) = v56;
  *((_QWORD *)v42 + 3) = v37;
  *((_QWORD *)v42 + 4) = a4;
  *((_QWORD *)v42 + 5) = v39;
  *((_QWORD *)v42 + 6) = v38;
  v44 = v40;
  v45 = v66;
  v46 = v53;
  v53(&v42[v34], v44, v66);
  v47 = v64;
  v41(v64, v68, v45);
  v48 = (char *)swift_allocObject(&unk_100500A98, v54, v67);
  v49 = v69;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v49;
  *((_QWORD *)v48 + 4) = v55;
  *((_QWORD *)v48 + 5) = v39;
  *((_QWORD *)v48 + 6) = v70;
  v46(&v48[v34], v47, v66);
  v50 = v61;
  sub_1000DD6F0((uint64_t)v60, (uint64_t)sub_1000D1A94, (uint64_t)v36, (uint64_t)sub_1000D1B14, (uint64_t)v42, (uint64_t)&unk_10054D5A8, (uint64_t)v48, v43, v61, v39);
  swift_storeEnumTagMultiPayload(v50, v65, 0);
  type metadata accessor for Array(0);
  return v63;
}

uint64_t sub_1000D16D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[2] = a3;
  v6[3] = a2;
  v6[4] = a4;
  v6[5] = a5;
  v7 = type metadata accessor for Action(0, (uint64_t)(v6 + 2));
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v6[14] = v9;
  v6[15] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000D177C, 0, 0);
}

uint64_t sub_1000D177C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 56);
  v15 = *(_OWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v7, v5);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 72) & ~v9;
  v11 = swift_allocObject(&unk_100500B30, v10 + v3, v9 | 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v15;
  *(_QWORD *)(v11 + 64) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v5);
  v12 = sub_1000D0D24(v1, (uint64_t)&unk_10054D6B8, v11);
  swift_release(v12);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D1898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v14;
  uint64_t v15;

  v14 = (_QWORD *)swift_task_alloc(dword_10054D4C4);
  v8[2] = a6;
  v8[3] = a5;
  v8[4] = a7;
  v8[5] = a8;
  v8[6] = v14;
  v15 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  *v14 = v8;
  v14[1] = sub_1000CFA50;
  return Action.execute(bypassSupportedStatusCheck:)(a1, 0, v15);
}

uint64_t static ActionMenu.ElementBuilder.buildExpression(_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v5 = type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v6 = type metadata accessor for _ContiguousArrayStorage(0, v5);
  v7 = swift_allocObject(v6, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  *v9 = *a1;
  v10 = a1[4];
  v12 = a1[1];
  v11 = a1[2];
  v9[3] = a1[3];
  v9[4] = v10;
  v9[1] = v12;
  v9[2] = v11;
  swift_storeEnumTagMultiPayload(v9, v5, 1);
  type metadata accessor for Array(0);
  sub_1000D1D18((uint64_t)a1);
  return v8;
}

uint64_t sub_1000D19E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CustomStringConvertible.description.getter(a2, a3);
}

uint64_t type metadata accessor for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Element);
}

_QWORD *sub_1000D1A14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  return a1;
}

uint64_t sub_1000D1A74@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1000D1A94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];
  __int128 v11;

  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 48);
  v10[0] = *(_QWORD *)(v1 + 24);
  v4 = v10[0];
  v10[1] = v3;
  v11 = *(_OWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v10) - 8) + 80);
  v7 = v1 + ((v6 + 56) & ~v6);
  a1[3] = v4;
  a1[4] = v5;
  v8 = sub_1000C16E0(a1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v8, v7, v4);
}

uint64_t sub_1000D1B14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[2];
  v3 = v0[4];
  v4 = v0[5];
  v7 = v0[3];
  v2 = v7;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  type metadata accessor for Action(0, (uint64_t)&v7);
  v7 = v2;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  v5 = type metadata accessor for Action(0, (uint64_t)&v7);
  return Action.supportedStatus()(v5);
}

uint64_t sub_1000D1B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 16);
  v11[0] = *(_QWORD *)(v0 + 24);
  v2 = v11[0];
  v11[1] = v1;
  v12 = *(_OWORD *)(v0 + 32);
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v11);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + v6, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[13], v1);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_1000D1C74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v1[2] = v3;
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v5;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v1 + 2)) - 8) + 80);
  v8 = (uint64_t)v0 + ((v7 + 56) & ~v7);
  v9 = (_QWORD *)swift_task_alloc(dword_10054D5A4);
  v1[6] = v9;
  *v9 = v1;
  v9[1] = sub_1000CFA50;
  return sub_1000D16D8(v8, v2, v3, v4, v5, v6);
}

uint64_t sub_1000D1D18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(id *)(a1 + 48);
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *sub_1000D1D7C()
{
  return &protocol witness table for String;
}

uint64_t sub_1000D1D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "P";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v7);
    return 0;
  }
  return result;
}

uint64_t sub_1000D1DF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) & 0xF8;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4 + ((unsigned __int16)(v3 + 23) & (unsigned __int16)~(_WORD)v3 & 0x1F8);
  swift_retain(v4);
  return v5;
}

uint64_t sub_1000D1E44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = 80;
  if (((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x50)
    v5 = ((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = v5 & 0xFFFFFFF8;
  if (v6 >= 2 && v7 != 0)
    v6 = *(_DWORD *)a1 + 2;
  if (v6 == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

    v9 = (_QWORD *)(a1 + 72);
  }
  else
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
    v10 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v10 + 8));
    v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v11 + 8));
    v9 = (_QWORD *)(((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  return swift_release(*v9);
}

uint64_t sub_1000D1F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v11;
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v12;
    v13 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    v15 = v13;
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    v17 = (_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v24[1];
    *v23 = *v24;
    v23[1] = v14;
    swift_retain(v19);
    swift_retain(v22);
    v16 = 0;
  }
  swift_retain(v14);
  *(_BYTE *)(a1 + v7) = v16;
  return a1;
}

uint64_t sub_1000D2078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v16 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v18 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v18;
      v19 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v19;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 64);
      v21 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v20;
      *(_QWORD *)(a1 + 72) = v21;
      *(_BYTE *)(a1 + v8) = 1;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v22 = v19;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v23 = (_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v24 = (_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      v21 = v30[1];
      *v29 = *v30;
      v29[1] = v21;
      *(_BYTE *)(a1 + v8) = 0;
      swift_retain(v25);
      swift_retain(v28);
    }
    swift_retain(v21);
  }
  return a1;
}

_OWORD *sub_1000D228C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  __int128 v10;
  __int128 v11;
  char v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_OWORD *)(a2 + 48);
    a1[2] = *(_OWORD *)(a2 + 32);
    a1[3] = v10;
    a1[4] = *(_OWORD *)(a2 + 64);
    v11 = *(_OWORD *)(a2 + 16);
    *a1 = *(_OWORD *)a2;
    a1[1] = v11;
    v12 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, uint64_t))(v5 + 32))(a1, a2);
    v12 = 0;
    v13 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v14 = (_OWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
    v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v7) = v12;
  return a1;
}

uint64_t sub_1000D2388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      LOBYTE(v14) = 0;
      v18 = (_OWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v19 = (_OWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *v18 = *v19;
      v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
      v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
      *v20 = *v21;
      *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    }
    *(_BYTE *)(a1 + v8) = v14;
  }
  return a1;
}

uint64_t sub_1000D252C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  int v7;
  int v9;
  int v10;
  unsigned int v11;

  v3 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v3 <= 0x50)
    v3 = 80;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_20;
  v4 = v3 | 1;
  v5 = 8 * (v3 | 1);
  if ((v3 | 1) <= 3)
  {
    v6 = (a2 + ~(-1 << v5) - 254) >> v5;
    if (v6 > 0xFFFE)
    {
      v7 = *(_DWORD *)&a1[v4];
      if (!v7)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v6 > 0xFE)
    {
      v7 = *(unsigned __int16 *)&a1[v4];
      if (!*(_WORD *)&a1[v4])
        goto LABEL_20;
      goto LABEL_13;
    }
    if (!v6)
      goto LABEL_20;
  }
  v7 = a1[v4];
  if (!a1[v4])
  {
LABEL_20:
    v11 = a1[v3];
    if (v11 >= 2)
      return (v11 ^ 0xFF) + 1;
    else
      return 0;
  }
LABEL_13:
  v9 = (v7 - 1) << v5;
  if (v4 >= 4)
    v9 = 0;
  if ((_DWORD)v4 == 1)
    v10 = *a1;
  else
    v10 = *(_DWORD *)a1;
  return (v10 | v9) + 255;
}

void sub_1000D2614(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v5 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v5 <= 0x50)
    v5 = 80;
  v6 = v5 | 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = (a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6);
    if (v9 > 0xFFFE)
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0xFF)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 != 0;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    v8 &= ~(-1 << (8 * v6));
    bzero(a1, v6);
    if ((_DWORD)v6 == 1)
    {
      *a1 = v8;
      goto LABEL_18;
    }
  }
  else
  {
    bzero(a1, v5 | 1);
  }
  *(_DWORD *)a1 = v8;
LABEL_18:
  __asm { BR              X10 }
}

uint64_t sub_1000D27B8(_DWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = 80;
  if (((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x50)
    v2 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v3 = *((unsigned __int8 *)a1 + v2);
  v4 = v2 & 0xFFFFFFF8;
  if (v3 >= 2 && v4 != 0)
    return (*a1 + 2);
  return v3;
}

void sub_1000D2810(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char v5;
  unsigned int v6;

  v4 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v4 <= 0x50)
    v4 = 80;
  if (a2 > 1)
  {
    if ((_DWORD)v4)
      v5 = 2;
    else
      v5 = a2;
    if ((_DWORD)v4)
      v6 = a2 - 2;
    else
      v6 = 0;
    a1[v4] = v5;
    bzero(a1, v4);
    *(_DWORD *)a1 = v6;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1000D2898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for ActionMenu.ElementBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.ElementBuilder);
}

uint64_t sub_1000D28AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 32);
  v11[0] = *(_QWORD *)(v0 + 40);
  v2 = v11[0];
  v11[1] = v1;
  v12 = *(_OWORD *)(v0 + 48);
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v11);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 72) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v9, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[13], v1);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_1000D2998(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v5;
  v2[3] = v4;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)v1 + ((v8 + 72) & ~v8);
  v12 = (_QWORD *)swift_task_alloc(dword_10054D6B4);
  v2[6] = v12;
  *v12 = v2;
  v12[1] = sub_1000D2AA4;
  return sub_1000D1898(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_1000D2A64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D2AA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1000D1A74(a1, a2);
}

void *MetricsEvent.Click.ActionDetails.init(_:)(uint64_t a1)
{
  void *v2;

  v2 = sub_1000D40CC(a1);
  swift_bridgeObjectRelease(a1);
  return v2;
}

uint64_t static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  return sub_1000D44DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t MusicItem.metricsTargetIdentifier.getter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  __chkstk_darwin(a1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v5 = sub_10000B4C8(&qword_10054D6C0);
  if ((swift_dynamicCast(&v12, v3, a1, v5, 6) & 1) == 0)
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_100011694((uint64_t)&v12, (uint64_t *)&unk_100553500);
    return 0x497972617262694CLL;
  }
  v6 = *((_QWORD *)&v13 + 1);
  v7 = v14;
  sub_10000D900(&v12, *((uint64_t *)&v13 + 1));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if (!v9)
  {
    sub_100011758(&v12);
    return 0x497972617262694CLL;
  }
  v10 = v8;
  sub_100011758(&v12);
  return v10;
}

uint64_t sub_1000D2C44()
{
  return sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, qword_10054D7D8);
}

uint64_t sub_1000D2C58()
{
  return sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for Album, &qword_10054D7A0);
}

uint64_t sub_1000D2C6C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  Swift::String v20;

  v19[0] = a1(0);
  v3 = sub_10000B4C8(a2);
  v4 = String.init<A>(describing:)(v19, v3);
  v6 = v5;
  sub_1000D4724(1, v4, v5);
  v8 = v7;
  v9 = Substring.lowercased()();
  swift_bridgeObjectRelease(v8);
  v10 = sub_1000D47AC(1uLL, v4, v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v6);
  v20 = v9;
  v19[0] = v10;
  v19[1] = v12;
  v19[2] = v14;
  v19[3] = v16;
  v17 = sub_1000D4848();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v19, &type metadata for Substring, v17);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v16);
  return v20._countAndFlagsBits;
}

uint64_t MusicItem.metricsContentType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t MetatypeMetadata;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  Swift::String v20;

  v19[0] = swift_getDynamicType(v1, a1, 0);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v4 = String.init<A>(describing:)(v19, MetatypeMetadata);
  v6 = v5;
  sub_1000D4724(1, v4, v5);
  v8 = v7;
  v9 = Substring.lowercased()();
  swift_bridgeObjectRelease(v8);
  v10 = sub_1000D47AC(1uLL, v4, v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v6);
  v20 = v9;
  v19[0] = v10;
  v19[1] = v12;
  v19[2] = v14;
  v19[3] = v16;
  v17 = sub_1000D4848();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v19, &type metadata for Substring, v17);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v16);
  return v20._countAndFlagsBits;
}

uint64_t Playlist.Entry.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v0 = type metadata accessor for UploadedVideo(0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v31 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UploadedAudio(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVEpisode(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v18);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v21 != enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    if (v21 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
      v23 = v42;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v20, v42);
      v22 = sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_10054D7B0);
      v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    }
    else
    {
      if (v21 == enum case for Playlist.Entry.InternalItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v25 = v40;
        v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v15, v20, v41);
        v22 = sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_10054D7A8);
        v24 = *(void (**)(char *, uint64_t))(v25 + 8);
        v26 = v15;
LABEL_15:
        v24(v26, v23);
        return v22;
      }
      if (v21 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v37;
        v27 = v38;
        v23 = v39;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v20, v39);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode;
        v29 = (uint64_t *)&unk_10054D7C0;
      }
      else if (v21 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v34;
        v27 = v35;
        v23 = v36;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v20, v36);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio;
        v29 = (uint64_t *)&unk_10054D7C8;
      }
      else
      {
        if (v21 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
          return 1735290739;
        }
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v31;
        v27 = v32;
        v23 = v33;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v20, v33);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo;
        v29 = (uint64_t *)&unk_10054D7D0;
      }
      v22 = sub_1000D2C6C(v28, v29);
      v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    }
    v26 = v12;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v20, v6);
  v22 = sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, &qword_10054D7B8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v22;
}

uint64_t Actions.MetricsReportingContext.actionContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1000D488C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Actions.MetricsReportingContext.actionContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1000D48B0(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t Actions.MetricsReportingContext.page.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Actions.MetricsReportingContext(0);
  return sub_100011370(v1 + *(int *)(v3 + 20), a1, &qword_10054D6D0);
}

uint64_t Actions.MetricsReportingContext.page.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  return sub_1000D4910(a1, v3);
}

CFRange (__swiftcall *Actions.MetricsReportingContext.page.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.pageContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Actions.MetricsReportingContext.pageContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.pageContext.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.locations.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.locations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 28);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v3));
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.locations.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.impressions.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.impressions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 32);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v3));
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.impressions.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 36));
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for Actions.MetricsReportingContext(0);
  v8 = v3 + *(int *)(result + 36);
  *(_BYTE *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_QWORD *)(v8 + 16) = a3;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.sharedListeningContext.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char *v23;

  v16 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[6]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v16[7];
  *(_QWORD *)((char *)a9 + v20) = 0;
  v21 = v16[8];
  *(_QWORD *)((char *)a9 + v21) = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_1000D4910(a3, v17);
  swift_bridgeObjectRelease(v19[1]);
  *v19 = a4;
  v19[1] = a5;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v20));
  *(_QWORD *)((char *)a9 + v20) = a6;
  result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v21));
  *(_QWORD *)((char *)a9 + v21) = a7;
  v23 = (char *)a9 + v16[9];
  *v23 = a8;
  *((_QWORD *)v23 + 1) = a10;
  *((_QWORD *)v23 + 2) = a11;
  return result;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FB9D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473696C79616C70;
  else
    return 0x7972617262696CLL;
}

uint64_t sub_1000D37B4(char *a1, char *a2)
{
  return sub_1000C9764(*a1, *a2);
}

Swift::Int sub_1000D37C0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1000D3840(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1000D389C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1000D3918@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FB9D8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1000D3974(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7972617262696CLL;
  if (*v1)
    v2 = 0x7473696C79616C70;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

BOOL MetricsEvent.Click.ActionDetails.Key.PlayType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FBA28, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.PlayType.rawValue.getter()
{
  return 0x7453657461657263;
}

Swift::Int sub_1000D3A1C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_1000D3A78(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7453657461657263, 0xED00006E6F697461);
}

Swift::Int sub_1000D3A9C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_1000D3AF4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FBA60, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1000D3B44(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "createStation");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.NavigationType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1000D3BA0 + 4 * byte_10042B160[a1]))(0x6D75626C41, 0xE500000000000000);
}

uint64_t sub_1000D3BA0()
{
  return 0x747369747241;
}

uint64_t sub_1000D3BB4()
{
  return 0x7473696C79616C50;
}

uint64_t sub_1000D3BCC()
{
  return 0x434174726F706552;
}

void sub_1000D3BF0(char *a1)
{
  sub_1000C9808(*a1);
}

void sub_1000D3BFC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1000D3C44()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_1000D3CBC()
{
  __asm { BR              X10 }
}

uint64_t sub_1000D3CF4(uint64_t a1)
{
  String.hash(into:)(a1, 0x747369747241, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1000D3D58()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1000D3D9C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1000D3E14@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000D3E40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1000D3E6C + 4 * byte_10042B170[*v0]))();
}

void sub_1000D3E6C(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747241;
  a1[1] = 0xE600000000000000;
}

void sub_1000D3E84(_QWORD *a1@<X8>)
{
  *a1 = 0x7473696C79616C50;
  a1[1] = 0xE800000000000000;
}

void sub_1000D3EA0(char *a1@<X8>)
{
  strcpy(a1, "ReportAConcern");
  a1[15] = -18;
}

uint64_t Track.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for MusicVideo(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Track(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v1, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    v15 = sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_10054D7A8);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v14 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    v15 = sub_1000D2C6C((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_10054D7B0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 1735290739;
  }
  return v15;
}

void *sub_1000D40CC(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_1000D419C + *((int *)qword_1000D44B8 + *(unsigned __int8 *)(swift_bridgeObjectRetain() + 48));
    __asm { BR              X8 }
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1000D44DC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;

  v35 = a6;
  v36 = a8;
  v38 = a3;
  v39 = a4;
  v31 = a2;
  v37 = a1;
  v12 = sub_10000B4C8(&qword_10054D6D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v14;
  v15 = sub_10000B4C8(&qword_10054C950);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v17;
  v18 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v18);
  v33 = (uint64_t)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a5, (uint64_t)v17, &qword_10054C950);
  v20 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v21 = *(uint64_t *)((char *)a10 + v20[7]);
  v22 = *a10;
  v23 = a10[1];
  sub_100011370((uint64_t)a10 + v20[5], (uint64_t)v14, &qword_10054D6D0);
  v24 = *(uint64_t *)((char *)a10 + v20[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000D488C(v22, v23);
  v25 = v35;
  v26 = v36;
  sub_1000D6270(v35, a7, v36, a9);
  swift_bridgeObjectRetain();
  v30 = v24;
  v27 = v33;
  *((_QWORD *)&v29 + 1) = a7;
  *(_QWORD *)&v29 = v25;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(v37, v31, v38, v39, (uint64_t)v34, v21, v22, v23, v33, v29, v26, a9, (uint64_t)v32, v30);
  if (qword_10054BA88 != -1)
    swift_once(&qword_10054BA88, sub_100140288);
  MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(v27, *(uint64_t *)((char *)a10 + v20[6]), *(uint64_t *)((char *)a10 + v20[6] + 8), *((_BYTE *)a10 + v20[9]), *(uint64_t *)((char *)a10 + v20[9] + 8), *(uint64_t *)((char *)a10 + v20[9] + 16));
  return sub_10000E750(v27, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_1000D4724(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

unint64_t sub_1000D47AC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v5 = HIBYTE(a3) & 0xF;
    else
      v5 = a2 & 0xFFFFFFFFFFFFLL;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v8 & 1) != 0)
      result = v7;
    if (4 * v5 >= result >> 14)
      return String.subscript.getter(result, v7, a2, a3);
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4848()
{
  unint64_t result;

  result = qword_10054D6C8;
  if (!qword_10054D6C8)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_10054D6C8);
  }
  return result;
}

uint64_t sub_1000D488C(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_1000D489C(a1, a2);
  return a1;
}

uint64_t sub_1000D489C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1000D48B0(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_1000D48C0(a1, a2);
  return a1;
}

uint64_t sub_1000D48C0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t type metadata accessor for Actions.MetricsReportingContext(uint64_t a1)
{
  uint64_t result;

  result = qword_10054D750;
  if (!qword_10054D750)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.MetricsReportingContext);
  return result;
}

uint64_t sub_1000D4910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054D6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004FBA98, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1000D49A4()
{
  unint64_t result;

  result = qword_10054D6D8;
  if (!qword_10054D6D8)
  {
    result = swift_getWitnessTable("=\\\r", &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType);
    atomic_store(result, (unint64_t *)&qword_10054D6D8);
  }
  return result;
}

unint64_t sub_1000D49EC()
{
  unint64_t result;

  result = qword_10054D6E0;
  if (!qword_10054D6E0)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.PlayType, &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType);
    atomic_store(result, (unint64_t *)&qword_10054D6E0);
  }
  return result;
}

unint64_t sub_1000D4A34()
{
  unint64_t result;

  result = qword_10054D6E8;
  if (!qword_10054D6E8)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.NavigationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType);
    atomic_store(result, (unint64_t *)&qword_10054D6E8);
  }
  return result;
}

uint64_t *_s23MetricsReportingContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = a2[1];
    if (v7 > 9)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10000B4C8(&qword_10054D6D0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v42 = v12;
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      v17 = v11[6];
      __dst = (char *)v9 + v17;
      v18 = (char *)v10 + v17;
      v19 = type metadata accessor for URL(0);
      v39 = *(_QWORD *)(v19 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40(v18, 1, v19))
      {
        v20 = sub_10000B4C8(&qword_10054C950);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v19);
      }
      *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
      v21 = v11[8];
      v22 = (_QWORD *)((char *)v9 + v21);
      v23 = (_QWORD *)((char *)v10 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
      v25 = v11[10];
      v26 = (_QWORD *)((char *)v9 + v25);
      v27 = (_QWORD *)((char *)v10 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v9, 0, 1, v11);
    }
    v30 = a3[6];
    v31 = a3[7];
    v32 = (uint64_t *)((char *)a1 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)a1 + v31) = *(uint64_t *)((char *)a2 + v31);
    v35 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s23MetricsReportingContextVwxx(uint64_t a1, int *a2)
{
  unint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >= 0xA)
    swift_bridgeObjectRelease(v4);
  v5 = a1 + a2[5];
  v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));
    v7 = v5 + v6[6];
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[10] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

_QWORD *_s23MetricsReportingContextVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v40;

  v6 = a2[1];
  if (v6 > 9)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000B4C8(&qword_10054D6D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v40 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v15 = v10[6];
    __dst = (char *)v8 + v15;
    v16 = (char *)v9 + v15;
    v17 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v17 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38(v16, 1, v17))
    {
      v18 = sub_10000B4C8(&qword_10054C950);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v17);
    }
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    v19 = v10[8];
    v20 = (_QWORD *)((char *)v8 + v19);
    v21 = (_QWORD *)((char *)v9 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v8 + v10[9]) = *((_BYTE *)v9 + v10[9]);
    v23 = v10[10];
    v24 = (_QWORD *)((char *)v8 + v23);
    v25 = (_QWORD *)((char *)v9 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v8, 0, 1, v10);
  }
  v28 = a3[6];
  v29 = a3[7];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v33 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s23MetricsReportingContextVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void (*v38)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v61;
  char *v62;
  void *v63;
  char *__dst;
  int *v65;
  int *v66;

  v6 = a1[1];
  v7 = a2[1];
  if (v6 == 9)
  {
    if (v7 >= 0xA)
      goto LABEL_16;
    goto LABEL_6;
  }
  if (v7 == 9)
  {
    sub_1000D5568((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6 < 9)
  {
    if (v7 >= 9)
    {
LABEL_16:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_7;
  }
  if (v7 < 9)
  {
    sub_100011694((uint64_t)a1, &qword_10054D6F0);
    goto LABEL_6;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
LABEL_7:
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10000E750((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_13;
    }
    v66 = a3;
    *v9 = *v10;
    v21 = v9[1];
    v9[1] = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v21);
    v9[2] = v10[2];
    v22 = v9[3];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v22);
    v23 = v11[6];
    v24 = (char *)v9 + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v63 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v63, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v63, 0, 1, v26);
        goto LABEL_30;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054C950) - 8) + 64);
      v31 = v63;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 24))(v63, v25, v26);
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v63, v26);
      v30 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054C950) - 8) + 64);
      v31 = v63;
    }
    memcpy(v31, v25, v30);
LABEL_30:
    v39 = v11[7];
    v40 = *(_QWORD *)((char *)v9 + v39);
    *(_QWORD *)((char *)v9 + v39) = *(_QWORD *)((char *)v10 + v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    v41 = v11[8];
    v42 = (_QWORD *)((char *)v9 + v41);
    v43 = (_QWORD *)((char *)v10 + v41);
    *v42 = *v43;
    v44 = v42[1];
    v42[1] = v43[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v44);
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v45 = v11[10];
    v46 = (_QWORD *)((char *)v9 + v45);
    v47 = (_QWORD *)((char *)v10 + v45);
    *v46 = *v47;
    v48 = v46[1];
    v46[1] = v47[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v48);
    a3 = v66;
    goto LABEL_31;
  }
  if (v15)
  {
LABEL_13:
    v20 = sub_10000B4C8(&qword_10054D6D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_31;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  v16 = v11[6];
  __dst = (char *)v9 + v16;
  v65 = a3;
  v62 = (char *)v10 + v16;
  v17 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v17 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v62, 1, v17))
  {
    v19 = sub_10000B4C8(&qword_10054C950);
    memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dst, v62, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v17);
  }
  a3 = v65;
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  v32 = v11[8];
  v33 = (_QWORD *)((char *)v9 + v32);
  v34 = (_QWORD *)((char *)v10 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  v35 = v11[10];
  v36 = (_QWORD *)((char *)v9 + v35);
  v37 = (_QWORD *)((char *)v10 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v9, 0, 1, v11);
LABEL_31:
  v49 = a3[6];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  *v50 = *v51;
  v52 = v50[1];
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v52);
  v53 = a3[7];
  v54 = *(_QWORD *)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v54);
  v55 = a3[8];
  v56 = *(_QWORD *)((char *)a1 + v55);
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v56);
  v57 = a3[9];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *v58 = *v59;
  *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
  *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
  return a1;
}

uint64_t sub_1000D5568(uint64_t a1)
{
  destroy for MetricsEvent.Click.ActionContext(a1);
  return a1;
}

_OWORD *_s23MetricsReportingContextVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10000B4C8(&qword_10054D6D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = v9[6];
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_10000B4C8(&qword_10054C950);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *((_BYTE *)v7 + v9[9]) = *((_BYTE *)v8 + v9[9]);
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  return a1;
}

uint64_t _s23MetricsReportingContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6 == 9)
    goto LABEL_7;
  if (v7 == 9)
  {
    sub_1000D5568(a1);
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 9)
    goto LABEL_7;
  if (v7 < 9)
  {
    sub_100011694(a1, &qword_10054D6F0);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRelease(v6);
LABEL_8:
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10000E750((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_14;
    }
    v23 = v10[1];
    v24 = v9[1];
    *v9 = *v10;
    v9[1] = v23;
    swift_bridgeObjectRelease(v24);
    v25 = v10[3];
    v26 = v9[3];
    v9[2] = v10[2];
    v9[3] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = v11[6];
    v28 = (char *)v9 + v27;
    v29 = (char *)v10 + v27;
    v30 = type metadata accessor for URL(0);
    v63 = *(_QWORD *)(v30 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
    __dsta = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v32 = v31(v29, 1, v30);
    if ((_DWORD)v28)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v63 + 32))(__dsta, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v30);
        goto LABEL_26;
      }
      v33 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054C950) - 8) + 64);
      v34 = __dsta;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v63 + 40))(__dsta, v29, v30);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v63 + 8))(__dsta, v30);
      v33 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054C950) - 8) + 64);
      v34 = __dsta;
    }
    memcpy(v34, v29, v33);
LABEL_26:
    v35 = v11[7];
    v36 = *(_QWORD *)((char *)v9 + v35);
    *(_QWORD *)((char *)v9 + v35) = *(_QWORD *)((char *)v10 + v35);
    swift_bridgeObjectRelease(v36);
    v37 = v11[8];
    v38 = (_QWORD *)((char *)v9 + v37);
    v39 = (_QWORD *)((char *)v10 + v37);
    v41 = *v39;
    v40 = v39[1];
    v42 = v38[1];
    *v38 = v41;
    v38[1] = v40;
    swift_bridgeObjectRelease(v42);
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v43 = v11[10];
    v44 = (_QWORD *)((char *)v9 + v43);
    v45 = (_QWORD *)((char *)v10 + v43);
    v47 = *v45;
    v46 = v45[1];
    v48 = v44[1];
    *v44 = v47;
    v44[1] = v46;
    swift_bridgeObjectRelease(v48);
    goto LABEL_27;
  }
  if (v15)
  {
LABEL_14:
    v22 = sub_10000B4C8(&qword_10054D6D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_27;
  }
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  v17 = v11[6];
  __dst = (char *)v9 + v17;
  v18 = (char *)v10 + v17;
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_10000B4C8(&qword_10054C950);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  *(_OWORD *)((char *)v9 + v11[8]) = *(_OWORD *)((char *)v10 + v11[8]);
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  *(_OWORD *)((char *)v9 + v11[10]) = *(_OWORD *)((char *)v10 + v11[10]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_27:
  v49 = a3[6];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  v54 = v50[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease(v54);
  v55 = a3[7];
  v56 = *(_QWORD *)(a1 + v55);
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  swift_bridgeObjectRelease(v56);
  v57 = a3[8];
  v58 = *(_QWORD *)(a1 + v57);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  swift_bridgeObjectRelease(v58);
  v59 = a3[9];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  *(_OWORD *)(v60 + 8) = *(_OWORD *)(v61 + 8);
  return a1;
}

uint64_t _s23MetricsReportingContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D5B50);
}

uint64_t sub_1000D5B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_10000B4C8(&qword_10054D6D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s23MetricsReportingContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D5BF0);
}

uint64_t sub_1000D5BF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10000B4C8(&qword_10054D6D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_1000D5C74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_10042B398;
  sub_1000D5D08(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10042B3B0;
    v4[3] = &unk_10042B3C8;
    v4[4] = &unk_10042B3C8;
    v4[5] = &unk_10042B3E0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_1000D5D08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10054D760)
  {
    v2 = type metadata accessor for MetricsEvent.Page(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10054D760);
  }
}

uint64_t sub_1000D5D60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t _s3KeyOwxx(uint64_t a1)
{
  return sub_1000D5D84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1000D5D84(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s3KeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000D5D60(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s3KeyOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000D5D60(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1000D5D84(v6, v7, v8);
  return a1;
}

__n128 _s3KeyOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s3KeyOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1000D5D84(v4, v5, v6);
  return a1;
}

uint64_t _s3KeyOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s3KeyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1000D5F18(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1000D5F30(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key;
}

uint64_t _s3KeyO15DestinationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000D5FA4 + 4 * byte_10042B179[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000D5FD8 + 4 * byte_10042B174[v4]))();
}

uint64_t sub_1000D5FD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D5FE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000D5FE8);
  return result;
}

uint64_t sub_1000D5FF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000D5FFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000D6000(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D6008(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page.DisplayType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s3KeyO8PlayTypeOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1000D60B8 + 4 * byte_10042B17E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1000D60D8 + 4 * byte_10042B183[v4]))();
}

_BYTE *sub_1000D60B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1000D60D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000D60E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000D60E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000D60F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000D60F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType;
}

uint64_t _s3KeyO14NavigationTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s3KeyO14NavigationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000D61F0 + 4 * byte_10042B18D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1000D6224 + 4 * byte_10042B188[v4]))();
}

uint64_t sub_1000D6224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D622C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000D6234);
  return result;
}

uint64_t sub_1000D6240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000D6248);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1000D624C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D6254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType;
}

id sub_1000D6270(id result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (BYTE1(a4) != 255)
    return sub_1000D6284(result, a2, a3, a4, SBYTE1(a4));
  return result;
}

id sub_1000D6284(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a5 == 1)
    return sub_1000D62B0(result, a2, a3);
  return result;
}

id sub_1000D62B0(id result, uint64_t a2, uint64_t a3)
{
  id v3;

  if (result)
  {
    v3 = result;
    swift_bridgeObjectRetain(a3);
    return v3;
  }
  return result;
}

uint64_t View.actionContextMenu<A>(title:menu:excluding:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_OWORD *, uint64_t, uint64_t);
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  char **v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v58;
  char *v59;
  char **v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t (*v71)(_OWORD *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(_QWORD, _QWORD, _QWORD);
  _QWORD v84[3];
  _QWORD v85[2];
  _QWORD v86[10];
  _OWORD v87[5];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;

  v75 = a9;
  v78 = a7;
  v68 = a2;
  v69 = (char *)a4;
  v67 = a1;
  v13 = type metadata accessor for ActionMenu(255, a6, a8, a4);
  v14 = type metadata accessor for Optional(0, v13);
  v71 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15 = v71(v86, a3, v14);
  v64 = v86[1];
  v65 = v86[3];
  v66 = v86[5];
  v62 = (id)v86[6];
  v63 = v86[9];
  v60 = *(char ***)(a5 - 8);
  v16 = __chkstk_darwin(v15);
  v59 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v58 = (char *)&v58 - v18;
  v20 = type metadata accessor for ActionMenuView(255, a6, a8, v19);
  *(_QWORD *)&v88 = a6;
  *((_QWORD *)&v88 + 1) = a6;
  *(_QWORD *)&v89 = a8;
  *((_QWORD *)&v89 + 1) = a8;
  v21 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v88);
  v22 = type metadata accessor for Optional(255, v21);
  v23 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v22);
  v24 = type metadata accessor for ModifiedContent(255, v20, v23);
  v25 = type metadata accessor for Section(255, &type metadata for Text, v24, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable("q[\r", v20);
  v27 = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v23);
  v85[0] = WitnessTable;
  v85[1] = v27;
  v28 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v24, v85);
  v84[0] = &protocol witness table for Text;
  v84[1] = v28;
  v84[2] = &protocol witness table for EmptyView;
  v29 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v25, v84);
  *(_QWORD *)&v88 = a5;
  *((_QWORD *)&v88 + 1) = v25;
  v77 = v25;
  v30 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))v29;
  *(_QWORD *)&v89 = v78;
  *((_QWORD *)&v89 + 1) = v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v88, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v61 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v32 = __chkstk_darwin(OpaqueTypeMetadata2);
  v34 = (char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v36 = (char *)&v58 - v35;
  v37 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a5);
  v72 = *(_QWORD *)(v37 - 8);
  v73 = v37;
  __chkstk_darwin(v37);
  v76 = (char *)&v58 - v38;
  v70 = a3;
  v39 = v71(v87, a3, v14);
  if (*((_QWORD *)&v87[0] + 1))
  {
    v60 = &v58;
    v90 = v87[2];
    v91 = v87[3];
    v92 = v87[4];
    v88 = v87[0];
    v89 = v87[1];
    __chkstk_darwin(v39);
    v71 = v30;
    *(&v58 - 10) = (char *)a5;
    *(&v58 - 9) = (char *)a6;
    v40 = (uint64_t)v78;
    *(&v58 - 8) = v78;
    *(&v58 - 7) = (char *)a8;
    *(&v58 - 6) = v74;
    *(&v58 - 5) = (char *)&v88;
    v41 = v68;
    *(&v58 - 4) = v67;
    *(&v58 - 3) = v41;
    *(&v58 - 2) = v69;
    v42 = v62;
    swift_retain(v63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = swift_checkMetadataState(0, v77);
    v30 = v71;
    View.contextMenu<A>(menuItems:)(sub_1000D6CE4, &v58 - 12, a5, v43, v40, v71);
    v80 = a5;
    v81 = v43;
    v82 = v40;
    v83 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    v45 = v61;
    v46 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v46(v36, v34, OpaqueTypeMetadata2);
    v47 = *(void (**)(char *, uint64_t))(v45 + 8);
    v47(v34, OpaqueTypeMetadata2);
    v46(v34, v36, OpaqueTypeMetadata2);
    sub_1000D6B5C((uint64_t)v34, OpaqueTypeMetadata2, a5, OpaqueTypeConformance2, v40);
    sub_1000D76A8(v70);
    v47(v34, OpaqueTypeMetadata2);
    v47(v36, OpaqueTypeMetadata2);
  }
  else
  {
    v48 = v60;
    v49 = v60[2];
    v50 = v58;
    ((void (*)(char *, char *, uint64_t))v49)(v58, v74, a5);
    v51 = (uint64_t)v59;
    ((void (*)(char *, char *, uint64_t))v49)(v59, v50, a5);
    v40 = (uint64_t)v78;
    *(_QWORD *)&v88 = a5;
    *((_QWORD *)&v88 + 1) = v77;
    *(_QWORD *)&v89 = v78;
    *((_QWORD *)&v89 + 1) = v30;
    v52 = swift_getOpaqueTypeConformance2(&v88, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    sub_1000D6C20(v51, OpaqueTypeMetadata2, a5, v52, v40);
    v53 = v48[1];
    ((void (*)(uint64_t, uint64_t))v53)(v51, a5);
    ((void (*)(char *, uint64_t))v53)(v50, a5);
  }
  v80 = a5;
  v81 = v77;
  v82 = v40;
  v83 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
  v79[0] = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v79[1] = v40;
  v54 = v73;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v73, v79);
  v55 = v72;
  v56 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v75, v76, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v54);
}

uint64_t type metadata accessor for ActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView);
}

uint64_t type metadata accessor for ActionMenuView.Excluding(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ActionMenuView.Excluding);
}

uint64_t sub_1000D6824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[3];
  _QWORD v38[2];
  _QWORD v39[4];

  v34 = a6;
  v35 = a8;
  v31 = a4;
  v32 = a5;
  v30 = a3;
  v33 = a1;
  v36 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v39[0] = a7;
  v39[1] = a7;
  v39[2] = a10;
  v39[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v39);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_1000D6A0C(a2, v30, v31, v32, v34, a7, v35, a10);
  WitnessTable = swift_getWitnessTable("q[\r", v12);
  v25 = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v38[0] = WitnessTable;
  v38[1] = v25;
  v26 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v16, v38);
  v37[0] = &protocol witness table for Text;
  v37[1] = v26;
  v37[2] = &protocol witness table for EmptyView;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v17, v37);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_1000D6A0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  unint64_t v18;
  _QWORD v20[8];
  _QWORD v21[2];
  _QWORD v22[4];
  _QWORD v23[2];

  if (a3)
    v10 = a2;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (a3)
    v11 = a3;
  v23[0] = v10;
  v23[1] = v11;
  v20[2] = a5;
  v20[3] = a6;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = a1;
  v20[7] = a4;
  v12 = type metadata accessor for ActionMenuView(255, a6, a8, a4);
  swift_bridgeObjectRetain();
  v22[0] = a6;
  v22[1] = a6;
  v22[2] = a8;
  v22[3] = a8;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v22);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v21[0] = swift_getWitnessTable("q[\r", v12);
  v21[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v16, v21);
  v18 = sub_1000AE4D8();
  return Section<>.init<A>(_:content:)(v23, sub_1000DB28C, v20, v16, &type metadata for String, WitnessTable, v18);
}

uint64_t sub_1000D6B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1000D6B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1000D6C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1000D6CE4@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1000D6824(v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3], v1[4], a1, v1[5]);
}

uint64_t View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, _QWORD *a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t OpaqueTypeConformance2;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD v94[3];
  _QWORD v95[2];
  _OWORD v96[5];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;

  v81 = a9;
  v76 = a7;
  v77 = a8;
  v74 = a5;
  v75 = a6;
  v72 = a2;
  v73 = a4;
  v85 = a3;
  v71 = a1;
  v15 = a13;
  v78 = a12;
  v16 = a10;
  v69 = *(_QWORD *)(a10 - 8);
  v17 = __chkstk_darwin(a1);
  v68 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v67 = (char *)&v66 - v19;
  v21 = type metadata accessor for ActionMenuView(255, a11, a14, v20);
  *(_QWORD *)&v97 = a11;
  *((_QWORD *)&v97 + 1) = a11;
  *(_QWORD *)&v98 = a14;
  *((_QWORD *)&v98 + 1) = a14;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v97);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(255, v21, v24);
  v26 = type metadata accessor for Section(255, &type metadata for Text, v25, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable("q[\r", v21);
  v28 = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v95[0] = WitnessTable;
  v95[1] = v28;
  v29 = v25;
  v30 = v78;
  v31 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v29, v95);
  v94[0] = &protocol witness table for Text;
  v94[1] = v31;
  v94[2] = &protocol witness table for EmptyView;
  v32 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v26, v94);
  *(_QWORD *)&v97 = a10;
  *((_QWORD *)&v97 + 1) = v26;
  v83 = v26;
  v84 = a15;
  *(_QWORD *)&v98 = v30;
  *((_QWORD *)&v98 + 1) = a13;
  v86 = v32;
  *(_QWORD *)&v99 = v32;
  *((_QWORD *)&v99 + 1) = a15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v97, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v70 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v34 = __chkstk_darwin(OpaqueTypeMetadata2);
  v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v38 = (char *)&v66 - v37;
  v39 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a10);
  v80 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v79 = (char *)&v66 - v40;
  v42 = type metadata accessor for ActionMenu(255, a11, a14, v41);
  v43 = type metadata accessor for Optional(0, v42);
  v44 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v96, v85, v43);
  if (*((_QWORD *)&v96[0] + 1))
  {
    v68 = (char *)&v66;
    v99 = v96[2];
    v100 = v96[3];
    v101 = v96[4];
    v97 = v96[0];
    v98 = v96[1];
    v45 = __chkstk_darwin(v44);
    v66 = &v66 - 14;
    v67 = v38;
    *(&v66 - 12) = (_QWORD *)a10;
    *(&v66 - 11) = (_QWORD *)a11;
    *(&v66 - 10) = v30;
    *(&v66 - 9) = (_QWORD *)a13;
    v46 = v30;
    v47 = v84;
    *(&v66 - 8) = (_QWORD *)a14;
    *(&v66 - 7) = v47;
    v69 = v39;
    *(&v66 - 6) = v82;
    *(&v66 - 5) = &v97;
    __chkstk_darwin(v45);
    *(&v66 - 8) = (_QWORD *)a10;
    *(&v66 - 7) = (_QWORD *)a11;
    *(&v66 - 6) = v46;
    *(&v66 - 5) = (_QWORD *)a13;
    v48 = swift_allocObject(&unk_100500E48, 32, 7);
    v49 = v77;
    *(_QWORD *)(v48 + 16) = v76;
    *(_QWORD *)(v48 + 24) = v49;
    sub_1000D7608(v85);
    swift_retain(v49);
    v50 = swift_checkMetadataState(0, v83);
    View.contextMenu<A, B>(menuItems:preview:previewAction:)(sub_1000D74AC, v66, sub_1000D75B0, &v66 - 10, sub_1000D75E8, v48, a10, v50, v46, a13, v86, v47);
    swift_release(v48);
    v88 = a10;
    v89 = v50;
    v90 = v46;
    v91 = a13;
    v92 = v86;
    v93 = v47;
    v30 = v46;
    v15 = a13;
    v16 = a10;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v88, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v52 = v70;
    v53 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    v54 = v67;
    v53(v67, v36, OpaqueTypeMetadata2);
    v55 = *(void (**)(char *, uint64_t))(v52 + 8);
    v55(v36, OpaqueTypeMetadata2);
    v53(v36, v54, OpaqueTypeMetadata2);
    v56 = v79;
    v57 = OpaqueTypeConformance2;
    v39 = v69;
    sub_1000D6B5C((uint64_t)v36, OpaqueTypeMetadata2, a10, v57, a13);
    sub_1000D76A8(v85);
    v55(v36, OpaqueTypeMetadata2);
    v55(v54, OpaqueTypeMetadata2);
  }
  else
  {
    v58 = v69;
    v59 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v60 = v67;
    v59(v67, (char *)v82, a10);
    v61 = (uint64_t)v68;
    v59(v68, v60, a10);
    *(_QWORD *)&v97 = a10;
    *((_QWORD *)&v97 + 1) = v83;
    *(_QWORD *)&v98 = v30;
    *((_QWORD *)&v98 + 1) = a13;
    *(_QWORD *)&v99 = v86;
    *((_QWORD *)&v99 + 1) = v84;
    v62 = swift_getOpaqueTypeConformance2(&v97, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v56 = v79;
    sub_1000D6C20(v61, OpaqueTypeMetadata2, a10, v62, a13);
    v63 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v63(v61, a10);
    v63((uint64_t)v60, a10);
  }
  v88 = v16;
  v89 = v83;
  v90 = v30;
  v91 = v15;
  v92 = v86;
  v93 = v84;
  v87[0] = swift_getOpaqueTypeConformance2(&v88, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  v87[1] = v15;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v39, v87);
  v64 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v81, v56, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v56, v39);
}

uint64_t sub_1000D72C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[3];
  _QWORD v38[2];
  _QWORD v39[4];

  v34 = a1;
  v35 = a6;
  v32 = a4;
  v33 = a5;
  v36 = a8;
  v30 = a3;
  v31 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v39[0] = a7;
  v39[1] = a7;
  v39[2] = a10;
  v39[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v39);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_1000D6A0C(a2, v30, v32, v33, v35, a7, v31, a10);
  WitnessTable = swift_getWitnessTable("q[\r", v12);
  v25 = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v38[0] = WitnessTable;
  v38[1] = v25;
  v26 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v16, v38);
  v37[0] = &protocol witness table for Text;
  v37[1] = v26;
  v37[2] = &protocol witness table for EmptyView;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v17, v37);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_1000D74AC@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1000D72C8(v1[8], v1[9], v1[10], v1[11], v1[12], v1[2], v1[3], a1, v1[5], v1[6]);
}

uint64_t sub_1000D74E8@<X0>(uint64_t a1@<X4>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void (*)(void))__chkstk_darwin(v5);
  v10 = (char *)&v14 - v9;
  v8();
  v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t sub_1000D75B0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1000D74E8(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1000D75C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D75E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000D7608(uint64_t a1)
{
  sub_1000D7650(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t sub_1000D7650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v13;
  uint64_t result;

  if (a2)
  {
    v13 = a7;
    swift_retain(a10);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

uint64_t sub_1000D76A8(uint64_t a1)
{
  sub_1000D76F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

void sub_1000D76F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_release(a10);

  }
}

_QWORD *sub_1000D7754@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, __int128 *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *, __int128 *, uint64_t);
  _QWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[7];
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  sub_1000D1D18((uint64_t)a1);
  sub_1000D79BC(a1, 1, 0, 0, a3, a4, (uint64_t)v40);
  v46 = v40[4];
  v47 = v40[5];
  v48 = v40[6];
  *(_QWORD *)&v49 = v41;
  v42 = v40[0];
  v43 = v40[1];
  v44 = v40[2];
  v45 = v40[3];
  *(_QWORD *)&v51 = a3;
  *((_QWORD *)&v51 + 1) = a3;
  *(_QWORD *)&v52 = a4;
  *((_QWORD *)&v52 + 1) = a4;
  v10 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)&v51);
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)(v11 + 16) = a2;
  v13 = type metadata accessor for ActionMenuView(0, a3, a4, v12);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable("q[\r", v13);
  v15 = swift_getWitnessTable(byte_10042B4C8, v10);
  View.environmentObject<A>(_:)(&v51, v11, v13, v10, WitnessTable, v15);
  swift_release(v11);
  sub_1000DB29C(v40);
  v48 = v57;
  v49 = v58;
  v44 = v53;
  v45 = v54;
  v46 = v55;
  v47 = v56;
  v42 = v51;
  v43 = v52;
  v28 = v57;
  v29 = v58;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v27 = v56;
  v50 = v59;
  v30 = v59;
  v22 = v51;
  v23 = v52;
  v16 = type metadata accessor for Optional(255, v10);
  v17 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v16);
  v18 = type metadata accessor for ModifiedContent(0, v13, v17);
  v21[0] = WitnessTable;
  v21[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v17);
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v18, v21);
  v19 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(&v31, &v22, v18);
  sub_1000DB320(&v42);
  v57 = v37;
  v58 = v38;
  v53 = v33;
  v54 = v34;
  v55 = v35;
  v56 = v36;
  v51 = v31;
  v52 = v32;
  v28 = v37;
  v29 = v38;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v27 = v36;
  v59 = v39;
  v30 = v39;
  v22 = v31;
  v23 = v32;
  v19(a5, &v22, v18);
  return sub_1000DB320(&v51);
}

__n128 sub_1000D79BC@<Q0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  __n128 result;
  uint64_t v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];

  v21 = a1[1];
  v22 = *a1;
  v20 = a1[2];
  v12 = *((_QWORD *)a1 + 6);
  v13 = *((_BYTE *)a1 + 56) & 1;
  v23[0] = a5;
  v23[1] = a5;
  v23[2] = a6;
  v23[3] = a6;
  v14 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v23);
  WitnessTable = swift_getWitnessTable(byte_10042B4C8, v14);
  v19 = (__n128)a1[4];
  v16 = EnvironmentObject.init()(v14, WitnessTable);
  *(_OWORD *)a7 = v22;
  *(_OWORD *)(a7 + 16) = v21;
  *(_OWORD *)(a7 + 32) = v20;
  *(_QWORD *)(a7 + 48) = v12;
  *(_BYTE *)(a7 + 56) = v13;
  result = v19;
  *(__n128 *)(a7 + 64) = v19;
  *(_BYTE *)(a7 + 80) = a2;
  *(_QWORD *)(a7 + 88) = a3;
  *(_QWORD *)(a7 + 96) = a4;
  *(_QWORD *)(a7 + 104) = v16;
  *(_QWORD *)(a7 + 112) = v18;
  return result;
}

uint64_t sub_1000D7A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72[16];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];

  v62 = a7;
  v65 = a6;
  v66 = a5;
  v64 = a4;
  v67 = a3;
  v61 = a2;
  v60 = a1;
  v71 = a9;
  v54 = a11;
  v53 = a10;
  v70 = type metadata accessor for MenuOrder(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a8 + 16);
  v13 = *(_QWORD *)(a8 + 24);
  v16 = type metadata accessor for ActionMenuView(255, v14, v13, v15);
  v17 = type metadata accessor for Section(255, &type metadata for Text, v16, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable("q[\r", v16);
  v85[0] = &protocol witness table for Text;
  v85[1] = WitnessTable;
  v85[2] = &protocol witness table for EmptyView;
  v57 = v17;
  v56 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v17, v85);
  v81 = a10;
  v82 = v17;
  v83 = a11;
  v84 = v56;
  v19 = type metadata accessor for Menu(0, &v81);
  v59 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v55 = (char *)&v50 - v20;
  v21 = v14;
  v81 = v14;
  v82 = v14;
  v83 = v13;
  v84 = v13;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v81);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(0, v19, v24);
  v58 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v50 - v26);
  v28 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v19);
  v50 = v28;
  v29 = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v80[0] = v28;
  v80[1] = v29;
  v51 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v25, v80);
  v81 = v25;
  v82 = v51;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v81, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 0);
  v52 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v31 = __chkstk_darwin(OpaqueTypeMetadata2);
  v33 = (char *)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v50 - v34;
  v36 = v53;
  v73 = v21;
  v74 = v53;
  v37 = v54;
  v75 = v13;
  v76 = v54;
  v77 = v60;
  v78 = v61;
  v79 = v63;
  v38 = v62;
  swift_retain(v62);
  v49 = v37;
  v39 = v55;
  Menu.init(onPresentationChanged:content:label:)(v65, v38, sub_1000D8130, v72, v64, v66, v36, v57, v49, v56);
  v40 = swift_allocObject(v22, 24, 7);
  *(_QWORD *)(v40 + 16) = v67;
  swift_bridgeObjectRetain();
  v41 = swift_getWitnessTable(byte_10042B4C8, v22);
  View.environmentObject<A>(_:)(v27, v40, v19, v22, v50, v41);
  v42 = swift_release(v40);
  v43 = (*(uint64_t (**)(char *, uint64_t, __n128))(v59 + 8))(v39, v19, v42);
  v44 = v68;
  static MenuOrder.fixed.getter(v43);
  View.menuOrder(_:)(v44, v25, v51);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v70);
  (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v27, v25);
  v45 = v52;
  v46 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v46(v35, v33, OpaqueTypeMetadata2);
  v47 = *(void (**)(char *, uint64_t))(v45 + 8);
  v47(v33, OpaqueTypeMetadata2);
  v46(v71, v35, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v47)(v35, OpaqueTypeMetadata2);
}

uint64_t sub_1000D7F6C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t WitnessTable;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  _QWORD v38[2];

  v28 = a3;
  v29 = a7;
  v27 = a5;
  v30 = a8;
  v12 = type metadata accessor for ActionMenuView(255, a4, a6, a4);
  v13 = type metadata accessor for Section(0, &type metadata for Text, v12, &type metadata for EmptyView);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  if (a2)
    v20 = a1;
  else
    v20 = 0;
  v21 = 0xE000000000000000;
  if (a2)
    v21 = a2;
  v38[0] = v20;
  v38[1] = v21;
  v32 = a4;
  v33 = v27;
  v34 = a6;
  v35 = v29;
  v36 = v28;
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable("q[\r", v12);
  v23 = sub_1000AE4D8();
  Section<>.init<A>(_:content:)(v38, sub_1000DB27C, v31, v12, &type metadata for String, WitnessTable, v23);
  v37[0] = &protocol witness table for Text;
  v37[1] = WitnessTable;
  v37[2] = &protocol witness table for EmptyView;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v13, v37);
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v19, v17, v13);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  v24(v30, v19, v13);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v13);
}

uint64_t sub_1000D8130@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1000D7F6C(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

double sub_1000D8144@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, __int128 *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *, __int128 *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  char v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[7];
  uint64_t v38;

  sub_1000D1D18((uint64_t)a1);
  sub_1000D79BC(a1, 1, 0, 0, a2, a3, (uint64_t)v37);
  v24 = v37[4];
  v25 = v37[5];
  *(_OWORD *)v26 = v37[6];
  *(_QWORD *)&v26[16] = v38;
  v20 = v37[0];
  v21 = v37[1];
  v22 = v37[2];
  v23 = v37[3];
  v8 = type metadata accessor for ActionMenuView(0, a2, a3, v7);
  swift_getWitnessTable("q[\r", v8);
  v9 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(&v27, &v20, v8);
  sub_1000DB29C(v37);
  v10 = *((_QWORD *)&v27 + 1);
  v11 = *((_QWORD *)&v28 + 1);
  v12 = *((_QWORD *)&v29 + 1);
  v13 = v30;
  v14 = *((_QWORD *)&v32 + 1);
  v15 = v34;
  v16 = v35;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  *(_QWORD *)&v23 = v30;
  BYTE8(v23) = v31;
  v24 = v32;
  LOBYTE(v25) = v33;
  *((_QWORD *)&v25 + 1) = v34;
  *(_QWORD *)v26 = v35;
  v18 = v36;
  *(_OWORD *)&v26[8] = v36;
  v9(a4, &v20, v8);
  swift_release(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);

  sub_1000DB26C(v15, v16);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t WeakValuesDictionary.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_1000D82F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t result;
  _OWORD v6[2];

  v3 = *(_OWORD *)(a1 + 96);
  v6[0] = *(_OWORD *)(a1 + 80);
  v6[1] = v3;
  v4 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v6);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a2 = result;
  return result;
}

uint64_t sub_1000D8340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  void (*v51)(uint64_t);
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  void (*v106)(uint64_t, uint64_t, __n128);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t WitnessTable;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void (*v144)(uint64_t);
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[4];
  _QWORD v153[2];
  uint64_t v154[2];
  _QWORD v155[2];
  _QWORD v156[2];
  _QWORD v157[2];
  _QWORD v158[2];
  uint64_t v159;
  _QWORD v160[2];
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;

  v3 = v2;
  v150 = a2;
  v5 = sub_100011650(&qword_10054D8E0);
  v6 = *(_QWORD *)(a1 + 24);
  v151 = *(_QWORD *)(a1 + 16);
  v146 = v6;
  type metadata accessor for ActionMenu.Element(255, v151, v6, v7);
  v8 = type metadata accessor for Array(255);
  v10 = type metadata accessor for ActionMenuView.ItemView(255, v151, v6, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v10, a1);
  *(_QWORD *)&v161 = v8;
  *((_QWORD *)&v161 + 1) = &type metadata for String;
  *(_QWORD *)&v162 = v11;
  *((_QWORD *)&v162 + 1) = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v8);
  v133 = *((_QWORD *)&v162 + 1);
  *(_QWORD *)&v163 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v161);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_1000DAE9C();
  v160[0] = swift_getWitnessTable(byte_10042B5B8, v10);
  v160[1] = swift_getWitnessTable("q[\r", a1);
  v134 = v11;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11, v160);
  v159 = WitnessTable;
  v132 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v12, &v159);
  v158[0] = v132;
  v158[1] = &protocol witness table for _AppearanceActionModifier;
  v15 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v13, v158);
  v128 = v5;
  *(_QWORD *)&v161 = v5;
  *((_QWORD *)&v161 + 1) = v13;
  v127 = v14;
  *(_QWORD *)&v162 = v14;
  *((_QWORD *)&v162 + 1) = v15;
  v137 = v15;
  v16 = type metadata accessor for Menu(0, &v161);
  v121 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v124 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v123 = (char *)&v115 - v19;
  v20 = sub_100011650(&qword_10054D900);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v20, 0, 0);
  v22 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v126 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v125 = (char *)&v115 - v24;
  v120 = v20;
  v25 = __chkstk_darwin(v23);
  v119 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v122 = (char *)&v115 - v27;
  v145 = v16;
  v28 = type metadata accessor for _ConditionalContent(0, v22, v16);
  v140 = *(_QWORD *)(v28 - 8);
  v29 = __chkstk_darwin(v28);
  v139 = (char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v138 = (char *)&v115 - v32;
  v136 = v12;
  v130 = *(_QWORD *)(v12 - 8);
  v33 = __chkstk_darwin(v31);
  v129 = (char *)&v115 - v34;
  v141 = v13;
  v143 = *(_QWORD *)(v13 - 8);
  v35 = __chkstk_darwin(v33);
  v118 = (char *)&v115 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v142 = (char *)&v115 - v38;
  __chkstk_darwin(v37);
  v147 = (char *)&v115 - v39;
  v149 = type metadata accessor for _ConditionalContent(0, &type metadata for EmptyView, v28);
  v148 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v41 = (char *)&v115 - v40;
  v42 = *(_OWORD *)(v3 + 48);
  v163 = *(_OWORD *)(v3 + 32);
  v164 = v42;
  v165 = *(_OWORD *)(v3 + 64);
  v43 = *(_OWORD *)(v3 + 16);
  v161 = *(_OWORD *)v3;
  v162 = v43;
  v44 = *(_QWORD *)(sub_1000DAF20(a1) + 16);
  v45 = v146;
  v47 = type metadata accessor for ActionMenu(0, v151, v146, v46);
  v48 = swift_bridgeObjectRetain();
  v49 = ActionMenu.elements(excluding:)(v48, v47);
  v144 = v50;
  v52 = v51;
  swift_bridgeObjectRelease(v44);
  v154[0] = v49;
  v53 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v8);
  v135 = v8;
  v54 = Collection.isEmpty.getter(v8, v53);
  if ((v54 & 1) != 0)
  {
    v55 = swift_bridgeObjectRelease(v49);
    v144(v55);
    v56 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v22);
    v57 = v145;
    v58 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v145);
    v152[0] = v56;
    v152[1] = v58;
    v59 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28, v152);
    sub_1000D6B5C(v59, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v59);
    *(_QWORD *)&v60 = swift_release(v52).n128_u64[0];
    v61 = v41;
  }
  else
  {
    v117 = v41;
    v116 = v28;
    v62 = v145;
    v154[0] = v49;
    __chkstk_darwin(v54);
    v63 = v151;
    v113 = v151;
    v114 = v45;
    KeyPath = swift_getKeyPath(&unk_10042B550);
    v65 = swift_allocObject(&unk_100500F80, 152, 7);
    *(_QWORD *)(v65 + 16) = v63;
    *(_QWORD *)(v65 + 24) = v45;
    v66 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v65 + 96) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v65 + 112) = v66;
    *(_OWORD *)(v65 + 128) = *(_OWORD *)(v3 + 96);
    *(_QWORD *)(v65 + 144) = *(_QWORD *)(v3 + 112);
    v67 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v65 + 32) = *(_OWORD *)v3;
    *(_OWORD *)(v65 + 48) = v67;
    v68 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v65 + 64) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v65 + 80) = v68;
    sub_1000DB050(v3);
    v69 = v129;
    ForEach<>.init(_:id:content:)(v154, KeyPath, sub_1000DB044, v65, v135, v134, v133, &protocol witness table for String, WitnessTable);
    v70 = swift_allocObject(&unk_100500FA8, 32, 7);
    *(_QWORD *)(v70 + 16) = v144;
    *(_QWORD *)(v70 + 24) = v52;
    v144 = v52;
    swift_retain(v52);
    v71 = v147;
    v72 = v136;
    View.onAppear(perform:)(sub_1000DC31C, v70, v136, v132);
    v73 = swift_release(v70);
    v74 = (*(uint64_t (**)(char *, uint64_t, __n128))(v130 + 8))(v69, v72, v73);
    if ((BYTE8(v164) & 1) != 0)
    {
      v75 = __chkstk_darwin(v74);
      *(&v115 - 4) = v63;
      *(&v115 - 3) = v45;
      __chkstk_darwin(v75);
      *(&v115 - 4) = v63;
      *(&v115 - 3) = v45;
      v113 = v3;
      v76 = (uint64_t)v124;
      v77 = v141;
      Menu.init(content:label:)(sub_1000DB0E8);
      v57 = v62;
      v78 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v62);
      v79 = v121;
      v80 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
      v81 = v123;
      v80(v123, v76, v62);
      v82 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
      v82(v76, v62);
      v80((char *)v76, (uint64_t)v81, v62);
      v83 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v22);
      v84 = v138;
      sub_1000D6C20(v76, v22, v57, v83, v78);
      v82(v76, v57);
      v82((uint64_t)v81, v57);
      v61 = v117;
      v85 = v143;
    }
    else
    {
      v86 = *(uint64_t (**)(char *, char *, uint64_t))(v143 + 16);
      v77 = v141;
      v87 = v86(v142, v71, v141);
      v57 = v62;
      v84 = v138;
      if ((*(_BYTE *)(v3 + 80) & 1) != 0)
      {
        v89 = (uint64_t)v122;
        Divider.init()(v87);
        v90 = type metadata accessor for Divider(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 0, 1, v90);
      }
      else
      {
        v88 = type metadata accessor for Divider(0);
        v89 = (uint64_t)v122;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v122, 1, 1, v88);
      }
      v61 = v117;
      v91 = (uint64_t)v118;
      v86(v118, v142, v77);
      v154[0] = v91;
      v92 = v119;
      sub_1000DB100(v89, v119);
      v154[1] = v92;
      v153[0] = v77;
      v153[1] = v120;
      v152[2] = v137;
      v152[3] = sub_1000DB148();
      v93 = (uint64_t)v125;
      sub_1000D9574(v154, 2uLL, (uint64_t)v153);
      sub_1000DB1F4(v92);
      v94 = v143;
      v95 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
      v95(v91, v77);
      v96 = v89;
      v97 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v22);
      v98 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v57);
      sub_1000D6B5C(v93, v22, v57, v97, v98);
      v99 = v93;
      v85 = v94;
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v99, v22);
      sub_1000DB1F4(v96);
      v95((uint64_t)v142, v77);
    }
    v100 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v22);
    v101 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v57);
    v157[0] = v100;
    v157[1] = v101;
    v28 = v116;
    v102 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v116, v157);
    v103 = v140;
    v104 = (uint64_t)v139;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v139, v84, v28);
    sub_1000D6C20(v104, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v102);
    v105 = swift_release(v144);
    v106 = *(void (**)(uint64_t, uint64_t, __n128))(v103 + 8);
    v106(v104, v28, v105);
    ((void (*)(char *, uint64_t))v106)(v84, v28);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v147, v77);
  }
  v107 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v22, v60);
  v108 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v57);
  v156[0] = v107;
  v156[1] = v108;
  v109 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28, v156);
  v155[0] = &protocol witness table for EmptyView;
  v155[1] = v109;
  v110 = v149;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v149, v155);
  v111 = v148;
  (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v150, v61, v110);
  return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v61, v110);
}

uint64_t sub_1000D8F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(__int128 *, __int128 *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v61;
  id v62;
  __int128 v63;
  uint64_t v64;
  uint64_t WitnessTable;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD v78[2];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  char v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD v95[2];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  void *v99;
  char v100;
  __int128 v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  _OWORD v106[7];
  uint64_t v107;
  __int128 v108[6];

  v69 = a1;
  v70 = a2;
  v75 = a5;
  v7 = type metadata accessor for ActionMenuView.ItemView(0, a3, a4, a4);
  v66 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v68 = (char *)&v61 - v11;
  v67 = type metadata accessor for ActionMenu.Item(0, a3, a4, v12);
  *(_QWORD *)&v71 = *(_QWORD *)(v67 - 8);
  v13 = __chkstk_darwin(v67);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v61 - v16;
  v19 = type metadata accessor for ActionMenu.Element(0, a3, a4, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (__int128 *)((char *)&v61 - v21);
  v24 = type metadata accessor for ActionMenuView(255, a3, a4, v23);
  v72 = v7;
  v76 = v24;
  v25 = type metadata accessor for _ConditionalContent(0, v7, v24);
  v73 = *(_QWORD *)(v25 - 8);
  v74 = v25;
  __chkstk_darwin(v25);
  v77 = (char *)&v61 - v26;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v20 + 16))(v22, v69, v19);
  if (swift_getEnumCaseMultiPayload(v22, v19) == 1)
  {
    v27 = v22[3];
    v108[2] = v22[2];
    v108[3] = v27;
    v108[4] = v22[4];
    v28 = v22[1];
    v108[0] = *v22;
    v108[1] = v28;
    v29 = *(_QWORD *)(v70 + 88);
    v30 = *(_QWORD *)(v70 + 96);
    sub_1000D1D18((uint64_t)v108);
    sub_1000DB0D8(v29, v30);
    sub_1000D79BC(v108, 1, v29, v30, a3, a4, (uint64_t)v106);
    v93 = v106[4];
    v94 = v106[5];
    v95[0] = v106[6];
    *(_QWORD *)&v95[1] = v107;
    v89 = v106[0];
    v90 = v106[1];
    v91 = v106[2];
    v92 = v106[3];
    v31 = v76;
    WitnessTable = swift_getWitnessTable("q[\r", v76);
    v32 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(&v96, &v89, v31);
    sub_1000DB29C(v106);
    v67 = *((_QWORD *)&v97 + 1);
    v68 = (char *)*((_QWORD *)&v96 + 1);
    v66 = *((_QWORD *)&v98 + 1);
    v62 = v99;
    v64 = *((_QWORD *)&v101 + 1);
    v69 = v104;
    v70 = v103;
    v79 = v96;
    v80 = v97;
    v81 = v98;
    v82 = v99;
    v83 = v100;
    v84 = v101;
    v85 = v102;
    v86 = v103;
    v87 = v104;
    v71 = v105;
    v88 = v105;
    v32(&v89, &v79, v31);
    v33 = *((_QWORD *)&v89 + 1);
    v34 = *((_QWORD *)&v90 + 1);
    v35 = *((_QWORD *)&v91 + 1);
    v36 = (void *)v92;
    v37 = *((_QWORD *)&v93 + 1);
    v39 = *((_QWORD *)&v94 + 1);
    v38 = *(_QWORD *)&v95[0];
    v79 = v89;
    v80 = v90;
    v81 = v91;
    v82 = (void *)v92;
    v83 = BYTE8(v92);
    v84 = v93;
    v85 = v94;
    v86 = *((_QWORD *)&v94 + 1);
    v87 = *(_QWORD *)&v95[0];
    v63 = *(_OWORD *)((char *)v95 + 8);
    v88 = *(_OWORD *)((char *)v95 + 8);
    v40 = v72;
    v41 = swift_getWitnessTable(byte_10042B5B8, v72);
    sub_1000D6C20((uint64_t)&v79, v40, v31, v41, WitnessTable);
    sub_1000D1A14(v108);
    swift_release(v37);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v33);

    sub_1000DB26C(v39, v38);
    swift_release(v64);
    swift_bridgeObjectRelease(v66);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v68);
    swift_release(v63);

    sub_1000DB26C(v70, v69);
    *(_QWORD *)&v42 = swift_release(v71).n128_u64[0];
  }
  else
  {
    v43 = v71;
    v44 = v67;
    (*(void (**)(char *, __int128 *, uint64_t))(v71 + 32))(v17, v22, v67);
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v15, v17, v44);
    v45 = *(_QWORD *)(v70 + 88);
    v46 = *(_QWORD *)(v70 + 96);
    sub_1000D94F0((uint64_t)v15, v45, v46, a3, a4, (uint64_t)v10);
    v47 = v72;
    v70 = swift_getWitnessTable(byte_10042B5B8, v72);
    v48 = v66;
    v49 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v50 = v68;
    v49(v68, v10, v47);
    sub_1000DB0D8(v45, v46);
    v51 = *(void (**)(char *, uint64_t))(v48 + 8);
    v51(v10, v47);
    v49(v10, v50, v47);
    v52 = v76;
    v53 = swift_getWitnessTable("q[\r", v76);
    sub_1000D6B5C((uint64_t)v10, v47, v52, v70, v53);
    v54 = v10;
    v40 = v47;
    v51(v54, v47);
    v51(v50, v47);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v44);
  }
  v55 = swift_getWitnessTable(byte_10042B5B8, v40, v42);
  v56 = swift_getWitnessTable("q[\r", v76);
  v78[0] = v55;
  v78[1] = v56;
  v57 = v74;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v74, v78);
  v58 = v73;
  v59 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v75, v77, v57);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v57);
}

uint64_t sub_1000D94F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v12 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for ActionMenuView.ItemView(0, a4, a5, v13);
  v15 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t sub_1000D9574(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_1000D9728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t WitnessTable;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  _QWORD v26[2];
  _QWORD v27[5];

  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v9 = type metadata accessor for Array(255);
  v11 = type metadata accessor for ActionMenuView.ItemView(255, a2, a3, v10);
  v13 = type metadata accessor for ActionMenuView(255, a2, a3, v12);
  v14 = type metadata accessor for _ConditionalContent(255, v11, v13);
  v27[0] = v9;
  v27[1] = &type metadata for String;
  v27[2] = v14;
  v27[3] = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v9);
  v27[4] = &protocol witness table for String;
  v15 = type metadata accessor for ForEach(255, v27);
  v16 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _AppearanceActionModifier);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v24 - v18;
  WitnessTable = swift_getWitnessTable(byte_10042B5B8, v11);
  v21 = swift_getWitnessTable("q[\r", v13);
  v26[0] = WitnessTable;
  v26[1] = v21;
  v25 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14, v26);
  v24[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v15, &v25);
  v24[1] = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v16, v24);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v22(v19, a1, v16);
  v22(a5, (uint64_t)v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_1000D98F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];

  v8 = sub_10000B4C8(&qword_10054D8F8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(qword_10054D918);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[6])
  {
    v16 = __chkstk_darwin(v13);
    v27[1] = a4;
    v27[-4] = a2;
    v27[-3] = a3;
    v27[-2] = a1;
    __chkstk_darwin(v16);
    v27[-2] = v17;
    v18 = v17;
    Label.init(title:icon:)(sub_1000DB234, &v27[-6], sub_1000DB240, &v27[-4], &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
    swift_storeEnumTagMultiPayload(v15, v12, 0);
    v19 = sub_100012324(&qword_10054D8F0, &qword_10054D8F8, (const char *)&protocol conformance descriptor for Label<A, B>);
    _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v19, &protocol witness table for Text);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v21 = a1[5];
    v28[0] = a1[4];
    v28[1] = v21;
    v22 = sub_1000AE4D8();
    swift_bridgeObjectRetain();
    *(_QWORD *)v15 = Text.init<A>(_:)(v28, &type metadata for String, v22);
    *((_QWORD *)v15 + 1) = v23;
    v15[16] = v24 & 1;
    *((_QWORD *)v15 + 3) = v25;
    swift_storeEnumTagMultiPayload(v15, v12, 1);
    v26 = sub_100012324(&qword_10054D8F0, &qword_10054D8F8, (const char *)&protocol conformance descriptor for Label<A, B>);
    return _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v26, &protocol witness table for Text);
  }
}

uint64_t sub_1000D9B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 40);
  v9[0] = *(_QWORD *)(a1 + 32);
  v9[1] = v3;
  v4 = sub_1000AE4D8();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1000D9BC8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = sub_10000B4C8(&qword_10054D9A0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000B4C8(&qword_10054D9A8);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v10 = __chkstk_darwin(v9);
  v35 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v34 = (char *)&v32 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v16 = *(int *)(type metadata accessor for ActionMenu.Item(0, v13, v14, v15) + 36);
  v33 = v2;
  (*(void (**)(_QWORD *__return_ptr))(v2 + v16))(v39);
  v17 = v40;
  v18 = v41;
  sub_10000D900(v39, v40);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18) & 1) != 0)
  {
    static ButtonRole.destructive.getter(v8);
    v20 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  }
  else
  {
    v19 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v33, a1);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(&unk_100501028, v22 + v5, v21 | 7);
  *(_QWORD *)(v23 + 16) = v13;
  *(_QWORD *)(v23 + 24) = v14;
  v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __chkstk_darwin(v24);
  *(&v32 - 2) = (uint64_t)v39;
  v25 = sub_10000B4C8(&qword_10054D9B0);
  v26 = sub_100012324(&qword_10054D9B8, &qword_10054D9B0, (const char *)&protocol conformance descriptor for Label<A, B>);
  v27 = v35;
  Button.init(role:action:label:)(v8, sub_1000DC098, v23, sub_1000DC0E8, &v32 - 4, v25, v26);
  v28 = v37;
  v29 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v30 = v34;
  v29(v34, v27, v37);
  v29(v38, v30, v28);
  return sub_100011758(v39);
}

uint64_t ActionMenuItemStyle.buttonRole.getter@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    static ButtonRole.destructive.getter(a2);
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 0;
  }
  else
  {
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 1;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t sub_1000D9EEC(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 112);
}

uint64_t sub_1000D9F30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  _QWORD v18[2];
  _QWORD v19[3];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, v5, v6, a4);
  v21 = v5;
  v22 = v5;
  v23 = v6;
  v24 = v6;
  v9 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v21);
  v10 = type metadata accessor for Optional(255, v9);
  v11 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v10);
  v12 = type metadata accessor for ModifiedContent(255, v8, v11);
  v13 = type metadata accessor for Section(255, &type metadata for Text, v12, &type metadata for EmptyView);
  v20[0] = swift_getWitnessTable("q[\r", v8);
  v20[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v11);
  v19[0] = &protocol witness table for Text;
  v19[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v12, v20);
  v19[2] = &protocol witness table for EmptyView;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v13, v19);
  v21 = v4;
  v22 = v13;
  v23 = v7;
  v24 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v21, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v16 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v21 = v4;
  v22 = v13;
  v23 = v7;
  v24 = WitnessTable;
  v18[0] = swift_getOpaqueTypeConformance2(&v21, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v18[1] = v7;
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v16, v18);
}

uint64_t sub_1000DA0B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  _QWORD v31[2];

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = type metadata accessor for ActionMenuView(255, v5, v8, a4);
  v24 = v5;
  v25 = v5;
  v26 = v8;
  v27 = v8;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v24);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  v15 = type metadata accessor for Section(255, &type metadata for Text, v14, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable("q[\r", v10);
  v17 = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v31[0] = WitnessTable;
  v31[1] = v17;
  v18 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v14, v31);
  v30[0] = &protocol witness table for Text;
  v30[1] = v18;
  v30[2] = &protocol witness table for EmptyView;
  v19 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v15, v30);
  v24 = v4;
  v25 = v15;
  v26 = v7;
  v27 = v6;
  v28 = v19;
  v29 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v24, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v21 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v24 = v4;
  v25 = v15;
  v26 = v7;
  v27 = v6;
  v28 = v19;
  v29 = v9;
  v23[0] = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  v23[1] = v6;
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21, v23);
}

uint64_t sub_1000DA24C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t WitnessTable;
  _QWORD v22[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, *a1, v6, a4);
  v9 = type metadata accessor for Section(255, &type metadata for Text, v8, &type metadata for EmptyView);
  v22[0] = &protocol witness table for Text;
  v22[1] = swift_getWitnessTable("q[\r", v8);
  v22[2] = &protocol witness table for EmptyView;
  v18 = v5;
  v19 = v9;
  v20 = v7;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Section<A, B, C>, v9, v22);
  v10 = type metadata accessor for Menu(255, &v18);
  v18 = v4;
  v19 = v4;
  v20 = v6;
  WitnessTable = v6;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v18);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  v17[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v10);
  v17[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v15 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v14, v17);
  v18 = v14;
  v19 = v15;
  return swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
}

uint64_t sub_1000DA3A4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_release(*(_QWORD *)(a1 + 72));
  if (*(_QWORD *)(a1 + 88))
    swift_release(*(_QWORD *)(a1 + 96));
  return swift_release(*(_QWORD *)(a1 + 104));
}

uint64_t sub_1000DA3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = (_OWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v11 = v7;
  swift_retain(v8);
  if (v10)
  {
    v12 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v9;
  }
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain(v13);
  return a1;
}

uint64_t sub_1000DA4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  if (!v15)
  {
    if (v16)
    {
      v19 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v16;
      *(_QWORD *)(a1 + 96) = v19;
      swift_retain(v19);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v16)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  swift_retain(v17);
  swift_release(v18);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v21;
  swift_retain(v21);
  swift_release(v20);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for ApplicationCapabilities(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_1000DA630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!v11)
  {
    if (v10)
    {
      v14 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v10;
      *(_QWORD *)(a1 + 96) = v14;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  swift_release(v13);
LABEL_8:
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v15);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t sub_1000DA720(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1000DA768(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *sub_1000DA7C4()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1000DA7D0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100483D90, 1);
}

double sub_1000DA804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = type metadata accessor for ActionMenuView.ItemView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  v12 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v16 = type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_100501050, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  v21 = sub_10024D8EC((uint64_t)v14, (uint64_t)&unk_10054D9F8, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1000DA968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_1000DA9D8, v8, v9);
}

uint64_t sub_1000DA9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_1000DAA44;
  return v9();
}

uint64_t sub_1000DAA44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1000DAB0C;
  else
    v4 = sub_1000DAAA4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1000DAAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  v5 = *(void (**)(void))(v3 + *(int *)(type metadata accessor for ActionMenuView.ItemView(0, v2, v1, v4) + 36));
  if (v5)
    v5();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000DAB0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000DAB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[4];
  _BYTE v7[16];
  uint64_t v8;

  v8 = a1;
  v6[2] = a1;
  v1 = sub_10000B4C8(&qword_10054D9C0);
  v2 = sub_10000B4C8(&qword_10054D9C8);
  v3 = sub_100012324(&qword_10054D9D0, &qword_10054D9C0, (const char *)&protocol conformance descriptor for LabelGroup<A>);
  v4 = sub_1000DC100();
  return Label.init(title:icon:)(sub_1000DC0F0, v7, sub_1000DC0F8, v6, v1, v2, v3, v4);
}

uint64_t sub_1000DABE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v4[2] = a1;
  v1 = sub_10000B4C8(&qword_10054D9E0);
  v2 = sub_100012324(&qword_10054D9E8, &qword_10054D9E0, (const char *)&protocol conformance descriptor for TupleView<A>);
  return LabelGroup.init(content:)(sub_1000DC15C, v4, v1, v2);
}

uint64_t sub_1000DAC60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v29;
  unint64_t v30;

  v4 = a1[3];
  v5 = a1[4];
  sub_10000D900(a1, v4);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v30 = v6;
  v7 = sub_1000AE4D8();
  v8 = Text.init<A>(_:)(&v29, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = a1[3];
  v15 = a1[4];
  sub_10000D900(a1, v16);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
  if (v18)
    v19 = v17;
  else
    v19 = 0;
  v20 = 0xE000000000000000;
  if (v18)
    v20 = v18;
  v29 = v19;
  v30 = v20;
  v21 = Text.init<A>(_:)(&v29, &type metadata for String, v7);
  v23 = v22;
  v25 = v24;
  LOBYTE(v29) = v14;
  v27 = v26 & 1;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v26 & 1;
  *(_QWORD *)(a2 + 56) = v24;
  sub_10002EBA0(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v21, v23, v27);
  swift_bridgeObjectRetain();
  sub_10001DA20(v21, v23, v27);
  swift_bridgeObjectRelease(v25);
  sub_10001DA20(v8, v10, v29);
  return swift_bridgeObjectRelease(v12);
}

void sub_1000DADD0(_QWORD *a1@<X0>, uint64_t (**a2)(__n128)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  uint64_t v8;
  __n128 v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000D900(a1, v3);
  v7 = (uint64_t (*)(__n128))(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v7)
  {
    v8 = v5;
    v9 = swift_release(v6);
    v7 = (uint64_t (*)(__n128))v7(v9);
    swift_release(v8);
  }
  *a2 = v7;
}

uint64_t sub_1000DAE40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D8340(a1, a2);
}

uint64_t type metadata accessor for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView.ItemView);
}

unint64_t sub_1000DAE9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10054D8E8;
  if (!qword_10054D8E8)
  {
    v1 = sub_100011650(&qword_10054D8E0);
    v2[0] = sub_100012324(&qword_10054D8F0, &qword_10054D8F8, (const char *)&protocol conformance descriptor for Label<A, B>);
    v2[1] = &protocol witness table for Text;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054D8E8);
  }
  return result;
}

uint64_t sub_1000DAF20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t result;
  _QWORD v8[4];

  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(a1 + 24);
  v8[0] = *(_QWORD *)(a1 + 16);
  v8[1] = v8[0];
  v8[2] = v4;
  v8[3] = v4;
  v5 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v8);
  WitnessTable = swift_getWitnessTable(byte_10042B4C8, v5);
  if (v3)
    return v3;
  result = EnvironmentObject.error()(0, v2, v5, WitnessTable);
  __break(1u);
  return result;
}

uint64_t sub_1000DAF98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = type metadata accessor for ActionMenu.Element(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = ActionMenu.Element.id.getter(v5, v6, v7, v8);
  *a4 = result;
  a4[1] = v10;
  return result;
}

uint64_t sub_1000DAFD0()
{
  return 16;
}

__n128 sub_1000DAFDC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000DAFE8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 104));
  if (*(_QWORD *)(v0 + 120))
    swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1000DB044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1000D8F40(a1, v2 + 32, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1000DB050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(id *)(a1 + 48);
  swift_retain(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000DB0D8(v3, v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_1000DB0D8(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_1000DB0E8@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_1000D9728(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_1000DB0F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000D98F0(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1000DB100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10054D900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000DB148()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10054D908;
  if (!qword_10054D908)
  {
    v1 = sub_100011650(&qword_10054D900);
    v2 = sub_1000DB1AC();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10054D908);
  }
  return result;
}

unint64_t sub_1000DB1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054D910;
  if (!qword_10054D910)
  {
    v1 = type metadata accessor for Divider(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Divider, v1);
    atomic_store(result, (unint64_t *)&qword_10054D910);
  }
  return result;
}

uint64_t sub_1000DB1F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_10054D900);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000DB234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000D9B60(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1000DB240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Image.init(uiImage:)(*(id *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1000DB26C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

double sub_1000DB27C@<D0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_1000D8144(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

_QWORD *sub_1000DB28C@<X0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_1000D7754(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

_QWORD *sub_1000DB29C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_1000DB26C(v6, v7);
  swift_release(v8);
  return a1;
}

_QWORD *sub_1000DB320(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  v9 = a1[15];
  v10 = a1[16];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_1000DB26C(v6, v7);
  swift_release(v9);
  swift_release(v8);
  swift_release(v10);
  return a1;
}

uint64_t sub_1000DB3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = &unk_10042B590;
    swift_initStructMetadata(a1, 0, 2, v7, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_1000DB434(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    v11 = v7 + 16;
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v13 = (char *)a2 + 7;
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v12 = *v14;
    v12[1] = v15;
    v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = ((unint64_t)v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (unint64_t *)((unint64_t)&v13[v11] & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    swift_retain(v15);
    swift_retain(v18);
    swift_retain(v21);
    if (v24 < 0xFFFFFFFF)
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      return v4;
    }
    v10 = v23[1];
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v10;
  }
  swift_retain(v10);
  return v4;
}

uint64_t sub_1000DB580(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD *v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + 7;
  v5 = (v4 + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v6 + 8));
  result = swift_release(*(_QWORD *)(((v6 + 23) & 0xFFFFFFFFFFFFF8) + 8));
  v8 = (_QWORD *)((a1 + (((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL)
    return swift_release(v8[1]);
  return result;
}

uint64_t sub_1000DB630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v17 = (a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (unint64_t *)((a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v18;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  if (v19 < 0xFFFFFFFF)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  else
  {
    v20 = v18[1];
    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    swift_retain(v20);
  }
  return a1;
}

uint64_t sub_1000DB730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v20 = (_QWORD *)((a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)((a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      swift_retain(v25);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (v22 < 0xFFFFFFFF)
  {
    swift_release(v20[1]);
    goto LABEL_7;
  }
  v23 = v21[1];
  v24 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

uint64_t sub_1000DB88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v12 = (a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (uint64_t *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if ((unint64_t)*v13 < 0xFFFFFFFF)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v15 = v13[1];
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
  }
  return a1;
}

uint64_t sub_1000DB95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *v8;
  swift_release(v9);
  v10 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = *(_QWORD *)(v10 + 8);
  *(_OWORD *)v10 = *v11;
  swift_release(v12);
  v13 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  v15 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = (_QWORD *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (unint64_t *)((a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  if (*v16 < 0xFFFFFFFFuLL)
  {
    if (v18 >= 0xFFFFFFFF)
    {
      v21 = v17[1];
      *v16 = v18;
      v16[1] = v21;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  if (v18 < 0xFFFFFFFF)
  {
    swift_release(v16[1]);
    goto LABEL_7;
  }
  v19 = v17[1];
  v20 = v16[1];
  *v16 = v18;
  v16[1] = v19;
  swift_release(v20);
  return a1;
}

uint64_t sub_1000DBA8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1000DBB20 + 4 * byte_10042B428[v10]))();
  }
}

void sub_1000DBBA4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1000DBCB0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1000DBD28);
}

void sub_1000DBCB8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1000DBCC0);
  JUMPOUT(0x1000DBD28);
}

void sub_1000DBD00()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1000DBD28);
}

void sub_1000DBD08()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1000DBD28);
}

uint64_t sub_1000DBD10(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1000DBD28);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1000DBD24);
    JUMPOUT(0x1000DBD1CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1000DBD40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t WitnessTable;
  void *v33;

  v4 = *a1;
  v5 = a1[1];
  type metadata accessor for ActionMenu.Element(255, *a1, v5, a4);
  v6 = type metadata accessor for Array(255);
  v8 = type metadata accessor for ActionMenuView.ItemView(255, v4, v5, v7);
  v10 = type metadata accessor for ActionMenuView(255, v4, v5, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v8, v10);
  v29 = v6;
  v30 = &type metadata for String;
  v31 = v11;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v6);
  v33 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v29);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_100011650(&qword_10054D900);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v14, 0, 0);
  v16 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = sub_100011650(&qword_10054D8E0);
  v18 = sub_1000DAE9C();
  v28[0] = swift_getWitnessTable(byte_10042B5B8, v8);
  v28[1] = swift_getWitnessTable("q[\r", v10);
  v27 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11, v28);
  v26[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v12, &v27);
  v26[1] = &protocol witness table for _AppearanceActionModifier;
  v19 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v13, v26);
  v29 = v17;
  v30 = (_QWORD *)v13;
  v31 = v18;
  WitnessTable = v19;
  v20 = type metadata accessor for Menu(255, &v29);
  v21 = type metadata accessor for _ConditionalContent(255, v16, v20);
  v22 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v21);
  v25[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v16);
  v25[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for Menu<A, B>, v20);
  v24[0] = &protocol witness table for EmptyView;
  v24[1] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21, v25);
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v22, v24);
}

uint64_t sub_1000DBF88(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100483DC4, 1);
}

uint64_t sub_1000DBFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v10, v5);
  v13 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release(*(_QWORD *)(v4 + v10 + v13[9] + 8));
  swift_release(*(_QWORD *)(v4 + v10 + v13[10] + 8));
  swift_release(*(_QWORD *)(v4 + v10 + v13[11] + 8));
  v14 = (_QWORD *)(v4 + v10 + *(int *)(v7 + 36));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

double sub_1000DC098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4) - 8) + 80);
  return sub_1000DA804(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_1000DC0E8()
{
  uint64_t v0;

  return sub_1000DAB40(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000DC0F0()
{
  uint64_t v0;

  return sub_1000DABE8(*(_QWORD *)(v0 + 16));
}

void sub_1000DC0F8(uint64_t (**a1)(__n128)@<X8>)
{
  uint64_t v1;

  sub_1000DADD0(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_1000DC100()
{
  unint64_t result;
  uint64_t v1;
  void *v2;

  result = qword_10054D9D8;
  if (!qword_10054D9D8)
  {
    v1 = sub_100011650(&qword_10054D9C8);
    v2 = &protocol witness table for Image;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10054D9D8);
  }
  return result;
}

uint64_t sub_1000DC15C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000DAC60(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_1000DC164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  char *v14;

  v5 = *((_QWORD *)v4 + 4);
  v6 = *((_QWORD *)v4 + 5);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 48) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(&v4[v10], v5);
  v13 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[9]]);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[10]]);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[11]]);
  v14 = &v4[v10 + *(int *)(v7 + 36)];
  if (*(_QWORD *)v14)
    swift_release(*((_QWORD *)v14 + 1));
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

uint64_t sub_1000DC248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_10054D9F4);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10000DC64;
  return sub_1000DA968(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_1000DC2E8()
{
  return sub_100012324(&qword_10054DA00, &qword_10054D9A8, (const char *)&protocol conformance descriptor for Button<A>);
}

uint64_t sub_1000DC320(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::Int v22;
  char *v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _BYTE v43[32];
  uint64_t v44;

  v32 = a5;
  v33 = a8;
  v38 = a1;
  v39 = a2;
  v31 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v12 + 8));
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = __chkstk_darwin(AssociatedTypeWitness);
  v36 = (char *)&v29 - v16;
  v41 = a4;
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness(0, a6);
  v34 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v21)
    return static Array._allocateUninitialized(_:)(0, v41);
  v22 = v21;
  v30 = v18;
  v23 = v41;
  v44 = ContiguousArray.init()(v41);
  v37 = type metadata accessor for ContiguousArray(0, v23);
  ContiguousArray.reserveCapacity(_:)(v22);
  v41 = v20;
  result = dispatch thunk of Collection.startIndex.getter(a3);
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v26 = v35;
    v25 = v36;
    while (1)
    {
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v43, v41, a3, a6);
      (*(void (**)(char *))(v14 + 16))(v25);
      v27(v43, 0);
      v28 = v42;
      v38(v25, v40);
      if (v28)
        break;
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v26, v37);
      dispatch thunk of Collection.formIndex(after:)(v41, a3, a6);
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
        return v44;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
    swift_release(v44);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v40, v32);
  }
  return result;
}

UIMenu_optional __swiftcall ActionMenu.uiMenu(excluding:)(Swift::OpaquePointer excluding)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  UIMenuElementSize preferredElementSize;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _BOOL8 v30;
  id v31;
  Swift::String v32;
  UIMenu v33;
  Swift::Bool v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *isa;
  Swift::OpaquePointer v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  void *rawValue;
  UIMenuElementSize v43;
  UIMenu_optional result;
  UIImage_optional v45;

  v3 = v2;
  v4 = v1;
  v6 = ActionMenu.elements(excluding:)((uint64_t)excluding._rawValue, v1);
  v8 = v7;
  v10 = v9;
  v43 = v6;
  v11 = *(_QWORD *)(v4 + 24);
  v40 = *(_QWORD *)(v4 + 16);
  v41 = v11;
  rawValue = excluding._rawValue;
  type metadata accessor for ActionMenu.Element(255, v40, v11, v12);
  v13 = type metadata accessor for Array(0);
  v14 = (char *)sub_10000B4C8(&qword_10054DA08);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v13);
  v17 = sub_1000DC320((void (*)(char *, char *))sub_1000DC85C, (uint64_t)v39, v13, v14, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v16);
  swift_bridgeObjectRelease();
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v43 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v19 = *(_QWORD *)(v17 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v19; ++i)
    {
      v22 = *(void **)(v17 + 8 * i + 32);
      if (v22)
      {
        v23 = v22;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v25 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized Array._endMutation()(v21);
      }
    }
    swift_bridgeObjectRelease();
    preferredElementSize = v43;
  }
  v26 = swift_bridgeObjectRelease();
  v8(v26);
  if ((unint64_t)preferredElementSize >> 62)
  {
    if (preferredElementSize < UIMenuElementSizeSmall)
      v35 = preferredElementSize;
    else
      v35 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_11;
LABEL_16:
    swift_release(v10);
    swift_bridgeObjectRelease();
    v33.super.super.isa = 0;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_11:
  sub_1000DD108(0, &qword_10054DA10, UIMenu_ptr);
  v27 = *(_QWORD *)(v3 + 32);
  v28 = *(void **)(v3 + 40);
  v29 = *(void **)(v3 + 48);
  v30 = (*(_BYTE *)(v3 + 56) & 1) == 0;
  v31 = v29;
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = v27;
  v32._object = v28;
  v45.value.super.isa = (Class)v29;
  v45.is_nil = 0;
  v33.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v45, (UIMenuIdentifier_optional)v30, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v38).super.super.isa;
  swift_release(v10);
LABEL_17:
  isa = v33.super.super.isa;
  result.value.super.super.isa = isa;
  result.is_nil = v34;
  return result;
}

id sub_1000DC85C@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::OpaquePointer v8;
  uint64_t v9;
  uint64_t v10;
  id result;

  v4 = v2[2];
  v5 = v2[3];
  v6 = (void *)v2[4];
  v7 = type metadata accessor for ActionMenu.Element(0, v4, v5, a1);
  v8._rawValue = v6;
  result = sub_1000DC8B0(v8, v7, v9, v10);
  *a2 = result;
  return result;
}

id sub_1000DC8B0(Swift::OpaquePointer a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::String *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  id v22;
  id v23;
  Swift::String v24;
  void *v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(Swift::String *__return_ptr, __n128);
  __n128 v36;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(__n128);
  uint64_t v49;
  uint64_t (*v50)(__n128);
  uint64_t v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  void *v69;
  Swift::String v70;
  void *v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  NSString v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, Swift::String *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  Swift::String v92;
  Swift::String v93;

  v5 = v4;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = type metadata accessor for ActionMenu.Item(0, v9, v8, a4);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin();
  v86 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v77 - v13;
  __chkstk_darwin();
  v16 = (Swift::String *)((char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(Swift::String *, uint64_t, uint64_t))(v17 + 16))(v16, v5, a2);
  if (swift_getEnumCaseMultiPayload(v16, a2) == 1)
  {
    v19 = v16[3];
    v91 = v16[2];
    v92 = v19;
    v93 = v16[4];
    v20 = v16[1];
    v89 = *v16;
    v90 = v20;
    type metadata accessor for ActionMenu(0, v9, v8, v18);
    v21 = (void *)ActionMenu.uiMenu(excluding:)(a1);
    v22 = v21;
    if (v21)
    {
      v87 = 0;
      v88 = 0xE000000000000000;
      v23 = v21;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      v87 = 0xD000000000000012;
      v88 = 0x8000000100447080;
      v24 = v89;
      swift_bridgeObjectRetain();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      v26 = v87;
      v25 = (void *)v88;
      if (qword_10054BDC0 != -1)
        swift_once(&qword_10054BDC0, sub_10027BE44);
      v87 = qword_100555A38;
      v88 = unk_100555A40;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = 46;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRetain();
      v28._countAndFlagsBits = v26;
      v28._object = v25;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, "setAccessibilityIdentifier:", v29);
      sub_1000D1A14(&v89);

    }
    else
    {
      sub_1000D1A14(&v89);
    }
  }
  else
  {
    v84 = v8;
    v85 = v11;
    v83 = *(void (**)(char *, Swift::String *, uint64_t))(v11 + 32);
    v83(v14, v16, v10);
    v30 = v10;
    v31 = *(int *)(v10 + 36);
    v32 = v14;
    v33 = &v14[v31];
    v35 = *(void (**)(Swift::String *__return_ptr, __n128))v33;
    v34 = *((_QWORD *)v33 + 1);
    v36 = swift_retain(v34);
    v35(&v89, v36);
    swift_release(v34);
    object = v90._object;
    countAndFlagsBits = v91._countAndFlagsBits;
    sub_10000D900(&v89, (uint64_t)v90._object);
    v39 = (*(uint64_t (**)(void *, uint64_t))(countAndFlagsBits + 8))(object, countAndFlagsBits);
    v81 = v40;
    v82 = v39;
    v41 = v90._object;
    v42 = v91._countAndFlagsBits;
    sub_10000D900(&v89, (uint64_t)v90._object);
    v43 = (*(uint64_t (**)(void *, uint64_t))(v42 + 16))(v41, v42);
    v79 = v44;
    v80 = v43;
    v45 = v90._object;
    v46 = v91._countAndFlagsBits;
    sub_10000D900(&v89, (uint64_t)v90._object);
    if ((*(uint64_t (**)(void *, uint64_t))(v46 + 24))(v45, v46))
    {
      v50 = v48;
      v51 = v49;
      v52 = swift_release(v47);
      v78 = v50(v52);
      swift_release(v51);
    }
    else
    {
      v78 = 0;
    }
    v53 = v90._object;
    v54 = v91._countAndFlagsBits;
    sub_10000D900(&v89, (uint64_t)v90._object);
    v55 = 2 * ((*(uint64_t (**)(void *, uint64_t))(v54 + 32))(v53, v54) & 1);
    sub_1000DD108(0, &qword_1005515D0, UIAction_ptr);
    v57 = v90._object;
    v56 = v91._countAndFlagsBits;
    sub_10000D900(&v89, (uint64_t)v90._object);
    v58 = (*(uint64_t (**)(void *, uint64_t))(v56 + 40))(v57, v56);
    v60 = v85;
    v59 = v86;
    v61 = v32;
    v62 = v32;
    v63 = v30;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v86, v62, v30);
    v64 = *(unsigned __int8 *)(v60 + 80);
    v65 = (v64 + 32) & ~v64;
    v66 = swift_allocObject(&unk_1005010E0, v65 + v12, v64 | 7);
    v67 = (void (*)(uint64_t, char *, uint64_t))v83;
    v68 = v84;
    *(_QWORD *)(v66 + 16) = v9;
    *(_QWORD *)(v66 + 24) = v68;
    v67(v66 + v65, v59, v63);
    v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v82, v81, v80, v79, v78, 0, 0, 0, 0, v55, v58, sub_1000DD1EC, v66);
    v87 = 0;
    v88 = 0xE000000000000000;
    v22 = v69;
    _StringGuts.grow(_:)(20);
    v70._object = (void *)0x8000000100447080;
    v70._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v70);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v61, v9, *(_QWORD *)(v68 + 8));
    v72 = v87;
    v71 = (void *)v88;
    if (qword_10054BDC0 != -1)
      swift_once(&qword_10054BDC0, sub_10027BE44);
    v87 = qword_100555A38;
    v88 = unk_100555A40;
    swift_bridgeObjectRetain();
    v73._countAndFlagsBits = 46;
    v73._object = (void *)0xE100000000000000;
    String.append(_:)(v73);
    swift_bridgeObjectRetain();
    v74._countAndFlagsBits = v72;
    v74._object = v71;
    String.append(_:)(v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, "setAccessibilityIdentifier:", v75);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v61, v63);
    sub_100011758(&v89);
  }
  return v22;
}

double sub_1000DCE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v11 = (char *)&v22 - v10;
  sub_10000B4C8((uint64_t *)&unk_100552B60);
  __chkstk_darwin();
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  v15 = type metadata accessor for MainActor(0);
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = (char *)swift_allocObject(&unk_100501108, v18 + v9, v17 | 7);
  *((_QWORD *)v19 + 2) = v16;
  *((_QWORD *)v19 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v19 + 4) = a3;
  *((_QWORD *)v19 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v11, v7);
  v20 = sub_10024D8EC((uint64_t)v13, (uint64_t)&unk_10054DA20, (uint64_t)v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1000DCF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_1000DD008, v8, v9);
}

uint64_t sub_1000DD008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_1000DD074;
  return v9();
}

uint64_t sub_1000DD074()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1000DAB0C;
  else
    v4 = sub_1000DD0D4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1000DD0D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000DD108(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000DD140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for ActionMenu.Item(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  swift_release(*(_QWORD *)(v12 + v6[9] + 8));
  swift_release(*(_QWORD *)(v12 + v6[10] + 8));
  swift_release(*(_QWORD *)(v12 + v6[11] + 8));
  return swift_deallocObject(v4, v10, v11);
}

double sub_1000DD1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v6, v7, a4) - 8) + 80);
  return sub_1000DCE2C(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_1000DD244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v5 = v4[4];
  v6 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v4[5], a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 48) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  swift_unknownObjectRelease(v4[2]);
  v12 = (char *)v4 + v9;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12, v5);
  swift_release(*(_QWORD *)&v12[v6[9] + 8]);
  swift_release(*(_QWORD *)&v12[v6[10] + 8]);
  swift_release(*(_QWORD *)&v12[v6[11] + 8]);
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_1000DD2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_10054DA1C);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10000DC64;
  return sub_1000DCF98(a1, v10, v11, v12, v7, v8);
}

uint64_t (*ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject(&unk_100501130, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject(&unk_100501158, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return sub_1000DE3E0;
}

uint64_t (*ActionMenuItemImage.init(uiImage:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject(&unk_100501180, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain(a2);
  return sub_1000DE5A8;
}

uint64_t static ActionMenu.Item.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v7 = (*(_QWORD *(**)(_QWORD *__return_ptr))(a1 + *(int *)(v6 + 36)))(v41);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(a2 + *(int *)(v6 + 36)))(v38, v7);
  v8 = v42;
  v9 = v43;
  sub_10000D900(v41, v42);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v12 = v11;
  v13 = v39;
  v14 = v40;
  sub_10000D900(v38, v39);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (v10 == v15 && v12 == v16)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    sub_1000C53BC((uint64_t)v41, (uint64_t)v35);
    sub_1000C53BC((uint64_t)v38, (uint64_t)v32);
  }
  else
  {
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v15, v16, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v18);
    sub_1000C53BC((uint64_t)v41, (uint64_t)v35);
    sub_1000C53BC((uint64_t)v38, (uint64_t)v32);
    v20 = 0;
    if ((v19 & 1) == 0)
      goto LABEL_18;
  }
  v21 = v36;
  v22 = v37;
  sub_10000D900(v35, v36);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
  v25 = v24;
  v26 = v33;
  v27 = v34;
  sub_10000D900(v32, v33);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  v30 = v29;
  if (v25)
  {
    if (v29)
    {
      if (v23 == v28 && v25 == v29)
      {
        swift_bridgeObjectRelease(v25);
        v20 = 1;
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v28, v29, 0);
        swift_bridgeObjectRelease(v25);
      }
    }
    else
    {
      v20 = 0;
      v30 = v25;
    }
  }
  else
  {
    if (!v29)
    {
      v20 = 1;
      goto LABEL_18;
    }
    v20 = 0;
  }
  swift_bridgeObjectRelease(v30);
LABEL_18:
  sub_100011758(v35);
  sub_100011758(v32);
  sub_100011758(v38);
  sub_100011758(v41);
  return v20 & 1;
}

uint64_t static ActionMenu.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

int *sub_1000DD6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  int *result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  result = (int *)type metadata accessor for ActionMenu.Item(0, a8, a10, v18);
  v20 = (_QWORD *)(a9 + result[9]);
  *v20 = a2;
  v20[1] = a3;
  v21 = (_QWORD *)(a9 + result[10]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)(a9 + result[11]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t ActionMenu.elements(excluding:)(uint64_t a1, uint64_t a2)
{
  uint64_t (**v2)(void);
  uint64_t (**v3)(void);
  Swift::String v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[5];
  uint64_t v29;
  unint64_t v30;

  v3 = v2;
  v29 = 0;
  v30 = 0xE000000000000000;
  v6._countAndFlagsBits = 8254;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  v7 = *((_OWORD *)v2 + 3);
  v28[2] = *((_OWORD *)v2 + 2);
  v28[3] = v7;
  v28[4] = *((_OWORD *)v2 + 4);
  v8 = *((_OWORD *)v2 + 1);
  v28[0] = *(_OWORD *)v2;
  v28[1] = v8;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v28, a2);
  v9 = v29;
  v10 = v30;
  v11 = sub_1000DEAD8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v13 = *((_QWORD *)v11 + 2);
  v12 = *((_QWORD *)v11 + 3);
  if (v13 >= v12 >> 1)
    v11 = sub_1000DEAD8((char *)(v12 > 1), v13 + 1, 1, v11);
  v14 = swift_allocObject(&unk_1005011A8, 24, 7);
  *((_QWORD *)v11 + 2) = v13 + 1;
  v15 = &v11[16 * v13];
  *((_QWORD *)v15 + 4) = v9;
  *((_QWORD *)v15 + 5) = v10;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)&v28[0] = v3[8]();
  __chkstk_darwin(*(_QWORD *)&v28[0]);
  v16 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = v16;
  v26 = a1;
  v27 = v14 + 16;
  type metadata accessor for ActionMenu.Element(255, v24, v16, v17);
  v18 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v18);
  v20 = _ArrayProtocol.filter(_:)(sub_1000DEBFC, &v23, v18, WitnessTable);
  *(_QWORD *)&v28[0] = v20;
  v21 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v18);
  result = Collection.isEmpty.getter(v18, v21);
  if ((result & 1) == 0)
    return v20;
  if (*(_QWORD *)(*(_QWORD *)(v14 + 16) + 16))
  {
    sub_1000DFF4C(1uLL, 1, 0xD00000000000001CLL, 0x80000001004470A0);
    return v20;
  }
  __break(1u);
  return result;
}

BOOL static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LaunchURL.Resolver.PerformOption.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int LaunchURL.Resolver.PerformOption.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL sub_1000DDA08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1000DDA14()
{
  char *v0;

  return LaunchURL.Resolver.PerformOption.hashValue.getter(*v0);
}

void sub_1000DDA1C(uint64_t a1)
{
  char *v1;

  LaunchURL.Resolver.PerformOption.hash(into:)(a1, *v1);
}

Swift::Int sub_1000DDA24()
{
  char *v0;
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  LaunchURL.Resolver.PerformOption.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t ActionMenu.init(_:image:style:id:debugDescription:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  void *v17;
  id v19;
  id v20;
  Swift::String v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];

  strcpy((char *)v26, "ActionMenu: ");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  if (a8)
  {
    v17 = a8;
    v19 = a3;
  }
  else
  {
    v20 = a3;
    swift_bridgeObjectRetain(a6);
    a7 = a5;
    v17 = a6;
  }
  v21._countAndFlagsBits = a7;
  v21._object = v17;
  String.append(_:)(v21);

  result = swift_bridgeObjectRelease(v17);
  v23 = v26[0];
  v24 = v26[1];
  *(_QWORD *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = v23;
  *(_QWORD *)(a9 + 24) = v24;
  *(_QWORD *)(a9 + 32) = a1;
  *(_QWORD *)(a9 + 40) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(_BYTE *)(a9 + 56) = a4 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

uint64_t Alert.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_1000DDB80(uint64_t a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t WitnessTable;
  Swift::String v24;
  Swift::String v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  char **v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char **v50;
  char *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char **v57;
  uint64_t v58;
  unint64_t v59;

  v57 = a3;
  v9 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v14 = type metadata accessor for ActionMenu.Element(0, a4, a5, v13);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v56 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v56 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v18 = v16[1];
    v19 = v16[3];
    v20 = v16[5];
    v21 = (void *)v16[6];
    swift_release(v16[9]);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

    return 1;
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v12, v16, v9);
  v58 = a2;
  v22 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v22);
  if ((Sequence<>.contains(_:)(v12, v22, WitnessTable, *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8)) & 1) != 0)
  {
    v58 = 0;
    v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    v24._countAndFlagsBits = 544743456;
    v24._object = (void *)0xE400000000000000;
    String.append(_:)(v24);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v25._countAndFlagsBits = 0x756C637865202D20;
    v25._object = (void *)0xEB00000000646564;
    String.append(_:)(v25);
  }
  else
  {
    v26 = &v12[*(int *)(v9 + 40)];
    v28 = *(uint64_t (**)(uint64_t))v26;
    v27 = *((_QWORD *)v26 + 1);
    v29 = swift_retain(v27);
    v30 = v28(v29);
    v32 = v31;
    swift_release(v27);
    if (v32 == 1)
    {
      v58 = 0;
      v59 = 0xE000000000000000;
      v33._countAndFlagsBits = 0x20939CE22020;
      v33._object = (void *)0xA600000000000000;
      String.append(_:)(v33);
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
      v34 = v58;
      v35 = v59;
      v36 = v57;
      v37 = *v57;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
      *v36 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v37 = sub_1000DEAD8(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
        *v36 = v37;
      }
      v40 = *((_QWORD *)v37 + 2);
      v39 = *((_QWORD *)v37 + 3);
      if (v40 >= v39 >> 1)
      {
        v37 = sub_1000DEAD8((char *)(v39 > 1), v40 + 1, 1, v37);
        *v36 = v37;
      }
      *((_QWORD *)v37 + 2) = v40 + 1;
      v41 = &v37[16 * v40];
      *((_QWORD *)v41 + 4) = v34;
      *((_QWORD *)v41 + 5) = v35;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 1;
    }
    v58 = 0;
    v59 = 0xE000000000000000;
    v43._countAndFlagsBits = 544743456;
    v43._object = (void *)0xE400000000000000;
    String.append(_:)(v43);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v44._countAndFlagsBits = 2108704;
    v44._object = (void *)0xE300000000000000;
    String.append(_:)(v44);
    if (v32)
      v45 = v30;
    else
      v45 = 0x6E776F6E6B6E75;
    if (v32)
      v46 = v32;
    else
      v46 = 0xE700000000000000;
    v47 = v46;
    String.append(_:)(*(Swift::String *)&v45);
    swift_bridgeObjectRelease(v46);
  }
  v48 = v58;
  v49 = v59;
  v50 = v57;
  v51 = *v57;
  v52 = swift_isUniquelyReferenced_nonNull_native(*v57);
  *v50 = v51;
  if ((v52 & 1) == 0)
  {
    v51 = sub_1000DEAD8(0, *((_QWORD *)v51 + 2) + 1, 1, v51);
    *v50 = v51;
  }
  v54 = *((_QWORD *)v51 + 2);
  v53 = *((_QWORD *)v51 + 3);
  if (v54 >= v53 >> 1)
  {
    v51 = sub_1000DEAD8((char *)(v53 > 1), v54 + 1, 1, v51);
    *v50 = v51;
  }
  *((_QWORD *)v51 + 2) = v54 + 1;
  v55 = &v51[16 * v54];
  *((_QWORD *)v55 + 4) = v48;
  *((_QWORD *)v55 + 5) = v49;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return 0;
}

void sub_1000DDF58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char **v10;
  uint64_t *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v29, 0, 0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = qword_10054B9C0;
    swift_bridgeObjectRetain();
    if (v8 != -1)
      swift_once(&qword_10054B9C0, sub_1000DE6A0);
    v23 = v6;
    v10 = (char **)(v6 + 40);
    v11 = qword_10054DA28;
    *(_QWORD *)&v9 = 136446210;
    v25 = v9;
    v24 = (char *)&type metadata for Any + 8;
    v26 = v3;
    v27 = v2;
    do
    {
      v13 = *(v10 - 1);
      v12 = *v10;
      v14 = sub_10000D78C(v2, (uint64_t)v11);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
      v15 = swift_bridgeObjectRetain_n(v12, 2);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc(12, -1);
        v19 = v11;
        v20 = swift_slowAlloc(32, -1);
        v28 = v20;
        *(_DWORD *)v18 = v25;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v18 + 4) = sub_1000BA30C(v13, v12, &v28);
        swift_bridgeObjectRelease_n(v12, 3);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy(v20, 1, v24);
        v21 = v20;
        v11 = v19;
        swift_slowDealloc(v21, -1, -1);
        v22 = v18;
        v3 = v26;
        v2 = v27;
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v12, 2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v10 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(v23);
  }
}

uint64_t ActionMenu.Item.menuItemConfiguring.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

uint64_t ActionMenu.Item.execute.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtFront(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v1;
  v5 = swift_allocObject(&unk_1005011D0, 56, 7);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(Swift::OpaquePointer *)(v5 + 32) = a1;
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = sub_1000E00A4;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_1000DE260(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a2();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(a1, v8, v10);
  swift_bridgeObjectRelease(v8);
  return v11;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtEnd(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v3 = v1;
  v5 = swift_allocObject(&unk_1005011F8, 56, 7);
  v6 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  *(Swift::OpaquePointer *)(v5 + 48) = a1;
  *(_QWORD *)(v2 + 64) = sub_1000E00DC;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_1000DE324(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a1();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(v8, a3, v10);
  swift_bridgeObjectRelease(v8);
  return v11;
}

uint64_t sub_1000DE38C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(systemName:)(a1, a2);
}

uint64_t sub_1000DE3BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DE3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  return Image.init(systemName:)(v1, v2);
}

id sub_1000DE40C(uint64_t a1, uint64_t a2)
{
  return sub_1000DE60C(a1, a2, (SEL *)&selRef_systemImageNamed_);
}

id sub_1000DE418()
{
  uint64_t v0;

  return sub_1000DE60C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_systemImageNamed_);
}

uint64_t sub_1000DE438()
{
  return sub_1000DE4FC(0x696D2E636973756DLL, 0xE900000000000063, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1000DE45C()
{
  return sub_1000DE4FC(0xD000000000000016, 0x80000001004470C0, (SEL *)&selRef_imageNamed_);
}

uint64_t sub_1000DE480()
{
  return sub_1000DE4FC(0x6F6E2E636973756DLL, 0xEF7473696C2E6574, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1000DE4AC()
{
  return sub_1000DE4FC(0x75622E65746F7571, 0xEC000000656C6262, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1000DE4D4()
{
  return sub_1000DE4FC(0x71732E636973756DLL, 0xEC00000065726175, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1000DE4FC(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v4);

  if (v5)
    return Image.init(uiImage:)(v5);
  else
    return 0;
}

uint64_t sub_1000DE55C(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_1000DE584()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DE5A8()
{
  uint64_t v0;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_1000DE5D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(_internalSystemName:)(a1, a2);
}

id sub_1000DE600(uint64_t a1, uint64_t a2)
{
  return sub_1000DE60C(a1, a2, (SEL *)&selRef__systemImageNamed_);
}

id sub_1000DE60C(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v5;
  id v6;

  swift_bridgeObjectRetain(a2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v5);

  return v6;
}

uint64_t type metadata accessor for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Item);
}

uint64_t sub_1000DE694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Item.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1000DE6A0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_10054DA28);
  sub_10000D78C(v0, (uint64_t)qword_10054DA28);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001004466B0, 0x654D6E6F69746341, 0xEA0000000000756ELL);
}

size_t sub_1000DE718(size_t result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  unint64_t v18;
  char *v19;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_10000B4C8(&qword_10054C958);
  v11 = *(_QWORD *)(sub_10000B4C8(&qword_10054C950) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (char *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  *((_QWORD *)v15 + 2) = v8;
  *((_QWORD *)v15 + 3) = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(_QWORD *)(sub_10000B4C8(&qword_10054C950) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = &v15[v18];
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v19 >= &a4[v18 + *(_QWORD *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v19);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v19);
    }
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v19);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

char *sub_1000DE894(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000DF570(a1, a2, a3, a4, &qword_10054DC80);
}

char *sub_1000DE8A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DBD8);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1000DE994(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_100552680);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_1000DEAB0(size_t a1, int64_t a2, char a3, char *a4)
{
  return sub_1000DFA94(a1, a2, a3, a4, &qword_10054DC70, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

size_t sub_1000DEAC4(size_t a1, int64_t a2, char a3, char *a4)
{
  return sub_1000DFA94(a1, a2, a3, a4, &qword_10054DCB0, (uint64_t (*)(_QWORD))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason);
}

char *sub_1000DEAD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8((uint64_t *)&unk_100550B40);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_1000DEBD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000DEBFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1000DDB80(a1, *(_QWORD *)(v1 + 32), *(char ***)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

void sub_1000DEC1C()
{
  uint64_t v0;

  sub_1000DDF58(v0);
}

char *sub_1000DEC24(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DCA8);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1000DED24(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC98);
    v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[11 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 88 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8(&qword_10054DCA0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1000DEE5C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC60);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    type metadata accessor for ICURLBagKey(0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1000DEF78(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000DF304(a1, a2, a3, a4, &qword_10054DC30);
}

_QWORD *sub_1000DEF84(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000DFD1C(a1, a2, a3, a4, (uint64_t *)&unk_100553530, &qword_100552560);
}

_QWORD *sub_1000DEF98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC68);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8(&qword_10054D598);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1000DF0B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC88);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8(&qword_10054DC90);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1000DF1D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC78);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8((uint64_t *)&unk_100550630);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1000DF2F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000DF304(a1, a2, a3, a4, &qword_10054DC58);
}

_QWORD *sub_1000DF304(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = a4[3];
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = a4[2];
  if (v8 <= v9)
    v10 = a4[2];
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10000B4C8(a5);
    v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    v12[2] = v9;
    v12[3] = 2 * (v14 >> 4);
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v12 + 4 >= &a4[2 * v9 + 4])
      memmove(v12 + 4, a4 + 4, 16 * v9);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8(&qword_10054DBE0);
    swift_arrayInitWithCopy(v12 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

_QWORD *sub_1000DF420(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC50);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&a4[2 * v8 + 4])
    {
      swift_arrayInitWithTakeFrontToBack(v14);
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1000DF544(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000DF570(a1, a2, a3, a4, &qword_10054DC40);
}

_QWORD *sub_1000DF550(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000DFD1C(a1, a2, a3, a4, &qword_100550030, &qword_10054DC48);
}

char *sub_1000DF564(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000DF570(a1, a2, a3, a4, &qword_10054DC38);
}

char *sub_1000DF570(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10000B4C8(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v9);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

char *sub_1000DF654(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DBD0);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1000DF74C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC28);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1000DF868(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC20);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1000DF960(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC10);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8(&qword_10054DC18);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_1000DFA80(size_t a1, int64_t a2, char a3, char *a4)
{
  return sub_1000DFA94(a1, a2, a3, a4, &qword_10054DBC8, type metadata accessor for SharePlayTogetherSession.Participant);
}

size_t sub_1000DFA94(size_t result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  unint64_t v21;
  char *v22;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = *((_QWORD *)a4 + 3);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *((_QWORD *)a4 + 2);
  if (v10 <= v11)
    v12 = *((_QWORD *)a4 + 2);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000B4C8(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (char *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  *((_QWORD *)v18 + 2) = v11;
  *((_QWORD *)v18 + 3) = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = *(_QWORD *)(a6(0) - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = &v18[v21];
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v22 >= &a4[v21 + *(_QWORD *)(v20 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v22);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v22);
    }
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v22);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v18;
}

char *sub_1000DFC08(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DC08);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1000DFD08(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000DFD1C(a1, a2, a3, a4, &qword_10054DBF8, &qword_10054DC00);
}

_QWORD *sub_1000DFD1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10000B4C8(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[5 * v11 + 4])
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    sub_10000B4C8(a6);
    swift_arrayInitWithCopy(v14 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v14;
}

char *sub_1000DFE54(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054DBF0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1000DFF4C(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  char *v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  char *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > *((_QWORD *)v6 + 3) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1000DEAD8(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[16 * v8 + 32];
  result = swift_arrayDestroy(v16, v9, &type metadata for String);
  if (!v10)
    goto LABEL_19;
  v17 = *((_QWORD *)v6 + 2);
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_25;
  result = (unint64_t)(v16 + 16);
  v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19])
    result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  v21 = *((_QWORD *)v6 + 2);
  v18 = __OFADD__(v21, v10);
  v22 = v21 + v10;
  if (!v18)
  {
    *((_QWORD *)v6 + 2) = v22;
LABEL_19:
    *(_QWORD *)v16 = a3;
    *((_QWORD *)v16 + 1) = a4;
    *v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000E0078()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000E00A4()
{
  return sub_1000E00E8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000DE260);
}

uint64_t sub_1000E00B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000E00DC()
{
  return sub_1000E00E8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000DE324);
}

uint64_t sub_1000E00E8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1000E00FC(uint64_t a1)
{
  return swift_getWitnessTable(protocol conformance descriptor for ActionMenu<A>.Style, a1);
}

uint64_t sub_1000E010C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
}

unint64_t sub_1000E011C()
{
  unint64_t result;

  result = qword_10054DA40[0];
  if (!qword_10054DA40[0])
  {
    result = swift_getWitnessTable(protocol conformance descriptor for ActionMenuItemStyle, &type metadata for ActionMenuItemStyle);
    atomic_store(result, qword_10054DA40);
  }
  return result;
}

uint64_t sub_1000E0160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_1000E0168(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  return swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t sub_1000E01A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t sub_1000E0228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v15);
  return a1;
}

__n128 initializeWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1000E0304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CAPackageDefinition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CAPackageDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu);
}

uint64_t type metadata accessor for ActionMenu.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Style);
}

uint64_t sub_1000E043C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1000E04B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain(v11);
    swift_retain(v14);
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_1000E05B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  return swift_release(*(_QWORD *)(((v5 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000E0618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  return a1;
}

uint64_t sub_1000E06B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t sub_1000E0774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000E07F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + a2;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v9);
  v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFF8uLL;
  v12 = *(_QWORD *)(v11 + 8);
  *(_OWORD *)v11 = *(_OWORD *)v10;
  swift_release(v12);
  v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  return a1;
}

uint64_t sub_1000E088C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1000E0918 + 4 * byte_10042B610[v10]))();
  }
}

void sub_1000E099C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1000E0AA0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1000E0B18);
}

void sub_1000E0AA8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1000E0AB0);
  JUMPOUT(0x1000E0B18);
}

void sub_1000E0AF0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1000E0B18);
}

void sub_1000E0AF8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1000E0B18);
}

uint64_t sub_1000E0B00(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1000E0B18);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1000E0B14);
    JUMPOUT(0x1000E0B0CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

ValueMetadata *type metadata accessor for ActionMenuItemImage()
{
  return &type metadata for ActionMenuItemImage;
}

uint64_t _s9MusicCore19ActionMenuItemStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000E0B8C + 4 * byte_10042B624[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000E0BC0 + 4 * byte_10042B61F[v4]))();
}

uint64_t sub_1000E0BC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000E0BC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000E0BD0);
  return result;
}

uint64_t sub_1000E0BDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000E0BE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000E0BE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000E0BF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenuItemStyle()
{
  return &type metadata for ActionMenuItemStyle;
}

char *sub_1000E0C0C(char *result, int64_t a2, char a3)
{
  char **v3;
  char *v5;
  int64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  size_t v16;
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *((_QWORD *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = result;
  v8 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)result || v10 > *((_QWORD *)v5 + 3) >> 1)
  {
    if (v6 <= v10)
      v12 = v6 + v9;
    else
      v12 = v6;
    result = sub_1000DF570(result, v12, 1, v5, &qword_10054DC40);
    v5 = result;
  }
  v13 = v5 + 32;
  v14 = &v7[(_QWORD)(v5 + 32)];
  if (!v9)
    goto LABEL_19;
  v15 = *((_QWORD *)v5 + 2);
  v16 = v15 - a2;
  if (__OFSUB__(v15, a2))
    goto LABEL_25;
  result = v14 + 1;
  v17 = &v13[a2];
  if (v14 + 1 != &v13[a2] || result >= &v17[v16])
    result = (char *)memmove(result, v17, v16);
  v18 = *((_QWORD *)v5 + 2);
  v19 = __OFADD__(v18, v9);
  v20 = v18 + v9;
  if (!v19)
  {
    *((_QWORD *)v5 + 2) = v20;
LABEL_19:
    *v14 = a3;
    *v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1000E0D1C(char *result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  char *v6;
  int64_t v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  char *v16;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = &result[-a2];
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = (int64_t)&v8[v5];
    else
      v10 = v5;
    result = sub_1000DF570(result, v10, 1, v4, &qword_10054DC40);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *((_QWORD *)v4 + 2);
  v12 = v11 - a2;
  if (__OFSUB__(v11, a2))
    goto LABEL_26;
  result = &v6[(_QWORD)(v4 + 32)];
  v13 = &v4[a2 + 32];
  if (v6 != (char *)a2 || result >= &v13[v12])
    result = (char *)memmove(result, v13, v12);
  v14 = *((_QWORD *)v4 + 2);
  v15 = __OFADD__(v14, v8);
  v16 = &v8[v14];
  if (!v15)
  {
    *((_QWORD *)v4 + 2) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000E0E24(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1000DEE5C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  type metadata accessor for ICURLBagKey(0);
  result = swift_arrayDestroy(&v4[v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[a2 + 4];
  if (v6 != a2 || &v4[v6 + 4] >= (_QWORD *)&v16[8 * v15])
    result = (uint64_t)memmove(&v4[v6 + 4], v16, 8 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000E0F3C(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1000DF304(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_10054DBE8);
  }
  v12 = sub_10000B4C8(&qword_10054DBE0);
  result = swift_arrayDestroy(&v4[2 * v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[2 * a2 + 4];
  if (v6 != a2 || &v4[2 * v6 + 4] >= (_QWORD *)&v16[16 * v15])
    result = (uint64_t)memmove(&v4[2 * v6 + 4], v16, 16 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1000E1060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (v5 < 0)
    v20 = v5;
  else
    v20 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_33;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_41:
    __break(1u);
LABEL_42:
    if (v5 < 0)
      v22 = v5;
    else
      v22 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_36:
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_41;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_42;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = type metadata accessor for BagProvider.Observer();
  result = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return (void *)specialized Array._endMutation()(result);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v5 < 0)
    v23 = v5;
  else
    v23 = v11;
  swift_bridgeObjectRetain();
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  result = (void *)swift_bridgeObjectRelease(v5);
  v16 = v24 - v2;
  if (__OFSUB__(v24, v2))
    goto LABEL_51;
LABEL_21:
  v17 = (const void *)(v11 + 32 + 8 * v2);
  if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
    result = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
  if ((unint64_t)v5 >> 62)
  {
LABEL_52:
    if (v5 < 0)
      v25 = v5;
    else
      v25 = v11;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    result = (void *)swift_bridgeObjectRelease(v5);
    v19 = v26 + v6;
    if (!__OFADD__(v26, v6))
      goto LABEL_26;
    goto LABEL_57;
  }
  v18 = *(_QWORD *)(v11 + 16);
  v19 = v18 + v6;
  if (!__OFADD__(v18, v6))
  {
LABEL_26:
    *(_QWORD *)(v11 + 16) = v19;
    return (void *)specialized Array._endMutation()(result);
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_1000E12D8(uint64_t result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *((_QWORD *)v4 + 3) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1000DEAD8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy(&v4[16 * v6 + 32], v7, &type metadata for String);
  if (!v7)
    goto LABEL_19;
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_25;
  v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14])
    result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  v16 = *((_QWORD *)v4 + 2);
  v13 = __OFADD__(v16, v8);
  v17 = v16 - v7;
  if (!v13)
  {
    *((_QWORD *)v4 + 2) = v17;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1000E13EC(unint64_t result, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = v5 + v8;
    else
      v10 = v5;
    result = (unint64_t)sub_1000DFE54((char *)result, v10, 1, (char *)v4);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFSUB__(v11, a2);
  v13 = v11 - a2;
  if (v12)
    goto LABEL_26;
  result = v4 + 32 + 16 * v6;
  v14 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 16 * v13)
    result = (unint64_t)memmove((void *)result, v14, 16 * v13);
  v15 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v15, v8);
  v16 = v15 + v8;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000E14F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100502018, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100502040, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100502068, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F4D1C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DF58;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E163C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100502158, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100502180, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1005021A8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F51B8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DF78;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E1780(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100502310, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100502338, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100502360, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1000F574C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F4120;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10054DFC8;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F57D4((_QWORD *)a1);
  sub_1000F57D4((_QWORD *)a1);
  sub_1000F57D4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E18C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_1005023D8, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100502400, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100502428, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1000F5918;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F4120;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10054DFE8;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5A04((_QWORD *)a1);
  sub_1000F5A04((_QWORD *)a1);
  sub_1000F5A04((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E1A08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1005024A0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1005024C8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1005024F0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F5BF8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054E008;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E1B4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100502248, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100502270, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100502298, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F550C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DF98;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E1C90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 72);
  v5 = swift_allocObject(&unk_100501960, 152, 7);
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(a1 + 128);
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v9;
  v10 = swift_allocObject(&unk_100501988, 152, 7);
  v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v10 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v10 + 128) = v11;
  *(_QWORD *)(v10 + 144) = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v10 + 64) = v12;
  v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v10 + 96) = v13;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v14;
  v15 = swift_allocObject(&unk_1005019B0, 152, 7);
  v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 32) = v19;
  *(_BYTE *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = sub_1000F336C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F3378;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10054DE48;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F3494(a1);
  sub_1000F3494(a1);
  sub_1000F3494(a1);
  return v3;
}

uint64_t sub_1000E1DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100501EB0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100501ED8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100501F00, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F4430;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DF20;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E1F30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100501D20, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100501D48, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100501D70, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1000F40E0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F3FC4;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10054DEE0;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F41E8((_QWORD *)a1);
  sub_1000F41E8((_QWORD *)a1);
  sub_1000F41E8((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E2074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100501C58, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100501C80, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100501CA8, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1000F3F84;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F3FC4;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10054DEC0;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F41E8((_QWORD *)a1);
  sub_1000F41E8((_QWORD *)a1);
  sub_1000F41E8((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E21B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100501B40, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100501B68, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100501B90, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F3D14;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DE90;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E22FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100501DE8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100501E10, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100501E38, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F4314;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DF00;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E2440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100501898, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1005018C0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1005018E8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F3148;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DE20;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E2584(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1005017D0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1005017F8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100501820, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F302C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DE00;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E26C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100501708, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100501730, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100501758, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F2EF8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F2F2C;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DDE0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E280C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100501640, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100501668, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100501690, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000F2DDC;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F6314;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DDC0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  sub_1000F5CD4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000E2950(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_10000B4C8(&qword_10054DC98);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100424BB0;
  v4 = *((_BYTE *)a1 + 32);
  v5 = (_OWORD *)swift_allocObject(&unk_100501578, 112, 7);
  v6 = a1[3];
  v5[3] = a1[2];
  v5[4] = v6;
  v7 = a1[5];
  v5[5] = a1[4];
  v5[6] = v7;
  v8 = a1[1];
  v5[1] = *a1;
  v5[2] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1005015A0, 112, 7);
  v10 = a1[3];
  v9[3] = a1[2];
  v9[4] = v10;
  v11 = a1[5];
  v9[5] = a1[4];
  v9[6] = v11;
  v12 = a1[1];
  v9[1] = *a1;
  v9[2] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1005015C8, 112, 7);
  v14 = a1[3];
  v13[3] = a1[2];
  v13[4] = v14;
  v15 = a1[5];
  v13[5] = a1[4];
  v13[6] = v15;
  v16 = *a1;
  v17 = a1[1];
  *(_BYTE *)(v3 + 32) = v4;
  v13[1] = v16;
  v13[2] = v17;
  *(_QWORD *)(v3 + 40) = sub_1000F2BC4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000F2BD0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10054DDA0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000F2C78(a1);
  sub_1000F2C78(a1);
  sub_1000F2C78(a1);
  return v3;
}

uint64_t sub_1000E2A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 216) = a1;
  v2 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000E2AD8, 0, 0);
}

uint64_t sub_1000E2AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  sub_100011370(v2, v0 + 16, &qword_10054D130);
  v4 = swift_allocObject(&unk_100501C08, 232, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 208) = v5;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v0 + 208);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + 144) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v4 + 176) = v7;
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 80) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v4 + 112) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v10;
  v11 = sub_10024D8FC(v1, (uint64_t)&unk_10054DEB0, v4);
  swift_release(v11);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaylistContext.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaylistContext.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t PlaylistContext.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PlaylistContext(uint64_t a1)
{
  uint64_t result;

  result = qword_10054DD40;
  if (!qword_10054DD40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistContext);
  return result;
}

uint64_t PlaylistContext.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

CFRange (__swiftcall *PlaylistContext.playlist.modify())(__C::_NSRange)
{
  type metadata accessor for PlaylistContext(0);
  return CFRange.init(_:);
}

uint64_t PlaylistContext.init(entry:playlist:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v8 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

__n128 MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];
  uint64_t v38;
  unsigned __int8 v39;
  __n128 v40;

  v33 = a4;
  v32 = a7;
  *(_QWORD *)&v36 = a6;
  *(_QWORD *)&v35 = a5;
  v31 = a9;
  v30 = a10;
  v18 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000B4C8(&qword_10054DCB8);
  __chkstk_darwin(v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  sub_1000EE6D0(v34, a1, a2, a3, (uint64_t)v23, v33, v35, v36, (uint64_t *)v37, v32, v31, *((unint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12, (uint64_t)v20, a13, a14);
  v35 = v37[1];
  v36 = v37[0];
  v34 = v37[2];
  v26 = v38;
  v27 = v39;
  sub_100011694((uint64_t)v20, &qword_10054CD28);
  sub_100011694((uint64_t)v23, &qword_10054DCB8);
  result = v40;
  v29 = v35;
  *(_OWORD *)a8 = v36;
  *(_OWORD *)(a8 + 16) = v29;
  *(_OWORD *)(a8 + 32) = v34;
  *(_QWORD *)(a8 + 48) = v26;
  *(_QWORD *)(a8 + 56) = v27;
  *(__n128 *)(a8 + 64) = result;
  return result;
}

uint64_t GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  void *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  unint64_t v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unsigned __int8 v253;
  uint64_t v254;
  uint64_t v255;

  v230 = a8;
  v239 = a7;
  v235 = a6;
  v234 = a5;
  v209 = a4;
  v233 = a3;
  v232 = a2;
  v231 = a1;
  v237 = a9;
  v226 = a15;
  v227 = a14;
  v228 = a13;
  v229 = a12;
  v236 = a11;
  v225 = type metadata accessor for UploadedVideo(0);
  v184 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v183 = (char *)&v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for TVShow(0);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v186 = (char *)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for TVSeason(0);
  v190 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v189 = (char *)&v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for TVEpisode(0);
  v192 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v191 = (char *)&v182 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for Station(0);
  v195 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v194 = (char *)&v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for Song(0);
  v198 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v197 = (char *)&v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for RadioShow(0);
  v202 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v201 = (char *)&v182 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for Playlist(0);
  v204 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v203 = (char *)&v182 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for MusicVideo(0);
  v207 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v206 = (char *)&v182 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for MusicMovie(0);
  v212 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v211 = (char *)&v182 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = type metadata accessor for Genre(0);
  v214 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v213 = (char *)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for EditorialItem(0);
  v217 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v216 = (char *)&v182 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for Curator(0);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v219 = (char *)&v182 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for Artist(0);
  v223 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v29 = (char *)&v182 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v30);
  v32 = (char *)&v182 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10000B4C8(&qword_10054DCB8);
  __chkstk_darwin(v33);
  v35 = (char *)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Album(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v182 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for GenericMusicItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = __chkstk_darwin(v40);
  v185 = (char *)&v182 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v45 = (char *)&v182 - v44;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  v46((char *)&v182 - v44, v238, v40);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v45, v40);
  if (v47 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v45, v36);
    v48 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v35, 1, 1, v48);
    v49 = type metadata accessor for Actions.MetricsReportingContext(0);
    v243 = 0u;
    v244 = 0u;
    v245 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v32, 1, 1, v49);
    sub_1000EA398((uint64_t)v39, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, v236, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v50 = v250;
    v235 = v249;
    v51 = v251;
    v52 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694((uint64_t)v32, &qword_10054CD28);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694((uint64_t)v35, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
    v56 = v52;
    v57 = v50;
    v58 = v39;
LABEL_3:
    v59 = v36;
LABEL_29:
    result = v55(v58, v59);
    goto LABEL_30;
  }
  v60 = v236;
  v61 = v225;
  if (v47 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v62 = v223;
    v63 = v224;
    (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v29, v45, v224);
    v64 = type metadata accessor for PlaylistContext(0);
    v65 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v35, 1, 1, v64);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v66 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v67 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v32, 1, 1, v66);
    sub_1000EA808((uint64_t)v29, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v68 = v254;
    v234 = v255;
    sub_100011694(v67, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v65, &qword_10054DCB8);
    v69 = v29;
    v54 = v68;
    result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v69, v63);
    goto LABEL_30;
  }
  if (v47 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v71 = v220;
    v72 = (uint64_t)v219;
    v36 = v221;
    (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v219, v45, v221);
    v73 = type metadata accessor for PlaylistContext(0);
    v74 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v35, 1, 1, v73);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v75 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v76 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v32, 1, 1, v75);
    sub_1000EAC78(v72, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v76, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v74, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v71 + 8);
    v58 = (char *)v72;
    goto LABEL_3;
  }
  if (v47 == enum case for GenericMusicItem.editorialItem(_:))
  {
    v77 = v40;
    v78 = (uint64_t)v35;
    v79 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v77);
    v80 = v217;
    v81 = (uint64_t)v216;
    (*(void (**)(char *, char *, uint64_t))(v217 + 32))(v216, v45, v222);
    v82 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v35, 1, 1, v82);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v83 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v84 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v32, 1, 1, v83);
    sub_1000EB0E8(v81, v231, v232, v233, (uint64_t)v35, v234, v235, v79, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v84, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v78, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
    v58 = (char *)v81;
    v85 = (uint64_t *)&v249;
LABEL_28:
    v59 = *(v85 - 32);
    goto LABEL_29;
  }
  if (v47 == enum case for GenericMusicItem.genre(_:))
  {
    v86 = v40;
    v87 = (uint64_t)v35;
    v88 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v86);
    v89 = v214;
    v90 = (uint64_t)v213;
    (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v213, v45, v218);
    v91 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v35, 1, 1, v91);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v92 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v93 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v32, 1, 1, v92);
    sub_1000EB574(v90, v231, v232, v233, (uint64_t)v35, v234, v235, v88, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v93, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v87, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v89 + 8);
    v58 = (char *)v90;
    v85 = &v245;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v94 = v40;
    v95 = (uint64_t)v35;
    v96 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v94);
    v97 = v212;
    v98 = (uint64_t)v32;
    v99 = (uint64_t)v211;
    (*(void (**)(char *, char *, uint64_t))(v212 + 32))(v211, v45, v215);
    v100 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v35, 1, 1, v100);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v101 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v32, 1, 1, v101);
    sub_1000EB9E4(v99, v231, v232, v233, (uint64_t)v35, v234, v235, v96, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v98, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v95, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v97 + 8);
    v58 = (char *)v99;
    v85 = (uint64_t *)&v243 + 1;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v102 = v40;
    v103 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v102);
    v104 = v207;
    v105 = (uint64_t)v206;
    (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v206, v45, v210);
    v106 = type metadata accessor for Actions.MetricsReportingContext(0);
    v107 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v32, 1, 1, v106);
    sub_1000EBE70(v105, v231, v232, v233, v209, v234, v235, v103, &v246, v230, a10, v60, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v107, &qword_10054CD28);
    v55 = *(uint64_t (**)(char *, uint64_t))(v104 + 8);
    v58 = (char *)v105;
    v85 = (uint64_t *)&v241;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.playlist(_:))
  {
    v108 = v40;
    v109 = (uint64_t)v35;
    v110 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v108);
    v111 = v204;
    v112 = (uint64_t)v203;
    (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v203, v45, v208);
    v113 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v35, 1, 1, v113);
    v114 = type metadata accessor for Actions.MetricsReportingContext(0);
    v243 = 0u;
    v244 = 0u;
    v245 = 0;
    v115 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v32, 1, 1, v114);
    sub_1000EC2E0(v112, v231, v232, v233, (uint64_t)v35, v234, v235, v110, &v246, v230, (uint64_t)&v243, v60, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v115, &qword_10054CD28);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v109, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
    v58 = (char *)v112;
    v85 = (uint64_t *)&v240;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.radioShow(_:))
  {
    v116 = v40;
    v117 = (uint64_t)v35;
    v118 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v116);
    v119 = v202;
    v120 = (uint64_t)v201;
    (*(void (**)(char *, char *, uint64_t))(v202 + 32))(v201, v45, v205);
    v121 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v35, 1, 1, v121);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v122 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v123 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v32, 1, 1, v122);
    sub_1000EC750(v120, v231, v232, v233, (uint64_t)v35, v234, v235, v118, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v123, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v117, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v119 + 8);
    v58 = (char *)v120;
    v85 = (uint64_t *)&v237;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.song(_:))
  {
    v124 = v40;
    v125 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v124);
    v126 = v198;
    v127 = (uint64_t)v197;
    (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v197, v45, v200);
    v128 = type metadata accessor for Actions.MetricsReportingContext(0);
    v129 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v32, 1, 1, v128);
    sub_1000ECBC0(v127, v231, v232, v233, v209, v234, v235, v125, &v246, v230, a10, v60, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v129, &qword_10054CD28);
    v55 = *(uint64_t (**)(char *, uint64_t))(v126 + 8);
    v58 = (char *)v127;
    v85 = (uint64_t *)&v232;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.station(_:))
  {
    v130 = v40;
    v131 = (uint64_t)v35;
    v132 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v130);
    v133 = v195;
    v134 = (uint64_t)v194;
    (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v194, v45, v199);
    v135 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v35, 1, 1, v135);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v136 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v137 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v32, 1, 1, v136);
    sub_1000ED030(v134, v231, v232, v233, (uint64_t)v35, v234, v235, v132, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v137, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v131, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v133 + 8);
    v58 = (char *)v134;
    v85 = (uint64_t *)&v231;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v138 = v40;
    v139 = (uint64_t)v35;
    v140 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v138);
    v141 = v192;
    v142 = (uint64_t)v191;
    (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v191, v45, v196);
    v143 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v35, 1, 1, v143);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v144 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v145 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v32, 1, 1, v144);
    sub_1000ED4A0(v142, v231, v232, v233, (uint64_t)v35, v234, v235, v140, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v145, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v139, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v141 + 8);
    v58 = (char *)v142;
    v85 = &v228;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v146 = v40;
    v147 = (uint64_t)v35;
    v148 = v239;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v146);
    v149 = v190;
    v150 = (uint64_t)v189;
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))(v189, v45, v193);
    v151 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v35, 1, 1, v151);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v152 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v153 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v32, 1, 1, v152);
    sub_1000ED92C(v150, v231, v232, v233, (uint64_t)v35, v234, v235, v148, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v153, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    sub_100011694(v147, &qword_10054DCB8);
    v55 = *(uint64_t (**)(char *, uint64_t))(v149 + 8);
    v58 = (char *)v150;
    v85 = &v225;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvShow(_:))
  {
    v158 = v35;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v159 = v187;
    v160 = (uint64_t)v186;
    v161 = v188;
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v186, v45, v188);
    v162 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v35, 1, 1, v162);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v163 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v164 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v32, 1, 1, v163);
    sub_1000EDDB8(v160, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v164, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    v165 = (uint64_t)v158;
LABEL_35:
    sub_100011694(v165, &qword_10054DCB8);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v159 + 8))(v160, v161);
    goto LABEL_30;
  }
  if (v47 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v159 = v184;
    v160 = (uint64_t)v183;
    v161 = v61;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v183, v45, v61);
    v166 = type metadata accessor for PlaylistContext(0);
    v167 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v35, 1, 1, v166);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v168 = type metadata accessor for Actions.MetricsReportingContext(0);
    v240 = 0u;
    v241 = 0u;
    v242 = 0;
    v169 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 56))(v32, 1, 1, v168);
    sub_1000EE244(v160, v231, v232, v233, (uint64_t)v35, v234, v235, v239, &v246, v230, (uint64_t)&v243, (unint64_t)&v240, v229, v228, v227, v226, (uint64_t)v32);
    v238 = v246;
    v239 = v247;
    v236 = v248;
    v57 = v250;
    v235 = v249;
    v51 = v251;
    v56 = v252;
    v53 = v253;
    v54 = v254;
    v234 = v255;
    sub_100011694(v169, &qword_10054CD28);
    sub_100011694((uint64_t)&v240, &qword_10054DCC8);
    sub_100011694((uint64_t)&v243, &qword_10054DCD0);
    v165 = (uint64_t)v167;
    goto LABEL_35;
  }
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v170 = type metadata accessor for Logger(0);
  sub_10000D78C(v170, (uint64_t)static Logger.actions);
  v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v185, v238, v40);
  v172 = Logger.logObject.getter(v171);
  v173 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v172, v173))
  {
    v174 = swift_slowAlloc(12, -1);
    v175 = swift_slowAlloc(32, -1);
    v246 = v175;
    *(_DWORD *)v174 = 136315138;
    v176 = sub_10001254C(&qword_10054DCC0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v177 = v185;
    v178 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v40, v176);
    v180 = v179;
    *(_QWORD *)(v174 + 4) = sub_1000BA30C(v178, v179, &v246);
    swift_bridgeObjectRelease(v180);
    v181 = *(void (**)(char *, uint64_t))(v41 + 8);
    v181(v177, v40);
    _os_log_impl((void *)&_mh_execute_header, v172, v173, "GenericMusicItem %s actions not handled.", (uint8_t *)v174, 0xCu);
    swift_arrayDestroy(v175, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v175, -1, -1);
    swift_slowDealloc(v174, -1, -1);
  }
  else
  {
    v181 = *(void (**)(char *, uint64_t))(v41 + 8);
    v181(v185, v40);
  }

  result = ((uint64_t (*)(char *, uint64_t))v181)(v45, v40);
  v238 = 0;
  v239 = 0;
  v236 = 0;
  v235 = 0;
  v57 = 0;
  v51 = 0;
  v56 = 0;
  v53 = 0;
  v54 = 0;
  v234 = 0;
LABEL_30:
  v154 = v237;
  v155 = v239;
  *v237 = v238;
  v154[1] = v155;
  v156 = v235;
  v154[2] = v236;
  v154[3] = v156;
  v154[4] = v57;
  v154[5] = v51;
  v154[6] = v56;
  v154[7] = v53;
  v157 = v234;
  v154[8] = v54;
  v154[9] = v157;
  return result;
}

_QWORD *sub_1000E527C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*__ptr32 *v53)();
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  _QWORD *v88;
  uint64_t v89;
  char v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  unint64_t v120;
  id v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Swift::String v127;
  void *v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *result;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  int64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  BOOL v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _QWORD *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182[2];
  __int128 v183[2];
  uint64_t v184;
  __int128 v185[2];
  uint64_t v186;
  __int128 v187[3];
  uint64_t v188;
  unsigned __int8 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  unsigned __int8 v195;
  __int128 v196;
  __int128 v197[3];
  uint64_t v198;
  unsigned __int8 v199;
  __int128 v200;

  v165 = a8;
  v171 = a6;
  *(_QWORD *)&v180 = a5;
  v167 = a4;
  *(_QWORD *)&v181 = a3;
  v19 = sub_10000B4C8(&qword_10054DCB8);
  __chkstk_darwin(v19);
  *(_QWORD *)&v168 = (char *)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for PlaylistContext(0);
  *(_QWORD *)&v169 = *(_QWORD *)(v166 - 8);
  v21 = __chkstk_darwin(v166);
  v163 = v22;
  v164 = (_QWORD *)((char *)&v156 - (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  *(_QWORD *)&v170 = (char *)&v156 - v23;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10000B4C8(&qword_10054CD28);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v28);
  v31 = (char *)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = a1;
  sub_100011370(a1, (uint64_t)&v191, &qword_10054DCD0);
  v178 = a7;
  *(_QWORD *)&v179 = a2;
  v176 = v25;
  *(_QWORD *)&v177 = v24;
  v174 = v31;
  v175 = v27;
  v172 = v29;
  v173 = v30;
  if (*((_QWORD *)&v192 + 1))
  {
    sub_1000B47A8(&v191, (uint64_t)v197);
    sub_1000C53BC(a2, (uint64_t)&v191);
    v32 = sub_10000B4C8(&qword_1005528C0);
    v162 = String.init<A>(describing:)(&v191, v32);
    v33 = v27;
    v35 = v34;
    sub_1000C53BC(a2, (uint64_t)&v191);
    sub_1000C53BC((uint64_t)v197, (uint64_t)v187);
    sub_100011370(v181, (uint64_t)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
    v36 = *(unsigned __int8 *)(v29 + 80);
    v37 = (v36 + 96) & ~v36;
    v38 = swift_allocObject(&unk_100501FF0, v37 + v30, v36 | 7);
    sub_1000B47A8(&v191, v38 + 16);
    sub_1000B47A8(v187, v38 + 56);
    sub_100011530((uint64_t)v31, v38 + v37, &qword_10054CD28);
    v39 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v40 = UUID.uuidString.getter(v39);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
    strcpy((char *)&v191, "ActionMenu: ");
    BYTE13(v191) = 0;
    HIWORD(v191) = -5120;
    v43._countAndFlagsBits = v162;
    v43._object = v35;
    String.append(_:)(v43);
    swift_bridgeObjectRelease(v35);
    v44 = v191;
    v45 = sub_10000B4C8(&qword_10054DC98);
    v46 = swift_allocObject(v45, 120, 7);
    *(_OWORD *)(v46 + 16) = xmmword_100424BB0;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v42;
    *(_OWORD *)(v46 + 48) = v44;
    *(_OWORD *)(v46 + 64) = xmmword_100427FA0;
    *(_QWORD *)(v46 + 80) = 0;
    *(_QWORD *)(v46 + 88) = 0;
    *(_QWORD *)(v46 + 96) = sub_1000F4CE0;
    *(_QWORD *)(v46 + 104) = v38;
    *(_BYTE *)(v46 + 112) = 1;
    *(_QWORD *)&v191 = _swiftEmptyArrayStorage;
    sub_10012AF38((_QWORD *)v46);
    v159 = (_QWORD *)v191;
    sub_100011758(v197);
  }
  else
  {
    sub_100011694((uint64_t)&v191, &qword_10054DCD0);
    v159 = _swiftEmptyArrayStorage;
  }
  v47 = v169;
  v48 = v168;
  v49 = v166;
  sub_100011370((uint64_t)v167, v168, &qword_10054DCB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v49) == 1)
  {
    sub_100011694(v48, &qword_10054DCB8);
    v50 = _swiftEmptyArrayStorage;
    v51 = v178;
    v52 = v179;
    v53 = &off_100424000;
  }
  else
  {
    v54 = v48;
    v55 = v170;
    sub_1000F4810(v54, v170);
    v52 = v179;
    sub_1000C53BC(v179, (uint64_t)v197);
    v56 = sub_10000B4C8(&qword_1005528C0);
    *(_QWORD *)&v169 = String.init<A>(describing:)(v197, v56);
    v58 = v57;
    v59 = (uint64_t)v164;
    sub_1000F4854(v55, (uint64_t)v164);
    v60 = (uint64_t)v174;
    sub_100011370(v181, (uint64_t)v174, &qword_10054CD28);
    v61 = *(unsigned __int8 *)(v47 + 80);
    v62 = (v61 + 16) & ~v61;
    v63 = ((unint64_t)v163 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = *(unsigned __int8 *)(v172 + 80);
    v65 = (v64 + v63 + 8) & ~v64;
    v66 = swift_allocObject(&unk_100501FC8, v65 + v173, v61 | v64 | 7);
    sub_1000F4810(v59, v66 + v62);
    v67 = v180;
    *(_QWORD *)(v66 + v63) = v180;
    sub_100011530(v60, v66 + v65, &qword_10054CD28);
    swift_retain(v67);
    v68 = v175;
    v69 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v70 = UUID.uuidString.getter(v69);
    v72 = v71;
    (*(void (**)(char *, _QWORD))(v176 + 8))(v68, v177);
    strcpy((char *)v197, "ActionMenu: ");
    BYTE13(v197[0]) = 0;
    HIWORD(v197[0]) = -5120;
    v73._countAndFlagsBits = v169;
    v73._object = v58;
    String.append(_:)(v73);
    swift_bridgeObjectRelease(v58);
    v75 = *((_QWORD *)&v197[0] + 1);
    v74 = *(_QWORD *)&v197[0];
    v76 = sub_10000B4C8(&qword_10054DC98);
    v77 = swift_allocObject(v76, 120, 7);
    *(_OWORD *)(v77 + 16) = xmmword_100424BB0;
    *(_QWORD *)(v77 + 32) = v70;
    *(_QWORD *)(v77 + 40) = v72;
    *(_OWORD *)(v77 + 48) = __PAIR128__(v75, v74);
    *(_OWORD *)(v77 + 64) = xmmword_100427FA0;
    *(_QWORD *)(v77 + 80) = 0;
    *(_QWORD *)(v77 + 88) = 0;
    *(_QWORD *)(v77 + 96) = sub_1000F4AA0;
    *(_QWORD *)(v77 + 104) = v66;
    *(_BYTE *)(v77 + 112) = 1;
    v53 = &off_100424000;
    *(_QWORD *)&v197[0] = _swiftEmptyArrayStorage;
    sub_10012AF38((_QWORD *)v77);
    v50 = *(_QWORD **)&v197[0];
    sub_1000F4B14(v170);
    v51 = v178;
  }
  v78 = (uint64_t)a16;
  sub_1000C53BC(v52, (uint64_t)v187);
  v79 = sub_10000B4C8(&qword_1005528C0);
  v80 = sub_10000B4C8(&qword_10054DE60);
  if ((swift_dynamicCast(&v191, v187, v79, v80, 6) & 1) != 0)
  {
    sub_1000F2B0C(&v191, v197);
    sub_1000C53BC(v51, (uint64_t)&v191);
    v81 = v181;
    sub_1000F177C(v197, v180, v171, (uint64_t)&v191, v165, a9, v181, (uint64_t)v187);
    v169 = v187[1];
    v170 = v187[0];
    v168 = v187[2];
    v82 = v188;
    v83 = v189;
    sub_100011694((uint64_t)&v191, &qword_10054CD98);
    v84 = sub_10000B4C8(&qword_10054DC98);
    v85 = swift_allocObject(v84, 120, 7);
    v86 = v170;
    *(_OWORD *)(v85 + 16) = *((_OWORD *)v53 + 187);
    *(_OWORD *)(v85 + 32) = v86;
    v87 = v168;
    *(_OWORD *)(v85 + 48) = v169;
    *(_OWORD *)(v85 + 64) = v87;
    *(_QWORD *)(v85 + 80) = v82;
    *(_QWORD *)(v85 + 88) = v83;
    *(_OWORD *)(v85 + 96) = v190;
    *(_BYTE *)(v85 + 112) = 1;
    *(_QWORD *)&v191 = _swiftEmptyArrayStorage;
    sub_10012AF38((_QWORD *)v85);
    v88 = (_QWORD *)v191;
    sub_100011758(v197);
  }
  else
  {
    v192 = 0u;
    v193 = 0u;
    v191 = 0u;
    sub_100011694((uint64_t)&v191, &qword_10054DF38);
    v88 = _swiftEmptyArrayStorage;
    v81 = v181;
  }
  *(_QWORD *)&v170 = a15;
  *(_QWORD *)&v169 = a14;
  *(_QWORD *)&v168 = a13;
  v166 = a12;
  v167 = a11;
  sub_1000C53BC(v52, (uint64_t)&v191);
  v89 = sub_10000B4C8(&qword_10054DCD8);
  v90 = swift_dynamicCast(v185, &v191, v79, v89, 6);
  v163 = v88;
  v164 = v50;
  if ((v90 & 1) == 0)
  {
    v186 = 0;
    memset(v185, 0, sizeof(v185));
    sub_100011694((uint64_t)v185, &qword_10054DF40);
LABEL_15:
    *(_QWORD *)&v158 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  sub_1000B47A8(v185, (uint64_t)v197);
  if (!a10)
  {
    sub_100011758(v197);
    goto LABEL_15;
  }
  v91 = a10;
  v160 = a16;
  v92 = v91;
  sub_1000F1C50((uint64_t)v197, v91, v167, v51, v166, v168, v169, (uint64_t)&v191, v170, v81);
  v157 = v192;
  v158 = v191;
  v156 = v193;
  v93 = v194;
  v94 = v195;
  v95 = sub_10000B4C8(&qword_10054DC98);
  v96 = swift_allocObject(v95, 120, 7);
  v97 = v158;
  *(_OWORD *)(v96 + 16) = *((_OWORD *)v53 + 187);
  *(_OWORD *)(v96 + 32) = v97;
  v98 = v156;
  *(_OWORD *)(v96 + 48) = v157;
  *(_OWORD *)(v96 + 64) = v98;
  *(_QWORD *)(v96 + 80) = v93;
  *(_QWORD *)(v96 + 88) = v94;
  v78 = (uint64_t)v160;
  *(_OWORD *)(v96 + 96) = v196;
  *(_BYTE *)(v96 + 112) = 1;
  *(_QWORD *)&v185[0] = _swiftEmptyArrayStorage;
  sub_10012AF38((_QWORD *)v96);

  *(_QWORD *)&v158 = *(_QWORD *)&v185[0];
  sub_100011758(v197);
LABEL_16:
  v99 = v161;
  v101 = v172;
  v100 = v173;
  v162 = v79;
  sub_1000C53BC(v52, (uint64_t)v197);
  v102 = String.init<A>(describing:)(v197, v79);
  v160 = v103;
  v161 = v102;
  sub_1000C53BC(v52, (uint64_t)v197);
  sub_1000C53BC(v78, (uint64_t)v185);
  v104 = (uint64_t)v174;
  sub_100011370(v81, (uint64_t)v174, &qword_10054CD28);
  sub_100011370(v99, (uint64_t)v183, &qword_10054DCD0);
  sub_1000C53BC(v51, (uint64_t)v182);
  v105 = *(unsigned __int8 *)(v101 + 80);
  v106 = (v105 + 96) & ~v105;
  v107 = (v100 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
  v108 = (v107 + 47) & 0xFFFFFFFFFFFFFFF8;
  v109 = (v108 + 15) & 0xFFFFFFFFFFFFFFF8;
  v110 = (v109 + 15) & 0xFFFFFFFFFFFFFFF8;
  v111 = (v110 + 47) & 0xFFFFFFFFFFFFFFF8;
  v112 = (v111 + 23) & 0xFFFFFFFFFFFFFFF8;
  v113 = swift_allocObject(&unk_100501FA0, v112 + 16, v105 | 7);
  sub_1000B47A8(v197, v113 + 16);
  sub_1000B47A8(v185, v113 + 56);
  sub_100011530(v104, v113 + v106, &qword_10054CD28);
  sub_100011530((uint64_t)v183, v113 + v107, &qword_10054DCD0);
  v114 = v180;
  *(_QWORD *)(v113 + v108) = v180;
  v115 = v167;
  *(_QWORD *)(v113 + v109) = v167;
  sub_1000B47A8(v182, v113 + v110);
  v116 = (_QWORD *)(v113 + v111);
  v117 = v168;
  *v116 = v166;
  v116[1] = v117;
  v118 = (_QWORD *)(v113 + v112);
  v119 = v169;
  v120 = v170;
  *v118 = v169;
  v118[1] = v120;
  swift_retain(v114);
  v121 = v115;
  swift_bridgeObjectRetain();
  sub_1000F2394(v119, v120);
  v122 = v175;
  v123 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v124 = UUID.uuidString.getter(v123);
  v126 = v125;
  (*(void (**)(char *, _QWORD))(v176 + 8))(v122, v177);
  strcpy((char *)v197, "ActionMenu: ");
  BYTE13(v197[0]) = 0;
  HIWORD(v197[0]) = -5120;
  v128 = v160;
  v127._countAndFlagsBits = v161;
  v127._object = v160;
  String.append(_:)(v127);
  swift_bridgeObjectRelease(v128);
  v129 = v197[0];
  v130 = sub_10000B4C8(&qword_10054DC98);
  v131 = swift_allocObject(v130, 120, 7);
  v177 = xmmword_100424BB0;
  *(_OWORD *)(v131 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v131 + 32) = v124;
  *(_QWORD *)(v131 + 40) = v126;
  *(_OWORD *)(v131 + 48) = v129;
  *(_OWORD *)(v131 + 64) = xmmword_100427FA0;
  *(_QWORD *)(v131 + 80) = 0;
  *(_QWORD *)(v131 + 88) = 0;
  *(_QWORD *)(v131 + 96) = sub_1000F476C;
  *(_QWORD *)(v131 + 104) = v113;
  *(_BYTE *)(v131 + 112) = 1;
  sub_1000C53BC(v179, (uint64_t)v197);
  v132 = sub_10000B4C8(&qword_10054DCE0);
  if ((swift_dynamicCast(v183, v197, v162, v132, 6) & 1) != 0)
  {
    sub_1000B47A8(v183, (uint64_t)v185);
    sub_1000C53BC(v178, (uint64_t)v183);
    sub_1000F1E94((uint64_t)v185, v114, v171, (uint64_t)v183, v165, v181, 0, 0, (uint64_t)v197);
    v180 = v197[1];
    v181 = v197[0];
    v179 = v197[2];
    v133 = v198;
    v134 = v199;
    sub_100011694((uint64_t)v183, &qword_10054CD98);
    v135 = swift_allocObject(v130, 120, 7);
    v136 = v181;
    *(_OWORD *)(v135 + 16) = v177;
    *(_OWORD *)(v135 + 32) = v136;
    v137 = v179;
    *(_OWORD *)(v135 + 48) = v180;
    *(_OWORD *)(v135 + 64) = v137;
    *(_QWORD *)(v135 + 80) = v133;
    *(_QWORD *)(v135 + 88) = v134;
    *(_OWORD *)(v135 + 96) = v200;
    *(_BYTE *)(v135 + 112) = 1;
    *(_QWORD *)&v183[0] = _swiftEmptyArrayStorage;
    sub_10012AF38((_QWORD *)v135);
    v138 = *(_QWORD **)&v183[0];
    sub_100011758(v185);
  }
  else
  {
    v184 = 0;
    memset(v183, 0, sizeof(v183));
    sub_100011694((uint64_t)v183, &qword_10054DF48);
    v138 = _swiftEmptyArrayStorage;
  }
  v139 = sub_10000B4C8(&qword_10054DD88);
  result = (_QWORD *)swift_allocObject(v139, 80, 7);
  v141 = result;
  result[4] = v159;
  *(_QWORD *)&v181 = result + 4;
  v142 = v163;
  result[5] = v164;
  result[6] = v142;
  result[7] = v158;
  result[8] = v131;
  result[9] = v138;
  v143 = 4;
  v144 = _swiftEmptyArrayStorage;
  while (1)
  {
    v145 = v141[v143];
    v146 = *(_QWORD *)(v145 + 16);
    v147 = v144[2];
    v148 = v147 + v146;
    if (__OFADD__(v147, v146))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v144);
    if ((_DWORD)result && v148 <= v144[3] >> 1)
    {
      if (*(_QWORD *)(v145 + 16))
        goto LABEL_31;
    }
    else
    {
      if (v147 <= v148)
        v149 = v147 + v146;
      else
        v149 = v147;
      result = sub_1000DED24(result, v149, 1, v144);
      v144 = result;
      if (*(_QWORD *)(v145 + 16))
      {
LABEL_31:
        v150 = v144[2];
        if ((v144[3] >> 1) - v150 < v146)
          goto LABEL_38;
        v151 = (uint64_t)&v144[11 * v150 + 4];
        sub_10000B4C8(&qword_10054DCA0);
        result = (_QWORD *)swift_arrayInitWithCopy(v151);
        if (v146)
        {
          v152 = v144[2];
          v153 = __OFADD__(v152, v146);
          v154 = v152 + v146;
          if (v153)
            goto LABEL_39;
          v144[2] = v154;
        }
        goto LABEL_21;
      }
    }
    if (v146)
      goto LABEL_37;
LABEL_21:
    result = (_QWORD *)swift_bridgeObjectRelease(v145);
    if (++v143 == 10)
    {
      swift_setDeallocating(v141);
      v155 = sub_10000B4C8(&qword_10054DD90);
      swift_arrayDestroy(v181, 6, v155);
      swift_deallocClassInstance(v141, 32, 7);
      return v144;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_1000E5F90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t (**)(void));
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v6 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_10000D900(a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = sub_10000D900(a2, v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v17 + 16))(v16, v11, v9);
  __chkstk_darwin(v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t))(v21 + 16))(v20, v14, v12);
  sub_100011370(a3, (uint64_t)v8, &qword_10054CD28);
  if (qword_10054BA98 != -1)
    swift_once(&qword_10054BA98, sub_100154564);
  v22 = static ApplicationCapabilities.Controller.shared;
  swift_retain(static ApplicationCapabilities.Controller.shared);
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v16, v22, (uint64_t)v20, (uint64_t)v8, v9, v12, v10, v13, &v29);
  v23 = v32;
  v33 = v29;
  v27 = v30;
  v26 = v31;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v37 = 4;
  v38 = sub_1000FC29C;
  v39 = 0;
  v40 = 0x4014000000000000;
  v41 = &unk_10054E060;
  v42 = 0;
  v43 = &unk_10054E068;
  v44 = 0;
  v24 = (_QWORD *)sub_1000E14F8((uint64_t)&v33);
  swift_release(v23);
  swift_release(v26);
  swift_release(v27);
  v28 = _swiftEmptyArrayStorage;
  sub_10012AF38(v24);
  return v28;
}

_QWORD *sub_1000E61E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v67[6];
  char v68;
  uint64_t (*v69)(uint64_t (**)(void));
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  v60 = a3;
  v65 = a2;
  v4 = sub_10000B4C8(&qword_10054CD28);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v52 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for Playlist.Entry(0);
  v18 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  v57 = v18;
  v20 = __chkstk_darwin(v17);
  v61 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v64 = (char *)&v52 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v52 - v23;
  v56 = *(void (**)(char *, uint64_t))(v25 + 16);
  v54 = (char *)&v52 - v23;
  v56((char *)&v52 - v23, a1);
  v26 = a1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v27(v16, v26, v8);
  sub_100011370(v60, (uint64_t)v7, &qword_10054CD28);
  v27(v14, (uint64_t)v16, v8);
  v28 = *(unsigned __int8 *)(v9 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = v28 | 7;
  v60 = swift_allocObject(&unk_1005020E0, v29 + v10, v28 | 7);
  v31 = v60 + v29;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v33 = v8;
  v53 = v8;
  v32(v31, v14, v8);
  v34 = v55;
  ((void (*)(char *, char *, uint64_t))v56)(v64, v24, v55);
  v35 = v58;
  v32((uint64_t)v58, v16, v33);
  v36 = v57;
  v37 = *(unsigned __int8 *)(v57 + 80);
  v38 = (v37 + 24) & ~v37;
  v39 = (v19 + v28 + v38) & ~v28;
  v40 = swift_allocObject(&unk_100502108, v39 + v10, v30 | v37);
  v41 = v64;
  *(_QWORD *)(v40 + 16) = v65;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v42(v40 + v38, v41, v34);
  v32(v40 + v39, v35, v53);
  v43 = v61;
  v44 = v34;
  v42((uint64_t)v61, v54, v34);
  v45 = *(unsigned __int8 *)(v62 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = (v63 + v37 + v46) & ~v37;
  v48 = swift_allocObject(&unk_100502130, v47 + v19, v37 | v45 | 7);
  sub_100011530((uint64_t)v59, v48 + v46, &qword_10054CD28);
  v42(v48 + v47, v43, v44);
  v49 = v60;
  v67[0] = sub_1000C8088;
  v67[1] = v60;
  v67[2] = &unk_10054D2E0;
  v67[3] = v40;
  v67[4] = &unk_10054D2F0;
  v67[5] = v48;
  v68 = 41;
  v69 = sub_1000B0910;
  v70 = 0;
  v71 = 0x4014000000000000;
  v72 = &unk_10054D2C8;
  v73 = 0;
  v74 = &unk_10054D2D0;
  v75 = 0;
  swift_retain(v65);
  v50 = (_QWORD *)sub_1000E163C((uint64_t)v67);
  swift_release(v48);
  swift_release(v40);
  swift_release(v49);
  v66 = _swiftEmptyArrayStorage;
  sub_10012AF38(v50);
  return v66;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v9;
  __n128 result;
  _OWORD v11[5];

  sub_1000F177C(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t sub_1000E6628(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(char *, char *, uint64_t), int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  __int128 v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  int64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  _QWORD *v102;
  _OWORD v103[3];
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  _QWORD v111[8];
  _OWORD v112[4];
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[8];
  char v118;
  uint64_t (*v119)(uint64_t (**)(void));
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  _QWORD v126[18];

  *(_QWORD *)&v99 = a8;
  *(_QWORD *)&v98 = a7;
  v101 = a5;
  v97 = a11;
  v96 = (_QWORD *)a10;
  v100 = a9;
  v16 = (char *)v111;
  v17 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C53BC(a1, (uint64_t)v112);
  v20 = sub_10000B4C8(&qword_1005528C0);
  v21 = sub_10000B4C8(&qword_10054DFB0);
  v22 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast(&v113, v112, v20, v21, 6) & 1) == 0)
  {
    v115 = 0;
    v113 = 0u;
    v114 = 0u;
    sub_100011694((uint64_t)&v113, &qword_10054DFB8);
    v95 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  sub_1000B47A8(&v113, (uint64_t)v103);
  sub_1000C53BC((uint64_t)v103, (uint64_t)v126);
  sub_1000C53BC(a2, (uint64_t)v117);
  sub_100011370(a3, (uint64_t)v19, &qword_10054CD28);
  if (qword_10054BA98 != -1)
    goto LABEL_47;
  while (1)
  {
    v23 = static ApplicationCapabilities.Controller.shared;
    swift_retain(static ApplicationCapabilities.Controller.shared);
    sub_1001189B4(v126, v23, v117, (uint64_t)v19, v111);
    v24 = v111[6];
    v25 = v111[7];
    v26 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v26;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v117[6] = v24;
    v117[7] = v25;
    v118 = 42;
    v119 = sub_1000B0910;
    v120 = 0;
    v121 = 0x4014000000000000;
    v122 = &unk_10054E5C8;
    v123 = 0;
    v124 = &unk_10054E5D0;
    v125 = 0;
    v27 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v27;
    v28 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v28;
    v29 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v29;
    v30 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v30;
    v31 = (_QWORD *)sub_1000E1780((uint64_t)v126);
    sub_1000F56AC(v117, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_QWORD *)&v109 = v22;
    sub_10012AF38(v31);
    v95 = (char *)v109;
    sub_100011758(v103);
LABEL_5:
    v93 = v19;
    sub_100011370((uint64_t)a4, (uint64_t)&v109, &qword_10054DCD0);
    v94 = a3;
    if (v110)
    {
      sub_1000B47A8(&v109, (uint64_t)&v113);
      v32 = *(_QWORD *)(a1 + 24);
      v91 = *(_QWORD *)(a1 + 32);
      v33 = sub_10000D900((_QWORD *)a1, v32);
      v92 = a6;
      v34 = v33;
      v35 = *((_QWORD *)&v114 + 1);
      v89 = v115;
      v36 = (_QWORD *)a1;
      v37 = sub_10000D900(&v113, *((uint64_t *)&v114 + 1));
      v90 = &v88;
      __chkstk_darwin(v37);
      v39 = (char *)&v88 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      v41 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v40 + 16))(v39, v34, v32);
      __chkstk_darwin(v41);
      v43 = (char *)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v44 + 16))(v43, v37, v35);
      v45 = (uint64_t)v93;
      sub_100011370(a3, (uint64_t)v93, &qword_10054CD28);
      v46 = (uint64_t)v43;
      a6 = v92;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v39, v46, v45, v32, v35, v91, v89, v112);
      v47 = *((_OWORD *)v16 + 6);
      v48 = *((_OWORD *)v16 + 7);
      v49 = *((_OWORD *)v16 + 5);
      v103[0] = *((_OWORD *)v16 + 4);
      v103[1] = v49;
      v103[2] = v47;
      v104 = v48;
      LOBYTE(v105) = 17;
      *((_QWORD *)&v105 + 1) = sub_1000FC28C;
      *(_QWORD *)&v106 = 0;
      *((_QWORD *)&v106 + 1) = 0x4014000000000000;
      *(_QWORD *)&v107 = &unk_10054E080;
      *((_QWORD *)&v107 + 1) = 0;
      *(_QWORD *)&v108 = &unk_10054E088;
      *((_QWORD *)&v108 + 1) = 0;
      v50 = v106;
      *((_OWORD *)v16 + 15) = v105;
      *((_OWORD *)v16 + 16) = v50;
      v51 = v108;
      *((_OWORD *)v16 + 17) = v107;
      *((_OWORD *)v16 + 18) = v51;
      v52 = v103[1];
      *((_OWORD *)v16 + 11) = v103[0];
      *((_OWORD *)v16 + 12) = v52;
      v53 = v104;
      *((_OWORD *)v16 + 13) = v103[2];
      *((_OWORD *)v16 + 14) = v53;
      v54 = (_QWORD *)sub_1000E18C4((uint64_t)v117);
      sub_1000F5624(v103);
      v102 = _swiftEmptyArrayStorage;
      sub_10012AF38(v54);
      v55 = v102;
      sub_100011758(&v113);
    }
    else
    {
      sub_100011694((uint64_t)&v109, &qword_10054DCD0);
      v55 = _swiftEmptyArrayStorage;
      v36 = (_QWORD *)a1;
      v45 = (uint64_t)v93;
    }
    v56 = v36[3];
    v57 = v36[4];
    v58 = sub_10000D900(v36, v56);
    v19 = (char *)&v88;
    __chkstk_darwin(v58);
    v60 = (char *)&v88 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v61 + 16))(v60);
    sub_1000C53BC(v98, (uint64_t)v103);
    sub_100011370(v94, v45, &qword_10054CD28);
    v87 = v45;
    v62 = (uint64_t)v60;
    v63 = v101;
    v22 = v96;
    a1 = v97;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v62, v101, (void *)a6, (uint64_t)v103, v99, v100, (uint64_t)v96, v97, (unint64_t (**)())&v113, v87, v56, v57);
    v64 = v116;
    v65 = *(_OWORD *)(v16 + 136);
    v98 = *(_OWORD *)(v16 + 152);
    v99 = v65;
    *(_QWORD *)&v103[0] = v113;
    *(_OWORD *)((char *)v103 + 8) = v65;
    *(_OWORD *)((char *)&v103[1] + 8) = v98;
    *((_QWORD *)&v103[2] + 1) = v116;
    LOBYTE(v104) = 5;
    *((_QWORD *)&v104 + 1) = sub_1000B0910;
    *(_QWORD *)&v105 = 0;
    *((_QWORD *)&v105 + 1) = 0x4014000000000000;
    *(_QWORD *)&v106 = &unk_10054E400;
    *((_QWORD *)&v106 + 1) = 0;
    *(_QWORD *)&v107 = &unk_10054E408;
    *((_QWORD *)&v107 + 1) = 0;
    swift_retain(v63);
    v66 = (id)a6;
    swift_bridgeObjectRetain();
    sub_1000F2394((uint64_t)v22, a1);
    v67 = sub_1000E1A08((uint64_t)v103);
    swift_release(v64);
    swift_release(v98);
    swift_release(v99);
    v68 = sub_10000B4C8(&qword_10054DD88);
    v69 = (_QWORD *)swift_allocObject(v68, 56, 7);
    v16 = v95;
    v69[4] = v95;
    a3 = (uint64_t)(v69 + 4);
    v69[5] = v55;
    v69[6] = v67;
    v70 = *((_QWORD *)v16 + 2);
    swift_bridgeObjectRetain();
    v71 = sub_1000DED24(0, v70, 1, _swiftEmptyArrayStorage);
    a4 = v71;
    if (*((_QWORD *)v16 + 2))
    {
      v72 = v71[2];
      if ((v71[3] >> 1) - v72 < v70)
        goto LABEL_44;
      v73 = (uint64_t)&v71[11 * v72 + 4];
      sub_10000B4C8(&qword_10054DCA0);
      result = swift_arrayInitWithCopy(v73);
      if (v70)
      {
        v75 = a4[2];
        v76 = __OFADD__(v75, v70);
        v77 = v75 + v70;
        if (v76)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v77;
      }
    }
    else if (v70)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease(v16);
    v78 = v69[5];
    v19 = *(char **)(v78 + 16);
    a6 = a4[2];
    v16 = &v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19)
          goto LABEL_17;
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16)
      v81 = (int64_t)&v19[a6];
    else
      v81 = a6;
    a4 = sub_1000DED24((_QWORD *)1, v81, 1, a4);
    a6 = a4[2];
    if (*(_QWORD *)(v78 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19)
        goto LABEL_45;
      sub_10000B4C8(&qword_10054DCA0);
      result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
      if (v19)
      {
        v79 = a4[2];
        v76 = __OFADD__(v79, v19);
        v80 = &v19[v79];
        if (v76)
          goto LABEL_49;
        a4[2] = v80;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19)
      goto LABEL_42;
LABEL_27:
    swift_bridgeObjectRelease(v78);
    v82 = v69[6];
    v19 = *(char **)(v82 + 16);
    a6 = a4[2];
    v16 = &v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19)
          goto LABEL_39;
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16)
      v85 = (int64_t)&v19[a6];
    else
      v85 = a6;
    a4 = sub_1000DED24((_QWORD *)1, v85, 1, a4);
    a6 = a4[2];
    if (!*(_QWORD *)(v82 + 16))
    {
LABEL_39:
      if (!v19)
        goto LABEL_40;
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once(&qword_10054BA98, sub_100154564);
  }
  sub_10000B4C8(&qword_10054DCA0);
  result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease(v82);
    swift_setDeallocating(v69);
    v86 = sub_10000B4C8(&qword_10054DD90);
    swift_arrayDestroy(a3, 3, v86);
    swift_deallocClassInstance(v69, 32, 7);
    return (uint64_t)a4;
  }
  v83 = a4[2];
  v76 = __OFADD__(v83, v19);
  v84 = &v19[v83];
  if (!v76)
  {
    a4[2] = v84;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v10;
  __n128 result;
  _OWORD v12[5];

  sub_1000F1E94(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

_QWORD *sub_1000E6EE0(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *result;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  unint64_t (*v89)();
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[8];
  _BYTE v95[136];
  uint64_t v96;
  _QWORD v97[8];
  _BYTE v98[136];
  uint64_t v99;
  _QWORD v100[8];
  _BYTE v101[136];
  _BYTE v102[16];
  id v103;
  _BYTE v104[16];
  id v105;
  _BYTE v106[16];
  id v107;
  unint64_t (*v108)();
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  char v112;
  uint64_t (*v113)(uint64_t (**)(void));
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;

  v84 = a6;
  v85 = a8;
  v87 = a7;
  v88 = (_QWORD *)a4;
  v79 = a5;
  v86 = a9;
  v13 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v83 = a1[4];
  v17 = sub_10000D900(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  v21 = a8;
  v22 = (uint64_t)v15;
  sub_100011370(v21, (uint64_t)v15, &qword_10054CD28);
  v23 = a2;
  v24 = a3;
  v25 = v79;
  swift_bridgeObjectRetain();
  v26 = v84;
  v27 = v87;
  sub_1000F2394(v84, v87);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, (uint64_t)v23, (uint64_t)v24, (uint64_t)v88, v25, v26, v27, v22, &v89, v16, v83);
  v28 = v92;
  v82 = v90;
  v109 = v90;
  v81 = v91;
  v110 = v91;
  v108 = v89;
  v111 = v92;
  v112 = 23;
  v113 = sub_1000FC29C;
  v114 = 0;
  v115 = 0x4014000000000000;
  v116 = &unk_10054E438;
  v117 = 0;
  v118 = &unk_10054E440;
  v119 = 0;
  v83 = sub_1000E1B4C((uint64_t)&v108);
  swift_release(v28);
  swift_release(v81);
  swift_release(v82);
  v29 = a1[3];
  *(_QWORD *)&v82 = a1[4];
  v30 = sub_10000D900(a1, v29);
  __chkstk_darwin(v30);
  v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1000C53BC(v86, (uint64_t)v101);
  sub_100011370(v85, v22, &qword_10054CD28);
  v34 = v23;
  v35 = v24;
  *(_QWORD *)&v81 = v35;
  swift_bridgeObjectRetain();
  v36 = v84;
  v37 = v87;
  sub_1000F2394(v84, v87);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v32, v34, (uint64_t)v35, (uint64_t)v101, (uint64_t)v88, v25, v36, &v93, v37, v22, v29, v82);
  sub_100104E08(&v93, (uint64_t)v95);
  sub_1000F3260(&v93, &v107);
  sub_1000F329C(&v107);
  sub_100011530((uint64_t)v94, (uint64_t)v106, &qword_10054DE38);
  sub_1000117BC((uint64_t)v106);
  swift_release(v94[3]);
  swift_release(v94[5]);
  swift_release(v94[7]);
  *(_QWORD *)&v82 = sub_1000E1C90((uint64_t)v95);
  sub_1000F32D4((uint64_t)v95);
  v38 = a1[3];
  v78 = a1[4];
  v39 = sub_10000D900(a1, v38);
  __chkstk_darwin(v39);
  v41 = (char *)&v77 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_1000C53BC(v86, (uint64_t)v101);
  v43 = v22;
  v80 = v22;
  sub_100011370(v85, v22, &qword_10054CD28);
  v44 = v34;
  v45 = (id)v81;
  v46 = v25;
  swift_bridgeObjectRetain();
  v47 = v87;
  sub_1000F2394(v36, v87);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v41, v44, (uint64_t)v45, (uint64_t)v101, (uint64_t)v88, v46, v36, &v96, v47, v43, v38, v78);
  sub_100104E08(&v96, (uint64_t)v98);
  sub_1000F3260(&v96, &v105);
  sub_1000F329C(&v105);
  sub_100011530((uint64_t)v97, (uint64_t)v104, &qword_10054DE38);
  sub_1000117BC((uint64_t)v104);
  swift_release(v97[3]);
  swift_release(v97[5]);
  swift_release(v97[7]);
  *(_QWORD *)&v81 = sub_1000E1C90((uint64_t)v98);
  sub_1000F32D4((uint64_t)v98);
  v49 = a1[3];
  v48 = a1[4];
  v50 = sub_10000D900(a1, v49);
  __chkstk_darwin(v50);
  v52 = (char *)&v77 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v53 + 16))(v52);
  sub_1000C53BC(v86, (uint64_t)v101);
  v54 = v80;
  sub_100011370(v85, v80, &qword_10054CD28);
  v55 = v44;
  v56 = v45;
  swift_bridgeObjectRetain();
  v57 = v84;
  v58 = v87;
  sub_1000F2394(v84, v87);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v52, v55, (uint64_t)v56, (uint64_t)v101, (uint64_t)v88, v46, v57, &v99, v58, v54, v49, v48);
  sub_100104E08(&v99, (uint64_t)v101);
  sub_1000F3260(&v99, &v103);
  sub_1000F329C(&v103);
  sub_100011530((uint64_t)v100, (uint64_t)v102, &qword_10054DE38);
  sub_1000117BC((uint64_t)v102);
  swift_release(v100[3]);
  swift_release(v100[5]);
  swift_release(v100[7]);
  v59 = sub_1000E1C90((uint64_t)v101);
  sub_1000F32D4((uint64_t)v101);
  v60 = sub_10000B4C8(&qword_10054DD88);
  result = (_QWORD *)swift_allocObject(v60, 64, 7);
  v62 = result;
  result[4] = v83;
  v88 = result + 4;
  v63 = v81;
  result[5] = v82;
  result[6] = v63;
  result[7] = v59;
  v64 = _swiftEmptyArrayStorage;
  v65 = 4;
  while (1)
  {
    v66 = v62[v65];
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v64[2];
    v69 = v68 + v67;
    if (__OFADD__(v68, v67))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v64);
    if ((_DWORD)result && v69 <= v64[3] >> 1)
    {
      if (*(_QWORD *)(v66 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v68 <= v69)
        v70 = v68 + v67;
      else
        v70 = v68;
      result = sub_1000DED24(result, v70, 1, v64);
      v64 = result;
      if (*(_QWORD *)(v66 + 16))
      {
LABEL_13:
        v71 = v64[2];
        if ((v64[3] >> 1) - v71 < v67)
          goto LABEL_20;
        v72 = (uint64_t)&v64[11 * v71 + 4];
        sub_10000B4C8(&qword_10054DCA0);
        result = (_QWORD *)swift_arrayInitWithCopy(v72);
        if (v67)
        {
          v73 = v64[2];
          v74 = __OFADD__(v73, v67);
          v75 = v73 + v67;
          if (v74)
            goto LABEL_21;
          v64[2] = v75;
        }
        goto LABEL_3;
      }
    }
    if (v67)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v66);
    if (++v65 == 8)
    {
      swift_setDeallocating(v62);
      v76 = sub_10000B4C8(&qword_10054DD90);
      swift_arrayDestroy(v88, 4, v76);
      swift_deallocClassInstance(v62, 32, 7);
      return v64;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  __int128 v51[3];

  v46 = a5;
  v47 = a6;
  v42 = a3;
  v44 = a8;
  v45 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_10054CD28);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C53BC(a1, (uint64_t)v51);
  v21 = sub_10000B4C8(&qword_10054DCD8);
  v43 = String.init<A>(describing:)(v51, v21);
  v23 = v22;
  sub_1000C53BC(a1, (uint64_t)v51);
  sub_100011370(a4, (uint64_t)v50, &qword_10054CD98);
  sub_100011370(a10, (uint64_t)v20, &qword_10054CD28);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 144) & ~v24;
  v26 = (_QWORD *)swift_allocObject(&unk_1005014C0, v25 + v19, v24 | 7);
  sub_1000B47A8(v51, (uint64_t)(v26 + 2));
  v27 = v42;
  v26[7] = a2;
  v26[8] = v27;
  sub_100011530((uint64_t)v50, (uint64_t)(v26 + 9), &qword_10054CD98);
  v28 = v47;
  v26[14] = v46;
  v26[15] = v28;
  v29 = (uint64_t)v26 + v25;
  v31 = v44;
  v30 = v45;
  v26[16] = v44;
  v26[17] = v30;
  sub_100011530((uint64_t)v20, v29, &qword_10054CD28);
  v32 = a2;
  v33 = v27;
  swift_bridgeObjectRetain();
  sub_1000F2394(v31, v30);
  v34 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v38._countAndFlagsBits = v43;
  v38._object = v23;
  String.append(_:)(v38);
  result = swift_bridgeObjectRelease(v23);
  v40 = v51[0];
  *(_QWORD *)a7 = v35;
  *(_QWORD *)(a7 + 8) = v37;
  *(_OWORD *)(a7 + 16) = v40;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = 0xE000000000000000;
  *(_QWORD *)(a7 + 48) = 0;
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = sub_1000F2340;
  *(_QWORD *)(a7 + 72) = v26;
  return result;
}

_QWORD *sub_1000E7874(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *result;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD v91[8];
  _BYTE v92[136];
  uint64_t v93;
  _QWORD v94[8];
  _BYTE v95[136];
  uint64_t v96;
  _QWORD v97[8];
  _BYTE v98[136];
  uint64_t v99;
  _QWORD v100[8];
  _BYTE v101[136];
  _BYTE v102[16];
  id v103;
  _BYTE v104[16];
  id v105;
  _BYTE v106[16];
  id v107;
  _BYTE v108[16];
  id v109[2];

  v85 = a8;
  v86 = a4;
  v88 = a7;
  v89 = (_QWORD *)a5;
  v79 = a6;
  v87 = a9;
  v13 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v13);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v84 = a1[4];
  v17 = sub_10000D900(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  sub_100011370(a4, (uint64_t)v101, &qword_10054CD98);
  sub_100011370(a9, (uint64_t)v15, &qword_10054CD28);
  v21 = a2;
  v22 = a3;
  v23 = v79;
  swift_bridgeObjectRetain();
  v24 = v88;
  v25 = v85;
  sub_1000F2394(v88, v85);
  v77 = v25;
  v26 = v22;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, v21, (uint64_t)v22, (uint64_t)v101, (uint64_t)v89, v23, v24, &v90, v77, (uint64_t)v15, v16, v84);
  sub_100104E08(&v90, (uint64_t)v92);
  sub_1000F3260(&v90, v109);
  sub_1000F329C(v109);
  sub_100011530((uint64_t)v91, (uint64_t)v108, &qword_10054DE38);
  sub_1000117BC((uint64_t)v108);
  swift_release(v91[3]);
  swift_release(v91[5]);
  swift_release(v91[7]);
  v84 = sub_1000E1C90((uint64_t)v92);
  sub_1000F32D4((uint64_t)v92);
  v27 = a1[3];
  v83 = a1[4];
  v28 = sub_10000D900(a1, v27);
  __chkstk_darwin(v28);
  v30 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_100011370(v86, (uint64_t)v101, &qword_10054CD98);
  v32 = (uint64_t)v15;
  sub_100011370(v87, (uint64_t)v15, &qword_10054CD28);
  v33 = v21;
  v34 = v26;
  v35 = v23;
  swift_bridgeObjectRetain();
  v36 = v88;
  v37 = v85;
  sub_1000F2394(v88, v85);
  v78 = v37;
  v38 = v33;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v30, v33, (uint64_t)v34, (uint64_t)v101, (uint64_t)v89, v35, v36, &v93, v78, v32, v27, v83);
  sub_100104E08(&v93, (uint64_t)v95);
  sub_1000F3260(&v93, &v107);
  sub_1000F329C(&v107);
  sub_100011530((uint64_t)v94, (uint64_t)v106, &qword_10054DE38);
  sub_1000117BC((uint64_t)v106);
  swift_release(v94[3]);
  swift_release(v94[5]);
  swift_release(v94[7]);
  v83 = sub_1000E1C90((uint64_t)v95);
  sub_1000F32D4((uint64_t)v95);
  v39 = a1[3];
  v82 = a1[4];
  v40 = sub_10000D900(a1, v39);
  __chkstk_darwin(v40);
  v42 = (char *)&v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  sub_100011370(v86, (uint64_t)v101, &qword_10054CD98);
  v44 = v32;
  sub_100011370(v87, v32, &qword_10054CD28);
  v45 = v38;
  v80 = v45;
  v46 = v34;
  v81 = v46;
  v47 = v35;
  swift_bridgeObjectRetain();
  v48 = v88;
  v49 = v85;
  sub_1000F2394(v88, v85);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v42, v45, (uint64_t)v46, (uint64_t)v101, (uint64_t)v89, v47, v48, &v96, v49, v44, v39, v82);
  sub_100104E08(&v96, (uint64_t)v98);
  sub_1000F3260(&v96, &v105);
  sub_1000F329C(&v105);
  sub_100011530((uint64_t)v97, (uint64_t)v104, &qword_10054DE38);
  sub_1000117BC((uint64_t)v104);
  swift_release(v97[3]);
  swift_release(v97[5]);
  swift_release(v97[7]);
  v82 = sub_1000E1C90((uint64_t)v98);
  sub_1000F32D4((uint64_t)v98);
  v51 = a1[3];
  v50 = a1[4];
  v52 = sub_10000D900(a1, v51);
  __chkstk_darwin(v52);
  v54 = (char *)&v79 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v55 + 16))(v54);
  sub_100011370(v86, (uint64_t)v101, &qword_10054CD98);
  sub_100011370(v87, v44, &qword_10054CD28);
  v56 = v80;
  v57 = v81;
  swift_bridgeObjectRetain();
  v58 = v88;
  sub_1000F2394(v88, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v54, v56, (uint64_t)v57, (uint64_t)v101, (uint64_t)v89, v47, v58, &v99, v49, v44, v51, v50);
  sub_100104E08(&v99, (uint64_t)v101);
  sub_1000F3260(&v99, &v103);
  sub_1000F329C(&v103);
  sub_100011530((uint64_t)v100, (uint64_t)v102, &qword_10054DE38);
  sub_1000117BC((uint64_t)v102);
  swift_release(v100[3]);
  swift_release(v100[5]);
  swift_release(v100[7]);
  v59 = sub_1000E1C90((uint64_t)v101);
  sub_1000F32D4((uint64_t)v101);
  v60 = sub_10000B4C8(&qword_10054DD88);
  result = (_QWORD *)swift_allocObject(v60, 64, 7);
  v62 = result;
  result[4] = v84;
  v89 = result + 4;
  v63 = v82;
  result[5] = v83;
  result[6] = v63;
  result[7] = v59;
  v64 = _swiftEmptyArrayStorage;
  v65 = 4;
  while (1)
  {
    v66 = v62[v65];
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v64[2];
    v69 = v68 + v67;
    if (__OFADD__(v68, v67))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v64);
    if ((_DWORD)result && v69 <= v64[3] >> 1)
    {
      if (*(_QWORD *)(v66 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v68 <= v69)
        v70 = v68 + v67;
      else
        v70 = v68;
      result = sub_1000DED24(result, v70, 1, v64);
      v64 = result;
      if (*(_QWORD *)(v66 + 16))
      {
LABEL_13:
        v71 = v64[2];
        if ((v64[3] >> 1) - v71 < v67)
          goto LABEL_20;
        v72 = (uint64_t)&v64[11 * v71 + 4];
        sub_10000B4C8(&qword_10054DCA0);
        result = (_QWORD *)swift_arrayInitWithCopy(v72);
        if (v67)
        {
          v73 = v64[2];
          v74 = __OFADD__(v73, v67);
          v75 = v73 + v67;
          if (v74)
            goto LABEL_21;
          v64[2] = v75;
        }
        goto LABEL_3;
      }
    }
    if (v67)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v66);
    if (++v65 == 8)
    {
      swift_setDeallocating(v62);
      v76 = sub_10000B4C8(&qword_10054DD90);
      swift_arrayDestroy(v89, 4, v76);
      swift_deallocClassInstance(v62, 32, 7);
      return v64;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1000E7FE0(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  int64_t v100;
  char *v101;
  int64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  int64_t v132;
  uint64_t result;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  uint64_t v142;
  int64_t v143;
  int64_t v144;
  int64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  _OWORD v164[12];
  uint64_t v165;
  __int128 v166[3];
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  _OWORD v171[5];
  uint64_t v172;
  __int128 v173[3];
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  __int128 v184[3];
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  _BYTE v189[25];
  char v190;
  unint64_t (*v191)(uint64_t (**)(void));
  uint64_t v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  _OWORD v198[4];
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211[2];
  _OWORD v212[4];
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  _OWORD v217[8];
  _OWORD v218[9];

  *(_QWORD *)&v162 = a6;
  *(_QWORD *)&v163 = a5;
  v160 = a4;
  v13 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v13);
  v161 = (uint64_t)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000E1DEC(a1);
  v16 = v15;
  v17 = _swiftEmptyArrayStorage;
  if ((a2 & 1) != 0)
  {
    v152 = a7;
    v153 = a8;
    v154 = v15;
    v18 = a3[3];
    *(_QWORD *)&v158 = a3[4];
    *(_QWORD *)&v157 = a3[5];
    v19 = sub_10000D900(a3, v18);
    v20 = v160[3];
    *(_QWORD *)&v156 = v160[4];
    v21 = sub_10000D900(v160, v20);
    *(_QWORD *)&v155 = &v151;
    __chkstk_darwin(v21);
    v159 = a3;
    v23 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v25 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v24 + 16))(v23, v19, v18);
    __chkstk_darwin(v25);
    v27 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v28 + 16))(v27, v21, v20);
    v29 = v161;
    sub_100011370(v162, v161, &qword_10054CD28);
    v30 = v163;
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v23, v163, (uint64_t)v27, v29, v18, v20, v158, v157, (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v212, v156);
    v31 = *(_QWORD *)&v212[0];
    v32 = *((_QWORD *)&v212[3] + 1);
    v156 = *(_OWORD *)((char *)v212 + 8);
    v157 = *(_OWORD *)((char *)&v212[1] + 8);
    v158 = *(_OWORD *)((char *)&v212[2] + 8);
    v33 = (_OWORD *)swift_allocObject(&unk_100501A78, 80, 7);
    v34 = v212[1];
    v33[1] = v212[0];
    v33[2] = v34;
    v35 = v212[3];
    v33[3] = v212[2];
    v33[4] = v35;
    *(_OWORD *)((char *)v198 + 8) = v156;
    *(_OWORD *)((char *)&v198[1] + 8) = v157;
    *(_OWORD *)((char *)&v198[2] + 8) = v158;
    *(_QWORD *)&v198[0] = v31;
    *((_QWORD *)&v198[3] + 1) = v32;
    LOBYTE(v199) = 8;
    *((_QWORD *)&v199 + 1) = sub_1000BC4FC;
    *(_QWORD *)&v200 = v33;
    *((_QWORD *)&v200 + 1) = 0x4014000000000000;
    *(_QWORD *)&v201 = &unk_10054D018;
    *((_QWORD *)&v201 + 1) = 0;
    *(_QWORD *)&v202 = &unk_10054D020;
    *((_QWORD *)&v202 + 1) = 0;
    v218[2] = v198[2];
    v218[3] = v198[3];
    v218[0] = v198[0];
    v218[1] = v198[1];
    v218[4] = v199;
    v218[5] = v200;
    v218[6] = v201;
    v218[7] = v202;
    swift_retain(v30);
    swift_retain(v156);
    swift_retain(v157);
    swift_retain(v158);
    swift_retain(v32);
    *(_QWORD *)&v158 = sub_1000E1F30((uint64_t)v218);
    sub_1000F56AC(v198, (void (*)(uint64_t))&_swift_release);
    v36 = v159;
    v37 = v159[3];
    v38 = v159[4];
    v39 = v159[5];
    v40 = sub_10000D900(v159, v37);
    __chkstk_darwin(v40);
    v42 = (char *)&v151 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    v44 = v161;
    sub_100011370(v162, v161, &qword_10054CD28);
    v45 = (uint64_t)v42;
    v46 = v163;
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v45, v163, v44, v37, v38, v39, (uint64_t (**)())&v213);
    v203 = v213;
    v204 = v214;
    v205 = v215;
    v206 = v216;
    LOBYTE(v207) = 40;
    *((_QWORD *)&v207 + 1) = sub_1000C62F8;
    *(_QWORD *)&v208 = 0;
    *((_QWORD *)&v208 + 1) = 0x4014000000000000;
    *(_QWORD *)&v209 = &unk_10054D260;
    *((_QWORD *)&v209 + 1) = 0;
    *(_QWORD *)&v210 = &unk_10054D268;
    *((_QWORD *)&v210 + 1) = 0;
    v217[4] = v207;
    v217[5] = v208;
    v217[6] = v209;
    v217[7] = v210;
    v217[0] = v213;
    v217[1] = v214;
    v217[2] = v215;
    v217[3] = v216;
    swift_retain(v46);
    *(_QWORD *)&v157 = sub_1000E2074((uint64_t)v217);
    sub_1000F56AC(&v203, (void (*)(uint64_t))&_swift_release);
    v47 = v36[3];
    *(_QWORD *)&v156 = v36[4];
    *(_QWORD *)&v155 = v36[5];
    v48 = sub_10000D900(v36, v47);
    v50 = v160[3];
    v49 = v160[4];
    v51 = sub_10000D900(v160, v50);
    __chkstk_darwin(v51);
    v53 = (char *)&v151 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v54 + 16))(v53, v48, v47);
    __chkstk_darwin(v55);
    v57 = (char *)&v151 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v58 + 16))(v57, v51, v50);
    v59 = v161;
    sub_100011370(v162, v161, &qword_10054CD28);
    v60 = (uint64_t (*)())v163;
    swift_retain(v163);
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v53, (uint64_t)v57, v60, v59, v47, v50, v156, v155, (uint64_t (**)())v173, v49);
    sub_1000C117C((uint64_t)v173, (uint64_t)v166);
    v61 = 4;
    v62 = swift_allocObject(&unk_100501AA0, 32, 7);
    *(_QWORD *)(v62 + 16) = &unk_10054D080;
    *(_QWORD *)(v62 + 24) = 0;
    v190 = 39;
    v187 = v169;
    v188 = v170;
    *(_OWORD *)v189 = v171[0];
    *(_OWORD *)&v189[9] = *(_OWORD *)((char *)v171 + 9);
    v184[2] = v166[2];
    v185 = v167;
    v186 = v168;
    v184[0] = v166[0];
    v184[1] = v166[1];
    v191 = sub_1000BE1B4;
    v192 = 0;
    v193 = 0x403E000000000000;
    v194 = &unk_10054D098;
    v195 = v62;
    v196 = &unk_10054D088;
    v197 = 0;
    sub_1000C1FF8(v173);
    v63 = sub_10000B4C8(&qword_10054DC98);
    v64 = swift_allocObject(v63, 120, 7);
    *(_OWORD *)(v64 + 16) = xmmword_100424BB0;
    LOBYTE(v57) = v190;
    sub_100011370((uint64_t)v184, (uint64_t)v173, &qword_10054D130);
    v65 = swift_allocObject(&unk_100501AC8, 216, 7);
    v66 = v182;
    *(_OWORD *)(v65 + 176) = v181;
    *(_OWORD *)(v65 + 192) = v66;
    *(_QWORD *)(v65 + 208) = v183;
    v67 = v178;
    *(_OWORD *)(v65 + 112) = v177;
    *(_OWORD *)(v65 + 128) = v67;
    v68 = v180;
    *(_OWORD *)(v65 + 144) = v179;
    *(_OWORD *)(v65 + 160) = v68;
    v69 = v174;
    *(_OWORD *)(v65 + 48) = v173[2];
    *(_OWORD *)(v65 + 64) = v69;
    v70 = v176;
    *(_OWORD *)(v65 + 80) = v175;
    *(_OWORD *)(v65 + 96) = v70;
    v71 = v173[1];
    *(_OWORD *)(v65 + 16) = v173[0];
    *(_OWORD *)(v65 + 32) = v71;
    sub_100011370((uint64_t)v184, (uint64_t)v166, &qword_10054D130);
    v72 = swift_allocObject(&unk_100501AF0, 216, 7);
    v73 = v171[4];
    *(_OWORD *)(v72 + 176) = v171[3];
    *(_OWORD *)(v72 + 192) = v73;
    *(_QWORD *)(v72 + 208) = v172;
    v74 = v171[0];
    *(_OWORD *)(v72 + 112) = v170;
    *(_OWORD *)(v72 + 128) = v74;
    v75 = v171[2];
    *(_OWORD *)(v72 + 144) = v171[1];
    *(_OWORD *)(v72 + 160) = v75;
    v76 = v167;
    *(_OWORD *)(v72 + 48) = v166[2];
    *(_OWORD *)(v72 + 64) = v76;
    v77 = v169;
    *(_OWORD *)(v72 + 80) = v168;
    *(_OWORD *)(v72 + 96) = v77;
    v78 = v166[1];
    *(_OWORD *)(v72 + 16) = v166[0];
    *(_OWORD *)(v72 + 32) = v78;
    sub_100011370((uint64_t)v184, (uint64_t)v164, &qword_10054D130);
    v79 = swift_allocObject(&unk_100501B18, 216, 7);
    v80 = v164[11];
    *(_OWORD *)(v79 + 176) = v164[10];
    *(_OWORD *)(v79 + 192) = v80;
    *(_QWORD *)(v79 + 208) = v165;
    v81 = v164[7];
    *(_OWORD *)(v79 + 112) = v164[6];
    *(_OWORD *)(v79 + 128) = v81;
    v82 = v164[9];
    *(_OWORD *)(v79 + 144) = v164[8];
    *(_OWORD *)(v79 + 160) = v82;
    v83 = v164[3];
    *(_OWORD *)(v79 + 48) = v164[2];
    *(_OWORD *)(v79 + 64) = v83;
    v84 = v164[5];
    *(_OWORD *)(v79 + 80) = v164[4];
    *(_OWORD *)(v79 + 96) = v84;
    v85 = v164[1];
    *(_OWORD *)(v79 + 16) = v164[0];
    *(_OWORD *)(v79 + 32) = v85;
    *(_BYTE *)(v64 + 32) = (_BYTE)v57;
    *(_QWORD *)(v64 + 40) = sub_1000F3BD8;
    *(_QWORD *)(v64 + 48) = v65;
    *(_QWORD *)(v64 + 56) = sub_1000F3C9C;
    *(_QWORD *)(v64 + 64) = v72;
    *(_QWORD *)(v64 + 72) = &unk_10054DE80;
    *(_QWORD *)(v64 + 80) = v79;
    *(_BYTE *)(v64 + 112) = 0;
    sub_100011694((uint64_t)v184, &qword_10054D130);
    v86 = v159[3];
    v87 = v159[4];
    v88 = v159[5];
    v89 = sub_10000D900(v159, v86);
    __chkstk_darwin(v89);
    v91 = (char *)&v151 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v92 + 16))(v91);
    sub_1000C53BC((uint64_t)v160, (uint64_t)v184);
    v93 = v59;
    sub_100011370(v162, v59, &qword_10054CD28);
    v94 = v163;
    swift_retain(v163);
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v91, v94, v184, v93, v86, v87, v88, (unint64_t (**)())v164);
    v95 = *((_QWORD *)&v164[2] + 1);
    v155 = *(_OWORD *)((char *)&v164[1] + 8);
    v156 = *(_OWORD *)((char *)v164 + 8);
    *(__int128 *)((char *)v184 + 8) = *(_OWORD *)((char *)v164 + 8);
    *(__int128 *)((char *)&v184[1] + 8) = *(_OWORD *)((char *)&v164[1] + 8);
    *(_QWORD *)&v184[0] = *(_QWORD *)&v164[0];
    *((_QWORD *)&v184[2] + 1) = *((_QWORD *)&v164[2] + 1);
    LOBYTE(v185) = 9;
    *((_QWORD *)&v185 + 1) = sub_1000B0910;
    *(_QWORD *)&v186 = 0;
    *((_QWORD *)&v186 + 1) = 0x4014000000000000;
    *(_QWORD *)&v187 = &unk_10054D170;
    *((_QWORD *)&v187 + 1) = 0;
    *(_QWORD *)&v188 = &unk_10054D178;
    *((_QWORD *)&v188 + 1) = 0;
    v96 = sub_1000E21B8((uint64_t)v184);
    swift_release(v95);
    swift_release(v155);
    swift_release(v156);
    v97 = sub_10000B4C8(&qword_10054DD88);
    v98 = (_QWORD *)swift_allocObject(v97, 64, 7);
    v98[4] = v158;
    *(_QWORD *)&v156 = v98 + 4;
    v98[5] = v157;
    v98[6] = v64;
    v98[7] = v96;
    v17 = _swiftEmptyArrayStorage;
    v99 = 88;
    v100 = (int64_t)&qword_10054DCA0;
    while (1)
    {
      v101 = (char *)v98[v61];
      v102 = *((_QWORD *)v101 + 2);
      v103 = (_QWORD *)v17[2];
      v104 = (_QWORD *)((char *)v103 + v102);
      if (__OFADD__(v103, v102))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v17);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && (uint64_t)v104 <= v17[3] >> 1)
      {
        if (*((_QWORD *)v101 + 2))
          goto LABEL_14;
      }
      else
      {
        if ((uint64_t)v103 <= (uint64_t)v104)
          v106 = (int64_t)v103 + v102;
        else
          v106 = (int64_t)v103;
        v17 = sub_1000DED24(isUniquelyReferenced_nonNull_native, v106, 1, v17);
        if (*((_QWORD *)v101 + 2))
        {
LABEL_14:
          v107 = v17[2];
          if ((v17[3] >> 1) - v107 < v102)
            goto LABEL_40;
          v103 = &v17[11 * v107 + 4];
          v104 = v101 + 32;
          sub_10000B4C8(&qword_10054DCA0);
          swift_arrayInitWithCopy(v103);
          if (v102)
          {
            v108 = v17[2];
            v109 = __OFADD__(v108, v102);
            v110 = v108 + v102;
            if (v109)
              goto LABEL_41;
            v17[2] = v110;
          }
          goto LABEL_4;
        }
      }
      if (v102)
        goto LABEL_39;
LABEL_4:
      swift_bridgeObjectRelease(v101);
      if (++v61 == 8)
      {
        swift_setDeallocating(v98);
        v111 = sub_10000B4C8(&qword_10054DD90);
        swift_arrayDestroy(v156, 4, v111);
        swift_deallocClassInstance(v98, 32, 7);
        a8 = v153;
        v16 = v154;
        a7 = v152;
        a3 = v159;
        break;
      }
    }
  }
  sub_1000F38C8((uint64_t)a3, (uint64_t)v173);
  v112 = sub_10000B4C8(&qword_10054DE60);
  v113 = sub_10000B4C8(&qword_10054DE68);
  if (swift_dynamicCast(v166, v173, v112, v113, 6))
  {
    sub_1000F2B0C(v166, &v203);
    sub_100011370(a7, (uint64_t)v173, &qword_10054DCC8);
    if (*((_QWORD *)&v173[1] + 1))
    {
      sub_1000B47A8(v173, (uint64_t)v198);
      v114 = *((_QWORD *)&v204 + 1);
      *(_QWORD *)&v158 = *((_QWORD *)&v205 + 1);
      v159 = (_QWORD *)v205;
      v115 = sub_10000D900(&v203, *((uint64_t *)&v204 + 1));
      v116 = *((_QWORD *)&v198[1] + 1);
      *(_QWORD *)&v156 = *(_QWORD *)&v198[2];
      v117 = sub_10000D900(v198, *((uint64_t *)&v198[1] + 1));
      *(_QWORD *)&v157 = &v151;
      __chkstk_darwin(v117);
      v119 = (char *)&v151 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
      v121 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v120 + 16))(v119, v115, v114);
      __chkstk_darwin(v121);
      v123 = (char *)&v151 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v124 + 16))(v123, v117, v116);
      sub_1000C53BC((uint64_t)v160, (uint64_t)v211);
      sub_100011370(a8, (uint64_t)v173, &qword_10054CD90);
      v125 = v161;
      sub_100011370(v162, v161, &qword_10054CD28);
      v126 = v163;
      swift_retain(v163);
      sub_1000BA87C(v119, v126, (uint64_t)v123, v211, (uint64_t)v173, v125, v114, v116, (unint64_t (**)())v166, (uint64_t)v159, v158, v156);
      v127 = *(_QWORD *)&v166[0];
      v128 = *((_QWORD *)&v166[2] + 1);
      swift_release(v126);
      v162 = *(__int128 *)((char *)&v166[1] + 8);
      v163 = *(__int128 *)((char *)v166 + 8);
      *(__int128 *)((char *)v173 + 8) = *(__int128 *)((char *)v166 + 8);
      *(__int128 *)((char *)&v173[1] + 8) = *(__int128 *)((char *)&v166[1] + 8);
      *(_QWORD *)&v173[0] = v127;
      *((_QWORD *)&v173[2] + 1) = v128;
      LOBYTE(v174) = 2;
      *((_QWORD *)&v174 + 1) = sub_1000B0910;
      *(_QWORD *)&v175 = 0;
      *((_QWORD *)&v175 + 1) = 0x4014000000000000;
      *(_QWORD *)&v176 = &unk_10054CE58;
      *((_QWORD *)&v176 + 1) = 0;
      *(_QWORD *)&v177 = &unk_10054CE60;
      *((_QWORD *)&v177 + 1) = 0;
      v129 = (_QWORD *)sub_1000E22FC((uint64_t)v173);
      swift_release(v128);
      swift_release(v162);
      swift_release(v163);
      *(_QWORD *)&v211[0] = _swiftEmptyArrayStorage;
      sub_10012AF38(v129);
      v130 = *(_QWORD **)&v211[0];
      sub_100011758(v198);
      sub_100011758(&v203);
      goto LABEL_25;
    }
    sub_100011694((uint64_t)v173, &qword_10054DCC8);
    sub_100011758(&v203);
  }
  else
  {
    memset(v166, 0, sizeof(v166));
    sub_100011694((uint64_t)v166, &qword_10054DE70);
  }
  v130 = _swiftEmptyArrayStorage;
LABEL_25:
  v131 = sub_10000B4C8(&qword_10054DD88);
  v103 = (_QWORD *)swift_allocObject(v131, 56, 7);
  v103[4] = v16;
  v104 = v103 + 4;
  v103[5] = v17;
  v103[6] = v130;
  v132 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_1000DED24(0, v132, 1, _swiftEmptyArrayStorage);
  v99 = result;
  if (*(_QWORD *)(v16 + 16))
  {
    v134 = *(_QWORD *)(result + 16);
    if ((*(_QWORD *)(result + 24) >> 1) - v134 < v132)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v135 = result + 88 * v134 + 32;
    sub_10000B4C8(&qword_10054DCA0);
    result = swift_arrayInitWithCopy(v135);
    if (v132)
    {
      v136 = *(_QWORD *)(v99 + 16);
      v109 = __OFADD__(v136, v132);
      v137 = v136 + v132;
      if (v109)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      *(_QWORD *)(v99 + 16) = v137;
    }
  }
  else if (v132)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease(v16);
  v102 = v17[2];
  v100 = *(_QWORD *)(v99 + 16);
  v101 = (char *)(v100 + v102);
  if (__OFADD__(v100, v102))
    goto LABEL_42;
  v138 = *(_QWORD *)(v99 + 24);
  result = swift_bridgeObjectRetain();
  if ((uint64_t)v101 > (uint64_t)(v138 >> 1))
  {
LABEL_43:
    if (v100 <= (uint64_t)v101)
      v141 = (int64_t)v101;
    else
      v141 = v100;
    result = (uint64_t)sub_1000DED24((_QWORD *)1, v141, 1, (_QWORD *)v99);
    v99 = result;
    v100 = *(_QWORD *)(result + 16);
    if (v17[2])
      goto LABEL_34;
    goto LABEL_47;
  }
  if (!v102)
  {
LABEL_47:
    if (!v102)
      goto LABEL_48;
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v100 < v102)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  sub_10000B4C8(&qword_10054DCA0);
  result = swift_arrayInitWithCopy(v99 + 88 * v100 + 32);
  if (v102)
  {
    v139 = *(_QWORD *)(v99 + 16);
    v109 = __OFADD__(v139, v102);
    v140 = v139 + v102;
    if (v109)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    *(_QWORD *)(v99 + 16) = v140;
  }
LABEL_48:
  swift_bridgeObjectRelease(v17);
  v142 = v103[6];
  v143 = *(_QWORD *)(v142 + 16);
  v144 = *(_QWORD *)(v99 + 16);
  v145 = v144 + v143;
  if (__OFADD__(v144, v143))
  {
    __break(1u);
  }
  else
  {
    v146 = *(_QWORD *)(v99 + 24);
    result = swift_bridgeObjectRetain();
    if (v145 <= (uint64_t)(v146 >> 1))
    {
      if (v143)
        goto LABEL_51;
      goto LABEL_60;
    }
  }
  if (v144 <= v145)
    v149 = v144 + v143;
  else
    v149 = v144;
  result = (uint64_t)sub_1000DED24((_QWORD *)1, v149, 1, (_QWORD *)v99);
  v99 = result;
  v144 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v142 + 16))
  {
LABEL_60:
    if (!v143)
      goto LABEL_61;
    goto LABEL_64;
  }
LABEL_51:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v144 < v143)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  sub_10000B4C8(&qword_10054DCA0);
  result = swift_arrayInitWithCopy(v99 + 88 * v144 + 32);
  if (!v143)
  {
LABEL_61:
    swift_bridgeObjectRelease(v142);
    swift_setDeallocating(v103);
    v150 = sub_10000B4C8(&qword_10054DD90);
    swift_arrayDestroy(v104, 3, v150);
    swift_deallocClassInstance(v103, 32, 7);
    return v99;
  }
  v147 = *(_QWORD *)(v99 + 16);
  v109 = __OFADD__(v147, v143);
  v148 = v147 + v143;
  if (!v109)
  {
    *(_QWORD *)(v99 + 16) = v148;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

_QWORD *sub_1000E8FF4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *result;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t (*v80)();
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t (*v84)();
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t (*v88)();
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t (*v92)();
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t (*v96)();
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  char v100;
  uint64_t (*v101)(uint64_t (**)(void));
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t (*v108)();
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  char v112;
  uint64_t (*v113)(uint64_t (**)(void));
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t (*v120)();
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  char v124;
  uint64_t (*v125)(uint64_t (**)(void));
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t (*v132)();
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  char v136;
  uint64_t (*v137)(uint64_t (**)(void));
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;

  v73 = a7;
  *(_QWORD *)&v74 = a8;
  v75 = a6;
  *(_QWORD *)&v76 = a5;
  v77 = a3;
  *(_QWORD *)&v79 = a2;
  v13 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  v18 = sub_10000D900(a1, v16);
  __chkstk_darwin(v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  sub_1000C53BC(a3, (uint64_t)&v120);
  v22 = a4;
  sub_100011370(a4, (uint64_t)&v108, &qword_10054CD98);
  sub_100011370(a5, (uint64_t)&v132, &qword_10054CD90);
  sub_100011370(a6, (uint64_t)v15, &qword_10054CD28);
  v23 = v79;
  v24 = v73;
  v25 = v74;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v20, v79, (__int128 *)&v120, (uint64_t)&v108, (uint64_t)&v132, (uint64_t)v15, v73, v74, &v80, v16, v17);
  v26 = v83;
  v72 = v81;
  v133 = v81;
  v71 = v82;
  v134 = v82;
  v132 = v80;
  v135 = v83;
  v136 = 10;
  v137 = sub_1000FC29C;
  v138 = 0;
  v139 = 0x4014000000000000;
  v140 = &unk_10054EA98;
  v141 = 0;
  v142 = &unk_10054EAA0;
  v143 = 0;
  swift_retain(v23);
  sub_1000DB0D8(v24, v25);
  v78 = sub_1000E2440((uint64_t)&v132);
  swift_release(v26);
  swift_release(v71);
  swift_release(v72);
  v27 = a1[3];
  v28 = a1[4];
  v29 = sub_10000D900(a1, v27);
  __chkstk_darwin(v29);
  v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v32 + 16))(v31);
  sub_1000C53BC(v77, (uint64_t)&v108);
  sub_100011370(v22, (uint64_t)&v96, &qword_10054CD98);
  sub_100011370(v76, (uint64_t)&v120, &qword_10054CD90);
  v33 = v75;
  sub_100011370(v75, (uint64_t)v15, &qword_10054CD28);
  v34 = (uint64_t)v31;
  v35 = v79;
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v34, v79, (__int128 *)&v108, (uint64_t)&v96, (uint64_t)&v120, (uint64_t)v15, v24, v25, &v84, v27, v28);
  v36 = v87;
  v76 = v85;
  v121 = v85;
  v72 = v86;
  v122 = v86;
  v120 = v84;
  v123 = v87;
  v124 = 55;
  v125 = sub_1000FC29C;
  v126 = 0;
  v127 = 0x4014000000000000;
  v128 = &unk_10054EAC8;
  v129 = 0;
  v130 = &unk_10054EAD0;
  v131 = 0;
  swift_retain(v35);
  sub_1000DB0D8(v24, v25);
  v77 = sub_1000E2584((uint64_t)&v120);
  swift_release(v36);
  swift_release(v72);
  swift_release(v76);
  v37 = a1[3];
  v38 = a1[4];
  v39 = sub_10000D900(a1, v37);
  __chkstk_darwin(v39);
  v41 = (char *)&v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_100011370(v22, (uint64_t)&v108, &qword_10054CD98);
  v43 = v33;
  sub_100011370(v33, (uint64_t)v15, &qword_10054CD28);
  v44 = v79;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v41, v79, (uint64_t)&v108, (uint64_t)v15, v37, v38, &v88);
  v45 = v91;
  v76 = v89;
  v109 = v89;
  v74 = v90;
  v110 = v90;
  v112 = 54;
  v108 = v88;
  v111 = v91;
  v113 = sub_1000B0910;
  v114 = 0;
  v115 = 0x4014000000000000;
  v116 = &unk_10054EAF8;
  v117 = 0;
  v118 = &unk_10054EB00;
  v119 = 0;
  swift_retain(v44);
  v46 = sub_1000E26C8((uint64_t)&v108);
  swift_release(v45);
  swift_release(v74);
  swift_release(v76);
  v47 = a1[3];
  v48 = a1[4];
  v49 = sub_10000D900(a1, v47);
  __chkstk_darwin(v49);
  v51 = (char *)&v71 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v52 + 16))(v51);
  sub_100011370(v22, (uint64_t)&v96, &qword_10054CD98);
  sub_100011370(v43, (uint64_t)v15, &qword_10054CD28);
  swift_retain(v44);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v51, v44, (uint64_t)v15, v47, v48, &v92);
  v53 = v95;
  v79 = v93;
  v97 = v93;
  v76 = v94;
  v98 = v94;
  v96 = v92;
  v99 = v95;
  v100 = 56;
  v101 = sub_1000FC29C;
  v102 = 0;
  v103 = 0x4014000000000000;
  v104 = &unk_10054EB28;
  v105 = 0;
  v106 = &unk_10054EB30;
  v107 = 0;
  v54 = sub_1000E280C((uint64_t)&v96);
  swift_release(v53);
  swift_release(v76);
  swift_release(v79);
  v55 = sub_10000B4C8(&qword_10054DD88);
  result = (_QWORD *)swift_allocObject(v55, 64, 7);
  v57 = result;
  result[4] = v78;
  *(_QWORD *)&v79 = result + 4;
  result[5] = v77;
  result[6] = v46;
  result[7] = v54;
  v58 = _swiftEmptyArrayStorage;
  v59 = 4;
  while (1)
  {
    v60 = v57[v59];
    v61 = *(_QWORD *)(v60 + 16);
    v62 = v58[2];
    v63 = v62 + v61;
    if (__OFADD__(v62, v61))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v58);
    if ((_DWORD)result && v63 <= v58[3] >> 1)
    {
      if (*(_QWORD *)(v60 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v62 <= v63)
        v64 = v62 + v61;
      else
        v64 = v62;
      result = sub_1000DED24(result, v64, 1, v58);
      v58 = result;
      if (*(_QWORD *)(v60 + 16))
      {
LABEL_13:
        v65 = v58[2];
        if ((v58[3] >> 1) - v65 < v61)
          goto LABEL_20;
        v66 = (uint64_t)&v58[11 * v65 + 4];
        sub_10000B4C8(&qword_10054DCA0);
        result = (_QWORD *)swift_arrayInitWithCopy(v66);
        if (v61)
        {
          v67 = v58[2];
          v68 = __OFADD__(v67, v61);
          v69 = v67 + v61;
          if (v68)
            goto LABEL_21;
          v58[2] = v69;
        }
        goto LABEL_3;
      }
    }
    if (v61)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v60);
    if (++v59 == 8)
    {
      swift_setDeallocating(v57);
      v70 = sub_10000B4C8(&qword_10054DD90);
      swift_arrayDestroy(v79, 4, v70);
      swift_deallocClassInstance(v57, 32, 7);
      return v58;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];
  _BYTE v54[40];
  __int128 v55[2];
  __int128 v56[2];

  v44 = a8;
  v50 = a6;
  v49 = a5;
  v45 = a2;
  v48 = a11;
  v47 = a10;
  v52 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_10054CD28);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C53BC(a1, (uint64_t)v53);
  v22 = sub_10000B4C8(&qword_10054DCE0);
  v46 = String.init<A>(describing:)(v53, v22);
  v24 = v23;
  sub_1000C53BC(a1, (uint64_t)v56);
  sub_1000C53BC(a3, (uint64_t)v55);
  sub_100011370(a4, (uint64_t)v54, &qword_10054CD98);
  sub_1000F23A8(a7, (uint64_t)v53);
  sub_100011370(v44, (uint64_t)v21, &qword_10054CD28);
  v25 = *(unsigned __int8 *)(v19 + 80);
  v26 = (v25 + 216) & ~v25;
  v27 = (v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1005014E8, v28 + 16, v25 | 7);
  sub_1000B47A8(v56, v29 + 16);
  v30 = v45;
  *(_QWORD *)(v29 + 56) = v45;
  sub_1000B47A8(v55, v29 + 64);
  sub_100011530((uint64_t)v54, v29 + 104, &qword_10054CD98);
  sub_1000B59CC((uint64_t)v53, v29 + 144);
  sub_100011530((uint64_t)v21, v29 + v26, &qword_10054CD28);
  v31 = (uint64_t *)(v29 + v27);
  v32 = v47;
  v33 = v48;
  *v31 = v47;
  v31[1] = v33;
  v34 = (_QWORD *)(v29 + v28);
  v35 = v50;
  *v34 = v49;
  v34[1] = v35;
  swift_retain(v30);
  sub_1000DB0D8(v32, v33);
  swift_retain(v35);
  v36 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v37 = UUID.uuidString.getter(v36);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
  strcpy((char *)v53, "ActionMenu: ");
  BYTE5(v53[1]) = 0;
  HIWORD(v53[1]) = -5120;
  v40._countAndFlagsBits = v46;
  v40._object = v24;
  String.append(_:)(v40);
  result = swift_bridgeObjectRelease(v24);
  v42 = v53[0];
  v43 = v53[1];
  *(_QWORD *)a9 = v37;
  *(_QWORD *)(a9 + 8) = v39;
  *(_QWORD *)(a9 + 16) = v42;
  *(_QWORD *)(a9 + 24) = v43;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_1000F25F0;
  *(_QWORD *)(a9 + 72) = v29;
  return result;
}

_QWORD *sub_1000E9A70(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *result;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  _QWORD v98[5];
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)();
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t (*v107)();
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t (*v111)();
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t (*v115)();
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t (*v128)();
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  char v132;
  uint64_t (*v133)(uint64_t (**)(void));
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t (*v140)();
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  uint64_t (*v145)(uint64_t (**)(void));
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t (*v152)();
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  char v156;
  uint64_t (*v157)(uint64_t (**)(void));
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t (*v164)();
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  char v168;
  uint64_t (*v169)(uint64_t (**)(void));
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;

  v92 = a8;
  v93 = a3;
  *(_QWORD *)&v90 = a7;
  v96 = a5;
  *(_QWORD *)&v97 = a4;
  v95 = a2;
  v15 = sub_10000B4C8(&qword_10054CD28);
  __chkstk_darwin(v15);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v20 = sub_10000D900(a1, v19);
  __chkstk_darwin(v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  sub_1000C53BC(a3, (uint64_t)&v152);
  sub_100011370(a4, (uint64_t)&v140, &qword_10054CD98);
  sub_1000F23A8(a5, (uint64_t)&v164);
  *(_QWORD *)&v91 = a6;
  v24 = v95;
  sub_100011370(a6, (uint64_t)v17, &qword_10054CD28);
  v25 = v90;
  v26 = v92;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v22, v24, (__int128 *)&v152, (uint64_t)&v140, (uint64_t)&v164, (uint64_t)v17, v90, v92, &v103, v19, v18);
  v27 = v106;
  v89 = v104;
  v165 = v104;
  v88 = v105;
  v166 = v105;
  v164 = v103;
  v167 = v106;
  v168 = 10;
  v169 = sub_1000FC29C;
  v170 = 0;
  v171 = 0x4014000000000000;
  v172 = &unk_10054EA98;
  v173 = 0;
  v174 = &unk_10054EAA0;
  v175 = 0;
  swift_retain(v24);
  sub_1000DB0D8(v25, v26);
  v94 = sub_1000E2440((uint64_t)&v164);
  swift_release(v27);
  swift_release(v88);
  swift_release(v89);
  v28 = a1[3];
  v29 = a1[4];
  v30 = sub_10000D900(a1, v28);
  __chkstk_darwin(v30);
  v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1000C53BC(v93, (uint64_t)&v140);
  sub_100011370(v97, (uint64_t)&v128, &qword_10054CD98);
  sub_1000F23A8(v96, (uint64_t)&v152);
  sub_100011370(a6, (uint64_t)v17, &qword_10054CD28);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v32, v24, (__int128 *)&v140, (uint64_t)&v128, (uint64_t)&v152, (uint64_t)v17, v25, v26, &v107, v28, v29);
  v34 = v110;
  v89 = v108;
  v153 = v108;
  v88 = v109;
  v154 = v109;
  v156 = 55;
  v152 = v107;
  v155 = v110;
  v157 = sub_1000FC29C;
  v158 = 0;
  v159 = 0x4014000000000000;
  v160 = &unk_10054EAC8;
  v161 = 0;
  v162 = &unk_10054EAD0;
  v163 = 0;
  swift_retain(v24);
  sub_1000DB0D8(v25, v26);
  v93 = sub_1000E2584((uint64_t)&v152);
  swift_release(v34);
  swift_release(v88);
  swift_release(v89);
  v35 = a1[3];
  v36 = a1[4];
  v37 = sub_10000D900(a1, v35);
  __chkstk_darwin(v37);
  v39 = (char *)&v88 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v39);
  v41 = v97;
  sub_100011370(v97, (uint64_t)&v140, &qword_10054CD98);
  v42 = v91;
  sub_100011370(v91, (uint64_t)v17, &qword_10054CD28);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v39, v24, (uint64_t)&v140, (uint64_t)v17, v35, v36, &v111);
  v43 = v114;
  v90 = v112;
  v141 = v112;
  v89 = v113;
  v142 = v113;
  v144 = 54;
  v140 = v111;
  v143 = v114;
  v145 = sub_1000B0910;
  v146 = 0;
  v147 = 0x4014000000000000;
  v148 = &unk_10054EAF8;
  v149 = 0;
  v150 = &unk_10054EB00;
  v151 = 0;
  swift_retain(v24);
  v92 = sub_1000E26C8((uint64_t)&v140);
  swift_release(v43);
  swift_release(v89);
  swift_release(v90);
  v44 = a1[3];
  v45 = a1[4];
  v46 = sub_10000D900(a1, v44);
  __chkstk_darwin(v46);
  v48 = (char *)&v88 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v49 + 16))(v48);
  sub_100011370(v41, (uint64_t)&v128, &qword_10054CD98);
  sub_100011370(v42, (uint64_t)v17, &qword_10054CD28);
  swift_retain(v24);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v48, v24, (uint64_t)v17, v44, v45, &v115);
  v50 = v118;
  v97 = v116;
  v129 = v116;
  v91 = v117;
  v130 = v117;
  v128 = v115;
  v131 = v118;
  v132 = 56;
  v133 = sub_1000FC29C;
  v134 = 0;
  v135 = 0x4014000000000000;
  v136 = &unk_10054EB28;
  v137 = 0;
  v138 = &unk_10054EB30;
  v139 = 0;
  v51 = sub_1000E280C((uint64_t)&v128);
  swift_release(v50);
  swift_release(v91);
  swift_release(v97);
  sub_1000C53BC((uint64_t)a1, (uint64_t)v98);
  v52 = sub_10000B4C8(&qword_10054DCE0);
  v53 = sub_10000B4C8(&qword_10054DD78);
  if ((swift_dynamicCast(&v119, v98, v52, v53, 6) & 1) != 0)
  {
    sub_1000F2B0C(&v119, &v99);
    v54 = v100;
    v55 = v101;
    v56 = v102;
    v57 = sub_10000D900(&v99, v100);
    __chkstk_darwin(v57);
    v59 = (char *)&v88 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v60 + 16))(v59);
    sub_1000F23A8(v96, (uint64_t)&v119);
    v61 = (_QWORD *)swift_allocObject(&unk_100501550, 56, 7);
    v61[2] = v54;
    v61[3] = v55;
    v61[4] = v56;
    v61[5] = a9;
    v61[6] = a10;
    v62 = v95;
    v63 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v59, v95, (uint64_t)sub_1000F2B48, (uint64_t)v61, (uint64_t)&v119, v54, v55, v56);
    v65 = v64;
    v67 = v66;
    *(_QWORD *)&v119 = v63;
    *((_QWORD *)&v119 + 1) = v64;
    *(_QWORD *)&v120 = v68;
    *((_QWORD *)&v120 + 1) = v66;
    LOBYTE(v121) = 38;
    *((_QWORD *)&v121 + 1) = sub_1000B0910;
    v122 = 0;
    v123 = 0x4014000000000000;
    v124 = &unk_10054EC28;
    v125 = 0;
    v126 = &unk_10054EC30;
    v127 = 0;
    swift_retain(v62);
    swift_retain(a10);
    v69 = (_QWORD *)sub_1000E2950(&v119);
    swift_release(v67);
    swift_release(v65);
    v98[0] = _swiftEmptyArrayStorage;
    sub_10012AF38(v69);
    v70 = (_QWORD *)v98[0];
    sub_100011758(&v99);
  }
  else
  {
    v120 = 0u;
    v121 = 0u;
    v119 = 0u;
    sub_100011694((uint64_t)&v119, &qword_10054DD80);
    v70 = _swiftEmptyArrayStorage;
  }
  v71 = sub_10000B4C8(&qword_10054DD88);
  result = (_QWORD *)swift_allocObject(v71, 72, 7);
  v73 = result;
  result[4] = v94;
  *(_QWORD *)&v97 = result + 4;
  v74 = v92;
  result[5] = v93;
  result[6] = v74;
  result[7] = v51;
  result[8] = v70;
  v75 = _swiftEmptyArrayStorage;
  v76 = 4;
  while (1)
  {
    v77 = v73[v76];
    v78 = *(_QWORD *)(v77 + 16);
    v79 = v75[2];
    v80 = v79 + v78;
    if (__OFADD__(v79, v78))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v75);
    if ((_DWORD)result && v80 <= v75[3] >> 1)
    {
      if (*(_QWORD *)(v77 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v79 <= v80)
        v81 = v79 + v78;
      else
        v81 = v79;
      result = sub_1000DED24(result, v81, 1, v75);
      v75 = result;
      if (*(_QWORD *)(v77 + 16))
      {
LABEL_16:
        v82 = v75[2];
        if ((v75[3] >> 1) - v82 < v78)
          goto LABEL_23;
        v83 = (uint64_t)&v75[11 * v82 + 4];
        sub_10000B4C8(&qword_10054DCA0);
        result = (_QWORD *)swift_arrayInitWithCopy(v83);
        if (v78)
        {
          v84 = v75[2];
          v85 = __OFADD__(v84, v78);
          v86 = v84 + v78;
          if (v85)
            goto LABEL_24;
          v75[2] = v86;
        }
        goto LABEL_6;
      }
    }
    if (v78)
      goto LABEL_22;
LABEL_6:
    result = (_QWORD *)swift_bridgeObjectRelease(v77);
    if (++v76 == 9)
    {
      swift_setDeallocating(v73);
      v87 = sub_10000B4C8(&qword_10054DD90);
      swift_arrayDestroy(v97, 5, v87);
      swift_deallocClassInstance(v73, 32, 7);
      return v75;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1000EA398@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Album(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Album;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100501F78, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EA808@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Artist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Artist;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502568, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EAC78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Curator(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Curator;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502590, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EB0E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EditorialItem(0);
  v94[3] = v26;
  v94[4] = sub_10001254C(&qword_10054E020, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v66, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1005025B8, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v64, v41 + v32, &qword_10054CD28);
  sub_100011530(v65, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000B47A8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EB574@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Genre(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Genre;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1005025E0, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EB9E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicMovie(0);
  v94[3] = v26;
  v94[4] = sub_10001254C(&qword_10054E028, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v66, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502608, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v64, v41 + v32, &qword_10054CD28);
  sub_100011530(v65, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000B47A8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EBE70@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicVideo(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for MusicVideo;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502630, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EC2E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Playlist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Playlist;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502658, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EC750@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RadioShow(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for RadioShow;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502680, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000ECBC0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Song(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Song;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1005026A8, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000ED030@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Station(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Station;
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v64, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1005026D0, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v65, v41 + v32, &qword_10054CD28);
  sub_100011530(v66, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000B47A8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000ED4A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVEpisode(0);
  v94[3] = v26;
  v94[4] = sub_10001254C(&qword_10054E030, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v66, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1005026F8, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v64, v41 + v32, &qword_10054CD28);
  sub_100011530(v65, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000B47A8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000ED92C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVSeason(0);
  v94[3] = v26;
  v94[4] = sub_10001254C(&qword_10054E038, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v66, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502720, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v64, v41 + v32, &qword_10054CD28);
  sub_100011530(v65, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000B47A8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EDDB8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVShow(0);
  v94[3] = v26;
  v94[4] = sub_10001254C(&qword_10054E040, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v66, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502748, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v64, v41 + v32, &qword_10054CD28);
  sub_100011530(v65, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000B47A8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EE244@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_10054DCB8);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054CD28);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UploadedVideo(0);
  v94[3] = v26;
  v94[4] = sub_10001254C(&qword_10054E048, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  v27 = sub_1000C16E0(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v89);
  v28 = sub_10000B4C8(&qword_1005528C0);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100011370(v66, (uint64_t)v93, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v94, (uint64_t)v92);
  sub_100011370(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v69, (uint64_t)v91);
  sub_1000C53BC(v70, (uint64_t)v90);
  sub_100011370(v73, (uint64_t)v89, &qword_10054CD90);
  sub_100011370(v71, (uint64_t)v88, &qword_10054DCC8);
  sub_1000C53BC(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100502770, v72 + 40, v31 | v33 | 7);
  sub_100011530((uint64_t)v93, v41 + 16, &qword_10054DCD0);
  sub_1000B47A8(v92, v41 + 56);
  sub_100011530(v64, v41 + v32, &qword_10054CD28);
  sub_100011530(v65, v41 + v34, &qword_10054DCB8);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000B47A8(v91, v41 + v36);
  sub_1000B47A8(v90, v41 + v37);
  sub_100011530((uint64_t)v89, v41 + v38, &qword_10054CD90);
  sub_100011530((uint64_t)v88, v41 + v39, &qword_10054DCC8);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000B47A8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000F2394(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_100011758(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1000F454C;
  v63[9] = v41;
  return result;
}

uint64_t sub_1000EE6D0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  __int128 v88[2];
  _BYTE v89[40];
  _QWORD v90[9];
  __int128 v91[2];
  __int128 v92[2];
  __int128 v93[2];
  _BYTE v94[40];
  _QWORD v95[6];

  v74 = a8;
  v70 = a6;
  v71 = a7;
  v69 = a5;
  v77 = a4;
  v82 = a3;
  v80 = a2;
  v87 = a9;
  v83 = a15;
  v79 = a14;
  v78 = a13;
  v72 = a12;
  v81 = a16;
  v68 = a17;
  v73 = a10;
  v65 = a11;
  v20 = type metadata accessor for UUID(0);
  v85 = *(_QWORD *)(v20 - 8);
  v86 = v20;
  __chkstk_darwin(v20);
  v84 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000B4C8(&qword_10054DCB8);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v67 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000B4C8(&qword_10054CD28);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v66 = (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95[3] = a18;
  v95[4] = a19;
  v28 = sub_1000C16E0(v95);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v28, a1, a18);
  sub_1000C53BC((uint64_t)v95, (uint64_t)v90);
  v29 = sub_10000B4C8(&qword_1005528C0);
  v30 = String.init<A>(describing:)(v90, v29);
  v75 = v31;
  v76 = v30;
  sub_100011370(v65, (uint64_t)v94, &qword_10054DCD0);
  sub_1000C53BC((uint64_t)v95, (uint64_t)v93);
  sub_100011370(v68, (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054CD28);
  sub_100011370(v69, (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10054DCB8);
  sub_1000C53BC(v70, (uint64_t)v92);
  sub_1000C53BC(v71, (uint64_t)v91);
  sub_100011370(v74, (uint64_t)v90, &qword_10054CD90);
  sub_100011370(v72, (uint64_t)v89, &qword_10054DCC8);
  sub_1000C53BC(v73, (uint64_t)v88);
  v32 = *(unsigned __int8 *)(v26 + 80);
  v33 = (v32 + 96) & ~v32;
  v34 = *(unsigned __int8 *)(v23 + 80);
  v35 = (v27 + v34 + v33) & ~v34;
  v36 = (v24 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 79) & 0xFFFFFFFFFFFFFFF8;
  v74 = (v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v71 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject(&unk_100502798, v73 + 40, v32 | v34 | 7);
  sub_100011530((uint64_t)v94, v42 + 16, &qword_10054DCD0);
  sub_1000B47A8(v93, v42 + 56);
  sub_100011530(v66, v42 + v33, &qword_10054CD28);
  sub_100011530(v67, v42 + v35, &qword_10054DCB8);
  v43 = v77;
  *(_QWORD *)(v42 + v36) = v77;
  sub_1000B47A8(v92, v42 + v37);
  sub_1000B47A8(v91, v42 + v38);
  sub_100011530((uint64_t)v90, v42 + v39, &qword_10054CD90);
  sub_100011530((uint64_t)v89, v42 + v40, &qword_10054DCC8);
  v45 = v80;
  v44 = v81;
  *(_QWORD *)(v42 + v74) = v80;
  v47 = v82;
  v46 = v83;
  *(_QWORD *)(v42 + v72) = v82;
  v48 = (_QWORD *)(v42 + v41);
  v49 = v79;
  *v48 = v78;
  v48[1] = v49;
  v50 = (uint64_t *)(v42 + v71);
  v51 = v42 + v73;
  *v50 = v46;
  v50[1] = v44;
  sub_1000B47A8(v88, v51);
  v52 = v45;
  v53 = v47;
  swift_bridgeObjectRetain();
  swift_retain(v43);
  sub_1000F2394(v46, v44);
  v54 = v84;
  v55 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v56 = UUID.uuidString.getter(v55);
  v58 = v57;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v86);
  strcpy((char *)v90, "ActionMenu: ");
  BYTE5(v90[1]) = 0;
  HIWORD(v90[1]) = -5120;
  v60 = v75;
  v59._countAndFlagsBits = v76;
  v59._object = v75;
  String.append(_:)(v59);
  swift_bridgeObjectRelease(v60);
  v61 = v90[0];
  v62 = v90[1];
  result = sub_100011758(v95);
  v64 = v87;
  *v87 = v56;
  v64[1] = v58;
  v64[2] = v61;
  v64[3] = v62;
  v64[4] = 0;
  v64[5] = 0xE000000000000000;
  v64[6] = 0;
  *((_BYTE *)v64 + 56) = 0;
  v64[8] = (uint64_t)sub_1000F454C;
  v64[9] = v42;
  return result;
}

uint64_t sub_1000EEB30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000EEBC0, 0, 0);
}

uint64_t sub_1000EEBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100502090, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DF68, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EED0C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1005518EC;
  v12 = (char *)&dword_1005518E8 + dword_1005518E8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000EED9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000EEE2C, 0, 0);
}

uint64_t sub_1000EEE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1005021D0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DF88, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EEF78(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10055190C;
  v12 = (char *)&dword_100551908 + dword_100551908;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000EF008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000EF098, 0, 0);
}

uint64_t sub_1000EF098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100502518, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054E018, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EF1E4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10055198C;
  v12 = (char *)&dword_100551988 + dword_100551988;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000EF274@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  v8 = swift_allocObject(&unk_100502478, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v6;
  v10 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v10;
  v11 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = v7;
  swift_bridgeObjectRetain(v4);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v7);
}

uint64_t sub_1000EF32C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1000EF3A8, 0, 0);
}

uint64_t sub_1000EF3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100502450, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1000F5A04((_QWORD *)(v0 + 16));
  v8 = sub_10024D8EC(v1, (uint64_t)&unk_10054DFF8, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EF46C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10055196C;
  v13 = (char *)&dword_100551968 + dword_100551968;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000F6310;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1000EF4FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  v8 = swift_allocObject(&unk_1005023B0, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v4;
  v9 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 24) = v9;
  v11 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v7;
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v5);
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_1000EF5AC(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1000EF628, 0, 0);
}

uint64_t sub_1000EF628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100502388, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1000F57D4((_QWORD *)(v0 + 16));
  v8 = sub_10024D8EC(v1, (uint64_t)&unk_10054DFD8, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EF6EC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10055194C;
  v13 = (char *)&dword_100551948 + dword_100551948;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000F6310;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1000EF77C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  v9 = swift_allocObject(&unk_100501A00, 88, 7);
  *a2 = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v11 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = v11;
  *(_OWORD *)(v9 + 64) = v12;
  *(_QWORD *)(v9 + 80) = v8;
  sub_1000F3528(v4);
  swift_bridgeObjectRetain();
  swift_retain(v11);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_1000EF838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(v1 + 152) = v4;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v8;
  return swift_task_switch(sub_1000EF8B8, 0, 0);
}

uint64_t sub_1000EF8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1005019D8, 168, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v0 + 144);
  v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  sub_1000F3494(v0 + 16);
  v8 = sub_10024D8EC(v1, (uint64_t)&unk_10054DE58, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EF984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  v9 = *(_OWORD *)(a4 + 16);
  v10 = unk_10055184C;
  v13 = (char *)&dword_100551848 + dword_100551848;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 152) = v11;
  *v11 = v4;
  v11[1] = sub_1000EFA1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1000EFA1C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000EFA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000EFAF4, 0, 0);
}

uint64_t sub_1000EFAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1005022C0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DFA8, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EFC40(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10055192C;
  v12 = (char *)&dword_100551928 + dword_100551928;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000EFCD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000EFD60, 0, 0);
}

uint64_t sub_1000EFD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100501E60, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DF10, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EFEAC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1005518AC;
  v12 = (char *)&dword_1005518A8 + dword_1005518A8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000EFF3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000EFFCC, 0, 0);
}

uint64_t sub_1000EFFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100501BB8, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DEA0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F0118(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1005516B4;
  v12 = (char *)&dword_1005516B0 + dword_1005516B0;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F01A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(char);

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (*)(char))((char *)&dword_1005516A0 + dword_1005516A0);
  v2 = (_QWORD *)swift_task_alloc(unk_1005516A4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1000F020C;
  return v4(0);
}

uint64_t sub_1000F020C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1000F0268(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1000F02E4, 0, 0);
}

uint64_t sub_1000F02E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100501CD0, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1000F41E8((_QWORD *)(v0 + 16));
  v8 = sub_10024D8EC(v1, (uint64_t)&unk_10054DED0, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F03A8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10055186C;
  v13 = (char *)&dword_100551868 + dword_100551868;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000F0438;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1000F0438()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000F0480@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;

  v7 = *a1;
  v8 = a1[7];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 80, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 72) = v8;
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  return swift_retain(v8);
}

uint64_t sub_1000F051C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1000F0598, 0, 0);
}

uint64_t sub_1000F0598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100501D98, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1000F41E8((_QWORD *)(v0 + 16));
  v8 = sub_10024D8EC(v1, (uint64_t)&unk_10054DEF0, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F065C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10055188C;
  v13 = (char *)&dword_100551888 + dword_100551888;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000F6310;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1000F06EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000F077C, 0, 0);
}

uint64_t sub_1000F077C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100501F28, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DF30, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F08C8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1005518CC;
  v12 = (char *)&dword_1005518C8 + dword_1005518C8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F0958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000F09E8, 0, 0);
}

uint64_t sub_1000F09E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1005016B8, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DDD0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F0B34(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1005517CC;
  v12 = (char *)&dword_1005517C8 + dword_1005517C8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F0BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000F0C54, 0, 0);
}

uint64_t sub_1000F0C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100501780, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DDF0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F0DA0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1005517EC;
  v12 = (char *)&dword_1005517E8 + dword_1005517E8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F0E30;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F0E30()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000F0E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000F0F08, 0, 0);
}

uint64_t sub_1000F0F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100501848, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DE10, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F1054(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10055180C;
  v12 = (char *)&dword_100551808 + dword_100551808;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F10E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;

  v7 = *a1;
  v8 = a1[5];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 64, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 56) = v8;
  swift_retain(v10);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_1000F1168(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 48);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_1000F11C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000F1250, 0, 0);
}

uint64_t sub_1000F1250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100501910, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DE30, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F139C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10055182C;
  v12 = (char *)&dword_100551828 + dword_100551828;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000F630C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F142C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  v6 = swift_allocObject(&unk_100501618, 48, 7);
  *a2 = v6;
  *(_QWORD *)(v6 + 16) = v4;
  v7 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  swift_retain(v7);
  return swift_retain(v5);
}

uint64_t sub_1000F14A4(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[2];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 32);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_1000F14F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_10000B4C8((uint64_t *)&unk_100552B60);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_BYTE *)(v1 + 112) = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  return swift_task_switch(sub_1000F157C, 0, 0);
}

uint64_t sub_1000F157C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1005015F0, 128, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_QWORD *)(v11 + 56) = v7;
  *(_BYTE *)(v11 + 64) = v6;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v4;
  *(_QWORD *)(v11 + 88) = v3;
  *(_QWORD *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 120) = v1;
  swift_retain(v14);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v15);
  swift_retain(v1);
  v12 = sub_10024D8EC(v8, (uint64_t)&unk_10054DDB0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F16AC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  v8 = a4[1];
  v9 = unk_1005517AC;
  v12 = (char *)&dword_1005517A8 + dword_1005517A8;
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 112) = v10;
  *v10 = v4;
  v10[1] = sub_1000F1734;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1000F1734()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000F177C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70[3];
  _QWORD v71[9];
  __int128 v72[2];
  uint64_t (*v73)();
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _DWORD v77[3];

  v67 = a7;
  v68 = a5;
  v60 = a6;
  *(_QWORD *)&v66 = a4;
  v12 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_10054CD28);
  v57 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v58 = v17;
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  *(_QWORD *)&v65 = a1[4];
  v20 = a1[5];
  v21 = sub_10000D900(a1, v19);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v59 = a3;
  sub_1000C53BC(a3, (uint64_t)v70);
  sub_100011370(v66, (uint64_t)v72, &qword_10054CD98);
  sub_100011370(v68, (uint64_t)v71, &qword_10054CD90);
  sub_100011370(v67, (uint64_t)v18, &qword_10054CD28);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v23, a2, v70, (uint64_t)v72, (uint64_t)v71, 0, 0, (uint64_t)v18, &v73, v19, v65, v20);
  v65 = v74;
  v66 = v75;
  v55 = v73;
  v25 = v76;
  sub_1000F38C8((uint64_t)a1, (uint64_t)v71);
  v61 = a2;
  v26 = a2;
  v27 = v56;
  swift_retain(v26);
  v28 = sub_10000B4C8(&qword_10054DE60);
  if ((swift_dynamicCast(v27, v71, v28, v14, 6) & 1) != 0)
  {
    v29 = v73;
    v30 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v27, v14);
    v31 = ((uint64_t (*)(uint64_t))v29)(v30);
    v33 = v32 != 1;
    sub_1000B5000(v31, v32);
  }
  else
  {
    v33 = 1;
  }
  sub_1000F38C8((uint64_t)a1, (uint64_t)v71);
  v56 = (char *)String.init<A>(describing:)(v71, v28);
  v35 = v34;
  sub_1000F38C8((uint64_t)a1, (uint64_t)v70);
  sub_1000C53BC(v59, (uint64_t)v72);
  sub_100011370(v67, (uint64_t)v18, &qword_10054CD28);
  sub_100011370(v60, (uint64_t)v69, &qword_10054DCC8);
  sub_100011370(v68, (uint64_t)v71, &qword_10054CD90);
  v36 = *(unsigned __int8 *)(v57 + 80);
  v37 = (v36 + 232) & ~v36;
  v38 = (v58 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_100501A50, v39 + 72, v36 | 7);
  *(_QWORD *)(v40 + 16) = v55;
  *(_OWORD *)(v40 + 24) = v65;
  *(_OWORD *)(v40 + 40) = v66;
  *(_QWORD *)(v40 + 56) = v25;
  *(_BYTE *)(v40 + 64) = 0;
  *(_DWORD *)(v40 + 65) = v77[0];
  *(_DWORD *)(v40 + 68) = *(_DWORD *)((char *)v77 + 3);
  *(_QWORD *)(v40 + 72) = sub_1000B0910;
  *(_QWORD *)(v40 + 80) = 0;
  *(_QWORD *)(v40 + 88) = 0x4014000000000000;
  *(_QWORD *)(v40 + 96) = &unk_10054CD78;
  *(_QWORD *)(v40 + 104) = 0;
  *(_QWORD *)(v40 + 112) = &unk_10054CD80;
  *(_QWORD *)(v40 + 120) = 0;
  *(_BYTE *)(v40 + 128) = v33;
  sub_1000F2B0C(v70, (_OWORD *)(v40 + 136));
  sub_1000B47A8(v72, v40 + 184);
  v41 = v61;
  *(_QWORD *)(v40 + 224) = v61;
  sub_100011530((uint64_t)v18, v40 + v37, &qword_10054CD28);
  sub_100011530((uint64_t)v69, v40 + v38, &qword_10054DCC8);
  sub_100011530((uint64_t)v71, v40 + v39, &qword_10054CD90);
  swift_retain(v41);
  v42 = v65;
  swift_retain(v65);
  v43 = v66;
  swift_retain(v66);
  swift_retain(v25);
  v44 = v62;
  v45 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v46 = UUID.uuidString.getter(v45);
  v48 = v47;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
  strcpy((char *)v71, "ActionMenu: ");
  BYTE5(v71[1]) = 0;
  HIWORD(v71[1]) = -5120;
  v49._countAndFlagsBits = (uint64_t)v56;
  v49._object = v35;
  String.append(_:)(v49);
  swift_release(v25);
  swift_release(v43);
  swift_release(v42);
  result = swift_bridgeObjectRelease(v35);
  v51 = v71[0];
  v52 = v71[1];
  *(_QWORD *)a8 = v46;
  *(_QWORD *)(a8 + 8) = v48;
  *(_QWORD *)(a8 + 16) = v51;
  *(_QWORD *)(a8 + 24) = v52;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_1000F3B3C;
  *(_QWORD *)(a8 + 72) = v40;
  return result;
}

uint64_t sub_1000F1C50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  void *v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  __int128 v51[3];

  v41 = a4;
  v42 = a7;
  v46 = a5;
  v47 = a6;
  v44 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_10054CD28);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C53BC(a1, (uint64_t)v51);
  v21 = sub_10000B4C8(&qword_10054DCD8);
  v45 = String.init<A>(describing:)(v51, v21);
  v43 = v22;
  sub_1000C53BC(a1, (uint64_t)v51);
  sub_100011370(a10, (uint64_t)v20, &qword_10054CD28);
  sub_1000C53BC(v41, (uint64_t)v50);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 104) & ~v23;
  v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)swift_allocObject(&unk_100502220, v25 + 40, v23 | 7);
  sub_1000B47A8(v51, (uint64_t)(v26 + 2));
  v26[7] = a2;
  v26[8] = a3;
  v27 = v47;
  v26[9] = v46;
  v26[10] = v27;
  v28 = (uint64_t)v26 + v24;
  v29 = v42;
  v30 = v44;
  v26[11] = v42;
  v26[12] = v30;
  sub_100011530((uint64_t)v20, v28, &qword_10054CD28);
  sub_1000B47A8(v50, (uint64_t)v26 + v25);
  v31 = a2;
  v32 = a3;
  swift_bridgeObjectRetain();
  sub_1000F2394(v29, v30);
  v33 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v34 = UUID.uuidString.getter(v33);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v37._countAndFlagsBits = v45;
  v38 = v43;
  v37._object = v43;
  String.append(_:)(v37);
  result = swift_bridgeObjectRelease(v38);
  v40 = v51[0];
  *(_QWORD *)a8 = v34;
  *(_QWORD *)(a8 + 8) = v36;
  *(_OWORD *)(a8 + 16) = v40;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_1000F54A4;
  *(_QWORD *)(a8 + 72) = v26;
  return result;
}

uint64_t sub_1000F1E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[9];
  _BYTE v47[40];
  __int128 v48[2];
  __int128 v49[3];

  v43 = a8;
  v42 = a7;
  v39 = a6;
  v40 = a2;
  v45 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_10054CD28);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C53BC(a1, (uint64_t)v46);
  v20 = sub_10000B4C8(&qword_10054DCE0);
  v41 = String.init<A>(describing:)(v46, v20);
  v22 = v21;
  sub_1000C53BC(a1, (uint64_t)v49);
  sub_1000C53BC(a3, (uint64_t)v48);
  sub_100011370(a4, (uint64_t)v47, &qword_10054CD98);
  sub_100011370(a5, (uint64_t)v46, &qword_10054CD90);
  sub_100011370(v39, (uint64_t)v19, &qword_10054CD28);
  v23 = *(unsigned __int8 *)(v17 + 80);
  v24 = (v23 + 216) & ~v23;
  v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_100501A28, v25 + 16, v23 | 7);
  sub_1000B47A8(v49, v26 + 16);
  v27 = v40;
  *(_QWORD *)(v26 + 56) = v40;
  sub_1000B47A8(v48, v26 + 64);
  sub_100011530((uint64_t)v47, v26 + 104, &qword_10054CD98);
  sub_100011530((uint64_t)v46, v26 + 144, &qword_10054CD90);
  sub_100011530((uint64_t)v19, v26 + v24, &qword_10054CD28);
  v28 = (uint64_t *)(v26 + v25);
  v29 = v42;
  v30 = v43;
  *v28 = v42;
  v28[1] = v30;
  swift_retain(v27);
  sub_1000DB0D8(v29, v30);
  v31 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
  strcpy((char *)v46, "ActionMenu: ");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  v35._countAndFlagsBits = v41;
  v35._object = v22;
  String.append(_:)(v35);
  result = swift_bridgeObjectRelease(v22);
  v37 = v46[0];
  v38 = v46[1];
  *(_QWORD *)a9 = v32;
  *(_QWORD *)(a9 + 8) = v34;
  *(_QWORD *)(a9 + 16) = v37;
  *(_QWORD *)(a9 + 24) = v38;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_1000F386C;
  *(_QWORD *)(a9 + 72) = v26;
  return result;
}

uint64_t sub_1000F2178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  sub_100011758((_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 96))
    sub_100011758((_QWORD *)(v0 + 72));
  v4 = (v2 + 144) & ~v2;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  v5 = *(_QWORD *)(v0 + 136);
  if (v5 >> 60 != 15)
    sub_10003A628(*(_QWORD *)(v0 + 128), v5);
  v6 = v0 + v4;
  v7 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v4, 1, v7))
  {
    v8 = *(_QWORD *)(v6 + 8);
    if (v8 >= 0xA)
      swift_bridgeObjectRelease(v8);
    v9 = v6 + v7[5];
    v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v11 = v9 + v10[6];
      v12 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v12);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  }
  return swift_deallocObject(v0, v4 + v3, v2 | 7);
}

_QWORD *sub_1000F2340()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8) + 80);
  return sub_1000E7874((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v0 + ((v1 + 144) & ~v1));
}

uint64_t sub_1000F2394(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10003A5E4(result, a2);
  return result;
}

uint64_t sub_1000F23A8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PresentationSource(a2, a1);
  return a2;
}

uint64_t sub_1000F23E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100011758((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  sub_100011758((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    sub_100011758((_QWORD *)(v0 + 104));
  v5 = v4 + v3;
  swift_unknownObjectWeakDestroy(v0 + 144);
  v6 = *(unsigned __int8 *)(v0 + 192);
  if (v6 != 255)
    sub_1000B4784(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
  v7 = v5 + 7;
  if (*(_QWORD *)(v0 + 200))
    swift_release(*(_QWORD *)(v0 + 208));
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v14 = v12 + v13[6];
      v15 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
  }
  if (*(_QWORD *)(v0 + v8))
    swift_release(*(_QWORD *)(v0 + v8 + 8));
  v17 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = v17 + 16;
  swift_release(*(_QWORD *)(v0 + v17 + 8));
  return swift_deallocObject(v0, v18, v2 | 7);
}

_QWORD *sub_1000F25F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000E9A70((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F297C);
}

uint64_t sub_1000F297C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F29FC);
}

uint64_t sub_1000F29FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Playlist(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1000F2A78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

_OWORD *sub_1000F2B0C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1000F2B24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000F2B48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v4 = v1[4];
  v5 = (uint64_t (*)(_QWORD *))v1[5];
  v10 = v1[2];
  v3 = v10;
  v11 = v4;
  v6 = sub_1000C16E0(v9);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, a1, v3);
  v7 = v5(v9);
  sub_100011758(v9);
  return v7;
}

uint64_t sub_1000F2BC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F142C((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1000F2BD0()
{
  uint64_t v0;

  return sub_1000F14A4(v0 + 16);
}

uint64_t sub_1000F2BDC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[8]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1000F2C20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DD9C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DD98 + dword_10054DD98))(v0 + 16);
}

_QWORD *sub_1000F2C78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[9];
  v5 = a1[11];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_1000F2CE0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1000F2D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DDAC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DDA8 + dword_10054DDA8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F2DAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000F2DDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, (uint64_t)&unk_1005016E0, a1);
}

uint64_t sub_1000F2E14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DDBC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DDB8 + dword_10054DDB8))(v0 + 16);
}

uint64_t sub_1000F2E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DDCC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DDC8 + dword_10054DDC8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F2EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, (uint64_t)&unk_1005017A8, a1);
}

uint64_t sub_1000F2F2C()
{
  uint64_t v0;

  return sub_1000F1168(v0 + 16);
}

uint64_t sub_1000F2F48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DDDC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000DC64;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DDD8 + dword_10054DDD8))(v0 + 16);
}

uint64_t sub_1000F2FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DDEC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DDE8 + dword_10054DDE8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F302C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, (uint64_t)&unk_100501870, a1);
}

uint64_t sub_1000F3064()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DDFC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DDF8 + dword_10054DDF8))(v0 + 16);
}

uint64_t sub_1000F30C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DE0C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DE08 + dword_10054DE08))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F3148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, (uint64_t)&unk_100501938, a1);
}

uint64_t sub_1000F3180()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DE1C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DE18 + dword_10054DE18))(v0 + 16);
}

uint64_t sub_1000F31DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DE2C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DE28 + dword_10054DE28))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1000F3260(_QWORD *a1, _QWORD *a2)
{
  _s13InsertCommandV8LocationOwtk(a2, a1);
  return a2;
}

id *sub_1000F329C(id *a1)
{
  sub_1000F32C4(*a1);
  return a1;
}

void sub_1000F32C4(id a1)
{
  if ((unint64_t)a1 >= 4)

}

uint64_t sub_1000F32D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 128);
  sub_1000F32C4(*(id *)a1);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1000F336C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000EF77C(v1 + 16, a1);
}

uint64_t sub_1000F3378()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  _OWORD v7[5];
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  v4 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 128);
  v10 = *(_OWORD *)(v0 + 112);
  v11 = v5;
  v12 = *(_QWORD *)(v0 + 144);
  v8 = v4;
  v9 = v3;
  return v4(v7);
}

uint64_t sub_1000F33D8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[16]);
  swift_release(v0[18]);
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1000F343C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DE44);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DE40 + dword_10054DE40))(v0 + 16);
}

uint64_t sub_1000F3494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 128);
  sub_1000F3528(*(id *)a1);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

id sub_1000F3528(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

uint64_t sub_1000F3538()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_1000F35A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DE54);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054DE50 + dword_10054DE50))(a1, v4, v5, v1 + 32);
}

uint64_t sub_1000F3624()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1000F3670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + v3;
  sub_100011758((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  sub_100011758((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    sub_100011758((_QWORD *)(v0 + 104));
  v5 = v4 + 7;
  if (*(_QWORD *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + 144);
    v6 = *(unsigned __int8 *)(v0 + 192);
    if (v6 != 255)
      sub_1000B4784(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
    if (*(_QWORD *)(v0 + 200))
      swift_release(*(_QWORD *)(v0 + 208));
  }
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    v10 = *(_QWORD *)(v8 + 8);
    if (v10 >= 0xA)
      swift_bridgeObjectRelease(v10);
    v11 = v8 + v9[5];
    v12 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 24));
      v13 = v11 + v12[6];
      v14 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8]));
  }
  if (*(_QWORD *)(v0 + v7))
    swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v2 | 7);
}

_QWORD *sub_1000F386C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1000E8FF4((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *v3, v3[1]);
}

uint64_t sub_1000F38C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000F390C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int *v6;
  unint64_t v7;
  char *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  int v14;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 232) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  sub_100011758(v0 + 17);
  sub_100011758(v0 + 23);
  swift_release(v0[28]);
  v5 = (char *)v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    v7 = *((_QWORD *)v5 + 1);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = &v5[v6[5]];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v8 + 3));
      v10 = &v8[v9[6]];
      v11 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[8]]);
  }
  v12 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((char *)v0 + v4 + 24))
    sub_100011758((_QWORD *)((char *)v0 + v4));
  v13 = (char *)v0 + v12;
  if (*(_QWORD *)((char *)v0 + v12 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy((char *)v0 + v12);
    v14 = v13[48];
    if (v14 != 255)
      sub_1000B4784(*((id *)v13 + 1), *((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), *((_QWORD *)v13 + 4), *((_QWORD *)v13 + 5), v14);
    if (*((_QWORD *)v13 + 7))
      swift_release(*((_QWORD *)v13 + 8));
  }
  return swift_deallocObject(v0, v12 + 72, v2 | 7);
}

uint64_t sub_1000F3B3C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000E7FE0(v0 + 16, *(_BYTE *)(v0 + 128), (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1000F3BA0()
{
  return sub_1000F5BA8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F3BB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F3BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  v3 = swift_allocObject(&unk_100501C30, 153, 7);
  *a1 = v3;
  return sub_1000C117C(v1 + 16, v3 + 16);
}

uint64_t sub_1000F3C30()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_100011758(v0 + 12);
  swift_bridgeObjectRelease(v0[18]);
  swift_release(v0[21]);
  swift_release(v0[24]);
  swift_release(v0[26]);
  return swift_deallocObject(v0, 216, 7);
}

uint64_t sub_1000F3C9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

uint64_t sub_1000F3CC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DE7C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return sub_1000E2A7C(v0 + 16);
}

uint64_t sub_1000F3D14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, (uint64_t)&unk_100501BE0, a1);
}

uint64_t sub_1000F3D4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DE8C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DE88 + dword_10054DE88))(v0 + 16);
}

uint64_t sub_1000F3DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DE9C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DE98 + dword_10054DE98))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F3E2C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  sub_100011758(v0 + 14);
  swift_bridgeObjectRelease(v0[20]);
  swift_release(v0[23]);
  swift_release(v0[26]);
  swift_release(v0[28]);
  return swift_deallocObject(v0, 232, 7);
}

uint64_t sub_1000F3EA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10054DEAC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DEA8 + dword_10054DEA8))(a1);
}

uint64_t sub_1000F3F20()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_100011758(v0 + 12);
  swift_bridgeObjectRelease(v0[18]);
  return swift_deallocObject(v0, 153, 7);
}

uint64_t sub_1000F3F74()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F3F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F0480((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, (uint64_t)&unk_100501CF8, a1);
}

uint64_t sub_1000F3FB4()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F3FC8()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F3FD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DEBC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10054DEB8 + dword_10054DEB8))((_OWORD *)(v0 + 16));
}

uint64_t sub_1000F4030()
{
  return sub_1000F5AA0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F4040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DECC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DEC8 + dword_10054DEC8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F40C0()
{
  return sub_1000F5BA8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F40D0()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F40E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F0480((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, (uint64_t)&unk_100501DC0, a1);
}

uint64_t sub_1000F4110()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F4120()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  uint64_t v6;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v1;
  v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  v14 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v12 = *(_OWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v13 = v5;
  v9 = v3;
  v10 = v4;
  v11 = v6;
  return v4(v8);
}

uint64_t sub_1000F4180()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F4190()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DEDC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10054DED8 + dword_10054DED8))((_OWORD *)(v0 + 16));
}

_QWORD *sub_1000F41E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1000F4270()
{
  return sub_1000F5AA0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F4280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DEEC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DEE8 + dword_10054DEE8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F4300()
{
  return sub_1000F5BA8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F4314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, (uint64_t)&unk_100501E88, a1);
}

uint64_t sub_1000F434C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DEFC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DEF8 + dword_10054DEF8))(v0 + 16);
}

uint64_t sub_1000F43A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DF0C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DF08 + dword_10054DF08))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F4430@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, (uint64_t)&unk_100501F50, a1);
}

uint64_t sub_1000F4468()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DF1C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DF18 + dword_10054DF18))(v0 + 16);
}

uint64_t sub_1000F44C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DF2C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DF28 + dword_10054DF28))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F4550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int *v11;
  unint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 23;
  sub_100011758((_QWORD *)(v0 + 16));
  sub_100011758((_QWORD *)(v0 + 56));
  v10 = v0 + v3;
  v11 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v22 = v8 + 23;
    v12 = *(_QWORD *)(v10 + 8);
    if (v12 >= 0xA)
      swift_bridgeObjectRelease(v12);
    v13 = v10 + v11[5];
    v14 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 24));
      v21 = v13 + v14[6];
      v15 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v15 - 8);
      v20 = v15;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v19 + 48))(v21, 1))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[8]));
    v9 = v22;
    v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  }
  v16 = v9 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_100011758((_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v5));

  sub_100011758((_QWORD *)(v0 + v7));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  v17 = *(_QWORD *)(v0 + v16 + 8);
  if (v17 >> 60 != 15)
    sub_10003A628(*(_QWORD *)(v0 + v16), v17);
  return swift_deallocObject(v0, v16 + 16, v2 | 7);
}

uint64_t sub_1000F476C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000E6628(v0 + 16, v0 + 56, v0 + v2, (_QWORD *)(v0 + v3), *(void (**)(char *, char *, uint64_t))(v0 + v4), *(_QWORD *)(v0 + v5), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000F4810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F4854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F4898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = type metadata accessor for PlaylistContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 8) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v4;
  v11 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(v1 + 20);
  v13 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v5));
  v14 = v0 + v8;
  v15 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v0 + v8, 1, v15))
  {
    v16 = *(_QWORD *)(v14 + 8);
    if (v16 >= 0xA)
      swift_bridgeObjectRelease(v16);
    v17 = v14 + v15[5];
    v18 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v18 - 1) + 48))(v17, 1, v18))
    {
      v23 = v9;
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 24));
      v19 = v17 + v18[6];
      v20 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v20);
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[10] + 8));
      v9 = v23;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[8]));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

_QWORD *sub_1000F4AA0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8) + 80);
  return sub_1000E61E4(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_1000F4B14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F4B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100011758((_QWORD *)(v0 + 16));
  sub_100011758((_QWORD *)(v0 + 56));
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v13 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

_QWORD *sub_1000F4CE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8) + 80);
  return sub_1000E5F90((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56), v0 + ((v1 + 96) & ~v1));
}

uint64_t sub_1000F4D1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, (uint64_t)&unk_1005020B8, a1);
}

uint64_t sub_1000F4D54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DF54);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DF50 + dword_10054DF50))(v0 + 16);
}

uint64_t sub_1000F4DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DF64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DF60 + dword_10054DF60))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F4E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000F4E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000F4F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_10054D2DC);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_100012D1C;
  return sub_1000C7700(v7, v8, v9);
}

uint64_t sub_1000F4FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_1000F51B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, (uint64_t)&unk_1005021F8, a1);
}

uint64_t sub_1000F51F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DF74);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DF70 + dword_10054DF70))(v0 + 16);
}

uint64_t sub_1000F524C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DF84);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DF80 + dword_10054DF80))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F52D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 104) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100011758((_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 >> 60 != 15)
    sub_10003A628(*(_QWORD *)(v0 + 88), v5);
  v6 = v0 + v3;
  v7 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v3, 1, v7))
  {
    v8 = *(_QWORD *)(v6 + 8);
    if (v8 >= 0xA)
      swift_bridgeObjectRelease(v8);
    v9 = v6 + v7[5];
    v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v11 = v9 + v10[6];
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v12);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  }
  v13 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 40;
  sub_100011758((_QWORD *)(v0 + v13));
  return swift_deallocObject(v0, v14, v2 | 7);
}

_QWORD *sub_1000F54A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1000E6EE0((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1000F550C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, (uint64_t)&unk_1005022E8, a1);
}

uint64_t sub_1000F5544()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DF94);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054DF90 + dword_10054DF90))(v0 + 16);
}

uint64_t sub_1000F55A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DFA4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DFA0 + dword_10054DFA0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1000F5624(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[10];
  v7 = a1[13];
  swift_release(a1[15]);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

_QWORD *sub_1000F56AC(_QWORD *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[1];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[7];
  v8 = a1[10];
  v9 = a1[13];
  swift_release(a1[15]);
  swift_release(v9);
  swift_release(v8);
  a2(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  return a1;
}

uint64_t sub_1000F5738()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000F574C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000EF4FC((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1000F5754()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000F5768()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000F577C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DFC4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10054DFC0 + dword_10054DFC0))((_OWORD *)(v0 + 16));
}

_QWORD *sub_1000F57D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1000F585C()
{
  return sub_1000F5AA0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000F5870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DFD4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DFD0 + dword_10054DFD0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F58F0()
{
  return sub_1000F5BA8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000F5904()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F5918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000EF274((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1000F5920()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F5934()
{
  return sub_1000F5948((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F5948(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  swift_release(v2[12]);
  swift_release(v2[15]);
  swift_release(v2[17]);
  return swift_deallocObject(v2, 144, 7);
}

uint64_t sub_1000F59AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054DFE4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10054DFE0 + dword_10054DFE0))((_OWORD *)(v0 + 16));
}

_QWORD *sub_1000F5A04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1000F5A8C()
{
  return sub_1000F5AA0((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F5AA0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  swift_unknownObjectRelease(v2[2]);
  a1(v2[5]);
  swift_release(v2[7]);
  swift_release(v2[9]);
  a2(v2[11]);
  swift_release(v2[14]);
  swift_release(v2[17]);
  swift_release(v2[19]);
  return swift_deallocObject(v2, 160, 7);
}

uint64_t sub_1000F5B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054DFF4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054DFF0 + dword_10054DFF0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F5B94()
{
  return sub_1000F5BA8((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000F5BA8(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  return swift_deallocObject(v2, 80, 7);
}

uint64_t sub_1000F5BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000F10E4((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, (uint64_t)&unk_100502540, a1);
}

uint64_t sub_1000F5C30()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1000F5C7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10054E004);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10054E000 + dword_10054E000))(v0 + 16);
}

_QWORD *sub_1000F5CD4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[13];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t sub_1000F5D4C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1000F5DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10054E014);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10054E010 + dword_10054E010))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000F5E24()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000F5E5C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  int *v11;
  unint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_10054DCB8) - 8);
  v35 = *(unsigned __int8 *)(v5 + 80);
  v6 = (v3 + v4 + v35) & ~v35;
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 79) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*((_QWORD *)v0 + 5))
    sub_100011758((_QWORD *)v0 + 2);
  sub_100011758((_QWORD *)v0 + 7);
  v10 = &v0[v3];
  v11 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v31 = v2;
    v12 = *((_QWORD *)v10 + 1);
    if (v12 >= 0xA)
      swift_bridgeObjectRelease(v12);
    v13 = &v10[v11[5]];
    v14 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 3));
      v30 = &v13[v14[6]];
      v15 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v15 - 8);
      v29 = v15;
      if (!(*(unsigned int (**)(char *, uint64_t))(v28 + 48))(v30, 1))
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[8]]);
    v2 = v31;
  }
  v16 = (((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = type metadata accessor for PlaylistContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(&v0[v6], 1, v17))
  {
    v18 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(&v0[v6], v18);
    v19 = &v0[v6 + *(int *)(v17 + 20)];
    v20 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  swift_release(*(_QWORD *)&v0[v7]);
  sub_100011758(&v0[v8]);
  sub_100011758(&v0[v9]);
  v21 = &v0[v32];
  if (*(_QWORD *)&v0[v32 + 56] != 1)
  {
    swift_unknownObjectWeakDestroy(&v0[v32]);
    v22 = v21[48];
    if (v22 != 255)
      sub_1000B4784(*((id *)v21 + 1), *((_QWORD *)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), v22);
    if (*((_QWORD *)v21 + 7))
      swift_release(*((_QWORD *)v21 + 8));
  }
  v23 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)&v0[v33 + 24])
    sub_100011758(&v0[v33]);

  swift_bridgeObjectRelease(*(_QWORD *)&v0[v16 + 8]);
  v24 = *(_QWORD *)&v0[v23 + 8];
  if (v24 >> 60 != 15)
    sub_10003A628(*(_QWORD *)&v0[v23], v24);
  v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = v25 + 40;
  sub_100011758(&v0[v25]);
  return swift_deallocObject(v0, v26, v2 | v35 | 7);
}

_QWORD *sub_1000F61F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054DCB8) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000E527C(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v5), *(_QWORD *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void **)(v0 + v12), *(_QWORD *)(v0 + v13), *(_QWORD *)(v0 + v13 + 8), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1000F6318@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E0A8, &qword_10054E370, (uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t sub_1000F6334@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E360, &qword_10054E368, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t sub_1000F6350@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = sub_10000B4C8(a1);
  v9 = sub_10005DE8C(a2, a1);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_1000F6460@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E350, &qword_10054E358, (uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_1000F647C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E340, &qword_10054E348, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_1000F6498@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E330, &qword_10054E338, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_1000F64B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E320, &qword_10054E328, (uint64_t (*)(_QWORD))&type metadata accessor for Song, a1);
}

uint64_t sub_1000F64D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E300, &qword_10054E308, (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_1000F64EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E2F0, &qword_10054E2F8, (uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_1000F6508@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E2E0, &qword_10054E2E8, (uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t sub_1000F6524@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E2D0, &qword_10054E2D8, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_1000F6540@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E2C0, &qword_10054E2C8, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_1000F655C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F6350(&qword_10054E310, &qword_10054E318, (uint64_t (*)(_QWORD))&type metadata accessor for Station, a1);
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  _OWORD v49[2];
  __int128 v50;

  v47 = a9;
  v48 = a8;
  v40 = a7;
  v42 = a2;
  v43 = a6;
  v45 = a3;
  v46 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  v44 = (uint64_t)&v39 - v18;
  v19 = *(void (**)(void))(v12 + 16);
  v19();
  ((void (*)(char *, char *, uint64_t))v19)(v17, a1, a5);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 56) & ~v20;
  v39 = v20 | 7;
  v22 = (char *)swift_allocObject(&unk_1005027C8, v21 + v13, v20 | 7);
  v23 = v43;
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = v23;
  v24 = v48;
  *((_QWORD *)v22 + 4) = a7;
  *((_QWORD *)v22 + 5) = v24;
  *((_QWORD *)v22 + 6) = v42;
  v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v25(&v22[v21], v17, a5);
  v26 = v41;
  v25(v41, a1, a5);
  v27 = (v20 + 48) & ~v20;
  v28 = v23;
  v29 = *(_QWORD *)(v23 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v27 + v13 + v30) & ~v30;
  v32 = (char *)swift_allocObject(&unk_1005027F0, v31 + *(_QWORD *)(v29 + 64), v39 | v30);
  *((_QWORD *)v32 + 2) = a5;
  *((_QWORD *)v32 + 3) = v28;
  v33 = v28;
  v34 = v40;
  v35 = v48;
  *((_QWORD *)v32 + 4) = v40;
  *((_QWORD *)v32 + 5) = v35;
  v25(&v32[v27], v26, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v32[v31], v45, v33);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v44, (uint64_t)sub_1000F96B8, (uint64_t)v22, (uint64_t)&unk_10054E058, (uint64_t)v32, v46, a5, v34, v49);
  v36 = v49[1];
  v37 = v47;
  *v47 = v49[0];
  v37[1] = v36;
  result = *(double *)&v50;
  v37[2] = v50;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB0D0(a1, 4, (uint64_t)sub_1000FC29C, (uint64_t)&unk_10054E060, (uint64_t)&unk_10054E068, a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  _OWORD *v34;
  double result;
  __int128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;

  v41 = a8;
  v42 = a7;
  v39 = a2;
  v40 = a3;
  v37 = a1;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v15 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v16);
  v38 = (uint64_t)&v37 - v19;
  v20 = *(void (**)(void))(v12 + 16);
  v20();
  ((void (*)(char *, char *, uint64_t))v20)(v18, a1, a4);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 48) & ~v21;
  v23 = v22 + v13;
  v24 = v21 | 7;
  v25 = (char *)swift_allocObject(&unk_100502818, v22 + v13, v21 | 7);
  *((_QWORD *)v25 + 2) = a4;
  *((_QWORD *)v25 + 3) = a5;
  v26 = v42;
  *((_QWORD *)v25 + 4) = a6;
  *((_QWORD *)v25 + 5) = v26;
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v27(&v25[v22], v18, a4);
  v27(v15, v37, a4);
  v28 = *(_QWORD *)(a5 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = (v23 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_100502840, v30 + *(_QWORD *)(v28 + 64), v24 | v29);
  *((_QWORD *)v31 + 2) = a4;
  *((_QWORD *)v31 + 3) = a5;
  v32 = v42;
  *((_QWORD *)v31 + 4) = a6;
  *((_QWORD *)v31 + 5) = v32;
  v27(&v31[v22], v15, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(&v31[v30], v39, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v38, 0, 0, (uint64_t)sub_1000FA0DC, (uint64_t)v25, (uint64_t)&unk_10054E078, (uint64_t)v31, v40, v43, a4, a6);
  v33 = v43[1];
  v34 = v41;
  *v41 = v43[0];
  v34[1] = v33;
  result = *(double *)&v44;
  v36 = v45;
  v34[2] = v44;
  v34[3] = v36;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1000F858C(a1, 17, (uint64_t)sub_1000FC28C, (uint64_t)&unk_10054E080, (uint64_t)&unk_10054E088, a2).n128_u64[0];
  return result;
}

uint64_t sub_1000F69AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA788(a1, 17, (uint64_t)sub_1000FC28C, (uint64_t)&unk_10054E080, (uint64_t)&unk_10054E088, a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100502868, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_100011530(a8, v21 + v17, &qword_10054CD28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_10054E098;
  a9[7] = v21;
  return result;
}

uint64_t sub_1000F6AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000F6B84, 0, 0);
}

uint64_t sub_1000F6B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100011370(*(_QWORD *)(v0 + 96), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 136), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1000B0798(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000F6D48, v18, v19);
  }
}

uint64_t sub_1000F6D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1000D44DC(v5, v4, 5, 41, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FC2A0, 0, 0);
}

unint64_t sub_1000F6E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  v4 = sub_10000B4C8(&qword_10054CE80);
  __chkstk_darwin(v4);
  v60 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10054CE88);
  __chkstk_darwin(v8);
  v62 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v61 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v56 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054CE78);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 - 8);
  v17 = __chkstk_darwin(v13);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v54 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v54 - v22;
  v24 = type metadata accessor for Track(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v63 = a1;
  v28(v23, a1, a2);
  v29 = swift_dynamicCast(v15, v23, a2, v24, 6);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if ((v29 & 1) != 0)
  {
    v30(v15, 0, 1, v24);
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v27, v15, v24);
    Track.albumTitle.getter(v31);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    swift_bridgeObjectRelease(v33);
    if (v33)
      return 0;
  }
  else
  {
    v30(v15, 1, 1, v24);
    sub_100011694((uint64_t)v15, &qword_10054CE78);
  }
  v34 = v63;
  v28(v21, v63, a2);
  v35 = (uint64_t)v62;
  v36 = swift_dynamicCast(v62, v21, a2, v10, 6);
  v37 = v61;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if ((v36 & 1) == 0)
  {
    v38(v35, 1, 1, v10);
    sub_100011694(v35, &qword_10054CE88);
    goto LABEL_9;
  }
  v38(v35, 0, 1, v10);
  v39 = v56;
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 32))(v56, v35, v10);
  Song.albumTitle.getter(v40);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v10);
  swift_bridgeObjectRelease(v42);
  if (v42)
    return 0;
LABEL_9:
  v43 = v57;
  v28(v57, v34, a2);
  v45 = v59;
  v44 = (uint64_t)v60;
  v46 = swift_dynamicCast(v60, v43, a2, v59, 6);
  v47 = v58;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
  if ((v46 & 1) != 0)
  {
    v48(v44, 0, 1, v45);
    v49 = v55;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v55, v44, v45);
    MusicVideo.albumTitle.getter(v50);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v45);
    swift_bridgeObjectRelease(v52);
    if (v52)
      return 0;
  }
  else
  {
    v48(v44, 1, 1, v45);
    sub_100011694(v44, &qword_10054CE80);
  }
  return 0xD000000000000010;
}

uint64_t sub_1000F7270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_10000B4C8(&qword_10054CE80);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054CE88);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054CE78);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000F73F4, 0, 0);
}

uint64_t sub_1000F73F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 1);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_1000F77EC;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_100011694(v20, &qword_10054CE78);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 1);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_1000F7854;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_100011694(v39, &qword_10054CE88);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 1);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_1000F78BC;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_100011694(v58, &qword_10054CE80);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F77EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_10000E750(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000FC2AC, 0, 0);
}

uint64_t sub_1000F7854()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_10000E750(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000FC2B0, 0, 0);
}

uint64_t sub_1000F78BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_10000E750(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000FC2A8, 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return sub_1000FAD80(0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return sub_1000DE4D4;
}

id sub_1000F7960()
{
  return sub_1000FB904();
}

uint64_t sub_1000F7980(uint64_t a1, uint64_t a2)
{
  return sub_1000FAF44(a1, a2, 0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  if (a1)
    return sub_1000F79D4() & 1;
  else
    return 1;
}

uint64_t sub_1000F79D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v25[15];

  v0 = type metadata accessor for MusicPropertySource(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v25[-1] - v6;
  v8 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter(v5);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  if ((v8 & 1) != 0)
  {
    v10 = enum case for MusicPropertySource.library(_:);
    v9(v7, enum case for MusicPropertySource.library(_:), v0);
  }
  else
  {
    v9(v7, enum case for MusicPropertySource.catalog(_:), v0);
    v10 = enum case for MusicPropertySource.library(_:);
  }
  v9(v4, v10, v0);
  v11 = static MusicPropertySource.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v7, v0);
  if ((v11 & 1) != 0)
    return 1;
  if (qword_10054BA98 != -1)
    swift_once(&qword_10054BA98, sub_100154564);
  v14 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10042BA70);
  v16 = swift_getKeyPath(&unk_10042BA98);
  static Published.subscript.getter(v25, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v13 = BYTE1(v25[0]);
  v17 = v25[3];
  v18 = v25[4];
  v19 = v25[7];
  v20 = v25[9];
  v21 = (void *)v25[10];
  v22 = v25[12];
  swift_bridgeObjectRelease(v25[14]);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);

  return v13;
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = sub_10000B4C8(&qword_10054E0A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10054CE38);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = sub_1000F79D4();
    if ((v10 & 1) == 0)
      return 0;
  }
  MusicVideo.albums.getter(v10);
  v13 = sub_10000B4C8(&qword_10054E0A8);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
  {
    sub_100011694((uint64_t)v4, &qword_10054E0A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
    sub_100011694((uint64_t)v7, &qword_10054CE38);
    return 0;
  }
  sub_1000F6350(&qword_10054E0A8, &qword_10054E370, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_6;
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v17 = Album.isSingleMusicVideo.getter(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v17 == 2)
    return 0;
  return (v17 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _BOOL8 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v0 = sub_10000B4C8(&qword_10054E0A0);
  __chkstk_darwin(v0);
  v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000B4C8(&qword_10054CE38);
  __chkstk_darwin(v2);
  v37 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Album(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Track(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1000F79D4() & 1) == 0)
    return 0;
  v33 = v7;
  v34 = v5;
  v35 = v4;
  v36 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 != enum case for Track.song(_:))
  {
    if (v16 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
      v18 = v11;
      v19 = v8;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v11, v15, v8);
      v21 = (uint64_t)v38;
      MusicVideo.albums.getter(v20);
      v22 = sub_10000B4C8(&qword_10054E0A8);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_100011694(v21, &qword_10054E0A0);
        v24 = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, 1, 1, v35);
      }
      else
      {
        v24 = v37;
        sub_1000F6350(&qword_10054E0A8, &qword_10054E370, (uint64_t (*)(_QWORD))&type metadata accessor for Album, v37);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        v27 = v34;
        v26 = v35;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v24, 1, v35) != 1)
        {
          v29 = v33;
          v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 32))(v33, v24, v26);
          v31 = Album.isSingleMusicVideo.getter(v30);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
          v28 = v36;
          v17 = v31 != 2 && (v31 & 1) == 0;
          goto LABEL_12;
        }
      }
      sub_100011694(v24, &qword_10054CE38);
      v17 = 0;
      v28 = v36;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
      return v17;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 1;
}

uint64_t Playlist.supportsContainerNavigation(itemState:)()
{
  return sub_1000F79D4() & 1;
}

BOOL Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v0 = sub_10000B4C8(&qword_10054E0A0);
  __chkstk_darwin(v0);
  v45 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000B4C8(&qword_10054CE38);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054E0B0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v37 - v17;
  if ((sub_1000F79D4() & 1) != 0)
  {
    v38 = v8;
    v39 = v6;
    v41 = v5;
    v42 = v12;
    v40 = v4;
    v43 = v10;
    v44 = v9;
    Playlist.Entry.item.getter();
    v19 = type metadata accessor for Playlist.Entry.Item(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      v21 = 0;
LABEL_12:
      sub_100011694((uint64_t)v18, &qword_10054E0B0);
      return v21;
    }
    sub_100011370((uint64_t)v18, (uint64_t)v16, &qword_10054E0B0);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v16, v19);
    if (v22 != enum case for Playlist.Entry.Item.musicVideo(_:))
    {
      v21 = v22 == enum case for Playlist.Entry.Item.song(_:);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v20 + 96))(v16, v19);
    v23 = v42;
    v24 = v43;
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v42, v16, v44);
    v26 = (uint64_t)v45;
    MusicVideo.albums.getter(v25);
    v27 = sub_10000B4C8(&qword_10054E0A8);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      sub_100011694(v26, &qword_10054E0A0);
      v29 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, 1, 1, v41);
    }
    else
    {
      v29 = (uint64_t)v40;
      sub_1000F6350(&qword_10054E0A8, &qword_10054E370, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v40);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      v30 = v39;
      v31 = v41;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v29, 1, v41) != 1)
      {
        v34 = v38;
        v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 32))(v38, v29, v31);
        v36 = Album.isSingleMusicVideo.getter(v35);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v31);
        v32 = v44;
        v21 = v36 != 2 && (v36 & 1) == 0;
        goto LABEL_11;
      }
    }
    sub_100011694(v29, &qword_10054CE38);
    v21 = 0;
    v32 = v44;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v32);
    goto LABEL_12;
  }
  return 0;
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter();
  v3 = type metadata accessor for MusicPropertySource(0);
  v4 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
  if ((v2 & 1) == 0)
    v4 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1000F858C(a1, 15, (uint64_t)sub_1000FC28C, (uint64_t)&unk_10054E0B8, (uint64_t)&unk_10054E0C0, a2).n128_u64[0];
  return result;
}

__n128 sub_1000F858C@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[16];

  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 16);
  v18 = *(__n128 *)(a1 + 48);
  sub_100011530(a1, (uint64_t)v21, &qword_10054DE38);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  sub_10005001C((uint64_t)v21);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v13;
  *(_OWORD *)(a6 + 16) = v20;
  *(_OWORD *)(a6 + 32) = v19;
  result = v18;
  *(__n128 *)(a6 + 48) = v18;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  return result;
}

uint64_t sub_1000F8668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA788(a1, 15, (uint64_t)sub_1000FC28C, (uint64_t)&unk_10054E0B8, (uint64_t)&unk_10054E0C0, a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100502890, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_100011530(a8, v21 + v17, &qword_10054CD28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_10054E0D0;
  a9[7] = v21;
  return result;
}

uint64_t sub_1000F8794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000F8840, 0, 0);
}

uint64_t sub_1000F8840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100011370(*(_QWORD *)(v0 + 96), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 136), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1000B0798(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100427FB0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000F8A0C, v18, v19);
  }
}

uint64_t sub_1000F8A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1000D44DC(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FC2A0, 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return sub_1000FAD80(0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return sub_1000DE480;
}

id sub_1000F8B1C()
{
  return sub_1000FB904();
}

uint64_t sub_1000F8B40(uint64_t a1, uint64_t a2)
{
  return sub_1000FAF44(a1, a2, 0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t sub_1000F8B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100012D1C;
  return v6();
}

uint64_t sub_1000F8BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB164(a1, 4, (uint64_t)sub_1000FC29C, (uint64_t)&unk_10054E060, (uint64_t)&unk_10054E068, a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_1005028B8, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_100011530(a6, v21 + v17, &qword_10054CD28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_10054E0E0;
  a9[5] = v21;
  return result;
}

uint64_t sub_1000F8CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000F8D84, 0, 0);
}

uint64_t sub_1000F8D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000B0798(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000F8F3C, v18, v19);
  }
}

uint64_t sub_1000F8F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FC2A4, 0, 0);
}

unint64_t sub_1000F900C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;

  v87 = a2;
  v5 = sub_10000B4C8(&qword_10054CE80);
  __chkstk_darwin(v5);
  v78 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for MusicVideo(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v73 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10054CE88);
  __chkstk_darwin(v8);
  v83 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for Song(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v74 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10054CE78);
  v12 = __chkstk_darwin(v11);
  v86 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = a3;
  v84 = *(_QWORD *)(a3 - 8);
  v14 = __chkstk_darwin(v12);
  v75 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v80 = (char *)&v73 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v73 - v18;
  v20 = type metadata accessor for Track(0);
  v85 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v79 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10042BA70);
  v23 = swift_getKeyPath(&unk_10042BA98);
  v24 = a1;
  static Published.subscript.getter(&v89, a1, KeyPath, v23);
  swift_release(KeyPath);
  swift_release(v23);
  v25 = v90;
  v26 = v91;
  v27 = v92;
  v28 = v93;
  v30 = v94;
  v29 = v95;
  v31 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v30);

  if ((v25 & 1) == 0)
    return 0xD00000000000003CLL;
  v33 = swift_getKeyPath(&unk_10042BA70);
  v34 = swift_getKeyPath(&unk_10042BA98);
  static Published.subscript.getter(&v89, v24, v33, v34);
  swift_release(v33);
  swift_release(v34);
  v35 = BYTE1(v89);
  v36 = v91;
  v37 = v92;
  v38 = v93;
  v39 = v94;
  v40 = v95;
  v41 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v39);

  if (v35 != 1)
    return 0xD000000000000016;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v44 = v87;
  v43 = v88;
  v42(v19, v87, v88);
  v45 = (uint64_t)v86;
  v46 = swift_dynamicCast(v86, v19, v43, v20, 6);
  v47 = v85;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56);
  if ((v46 & 1) != 0)
  {
    v48(v45, 0, 1, v20);
    v49 = v79;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v79, v45, v20);
    Track.catalogID.getter(v50);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v20);
    swift_bridgeObjectRelease(v52);
    if (v52)
      return 0;
  }
  else
  {
    v48(v45, 1, 1, v20);
    sub_100011694(v45, &qword_10054CE78);
  }
  v53 = v80;
  v42(v80, v44, v43);
  v54 = (uint64_t)v83;
  v55 = v82;
  v56 = swift_dynamicCast(v83, v53, v43, v82, 6);
  v57 = v81;
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
  if ((v56 & 1) == 0)
  {
    v58(v54, 1, 1, v55);
    sub_100011694(v54, &qword_10054CE88);
    goto LABEL_13;
  }
  v58(v54, 0, 1, v55);
  v59 = v74;
  v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 32))(v74, v54, v55);
  Song.catalogID.getter(v60);
  v62 = v61;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v55);
  swift_bridgeObjectRelease(v62);
  if (v62)
    return 0;
LABEL_13:
  v63 = v75;
  v42(v75, v44, v43);
  v64 = (uint64_t)v78;
  v65 = v77;
  v66 = swift_dynamicCast(v78, v63, v43, v77, 6);
  v67 = v76;
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
  if ((v66 & 1) != 0)
  {
    v68(v64, 0, 1, v65);
    v69 = v73;
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 32))(v73, v64, v65);
    MusicVideo.catalogID.getter(v70);
    v72 = v71;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v65);
    swift_bridgeObjectRelease(v72);
    if (v72)
      return 0;
  }
  else
  {
    v68(v64, 1, 1, v65);
    sub_100011694(v64, &qword_10054CE80);
  }
  return 0xD000000000000010;
}

uint64_t sub_1000F964C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1000F96B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000F900C(*(_QWORD *)(v0 + 48), v0 + ((v2 + 56) & ~v2), v1);
}

uint64_t sub_1000F96DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_10000B4C8(&qword_10054CE80);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054CE88);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054CE78);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000F9860, 0, 0);
}

uint64_t sub_1000F9860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 0);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_1000F9C58;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_100011694(v20, &qword_10054CE78);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_1000F9D84;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_100011694(v39, &qword_10054CE88);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 0);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_1000F9EB0;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_100011694(v58, &qword_10054CE80);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F9C58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_10000E750(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000F9CC0, 0, 0);
}

uint64_t sub_1000F9CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F9D84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_10000E750(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000F9DEC, 0, 0);
}

uint64_t sub_1000F9DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F9EB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_10000E750(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000F9F18, 0, 0);
}

uint64_t sub_1000F9F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000F9FE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_10054E054);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_100012D1C;
  return sub_1000F96DC(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_1000FA084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

unint64_t sub_1000FA0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000F6E18(v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1000FA100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v3 | v6 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v9);
}

uint64_t sub_1000FA18C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_10054E074);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_100012D1C;
  return sub_1000F7270(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_1000FA234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054E094);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000F6AD8(v7, v8, v2, v3);
}

uint64_t sub_1000FA2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054E0CC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000F8794(v7, v8, v2, v3);
}

uint64_t sub_1000FA374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054E0DC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000F8CD8(v7, v8, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return sub_1000FAD80(0x6572432077656956, 0xEC00000073746964);
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1005028E0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_100502908, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_1000B020C;
}

uint64_t sub_1000FA4B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000FA4DC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6572432077656956, 0xEC00000073746964);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*sub_1000FA64C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100502DB8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_100502DE0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_1000B0870;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1000F858C(a1, 16, (uint64_t)sub_1000FA6F4, (uint64_t)&unk_10054E0E8, (uint64_t)&unk_10054E0F0, a2).n128_u64[0];
  return result;
}

uint64_t sub_1000FA6F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1000FA714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000DC64;
  return v6();
}

uint64_t sub_1000FA768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA788(a1, 16, (uint64_t)sub_1000FA6F4, (uint64_t)&unk_10054E0E8, (uint64_t)&unk_10054E0F0, a2);
}

uint64_t sub_1000FA788@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  *(_QWORD *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v10;
  v11 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 56) = v8;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  swift_bridgeObjectRetain(v6);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v8);
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100502930, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_100011530(a8, v21 + v17, &qword_10054CD28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_10054E100;
  a9[7] = v21;
  return result;
}

uint64_t sub_1000FA920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000FA9CC, 0, 0);
}

uint64_t sub_1000FA9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100011370(*(_QWORD *)(v0 + 96), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 136), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1000B0798(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100427F90;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000FAB98, v18, v19);
  }
}

uint64_t sub_1000FAB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1000D44DC(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FAC68, 0, 0);
}

uint64_t sub_1000FAC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000E750(*(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FACC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054E0FC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000DC64;
  return sub_1000FA920(v7, v8, v2, v3);
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return sub_1000FAD80(0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_1000FAD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v17[-v12];
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v14 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v6, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return sub_1000DE438;
}

id sub_1000FAF08()
{
  return sub_1000FB904();
}

uint64_t sub_1000FAF24(uint64_t a1, uint64_t a2)
{
  return sub_1000FAF44(a1, a2, 0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_1000FAF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v19[-v14];
  String.LocalizationValue.init(stringLiteral:)(a3, a4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v16 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v17 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v16, v8, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return v17;
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB0D0(a1, 57, (uint64_t)sub_1000B0910, (uint64_t)&unk_10054E108, (uint64_t)&unk_10054E110, a2);
}

uint64_t sub_1000FB0D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t sub_1000FB144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB164(a1, 57, (uint64_t)sub_1000B0910, (uint64_t)&unk_10054E108, (uint64_t)&unk_10054E110, a2);
}

uint64_t sub_1000FB164@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100502958, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_100011530(a6, v21 + v17, &qword_10054CD28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_10054E120;
  a9[5] = v21;
  return result;
}

uint64_t sub_1000FB2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000FB384, 0, 0);
}

uint64_t sub_1000FB384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000B0798(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000FB53C, v18, v19);
  }
}

uint64_t sub_1000FB53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FB60C, 0, 0);
}

uint64_t sub_1000FB60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000E750(*(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FB668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000FB828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054E11C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_1000FB2D8(v7, v8, v2, v3);
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return sub_1000DE4AC;
}

id sub_1000FB8E4()
{
  return sub_1000FB904();
}

id sub_1000FB904()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t _s9MusicCore7ActionsO14ViewFullLyricsO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001004470E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Playlist(0);
  }
  else
  {
    if (result > 1)
      return result;
    v4 = type metadata accessor for Track(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10000E750(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem(uint64_t a1)
{
  uint64_t result;

  result = qword_10054E288;
  if (!qword_10054E288)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationItem);
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10000E750(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1000FBED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_1000FBEE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Track(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t _s9GoToAlbumO7ContextVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s9GoToAlbumO7ContextVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(a1[3]);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(a1[5]);
  v4 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  v5 = a1[7];
  a1[7] = v4;
  swift_release(v5);
  return a1;
}

uint64_t _s9GoToAlbumO7ContextVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1000FC204(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t static Actions.OpenInClassical.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_1000B0910;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10054E378;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10054E380;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t (*v53)(uint64_t, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  unint64_t (**v61)();
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t (**v74)();
  uint64_t v75;
  char *v76;
  uint64_t v77;

  v71 = a2;
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v72 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v10;
  __chkstk_darwin(v9);
  v69 = (char *)&v63 - v11;
  v65 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054E388);
  v66 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v70 = (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v68 = (uint64_t)&v63 - v19;
  v20 = __chkstk_darwin(v18);
  v67 = (uint64_t)&v63 - v21;
  v75 = v22;
  v23 = __chkstk_darwin(v20);
  v25 = (uint64_t *)((char *)&v63 - v24);
  v76 = a1;
  v26 = Album.catalogID.getter(v23);
  v73 = a3;
  v74 = a4;
  if (v27)
  {
    v28 = v27;
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v25, v14, v65);
    v32 = 0;
    v33 = v66;
  }
  else
  {
    v29 = sub_1000FC790();
    v30 = swift_allocError(&type metadata for ClassicalBridge.Error, v29, 0, 0);
    *(_QWORD *)v31 = 2;
    *(_QWORD *)(v31 + 8) = 0;
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    *(_BYTE *)(v31 + 32) = 2;
    swift_willThrow(v30);
    v33 = v66;
    *v25 = v30;
    v32 = 1;
  }
  swift_storeEnumTagMultiPayload(v25, v15, v32);
  v34 = v69;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v69, v76, v7);
  v35 = v67;
  sub_100011370((uint64_t)v25, v67, &qword_10054E388);
  v36 = *(unsigned __int8 *)(v8 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = v8;
  v39 = v7;
  v40 = *(unsigned __int8 *)(v33 + 80);
  v41 = (v77 + v40 + v37) & ~v40;
  v42 = v75;
  v64 = v40 | 7;
  v65 = v40 | 7 | v36;
  v43 = swift_allocObject(&unk_100502E28, v41 + v75, v65);
  v44 = v43 + v37;
  v45 = v43;
  v66 = v43;
  v46 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  v46(v44, v34, v39);
  sub_100011530(v35, v45 + v41, &qword_10054E388);
  v47 = v68;
  sub_100011370((uint64_t)v25, v68, &qword_10054E388);
  v48 = (v40 + 16) & ~v40;
  v49 = (v42 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_100502E50, v49 + 72, v64);
  sub_100011530(v47, v50 + v48, &qword_10054E388);
  sub_1000B59CC(v71, v50 + v49);
  v51 = v70;
  sub_100011530((uint64_t)v25, v70, &qword_10054E388);
  v52 = v72;
  v46((uint64_t)v72, v76, v39);
  v53 = (uint64_t (*)(uint64_t, char *, uint64_t))v46;
  v54 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = (v55 + 16) & ~v55;
  v57 = (*(_QWORD *)(v54 + 64) + v40 + v56) & ~v40;
  v58 = (v75 + v36 + v57) & ~v36;
  v59 = swift_allocObject(&unk_100502E78, v58 + v77, v65 | v55);
  sub_100011530(v73, v59 + v56, &qword_10054CD28);
  sub_100011530(v51, v59 + v57, &qword_10054E388);
  result = v53(v59 + v58, v52, v39);
  v61 = v74;
  v62 = v66;
  *v74 = sub_1000FCA14;
  v61[1] = (unint64_t (*)())v62;
  v61[2] = (unint64_t (*)())&unk_10054E398;
  v61[3] = (unint64_t (*)())v50;
  v61[4] = (unint64_t (*)())&unk_10054E3A8;
  v61[5] = (unint64_t (*)())v59;
  return result;
}

unint64_t sub_1000FC790()
{
  unint64_t result;

  result = qword_100555B00;
  if (!qword_100555B00)
  {
    result = swift_getWitnessTable(byte_100435474, &type metadata for ClassicalBridge.Error);
    atomic_store(result, (unint64_t *)&qword_100555B00);
  }
  return result;
}

unint64_t sub_1000FC7D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = 0xD000000000000021;
  v4 = sub_10000B4C8(&qword_10054E388);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((Album.isClassicalExperienceAvailable.getter(v5) & 1) != 0)
  {
    sub_100011370(a2, (uint64_t)v7, &qword_10054E388);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
    {
      v8 = *v7;
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v9._countAndFlagsBits = 0xD000000000000028;
      v9._object = (void *)0x80000001004471F0;
      String.append(_:)(v9);
      v14 = v8;
      v10 = sub_10000B4C8((uint64_t *)&unk_100550630);
      _print_unlocked<A, B>(_:_:)(&v14, v15, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      swift_errorRelease(v8);
      return v15[0];
    }
    else
    {
      sub_100011694((uint64_t)v7, &qword_10054E388);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1000FC934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_10000B4C8(&qword_10054E388);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v9));
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v9, v11);
  }
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

unint64_t sub_1000FCA14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10054E388) - 8) + 80);
  return sub_1000FC7D4(v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_1000FCA78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_10000B4C8(&qword_10054E388);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[10] = v7;
  v2[11] = v8;
  return swift_task_switch(sub_1000FCB34, v7, v8);
}

uint64_t sub_1000FCB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t Strong;
  _QWORD *v8;
  char *v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  sub_100011370(*(_QWORD *)(v0 + 16), v2, &qword_10054E388);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    swift_release(*(_QWORD *)(v0 + 72));
    sub_100011694(v3, &qword_10054E388);
    v4 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    *(_QWORD *)(v0 + 96) = Strong;
    v9 = (char *)&dword_100555B10 + dword_100555B10;
    v8 = (_QWORD *)swift_task_alloc(unk_100555B14);
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_1000FCC38;
    return ((uint64_t (*)(_QWORD, uint64_t))v9)(*(_QWORD *)(v0 + 64), Strong);
  }
}

uint64_t sub_1000FCC38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_1000FCD08;
  else
    v5 = sub_1000FCCA4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1000FCCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FCD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FCD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = sub_10000B4C8(&qword_10054E388);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (_QWORD *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v9 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v9 != 255)
    sub_1000B4784(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  return swift_deallocObject(v0, v5 + 72, v3 | 7);
}

uint64_t sub_1000FCE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054E388) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_10054E394);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000DC64;
  return sub_1000FCA78(v4, v5);
}

uint64_t sub_1000FCEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = sub_10000B4C8(&qword_10054E388);
  v3[12] = v4;
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10054C950);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000FCF90, 0, 0);
}

uint64_t sub_1000FCF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 120), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    sub_1000B0798(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    sub_100011370(v10, v9, &qword_10054E388);
    if (swift_getEnumCaseMultiPayload(v9, v8) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 104), &qword_10054E388);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = 1;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 112);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v15, v11);
      v13 = 0;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 56))(*(_QWORD *)(v0 + 112), v13, 1, v11);
    v16 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v16, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = sub_1000D2C58();
    *(_QWORD *)(inited + 40) = v18;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 152) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 160) = v19;
    *(_QWORD *)(v0 + 168) = v20;
    *(_WORD *)(v0 + 184) = v21;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v22 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v22);
    v23 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000FD1AC, v23, v24);
  }
}

uint64_t sub_1000FD1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(uint64_t **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 176));
  sub_1000D44DC(0xD000000000000014, 0x80000001004471A0, 5, 23, v5, v3, v2, v1, v6, v4);
  sub_1000B07DC(v3, v2, v1, v6, SBYTE1(v6));
  return swift_task_switch(sub_1000FD268, 0, 0);
}

uint64_t sub_1000FD268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054C950);
  sub_1000B0834(v1);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000FD2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  unint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_10000B4C8(&qword_10054E388);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v28 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v27 = *(_QWORD *)(v10 + 64);
  v12 = v0 + v3;
  v13 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
  {
    v25 = v8;
    v26 = v9;
    v14 = *(_QWORD *)(v12 + 8);
    if (v14 >= 0xA)
      swift_bridgeObjectRelease(v14);
    v15 = v12 + v13[5];
    v16 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v15, 1, v16))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
      v24 = v15 + v16[6];
      v17 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v17 - 8);
      v23 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v24, 1))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8]));
    v8 = v25;
    v9 = v26;
  }
  if (swift_getEnumCaseMultiPayload(v0 + v8, v5) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v8));
  }
  else
  {
    v18 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v0 + v8, v18);
  }
  v19 = (v8 + v28 + v11) & ~v11;
  v20 = v19 + v27;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v19, v9);
  return swift_deallocObject(v0, v20, v2 | v7 | v11 | 7);
}

uint64_t sub_1000FD520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_10054E388) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Album(0) - 8) + 80);
  v9 = v6 + v7 + v8;
  v10 = v0 + v3;
  v11 = v0 + v6;
  v12 = v0 + (v9 & ~v8);
  v13 = (_QWORD *)swift_task_alloc(dword_10054E3A4);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_100012D1C;
  return sub_1000FCEBC(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100502EA0, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_100502EC8, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_1000B020C;
}

uint64_t (*sub_1000FD674())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100502FC8, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_100502FF0, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_1000B0870;
}

uint64_t _s9MusicCore7ActionsO15OpenInClassicalO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100447180);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10054B9B0 != -1)
    swift_once(&qword_10054B9B0, sub_1000ABDCC);
  v10 = qword_100561480;
  static Locale.current.getter((id)qword_100561480);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000FD86C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t (*v24)();
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id result;
  unint64_t (**v48)();
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  unint64_t (*v52)();
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t (**v60)();
  uint64_t v61;
  uint64_t v62;
  id v63;

  v57 = a7;
  v58 = a8;
  v54 = a5;
  v55 = a6;
  v56 = a4;
  v51 = a2;
  v60 = a9;
  v62 = a12;
  v63 = a3;
  v59 = a10;
  v13 = *(_QWORD *)(a11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(a1);
  v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v50 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v50 = a1;
  v21((char *)&v50 - v19, a1, a11);
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = (v22 + 48) & ~v22;
  v61 = v22 | 7;
  v24 = (unint64_t (*)())swift_allocObject(&unk_100503030, v23 + v14, v22 | 7);
  v52 = v24;
  *((_QWORD *)v24 + 2) = a11;
  *((_QWORD *)v24 + 3) = a12;
  v25 = v63;
  *((_QWORD *)v24 + 4) = v51;
  *((_QWORD *)v24 + 5) = v25;
  v51 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v51((char *)v24 + v23, v20, a11);
  v21(v18, a1, a11);
  v26 = (v22 + 32) & ~v22;
  v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(&unk_100503058, v30 + 40, v61);
  v32 = v62;
  *(_QWORD *)(v31 + 16) = a11;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = v31 + v26;
  v34 = (void (*)(char *, uint64_t, uint64_t))v51;
  v51((char *)v33, v18, a11);
  *(_QWORD *)(v31 + v27) = v63;
  v35 = (_QWORD *)(v31 + v28);
  v37 = v55;
  v36 = v56;
  *v35 = v54;
  v35[1] = v37;
  v38 = (_QWORD *)(v31 + v29);
  v39 = v58;
  *v38 = v57;
  v38[1] = v39;
  sub_100011530(v36, v31 + v30, &qword_10054CD98);
  v40 = v53;
  v34(v53, v50, a11);
  v41 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (v42 + 32) & ~v42;
  v44 = (*(_QWORD *)(v41 + 64) + v22 + v43) & ~v22;
  v45 = swift_allocObject(&unk_100503080, v44 + v14, v61 | v42);
  v46 = v62;
  *(_QWORD *)(v45 + 16) = a11;
  *(_QWORD *)(v45 + 24) = v46;
  sub_100011530(v59, v45 + v43, &qword_10054CD28);
  v34((char *)(v45 + v44), (uint64_t)v40, a11);
  result = v63;
  v48 = v60;
  v49 = v52;
  *v60 = sub_1000FF578;
  v48[1] = v49;
  v48[2] = (unint64_t (*)())&unk_10054E3E8;
  v48[3] = (unint64_t (*)())v31;
  v48[4] = (unint64_t (*)())&unk_10054E3F8;
  v48[5] = (unint64_t (*)())v45;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB0D0(a1, 5, (uint64_t)sub_1000B0910, (uint64_t)&unk_10054E400, (uint64_t)&unk_10054E408, a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  unint64_t (**v67)();
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t);
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t (**v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[32];

  v84 = a8;
  v85 = a9;
  v81 = a6;
  v82 = a7;
  v78 = a4;
  v79 = a5;
  v77 = a2;
  v87 = a1;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v83 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v76 = (char *)&v69 - v16;
  v86 = v17;
  __chkstk_darwin(v15);
  v19 = (char *)&v69 - v18;
  v20 = sub_10000B4C8(&qword_10054E410);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v75 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  v28 = (void (**)(uint64_t, char *, uint64_t))((char *)&v69 - v27);
  v80 = a3;
  v29 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v29, v89, 0, 0);
  v30 = *v29;
  v88 = a11;
  if (v30)
  {
    swift_retain(v30);
    v31 = Player.state<A>(for:)(v87, a10, a11);
    swift_release(v30);
    MusicItemState.playabilityStatus.getter(v28);
    swift_release(v31);
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v28, 0, 1, v32);
  }
  else
  {
    v33 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 1, 1, v33);
  }
  sub_100011370((uint64_t)v28, (uint64_t)v26, &qword_10054E410);
  v70 = v28;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v34 = v87;
  v73(v19, v87, a10);
  v35 = *(unsigned __int8 *)(v21 + 80);
  v36 = *(unsigned __int8 *)(v12 + 80);
  v37 = (v35 + 32) & ~v35;
  v38 = (v22 + v36 + v37) & ~v36;
  v39 = v38 + v86;
  v71 = v36 | v35 | 7;
  v72 = v37;
  v40 = swift_allocObject(&unk_1005030A8, v38 + v86, v71);
  v41 = v88;
  *(_QWORD *)(v40 + 16) = a10;
  *(_QWORD *)(v40 + 24) = v41;
  v42 = v40 + v37;
  v43 = v40;
  v74 = v40;
  sub_100011530((uint64_t)v26, v42, &qword_10054E410);
  v69 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v69(v43 + v38, v19, a10);
  v44 = v75;
  sub_100011530((uint64_t)v70, v75, &qword_10054E410);
  v45 = v76;
  v73(v76, v34, a10);
  v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_1005030D0, v49 + 8, v71);
  v51 = v88;
  *(_QWORD *)(v50 + 16) = a10;
  *(_QWORD *)(v50 + 24) = v51;
  sub_100011530(v44, v50 + v72, &qword_10054E410);
  v52 = v45;
  v53 = (void (*)(char *, uint64_t, uint64_t))v69;
  v69(v50 + v38, v52, a10);
  v54 = v78;
  *(_QWORD *)(v50 + v46) = v77;
  v55 = (_QWORD *)(v50 + v47);
  v56 = v79;
  *v55 = v54;
  v55[1] = v56;
  v57 = (_QWORD *)(v50 + v48);
  v58 = v82;
  v59 = v83;
  *v57 = v81;
  v57[1] = v58;
  *(_QWORD *)(v50 + v49) = v80;
  v53(v59, v87, a10);
  v60 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v61 = *(unsigned __int8 *)(v60 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = (*(_QWORD *)(v60 + 64) + v36 + v62) & ~v36;
  v64 = swift_allocObject(&unk_1005030F8, v63 + v86, v36 | v61 | 7);
  v65 = v88;
  *(_QWORD *)(v64 + 16) = a10;
  *(_QWORD *)(v64 + 24) = v65;
  sub_100011530(v84, v64 + v62, &qword_10054CD28);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v53)(v64 + v63, v59, a10);
  v67 = v85;
  v68 = v74;
  *v85 = sub_1001042F8;
  v67[1] = (unint64_t (*)())v68;
  v67[2] = (unint64_t (*)())&unk_10054E420;
  v67[3] = (unint64_t (*)())v50;
  v67[4] = (unint64_t (*)())&unk_10054E430;
  v67[5] = (unint64_t (*)())v64;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB0D0(a1, 23, (uint64_t)sub_1000FC29C, (uint64_t)&unk_10054E438, (uint64_t)&unk_10054E440, a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  void *v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id result;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  char v90[32];

  v80 = a6;
  v81 = a7;
  v82 = a4;
  v88 = a2;
  v13 = a1;
  v78 = a9;
  v79 = a5;
  v15 = *(_QWORD *)(a11 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(a1);
  v83 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v21 = (char *)&v72 - v20;
  v77 = v22;
  v84 = a10;
  v85 = a8;
  v86 = v18;
  v87 = v23;
  if (v22 == (void *)3
    && (v24 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player),
        v19 = swift_beginAccess(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v90, 0, 0),
        (v25 = *v24) != 0))
  {
    v76 = v15;
    KeyPath = swift_getKeyPath(&unk_10042BB08);
    v27 = swift_getKeyPath(&unk_10042BB30);
    v28 = swift_retain(v25);
    static Published.subscript.getter(&v89, v28, KeyPath, v27);
    swift_release(v25);
    swift_release(KeyPath);
    v19 = swift_release(v27);
    v29 = v89;
    if (v89)
    {
      v30 = objc_msgSend(v89, "tracklist", v19.n128_f64[0]);

      v31 = objc_msgSend(v30, "insertCommand");
      if (v31)
      {
        v32 = objc_msgSend(v31, "insertAfterLastSection");
        swift_unknownObjectRelease(v31);
        if (v32)
        {
          v33 = objc_msgSend(v32, "section");
          swift_unknownObjectRelease(v32);
          v34 = objc_msgSend(v33, "metadataObject");

          if (v34)
          {
            v35 = objc_msgSend(v34, "flattenedGenericObject");

            v15 = v76;
            if (!v35)
              goto LABEL_20;
            v36 = objc_msgSend(v35, "anyObject");

            if (!v36)
              goto LABEL_20;
            objc_opt_self(MPModelAlbum);
            v37 = swift_dynamicCastObjCClass(v36);
            if (v37)
            {
              v38 = (void *)v37;
              v39 = v36;
              v40 = objc_msgSend(v38, "title");
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              v66 = swift_dynamicCastObjCClass(v36);
              if (!v66)
              {

                goto LABEL_20;
              }
              v67 = (void *)v66;
              v39 = v36;
              v40 = objc_msgSend(v67, "name");
            }
            v68 = v40;
            if (v68)
            {
              v69 = v68;
              v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
              v72 = v71;
              v73 = v70;

LABEL_21:
              v13 = v86;
              goto LABEL_13;
            }

LABEL_20:
            v72 = 0;
            v73 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    v72 = 0;
    v73 = 0;
    v13 = v86;
    v15 = v76;
  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v21, v13, a11, v19);
  v41 = *(unsigned __int8 *)(v15 + 80);
  v42 = (v41 + 40) & ~v41;
  v74 = v41 | 7;
  v76 = v16 + 7;
  v43 = (v16 + 7 + v42) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)swift_allocObject(&unk_100503120, v44 + 8, v41 | 7);
  v45[2] = a11;
  v45[3] = a12;
  v75 = a12;
  v46 = v87;
  v45[4] = v87;
  v47 = (char *)v45 + v42;
  v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v48(v47, v21, a11);
  v49 = v77;
  *(_QWORD *)((char *)v45 + v43) = v77;
  v50 = v88;
  *(_QWORD *)((char *)v45 + v44) = v88;
  v51 = (_QWORD *)swift_allocObject(&unk_100503148, 112, 7);
  v52 = v79;
  v51[2] = v50;
  v51[3] = v52;
  v53 = v81;
  v51[4] = v80;
  v51[5] = v53;
  v51[6] = v78;
  v51[7] = v46;
  v51[8] = v49;
  sub_100011530(v82, (uint64_t)(v51 + 9), &qword_10054CD98);
  v54 = v83;
  v48(v83, (char *)v86, a11);
  v55 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v58) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_100503170, v59 + 8, v74 | v56);
  v61 = v75;
  *(_QWORD *)(v60 + 16) = a11;
  *(_QWORD *)(v60 + 24) = v61;
  sub_100011530(v84, v60 + v57, &qword_10054CD28);
  v48((char *)(v60 + v58), v54, a11);
  *(_QWORD *)(v60 + v59) = v49;
  sub_1000F3528(v49);
  sub_1000F3528(v49);
  sub_1000F3528(v49);
  v62 = v87;
  result = v88;
  v64 = v85;
  v65 = v73;
  *v85 = v49;
  v64[1] = v65;
  v64[2] = v72;
  v64[3] = sub_1001046F4;
  v64[4] = v45;
  v64[5] = &unk_10054E450;
  v64[6] = v51;
  v64[7] = &unk_10054E460;
  v64[8] = v60;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[8];
  uint64_t v8;

  sub_100104E08(a1, (uint64_t)v7);
  v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(_QWORD *)(a2 + 128) = v8;
  v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v15 = swift_allocObject(&unk_100503198, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(_QWORD *)(a7 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v18 + *(_QWORD *)(v16 + 64) + v20) & ~v20;
  v22 = swift_allocObject(&unk_1005031C0, v21 + *(_QWORD *)(v19 + 64), v17 | v20 | 7);
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = a8;
  sub_100011530(a6, v22 + v18, &qword_10054CD28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v21, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &unk_10054CF20;
  a9[3] = v15;
  a9[4] = &unk_10054E470;
  a9[5] = v22;
  return result;
}

uint64_t sub_1000FE64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000FE6F8, 0, 0);
}

uint64_t sub_1000FE6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000DB44(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000FE8B8, v18, v19);
  }
}

uint64_t sub_1000FE8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FC2A4, 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB0D0(a1, 36, (uint64_t)sub_1000FC29C, (uint64_t)&unk_10054E478, (uint64_t)&unk_10054E480, a2);
}

uint64_t sub_1000FE9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB164(a1, 36, (uint64_t)sub_1000FC29C, (uint64_t)&unk_10054E478, (uint64_t)&unk_10054E480, a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1005031E8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_100503210, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_1000B020C;
}

uint64_t (*sub_1000FEA54())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100503780, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_1005037A8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_1000B0870;
}

uint64_t sub_1000FEADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB164(a1, 5, (uint64_t)sub_1000B0910, (uint64_t)&unk_10054E400, (uint64_t)&unk_10054E408, a2);
}

unint64_t sub_1000FEAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  Swift::String v32;
  _QWORD v34[11];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];

  v40 = a3;
  v7 = type metadata accessor for Artist(0);
  __chkstk_darwin(v7);
  v35 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v34[10] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34[9] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v37 - 8);
  v9 = __chkstk_darwin(v37);
  v10 = __chkstk_darwin(v9);
  v34[8] = (char *)v34 - v11;
  v12 = __chkstk_darwin(v10);
  v41 = a4;
  v39 = *(_QWORD *)(a4 - 8);
  v13 = __chkstk_darwin(v12);
  v38 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)v34 - v15;
  type metadata accessor for MusicLibrary(0);
  v17 = static MusicLibrary.shared.getter();
  v18 = static MusicLibrary.== infix(_:_:)(a1, v17);
  swift_release(v17);
  if ((v18 & 1) == 0)
    return 0xD000000000000016;
  v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v20 = swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v53, 0, 0);
  v21 = *v19;
  if (*v19)
  {
    v22 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16))(v16, v40, v41, v20);
    swift_retain(v21);
    v23 = sub_10000B4C8(&qword_10054D6C0);
    if ((swift_dynamicCast(v42, v16, v22, v23, 6) & 1) != 0)
    {
      sub_1000B47A8(v42, (uint64_t)&v50);
      v24 = v51;
      v25 = v52;
      sub_10000D900(&v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
        v34[7] = v21;
        if (qword_10054BA98 != -1)
          swift_once(&qword_10054BA98, sub_100154564);
        v28 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_10042BC30);
        v30 = swift_getKeyPath(&unk_10042BC58);
        static Published.subscript.getter(v42, v28, KeyPath, v30);
        swift_release(KeyPath);
        swift_release(v30);
        v34[3] = v43;
        v34[5] = v44;
        v34[6] = v45;
        v34[4] = v46;
        v34[2] = v48;
        v34[1] = v49;
        __asm { BR              X10 }
      }
      sub_100011758(&v50);
    }
    else
    {
      v43 = 0;
      memset(v42, 0, sizeof(v42));
      sub_100011694((uint64_t)v42, (uint64_t *)&unk_100553500);
    }
    swift_release(v21);
    return 0xD00000000000001DLL;
  }
  else
  {
    *(_QWORD *)&v42[0] = 0;
    *((_QWORD *)&v42[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x8000000100447400;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, v41);
    return *(_QWORD *)&v42[0];
  }
}

uint64_t sub_1000FF504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1000FF578()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000FEAFC(v0[4], v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1000FF598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  unint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v18 = 0;
    v19 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v5, &v18, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11 = v18;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (qword_10054B9D0 != -1)
      swift_once(&qword_10054B9D0, sub_100127138);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_10000D78C(v12, (uint64_t)static Logger.actions);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.fault.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unknown playability status", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v18 = 0;
    v19 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v1, &v18, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v11;
}

uint64_t sub_1000FF7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[46] = v10;
  v8[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[48] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[49] = swift_task_alloc(v12);
  v8[50] = swift_task_alloc(v12);
  v13 = sub_10000B4C8(&qword_10054E568);
  v8[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v8[52] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[53] = v15;
  v8[54] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice.Variant(0);
  v8[55] = v16;
  v8[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_10054CE88);
  v8[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  v8[59] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[60] = swift_task_alloc(v20);
  v8[61] = swift_task_alloc(v20);
  v21 = type metadata accessor for Song(0);
  v8[62] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[63] = v22;
  v8[64] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000FF998, 0, 0);
}

uint64_t sub_1000FF998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  unint64_t v35;
  NSString v36;
  Class v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSString v61;
  uint64_t v62;
  void *v63;
  Class isa;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
  v6(v3, *(_QWORD *)(v0 + 304), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) == 0)
  {
    v38 = *(_QWORD *)(v0 + 464);
    v8(v38, 1, 1, *(_QWORD *)(v0 + 496));
    sub_100011694(v38, &qword_10054CE88);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v0 + 504);
  v9 = *(_QWORD *)(v0 + 512);
  v11 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 464);
  v13 = *(_QWORD *)(v0 + 312);
  v8(v12, 0, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
  v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v15 = swift_beginAccess(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 256, 0, 0);
  v16 = *v14;
  if (!*v14)
    goto LABEL_15;
  KeyPath = swift_getKeyPath(&unk_10042BB08);
  v18 = swift_getKeyPath(&unk_10042BB30);
  v19 = swift_retain(v16);
  static Published.subscript.getter((_QWORD *)(v0 + 280), v19, KeyPath, v18);
  swift_release(v18);
  swift_release(KeyPath);
  v15 = swift_release(v16);
  v20 = *(void **)(v0 + 280);
  if (!v20)
    goto LABEL_15;
  MPCPlayerResponse.playState(for:)(*(_QWORD *)(v0 + 512), v15);
  v22 = v21;

  if ((v22 & 1) != 0)
    goto LABEL_15;
  v23 = *v14;
  if (!*v14)
    goto LABEL_15;
  v24 = swift_getKeyPath(&unk_10042BB08);
  v25 = swift_getKeyPath(&unk_10042BB30);
  v26 = swift_retain(v23);
  static Published.subscript.getter((_QWORD *)(v0 + 288), v26, v24, v25);
  swift_release(v25);
  swift_release(v24);
  v15 = swift_release(v23);
  v27 = *(void **)(v0 + 288);
  if (!v27)
    goto LABEL_15;
  v28 = objc_msgSend(*(id *)(v0 + 288), "tracklist", v15.n128_f64[0]);

  v29 = objc_msgSend(v28, "playingItem");
  if (!v29)
    goto LABEL_15;
  v30 = objc_msgSend(v29, "metadataObject");

  if (!v30)
    goto LABEL_15;
  v31 = objc_msgSend(v30, "innermostModelObject");
  *(_QWORD *)(v0 + 520) = v31;

  objc_opt_self(MPModelSong);
  v32 = swift_dynamicCastObjCClass(v31);
  if (!v32)
  {

LABEL_15:
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496), v15);
    goto LABEL_16;
  }
  v33 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "radioPlaybackIntentFromSong:", v32);
  *(_QWORD *)(v0 + 528) = v33;
  if (!v33)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

LABEL_16:
    v39 = *(_QWORD *)(v0 + 480);
    v40 = *(_QWORD *)(v0 + 360);
    v6(v39, *(_QWORD *)(v0 + 304), v40);
    v41 = sub_10000B4C8(&qword_10054E570);
    if ((swift_dynamicCast(v0 + 56, v39, v40, v41, 6) & 1) != 0)
    {
      sub_1000B47A8((__int128 *)(v0 + 56), v0 + 16);
      sub_1000C53BC(v0 + 16, v0 + 96);
      MusicPlaybackIntentDescriptor.init(stationSeed:)(v0 + 96);
      v53 = *(_QWORD *)(v0 + 424);
      v52 = *(_QWORD *)(v0 + 432);
      v55 = *(_QWORD *)(v0 + 408);
      v54 = *(_QWORD *)(v0 + 416);
      v57 = *(_QWORD *)(v0 + 336);
      v56 = *(_QWORD *)(v0 + 344);
      v58 = *(_QWORD *)(v0 + 328);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v54);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v55, v54);
      v59 = swift_bridgeObjectRetain();
      v60 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v59);
      v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v58);
      objc_msgSend(v60, "setPlayActivityFeatureName:", v61);

      v62 = sub_1000F2394(v57, v56);
      v63 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v62);
      if (v56 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        v65 = *(_QWORD *)(v0 + 336);
        v66 = *(_QWORD *)(v0 + 344);
        sub_10003A5E4(v65, v66);
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_10009FCF0(v65, v66);
      }
      v67 = *(_QWORD *)(v0 + 424);
      v68 = *(_QWORD *)(v0 + 416);
      v69 = *(_QWORD *)(v0 + 392);
      v78 = *(_QWORD *)(v0 + 432);
      v80 = *(_QWORD *)(v0 + 400);
      v70 = *(_QWORD *)(v0 + 376);
      v71 = *(int **)(v0 + 384);
      v77 = *(_QWORD *)(v0 + 368);
      v72 = *(_QWORD *)(v0 + 336);
      v73 = *(_QWORD *)(v0 + 344);
      objc_msgSend(v63, "setPlayActivityRecommendationData:", isa);
      sub_10009FCF0(v72, v73);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v70, v78, v68);
      swift_storeEnumTagMultiPayload(v70, v77, 1);
      *(_QWORD *)(v0 + 168) = 0;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      v74 = v69 + v71[7];
      *(_QWORD *)(v74 + 32) = 0;
      *(_OWORD *)v74 = 0u;
      *(_OWORD *)(v74 + 16) = 0u;
      *(_BYTE *)(v69 + v71[8]) = 0;
      *(_BYTE *)(v69 + v71[9]) = 0;
      sub_1001053FC(v70, v69);
      sub_100105440(v0 + 136, v74);
      *(_QWORD *)(v69 + v71[5]) = 2;
      *(_QWORD *)(v69 + v71[6]) = 1;
      sub_100011694(v0 + 136, &qword_1005528B0);
      sub_10000E750(v70, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      sub_10000DB44(v69, v80, type metadata accessor for PlaybackIntentDescriptor);
      v75 = (_QWORD *)swift_task_alloc(dword_100552544);
      *(_QWORD *)(v0 + 584) = v75;
      *v75 = v0;
      v75[1] = sub_10010045C;
      return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 400), 0);
    }
    else
    {
      *(_QWORD *)(v0 + 88) = 0;
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      sub_100011694(v0 + 56, &qword_10054E578);
      v42 = *(_QWORD *)(v0 + 480);
      v43 = *(_QWORD *)(v0 + 488);
      v45 = *(_QWORD *)(v0 + 456);
      v44 = *(_QWORD *)(v0 + 464);
      v46 = *(_QWORD *)(v0 + 448);
      v47 = *(_QWORD *)(v0 + 432);
      v49 = *(_QWORD *)(v0 + 400);
      v48 = *(_QWORD *)(v0 + 408);
      v50 = *(_QWORD *)(v0 + 392);
      v79 = *(_QWORD *)(v0 + 376);
      swift_task_dealloc(*(_QWORD *)(v0 + 512));
      swift_task_dealloc(v43);
      swift_task_dealloc(v42);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v79);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v34 = v33;
  v35 = *(_QWORD *)(v0 + 344);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setPlayActivityFeatureName:", v36);

  if (v35 >> 60 == 15)
    v37 = 0;
  else
    v37 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "setPlayActivityRecommendationData:", v37);

  v76 = (_QWORD *)swift_task_alloc(dword_10055250C);
  *(_QWORD *)(v0 + 536) = v76;
  *v76 = v0;
  v76[1] = sub_1001000C4;
  return PlaybackController.insert(_:location:)((uint64_t)v34, 0);
}

uint64_t sub_1001000C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100100814;
  else
    v3 = sub_100100128;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100100128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_100011370(*(_QWORD *)(v0 + 352), v0 + 176, &qword_10054CD98);
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 552) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 568) = sub_10000D900((_QWORD *)(v0 + 176), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_10000E750(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_1001002EC, v5, v6);
  }
  else
  {
    v8 = *(void **)(v0 + 528);
    v9 = *(void **)(v0 + 520);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

    sub_100011694(v0 + 176, &qword_10054CD98);
    v10 = *(_QWORD *)(v0 + 480);
    v11 = *(_QWORD *)(v0 + 488);
    v13 = *(_QWORD *)(v0 + 456);
    v12 = *(_QWORD *)(v0 + 464);
    v14 = *(_QWORD *)(v0 + 448);
    v15 = *(_QWORD *)(v0 + 432);
    v17 = *(_QWORD *)(v0 + 400);
    v16 = *(_QWORD *)(v0 + 408);
    v18 = *(_QWORD *)(v0 + 392);
    v19 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v11);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001002EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[70];
  v2 = v0[69];
  v3 = v0[57];
  swift_release(v0[72]);
  sub_1001250B8(v3, 0, v2, v1);
  sub_10000E750(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_100100364, 0, 0);
}

uint64_t sub_100100364()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100011758((_QWORD *)(v0 + 176));
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 448);
  v10 = *(_QWORD *)(v0 + 432);
  v12 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010045C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100100A7C;
  else
    v3 = sub_1001004C0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001004C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_100011370(*(_QWORD *)(v0 + 352), v0 + 216, &qword_10054CD98);
  v1 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 600) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 616) = sub_10000D900((_QWORD *)(v0 + 216), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_10000E750(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 624) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_100100698, v5, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 424);
    v8 = *(_QWORD *)(v0 + 432);
    v10 = *(_QWORD *)(v0 + 416);
    sub_10000E750(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_100011758((_QWORD *)(v0 + 16));
    sub_100011694(v0 + 216, &qword_10054CD98);
    v11 = *(_QWORD *)(v0 + 480);
    v12 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 456);
    v13 = *(_QWORD *)(v0 + 464);
    v15 = *(_QWORD *)(v0 + 448);
    v16 = *(_QWORD *)(v0 + 432);
    v18 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100100698()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[76];
  v2 = v0[75];
  v3 = v0[57];
  swift_release(v0[78]);
  sub_1001250B8(v3, 0, v2, v1);
  sub_10000E750(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_100100710, 0, 0);
}

uint64_t sub_100100710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_10000E750(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100011758((_QWORD *)(v0 + 16));
  sub_100011758((_QWORD *)(v0 + 216));
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 464);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 392);
  v14 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100100814()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(_QWORD *)(v0 + 544);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v6 = type metadata accessor for Logger(0);
  sub_10000D78C(v6, (uint64_t)static Logger.actions);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v27 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 296) = v5;
    swift_errorRetain(v5);
    v12 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v13 = (char *)String.init<A>(describing:)(v0 + 296, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_1000BA30C(v13, v14, &v27);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to Create Station with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  v16 = *(_QWORD *)(v0 + 480);
  v17 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 456);
  v18 = *(_QWORD *)(v0 + 464);
  v20 = *(_QWORD *)(v0 + 448);
  v21 = *(_QWORD *)(v0 + 432);
  v23 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 392);
  v26 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100100A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_10000E750(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100011758((_QWORD *)(v0 + 16));
  v4 = *(_QWORD *)(v0 + 592);
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v5 = type metadata accessor for Logger(0);
  sub_10000D78C(v5, (uint64_t)static Logger.actions);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 296) = v4;
    swift_errorRetain(v4);
    v11 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v12 = (char *)String.init<A>(describing:)(v0 + 296, v11);
    v14 = v13;
    *(_QWORD *)(v9 + 4) = sub_1000BA30C(v12, v13, &v26);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to Create Station with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  v15 = *(_QWORD *)(v0 + 480);
  v16 = *(_QWORD *)(v0 + 488);
  v18 = *(_QWORD *)(v0 + 456);
  v17 = *(_QWORD *)(v0 + 464);
  v19 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 432);
  v22 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v23 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100100CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v8 = *(_QWORD *)(v0 + v6 + 8);
  if (v8 >> 60 != 15)
    sub_10003A628(*(_QWORD *)(v0 + v6), v8);
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_100011758((_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 40, v2 | 7);
}

uint64_t sub_100100DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = *(_QWORD *)(v0 + v5);
  v10 = *(_QWORD *)(v0 + v6);
  v11 = *(_QWORD *)(v0 + v6 + 8);
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v7 + 8);
  v14 = v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)swift_task_alloc(dword_10054E3E4);
  *(_QWORD *)(v1 + 16) = v15;
  *v15 = v1;
  v15[1] = sub_10000DC64;
  return sub_1000FF7EC(v8, v9, v10, v11, v12, v13, v14, v2);
}

uint64_t sub_100100E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100100F38, 0, 0);
}

uint64_t sub_100100F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100011370(*(_QWORD *)(v0 + 96), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 136), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10000DB44(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 4;
    *(_QWORD *)(v0 + 184) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100101104, v18, v19);
  }
}

uint64_t sub_100101104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1000D44DC(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FAC68, 0, 0);
}

uint64_t sub_1001011D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_10000B4C8(&qword_10054CD28) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10054E3F4);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_100012D1C;
  return sub_100100E8C(v7, v8, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return sub_1000FAD80(0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100503238, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x8000000100447220;
  v1 = swift_allocObject(&unk_100503260, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x8000000100447220;
  return sub_1000B0870;
}

uint64_t sub_10010131C(uint64_t a1, uint64_t a2)
{
  return sub_1000FAF44(a1, a2, 0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*sub_100101340())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100503730, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x8000000100447220;
  v1 = swift_allocObject(&unk_100503758, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x8000000100447220;
  return sub_1000B0870;
}

uint64_t sub_1001013C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB164(a1, 23, (uint64_t)sub_1000FC29C, (uint64_t)&unk_10054E438, (uint64_t)&unk_10054E440, a2);
}

uint64_t sub_1001013E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_100101404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 40);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100012D1C;
  return v6();
}

uint64_t sub_100101458(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 56);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100012D1C;
  return v5();
}

__n128 sub_1001014AC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[8];
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  v12 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_100104E08((uint64_t *)v11, (uint64_t)v9);
  v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(_QWORD *)(a2 + 128) = v10;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t sub_100101530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  Swift::String v28;
  void *object;
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  int v39;
  char *v40;
  Swift::String v41;
  void *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  char *v49;
  Swift::String v50;
  void *v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v60 = a4;
  v61 = a2;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  v7 = __chkstk_darwin(v6);
  v55 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v57 = (char *)&v54 - v10;
  v11 = __chkstk_darwin(v9);
  v56 = (char *)&v54 - v12;
  v13 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_10054E410);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v54 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v54 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v54 - v26;
  sub_100011370(a1, (uint64_t)v18, &qword_10054E410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100011694((uint64_t)v18, &qword_10054E410);
    v62 = 0;
    v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease(v63);
    v62 = 0xD000000000000022;
    v63 = 0x8000000100447370;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v61, a3);
    v28._countAndFlagsBits = String.init<A>(describing:)(v15, a3);
    object = v28._object;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(object);
    return v62;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((sub_100101AB4(v61, a3) & 1) == 0)
  {
    v30 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v30;
  }
  v31 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v32 = v25;
  v31(v25, v27, v19);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v33 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v34 = v58;
    v35 = v59;
    v36 = v56;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v56, v25, v59);
    v37 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v38 = v57;
    v37(v57, v36, v35);
    v39 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v38, v35);
    if (v39 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v39 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v62 = 0;
      v63 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease(v63);
      v62 = 0xD000000000000018;
      v63 = 0x80000001004473C0;
      v40 = v55;
      v37(v55, v36, v35);
      v41._countAndFlagsBits = String.init<A>(describing:)(v40, v35);
      v42 = v41._object;
      String.append(_:)(v41);
      swift_bridgeObjectRelease(v42);
      v30 = v62;
      v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      v43(v36, v35);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      v43(v38, v35);
      return v30;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v33 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    goto LABEL_16;
  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_10000D78C(v44, (uint64_t)static Logger.actions);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.fault.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Unknown playability status", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

  v62 = 0;
  v63 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v63);
  v62 = 0xD000000000000010;
  v63 = 0x80000001004473A0;
  v49 = v54;
  v31(v54, v27, v19);
  v50._countAndFlagsBits = String.init<A>(describing:)(v49, v19);
  v51 = v50._object;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v51);
  v30 = v62;
  v52 = *(void (**)(char *, uint64_t))(v20 + 8);
  v52(v27, v19);
  v52(v32, v19);
  return v30;
}

uint64_t sub_100101AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v24 = type metadata accessor for Station(0);
  v22 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast(v13, v16, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast(v8, v16, a2, v5, 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v18 = v23;
    v17 = v24;
    if (!swift_dynamicCast(v23, v16, a2, v24, 0))
    {
      v19 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v17);
  }
  v19 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v19;
}

uint64_t sub_100101C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[21] = v17;
  v8[22] = v18;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[23] = v9;
  v8[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[25] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[26] = swift_task_alloc(v11);
  v8[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[29] = v13;
  v8[30] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_10054E558);
  v8[31] = v14;
  v8[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054E410) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v15);
  v8[34] = swift_task_alloc(v15);
  return swift_task_switch(sub_100101DC0, 0, 0);
}

uint64_t sub_100101DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  void *v35;
  NSString v36;
  Class isa;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v7 = v3 + *(int *)(v2 + 48);
  sub_100011370(v6, v3, &qword_10054E410);
  sub_100011370(v1, v7, &qword_10054E410);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v8(v3, 1, v4) != 1)
  {
    v10 = *(_QWORD *)(v0 + 224);
    sub_100011370(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), &qword_10054E410);
    v11 = v8(v7, 1, v10);
    v12 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 272);
    if (v11 != 1)
    {
      v27 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 232);
      v28 = *(_QWORD *)(v0 + 240);
      v30 = *(_QWORD *)(v0 + 224);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v7, v30);
      v31 = sub_10001254C(&qword_10054E560, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&protocol conformance descriptor for MusicPlayer.PlayabilityStatus);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v28, v30, v31);
      v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v33(v28, v30);
      sub_100011694(v13, &qword_10054E410);
      v33(v12, v30);
      sub_100011694(v27, &qword_10054E410);
      if ((v32 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 40) = v17;
      *(_QWORD *)(v0 + 48) = *(_QWORD *)(v16 + 8);
      v19 = sub_1000C16E0((_QWORD *)(v0 + 16));
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v19, v18, v17);
      *(_BYTE *)(v0 + 56) = 0;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 16);
      sub_1000B5908(v0 + 16);
      v20 = *(_QWORD *)(v0 + 264);
      v21 = *(_QWORD *)(v0 + 256);
      v22 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 208);
      v23 = *(_QWORD *)(v0 + 216);
      v25 = *(_QWORD *)(v0 + 192);
      swift_task_dealloc(*(_QWORD *)(v0 + 272));
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 232);
    sub_100011694(*(_QWORD *)(v0 + 272), &qword_10054E410);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_100011694(*(_QWORD *)(v0 + 256), &qword_10054E558);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(v0 + 224);
  sub_100011694(*(_QWORD *)(v0 + 272), &qword_10054E410);
  if (v8(v7, 1, v9) != 1)
    goto LABEL_6;
  sub_100011694(*(_QWORD *)(v0 + 256), &qword_10054E410);
LABEL_9:
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(void **)(v0 + 120);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setPlayActivityFeatureName:", v36);

  if (v34 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD **)(v0 + 192);
  v39 = *(int **)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(void **)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 112);
  v50 = *(_QWORD *)(v0 + 216);
  objc_msgSend(v44, "setPlayActivityRecommendationData:", isa);

  *v40 = v44;
  swift_storeEnumTagMultiPayload(v40, v41, 0);
  *(_QWORD *)(v0 + 88) = v43;
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v42 + 8);
  v45 = sub_1000C16E0((_QWORD *)(v0 + 64));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v45, v49, v43);
  v46 = v38 + v39[7];
  *(_QWORD *)(v46 + 32) = 0;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
  *(_BYTE *)(v38 + v39[8]) = 0;
  *(_BYTE *)(v38 + v39[9]) = 0;
  sub_1001053FC((uint64_t)v40, v38);
  v47 = v44;
  sub_100105440(v0 + 64, v46);
  *(_QWORD *)(v38 + v39[5]) = 2;
  *(_QWORD *)(v38 + v39[6]) = 0;
  sub_100011694(v0 + 64, &qword_1005528B0);
  sub_10000E750((uint64_t)v40, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_10000DB44(v38, v50, type metadata accessor for PlaybackIntentDescriptor);
  v48 = (_QWORD *)swift_task_alloc(dword_100552544);
  *(_QWORD *)(v0 + 280) = v48;
  *v48 = v0;
  v48[1] = sub_100102200;
  return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 216), 0);
}

uint64_t sub_100102200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 280));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_100105E34;
  }
  else
  {
    v2 = sub_10010226C;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010226C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10000E750(*(_QWORD *)(v0 + 216), type metadata accessor for PlaybackIntentDescriptor);
  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100102300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_10000B4C8(&qword_10054C950);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054CD28);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001023AC, 0, 0);
}

uint64_t sub_1001023AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000DB44(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_10000B4C8(&qword_10054CD70);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100424BB0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1000D40CC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100102570, v18, v19);
  }
}

uint64_t sub_100102570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_1000D44DC(v5, v4, 5, 24, v7, v3, v2, v1, v8, v6);
  sub_1000B07DC(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_1000FB60C, 0, 0);
}

uint64_t sub_100102640(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t DynamicType;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unint64_t v37;
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];

  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v16, v40, 0, 0);
  v17 = *v16;
  if (!v17)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    v29._countAndFlagsBits = 0xD000000000000025;
    v29._object = (void *)0x8000000100447310;
    String.append(_:)(v29);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(a2, a5);
    return (uint64_t)v36;
  }
  v33 = a6;
  v34 = a5;
  v38 = &type metadata for Player.InsertCommand;
  v39 = &protocol witness table for Player.InsertCommand;
  v36 = a4;
  v37 = (unint64_t)a3;
  v18 = sub_10000D900(&v36, (uint64_t)&type metadata for Player.InsertCommand);
  DynamicType = swift_getDynamicType(v18, &type metadata for Player.InsertCommand, 1);
  v20 = (uint64_t)v39;
  v21 = a4;
  sub_1000F3528(a3);
  v22 = v21;
  sub_1000F3528(a3);
  v23 = v22;
  sub_1000F3528(a3);
  swift_retain(v17);
  v24 = sub_100218AB0(DynamicType, v20);
  if (!v24)
  {
    sub_100011758(&v36);

    sub_1000F32C4(a3);
    goto LABEL_7;
  }
  v25 = (void *)v24;
  v26 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v36);

  sub_100011758(&v36);
  sub_1000F32C4(a3);
  if (!v26)
  {
LABEL_7:
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v30._object = (void *)0x8000000100447340;
    v30._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v30);
    v35 = a3;
    _print_unlocked<A, B>(_:_:)(&v35, &v36, &type metadata for Player.InsertCommand.Location, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);

    sub_1000F32C4(a3);
    swift_release(v17);
    return (uint64_t)v36;
  }
  v27 = Player.state<A>(for:)(a2, v34, v33);
  MusicItemState.playabilityStatus.getter(v15);
  swift_release(v27);
  v28 = sub_1000FF598();

  swift_release(v17);
  sub_1000F32C4(a3);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  return v28;
}

uint64_t sub_1001028F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = type metadata accessor for Notice(0);
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100102954, 0, 0);
}

uint64_t sub_100102954()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  NSString v3;
  Class isa;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 64);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setPlayActivityFeatureName:", v3);

  if (v1 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(*(id *)(v0 + 64), "setPlayActivityRecommendationData:", isa);

  v5 = (_QWORD *)swift_task_alloc(dword_10055250C);
  *(_QWORD *)(v0 + 136) = v5;
  *v5 = v0;
  v5[1] = sub_100102A14;
  return PlaybackController.insert(_:location:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100102A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100102C14;
  else
    v3 = sub_100102A78;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100102A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100011370(*(_QWORD *)(v0 + 120), v0 + 16, &qword_10054CD98);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 168) = sub_10000D900((_QWORD *)(v0 + 16), v1);
    Player.InsertCommand.Location.notice.getter(v2);
    v3 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v3);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_100102B68, v4, v5);
  }
  else
  {
    sub_100011694(v0 + 16, &qword_10054CD98);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100102B68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[16];
  swift_release(v0[22]);
  sub_1001250B8(v3, 0, v2, v1);
  sub_10000E750(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_100102BD8, 0, 0);
}

uint64_t sub_100102BD8()
{
  uint64_t v0;

  sub_100011758((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100102C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v15;

  if (qword_10054B9D0 != -1)
    swift_once(&qword_10054B9D0, sub_100127138);
  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for Logger(0);
  sub_10000D78C(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 144);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 56) = v7;
    swift_errorRetain(v7);
    v10 = sub_10000B4C8((uint64_t *)&unk_100550630);
    v11 = (char *)String.init<A>(describing:)(v0 + 56, v10);
    v13 = v12;
    *(_QWORD *)(v8 + 4) = sub_1000BA30C(v11, v12, &v15);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform add to queue with error=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.InsertCommand.Location.notice.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) >= 3)
    v6 = 3;
  else
    v6 = (a1 + 3);
  swift_storeEnumTagMultiPayload(v5, v3, v6);
  static Notice.variant(_:)((uint64_t)v5);
  return sub_10000E750((uint64_t)v5, type metadata accessor for Notice.Variant);
}

uint64_t sub_100102E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = sub_10000B4C8(&qword_10054C950);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10054CD28);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[17] = v9;
  v5[18] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100102F34, 0, 0);
}

uint64_t sub_100102F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_100011370(*(_QWORD *)(v0 + 72), v3, &qword_10054CD28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 120), &qword_10054CD28);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000DB44(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 152) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(_QWORD *)(v0 + 160) = v9;
    if (v8 >= 4)
    {
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001004472F0, "MusicCore/Actions+Playback.swift", 32, 2, 443, 0);
    }
    else
    {
      *(_BYTE *)(v0 + 202) = 0x19041A1Bu >> (8 * v8);
      v10 = *(_QWORD *)(v0 + 112);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
      v13 = sub_10000B4C8(&qword_10054CD70);
      inited = swift_initStackObject(v13, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100424BB0;
      *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v11);
      *(_QWORD *)(inited + 40) = v15;
      *(_BYTE *)(inited + 48) = 0;
      *(_QWORD *)(v0 + 168) = sub_1000D40CC(inited);
      *(_QWORD *)(v0 + 176) = v16;
      *(_QWORD *)(v0 + 184) = v17;
      *(_WORD *)(v0 + 200) = v18;
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      return swift_task_switch(sub_100103180, v20, v21);
    }
  }
}

uint64_t sub_100103180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int8 *)(v0 + 202);
  v9 = *(unsigned __int16 *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 192));
  sub_1000D44DC(v5, v4, 5, v8, v7, v3, v2, v1, v9, v6);
  sub_1000B07DC(v3, v2, v1, v9, SBYTE1(v9));
  swift_bridgeObjectRelease(v4);
  sub_100011694(v7, &qword_10054C950);
  return swift_task_switch(sub_100103258, 0, 0);
}

uint64_t sub_100103258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000E750(*(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Play.Context.menuItemTitle.getter()
{
  return sub_1000FAD80(2036427856, 0xE400000000000000);
}

uint64_t (*Actions.Play.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100503288, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1005032B0, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_1000B0870;
}

uint64_t sub_100103338(uint64_t a1, uint64_t a2)
{
  return sub_1000FAF44(a1, a2, 2036427856, 0xE400000000000000);
}

uint64_t (*sub_100103348())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1005036E0, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100503708, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_1000B0870;
}

uint64_t Actions.Queue.Context.menuItemTitle.getter()
{
  uint64_t *v0;

  return sub_100104AC8(*v0);
}

uint64_t Actions.Queue.Context.menuItemSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t (*Actions.Queue.Context.menuItemImage.getter())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_1000F3260(v0, &v6);
  sub_1000F3260(&v6, &v7);
  if (v7)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (v7)
    v2 = 0x8000000100447240;
  else
    v2 = 0x8000000100447270;
  v3 = swift_allocObject(&unk_1005032D8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_100503300, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_1000B0870;
}

uint64_t (*sub_1001034C8())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*v0)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (*v0)
    v2 = 0x8000000100447240;
  else
    v2 = 0x8000000100447270;
  v3 = swift_allocObject(&unk_100503690, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1005036B8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain(v2);
  return sub_1000B0870;
}

uint64_t sub_10010358C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10042BB08);
  v5 = swift_getKeyPath(&unk_10042BB30);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100103608(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10042BB08);
  v5 = swift_getKeyPath(&unk_10042BB30);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

double sub_10010367C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10010386C();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001036D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v17[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    v12 = dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    __chkstk_darwin(v12);
    v13 = type metadata accessor for Song(0);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    KeyPath = swift_getKeyPath(&unk_10042BCD0);
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    v15 = swift_getKeyPath(&unk_10042BD08);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    swift_retain(v11);
    static Published.subscript.setter(v7, v11, KeyPath, v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return swift_release(v11);
  }
  return result;
}

