uint64_t LyricsLoader.loadLyrics(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[62] = a1;
  v2[63] = v1;
  v3 = type metadata accessor for String.Encoding(0);
  v2[64] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[65] = v4;
  v2[66] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v2[67] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[68] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[69] = swift_task_alloc(v7);
  v2[70] = swift_task_alloc(v7);
  v2[71] = swift_task_alloc(v7);
  v2[72] = swift_task_alloc(v7);
  v2[73] = swift_task_alloc(v7);
  v2[74] = swift_task_alloc(v7);
  v2[75] = swift_task_alloc(v7);
  v2[76] = swift_task_alloc(v7);
  v2[77] = swift_task_alloc(v7);
  v2[78] = swift_task_alloc(v7);
  v2[79] = swift_task_alloc(v7);
  return swift_task_switch(sub_100302E14, 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_100304D44, 0, 0);
}

uint64_t sub_100302E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];

  v2 = *(_QWORD *)(v1 + 632);
  v3 = *(_QWORD *)(v1 + 544);
  v4 = *(_QWORD *)(v1 + 536);
  v5 = *(_QWORD *)(v1 + 496);
  v6 = Song.hasLyrics.getter(a1);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v1 + 640) = v7;
  v8 = v7(v2, v5, v4);
  v9 = *(_QWORD *)(v1 + 632);
  v10 = *(_QWORD *)(v1 + 544);
  v11 = *(_QWORD *)(v1 + 536);
  if ((v6 & 1) != 0)
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v12(*(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 536));
LABEL_4:
    *(_QWORD *)(v1 + 648) = v12;
    v14 = sub_10000B4C8(&qword_100559390);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100424B90;
    sub_10000B4C8(&qword_100559398);
    v16 = static PartialMusicProperty<A>.customLyrics.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v52[0] = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v1 + 656) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v1 + 664) = v18;
    v19 = sub_10001254C(&qword_1005593A0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    *v18 = v1;
    v18[1] = sub_100303214;
    return MusicItem<>.with(_:)(*(_QWORD *)(v1 + 624), v17, *(_QWORD *)(v1 + 536), &protocol witness table for Song, &protocol witness table for Song, v19);
  }
  v13 = Song.hasCustomLyrics.getter(v8);
  v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v12(v9, v11);
  if ((v13 & 1) != 0)
    goto LABEL_4;
  if (qword_100557E50 != -1)
    swift_once(&qword_100557E50, sub_1002F7F50);
  v21 = *(_QWORD *)(v1 + 576);
  v22 = *(_QWORD *)(v1 + 536);
  v23 = *(_QWORD *)(v1 + 496);
  v24 = *(void **)(v1 + 504);
  v25 = type metadata accessor for Logger(0);
  sub_10000D78C(v25, (uint64_t)static Logger.lyrics);
  v7(v21, v23, v22);
  v26 = Logger.logObject.getter(v24);
  v27 = static os_log_type_t.default.getter();
  v28 = os_log_type_enabled(v26, v27);
  v29 = *(_QWORD *)(v1 + 576);
  v30 = *(_QWORD *)(v1 + 536);
  v31 = *(void **)(v1 + 504);
  if (v28)
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v52[0] = v33;
    *(_DWORD *)v32 = 136446466;
    *(_QWORD *)(v1 + 472) = v31;
    v34 = (char *)String.init<A>(describing:)(v1 + 472, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v32 + 4) = sub_1002E9B3C(v34, v35, v52);

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v36 = (char *)sub_100302694();
    *(_QWORD *)(v32 + 14) = sub_1002E9B3C(v36, v37, v52);
    swift_bridgeObjectRelease();
    v12(v29, v30);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [hasLyrics and hasCustomLyrics were false] %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {

    v12(v29, v30);
  }

  v38 = sub_100308B04();
  v39 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v38, 0, 0);
  *v40 = 1;
  swift_willThrow(v39);
  v41 = *(_QWORD *)(v1 + 624);
  v42 = *(_QWORD *)(v1 + 616);
  v43 = *(_QWORD *)(v1 + 608);
  v44 = *(_QWORD *)(v1 + 600);
  v45 = *(_QWORD *)(v1 + 592);
  v46 = *(_QWORD *)(v1 + 584);
  v47 = *(_QWORD *)(v1 + 576);
  v48 = *(_QWORD *)(v1 + 568);
  v49 = *(_QWORD *)(v1 + 560);
  v50 = *(_QWORD *)(v1 + 552);
  v51 = *(_QWORD *)(v1 + 528);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100303214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 664);
  *(_QWORD *)(*(_QWORD *)v1 + 672) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_1003041BC;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_100303280;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100303280(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  unsigned int v9;
  Swift::String v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  __n128 v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char v94;
  BOOL v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  id v136;
  Class isa;
  id v138;
  uint64_t v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  os_log_type_t typea[8];
  os_log_type_t type;
  os_log_type_t typeb[8];
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150[2];

  v2 = Song.customLyrics.getter(a1);
  if (!v3)
  {
LABEL_11:
    if ((Song.hasLyrics.getter(v2) & 1) != 0)
    {
      v28 = (char *)v1[63];
      v29 = Song.id.getter();
      v31 = v30;
      v1[56] = 0;
      v32 = *(void **)&v28[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v33 = (_QWORD *)swift_allocObject(&unk_10051BCA8, 48, 7);
      v33[2] = v1 + 56;
      v33[3] = v28;
      v33[4] = v29;
      v33[5] = v31;
      v34 = swift_allocObject(&unk_10051BCD0, 32, 7);
      *(_QWORD *)(v34 + 16) = sub_100308B4C;
      *(_QWORD *)(v34 + 24) = v33;
      v1[44] = sub_100150C04;
      v1[45] = v34;
      v1[40] = _NSConcreteStackBlock;
      v1[41] = 1107296256;
      v1[42] = sub_100185F2C;
      v1[43] = &unk_10051BCE8;
      v35 = _Block_copy(v1 + 40);
      v36 = v1[45];
      v37 = v28;
      v38 = v32;
      swift_bridgeObjectRetain();
      swift_retain(v34);
      swift_release(v36);
      dispatch_sync(v38, v35);

      _Block_release(v35);
      LOBYTE(v35) = swift_isEscapingClosureAtFileLocation(v34, "", 122, 302, 31, 1, v39);
      swift_release(v34);
      if ((v35 & 1) == 0)
      {
        v40 = (void *)v1[56];
        swift_bridgeObjectRelease();
        swift_release(v33);

        if (!v40)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)(v1 + 25));
          sub_10015CA48(v1 + 25);
          if ((*((_BYTE *)v1 + 210) & 1) != 0)
          {
            v128 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
            v129 = v1[74];
            v130 = v1[67];
            v131 = v1[62];
            v132 = v1[63];
            sub_1000DD108(0, &qword_1005593B8, MPStoreLyricsRequest_ptr);
            v128(v129, v131, v130);
            v133 = MPStoreLyricsRequest.init(song:)(v129);
            v1[89] = v133;
            v134 = (_QWORD *)swift_task_alloc(48);
            v1[90] = v134;
            v134[2] = v132;
            v134[3] = v133;
            v134[4] = v131;
            v135 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
            v1[91] = v135;
            *v135 = v1;
            v135[1] = sub_100304038;
            return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 51, 0, 0, 0xD000000000000010, 0x8000000100451C00, sub_100308B80, v134, &type metadata for LyricsLoader.Result);
          }
        }
        v41 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v42 = objc_msgSend(v41, "musicSubscriptionStatus");

        static ApplicationCapabilities.shared.getter((uint64_t)(v1 + 10));
        sub_10015CA48(v1 + 10);
        v43 = v1[11];
        if (qword_100557E50 != -1)
          swift_once(&qword_100557E50, sub_1002F7F50);
        v44 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
        v45 = v1[73];
        v46 = v1[67];
        v47 = v1[62];
        v48 = (void *)v1[63];
        v49 = type metadata accessor for Logger(0);
        sub_10000D78C(v49, (uint64_t)static Logger.lyrics);
        v44(v45, v47, v46);
        v50 = v48;
        v51 = v42;
        v52 = v50;
        v53 = v51;
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.default.getter();
        v56 = os_log_type_enabled(v54, v55);
        v57 = (void (*)(uint64_t, uint64_t))v1[81];
        v58 = v1[73];
        v59 = v1[67];
        v60 = (void *)v1[63];
        if (v56)
        {
          v142 = v1[67];
          v148 = v53;
          v61 = swift_slowAlloc(38, -1);
          v140 = v43;
          v62 = swift_slowAlloc(96, -1);
          v150[0] = v62;
          *(_DWORD *)v61 = 136446978;
          v1[54] = v60;
          v63 = (char *)String.init<A>(describing:)(v1 + 54, &type metadata for UnsafeMutableRawPointer);
          *(_QWORD *)(v61 + 4) = sub_1002E9B3C(v63, v64, v150);

          swift_bridgeObjectRelease();
          *(_WORD *)(v61 + 12) = 2082;
          v1[55] = v42;
          v65 = v148;
          v66 = sub_10000B4C8(&qword_1005593B0);
          v67 = (char *)String.init<A>(describing:)(v1 + 55, v66);
          *(_QWORD *)(v61 + 14) = sub_1002E9B3C(v67, v68, v150);

          swift_bridgeObjectRelease();
          *(_WORD *)(v61 + 22) = 1026;
          *(_DWORD *)(v61 + 24) = HIWORD(v140) & 1;
          *(_WORD *)(v61 + 28) = 2082;
          v69 = (char *)sub_100302694();
          *(_QWORD *)(v61 + 30) = sub_1002E9B3C(v69, v70, v150);
          swift_bridgeObjectRelease();
          v57(v58, v142);
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d %{public}s", (uint8_t *)v61, 0x26u);
          swift_arrayDestroy(v62, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v62, -1, -1);
          v71 = v61;
          v53 = v148;
          swift_slowDealloc(v71, -1, -1);
        }
        else
        {

          v57(v58, v59);
        }

        v106 = (void (*)(uint64_t, uint64_t))v1[81];
        v114 = v1[78];
        v115 = v1[67];
        v116 = sub_100308B04();
        v117 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v116, 0, 0);
        *v118 = 2;
        swift_willThrow(v117);

        v112 = v114;
        v113 = v115;
LABEL_32:
        v106(v112, v113);
        v119 = v1[78];
        v120 = v1[77];
        v121 = v1[76];
        v122 = v1[75];
        v123 = v1[74];
        v124 = v1[73];
        v125 = v1[72];
        v126 = v1[71];
        v127 = v1[70];
        v143 = v1[69];
        *(_QWORD *)typeb = v1[66];
        swift_task_dealloc(v1[79]);
        swift_task_dealloc(v119);
        swift_task_dealloc(v120);
        swift_task_dealloc(v121);
        swift_task_dealloc(v122);
        swift_task_dealloc(v123);
        swift_task_dealloc(v124);
        swift_task_dealloc(v125);
        swift_task_dealloc(v126);
        swift_task_dealloc(v127);
        swift_task_dealloc(v143);
        swift_task_dealloc(*(_QWORD *)typeb);
        return ((uint64_t (*)(void))v1[1])();
      }
      __break(1u);
    }
    else if (qword_100557E50 == -1)
    {
LABEL_20:
      v72 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
      v73 = v1[78];
      v74 = v1[77];
      v75 = v1[76];
      v76 = v1[75];
      v77 = v1[67];
      v78 = v1[62];
      v79 = (void *)v1[63];
      v80 = type metadata accessor for Logger(0);
      sub_10000D78C(v80, (uint64_t)static Logger.lyrics);
      v72(v74, v78, v77);
      v72(v75, v73, v77);
      v72(v76, v78, v77);
      v81 = Logger.logObject.getter(v79);
      v82 = static os_log_type_t.default.getter();
      v83 = os_log_type_enabled(v81, v82);
      v84 = (uint64_t (*)(uint64_t, uint64_t))v1[81];
      v85 = v1[77];
      v86 = v1[76];
      v87 = v1[75];
      v88 = v1[67];
      v89 = (void *)v1[63];
      if (v83)
      {
        type = v82;
        v90 = swift_slowAlloc(42, -1);
        v149 = swift_slowAlloc(128, -1);
        v150[0] = v149;
        *(_DWORD *)v90 = 136446978;
        v1[58] = v89;
        v91 = (char *)String.init<A>(describing:)(v1 + 58, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v90 + 4) = sub_1002E9B3C(v91, v92, v150);

        v93 = swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2082;
        v94 = Song.hasCustomLyrics.getter(v93);
        v95 = (v94 & 1) == 0;
        if ((v94 & 1) != 0)
          v96 = 1702195828;
        else
          v96 = 0x65736C6166;
        if (v95)
          v97 = (char *)0xE500000000000000;
        else
          v97 = (char *)0xE400000000000000;
        *(_QWORD *)(v90 + 14) = sub_1002E9B3C((char *)v96, v97, v150);
        swift_bridgeObjectRelease();
        v98 = v84(v85, v88);
        *(_WORD *)(v90 + 22) = 2082;
        v99 = Song.customLyrics.getter(v98);
        v101 = (char *)Optional<A>.description.getter(v99, v100);
        v103 = v102;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v90 + 24) = sub_1002E9B3C(v101, v103, v150);
        swift_bridgeObjectRelease();
        v84(v86, v88);
        *(_WORD *)(v90 + 32) = 2082;
        v104 = (char *)sub_100302694();
        *(_QWORD *)(v90 + 34) = sub_1002E9B3C(v104, v105, v150);
        swift_bridgeObjectRelease();
        v84(v87, v88);
        _os_log_impl((void *)&_mh_execute_header, v81, type, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] song.hasLyrics=false song.hasCustomLyrics=%{public}s song.customLyrics=%{public}s %{public}s", (uint8_t *)v90, 0x2Au);
        swift_arrayDestroy(v149, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v149, -1, -1);
        swift_slowDealloc(v90, -1, -1);
      }
      else
      {

        v84(v85, v88);
        v84(v86, v88);
        v84(v87, v88);
      }

      v106 = (void (*)(uint64_t, uint64_t))v1[81];
      v107 = v1[78];
      v108 = v1[67];
      v109 = sub_100308B04();
      v110 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v109, 0, 0);
      *v111 = 1;
      swift_willThrow(v110);
      v112 = v107;
      v113 = v108;
      goto LABEL_32;
    }
    swift_once(&qword_100557E50, sub_1002F7F50);
    goto LABEL_20;
  }
  v4 = v2;
  v5 = v3;
  v6 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v6 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    v2 = swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "BOOLForKey:", v8);

  if (!v9)
    goto LABEL_9;
  if (*DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() != 1)
    goto LABEL_9;
  v10 = String.trim()();
  v11 = sub_100304834(544502844, 0xE400000000000000, v10._countAndFlagsBits, (uint64_t)v10._object);
  v12 = swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_9;
  v13 = v1[66];
  v14 = v1[65];
  v15 = v1[64];
  static String.Encoding.utf8.getter(v12);
  v16 = String.data(using:allowLossyConversion:)(v13, 0, v4, v5);
  v18 = v17;
  v1[85] = v16;
  v1[86] = v17;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  if (v18 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    v136 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
    sub_10003A5E4(v16, v18);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v138 = objc_msgSend(v136, "initWithTTMLData:", isa);
    v1[87] = v138;
    sub_10009FCF0(v16, v18);

    v1[7] = v1 + 57;
    v1[2] = v1;
    v1[3] = sub_100303E88;
    v1[50] = swift_continuation_init(v1 + 2, 1);
    v1[46] = _NSConcreteStackBlock;
    v1[47] = 0x40000000;
    v1[48] = sub_100304998;
    v1[49] = &unk_10051BD10;
    objc_msgSend(v138, "parseWithCompletion:", v1 + 46);
    return swift_continuation_await(v1 + 2);
  }
  else
  {
LABEL_9:
    ((void (*)(_QWORD, _QWORD))v1[81])(v1[78], v1[67]);
    v19 = v1[78];
    v20 = v1[77];
    v21 = v1[76];
    v22 = v1[75];
    v147 = v4;
    v23 = v1[74];
    v24 = v1[73];
    v25 = v1[72];
    v26 = v1[71];
    v139 = v1[70];
    v141 = v1[69];
    *(_QWORD *)typea = v1[66];
    swift_task_dealloc(v1[79]);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v139);
    swift_task_dealloc(v141);
    swift_task_dealloc(*(_QWORD *)typea);
    return ((uint64_t (*)(uint64_t, unint64_t, _QWORD))v1[1])(v147, v5, 0);
  }
}

uint64_t sub_100303E88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 704) = v1;
  if (v1)
    v2 = sub_1003042A8;
  else
    v2 = sub_100303EE8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100303EE8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v5 = *(_QWORD *)(v0 + 624);
  v6 = *(_QWORD *)(v0 + 536);
  v7 = *(void **)(v0 + 456);
  v8 = type metadata accessor for Lyrics();
  swift_allocObject(v8, 160, 7);
  v21 = Lyrics.init(identifier:songInfo:)(0, 0, v7);

  sub_10009FCF0(v3, v2);
  v4(v5, v6);
  v9 = *(_QWORD *)(v0 + 624);
  v10 = *(_QWORD *)(v0 + 616);
  v11 = *(_QWORD *)(v0 + 608);
  v12 = *(_QWORD *)(v0 + 600);
  v13 = *(_QWORD *)(v0 + 592);
  v14 = *(_QWORD *)(v0 + 584);
  v15 = *(_QWORD *)(v0 + 576);
  v16 = *(_QWORD *)(v0 + 568);
  v17 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 8))(v21, 0, 1);
}

uint64_t sub_100304038()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 728);
  *(_QWORD *)(*v1 + 736) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(*(_QWORD *)(v2 + 720));
  if (v0)
    v4 = sub_100304730;
  else
    v4 = sub_1003040A4;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003040A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 536);

  v1(v2, v3);
  v17 = *(_QWORD *)(v0 + 416);
  v18 = *(_QWORD *)(v0 + 408);
  v16 = *(unsigned __int8 *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 584);
  v10 = *(_QWORD *)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v12 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 8))(v18, v17, v16);
}

uint64_t sub_1003041BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 656));
  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 608);
  v4 = *(_QWORD *)(v0 + 600);
  v5 = *(_QWORD *)(v0 + 592);
  v6 = *(_QWORD *)(v0 + 584);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 568);
  v9 = *(_QWORD *)(v0 + 560);
  v11 = *(_QWORD *)(v0 + 552);
  v12 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003042A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v70[2];

  swift_willThrow(a1);
  if (qword_100557E50 != -1)
    swift_once(&qword_100557E50, sub_1002F7F50);
  v2 = *(_QWORD *)(v1 + 704);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 640);
  v4 = *(_QWORD *)(v1 + 624);
  v5 = *(_QWORD *)(v1 + 568);
  v6 = *(_QWORD *)(v1 + 560);
  v7 = *(_QWORD *)(v1 + 552);
  v8 = *(_QWORD *)(v1 + 536);
  v9 = *(_QWORD *)(v1 + 496);
  v10 = *(void **)(v1 + 504);
  v11 = type metadata accessor for Logger(0);
  sub_10000D78C(v11, (uint64_t)static Logger.lyrics);
  v3(v5, v9, v8);
  v3(v6, v4, v8);
  v3(v7, v9, v8);
  v12 = v10;
  swift_errorRetain(v2);
  v13 = v12;
  v14 = swift_errorRetain(v2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v1 + 704);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 648);
  v20 = *(_QWORD *)(v1 + 568);
  v21 = *(_QWORD *)(v1 + 560);
  v22 = *(_QWORD *)(v1 + 552);
  v23 = *(_QWORD *)(v1 + 536);
  v24 = *(void **)(v1 + 504);
  if (v17)
  {
    log = v15;
    type = v16;
    v63 = *(_QWORD *)(v1 + 552);
    v25 = swift_slowAlloc(52, -1);
    v64 = swift_slowAlloc(160, -1);
    v70[0] = v64;
    *(_DWORD *)v25 = 136447234;
    *(_QWORD *)(v1 + 480) = v24;
    v26 = (char *)String.init<A>(describing:)(v1 + 480, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v25 + 4) = sub_1002E9B3C(v26, v27, v70);

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    *(_QWORD *)(v1 + 488) = v18;
    swift_errorRetain(v18);
    v28 = sub_10000B4C8(&qword_1005593C0);
    v29 = (char *)String.init<A>(describing:)(v1 + 488, v28);
    *(_QWORD *)(v25 + 14) = sub_1002E9B3C(v29, v30, v70);
    swift_bridgeObjectRelease();
    swift_errorRelease(v18);
    v31 = swift_errorRelease(v18);
    *(_WORD *)(v25 + 22) = 2082;
    v32 = Song.hasCustomLyrics.getter(v31);
    v33 = (v32 & 1) == 0;
    if ((v32 & 1) != 0)
      v34 = 1702195828;
    else
      v34 = 0x65736C6166;
    if (v33)
      v35 = (char *)0xE500000000000000;
    else
      v35 = (char *)0xE400000000000000;
    *(_QWORD *)(v25 + 24) = sub_1002E9B3C((char *)v34, v35, v70);
    swift_bridgeObjectRelease();
    v36 = v19(v20, v23);
    *(_WORD *)(v25 + 32) = 2082;
    v37 = Song.customLyrics.getter(v36);
    v39 = (char *)Optional<A>.description.getter(v37, v38);
    v41 = v40;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 34) = sub_1002E9B3C(v39, v41, v70);
    swift_bridgeObjectRelease();
    v19(v21, v23);
    *(_WORD *)(v25 + 42) = 2082;
    v42 = (char *)sub_100302694();
    *(_QWORD *)(v25 + 44) = sub_1002E9B3C(v42, v43, v70);
    swift_bridgeObjectRelease();
    v19(v63, v23);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Loader<%{public}s> loadLyrics(for:completion:) didn't parse TTML custom lyrics with error=%{public}s song.hasCustomLyrics=%{public}s song.customLyrics=%{public}s %{public}s", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy(v64, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v64, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_errorRelease(v18);
    swift_errorRelease(v18);
    v19(v20, v23);
    v19(v21, v23);
    v19(v22, v23);

  }
  v44 = *(_QWORD *)(v1 + 704);
  v45 = *(void **)(v1 + 696);
  v46 = *(_QWORD *)(v1 + 688);
  v47 = *(_QWORD *)(v1 + 680);
  v48 = *(void (**)(uint64_t, uint64_t))(v1 + 648);
  v49 = *(_QWORD *)(v1 + 624);
  v50 = *(_QWORD *)(v1 + 536);
  v51 = sub_100308B04();
  *(_QWORD *)typea = swift_allocError(&type metadata for LyricsLoader.LyricsError, v51, 0, 0);
  *v52 = 0;
  swift_willThrow(*(_QWORD *)typea);

  swift_errorRelease(v44);
  sub_10009FCF0(v47, v46);
  v48(v49, v50);
  v53 = *(_QWORD *)(v1 + 624);
  v54 = *(_QWORD *)(v1 + 616);
  v55 = *(_QWORD *)(v1 + 608);
  v56 = *(_QWORD *)(v1 + 600);
  v57 = *(_QWORD *)(v1 + 592);
  v58 = *(_QWORD *)(v1 + 584);
  v59 = *(_QWORD *)(v1 + 576);
  v60 = *(_QWORD *)(v1 + 568);
  v61 = *(_QWORD *)(v1 + 560);
  v65 = *(_QWORD *)(v1 + 552);
  loga = *(os_log_t *)(v1 + 528);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v65);
  swift_task_dealloc(loga);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100304730()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 536);

  v1(v2, v3);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 584);
  v10 = *(_QWORD *)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v12 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100304834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::String_optional v4;
  uint64_t countAndFlagsBits;
  void *object;
  char v7;
  Swift::String_optional v8;
  Swift::String_optional v9;
  void *v10;
  _BOOL8 v11;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = String.Iterator.next()();
  if (v4.value._object)
  {
    countAndFlagsBits = v4.value._countAndFlagsBits;
    object = v4.value._object;
    do
    {
      v9 = String.Iterator.next()();
      if (!v9.value._object)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(a4);
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (countAndFlagsBits == v9.value._countAndFlagsBits && object == v9.value._object)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v9.value._object);
      }
      else
      {
        v7 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v9.value._countAndFlagsBits, v9.value._object, 0);
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v9.value._object);
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease(a4);
          swift_bridgeObjectRelease(a2);
          return 0;
        }
      }
      v8 = String.Iterator.next()();
      countAndFlagsBits = v8.value._countAndFlagsBits;
      object = v8.value._object;
    }
    while (v8.value._object);
  }
  swift_bridgeObjectRelease(a4);
  v10 = String.Iterator.next()().value._object;
  swift_bridgeObjectRelease(a2);
  v11 = v10 == 0;
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100304998(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_10000B4C8(&qword_1005593C0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100304A24(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  char *v20;

  v20 = a2;
  v7 = sub_10000B4C8(&qword_100559658);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = type metadata accessor for Song(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_10051C4F0, v15 + v9, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_100309190(a3, (uint64_t)v13, (uint64_t)sub_10030C230, v16, v20);
  v17 = swift_release(v16);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v17);
}

void LyricsLoader.hasRequest(for:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  __n128 v12;
  _QWORD aBlock[5];
  uint64_t v14;
  char v15;

  v1 = v0;
  v2 = Song.id.getter();
  v4 = v3;
  v15 = 0;
  v5 = *(void **)&v0[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_10051BD38, 48, 7);
  v6[2] = &v15;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v4;
  v7 = swift_allocObject(&unk_10051BD60, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100308B90;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_100150E54;
  v14 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100185F2C;
  aBlock[3] = &unk_10051BD78;
  v8 = _Block_copy(aBlock);
  v9 = v14;
  v10 = v5;
  v11 = v1;
  swift_bridgeObjectRetain();
  swift_retain(v7);
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v7, "", 122, 294, 31, 1, v12);
  swift_release(v7);
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release(v6);
    swift_bridgeObjectRelease();
  }
}

{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  __n128 v12;
  _QWORD aBlock[5];
  uint64_t v14;
  char v15;

  v1 = v0;
  v2 = sub_100306424();
  v4 = v3;
  v15 = 0;
  v5 = *(void **)&v0[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_10051BE78, 48, 7);
  v6[2] = &v15;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v4;
  v7 = swift_allocObject(&unk_10051BEA0, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_10030C3D8;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_100150E54;
  v14 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100185F2C;
  aBlock[3] = &unk_10051BEB8;
  v8 = _Block_copy(aBlock);
  v9 = v14;
  v10 = v5;
  v11 = v1;
  swift_bridgeObjectRetain();
  swift_retain(v7);
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v7, "", 122, 294, 31, 1, v12);
  swift_release(v7);
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release(v6);
    swift_bridgeObjectRelease();
  }
}

uint64_t LyricsLoader.cancelRequest(for:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = Song.id.getter();
  sub_100306818(v0, v1);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100306424();
  sub_100306818(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100304D44()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc(32);
  *(_QWORD *)(v0 + 56) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_100304DE8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000010, 0x8000000100451C00, sub_100308BAC, v1, &type metadata for LyricsLoader.Result);
}

uint64_t sub_100304DE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100304E68;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_100304E54;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100304E54()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_100304E68()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100304E9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v5 = sub_10000B4C8(&qword_100559658);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10051C450, v9 + v7, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  LyricsLoader.loadLyrics(for:completion:)(a3, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_10030C230, v10);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_100304F80(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD v10[2];
  char v11;

  if (a3 == 255)
  {
    if (a4)
    {
      v4 = a4;
    }
    else
    {
      v7 = sub_100308B04();
      v4 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v7, 0, 0);
      a4 = 0;
      *v8 = 3;
    }
    v10[0] = v4;
    swift_errorRetain(a4);
    v9 = sub_10000B4C8(&qword_100559658);
    return CheckedContinuation.resume(throwing:)(v10, v9);
  }
  else
  {
    v10[0] = a1;
    v10[1] = a2;
    v11 = a3 & 1;
    sub_10002EBA0(a1, a2, a3 & 1);
    v5 = sub_10000B4C8(&qword_100559658);
    return CheckedContinuation.resume(returning:)(v10, v5);
  }
}

id static LyricsLoader.requiredProperties()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  id v31;
  id v32;
  Class v33;
  Class v34;
  id v35;
  id v36;
  Class v37;
  Class v38;
  id v39;
  _BYTE v41[56];
  _BYTE v42[112];

  v0 = sub_10000B4C8(&qword_1005593D0);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100424BC0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtistUploadedContent);
  *(_QWORD *)(v1 + 88) = v5;
  v6 = sub_10000B4C8(&qword_1005593D8);
  inited = swift_initStackObject(v6, v42);
  *(_OWORD *)(inited + 16) = xmmword_100427490;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(inited + 40) = v8;
  v9 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100424BB0;
  v10 = MPModelPropertyArtistName;
  *(_QWORD *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v9 + 40) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v13 = (void *)objc_opt_self(MPPropertySet);
  v14 = objc_msgSend(v13, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongLyrics);
  *(_QWORD *)(inited + 64) = v15;
  v16 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100424BC0;
  *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsText);
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasLibraryLyrics);
  *(_QWORD *)(v16 + 56) = v18;
  *(_QWORD *)(v16 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasStoreLyrics);
  *(_QWORD *)(v16 + 72) = v19;
  *(_QWORD *)(v16 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasTimeSyncedLyrics);
  *(_QWORD *)(v16 + 88) = v20;
  v21 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v13, "propertySetWithProperties:", v21);

  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(inited + 88) = v23;
  v24 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v24 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v24 + 40) = v25;
  v26 = swift_initStackObject(v6, v41);
  *(_OWORD *)(v26 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v26 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v26 + 40) = v27;
  v28 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v28 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  *(_QWORD *)(v28 + 40) = v29;
  v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v13, "propertySetWithProperties:", v30);

  *(_QWORD *)(v26 + 48) = v31;
  sub_1002D3908(v26);
  v32 = objc_allocWithZone((Class)MPPropertySet);
  v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000DD108(0, &qword_1005593E0, MPPropertySet_ptr);
  v34 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v32, "initWithProperties:relationships:", v33, v34);

  *(_QWORD *)(inited + 96) = v35;
  sub_1002D3908(inited);
  v36 = objc_allocWithZone((Class)MPPropertySet);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v38 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(v36, "initWithProperties:relationships:", v37, v38);

  return v39;
}

void LyricsLoader.loadLyrics(for:completion:)(void *a1, void (*a2)(uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  unsigned int v22;
  Swift::String v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  id v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  void **v37;
  char *v38;
  char *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  NSObject *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  id v57;
  id v58;
  unsigned int v59;
  uint64_t v60;
  id v61;
  char *v62;
  id v63;
  id v64;
  char *v65;
  void **v66;
  NSObject *v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void **v72;
  uint64_t v73;
  char *v74;
  char *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  char *v88;
  id v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  unsigned int v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  id v105;
  id v106;
  char *v107;
  char *v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  char *v113;
  char *v114;
  char *v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  id v124;
  id v125;
  char *v126;
  char *v127;
  char *v128;
  void **v129;
  unint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  id v133;
  id v134;
  os_log_type_t v135;
  char *v136;
  char *v137;
  char *v138;
  id v139;
  id v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  id v148;
  Class isa;
  id v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  char **v154;
  uint64_t v155;
  uint64_t v156;
  void **v157;
  uint64_t v158;
  void (*v159)(uint64_t, unint64_t, uint64_t, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  char v163;
  void **v164;
  uint64_t v165;
  void *v166;
  void *v167;
  void *v168;
  char **v169;

  v4 = v3;
  v8 = type metadata accessor for String.Encoding(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, "lyrics");
  if (v12)
  {
    v13 = v12;
    v159 = a2;
    v14 = objc_msgSend(v12, "text");
    v158 = a3;
    if (v14)
    {
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v19 = v16 & 0xFFFFFFFFFFFFLL;
      if (v19)
      {
        v20 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v21 = String._bridgeToObjectiveC()();
        v22 = objc_msgSend(v20, "BOOLForKey:", v21);

        if (v22
          && *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1
          && (v23 = String.trim()(),
              v24 = sub_100304834(544502844, 0xE400000000000000, v23._countAndFlagsBits, (uint64_t)v23._object),
              v25 = swift_bridgeObjectRelease(),
              (v24 & 1) != 0)
          && (static String.Encoding.utf8.getter(v25),
              v26 = String.data(using:allowLossyConversion:)(v11, 0, v16, v18),
              v28 = v27,
              (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
              v28 >> 60 != 15))
        {
          swift_bridgeObjectRelease();
          v148 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
          sub_10003A5E4(v26, v28);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v150 = objc_msgSend(v148, "initWithTTMLData:", isa);
          sub_10009FCF0(v26, v28);

          v151 = swift_allocObject(&unk_10051BE28, 32, 7);
          v152 = v158;
          *(_QWORD *)(v151 + 16) = v159;
          *(_QWORD *)(v151 + 24) = v152;
          v168 = sub_10030B88C;
          v169 = (char **)v151;
          v164 = _NSConcreteStackBlock;
          v165 = 1107296256;
          v166 = sub_100306420;
          v167 = &unk_10051BE40;
          v153 = _Block_copy(&v164);
          v154 = v169;
          swift_retain(v152);
          objc_msgSend(v150, "parseWithCompletion:", v153, swift_release(v154).n128_f64[0]);

          _Block_release(v153);
          sub_10009FCF0(v26, v28);
        }
        else
        {
          v159(v16, v18, 0, 0);

          swift_bridgeObjectRelease();
        }
        return;
      }
      swift_bridgeObjectRelease();
    }
    v45 = &selRef_presentationControllerDidDismiss_;
    if ((objc_msgSend(v13, "hasStoreLyrics") & 1) != 0)
    {
      v46 = sub_100306424();
      v48 = v47;
      v162 = 0;
      v49 = *(void **)&v4[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v50 = (_QWORD *)swift_allocObject(&unk_10051BDB0, 48, 7);
      v50[2] = &v162;
      v50[3] = v4;
      v50[4] = v46;
      v50[5] = v48;
      v51 = swift_allocObject(&unk_10051BDD8, 32, 7);
      *(_QWORD *)(v51 + 16) = sub_10030C3D4;
      *(_QWORD *)(v51 + 24) = v50;
      v168 = sub_100150E54;
      v169 = (char **)v51;
      v164 = _NSConcreteStackBlock;
      v165 = 1107296256;
      v166 = sub_100185F2C;
      v167 = &unk_10051BDF0;
      v52 = _Block_copy(&v164);
      v45 = v169;
      v4 = v4;
      v53 = v49;
      swift_bridgeObjectRetain();
      swift_retain(v51);
      swift_release(v45);
      dispatch_sync(v53, v52);

      _Block_release(v52);
      LOBYTE(v52) = swift_isEscapingClosureAtFileLocation(v51, "", 122, 302, 31, 1, v54);
      swift_release(v51);
      if ((v52 & 1) == 0)
      {
        v55 = v162;
        swift_release(v50);
        swift_bridgeObjectRelease();

        v56 = (uint64_t)v159;
        if (!v55)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v162);
          sub_10015CA48(&v162);
          if ((v163 & 1) != 0)
          {
            v133 = objc_msgSend(objc_allocWithZone((Class)MPStoreLyricsRequest), "init");
            objc_msgSend(v133, "setSong:", a1);
            v134 = a1;
            sub_100309430(v133, v134, v56, v158, v4);

            return;
          }
        }
        v57 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v58 = objc_msgSend(v57, "musicSubscriptionStatus");

        static ApplicationCapabilities.shared.getter((uint64_t)&v164);
        sub_10015CA48(&v164);
        v59 = v165;
        if (qword_100557E50 != -1)
          swift_once(&qword_100557E50, sub_1002F7F50);
        v60 = type metadata accessor for Logger(0);
        sub_10000D78C(v60, (uint64_t)static Logger.lyrics);
        v61 = a1;
        v62 = v4;
        v63 = v58;
        v64 = v61;
        v65 = v62;
        v66 = (void **)v63;
        v67 = Logger.logObject.getter(v66);
        v68 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v67, (os_log_type_t)v68))
        {
          HIDWORD(v155) = v68;
          v69 = swift_slowAlloc(48, -1);
          v156 = swift_slowAlloc(128, -1);
          v160 = v65;
          v161 = v156;
          *(_DWORD *)v69 = 136447234;
          v70 = (char *)String.init<A>(describing:)(&v160, &type metadata for UnsafeMutableRawPointer);
          *(_QWORD *)(v69 + 4) = sub_1002E9B3C(v70, v71, &v161);
          swift_bridgeObjectRelease();

          *(_WORD *)(v69 + 12) = 2082;
          v160 = (char *)v58;
          v157 = v66;
          v72 = v66;
          v73 = sub_10000B4C8(&qword_1005593B0);
          v74 = (char *)String.init<A>(describing:)(&v160, v73);
          *(_QWORD *)(v69 + 14) = sub_1002E9B3C(v74, v75, &v161);
          swift_bridgeObjectRelease();

          *(_WORD *)(v69 + 22) = 1026;
          *(_DWORD *)(v69 + 24) = HIWORD(v59) & 1;
          *(_WORD *)(v69 + 28) = 2082;
          v76 = objc_msgSend(v64, "title");
          if (v76)
          {
            v77 = v76;
            v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
            v80 = v79;

          }
          else
          {
            v78 = 0;
            v80 = 0;
          }
          v135 = BYTE4(v155);
          v136 = (char *)Optional<A>.description.getter(v78, v80);
          v138 = v137;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v69 + 30) = sub_1002E9B3C(v136, v138, &v161);
          swift_bridgeObjectRelease();

          *(_WORD *)(v69 + 38) = 2082;
          v139 = objc_msgSend(v64, "identifiers");
          v140 = objc_msgSend(v139, "description");
          v141 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
          v143 = v142;

          *(_QWORD *)(v69 + 40) = sub_1002E9B3C(v141, v143, &v161);
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v67, v135, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v69, 0x30u);
          v144 = v156;
          swift_arrayDestroy(v156, 4, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v144, -1, -1);
          swift_slowDealloc(v69, -1, -1);

          v66 = v157;
        }
        else
        {

        }
        v145 = sub_100308B04();
        v146 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v145, 0, 0);
        *v147 = 2;
        v159(0, 0, 255, v146);
        swift_errorRelease(v146);

        goto LABEL_46;
      }
      __break(1u);
    }
    else if (qword_100557E50 == -1)
    {
LABEL_28:
      v81 = type metadata accessor for Logger(0);
      sub_10000D78C(v81, (uint64_t)static Logger.lyrics);
      v82 = v13;
      v83 = a1;
      v84 = v82;
      v85 = v83;
      v86 = v84;
      v87 = v85;
      v88 = v4;
      v13 = v86;
      v89 = v87;
      v90 = v88;
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = swift_slowAlloc(48, -1);
        v157 = (void **)swift_slowAlloc(128, -1);
        v164 = v157;
        *(_DWORD *)v93 = 136447234;
        v162 = v90;
        v94 = (char *)String.init<A>(describing:)(&v162, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v93 + 4) = sub_1002E9B3C(v94, v95, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        *(_WORD *)(v93 + 12) = 1026;
        v96 = objc_msgSend(v13, v45[273]);

        *(_DWORD *)(v93 + 14) = v96;
        *(_WORD *)(v93 + 18) = 2082;
        v97 = objc_msgSend(v13, "text");
        if (v97)
        {
          v98 = v97;
          v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
          v101 = v100;

        }
        else
        {
          v99 = 0;
          v101 = 0;
        }
        v113 = (char *)Optional<A>.description.getter(v99, v101);
        v115 = v114;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v93 + 20) = sub_1002E9B3C(v113, v115, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        *(_WORD *)(v93 + 28) = 2082;
        v116 = objc_msgSend(v89, "title");
        if (v116)
        {
          v117 = v116;
          v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
          v120 = v119;

        }
        else
        {
          v118 = 0;
          v120 = 0;
        }
        v121 = (char *)Optional<A>.description.getter(v118, v120);
        v123 = v122;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v93 + 30) = sub_1002E9B3C(v121, v123, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        *(_WORD *)(v93 + 38) = 2082;
        v124 = objc_msgSend(v89, "identifiers");
        v125 = objc_msgSend(v124, "description");
        v126 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
        v128 = v127;

        *(_QWORD *)(v93 + 40) = sub_1002E9B3C(v126, v128, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] lyrics.hasStoreLyrics=%{BOOL,public}d lyrics.text=%{public}s song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v93, 0x30u);
        v129 = v157;
        swift_arrayDestroy(v157, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v129, -1, -1);
        swift_slowDealloc(v93, -1, -1);
      }
      else
      {

      }
      v130 = sub_100308B04();
      v131 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v130, 0, 0);
      *v132 = 1;
      v159(0, 0, 255, v131);
      swift_errorRelease(v131);
LABEL_46:

      return;
    }
    swift_once(&qword_100557E50, sub_1002F7F50);
    goto LABEL_28;
  }
  if (qword_100557E50 != -1)
    swift_once(&qword_100557E50, sub_1002F7F50);
  v29 = type metadata accessor for Logger(0);
  sub_10000D78C(v29, (uint64_t)static Logger.lyrics);
  v30 = a1;
  v31 = v4;
  v32 = v30;
  v33 = v31;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v158 = a3;
    v159 = a2;
    v36 = swift_slowAlloc(32, -1);
    v37 = (void **)swift_slowAlloc(96, -1);
    v164 = v37;
    *(_DWORD *)v36 = 136446722;
    v162 = v33;
    v38 = (char *)String.init<A>(describing:)(&v162, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v36 + 4) = sub_1002E9B3C(v38, v39, (uint64_t *)&v164);
    swift_bridgeObjectRelease();

    *(_WORD *)(v36 + 12) = 2082;
    v40 = objc_msgSend(v32, "title");
    if (v40)
    {
      v41 = v40;
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v44 = v43;

    }
    else
    {
      v42 = 0;
      v44 = 0;
    }
    v102 = (char *)Optional<A>.description.getter(v42, v44);
    v104 = v103;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v36 + 14) = sub_1002E9B3C(v102, v104, (uint64_t *)&v164);
    swift_bridgeObjectRelease();

    *(_WORD *)(v36 + 22) = 2082;
    v105 = objc_msgSend(v32, "identifiers");
    v106 = objc_msgSend(v105, "description");
    v107 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v109 = v108;

    *(_QWORD *)(v36 + 24) = sub_1002E9B3C(v107, v109, (uint64_t *)&v164);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy(v37, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    a2 = v159;
  }
  else
  {

  }
  v110 = sub_100308B04();
  v111 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v110, 0, 0);
  *v112 = 1;
  a2(0, 0, 255, v111);
  swift_errorRelease(v111);
}

void sub_100306368(void *a1, uint64_t a2, void (*a3)(uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (a1)
  {
    v5 = type metadata accessor for Lyrics();
    swift_allocObject(v5, 160, 7);
    v6 = a1;
    v7 = Lyrics.init(identifier:songInfo:)(0, 0, v6);
    a3(v7, 0, 1, 0);

    swift_release(v7);
  }
  else
  {
    a3(0, 0, 255, a2);
  }
}

uint64_t sub_100306424()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = v0;
  v2 = objc_msgSend(v0, "identifiers");
  v3 = MPIdentifierSet.bestStoreIdentifier.getter();
  v5 = v4;

  if (!v5)
  {
    v6 = objc_msgSend(v1, "identifiers");
    v3 = MPIdentifierSet.bestLibraryIdentifier.getter();
    v8 = v7;

    if (!v8)
    {
      v9 = objc_msgSend(v1, "identifiers");
      NSObject.hashValue.getter();

      return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    }
  }
  return v3;
}

void sub_1003066BC(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v10[24];

  v7 = a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v10, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10013B57C(a3, a4);
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  *a1 = v9 & 1;
}

void sub_100306760(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v14, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_10013B57C(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v13 = *a1;
  *a1 = v11;

}

void sub_100306818(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  char *v11;
  __n128 v12;
  char isEscapingClosureAtFileLocation;
  double v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;
  id v18;

  v18 = 0;
  v5 = *(void **)&v2[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_10051C478, 48, 7);
  v6[2] = &v18;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject(&unk_10051C4A0, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_10030C264;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_100150E54;
  v17 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100185F2C;
  aBlock[3] = &unk_10051C4B8;
  v8 = _Block_copy(aBlock);
  v9 = v17;
  v10 = v5;
  v11 = v2;
  swift_bridgeObjectRetain();
  swift_retain(v7);
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 122, 310, 31, 1, v12);
  *(_QWORD *)&v14 = swift_release(v7).n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v18, "cancel", v14);
    v15 = v18;
    swift_release(v6);

  }
}

void sub_100306988(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v16, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(*v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_10013B57C(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v13 = *a1;
  *a1 = v11;

  swift_beginAccess(v7, v15, 33, 0);
  swift_bridgeObjectRetain();
  v14 = (void *)sub_100308BB4(a3, a4);
  swift_endAccess(v15);
  swift_bridgeObjectRelease();

}

void sub_100306A8C(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t (**v26)(void *, void *);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)();
  void *v37;
  _QWORD *v38;
  NSObject *v39;
  id v40;
  __n128 v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  id v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  Class isa;
  id v66;
  _QWORD *v67;
  void (*v68)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v69;
  char *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v82;
  char *v83;
  __int128 v84[2];
  uint64_t aBlock;
  unint64_t v86;
  void *v87;
  void *v88;
  uint64_t (**v89)(void *, void *);
  _QWORD *v90;
  char v91[24];
  char v92[32];

  v80 = a6;
  v81 = a5;
  v82 = a1;
  v79 = type metadata accessor for String.Encoding(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin();
  v77 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  swift_beginAccess(v10, v92, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    aBlock = 0x3C726564616F4CLL;
    v86 = 0xE700000000000000;
    *(_QWORD *)&v84[0] = Strong;
    v13._countAndFlagsBits = String.init<A>(describing:)(v84, &type metadata for UnsafeMutableRawPointer);
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 62;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);

    v15 = aBlock;
    v16 = (char *)v86;
  }
  else
  {
    v16 = (char *)0xEC0000003E303078;
    v15 = 0x303C726564616F4CLL;
  }
  v83 = (char *)v15;
  if (qword_100557E50 != -1)
    swift_once(&qword_100557E50, sub_1002F7F50);
  v17 = type metadata accessor for Logger(0);
  sub_10000D78C(v17, (uint64_t)static Logger.lyrics);
  sub_1000C53BC((uint64_t)a4, (uint64_t)&aBlock);
  v18 = swift_bridgeObjectRetain_n(v16, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v75 = a4;
    v22 = v21;
    v23 = swift_slowAlloc(64, -1);
    v76 = a2;
    v24 = v23;
    *(_QWORD *)&v84[0] = v23;
    *(_DWORD *)v22 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 4) = sub_1002E9B3C(v83, v16, (uint64_t *)v84);
    swift_bridgeObjectRelease_n(v16, 3);
    *(_WORD *)(v22 + 12) = 2082;
    v25 = v88;
    v26 = v89;
    sub_10000D900(&aBlock, (uint64_t)v88);
    v27 = (char *)v26[2](v25, v26);
    *(_QWORD *)(v22 + 14) = sub_1002E9B3C(v27, v28, (uint64_t *)v84);
    swift_bridgeObjectRelease();
    sub_100011758(&aBlock);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s loadLyrics(for:completion:) completed for %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    a2 = v76;
    swift_slowDealloc(v24, -1, -1);
    v29 = v22;
    a4 = v75;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v16, 2);
    sub_100011758(&aBlock);
  }

  swift_beginAccess(v10, v91, 0, 0);
  v30 = swift_unknownObjectWeakLoadStrong(v10);
  if (!v30)
  {
    v36 = 0;
    v34 = 0;
    v42 = v82;
    if (a2)
      goto LABEL_19;
    goto LABEL_14;
  }
  v31 = (void *)v30;
  v32 = *(void **)(v30 + OBJC_IVAR___MusicLyricsLoader_accessQueue);
  v33 = a4;
  sub_1000C53BC((uint64_t)a4, (uint64_t)v84);
  v34 = swift_allocObject(&unk_10051C3D8, 64, 7);
  *(_QWORD *)(v34 + 16) = v31;
  sub_1000B47A8(v84, v34 + 24);
  v35 = swift_allocObject(&unk_10051C400, 32, 7);
  v36 = sub_10030C210;
  *(_QWORD *)(v35 + 16) = sub_10030C210;
  *(_QWORD *)(v35 + 24) = v34;
  v89 = (uint64_t (**)(void *, void *))sub_100150E54;
  v90 = (_QWORD *)v35;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v86 = 1107296256;
  v87 = sub_100185F2C;
  v88 = &unk_10051C418;
  v37 = _Block_copy(&aBlock);
  v38 = v90;
  v39 = v32;
  v40 = v31;
  swift_retain(v35);
  swift_release(v38);
  dispatch_sync(v39, v37);

  _Block_release(v37);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation(v35, "", 122, 349, 39, 1, v41);
  swift_release(v35);
  if ((v40 & 1) == 0)
  {
    a4 = v33;
    v42 = v82;
    if (a2)
      goto LABEL_19;
LABEL_14:
    if (v42)
    {
      v43 = v42;
      v44 = objc_msgSend(v43, "lyrics");
      if (!v44)
        goto LABEL_18;
      v45 = v44;
      v46 = objc_msgSend(v44, "TTML");

      if (!v46)
        goto LABEL_18;
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v49 = v48;

      v50 = v77;
      static String.Encoding.utf8.getter(v51);
      v52 = String.data(using:allowLossyConversion:)(v50, 0, v47, v49);
      v54 = v53;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v79);
      if (v54 >> 60 != 15)
      {
        v64 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
        sub_10003A5E4(v52, v54);
        isa = Data._bridgeToObjectiveC()().super.isa;
        v66 = objc_msgSend(v64, "initWithTTMLData:", isa);
        sub_10009FCF0(v52, v54);

        v67 = (_QWORD *)swift_allocObject(&unk_10051C388, 56, 7);
        v69 = v80;
        v68 = v81;
        v67[2] = v43;
        v67[3] = v68;
        v70 = v83;
        v67[4] = v69;
        v67[5] = v70;
        v67[6] = v16;
        v89 = (uint64_t (**)(void *, void *))sub_10030C1D4;
        v90 = v67;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v86 = 1107296256;
        v87 = sub_100306420;
        v88 = &unk_10051C3A0;
        v71 = _Block_copy(&aBlock);
        v72 = v90;
        v73 = v43;
        swift_retain(v69);
        objc_msgSend(v66, "parseWithCompletion:", v71, swift_release(v72).n128_f64[0]);

        _Block_release(v71);
        sub_10009FCF0(v52, v54);
      }
      else
      {
LABEL_18:
        v55 = sub_100308B04();
        v56 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v55, 0, 0);
        *v57 = 1;
        v58 = v43;
        sub_1003096C8(v56, v58, v83, v16);
        swift_errorRelease(v56);
        swift_bridgeObjectRelease();

        v59 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v55, 0, 0);
        *v60 = 1;
        v81(0, 0, 255, v59);

        swift_errorRelease(v59);
      }
      goto LABEL_20;
    }
LABEL_19:
    v61 = a4[3];
    v62 = a4[4];
    v63 = sub_10000D900(a4, v61);
    sub_100309DD0(a2, (uint64_t)v63, v83, v16, v61, v62);
    swift_bridgeObjectRelease();
    v81(0, 0, 255, a2);
LABEL_20:
    sub_1000DB26C((uint64_t)v36, v34);
    return;
  }
  __break(1u);
}

void sub_1003071A8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[24];

  v3 = a2[3];
  v4 = a2[4];
  sub_10000D900(a2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = v6;
  swift_beginAccess(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v9, 33, 0);
  v8 = (void *)sub_100308BB4(v5, v7);
  swift_endAccess(v9);
  swift_bridgeObjectRelease();

}

double sub_100307248(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, _QWORD, uint64_t, uint64_t), uint64_t a5, char *a6, char *a7)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v19;
  double result;
  uint64_t v21;
  id v22;
  uint64_t v23;

  if (!a1)
  {
    v19 = a3;
    sub_1003096C8(a2, v19, a6, a7);

    a4(0, 0, 255, a2);
    return result;
  }
  v9 = a1;
  v10 = objc_msgSend(a3, "lyrics");
  v11 = v10;
  if (!v10)
    goto LABEL_7;
  v12 = objc_msgSend(v10, "identifiers");

  v13 = objc_msgSend(v12, "lyricsID");
  if (!v13)
  {
    v11 = 0;
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  v11 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

LABEL_8:
  v21 = type metadata accessor for Lyrics();
  swift_allocObject(v21, 160, 7);
  v22 = v9;
  v23 = Lyrics.init(identifier:songInfo:)((uint64_t)v11, v15, v22);
  a4(v23, 0, 1, 0);

  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_1003073C4(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  _BYTE v15[24];

  v5 = a2[3];
  v6 = a2[4];
  sub_10000D900(a2, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v9 = v8;
  v10 = (_QWORD *)(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(v10, v15, 33, 0);
  v11 = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v14 = *v10;
  *v10 = 0x8000000000000000;
  sub_100308DC0((uint64_t)v11, v7, v9, isUniquelyReferenced_nonNull_native);
  *v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess(v15);
}

id LyricsLoader.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  _QWORD *v24;

  v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin();
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS(0);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  v10 = v0;
  *(_QWORD *)&v0[v9] = sub_1002D38FC((uint64_t)_swiftEmptyArrayStorage);
  v21 = OBJC_IVAR___MusicLyricsLoader_accessQueue;
  v11 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v11);
  v24 = _swiftEmptyArrayStorage;
  v12 = sub_10001254C((unint64_t *)&unk_100558250, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_10000B4C8((uint64_t *)&unk_100559400);
  v14 = sub_1002D3E54();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v13, v14, v4, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  v15 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001BLL, 0x8000000100450F40, v8, v6, v3, 0);
  *(_QWORD *)&v10[v21] = v15;
  v16 = OBJC_IVAR___MusicLyricsLoader_operationQueue;
  v17 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v17, "setMaxConcurrentOperationCount:", 1);
  *(_QWORD *)&v10[v16] = v17;

  v18 = (objc_class *)type metadata accessor for LyricsLoader();
  v23.receiver = v10;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, "init");
}

id LyricsLoader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsLoader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t LyricsLoader.Song.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  v5 = type metadata accessor for LyricsLoader.Song(0);
  return swift_storeEnumTagMultiPayload(a2, v5, 0);
}

uint64_t LyricsLoader.Song.init(_:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  a3[1] = a2;
  v4 = type metadata accessor for LyricsLoader.Song(0);
  swift_storeEnumTagMultiPayload(a3, v4, 1);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a3, 0, 1, v4);
}

void LyricsLoader.Song.modelObjectSong.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  __n128 v17;
  _QWORD aBlock[5];
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin();
  v8 = (id *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10030B904(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000DD108(0, &qword_100559418, MPIdentifierSet_ptr);
    v9 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 1);
    __chkstk_darwin();
    aBlock[-2] = v5;
    sub_100308500(0xD000000000000012, 0x8000000100451C50, v10, (uint64_t)sub_10030B948, (uint64_t)&aBlock[-4]);
    v12 = v11;
    __chkstk_darwin();
    aBlock[-2] = v5;
    v13 = objc_allocWithZone((Class)MPModelSong);
    v14 = swift_allocObject(&unk_10051BEF0, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_10030B950;
    *(_QWORD *)(v14 + 24) = &aBlock[-4];
    aBlock[4] = sub_1000D75E8;
    v19 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001880C4;
    aBlock[3] = &unk_10051BF08;
    v15 = _Block_copy(aBlock);
    swift_retain(v14);
    objc_msgSend(v13, "initWithIdentifiers:block:", v12, v15);

    _Block_release(v15);
    v16 = swift_release(v19);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v14, "", 0, 0, 0, 1, v16);
    v17 = swift_release(v14);
    if ((v12 & 1) != 0)
      __break(1u);
    else
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
  }
}

void sub_100307AB8(uint64_t isEscapingClosureAtFileLocation, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __n128 v26;
  char v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin();
  v8 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Song.catalogID.getter(v7);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = swift_allocObject(&unk_10051C220, 32, 7);
    *(_QWORD *)(v13 + 16) = v11;
    *(_QWORD *)(v13 + 24) = v12;
    v4 = swift_allocObject(&unk_10051C248, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_10030C12C;
    *(_QWORD *)(v4 + 24) = v13;
    aBlock[4] = sub_1000DC31C;
    v36 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003081C4;
    aBlock[3] = &unk_10051C260;
    v8 = (char *)_Block_copy(aBlock);
    v6 = v36;
    swift_retain(v4);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setUniversalStoreIdentifiersWithBlock:", v8, swift_release(v6).n128_f64[0]);
    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 122, 401, 74, 1, v14);
    swift_release(v13);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  static ApplicationCapabilities.shared.getter((uint64_t)aBlock);
  sub_10015CA48(aBlock);
  if ((aBlock[0] & 0x10000) != 0)
    goto LABEL_8;
  sub_1000DD108(0, &qword_100559580, MPMediaLibrary_ptr);
  v15 = static MPMediaLibrary.device.getter();
  v16 = objc_msgSend(v15, "uniqueIdentifier");

  if (v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v17 = *(unsigned __int8 *)(v5 + 80);
    v18 = (v17 + 16) & ~v17;
    v6 = swift_allocObject(&unk_10051C130, v18 + v6, v17 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v6 + v18, v8, v4);
    v4 = swift_allocObject(&unk_10051C158, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_10030C020;
    *(_QWORD *)(v4 + 24) = v6;
    v33 = sub_1000DC31C;
    v34 = v4;
    v29 = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_1003081C4;
    v32 = &unk_10051C170;
    v8 = (char *)_Block_copy(&v29);
    a2 = v34;
    swift_retain(v4);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setLibraryIdentifiersWithDatabaseID:block:", v16, v8, swift_release(a2).n128_f64[0]);

    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 122, 409, 87, 1, v19);
    swift_release(v6);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_8:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
      v20 = *(unsigned __int8 *)(v5 + 80);
      v21 = (v20 + 16) & ~v20;
      v22 = swift_allocObject(&unk_10051C1A8, v21 + v6, v20 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v22 + v21, v8, v4);
      v23 = swift_allocObject(&unk_10051C1D0, 32, 7);
      *(_QWORD *)(v23 + 16) = sub_10030C0A0;
      *(_QWORD *)(v23 + 24) = v22;
      v33 = sub_1000DC31C;
      v34 = v23;
      v29 = _NSConcreteStackBlock;
      v30 = 1107296256;
      v31 = sub_1003081C4;
      v32 = &unk_10051C1E8;
      v24 = _Block_copy(&v29);
      v25 = v34;
      swift_retain(v23);
      objc_msgSend((id)isEscapingClosureAtFileLocation, "setUniversalStoreIdentifiersWithBlock:", v24, swift_release(v25).n128_f64[0]);
      _Block_release(v24);
      v27 = swift_isEscapingClosureAtFileLocation(v23, "", 122, 405, 74, 1, v26);
      swift_release(v22);
      swift_release(v23);
      if ((v27 & 1) != 0)
        __break(1u);
    }
  }
}

id sub_100307EE0(id result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  _QWORD v26[3];

  v3 = a2;
  v4 = result;
  v5 = HIBYTE(a3) & 0xF;
  v6 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a3) & 0xF;
  else
    v7 = v6;
  if (!v7)
  {
    v21 = 0;
    return objc_msgSend(v4, "setAdamID:", v21);
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_100308EEC(v3, a3, 10);
    LOBYTE(v3) = v25;
    swift_bridgeObjectRelease();
LABEL_44:
    if ((v3 & 1) != 0)
      v21 = 0;
    else
      v21 = v10;
    return objc_msgSend(v4, "setAdamID:", v21);
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v3, a3);
    v10 = (uint64_t)sub_10028B04C(v9, v6, 10);
    LOBYTE(v3) = v11 & 1;
    goto LABEL_44;
  }
  v26[0] = v3;
  v26[1] = a3 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_31;
    v10 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_31;
      v10 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_31;
          v10 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u)
      goto LABEL_31;
    v10 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_31;
      v10 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_31;
          v10 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        LOBYTE(v3) = 0;
        v10 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        v10 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            break;
          v24 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            break;
          v10 = v24 - v23;
          if (__OFSUB__(v24, v23))
            break;
          LOBYTE(v3) = 0;
          ++v22;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v10 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_1003081C8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  Song.id.getter();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(a1, "setUniversalCloudLibraryID:", v4);

}

uint64_t sub_100308220(void *a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  _QWORD v26[3];

  result = Song.id.getter();
  v4 = v3;
  v5 = HIBYTE(v3) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    v21 = 0;
    return (uint64_t)objc_msgSend(a1, "setPersistentID:", v21);
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    v9 = (uint64_t)sub_100308EEC(result, v4, 10);
    v11 = v25;
LABEL_44:
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      v21 = 0;
    else
      v21 = v9;
    return (uint64_t)objc_msgSend(a1, "setPersistentID:", v21);
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v4);
    v9 = (uint64_t)sub_10028B04C(v8, v6, 10);
    v11 = v10 & 1;
    goto LABEL_44;
  }
  v26[0] = result;
  v26[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_31;
    v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v11 = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u)
      goto LABEL_31;
    v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        v11 = 0;
        v9 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v9 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            break;
          v24 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v24 - v23;
          if (__OFSUB__(v24, v23))
            break;
          v11 = 0;
          ++v22;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v9 = 0;
    v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_100308500(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  _QWORD v14[5];
  uint64_t v15;

  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = swift_allocObject(&unk_10051C0E0, 32, 7);
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v14[4] = sub_1000DC31C;
  v15 = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10030C468;
  v14[3] = &unk_10051C0F8;
  v12 = _Block_copy(v14);
  swift_retain(v11);
  objc_msgSend(v9, "initWithSource:modelKind:block:", v10, a3, v12);

  _Block_release(v12);
  v13 = swift_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation(v11, "", 0, 0, 0, 1, v13);
  swift_release(v11);
  if ((a3 & 1) != 0)
    __break(1u);
}

void sub_10030864C(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  __n128 v13;
  double v14;
  _QWORD v15[4];
  _QWORD aBlock[5];
  uint64_t v17;

  v4 = objc_opt_self(MPModelSong);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
  v6 = a1;
  Song.title.getter(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, "setTitle:", v7);

  objc_msgSend(v5, "setArtistUploadedContent:", 0);
  v8 = objc_msgSend((id)objc_opt_self(MPIdentifierSet), "emptyIdentifierSet");
  v15[2] = a2;
  v9 = objc_allocWithZone((Class)MPModelLyrics);
  v10 = swift_allocObject(&unk_10051C090, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_10030BFF4;
  *(_QWORD *)(v10 + 24) = v15;
  aBlock[4] = sub_1000DC31C;
  v17 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001880C4;
  aBlock[3] = &unk_10051C0A8;
  v11 = _Block_copy(aBlock);
  swift_retain(v10);
  v12 = objc_msgSend(v9, "initWithIdentifiers:block:", v8, v11);

  _Block_release(v11);
  v13 = swift_release(v17);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 0, 0, 0, 1, v13);
  *(_QWORD *)&v14 = swift_release(v10).n128_u64[0];
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v5, "setLyrics:", v12, v14);

    objc_msgSend(v5, "setHasVideo:", 0);
  }
}

void sub_100308838(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_opt_self(MPModelLyrics);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v2, 0, 0, 0);
  v6 = a1;
  v4 = objc_msgSend(v3, "setHasStoreLyrics:", Song.hasLyrics.getter() & 1);
  v5 = objc_msgSend(v3, "setHasLibraryLyrics:", Song.hasCustomLyrics.getter(v4) & 1);
  objc_msgSend(v3, "setHasTimeSyncedLyrics:", Song.hasTimeSyncedLyrics.getter(v5) & 1);
  objc_msgSend(v3, "setText:", 0);

}

uint64_t sub_100308904()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;

  v1 = v0;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend(v0, "title");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = Optional<A>.description.getter(v4, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._object = (void *)0x8000000100451CC0;
  v11._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v11);
  v12 = objc_msgSend(v1, "identifiers");
  v13 = objc_msgSend(v12, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);

  swift_bridgeObjectRelease(v16);
  return 0x7469742E676E6F73;
}

uint64_t sub_100308A60()
{
  return sub_100306424();
}

uint64_t sub_100308A80()
{
  return sub_100308904();
}

_QWORD *sub_100308AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10000B4C8(&qword_100558E60);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

unint64_t sub_100308B04()
{
  unint64_t result;

  result = qword_100559388;
  if (!qword_100559388)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for LyricsLoader.LyricsError, &type metadata for LyricsLoader.LyricsError);
    atomic_store(result, (unint64_t *)&qword_100559388);
  }
  return result;
}

void sub_100308B4C()
{
  uint64_t v0;

  sub_100306760(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100308B58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100308B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100308B78(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100308B80(uint64_t a1)
{
  uint64_t v1;

  return sub_100304A24(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_100308B90()
{
  uint64_t v0;

  sub_1003066BC(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100308B9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100308BAC(uint64_t a1)
{
  uint64_t v1;

  return sub_100304E9C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100308BB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_10013B57C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002FBBB8();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_100221C44(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100308C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_10013B57C(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;
        result = sub_10003A628(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
        *(_QWORD *)v21 = a1;
        *(_QWORD *)(v21 + 8) = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1002FB840();
      goto LABEL_7;
    }
    sub_1002FA760(v17, a5 & 1);
    v23 = sub_10013B57C(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10013B2E0(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100308DC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10013B57C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002FBBB8();
      goto LABEL_7;
    }
    sub_1002FAD80(v15, a4 & 1);
    v20 = sub_10013B57C(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1002FB7F8(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

unsigned __int8 *sub_100308EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain();
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_100308FD0(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease();
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = sub_10028B04C(v8, v9, a3);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100308FD0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v8 = sub_10030904C(v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10030904C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_10028B488(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_100308AA0(v12, 0);
      v5 = sub_10028B574((unint64_t)v14, v8 + 32, v9, a1, a2, v5, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v13 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v13;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v14 + v8, v9 - v8);
  }
}

void sub_100309190(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  NSObject *v22;
  char *v23;
  id v24;
  __n128 v25;
  double v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)();
  _QWORD *v32;
  __int128 v33[2];
  _QWORD v34[5];

  v10 = type metadata accessor for Song(0);
  v34[3] = v10;
  v34[4] = &off_10051BF30;
  v11 = sub_1000C16E0(v34);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, a2, v10);
  v12 = swift_allocObject(&unk_10051C298, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  sub_1000C53BC((uint64_t)v34, (uint64_t)v33);
  v13 = (_QWORD *)swift_allocObject(&unk_10051C518, 80, 7);
  v13[2] = v12;
  sub_1000B47A8(v33, (uint64_t)(v13 + 3));
  v13[8] = a3;
  v13[9] = a4;
  v31 = sub_10030C46C;
  v32 = v13;
  v27 = _NSConcreteStackBlock;
  v28 = 1107296256;
  v29 = sub_100306420;
  v30 = &unk_10051C530;
  v14 = _Block_copy(&v27);
  v15 = v32;
  swift_retain(a4);
  v16 = objc_msgSend(a1, "newOperationWithResponseHandler:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  v17 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_1000C53BC((uint64_t)v34, (uint64_t)v33);
  v18 = swift_allocObject(&unk_10051C568, 72, 7);
  *(_QWORD *)(v18 + 16) = a5;
  sub_1000B47A8(v33, v18 + 24);
  *(_QWORD *)(v18 + 64) = v16;
  v19 = swift_allocObject(&unk_10051C590, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_10030C3DC;
  *(_QWORD *)(v19 + 24) = v18;
  v31 = sub_100150E54;
  v32 = (_QWORD *)v19;
  v27 = _NSConcreteStackBlock;
  v28 = 1107296256;
  v29 = sub_100185F2C;
  v30 = &unk_10051C5A8;
  v20 = _Block_copy(&v27);
  v21 = v32;
  v22 = v17;
  v23 = a5;
  v24 = v16;
  swift_retain(v19);
  swift_release(v21);
  dispatch_sync(v22, v20);

  _Block_release(v20);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v19, "", 122, 377, 31, 1, v25);
  *(_QWORD *)&v26 = swift_release(v19).n128_u64[0];
  if ((v16 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)&v23[OBJC_IVAR___MusicLyricsLoader_operationQueue], "addOperation:", v24, v26);

    swift_release(v18);
    sub_100011758(v34);
  }
}

void sub_100309430(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  NSObject *v21;
  char *v22;
  id v23;
  __n128 v24;
  double v25;
  void **v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD *v31;
  __int128 v32[2];
  _QWORD v33[5];

  v33[3] = sub_1000DD108(0, &qword_100559650, MPModelSong_ptr);
  v33[4] = &off_10051BF48;
  v33[0] = a2;
  v10 = swift_allocObject(&unk_10051C298, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  sub_1000C53BC((uint64_t)v33, (uint64_t)v32);
  v11 = (_QWORD *)swift_allocObject(&unk_10051C2C0, 80, 7);
  v11[2] = v10;
  sub_1000B47A8(v32, (uint64_t)(v11 + 3));
  v11[8] = a3;
  v11[9] = a4;
  v30 = sub_10030C16C;
  v31 = v11;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  v28 = sub_100306420;
  v29 = &unk_10051C2D8;
  v12 = _Block_copy(&v26);
  v13 = v31;
  v14 = a2;
  swift_retain(a4);
  v15 = objc_msgSend(a1, "newOperationWithResponseHandler:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  v16 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_1000C53BC((uint64_t)v33, (uint64_t)v32);
  v17 = swift_allocObject(&unk_10051C310, 72, 7);
  *(_QWORD *)(v17 + 16) = a5;
  sub_1000B47A8(v32, v17 + 24);
  *(_QWORD *)(v17 + 64) = v15;
  v18 = swift_allocObject(&unk_10051C338, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10030C180;
  *(_QWORD *)(v18 + 24) = v17;
  v30 = sub_100150E54;
  v31 = (_QWORD *)v18;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  v28 = sub_100185F2C;
  v29 = &unk_10051C350;
  v19 = _Block_copy(&v26);
  v20 = v31;
  v21 = v16;
  v22 = a5;
  v23 = v15;
  swift_retain(v18);
  swift_release(v20);
  dispatch_sync(v21, v19);

  _Block_release(v19);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v18, "", 122, 377, 31, 1, v24);
  *(_QWORD *)&v25 = swift_release(v18).n128_u64[0];
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)&v22[OBJC_IVAR___MusicLyricsLoader_operationQueue], "addOperation:", v23, v25);

    swift_release(v17);
    sub_100011758(v33);
  }
}

uint64_t sub_1003096C8(uint64_t a1, void *a2, char *a3, char *a4)
{
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  id v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  _QWORD v59[5];

  v59[3] = sub_1000DD108(0, &qword_100559650, MPModelSong_ptr);
  v59[4] = &off_10051BF48;
  v59[0] = a2;
  if (!a1)
  {
    v32 = qword_100557E50;
    v33 = a2;
    if (v32 != -1)
      swift_once(&qword_100557E50, sub_1002F7F50);
    v34 = type metadata accessor for Logger(0);
    sub_10000D78C(v34, (uint64_t)static Logger.lyrics);
    sub_1000C53BC((uint64_t)v59, (uint64_t)v57);
    v35 = swift_bridgeObjectRetain_n(a4, 2);
    v21 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v36))
    {
      v37 = swift_slowAlloc(32, -1);
      v38 = swift_slowAlloc(96, -1);
      v56 = v38;
      *(_DWORD *)v37 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v37 + 4) = sub_1002E9B3C(a3, a4, &v56);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v37 + 12) = 2082;
      v39 = (char *)Optional<A>.description.getter(0, 0);
      *(_QWORD *)(v37 + 14) = sub_1002E9B3C(v39, v40, &v56);
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2082;
      sub_10000D900(v57, v58);
      v41 = (char *)sub_100308904();
      *(_QWORD *)(v37 + 24) = sub_1002E9B3C(v41, v42, &v56);
      swift_bridgeObjectRelease();
      sub_100011758(v57);
      _os_log_impl((void *)&_mh_execute_header, v21, v36, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);
LABEL_25:
    sub_100011758(v57);
    goto LABEL_26;
  }
  v8 = a2;
  v9 = (void *)_convertErrorToNSError(_:)(a1);
  v10 = objc_msgSend(v9, "domain");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      if (qword_100557E50 != -1)
        swift_once(&qword_100557E50, sub_1002F7F50);
      v18 = type metadata accessor for Logger(0);
      sub_10000D78C(v18, (uint64_t)static Logger.lyrics);
      sub_1000C53BC((uint64_t)v59, (uint64_t)v57);
      v19 = v9;
      swift_bridgeObjectRetain_n(a4, 2);
      v20 = v19;
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.error.getter(v21);
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc(42, -1);
        v24 = swift_slowAlloc(96, -1);
        v56 = v24;
        *(_DWORD *)v23 = 136446978;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v23 + 4) = sub_1002E9B3C(a3, a4, &v56);
        swift_bridgeObjectRelease_n(a4, 3);
        *(_WORD *)(v23 + 12) = 2050;
        v25 = objc_msgSend(v20, "code");

        *(_QWORD *)(v23 + 14) = v25;
        *(_WORD *)(v23 + 22) = 2082;
        v26 = objc_msgSend(v20, "domain");
        v27 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        *(_QWORD *)(v23 + 24) = sub_1002E9B3C(v27, v29, &v56);
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 32) = 2082;
        sub_10000D900(v57, v58);
        v30 = (char *)sub_100308904();
        *(_QWORD *)(v23 + 34) = sub_1002E9B3C(v30, v31, &v56);
        swift_bridgeObjectRelease();
        sub_100011758(v57);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v23, 0x2Au);
        swift_arrayDestroy(v24, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v23, -1, -1);

LABEL_26:
        return sub_100011758(v59);
      }
      swift_bridgeObjectRelease_n(a4, 2);

      goto LABEL_25;
    }
  }
  if (objc_msgSend(v9, "code") != (id)-3005)
  {
    if (qword_100557E50 != -1)
      swift_once(&qword_100557E50, sub_1002F7F50);
    v43 = type metadata accessor for Logger(0);
    sub_10000D78C(v43, (uint64_t)static Logger.lyrics);
    sub_1000C53BC((uint64_t)v59, (uint64_t)v57);
    swift_bridgeObjectRetain_n(a4, 2);
    v44 = v9;
    v21 = Logger.logObject.getter(v44);
    v45 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v45))
    {
      v46 = swift_slowAlloc(32, -1);
      v47 = swift_slowAlloc(96, -1);
      v56 = v47;
      *(_DWORD *)v46 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v46 + 4) = sub_1002E9B3C(a3, a4, &v56);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v46 + 12) = 2082;
      v48 = v44;
      v49 = objc_msgSend(v48, "description");
      v50 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v52 = v51;

      *(_QWORD *)(v46 + 14) = sub_1002E9B3C(v50, v52, &v56);
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 22) = 2082;
      sub_10000D900(v57, v58);
      v53 = (char *)sub_100308904();
      *(_QWORD *)(v46 + 24) = sub_1002E9B3C(v53, v54, &v56);
      swift_bridgeObjectRelease();
      sub_100011758(v57);
      _os_log_impl((void *)&_mh_execute_header, v21, v45, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);

    goto LABEL_25;
  }

  return sub_100011758(v59);
}

uint64_t sub_100309DD0(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  id v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  _QWORD v61[5];

  v61[3] = a5;
  v61[4] = a6;
  v12 = sub_1000C16E0(v61);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(v12, a2, a5);
  if (!a1)
  {
    if (qword_100557E50 != -1)
      swift_once(&qword_100557E50, sub_1002F7F50);
    v35 = type metadata accessor for Logger(0);
    sub_10000D78C(v35, (uint64_t)static Logger.lyrics);
    sub_1000C53BC((uint64_t)v61, (uint64_t)v59);
    v36 = swift_bridgeObjectRetain_n(a4, 2);
    v25 = Logger.logObject.getter(v36);
    v37 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v37))
    {
      v38 = swift_slowAlloc(32, -1);
      v39 = swift_slowAlloc(96, -1);
      v58 = v39;
      *(_DWORD *)v38 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v38 + 4) = sub_1002E9B3C(a3, a4, &v58);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v38 + 12) = 2082;
      v40 = (char *)Optional<A>.description.getter(0, 0);
      *(_QWORD *)(v38 + 14) = sub_1002E9B3C(v40, v41, &v58);
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2082;
      sub_10000D900(v59, v60);
      v42 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(_QWORD *)(v38 + 24) = sub_1002E9B3C(v42, v43, &v58);
      swift_bridgeObjectRelease();
      sub_100011758(v59);
      _os_log_impl((void *)&_mh_execute_header, v25, v37, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);
LABEL_25:
    sub_100011758(v59);
    goto LABEL_26;
  }
  v13 = (void *)_convertErrorToNSError(_:)(a1);
  v14 = objc_msgSend(v13, "domain");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      if (qword_100557E50 != -1)
        swift_once(&qword_100557E50, sub_1002F7F50);
      v22 = type metadata accessor for Logger(0);
      sub_10000D78C(v22, (uint64_t)static Logger.lyrics);
      sub_1000C53BC((uint64_t)v61, (uint64_t)v59);
      v23 = v13;
      swift_bridgeObjectRetain_n(a4, 2);
      v24 = v23;
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.error.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc(42, -1);
        v57 = swift_slowAlloc(96, -1);
        v58 = v57;
        *(_DWORD *)v27 = 136446978;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v27 + 4) = sub_1002E9B3C(a3, a4, &v58);
        swift_bridgeObjectRelease_n(a4, 3);
        *(_WORD *)(v27 + 12) = 2050;
        v28 = objc_msgSend(v24, "code");

        *(_QWORD *)(v27 + 14) = v28;
        *(_WORD *)(v27 + 22) = 2082;
        v29 = objc_msgSend(v24, "domain");
        v30 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v32 = v31;

        *(_QWORD *)(v27 + 24) = sub_1002E9B3C(v30, v32, &v58);
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 32) = 2082;
        sub_10000D900(v59, v60);
        v33 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
        *(_QWORD *)(v27 + 34) = sub_1002E9B3C(v33, v34, &v58);
        swift_bridgeObjectRelease();
        sub_100011758(v59);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v27, 0x2Au);
        swift_arrayDestroy(v57, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1, -1);
        swift_slowDealloc(v27, -1, -1);

LABEL_26:
        return sub_100011758(v61);
      }
      swift_bridgeObjectRelease_n(a4, 2);

      goto LABEL_25;
    }
  }
  if (objc_msgSend(v13, "code") != (id)-3005)
  {
    if (qword_100557E50 != -1)
      swift_once(&qword_100557E50, sub_1002F7F50);
    v44 = type metadata accessor for Logger(0);
    sub_10000D78C(v44, (uint64_t)static Logger.lyrics);
    sub_1000C53BC((uint64_t)v61, (uint64_t)v59);
    swift_bridgeObjectRetain_n(a4, 2);
    v45 = v13;
    v25 = Logger.logObject.getter(v45);
    v46 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v46))
    {
      v47 = swift_slowAlloc(32, -1);
      v48 = swift_slowAlloc(96, -1);
      v58 = v48;
      *(_DWORD *)v47 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v47 + 4) = sub_1002E9B3C(a3, a4, &v58);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v47 + 12) = 2082;
      v49 = v45;
      v50 = objc_msgSend(v49, "description");
      v51 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v53 = v52;

      *(_QWORD *)(v47 + 14) = sub_1002E9B3C(v51, v53, &v58);
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2082;
      sub_10000D900(v59, v60);
      v54 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(_QWORD *)(v47 + 24) = sub_1002E9B3C(v54, v55, &v58);
      swift_bridgeObjectRelease();
      sub_100011758(v59);
      _os_log_impl((void *)&_mh_execute_header, v25, v46, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy(v48, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);

    goto LABEL_25;
  }

  return sub_100011758(v61);
}

uint64_t _s11MusicCoreUI12LyricsLoaderC4SongO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void **v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  id v23;
  char v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin();
  v10 = (void **)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v12 = (char *)&v28 - v11;
  sub_10000B4C8(&qword_100559508);
  v13 = __chkstk_darwin();
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void **)&v15[*(int *)(v13 + 48)];
  sub_10030B904(a1, (uint64_t)v15);
  sub_10030B904(a2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v15, v8) == 1)
  {
    sub_10030B904((uint64_t)v15, (uint64_t)v10);
    v17 = *v10;
    v18 = v10[1];
    if (swift_getEnumCaseMultiPayload(v16, v8) == 1)
    {
      v19 = *v16;
      v20 = v16[1];
      sub_1000DD108(0, (unint64_t *)&qword_100559510, NSObject_ptr);
      v21 = static NSObject.== infix(_:_:)(v17, v19);

      if ((v21 & 1) != 0)
      {
        if (v18)
        {
          if (v20)
          {
            sub_1000DD108(0, &qword_100559518, MPCPlayerResponseTracklist_ptr);
            v22 = v20;
            v23 = v18;
            v24 = static NSObject.== infix(_:_:)(v23, v22);

            if ((v24 & 1) != 0)
              goto LABEL_20;
            goto LABEL_15;
          }
        }
        else
        {
          if (!v20)
          {
LABEL_20:
            sub_10030BDEC((uint64_t)v15);
            v25 = 1;
            return v25 & 1;
          }
          v18 = v20;
        }
      }
      else
      {

      }
LABEL_15:
      sub_10030BDEC((uint64_t)v15);
      goto LABEL_16;
    }

LABEL_11:
    sub_10030BFB4((uint64_t)v15);
LABEL_16:
    v25 = 0;
    return v25 & 1;
  }
  sub_10030B904((uint64_t)v15, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v16, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    goto LABEL_11;
  }
  (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v16, v4);
  v25 = static Song.== infix(_:_:)(v12, v7);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v7, v4);
  v26(v12, v4);
  sub_10030BDEC((uint64_t)v15);
  return v25 & 1;
}

uint64_t _s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  id v44;
  id v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  id v68;
  os_log_type_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  id v78;
  id v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  os_log_type_t v97;
  uint64_t v98;
  char v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  id v108;
  id v109;
  char *v110;
  char *v111;
  char *v112;
  os_log_type_t v113;
  const char *v114;
  NSObject *v115;
  uint8_t *v116;
  uint32_t v117;
  char *v118;
  char *v119;
  char *v120;
  id v121;
  id v122;
  char *v123;
  char *v124;
  char *v125;
  os_log_type_t v126;
  const char *v127;
  char *v128;
  char *v129;
  char *v130;
  id v131;
  id v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  id v139;
  id v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  os_log_type_t v146;
  os_log_type_t v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[15];
  uint64_t v152;
  char v153;
  uint64_t v154;

  v2 = objc_msgSend(a1, "lyrics");
  if (v2)
  {
    v3 = v2;
    if ((objc_msgSend(a1, "hasVideo") & 1) != 0)
    {

      goto LABEL_4;
    }
    v15 = objc_msgSend(v3, "hasLibraryLyrics");
    if ((objc_msgSend(v3, "hasStoreLyrics") & 1) == 0 && !(_DWORD)v15)
    {
      if (qword_100557E50 != -1)
        swift_once(&qword_100557E50, sub_1002F7F50);
      v16 = type metadata accessor for Logger(0);
      sub_10000D78C(v16, (uint64_t)static Logger.lyrics);
      v17 = a1;
      v6 = v3;
      v18 = Logger.logObject.getter(v6);
      v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc(34, -1);
        v21 = swift_slowAlloc(64, -1);
        v152 = v21;
        *(_DWORD *)v20 = 67240962;
        *(_DWORD *)(v20 + 4) = -[NSObject hasLibraryLyrics](v6, "hasLibraryLyrics");
        *(_WORD *)(v20 + 8) = 1026;
        *(_DWORD *)(v20 + 10) = -[NSObject hasStoreLyrics](v6, "hasStoreLyrics");

        *(_WORD *)(v20 + 14) = 2082;
        v22 = objc_msgSend(v17, "title");
        if (v22)
        {
          v23 = v22;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;

        }
        else
        {
          v24 = 0;
          v26 = 0;
        }
        v59 = (char *)Optional<A>.description.getter(v24, v26);
        v61 = v60;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v20 + 16) = sub_1002E9B3C(v59, v61, &v152);

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 24) = 2082;
        v62 = objc_msgSend(v17, "identifiers");
        v63 = objc_msgSend(v62, "description");
        v64 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
        v66 = v65;

        *(_QWORD *)(v20 + 26) = sub_1002E9B3C(v64, v66, &v152);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Loader supportsLyrics=false [no lyrics found] lyrics.hasLibraryLyrics=%{BOOL,public}d lyrics.hasStoreLyrics=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v20, 0x22u);
        swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

        return 0;
      }

      goto LABEL_27;
    }
    v27 = *BagProvider.shared.unsafeMutableAddressor();
    swift_retain(v27);
    v28 = (id)BagProvider.bag.getter();
    swift_release(v27);
    if (v28)
    {
      if ((objc_msgSend((id)objc_opt_self(MPStoreLyricsRequest), "supportsLyricsForURLBag:", v28) & 1) == 0)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend(v28, "dictionaryForBagKey:", v29);

        if (v30)
        {

          if (qword_100557E50 != -1)
            swift_once(&qword_100557E50, sub_1002F7F50);
          v31 = type metadata accessor for Logger(0);
          sub_10000D78C(v31, (uint64_t)static Logger.lyrics);
          v32 = a1;
          v33 = Logger.logObject.getter(v32);
          v34 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v33, v34))
          {

            return (uint64_t)v15;
          }
          v146 = v34;
          v35 = swift_slowAlloc(28, -1);
          v144 = swift_slowAlloc(64, -1);
          v152 = v144;
          *(_DWORD *)v35 = 67240706;
          *(_DWORD *)(v35 + 4) = (_DWORD)v15;
          *(_WORD *)(v35 + 8) = 2082;
          v36 = objc_msgSend(v32, "title");
          if (v36)
          {
            v37 = v36;
            v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
            v40 = v39;

          }
          else
          {
            v38 = 0;
            v40 = 0;
          }
          v118 = (char *)Optional<A>.description.getter(v38, v40);
          v120 = v119;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v35 + 10) = sub_1002E9B3C(v118, v120, &v152);

          swift_bridgeObjectRelease();
          *(_WORD *)(v35 + 18) = 2082;
          v121 = objc_msgSend(v32, "identifiers");
          v122 = objc_msgSend(v121, "description");
          v123 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v122);
          v125 = v124;

          *(_QWORD *)(v35 + 20) = sub_1002E9B3C(v123, v125, &v152);
          swift_bridgeObjectRelease();
          v126 = v146;
          v127 = "Loader supportsLyrics=%{BOOL,public}d [no lyrics keys in bag] song.title=%{public}s song.identifiers=%{public}s";
        }
        else
        {
          if (qword_100557E50 != -1)
            swift_once(&qword_100557E50, sub_1002F7F50);
          v67 = type metadata accessor for Logger(0);
          sub_10000D78C(v67, (uint64_t)static Logger.lyrics);
          v68 = a1;
          v33 = Logger.logObject.getter(v68);
          v69 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v33, v69))
          {

            return (uint64_t)v15;
          }
          v148 = v69;
          v35 = swift_slowAlloc(28, -1);
          v144 = swift_slowAlloc(64, -1);
          v152 = v144;
          *(_DWORD *)v35 = 67240706;
          *(_DWORD *)(v35 + 4) = (_DWORD)v15;
          *(_WORD *)(v35 + 8) = 2082;
          v70 = objc_msgSend(v68, "title");
          if (v70)
          {
            v71 = v70;
            v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
            v74 = v73;

          }
          else
          {
            v72 = 0;
            v74 = 0;
          }
          v128 = (char *)Optional<A>.description.getter(v72, v74);
          v130 = v129;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v35 + 10) = sub_1002E9B3C(v128, v130, &v152);

          swift_bridgeObjectRelease();
          *(_WORD *)(v35 + 18) = 2082;
          v131 = objc_msgSend(v68, "identifiers");
          v132 = objc_msgSend(v131, "description");
          v133 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
          v135 = v134;

          *(_QWORD *)(v35 + 20) = sub_1002E9B3C(v133, v135, &v152);
          swift_bridgeObjectRelease();
          v126 = v148;
          v127 = "Loader supportsLyrics=%{BOOL,public}d [no musicSubscription key in bag] song.title=%{public}s song.iden"
                 "tifiers=%{public}s";
        }
        _os_log_impl((void *)&_mh_execute_header, v33, v126, v127, (uint8_t *)v35, 0x1Cu);
        swift_arrayDestroy(v144, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v144, -1, -1);
        swift_slowDealloc(v35, -1, -1);

        return (uint64_t)v15;
      }
    }
    else
    {
      if (qword_100557E50 != -1)
        swift_once(&qword_100557E50, sub_1002F7F50);
      v50 = type metadata accessor for Logger(0);
      sub_10000D78C(v50, (uint64_t)static Logger.lyrics);
      v28 = a1;
      v51 = Logger.logObject.getter(v28);
      v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v147 = v52;
        v53 = swift_slowAlloc(28, -1);
        v145 = swift_slowAlloc(64, -1);
        v152 = v145;
        *(_DWORD *)v53 = 67240706;
        *(_DWORD *)(v53 + 4) = (_DWORD)v15;
        *(_WORD *)(v53 + 8) = 2082;
        v54 = objc_msgSend(v28, "title");
        if (v54)
        {
          v55 = v54;
          v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v58 = v57;

        }
        else
        {
          v56 = 0;
          v58 = 0;
        }
        v75 = (char *)Optional<A>.description.getter(v56, v58);
        v77 = v76;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v53 + 10) = sub_1002E9B3C(v75, v77, &v152);

        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 18) = 2082;
        v78 = objc_msgSend(v28, "identifiers");
        v79 = objc_msgSend(v78, "description");
        v80 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
        v82 = v81;

        *(_QWORD *)(v53 + 20) = sub_1002E9B3C(v80, v82, &v152);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v51, v147, "Loader supportsLyrics=%{BOOL,public}d [bag is nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v53, 0x1Cu);
        swift_arrayDestroy(v145, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v145, -1, -1);
        swift_slowDealloc(v53, -1, -1);

LABEL_48:
        if (objc_msgSend(v3, "hasStoreLyrics")
          && (static ApplicationCapabilities.shared.getter((uint64_t)v151),
              v83 = v151[3],
              swift_bridgeObjectRetain(),
              sub_10015CA48(v151),
              v84 = sub_1003027C0(2u, v83),
              swift_bridgeObjectRelease(),
              (v84 & 1) != 0))
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v152);
          sub_10015CA48(&v152);
          if ((v153 & 1) != 0)
          {

            return 1;
          }
          if (qword_100557E50 != -1)
            swift_once(&qword_100557E50, sub_1002F7F50);
          v85 = type metadata accessor for Logger(0);
          sub_10000D78C(v85, (uint64_t)static Logger.lyrics);
          v86 = a1;
          v87 = Logger.logObject.getter(v86);
          v88 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v87, v88))
          {

            return (uint64_t)v15;
          }
          v89 = swift_slowAlloc(28, -1);
          v149 = swift_slowAlloc(64, -1);
          v150 = v149;
          *(_DWORD *)v89 = 67240706;
          *(_DWORD *)(v89 + 4) = (_DWORD)v15;
          *(_WORD *)(v89 + 8) = 2082;
          v90 = objc_msgSend(v86, "title");
          if (v90)
          {
            v91 = v90;
            v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
            v94 = v93;

          }
          else
          {
            v92 = 0;
            v94 = 0;
          }
          v136 = (char *)Optional<A>.description.getter(v92, v94);
          v138 = v137;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v89 + 10) = sub_1002E9B3C(v136, v138, &v150);

          swift_bridgeObjectRelease();
          *(_WORD *)(v89 + 18) = 2082;
          v139 = objc_msgSend(v86, "identifiers");
          v140 = objc_msgSend(v139, "description");
          v141 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
          v143 = v142;

          *(_QWORD *)(v89 + 20) = sub_1002E9B3C(v141, v143, &v150);
          swift_bridgeObjectRelease();
          v113 = v88;
          v114 = "Loader supportsLyrics=%{BOOL,public}d [not supported by subscription] subscriptionCapabilities.contains"
                 "(.catalogLyricsViewing)=false song.title=%{public}s song.identifiers=%{public}s";
          v115 = v87;
          v116 = (uint8_t *)v89;
          v117 = 28;
        }
        else
        {
          if (qword_100557E50 != -1)
            swift_once(&qword_100557E50, sub_1002F7F50);
          v95 = type metadata accessor for Logger(0);
          sub_10000D78C(v95, (uint64_t)static Logger.lyrics);
          v96 = a1;
          v3 = v3;
          v87 = Logger.logObject.getter(v3);
          v97 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v87, v97))
          {

            return (uint64_t)v15;
          }
          v89 = swift_slowAlloc(40, -1);
          v149 = swift_slowAlloc(64, -1);
          v150 = v149;
          *(_DWORD *)v89 = 67241218;
          *(_DWORD *)(v89 + 4) = (_DWORD)v15;
          *(_WORD *)(v89 + 8) = 1026;
          *(_DWORD *)(v89 + 10) = objc_msgSend(v3, "hasStoreLyrics");

          *(_WORD *)(v89 + 14) = 1026;
          static ApplicationCapabilities.shared.getter((uint64_t)&v152);
          v98 = v154;
          swift_bridgeObjectRetain();
          sub_10015CA48(&v152);
          v99 = sub_1003027C0(2u, v98);
          swift_bridgeObjectRelease();
          *(_DWORD *)(v89 + 16) = v99 & 1;
          *(_WORD *)(v89 + 20) = 2082;
          v100 = objc_msgSend(v96, "title");
          if (v100)
          {
            v101 = v100;
            v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
            v104 = v103;

          }
          else
          {
            v102 = 0;
            v104 = 0;
          }
          v105 = (char *)Optional<A>.description.getter(v102, v104);
          v107 = v106;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v89 + 22) = sub_1002E9B3C(v105, v107, &v150);

          swift_bridgeObjectRelease();
          *(_WORD *)(v89 + 30) = 2082;
          v108 = objc_msgSend(v96, "identifiers");
          v109 = objc_msgSend(v108, "description");
          v110 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
          v112 = v111;

          *(_QWORD *)(v89 + 32) = sub_1002E9B3C(v110, v112, &v150);
          swift_bridgeObjectRelease();
          v113 = v97;
          v114 = "Loader supportsLyrics=%{BOOL,public}d [can't support store lyrics] lyrics.hasStoreLyrics=%{BOOL,public}"
                 "d allowsSubscriptionContent=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s";
          v115 = v87;
          v116 = (uint8_t *)v89;
          v117 = 40;
        }
        _os_log_impl((void *)&_mh_execute_header, v115, v113, v114, v116, v117);
        swift_arrayDestroy(v149, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v149, -1, -1);
        swift_slowDealloc(v89, -1, -1);

        return (uint64_t)v15;
      }

    }
    goto LABEL_48;
  }
LABEL_4:
  if (qword_100557E50 != -1)
    swift_once(&qword_100557E50, sub_1002F7F50);
  v4 = type metadata accessor for Logger(0);
  sub_10000D78C(v4, (uint64_t)static Logger.lyrics);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v152 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = objc_msgSend(v5, "title");
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v41 = (char *)Optional<A>.description.getter(v12, v14);
    v43 = v42;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 4) = sub_1002E9B3C(v41, v43, &v152);

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    v44 = objc_msgSend(v5, "identifiers");
    v45 = objc_msgSend(v44, "description");
    v46 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v48 = v47;

    *(_QWORD *)(v8 + 14) = sub_1002E9B3C(v46, v48, &v152);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Loader supportsLyrics=false [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
LABEL_27:

    return 0;
  }

  return 0;
}

uint64_t sub_10030B858()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030B868()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10030B88C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100306368(a1, a2, *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_10030B898()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for LyricsLoader()
{
  return objc_opt_self(MusicLyricsLoader);
}

uint64_t type metadata accessor for LyricsLoader.Song(uint64_t a1)
{
  uint64_t result;

  result = qword_1005594C0;
  if (!qword_1005594C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LyricsLoader.Song);
  return result;
}

uint64_t sub_10030B904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LyricsLoader.Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10030B948(uint64_t a1)
{
  uint64_t v1;

  sub_100307AB8(a1, *(_QWORD *)(v1 + 16));
}

void sub_10030B950(void *a1)
{
  uint64_t v1;

  sub_10030864C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10030B958()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10030B96C()
{
  unint64_t result;

  result = qword_100559420;
  if (!qword_100559420)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for LyricsLoader.LyricsError, &type metadata for LyricsLoader.LyricsError);
    atomic_store(result, (unint64_t *)&qword_100559420);
  }
  return result;
}

uint64_t destroy for LyricsLoader.Result(uint64_t a1)
{
  return sub_10001DA20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11MusicCoreUI12LyricsLoaderC6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10002EBA0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10002EBA0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_10001DA20(v6, v7, v8);
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for Corner(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_10001DA20(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LyricsLoader.Result()
{
  return &type metadata for LyricsLoader.Result;
}

uint64_t storeEnumTagSinglePayload for LyricsLoader.LyricsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10030BB14 + 4 * byte_10043B953[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10030BB48 + 4 * byte_10043B94E[v4]))();
}

uint64_t sub_10030BB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10030BB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10030BB58);
  return result;
}

uint64_t sub_10030BB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10030BB6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10030BB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10030BB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LyricsLoader.LyricsError()
{
  return &type metadata for LyricsLoader.LyricsError;
}

char *initializeBufferWithCopyOfBuffer for LyricsLoader.Song(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_QWORD *)a1 = v7;
      *((_QWORD *)a1 + 1) = v8;
      v9 = v7;
      v10 = v8;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for Song(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void destroy for LyricsLoader.Song(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for Song(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

_QWORD *initializeWithCopy for LyricsLoader.Song(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *(void **)a2;
    v7 = *(void **)(a2 + 8);
    *a1 = v6;
    a1[1] = v7;
    v8 = v6;
    v9 = v7;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for Song(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **assignWithCopy for LyricsLoader.Song(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_10030BDEC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      v8 = v6;
      v9 = v7;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v13 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_10030BDEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LyricsLoader.Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for LyricsLoader.Song(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for Song(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *assignWithTake for LyricsLoader.Song(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10030BDEC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for Song(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10030BF48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10043BA90;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10030BFB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_100559508);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10030BFF4(void *a1)
{
  sub_100308838(a1);
}

uint64_t sub_10030BFFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C00C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C020(uint64_t a1)
{
  return sub_10030C0AC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100308220);
}

uint64_t sub_10030C02C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10030C0A0(uint64_t a1)
{
  return sub_10030C0AC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1003081C8);
}

uint64_t sub_10030C0AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_10030C0F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C108()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10030C12C(void *a1)
{
  uint64_t v1;

  return sub_100307EE0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10030C134()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C144()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10030C16C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100306A8C(a1, a2, *(_QWORD *)(v2 + 16), (_QWORD *)(v2 + 24), *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_10030C180()
{
  uint64_t v0;

  return sub_1003073C4(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_10030C190()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C1A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

double sub_10030C1D4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100307248(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(char **)(v2 + 40), *(char **)(v2 + 48));
}

uint64_t sub_10030C1E4()
{
  uint64_t v0;

  sub_100011758((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10030C210()
{
  uint64_t v0;

  sub_1003071A8(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_10030C21C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C238()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10030C264()
{
  uint64_t v0;

  sub_100306988(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10030C270()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000B4C8(&qword_100559658);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10030C2E8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  sub_10000B4C8(&qword_100559658);
  return sub_100304F80(a1, a2, a3, a4);
}

uint64_t sub_10030C358()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_100011758(v0 + 3);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10030C390()
{
  uint64_t v0;

  sub_100011758((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10030C3C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10030C470(uint64_t a1)
{
  char *v1;
  char *v2;
  double v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[544];

  v2 = v1;
  memcpy(v8, &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
  sub_10030ED5C((uint64_t)v8);
  LOBYTE(a1) = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v8, a1);
  sub_10030EE2C((uint64_t)v8);
  if ((a1 & 1) == 0)
  {
    sub_10030E668(0);
    objc_msgSend(v2, "bounds");
    sub_10030DDD8(v4);
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      sub_10030E90C();
      v5 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
      v6 = *(void **)&v2[v5];
      *(_QWORD *)&v2[v5] = 0;

    }
    else
    {
      sub_10030E6FC();
      v7 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
      if (v7)
      {
        swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation]);
        sub_10030FB84();
        swift_release(v7);
      }
    }
    sub_10030D07C(0, *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
  }
}

void sub_10030C580(char a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  NSString v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t i;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t j;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  char *v64;
  uint64_t v65;
  id v66;
  void *v67;
  char v68;
  _BYTE __dst[560];

  v68 = a1 & 1;
  if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == (a1 & 1))
    return;
  v3 = v2;
  v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = v68;
  if ((a1 & 1) != 0)
  {
    sub_10030E90C();
    v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
    v7 = *(void **)&v3[v6];
    *(_QWORD *)&v3[v6] = 0;

    if ((a2 & 1) == 0)
      return;
  }
  else
  {
    if ((a2 & 1) == 0)
    {
      sub_10030E6FC();
      v53 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
      if (v53)
      {
        swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation]);
        sub_10030FB84();
        swift_release(v53);
      }
      return;
    }
    v8 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
    v16 = (void *)static OS_dispatch_queue.main.getter(v8, v9, v10, v11, v12, v13, v14, v15);
    v17 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    objc_msgSend(v17, "settlingDuration");
    v19 = v18;

    v20 = swift_allocObject(&unk_10051C770, 24, 7);
    *(_QWORD *)(v20 + 16) = v3;
    v21 = v3;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_10030F95C, v20, v19);

    swift_release(v20);
  }
  v22 = *(_QWORD *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (!v22)
    return;
  v23 = 240;
  if (v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind])
    v23 = 264;
  v24 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v23], "CGColor", swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation]).n128_f64[0]);
  v64 = &v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  v25 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248], "CGColor");
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v26);

  CASpringAnimation.springParameters.setter(objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0));
  if ((a1 & 1) != 0)
    v28 = v25;
  else
    v28 = v24;
  if ((a1 & 1) != 0)
    v29 = v24;
  else
    v29 = v25;
  objc_msgSend(v27, "setFromValue:", v28, v25);
  v66 = v29;
  v67 = v27;
  objc_msgSend(v27, "setToValue:", v29);
  v30 = swift_bridgeObjectRetain();
  v31 = (uint64_t)sub_10030CCD0(v30);
  swift_bridgeObjectRelease();
  v65 = v22;
  v63 = v24;
  if ((unint64_t)v31 >> 62)
    goto LABEL_38;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v32)
  {
    v33 = 4;
    while (1)
    {
      v34 = (v31 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33 - 4, v31)
          : (char *)*(id *)(v31 + 8 * v33);
      v35 = v34;
      v36 = v33 - 3;
      if (__OFADD__(v33 - 4, 1))
        break;
      v37 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer;
      v38 = *(void **)&v34[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
      if (!v38)
        goto LABEL_63;
      v39 = v38;
      v40 = String._bridgeToObjectiveC()();
      objc_msgSend(v39, "addAnimation:forKey:", v67, v40);

      v41 = *(void **)&v35[v37];
      if (!v41)
        goto LABEL_64;
      objc_msgSend(v41, "setBackgroundColor:", v66);
      sub_1000DD108(0, (unint64_t *)&qword_10055CDB0, UIView_ptr);
      v42 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      v43 = swift_allocObject(&unk_10051C748, 25, 7);
      *(_QWORD *)(v43 + 16) = v35;
      *(_BYTE *)(v43 + 24) = v68;
      v44 = v35;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v42, 0, sub_10030F8FC, v43, 0, 0, 0.0);

      swift_release(v43);
      ++v33;
      if (v36 == v32)
        goto LABEL_26;
    }
    __break(1u);
LABEL_38:
    if (v31 < 0)
      v54 = v31;
    else
      v54 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v32 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  v45 = swift_bridgeObjectRetain();
  v46 = sub_10030CF5C(v45);
  swift_bridgeObjectRelease();
  v47 = (uint64_t)sub_10030CE3C((uint64_t)v46);
  swift_bridgeObjectRelease();
  if ((unint64_t)v47 >> 62)
  {
    if (v47 < 0)
      v55 = v47;
    else
      v55 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v48 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease();
    v49 = v64;
    if (!v48)
      goto LABEL_47;
  }
  else
  {
    v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    v49 = v64;
    if (!v48)
      goto LABEL_47;
  }
  v50 = v48 - 1;
  if (v48 >= 1)
  {
    v51 = 0;
    if ((v47 & 0xC000000000000001) == 0)
      goto LABEL_31;
LABEL_30:
    for (i = specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v47); ; swift_retain(i))
    {
      memcpy(__dst, v49, 0x219uLL);
      sub_10030ED5C((uint64_t)__dst);
      sub_100314200();
      sub_10030EE2C((uint64_t)__dst);
      swift_release(i);
      if (v50 == v51)
        break;
      ++v51;
      if ((v47 & 0xC000000000000001) != 0)
        goto LABEL_30;
LABEL_31:
      i = *(_QWORD *)(v47 + 8 * v51 + 32);
    }
LABEL_47:
    swift_bridgeObjectRelease();
    v56 = swift_bridgeObjectRetain();
    v57 = (uint64_t)sub_10030CF5C(v56);
    swift_bridgeObjectRelease();
    if ((unint64_t)v57 >> 62)
    {
      if (v57 < 0)
        v61 = v57;
      else
        v61 = v57 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v58 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease();
      if (v58)
      {
LABEL_49:
        if (v58 >= 1)
        {
          for (j = 0; j != v58; ++j)
          {
            if ((v57 & 0xC000000000000001) != 0)
            {
              v60 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v57);
            }
            else
            {
              v60 = *(_QWORD *)(v57 + 8 * j + 32);
              swift_retain(v60);
            }
            sub_100314570();
            swift_release(v60);
          }
          goto LABEL_59;
        }
        goto LABEL_62;
      }
    }
    else
    {
      v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v58)
        goto LABEL_49;
    }
LABEL_59:

    swift_bridgeObjectRelease();
    swift_release(v65);

    return;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

double sub_10030CC40(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  double result;
  uint64_t v5;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected) == 1)
  {
    sub_10030E90C();
    v2 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView), "removeFromSuperview");
    v3 = *(void **)(a1 + v2);
    *(_QWORD *)(a1 + v2) = 0;

  }
  else
  {
    sub_10030E6FC();
    v5 = *(_QWORD *)(a1
                   + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (v5)
    {
      swift_retain(v5);
      sub_10030FB84();
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

_QWORD *sub_10030CCD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v5 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v7 = v3 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_15;
LABEL_11:
      v8 = *(void **)(v6 + 72);
      v9 = v8;
      swift_release(v6);
      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
        specialized Array._endMutation()(v4);
      }
      ++v3;
      if (v7 == v2)
        goto LABEL_20;
    }
    v6 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v6);
    v7 = v3 - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10030CE3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      swift_release(v5);
      sub_100383E9C(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v5);
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10030CF5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_release(v5);
      sub_100383EC0(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v5);
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_10030D07C(char a1, double a2)
{
  char *v2;
  char *v3;
  double v4;
  double v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  char isEscapingClosureAtFileLocation;
  uint64_t v47;
  _OWORD v48[34];
  _QWORD __dst[68];

  v3 = &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  v4 = *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 336];
  v5 = v4 + a2;
  if (*(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] != v4 + a2)
  {
    *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = v5;
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      if ((a1 & 1) != 0)
      {
        v6 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
        if (!v6)
          return;
        v7 = v3[40];
        v8 = *((_QWORD *)v3 + 6);
        v9 = v3[56];
        v10 = *((_QWORD *)v3 + 8);
        v11 = v3[72];
        v12 = *((_QWORD *)v3 + 22);
        v13 = v3[184];
        v14 = *((_QWORD *)v3 + 26);
        v15 = *((_QWORD *)v3 + 33);
        v16 = *((_QWORD *)v3 + 34);
        v17 = *((_QWORD *)v3 + 35);
        v18 = *((_QWORD *)v3 + 40);
        v19 = *((_QWORD *)v3 + 41);
        v20 = *((_QWORD *)v3 + 43);
        v21 = *((_QWORD *)v3 + 46);
        v22 = *((_QWORD *)v3 + 47);
        v23 = *((_QWORD *)v3 + 48);
        v24 = *((_QWORD *)v3 + 49);
        v25 = *((_QWORD *)v3 + 56);
        v26 = *((_QWORD *)v3 + 57);
        v27 = *((_QWORD *)v3 + 60);
        v28 = *((_QWORD *)v3 + 61);
        v29 = *((_QWORD *)v3 + 66);
        v30 = v3[536];
        *(_QWORD *)&v48[0] = *(_QWORD *)v3;
        *(_OWORD *)((char *)v48 + 8) = *(_OWORD *)(v3 + 8);
        *(_OWORD *)((char *)&v48[1] + 8) = *(_OWORD *)(v3 + 24);
        BYTE8(v48[2]) = v7;
        *(_QWORD *)&v48[3] = v8;
        BYTE8(v48[3]) = v9;
        *(_QWORD *)&v48[4] = v10;
        BYTE8(v48[4]) = v11;
        v31 = *((_OWORD *)v3 + 6);
        v48[5] = *((_OWORD *)v3 + 5);
        v48[6] = v31;
        v32 = *((_OWORD *)v3 + 8);
        v48[7] = *((_OWORD *)v3 + 7);
        v48[8] = v32;
        v33 = *((_OWORD *)v3 + 10);
        v48[9] = *((_OWORD *)v3 + 9);
        v48[10] = v33;
        *(_QWORD *)&v48[11] = v12;
        BYTE8(v48[11]) = v13;
        v48[12] = *((_OWORD *)v3 + 12);
        *(_OWORD *)((char *)&v48[13] + 8) = *(_OWORD *)(v3 + 216);
        *(_OWORD *)((char *)&v48[14] + 8) = *(_OWORD *)(v3 + 232);
        *(_OWORD *)((char *)&v48[15] + 8) = *(_OWORD *)(v3 + 248);
        *(_QWORD *)&v48[13] = v14;
        *((_QWORD *)&v48[16] + 1) = v15;
        *(_QWORD *)&v48[17] = v16;
        *((_QWORD *)&v48[17] + 1) = v17;
        v34 = *((_OWORD *)v3 + 19);
        v48[18] = *((_OWORD *)v3 + 18);
        v48[19] = v34;
        *(_QWORD *)&v48[20] = v18;
        *((_QWORD *)&v48[20] + 1) = v19;
        *(double *)&v48[21] = v4;
        *((_QWORD *)&v48[21] + 1) = v20;
        v48[22] = *((_OWORD *)v3 + 22);
        *(_QWORD *)&v48[23] = v21;
        *((_QWORD *)&v48[23] + 1) = v22;
        *(_QWORD *)&v48[24] = v23;
        *((_QWORD *)&v48[24] + 1) = v24;
        v35 = *((_OWORD *)v3 + 26);
        v48[25] = *((_OWORD *)v3 + 25);
        v48[26] = v35;
        v48[27] = *((_OWORD *)v3 + 27);
        *(_QWORD *)&v48[28] = v25;
        *((_QWORD *)&v48[28] + 1) = v26;
        v48[29] = *((_OWORD *)v3 + 29);
        *(_QWORD *)&v48[30] = v27;
        *((_QWORD *)&v48[30] + 1) = v28;
        v36 = *((_OWORD *)v3 + 32);
        v48[31] = *((_OWORD *)v3 + 31);
        v48[32] = v36;
        *(_QWORD *)&v48[33] = v29;
        BYTE8(v48[33]) = v30;
        memcpy(__dst, v48, 0x219uLL);
        v37 = v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
        v38 = *(_QWORD *)(v6 + 24);
        if (!((unint64_t)v38 >> 62))
        {
          v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain(v6);
          sub_10030ED5C((uint64_t)v48);
          swift_bridgeObjectRetain();
          if (v39)
          {
LABEL_7:
            if (v39 < 1)
            {
              __break(1u);
              return;
            }
            for (i = 0; i != v39; ++i)
            {
              if ((v38 & 0xC000000000000001) != 0)
              {
                v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
              }
              else
              {
                v41 = *(_QWORD *)(v38 + 8 * i + 32);
                swift_retain(v41);
              }
              sub_1003115C0((uint64_t)__dst, v37, v5);
              swift_release(v41);
            }
          }
LABEL_19:
          swift_bridgeObjectRelease();
          sub_10030EE2C((uint64_t)v48);
          swift_release(v6);
          return;
        }
      }
      else
      {
        v37 = objc_opt_self(UIView);
        v6 = swift_allocObject(&unk_10051C6D0, 32, 7);
        *(_QWORD *)(v6 + 16) = v2;
        *(double *)(v6 + 24) = v5;
        v38 = swift_allocObject(&unk_10051C6F8, 32, 7);
        *(_QWORD *)(v38 + 16) = sub_10030F8A4;
        *(_QWORD *)(v38 + 24) = v6;
        __dst[4] = sub_100150C04;
        __dst[5] = v38;
        __dst[0] = _NSConcreteStackBlock;
        __dst[1] = 1107296256;
        __dst[2] = sub_100185F2C;
        __dst[3] = &unk_10051C710;
        v42 = _Block_copy(__dst);
        v43 = __dst[5];
        v44 = v2;
        swift_retain(v38);
        objc_msgSend((id)v37, "performWithoutAnimation:", v42, swift_release(v43).n128_f64[0]);
        _Block_release(v42);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v38, "", 124, 84, 48, 1, v45);
        swift_release(v6);
        swift_release(v38);
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
        __break(1u);
      }
      if (v38 < 0)
        v47 = v38;
      else
        v47 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v6);
      sub_10030ED5C((uint64_t)v48);
      swift_bridgeObjectRetain();
      v39 = _CocoaArrayWrapper.endIndex.getter(v47);
      if (v39)
        goto LABEL_7;
      goto LABEL_19;
    }
  }
}

void sub_10030D454(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[544];

  v2 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
  if (v2)
  {
    memcpy(v11, (const void *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs), 0x219uLL);
    v5 = *(unsigned __int8 *)(a1
                            + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction);
    v6 = *(_QWORD *)(v2 + 24);
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v10 = *(_QWORD *)(v2 + 24);
      else
        v10 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v2);
      sub_10030ED5C((uint64_t)v11);
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter(v10);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(v2);
      sub_10030ED5C((uint64_t)v11);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          }
          else
          {
            v9 = *(_QWORD *)(v6 + 8 * i + 32);
            swift_retain(v9);
          }
          sub_1003115C0((uint64_t)v11, v5, a2);
          swift_release(v9);
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_10030EE2C((uint64_t)v11);
    swift_release(v2);
  }
}

id sub_10030D5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  _QWORD *v11;
  char v12;
  double v13;
  uint64_t v14;
  void *v15;
  double v16;
  uint64_t v17;

  v7 = v6;
  v11 = &v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  v12 = a5 & 1;
  *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a4;
  v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v12;
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10030E668(0);
  objc_msgSend(v7, "bounds");
  sub_10030DDD8(v13);
  if (v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_10030E90C();
    v14 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
    v15 = *(void **)&v7[v14];
    *(_QWORD *)&v7[v14] = 0;

  }
  else
  {
    sub_10030E6FC();
    v17 = *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
    if (v17)
    {
      swift_retain(*(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation]);
      sub_10030FB84();
      *(_QWORD *)&v16 = swift_release(v17).n128_u64[0];
    }
  }
  objc_msgSend(v7, "setNeedsLayout", v16);
  return objc_msgSend(v7, "layoutIfNeeded");
}

id sub_10030D710(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, char a5, uint64_t a6, char a7, uint64_t a8)
{
  _BYTE *v8;
  char v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  objc_super v19;

  v14 = a5 & 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  v15 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  v16 = a7 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], __src, 0x219uLL);
  *(_QWORD *)&v8[v15] = 0;
  v17 = &v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  *v17 = a1;
  v17[1] = a2;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] = v14;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a6;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a8;
  v19.receiver = v8;
  v19.super_class = (Class)_s8TextViewCMa();
  return objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

void sub_10030D8D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  void *v7;
  double v8;
  void *v9;
  uint64_t v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)_s8TextViewCMa();
  objc_msgSendSuper2(&v11, "layoutSubviews");
  v2 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v3)
  {
    swift_retain(v3);
    sub_10030FB84();
    swift_release(v3);
    v4 = *(_QWORD *)&v1[v2];
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)&v1[v2] = 0;
  *(_QWORD *)&v5 = swift_release(v4).n128_u64[0];
  v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview", v5);
  v7 = *(void **)&v1[v6];
  *(_QWORD *)&v1[v6] = 0;

  objc_msgSend(v1, "bounds");
  sub_10030DDD8(v8);
  if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_10030E90C();
    objc_msgSend(*(id *)&v1[v6], "removeFromSuperview");
    v9 = *(void **)&v1[v6];
    *(_QWORD *)&v1[v6] = 0;

  }
  else
  {
    sub_10030E6FC();
    v10 = *(_QWORD *)&v1[v2];
    if (v10)
    {
      swift_retain(*(_QWORD *)&v1[v2]);
      sub_10030FB84();
      swift_release(v10);
    }
  }
  sub_10030D07C(0, *(double *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
}

double sub_10030DA38(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  CTParagraphStyleRef v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSString *v20;
  id v21;
  NSString *v22;
  id v23;
  NSString v24;
  Class isa;
  const __CFAttributedString *v26;
  uint64_t v27;
  void *v28;
  const __CTFramesetter *v29;
  CTFramesetterRef v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  char v36;
  char v37;
  CTParagraphStyleSetting v38;
  int v39;
  uint64_t v40;
  char *v41;
  _BYTE v42[112];
  _QWORD v43[4];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
  swift_bridgeObjectRetain();
  LOBYTE(v3) = String.containsExcessiveHeightCharacters.getter(v3, v4);
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    NSTextAlignment.ctTextAlignment.getter(*(_QWORD *)(v1
                                                     + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v38.spec = kCTParagraphStyleSpecifierLineBoundsOptions;
    v38.valueSize = 8;
    v38.value = &v37;
    v39 = 0;
    v40 = 1;
    v41 = &v36;
    v5 = CTParagraphStyleCreate(&v38, 2uLL);
    type metadata accessor for CTParagraphStyle(0);
  }
  else
  {
    v5 = (CTParagraphStyleRef)objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    -[__CTParagraphStyle setAlignment:](v5, "setAlignment:", *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v7 = v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 184) & 1) == 0)
    {
      v8 = *(double *)(v7 + 176);
      v9 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind))
        v10 = 192;
      else
        v10 = 168;
      objc_msgSend(*(id *)(v7 + v10), "ascender");
      if (*(_BYTE *)(v1 + v9))
        v12 = 192;
      else
        v12 = 168;
      v13 = v8 - v11;
      objc_msgSend(*(id *)(v7 + v12), "descender");
      -[__CTParagraphStyle setLineSpacing:](v5, "setLineSpacing:", v13 + v14);
    }
    v6 = sub_1000DD108(0, &qword_1005597C8, NSMutableParagraphStyle_ptr);
  }
  v43[3] = v6;
  v43[0] = v5;
  v15 = sub_10000B4C8(&qword_1005597D0);
  inited = swift_initStackObject(v15, v42);
  *(_OWORD *)(inited + 16) = xmmword_100424BA0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v17 = 168;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind))
    v17 = 192;
  v18 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v17);
  v19 = sub_1000DD108(0, (unint64_t *)&qword_100558268, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  sub_1000760E0((uint64_t)v43, inited + 80);
  swift_bridgeObjectRetain();
  v20 = NSFontAttributeName;
  v21 = v18;
  v22 = NSParagraphStyleAttributeName;
  sub_1002D3A28(inited);
  v23 = objc_allocWithZone((Class)NSAttributedString);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _s3__C3KeyVMa_1(0);
  sub_10030F838();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v26 = (const __CFAttributedString *)objc_msgSend(v23, "initWithString:attributes:", v24, isa);

  v27 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter;
  v28 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  if (v28)
  {
    v29 = *(const __CTFramesetter **)(v1
                                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  }
  else
  {
    v30 = CTFramesetterCreateWithAttributedString(v26);
    v31 = *(void **)(v1 + v27);
    *(_QWORD *)(v1 + v27) = v30;
    v29 = v30;

    v28 = 0;
  }
  v32 = v28;
  v33 = CTFramesetterRef.suggestedFrameSize(constraints:)(a1, INFINITY);
  CTFramesetterRef.createFrame(_:)(0.0, 0.0, v33, v34);

  sub_100011758(v43);
  return v33;
}

void sub_10030DDD8(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CGRect v16;

  v2 = v1;
  objc_msgSend(v1, "bounds");
  if (CGRectGetHeight(v16) != 0.0)
  {
    v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      v5 = sub_10030DA38(a1);
      v7 = v6;
      v8 = v5;
      v10 = v9;
      swift_bridgeObjectRetain();
      CTFrameRef.linesWithFrames(flippedCoordinates:useExtendedLineBounds:)(1, 0);
      v11 = __chkstk_darwin();
      v12 = sub_10030EF0C(v11, (uint64_t (*)(double, double, double, double))sub_10030EEFC);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = _s5FrameCMa();
      v14 = swift_allocObject(v13, 88, 7);
      *(_QWORD *)(v14 + 64) = 0;
      *(_BYTE *)(v14 + 72) = 2;
      *(_QWORD *)(v14 + 80) = 0;
      *(_QWORD *)(v14 + 16) = v7;
      *(_QWORD *)(v14 + 24) = v12;
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 40) = 0;
      *(double *)(v14 + 48) = v8;
      *(_QWORD *)(v14 + 56) = v10;
      v15 = *(_QWORD *)&v2[v4];
      *(_QWORD *)&v2[v4] = v14;
      swift_release(v15);
    }
  }
}

uint64_t sub_10030DF2C(void *a1, void *a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, char a9)
{
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v16 = CTLineRef.glyphRuns.getter();
  v17 = a2;
  v18 = sub_10030F4F4((unint64_t)v16, (uint64_t)v17);
  swift_bridgeObjectRelease();

  v19 = sub_10030F004((uint64_t)v18, (uint64_t (*)(_QWORD *, id, uint64_t, uint64_t))sub_10030F828);
  swift_bridgeObjectRelease();
  v20 = _s4LineCMa();
  v21 = swift_allocObject(v20, 96, 7);
  *(_QWORD *)(v21 + 72) = 0;
  *(_BYTE *)(v21 + 80) = 0;
  *(_QWORD *)(v21 + 88) = 0;
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = a1;
  *(double *)(v21 + 40) = a3;
  *(double *)(v21 + 48) = a4;
  *(double *)(v21 + 56) = a5;
  *(double *)(v21 + 64) = a6;
  *(_BYTE *)(v21 + 32) = a9;
  v22 = a1;
  return v21;
}

Swift::Int sub_10030E030(__int128 *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  __C::_NSRange v20;
  Swift::Int location;
  __C::_NSRange_optional v22;
  Swift::Int length;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  Swift::Int v29;
  uint64_t v30;
  char v31;
  char v32;
  Swift::Int v33;
  char v34;
  char v35;
  Swift::Int v36;
  char v37;
  unint64_t v38;
  uint64_t v40;
  double v41;
  __C::_NSRange v42;
  double v43;
  CGFloat Height;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __C::_NSRange v61;
  CGRect v62;

  CTRunRef.cfStringRange.getter();
  v20.location = sub_1002FCA74(*((_QWORD *)a1 + 2));
  v22 = _NSRange.intersection(_:)(v20);
  location = v22.value.location;
  v22.value.location = 0;
  if (!v22.is_nil)
  {
    length = v22.value.length;
    if (v22.value.length >= 1)
    {
      v24 = Range<>.init(_:in:)(location, v22.value.length, a5, a6);
      if ((v26 & 1) == 0)
      {
        v27 = v24;
        v58 = v25;
        v28 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v28 & 1) != 0)
        {
          v29 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          v22.value.location = v29 - 1;
          if (__OFSUB__(v29, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v56 = v27;
        v30 = sub_1003239C8(v22.value.location, a4);
        if ((v31 & 1) == 0)
          goto LABEL_16;
        v32 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v32 & 1) != 0)
        {
          v33 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          v22.value.location = v33 - 2;
          if (__OFSUB__(v33, 2))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        v30 = sub_1003239C8(v22.value.location, a4);
        if ((v34 & 1) == 0)
          goto LABEL_16;
        v35 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v35 & 1) != 0)
        {
          v36 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v22.value.location = v36 - 3;
          if (__OFSUB__(v36, 3))
          {
LABEL_28:
            __break(1u);
            return v22.value.location;
          }
        }
        v30 = sub_1003239C8(v22.value.location, a4);
        if ((v37 & 1) == 0)
        {
LABEL_16:
          v38 = v30;
          v22.value.location = String.subscript.getter(v56, v58, a5, a6);
          if ((v38 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else
          {
            v54 = *(_QWORD *)&v22.is_nil;
            v55 = v22.value.length;
            v57 = v22.value.location;
            v59 = v40;
            if (v38 < *(_QWORD *)(a3 + 16))
            {
              v41 = *(double *)(a3 + 16 * v38 + 32);
              v42.location = location;
              v42.length = length;
              v61 = CTRunRef.convertToGlyphRange(textRange:)(v42);
              v43 = CTRunRef.typographicBounds(range:)((CFRange)v61);
              v62.origin.x = a7;
              v62.origin.y = a8;
              v62.size.width = a9;
              v62.size.height = a10;
              Height = CGRectGetHeight(v62);
              v45 = a2;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v46 = swift_bridgeObjectRetain();
              v47 = sub_10030F34C(v46, v45, a5, a6, a4, a3, v41, a7, a8, a9, a10);
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v60 = *a1;
              swift_bridgeObjectRetain();
              sub_10005001C((uint64_t)&v60);
              v48 = static String._fromSubstring(_:)(v57, v55, v54, v59);
              v50 = v49;
              swift_bridgeObjectRelease();
              v51 = _s4WordCMa();
              v22.value.location = swift_allocObject(v51, 144, 7);
              *(_BYTE *)(v22.value.location + 88) = 2;
              *(_QWORD *)(v22.value.location + 128) = 0;
              *(_QWORD *)(v22.value.location + 136) = 0;
              v52 = a1[1];
              *(_OWORD *)(v22.value.location + 16) = *a1;
              *(_OWORD *)(v22.value.location + 32) = v52;
              *(_BYTE *)(v22.value.location + 48) = *((_BYTE *)a1 + 32);
              *(_QWORD *)(v22.value.location + 56) = v48;
              *(_QWORD *)(v22.value.location + 64) = v50;
              *(_QWORD *)(v22.value.location + 72) = v47;
              *(_QWORD *)(v22.value.location + 80) = 0;
              *(double *)(v22.value.location + 96) = v41;
              *(_QWORD *)(v22.value.location + 104) = 0;
              *(double *)(v22.value.location + 112) = v43;
              *(CGFloat *)(v22.value.location + 120) = Height;
              return v22.value.location;
            }
          }
          __break(1u);
          goto LABEL_23;
        }
      }
      v22.value.location = 0;
    }
  }
  return v22.value.location;
}

Swift::Int sub_10030E324@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, Swift::Int *a7@<X8>, double a8@<D0>, CGFloat a9@<D1>, CGFloat a10@<D2>, CGFloat a11@<D3>, CGFloat a12@<D4>)
{
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  __C::_NSRange v26;
  Swift::Int location;
  __C::_NSRange_optional v28;
  Swift::Int length;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  Swift::Int v34;
  uint64_t v35;
  char v36;
  char v37;
  Swift::Int v38;
  char v39;
  char v40;
  Swift::Int v41;
  char v42;
  unint64_t v43;
  uint64_t v45;
  double v46;
  __C::_NSRange v47;
  CGFloat Height;
  __C::_NSRange v49;
  __C::_NSRange v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v59;
  double v60;
  uint64_t v61;
  Swift::Int v62;
  uint64_t v63;
  Swift::Int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  Swift::Int v68;
  uint64_t v69;
  uint64_t v70;
  __C::_NSRange v72;
  CGRect v73;

  v23 = *a1;
  v22 = a1[1];
  v24 = a1[4];
  v69 = a1[3];
  v70 = a1[2];
  v25 = a1[5];
  v67 = a1[6];
  CTRunRef.cfStringRange.getter();
  v68 = v24;
  v26.location = v24;
  v26.length = v25;
  v28 = _NSRange.intersection(_:)(v26);
  location = v28.value.location;
  v28.value.location = 0;
  if (v28.is_nil)
    goto LABEL_20;
  length = v28.value.length;
  if (v28.value.length < 1)
    goto LABEL_20;
  v30 = Range<>.init(_:in:)(location, v28.value.length, a3, a4);
  if ((v32 & 1) != 0)
  {
    v28.value.location = 0;
    goto LABEL_20;
  }
  v63 = v31;
  v65 = v30;
  v33 = CTRunRef.status.getter();
  v28.value.location = location;
  if ((v33 & 1) != 0)
  {
    v34 = location + length;
    if (__OFADD__(location, length))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v28.value.location = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  v35 = sub_1003239C8(v28.value.location, a5);
  if ((v36 & 1) != 0)
  {
    v37 = CTRunRef.status.getter();
    v28.value.location = location;
    if ((v37 & 1) != 0)
    {
      v38 = location + length;
      if (__OFADD__(location, length))
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v28.value.location = v38 - 2;
      if (__OFSUB__(v38, 2))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v35 = sub_1003239C8(v28.value.location, a5);
    if ((v39 & 1) != 0)
    {
      v40 = CTRunRef.status.getter();
      v28.value.location = location;
      if ((v40 & 1) != 0)
      {
        v41 = location + length;
        if (__OFADD__(location, length))
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v28.value.location = v41 - 3;
        if (__OFSUB__(v41, 3))
        {
LABEL_29:
          __break(1u);
          return v28.value.location;
        }
      }
      v35 = sub_1003239C8(v28.value.location, a5);
      if ((v42 & 1) != 0)
      {
        v28.value.location = 0;
        goto LABEL_20;
      }
    }
  }
  v43 = v35;
  v28.value.location = String.subscript.getter(v65, v63, a3, a4);
  if ((v43 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v61 = *(_QWORD *)&v28.is_nil;
  v62 = v28.value.length;
  v64 = v28.value.location;
  v66 = v45;
  if (v43 >= *(_QWORD *)(a6 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v46 = *(double *)(a6 + 16 * v43 + 32);
  v47.location = location;
  v47.length = length;
  v72 = CTRunRef.convertToGlyphRange(textRange:)(v47);
  v60 = CTRunRef.typographicBounds(range:)((CFRange)v72);
  v59 = v46 - a8;
  v73.origin.x = a9;
  v73.origin.y = a10;
  v73.size.width = a11;
  v73.size.height = a12;
  Height = CGRectGetHeight(v73);
  v49.location = location;
  v49.length = length;
  v50 = CTRunRef.convertToGlyphRange(textRange:)(v49);
  swift_bridgeObjectRetain();
  v51 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10030F164(a8, a9, a10, a11, a12, v50.location, v50.length, a6, (uint64_t)v51, a3, a4, a5);
  v53 = v52;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v54 = static String._fromSubstring(_:)(v64, v62, v61, v66);
  v56 = v55;
  swift_bridgeObjectRelease();
  v57 = _s8SyllableCMa();
  v28.value.location = swift_allocObject(v57, 152, 7);
  *(_QWORD *)(v28.value.location + 88) = v53;
  *(_QWORD *)(v28.value.location + 96) = 0;
  *(_BYTE *)(v28.value.location + 104) = 2;
  *(_QWORD *)(v28.value.location + 144) = 0;
  *(_QWORD *)(v28.value.location + 16) = v23;
  *(_QWORD *)(v28.value.location + 24) = v22;
  *(_QWORD *)(v28.value.location + 32) = v70;
  *(_QWORD *)(v28.value.location + 40) = v69;
  *(_QWORD *)(v28.value.location + 48) = v68;
  *(_QWORD *)(v28.value.location + 56) = v25;
  *(_QWORD *)(v28.value.location + 64) = v67;
  *(_QWORD *)(v28.value.location + 72) = v54;
  *(_QWORD *)(v28.value.location + 80) = v56;
  *(double *)(v28.value.location + 112) = v59;
  *(_QWORD *)(v28.value.location + 120) = 0;
  *(double *)(v28.value.location + 128) = v60;
  *(CGFloat *)(v28.value.location + 136) = Height;
LABEL_20:
  *a7 = v28.value.location;
  return v28.value.location;
}

void sub_10030E668(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  void *v9;

  v2 = v1;
  if ((a1 & 1) == 0)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
    *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter) = 0;

  }
  v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  v5 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
  if (v5)
  {
    swift_retain(*(_QWORD *)(v2
                           + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation));
    sub_10030FB84();
    swift_release(v5);
    v6 = *(_QWORD *)(v2 + v4);
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(v2 + v4) = 0;
  *(_QWORD *)&v7 = swift_release(v6).n128_u64[0];
  v8 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView), "removeFromSuperview", v7);
  v9 = *(void **)(v2 + v8);
  *(_QWORD *)(v2 + v8) = 0;

}

void sub_10030E6FC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v1)
  {
    v2 = v0;
    v3 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView])
    {
      v4 = *(void **)(v1 + 16);
      v5 = *(double *)(v1 + 48);
      v6 = *(double *)(v1 + 56);
      v7 = objc_allocWithZone((Class)type metadata accessor for CTLabel.Frame());
      v8 = v4;
      swift_retain(v1);
      v9 = CTLabel.Frame.init(ctFrame:suggestedSize:colorOverride:)(v8, 0, v5, v6);
      objc_msgSend(v9, "setOpaque:", 0);
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
      if (v10 == 1)
      {
        v15 = v9;
        objc_msgSend(v2, "bounds");
        v13 = (v16 - v5) * 0.5;
        v14 = 0.0;
      }
      else if (v10 == 2)
      {
        v11 = v9;
        objc_msgSend(v2, "bounds");
        v13 = v12 - v5;
        v14 = 0.0;
      }
      else
      {
        v17 = v9;
        objc_msgSend(v2, "bounds");
        v5 = v18;
        v6 = v19;
      }
      objc_msgSend(v9, "setFrame:", v13, v14, v5, v6);

      objc_msgSend(v2, "bounds");
      v24 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v20, v21, v22, v23);
      objc_msgSend(v24, "setBackgroundColor:", *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248]);
      objc_msgSend(v24, "setMaskView:", v9);
      objc_msgSend(v2, "addSubview:", v24);
      v25 = *(id *)&v2[v3];
      *(_QWORD *)&v2[v3] = v24;
      swift_release(v1);

    }
  }
}

void sub_10030E90C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  void **v4;
  uint64_t v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  _BYTE v26[544];

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v2 && !*(_QWORD *)(v2 + 80))
  {
    v3 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind];
    v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
    v5 = 21;
    if (v3)
      v5 = 24;
    v6 = v4[v5];
    v7 = v4 + 33;
    if ((v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] & 1) == 0)
      v7 = v4 + 30;
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
      v8 = v7;
    else
      v8 = v4 + 31;
    v9 = *v8;
    memcpy(v26, v4, 0x219uLL);
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities];
    v11 = !sub_1003237F4(1, v10) && !sub_1003237F4(2, v10);
    v12 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
    swift_retain(v2);
    v13 = v6;
    v14 = v9;
    sub_10030ED5C((uint64_t)v26);
    v15 = (void *)sub_10031002C(v13, v14, v3, v26, v11, v12);
    sub_10030EE2C((uint64_t)v26);
    swift_release(v2);

    v16 = *(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
    if (v16 == 1)
    {
      v22 = v15;
      objc_msgSend(v1, "bounds");
      v24 = v23;
      objc_msgSend(v22, "bounds");
      v21 = (v24 - v25) * 0.5;
    }
    else
    {
      if (v16 != 2)
      {
LABEL_18:
        objc_msgSend(v1, "addSubview:", v15);

        return;
      }
      v17 = v15;
      objc_msgSend(v1, "bounds");
      v19 = v18;
      objc_msgSend(v17, "bounds");
      v21 = v19 - v20;
    }
    objc_msgSend(v15, "frame");
    objc_msgSend(v15, "setFrame:", v21);

    goto LABEL_18;
  }
}

id sub_10030EB50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s8TextViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s8TextViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView);
}

uint64_t _s8TextViewC4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10030EC94 + 4 * byte_10043BAD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10030ECC8 + 4 * byte_10043BAD0[v4]))();
}

uint64_t sub_10030ECC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10030ECD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10030ECD8);
  return result;
}

uint64_t sub_10030ECE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10030ECECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10030ECF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10030ECF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TextViewC4KindOMa()
{
  return &_s8TextViewC4KindON;
}

unint64_t sub_10030ED18()
{
  unint64_t result;

  result = qword_1005597C0;
  if (!qword_1005597C0)
  {
    result = swift_getWitnessTable(byte_10043BAE8, &_s8TextViewC4KindON);
    atomic_store(result, (unint64_t *)&qword_1005597C0);
  }
  return result;
}

uint64_t sub_10030ED5C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  v2 = *(void **)(a1 + 192);
  v3 = *(void **)(a1 + 200);
  v4 = *(void **)(a1 + 208);
  v5 = *(void **)(a1 + 232);
  v6 = *(void **)(a1 + 240);
  v8 = *(void **)(a1 + 248);
  v7 = *(void **)(a1 + 256);
  v9 = *(void **)(a1 + 264);
  v10 = *(void **)(a1 + 272);
  v27 = *(void **)(a1 + 328);
  v28 = *(void **)(a1 + 344);
  v29 = *(void **)(a1 + 376);
  v30 = *(void **)(a1 + 384);
  v31 = *(void **)(a1 + 456);
  v11 = *(id *)(a1 + 168);
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v8;
  v18 = v7;
  v19 = v9;
  v20 = v10;
  v21 = v27;
  v22 = v28;
  v23 = v29;
  v24 = v30;
  v25 = v31;
  return a1;
}

uint64_t sub_10030EE2C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v15 = *(void **)(a1 + 192);
  v16 = *(void **)(a1 + 168);
  v13 = *(void **)(a1 + 208);
  v14 = *(void **)(a1 + 200);
  v2 = *(void **)(a1 + 240);
  v12 = *(void **)(a1 + 232);
  v3 = *(void **)(a1 + 248);
  v4 = *(void **)(a1 + 256);
  v6 = *(void **)(a1 + 264);
  v5 = *(void **)(a1 + 272);
  v7 = *(void **)(a1 + 328);
  v8 = *(void **)(a1 + 344);
  v9 = *(void **)(a1 + 376);
  v10 = *(void **)(a1 + 384);

  return a1;
}

uint64_t sub_10030EEFC(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return sub_10030DF2C(a1, *(void **)(v5 + 16), a2, a3, a4, a5, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_BYTE *)(v5 + 40));
}

_QWORD *sub_10030EF0C(uint64_t a1, uint64_t (*a2)(double, double, double, double))
{
  uint64_t v3;
  _QWORD *result;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = (double *)(a1 + 64);
    do
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      v11 = *((id *)v6 - 4);
      v12 = a2(v7, v8, v9, v10);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v13 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      v6 += 5;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10030F004(uint64_t a1, uint64_t (*a2)(_QWORD *, id, uint64_t, uint64_t))
{
  _QWORD *result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[4];
  char v22;
  unint64_t v23;

  result = _swiftEmptyArrayStorage;
  v23 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v19 = a1;
    v5 = (uint64_t *)(a1 + 48);
    do
    {
      v7 = *(v5 - 1);
      v9 = *v5;
      v8 = v5[1];
      v10 = *((_BYTE *)v5 + 16);
      v11 = (void *)v5[3];
      v12 = v5[4];
      v13 = v5[5];
      v21[0] = *(v5 - 2);
      v21[1] = v7;
      v21[2] = v9;
      v21[3] = v8;
      v22 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = a2(v21, v14, v12, v13);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);

      swift_bridgeObjectRelease(v9);
      v16 = swift_bridgeObjectRelease(v7);
      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v18 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
        specialized Array._endMutation()(v6);
      }
      v5 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v19);
    return (_QWORD *)v23;
  }
  return result;
}

void sub_10030F164(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  CFRange v25;
  unint64_t location;
  double v27;
  double v28;
  double Height;
  double v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];
  char v42;
  _QWORD *v43;
  CGRect v44;

  v43 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(0);
  _NSRange.makeIterator()();
  v41[2] = v21;
  v41[3] = v22;
  v41[4] = v23;
  v42 = v24 & 1;
  *(Swift::Int_optional *)&v25.location = _NSRange.NSRangeIterator.next()();
  if ((v25.length & 1) == 0)
  {
    location = v25.location;
    while ((location & 0x8000000000000000) == 0)
    {
      if (location >= *(_QWORD *)(a8 + 16))
        goto LABEL_9;
      v27 = *(double *)(a8 + 32 + 16 * location);
      v25.location = location;
      v28 = CTRunRef.typographicBounds(forGlyphAtIndex:)(v25);
      v44.origin.x = a2;
      v44.origin.y = a3;
      v44.size.width = a4;
      v44.size.height = a5;
      Height = CGRectGetHeight(v44);
      if (location >= *(_QWORD *)(a12 + 16))
        goto LABEL_10;
      v30 = Height;
      v31 = *(_QWORD *)(a12 + 32 + 8 * location);
      v41[0] = a10;
      v41[1] = a11;
      v32 = sub_1002EB09C();
      swift_bridgeObjectRetain();
      v33 = String.Index.init<A>(utf16Offset:in:)(v31, v41, &type metadata for String, v32);
      v34 = String.subscript.getter(v33, a10, a11);
      v36 = v35;
      v37 = _s5GlyphCMa();
      v38 = swift_allocObject(v37, 72, 7);
      *(_QWORD *)(v38 + 64) = 0;
      *(_QWORD *)(v38 + 16) = v34;
      *(_QWORD *)(v38 + 24) = v36;
      *(double *)(v38 + 32) = v27 - a1;
      *(_QWORD *)(v38 + 40) = 0;
      *(double *)(v38 + 48) = v28;
      *(double *)(v38 + 56) = v30;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v39 = v43[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
      v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v38);
      specialized ContiguousArray._endMutation()(v40);
      *(Swift::Int_optional *)&v25.location = _NSRange.NSRangeIterator.next()();
      location = v25.location;
      if ((v25.length & 1) != 0)
        return;
    }
    __break(1u);
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

_QWORD *sub_10030F34C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v15;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  unint64_t v31;
  unint64_t v32;
  Swift::Int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;

  v12 = v11;
  result = _swiftEmptyArrayStorage;
  v41 = (unint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    v24 = (uint64_t *)(a1 + 48);
    do
    {
      v26 = v24[4];
      v27 = *v24;
      v28 = v24[1];
      v36 = *((_OWORD *)v24 - 1);
      v37 = v27;
      v38 = v28;
      v39 = *((_OWORD *)v24 + 1);
      v40 = v26;
      swift_bridgeObjectRetain();
      sub_10030E324((uint64_t *)&v36, a2, a3, a4, a5, a6, &v35, a7, a8, a9, a10, a11);
      if (v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (_QWORD *)swift_bridgeObjectRelease();
      }
      v29 = swift_bridgeObjectRelease();
      v30 = v35;
      if (v35)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v32 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v31 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v32 >= v31 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
        v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
        specialized Array._endMutation()(v25);
      }
      v24 += 7;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    return (_QWORD *)v41;
  }
  return result;
}

_QWORD *sub_10030F4F4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  CFIndex v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  CFIndex v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_39;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  if (v3)
  {
    v4 = 0;
    v35 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words;
    v36 = v2 & 0xC000000000000001;
    v32 = v2 + 32;
    v33 = v3;
    v5 = _swiftEmptyArrayStorage;
    v34 = v2;
    while (1)
    {
      if (v36)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_35;
      }
      else
      {
        v6 = *(id *)(v32 + 8 * v4);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_35;
      }
      v8 = *(_QWORD *)(a2 + v35);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v38 = v5;
        v39 = v4;
        v40 = v6;
        swift_bridgeObjectRetain();
        sub_1002F9434(0, v9, 0);
        v10 = _swiftEmptyArrayStorage;
        v11 = (_BYTE *)(v8 + 64);
        do
        {
          v12 = *((_QWORD *)v11 - 3);
          v13 = *((_QWORD *)v11 - 2);
          v43 = *((_QWORD *)v11 - 1);
          v44 = *((_QWORD *)v11 - 4);
          v42 = *v11;
          swift_bridgeObjectRetain_n(v12, 2);
          swift_bridgeObjectRetain_n(v13, 2);
          v14 = v40;
          v41 = CTRunRef.positions.getter();
          v15 = CTRunRef.stringIndices.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = v10[2];
          v16 = v10[3];
          v18 = v10;
          if (v17 >= v16 >> 1)
          {
            sub_1002F9434((_QWORD *)(v16 > 1), v17 + 1, 1);
            v18 = v10;
          }
          v18[2] = v17 + 1;
          v19 = &v18[8 * v17];
          v19[4] = v44;
          v19[5] = v12;
          v19[6] = v13;
          v19[7] = v43;
          *((_BYTE *)v19 + 64) = v42;
          v19[9] = v14;
          v19[10] = v41;
          v11 += 40;
          v19[11] = v15;
          --v9;
          v10 = v18;
        }
        while (v9);
        swift_bridgeObjectRelease();

        v3 = v33;
        v2 = v34;
        v5 = v38;
        v4 = v39;
      }
      else
      {

        v10 = _swiftEmptyArrayStorage;
      }
      v20 = v10;
      v21 = v10[2];
      v22 = v5[2];
      v23 = v22 + v21;
      if (__OFADD__(v22, v21))
        goto LABEL_36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v23 <= v5[3] >> 1)
      {
        if (v20[2])
          goto LABEL_28;
      }
      else
      {
        if (v22 <= v23)
          v25 = v22 + v21;
        else
          v25 = v22;
        v5 = sub_1002F885C((_QWORD *)isUniquelyReferenced_nonNull_native, v25, 1, v5);
        if (v20[2])
        {
LABEL_28:
          v26 = v5[2];
          if ((v5[3] >> 1) - v26 < v21)
            goto LABEL_37;
          v27 = (uint64_t)&v5[8 * v26 + 4];
          sub_10000B4C8(&qword_100559230);
          swift_arrayInitWithCopy(v27);
          if (v21)
          {
            v28 = v5[2];
            v7 = __OFADD__(v28, v21);
            v29 = v28 + v21;
            if (v7)
              goto LABEL_38;
            v5[2] = v29;
          }
          goto LABEL_6;
        }
      }
      if (v21)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        if (v2 < 0)
          v31 = v2;
        else
          v31 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v3 = _CocoaArrayWrapper.endIndex.getter(v31);
        goto LABEL_3;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      if (v4 == v3)
        goto LABEL_33;
    }
  }
  v5 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  return v5;
}

Swift::Int sub_10030F828(__int128 *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10030E030(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(CGFloat *)(v4 + 32), *(CGFloat *)(v4 + 40), *(CGFloat *)(v4 + 48), *(CGFloat *)(v4 + 56));
}

unint64_t sub_10030F838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100558698;
  if (!qword_100558698)
  {
    _s3__C3KeyVMa_1(255);
    result = swift_getWitnessTable(byte_10043A130, v1);
    atomic_store(result, (unint64_t *)&qword_100558698);
  }
  return result;
}

uint64_t sub_10030F880()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10030F8A4()
{
  uint64_t v0;

  sub_10030D454(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_10030F8B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030F8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10030F8D0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10030F8D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_10030F8FC()
{
  uint64_t v0;
  id result;
  double v2;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
  {
    v2 = 0.0;
    if (*(_BYTE *)(v0 + 24))
      v2 = 1.0;
    return objc_msgSend(result, "setAlpha:", v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10030F938()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10030F95C()
{
  uint64_t v0;

  return sub_10030CC40(*(_QWORD *)(v0 + 16));
}

void sub_10030F964()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010044BC20, "MusicCoreUI/LyricsTextView.swift", 32, 2, 138, 0);
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10030FA50(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_10030FA50(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void destroy for AnimationStatus(uint64_t a1)
{
  sub_10030FA74(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_10030FA74(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t assignWithCopy for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10030FA50(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10030FA74(v5, v6);
  return a1;
}

uint64_t assignWithTake for AnimationStatus(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10030FA74(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for AnimationStatus()
{
  return &type metadata for AnimationStatus;
}

uint64_t sub_10030FB24(uint64_t a1, uint64_t *a2)
{
  int v2;
  uint64_t v4;

  v2 = *((unsigned __int8 *)a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      if (v2 == 1)
        return 1;
    }
    else
    {
      v4 = *a2;
      if (*(_QWORD *)a1)
      {
        if (v2 == 2 && v4 == 1)
          return 1;
      }
      else if (v2 == 2 && v4 == 0)
      {
        return 1;
      }
    }
  }
  else if (!*((_BYTE *)a2 + 8))
  {
    return 1;
  }
  return 0;
}

void sub_10030FB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  unsigned __int8 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 24);
  v45 = v1;
  if ((unint64_t)v1 >> 62)
    goto LABEL_75;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v44 = v2;
  if (v2)
  {
LABEL_3:
    v3 = 0;
    do
    {
      if ((v45 & 0xC000000000000001) != 0)
      {
        v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v45);
        v4 = __OFADD__(v3, 1);
        v5 = v3 + 1;
        if (v4)
          goto LABEL_74;
      }
      else
      {
        if (v3 >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        swift_retain(*(_QWORD *)(v45 + 32 + 8 * v3));
        v4 = __OFADD__(v3, 1);
        v5 = v3 + 1;
        if (v4)
          goto LABEL_74;
      }
      v46 = v5;
      v47 = v1;
      v6 = *(_QWORD *)(v1 + 16);
      if (!((unint64_t)v6 >> 62))
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        v1 = swift_bridgeObjectRetain();
        if (v7)
          goto LABEL_12;
        goto LABEL_61;
      }
      if (v6 < 0)
        v34 = *(_QWORD *)(v1 + 16);
      else
        v34 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v1 = _CocoaArrayWrapper.endIndex.getter(v34);
      v7 = v1;
      if (v1)
      {
LABEL_12:
        v8 = 0;
        v51 = v6;
        v52 = v6 & 0xC000000000000001;
        v48 = v6 + 32;
        v49 = v6 & 0xFFFFFFFFFFFFFF8;
        v50 = v7;
        while (1)
        {
          if (v52)
          {
            v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
            v4 = __OFADD__(v8, 1);
            v11 = v8 + 1;
            if (v4)
              goto LABEL_72;
          }
          else
          {
            if (v8 >= *(_QWORD *)(v49 + 16))
              goto LABEL_73;
            swift_retain(*(_QWORD *)(v48 + 8 * v8));
            v4 = __OFADD__(v8, 1);
            v11 = v8 + 1;
            if (v4)
              goto LABEL_72;
          }
          v53 = v11;
          v54 = v1;
          v12 = *(_QWORD *)(v1 + 72);
          v55 = v12;
          if (!((unint64_t)v12 >> 62))
          {
            v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
            v1 = swift_bridgeObjectRetain();
            if (v13)
              break;
            goto LABEL_52;
          }
          v27 = v12 < 0 ? v12 : v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v1 = _CocoaArrayWrapper.endIndex.getter(v27);
          v13 = v1;
          if (v1)
            break;
LABEL_52:
          swift_bridgeObjectRelease();
          v28 = v54;
          v29 = *(void **)(v54 + 128);
          if (v29)
          {
            objc_msgSend(v29, "removeFromSuperview");
            v28 = v54;
            v30 = *(void **)(v54 + 128);
          }
          else
          {
            v30 = 0;
          }
          v6 = v51;
          v8 = v53;
          *(_QWORD *)(v28 + 128) = 0;

          v31 = v54;
          if (!*(_QWORD *)(v54 + 128))
          {
            v32 = *(void **)(v54 + 80);
            *(_QWORD *)(v54 + 80) = 0;
            v33 = *(_BYTE *)(v54 + 88);
            *(_BYTE *)(v54 + 88) = 2;
            sub_10030FA74(v32, v33);
            v31 = v54;
          }
          v9 = *(void **)(v31 + 80);
          *(_QWORD *)(v31 + 80) = 0;
          v10 = *(_BYTE *)(v31 + 88);
          *(_BYTE *)(v31 + 88) = 2;
          sub_10030FA74(v9, v10);
          swift_release(v31);
          if (v53 == v50)
            goto LABEL_61;
        }
        v14 = 0;
        while (2)
        {
          if ((v55 & 0xC000000000000001) != 0)
          {
            v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v55);
            v4 = __OFADD__(v14++, 1);
            if (v4)
              goto LABEL_67;
LABEL_31:
            v19 = *(_QWORD *)(v18 + 88);
            if (!((unint64_t)v19 >> 62))
            {
              v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v20)
                goto LABEL_33;
LABEL_46:
              swift_bridgeObjectRelease();
              v26 = *(void **)(v18 + 144);
              if (v26)
              {
                objc_msgSend(v26, "removeFromSuperview");
                v15 = *(void **)(v18 + 144);
              }
              else
              {
                v15 = 0;
              }
              *(_QWORD *)(v18 + 144) = 0;

              v16 = *(void **)(v18 + 96);
              *(_QWORD *)(v18 + 96) = 0;
              v17 = *(_BYTE *)(v18 + 104);
              *(_BYTE *)(v18 + 104) = 2;
              sub_10030FA74(v16, v17);
              swift_release(v18);
              if (v14 == v13)
                goto LABEL_52;
              continue;
            }
            if (v19 < 0)
              v25 = *(_QWORD *)(v18 + 88);
            else
              v25 = v19 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v20 = _CocoaArrayWrapper.endIndex.getter(v25);
            if (!v20)
              goto LABEL_46;
LABEL_33:
            if (v20 >= 1)
            {
              v21 = 0;
              while (1)
              {
                if ((v19 & 0xC000000000000001) != 0)
                {
                  v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
                  v24 = *(void **)(v23 + 64);
                  if (!v24)
                    goto LABEL_41;
                }
                else
                {
                  v23 = *(_QWORD *)(v19 + 8 * v21 + 32);
                  swift_retain(v23);
                  v24 = *(void **)(v23 + 64);
                  if (!v24)
                  {
LABEL_41:
                    v22 = 0;
                    goto LABEL_36;
                  }
                }
                objc_msgSend(v24, "removeFromSuperview");
                v22 = *(void **)(v23 + 64);
LABEL_36:
                ++v21;
                *(_QWORD *)(v23 + 64) = 0;
                swift_release(v23);

                if (v20 == v21)
                  goto LABEL_46;
              }
            }
            goto LABEL_68;
          }
          break;
        }
        if (v14 < *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v18 = *(_QWORD *)(v55 + 32 + 8 * v14);
          swift_retain(v18);
          v4 = __OFADD__(v14++, 1);
          if (!v4)
            goto LABEL_31;
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        if (v1 < 0)
          v42 = v1;
        else
          v42 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v44 = _CocoaArrayWrapper.endIndex.getter(v42);
        if (!v44)
          break;
        goto LABEL_3;
      }
LABEL_61:
      swift_bridgeObjectRelease();
      v35 = v47;
      v36 = *(void **)(v47 + 72);
      if (v36)
      {
        objc_msgSend(v36, "removeFromSuperview");
        v35 = v47;
        v37 = *(void **)(v47 + 72);
      }
      else
      {
        v37 = 0;
      }
      *(_QWORD *)(v35 + 72) = 0;
      swift_release(v35);

      v3 = v46;
    }
    while (v46 != v44);
  }
  swift_bridgeObjectRelease();
  v14 = v43;
  v38 = *(void **)(v43 + 80);
  if (v38)
  {
    objc_msgSend(v38, "removeFromSuperview");
    v39 = *(void **)(v43 + 80);
  }
  else
  {
LABEL_69:
    v39 = 0;
  }
  *(_QWORD *)(v14 + 80) = 0;

  v40 = *(void **)(v14 + 64);
  *(_QWORD *)(v14 + 64) = 0;
  v41 = *(_BYTE *)(v14 + 72);
  *(_BYTE *)(v14 + 72) = 2;
  sub_10030FA74(v40, v41);
}

uint64_t sub_10031002C(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v6;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v10 = objc_msgSend(objc_allocWithZone((Class)_s5FrameC9FrameViewCMa()), "initWithFrame:", *(double *)(v6 + 32), *(double *)(v6 + 40), *(double *)(v6 + 48), *(double *)(v6 + 56));
  v11 = *(void **)(v6 + 80);
  *(_QWORD *)(v6 + 80) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(v6 + 24);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  if (v13 < 0)
    v22 = *(_QWORD *)(v6 + 24);
  else
    v22 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v22);
  v14 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v14 >= 1)
  {
    v16 = 0;
    v17 = a3 & 1;
    v18 = a6 & 1;
    v19 = a5 & 1;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v13);
      }
      else
      {
        v20 = *(_QWORD *)(v13 + 8 * v16 + 32);
        swift_retain(v20);
      }
      ++v16;
      v21 = (void *)sub_100312144(a1, a2, v17, a4, v19, v18);
      objc_msgSend(v12, "addSubview:", v21);
      swift_release(v20);

    }
    while (v14 != v16);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100310264()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10030FA74(*(id *)(v0 + 64), *(_BYTE *)(v0 + 72));

  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t _s5FrameCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView5Frame);
}

uint64_t _s5FrameC9FrameViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView5Frame9FrameView);
}

_UNKNOWN **sub_1003102E4()
{
  return &off_100559B40;
}

void (*sub_1003102F0(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100310344(v6, a2, a3);
  return sub_100193C20;
}

uint64_t *sub_100310344(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for Border;
  }
  __break(1u);
  return result;
}

void sub_100310430()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators);
  swift_beginAccess(v1, v39, 33, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v9 = *v1;
    if ((unint64_t)*v1 >> 62)
      goto LABEL_29;
    v4 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_15:
      v9 = *v1;
      if ((unint64_t)*v1 >> 62)
      {
        if (v9 < 0)
          v13 = *v1;
        else
          v13 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v11 >= v4)
        {
LABEL_17:
          sub_1002E575C(v4, v11);
          swift_endAccess(v39);
          return;
        }
      }
      else
      {
        v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v11 >= v4)
          goto LABEL_17;
      }
      __break(1u);
LABEL_29:
      if (v9 < 0)
        v14 = v9;
      else
        v14 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v4 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease();
    }
  }
LABEL_3:
  v4 = 0;
  while (1)
  {
    v5 = (v2 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2)
       : *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    v7 = (unint64_t)objc_msgSend(v5, "state");

    if ((v7 | 2) == 2)
      break;
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_19:
      if (v2 < 0)
        v12 = v2;
      else
        v12 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v3 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v3)
        goto LABEL_10;
      goto LABEL_3;
    }
    ++v4;
    if (v8 == v3)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_34:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
    if (v10 == v16)
      goto LABEL_15;
    goto LABEL_38;
  }
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_34;
  if (v10 == *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_38:
  v17 = v4 + 5;
  while (1)
  {
    v18 = v17 - 4;
    v19 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v19);
      goto LABEL_43;
    }
    if ((v18 & 0x8000000000000000) != 0)
      break;
    if (v18 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_77;
    v20 = *(id *)(v19 + 8 * v17);
LABEL_43:
    v21 = v20;
    v22 = (unint64_t)objc_msgSend(v20, "state");

    if ((v22 | 2) == 2)
      goto LABEL_64;
    if (v18 != v4)
    {
      v23 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *v1);
        v23 = *v1;
        if ((*v1 & 0xC000000000000001) == 0)
          goto LABEL_49;
      }
      else
      {
        if (v4 < 0)
          goto LABEL_80;
        if ((unint64_t)v4 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_81;
        v24 = *(id *)(v23 + 8 * v4 + 32);
        if ((v23 & 0xC000000000000001) == 0)
        {
LABEL_49:
          if ((v18 & 0x8000000000000000) != 0)
            goto LABEL_82;
          if (v18 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_83;
          v25 = *(id *)(v23 + 8 * v17);
          goto LABEL_52;
        }
      }
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v23);
      v23 = *v1;
LABEL_52:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v23);
      *v1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v23 < 0 || (v23 & 0x4000000000000000) != 0)
      {
        v23 = sub_100417A08(v23);
        *v1 = v23;
      }
      v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
      *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v25;

      specialized Array._endMutation()(v28);
      v29 = *v1;
      v30 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
      *v1 = v29;
      if (!v30 || v29 < 0 || (v29 & 0x4000000000000000) != 0)
      {
        v29 = sub_100417A08(v29);
        *v1 = v29;
      }
      if ((v18 & 0x8000000000000000) != 0)
        goto LABEL_84;
      v31 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v18 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
      v32 = *(void **)(v31 + 8 * v17);
      *(_QWORD *)(v31 + 8 * v17) = v24;

      specialized Array._endMutation()(v33);
    }
    if (__OFADD__(v4++, 1))
      goto LABEL_79;
LABEL_64:
    v35 = v17 - 3;
    if (__OFADD__(v18, 1))
      goto LABEL_78;
    v36 = *v1;
    if ((unint64_t)*v1 >> 62)
    {
      if (v36 < 0)
        v38 = *v1;
      else
        v38 = v36 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v37 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    ++v17;
    if (v35 == v37)
      goto LABEL_15;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

id sub_100310850(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  _QWORD v10[6];

  v10[0] = 0x3FF0000000000000;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = 0x3FF0000000000000;
  v10[4] = 0;
  v10[5] = 0;
  objc_msgSend(a1, "setTransform:", v10);
  return UIView.untransformedFrame.setter(a2, a3, a4, a5);
}

void sub_1003108C8(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  Class isa;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  objc_class *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_10031115C();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  v12 = swift_allocObject(&unk_10051C9A8, 48, 7);
  *(_QWORD *)(v12 + 16) = v5;
  *(double *)(v12 + 24) = a2;
  *(double *)(v12 + 32) = a3;
  *(double *)(v12 + 40) = a4;
  v27 = sub_100311270;
  v28 = v12;
  v23 = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_10015F6F8;
  v26 = &unk_10051C9C0;
  v13 = _Block_copy(&v23);
  v14 = v28;
  v15 = v5;
  -[objc_class addAnimations:](isa, "addAnimations:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  v16 = swift_allocObject(&unk_10051C8E0, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v27 = sub_100311204;
  v28 = v16;
  v23 = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_1002A4D68;
  v26 = &unk_10051C9E8;
  v17 = _Block_copy(&v23);
  -[objc_class addCompletion:](isa, "addCompletion:", v17, swift_release(v28).n128_f64[0]);
  _Block_release(v17);
  -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", a5);
  v18 = &v15[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess(v18, &v23, 33, 0);
  v19 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((*(_QWORD *)v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)((*(_QWORD *)v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
  specialized Array._endMutation()(v22);
  swift_endAccess(&v23);

}

void sub_100310AD0(void *a1, double a2, double a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  CGFloat v10;
  void *v11;
  CGFloat ty;
  id v13;
  __n128 v14;
  double v15;
  CGAffineTransform v16;

  v8 = objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_10051CA20, 24, 7);
  *(_QWORD *)(v9 + 16) = a1;
  v10 = COERCE_DOUBLE(swift_allocObject(&unk_10051CA48, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v10 + 16) = sub_1003112A4;
  *(_QWORD *)(*(_QWORD *)&v10 + 24) = v9;
  *(_QWORD *)&v16.tx = sub_100150E54;
  v16.ty = v10;
  *(_QWORD *)&v16.a = _NSConcreteStackBlock;
  *(_QWORD *)&v16.b = 1107296256;
  *(_QWORD *)&v16.c = sub_100185F2C;
  *(_QWORD *)&v16.d = &unk_10051CA60;
  v11 = _Block_copy(&v16);
  ty = v16.ty;
  v13 = a1;
  swift_retain(*(_QWORD *)&v10);
  objc_msgSend((id)v8, "performWithoutAnimation:", v11, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(*(_QWORD *)&v10, "", 130, 92, 52, 1, v14);
  *(_QWORD *)&v15 = swift_release(*(_QWORD *)&v10).n128_u64[0];
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v13, "frame", v15);
    objc_msgSend(v13, "setFrame:", a2, a3);
    CGAffineTransformMakeScale(&v16, a4, a4);
    objc_msgSend(v13, "setTransform:", &v16);
    swift_release(v9);
  }
}

void sub_100310C84(void *a1, double a2, double a3, double a4)
{
  void *v4;
  Class isa;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  objc_class *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  sub_10031115C();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  v10 = swift_allocObject(&unk_10051C890, 40, 7);
  *(_QWORD *)(v10 + 16) = v4;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  v25 = sub_1003111BC;
  v26 = v10;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_10015F6F8;
  v24 = &unk_10051C8A8;
  v11 = _Block_copy(&v21);
  v12 = v26;
  v13 = v4;
  -[objc_class addAnimations:](isa, "addAnimations:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  v14 = swift_allocObject(&unk_10051C8E0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v25 = sub_100311204;
  v26 = v14;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_1002A4D68;
  v24 = &unk_10051C8F8;
  v15 = _Block_copy(&v21);
  -[objc_class addCompletion:](isa, "addCompletion:", v15, swift_release(v26).n128_f64[0]);
  _Block_release(v15);
  -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", a4);
  v16 = &v13[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess(v16, &v21, 33, 0);
  v17 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v18 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
  specialized Array._endMutation()(v20);
  swift_endAccess(&v21);

}

void sub_100310E84(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;

  v6 = objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_10051C930, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  v8 = swift_allocObject(&unk_10051C958, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10031121C;
  *(_QWORD *)(v8 + 24) = v7;
  v18 = sub_100150C04;
  v19 = v8;
  v14 = (uint64_t)_NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100185F2C;
  v17 = (uint64_t)&unk_10051C970;
  v9 = _Block_copy(&v14);
  v10 = v19;
  v11 = a1;
  swift_retain(v8);
  objc_msgSend((id)v6, "performWithoutAnimation:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 130, 108, 52, 1, v12);
  *(_QWORD *)&v13 = swift_release(v8).n128_u64[0];
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = 0x3FF0000000000000;
    v15 = 0;
    v16 = 0;
    v17 = 0x3FF0000000000000;
    v18 = 0;
    v19 = 0;
    objc_msgSend(v11, "setTransform:", &v14, v13);
    objc_msgSend(v11, "frame");
    objc_msgSend(v11, "setFrame:", a2, a3);
    swift_release(v7);
  }
}

id sub_10031101C(uint64_t a1, uint64_t (*a2)(void))
{
  double *v2;
  _BYTE v4[24];

  v2 = (double *)a2();
  swift_beginAccess(v2, v4, 0, 0);
  return UIView.setAnchorPoint(_:preserveFrame:)(1, *v2, v2[1]);
}

void sub_100311064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100310430();

  }
}

uint64_t sub_1003110F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t _s5GlyphCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView5Glyph);
}

uint64_t _s5GlyphC9GlyphViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView);
}

unint64_t sub_10031115C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055A4C0;
  if (!qword_10055A4C0)
  {
    v1 = objc_opt_self(UIViewPropertyAnimator);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055A4C0);
  }
  return result;
}

uint64_t sub_100311198()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1003111BC()
{
  uint64_t v0;

  sub_100310E84(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1003111C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1003111D8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1003111E0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100311204(uint64_t a1)
{
  uint64_t v1;

  sub_100311064(a1, v1);
}

id sub_10031121C()
{
  uint64_t v0;

  return sub_10031101C(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))CGPoint.center.unsafeMutableAddressor);
}

uint64_t sub_10031123C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10031124C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100311270()
{
  uint64_t v0;

  sub_100310AD0(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

uint64_t sub_100311280()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003112A4()
{
  uint64_t v0;

  return sub_10031101C(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor);
}

uint64_t sub_1003112C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

char *sub_100311300(uint64_t a1)
{
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return (char *)_swiftEmptyArrayStorage;
    result = sub_1002F9418(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = swift_retain(*(_QWORD *)(a1 + 8 * v4 + 32));
      v6 = *(_QWORD *)(v5 + 32);
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
        v8 = *(_QWORD *)(v6 + 56 * v7 - 16);
      else
        v8 = 0;
      swift_release(v5);
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_1002F9418((char *)(v9 > 1), v10 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      if (v2 == v4)
        return (char *)_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

char *sub_10031146C(uint64_t a1)
{
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return (char *)_swiftEmptyArrayStorage;
    result = sub_1002F9418(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = swift_retain(*(_QWORD *)(a1 + 8 * v4 + 32));
      v6 = *(_QWORD *)(v5 + 32);
      if (*(_QWORD *)(v6 + 16))
        v7 = *(_QWORD *)(v6 + 32);
      else
        v7 = 0;
      swift_release(v5);
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_1002F9418((char *)(v8 > 1), v9 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4)
        return (char *)_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1003115C0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  uint64_t v11;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  double *v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  id v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t i;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  char v79;
  double v80;
  double v81;
  uint64_t v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  double v89;
  void *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD aBlock[5];
  uint64_t v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;

  v11 = v3;
  v15 = *(_QWORD *)(v3 + 16);
  v16 = (unint64_t)v15 >> 62;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v21 = *(_QWORD *)(v3 + 16);
    else
      v21 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v18 = _CocoaArrayWrapper.endIndex.getter(v21);
    v17 = v18;
    if (!v18)
      goto LABEL_13;
  }
  else
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = swift_bridgeObjectRetain();
    if (!v17)
      goto LABEL_13;
  }
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  v19 = 0;
  v4 = v15 & 0xC000000000000001;
  do
  {
    if (v4)
    {
      v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v15);
    }
    else
    {
      v20 = *(_QWORD *)(v15 + 8 * v19 + 32);
      swift_retain(v20);
    }
    ++v19;
    sub_100314954(a1, a3);
    swift_release(v20);
  }
  while (v17 != v19);
LABEL_13:
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v11 + 80) & 1) != 0)
    return;
  v22 = *(_QWORD *)(v11 + 72);
  if (!v22)
    return;
  v23 = *(void **)(v22 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (!v23)
    return;
  v24 = *(void **)(a1 + 168);
  v17 = v23;
  objc_msgSend(v24, "lineHeight");
  v26 = v25 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
  v9 = *(double *)(v11 + 40);
  v8 = *(double *)(v11 + 48);
  v7 = *(double *)(v11 + 56);
  v6 = *(double *)(v11 + 64);
  v106.origin.x = v9;
  v106.origin.y = v8;
  v106.size.width = v7;
  v106.size.height = v6;
  v5 = (v26 - CGRectGetHeight(v106)) * 0.5;
  v10 = *(double *)(a1 + 392);
  if (sub_100312428() <= a3)
  {
    if (v16)
    {
      if (v15 < 0)
        v29 = v15;
      else
        v29 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v27 = _CocoaArrayWrapper.endIndex.getter(v29);
      v28 = v15;
      if (!v27)
        goto LABEL_49;
    }
    else
    {
      v27 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v28 = v15;
      if (!v27)
        goto LABEL_49;
    }
    v18 = v27 - 1;
    if (!__OFSUB__(v27, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v18 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v18 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v27 = *(_QWORD *)(v15 + 8 * v18 + 32);
          swift_retain(v27);
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_44;
      }
LABEL_41:
      v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v15);
LABEL_29:
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(v27 + 72);
      if (!((unint64_t)v28 >> 62))
      {
        v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v30)
          goto LABEL_31;
        goto LABEL_48;
      }
LABEL_44:
      if (v28 < 0)
        v39 = v28;
      else
        v39 = v28 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v30 = _CocoaArrayWrapper.endIndex.getter(v39);
      if (v30)
      {
LABEL_31:
        v31 = v30 - 1;
        if (__OFSUB__(v30, 1))
        {
          __break(1u);
        }
        else if ((v28 & 0xC000000000000001) == 0)
        {
          if ((v31 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v31 < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v32 = *(double **)(v28 + 8 * v31 + 32);
            swift_retain(v32);
LABEL_36:
            swift_bridgeObjectRelease();
            if ((a2 & 1) == 0)
            {
              v33 = v32[14];
              v34 = v32[15];
              v35 = v32[16];
              v36 = v32[17];
              v37 = (id)v17;
              v107.origin.x = v33;
              v107.origin.y = v34;
              v107.size.width = v35;
              v107.size.height = v36;
              CGRectGetWidth(v107);
              objc_msgSend(v37, "frame");
              objc_msgSend(v37, "setFrame:");

            }
            swift_release(v27);
            v38 = v32;
            goto LABEL_156;
          }
          __break(1u);
          goto LABEL_104;
        }
        v32 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
        goto LABEL_36;
      }
LABEL_48:
      swift_release(v27);
LABEL_49:
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_50:
  if (sub_100312388() > a3)
  {
    v40 = *(_QWORD *)(v11 + 88);
    *(_QWORD *)(v11 + 88) = 0;
    swift_release(v40);
    v41 = (id)v17;
    v42 = v41;
    if ((a2 & 1) != 0)
    {
      v108.origin.x = v9;
      v108.origin.y = v8;
      v108.size.width = v7;
      v108.size.height = v6;
      v47 = v5 * 0.5 + CGRectGetWidth(v108);
      objc_msgSend(v42, "frame");
      objc_msgSend(v42, "setFrame:", v47);

      v42 = v42;
      objc_msgSend(v42, "frame");
    }
    else
    {
      objc_msgSend(v41, "frame");
    }
    objc_msgSend(v42, "setFrame:");

    goto LABEL_157;
  }
  v4 = sub_1003129A8(a3);
  v28 = v43;
  v44 = sub_100312B50(a3);
  v30 = v44;
  v27 = v45;
  if (!v4)
  {
LABEL_62:
    swift_release(v44);
    swift_release(v28);
    v38 = (double *)v27;
    goto LABEL_156;
  }
  if (!v44)
  {
    v44 = v4;
    goto LABEL_62;
  }
  v46 = *(_QWORD *)(v11 + 88);
  if (v46 && v44 == v46)
  {

    swift_release(v4);
    swift_release(v30);
    swift_release(v27);
    swift_release(v28);
    return;
  }
  if ((a2 & 1) == 0)
  {
    if (v16)
    {
      if (v15 < 0)
        v52 = v15;
      else
        v52 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_retain(v4);
      swift_retain(v30);
      v49 = _CocoaArrayWrapper.endIndex.getter(v52);
    }
    else
    {
      v49 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_retain(v4);
      swift_retain(v30);
    }
    if (!v49)
      goto LABEL_120;
    v31 = v49 - 1;
    if (!__OFSUB__(v49, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v31 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v31 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v53 = *(_QWORD *)(v15 + 8 * v31 + 32);
          swift_retain(v53);
          swift_bridgeObjectRelease();
          v15 = *(_QWORD *)(v53 + 72);
          swift_bridgeObjectRetain();
          swift_release(v53);
          if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
            goto LABEL_79;
          goto LABEL_107;
        }
        __break(1u);
        goto LABEL_114;
      }
LABEL_105:
      v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v15);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v59 + 72);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease(v59);
      if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
      {
LABEL_79:
        v54 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v54)
          goto LABEL_80;
        goto LABEL_120;
      }
LABEL_107:
      if (v15 < 0)
        v60 = v15;
      else
        v60 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v54 = _CocoaArrayWrapper.endIndex.getter(v60);
      swift_bridgeObjectRelease();
      if (v54)
      {
LABEL_80:
        v55 = v54 - 1;
        if (__OFSUB__(v54, 1))
          goto LABEL_165;
        if ((v15 & 0xC000000000000001) != 0)
          goto LABEL_168;
        if ((v55 & 0x8000000000000000) != 0)
          goto LABEL_166;
        if (v55 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          i = *(_QWORD *)(v15 + 8 * v55 + 32);
          goto LABEL_98;
        }
        goto LABEL_170;
      }
LABEL_120:
      swift_bridgeObjectRelease();
      goto LABEL_121;
    }
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  if (v16)
  {
    if (v15 < 0)
      v57 = v15;
    else
      v57 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain(v4);
    swift_retain(v30);
    v51 = _CocoaArrayWrapper.endIndex.getter(v57);
    v50 = v51;
  }
  else
  {
    v50 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain(v4);
    v51 = swift_retain(v30);
  }
  if (!v50)
    goto LABEL_120;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      v95 = specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v15);
      swift_bridgeObjectRelease();
      v96 = *(double *)(v95 + 16);
      v71 = *(double *)(v95 + 24);
      v74 = *(_QWORD *)(v95 + 32);
      v73 = *(_QWORD *)(v95 + 40);
      v99 = *(_QWORD *)(v95 + 56);
      v100 = *(_QWORD *)(v95 + 48);
      v97 = *(_QWORD *)(v95 + 64);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease(v95);
      if (v7 == v96)
        goto LABEL_134;
LABEL_150:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_151:
      v80 = a3;
      v110 = *(CGRect *)(v30 + 112);
      v83 = *(double *)(v4 + 96) + v110.origin.x;
      v81 = v83 + CGRectGetWidth(v110);
      goto LABEL_152;
    }
    v58 = *(_QWORD *)(v15 + 32);
    swift_retain(v58);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v58 + 72);
    swift_bridgeObjectRetain();
    swift_release(v58);
    if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
      goto LABEL_116;
LABEL_94:
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_120;
    goto LABEL_95;
  }
LABEL_114:
  v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v61 + 72);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease(v61);
  if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
    goto LABEL_94;
LABEL_116:
  if (v15 < 0)
    v62 = v15;
  else
    v62 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v63 = _CocoaArrayWrapper.endIndex.getter(v62);
  swift_bridgeObjectRelease();
  if (!v63)
    goto LABEL_120;
LABEL_95:
  if ((v15 & 0xC000000000000001) != 0)
    goto LABEL_167;
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_170:
    __break(1u);
    return;
  }
  for (i = *(_QWORD *)(v15 + 32); ; swift_unknownObjectRelease(i))
  {
LABEL_98:
    swift_bridgeObjectRelease();
    if (i == v30)
    {
      a3 = 1.0;
    }
    else
    {
LABEL_121:
      v64 = *(_QWORD *)(v30 + 64);
      if (!v64 || (a3 = 0.5, v64 >= 3))
      {
        if (!v27
          || (v65 = *(_QWORD *)(v30 + 32),
              v66 = *(_QWORD *)(v30 + 40),
              swift_bridgeObjectRetain(),
              v67 = String.count.getter(v65, v66),
              swift_bridgeObjectRelease(),
              a3 = 0.25,
              v67 >= 3))
        {
          a3 = 0.12;
        }
      }
    }
    if ((a2 & 1) != 0)
    {
      v75 = *(double *)(v4 + 96) + *(double *)(v30 + 112) - v10 * a3 - v5;
      objc_msgSend((id)v17, "frame");
      v77 = v76;
      v109.origin.x = v9;
      v109.origin.y = v8;
      v109.size.width = v7;
      v109.size.height = v6;
      v78 = CGRectGetWidth(v109) - v75;
      goto LABEL_153;
    }
    v7 = *(double *)(v30 + 16);
    v6 = *(double *)(v30 + 24);
    a2 = *(_QWORD *)(v30 + 40);
    v102 = *(_QWORD *)(v30 + 48);
    v103 = *(_QWORD *)(v30 + 32);
    v68 = *(_QWORD *)(v30 + 64);
    v101 = *(_QWORD *)(v30 + 56);
    v15 = *(_QWORD *)(v4 + 72);
    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v82 = *(_QWORD *)(v4 + 72);
      else
        v82 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69 = _CocoaArrayWrapper.endIndex.getter(v82);
      if (!v69)
      {
LABEL_149:
        swift_bridgeObjectRelease();
        goto LABEL_150;
      }
    }
    else
    {
      v69 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v69)
        goto LABEL_149;
    }
    v51 = v69 - 1;
    if (__OFSUB__(v69, 1))
      goto LABEL_160;
    v98 = v68;
    if ((v15 & 0xC000000000000001) != 0)
      goto LABEL_161;
    if ((v51 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_164;
    }
    if (v51 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    v55 = 0;
LABEL_168:
    i = specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v15);
  }
  v70 = *(_QWORD *)(v15 + 8 * v51 + 32);
  swift_retain(v70);
  swift_bridgeObjectRelease();
  v72 = *(double *)(v70 + 16);
  v71 = *(double *)(v70 + 24);
  v74 = *(_QWORD *)(v70 + 32);
  v73 = *(_QWORD *)(v70 + 40);
  v99 = *(_QWORD *)(v70 + 56);
  v100 = *(_QWORD *)(v70 + 48);
  v97 = *(_QWORD *)(v70 + 64);
  swift_bridgeObjectRetain();
  swift_release(v70);
  if (v7 != v72)
    goto LABEL_150;
LABEL_134:
  if (v6 != v71)
    goto LABEL_150;
  if (v103 != v74 || a2 != v73)
  {
    v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v103, a2, v74, v73, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v79 & 1) != 0)
      goto LABEL_140;
    goto LABEL_151;
  }
  swift_bridgeObjectRelease_n(a2, 2);
LABEL_140:
  if (v102 != v100 || v101 != v99 || v98 != v97 || !v28)
    goto LABEL_151;
  v80 = a3;
  v81 = *(double *)(v28 + 96);
LABEL_152:
  objc_msgSend((id)v17, "frame", v97);
  v75 = v84;
  v77 = v85;
  v78 = v5 + v10 * v80 + v81;
LABEL_153:
  objc_msgSend((id)v17, "frame");
  v87 = *(void **)(v11 + 72);
  if (v87)
  {
    v88 = v86;
    v89 = *(double *)(v30 + 24) - *(double *)(v30 + 16);
    v90 = (void *)objc_opt_self(UIView);
    v91 = swift_allocObject(&unk_10051CAA8, 56, 7);
    *(_QWORD *)(v91 + 16) = v87;
    *(double *)(v91 + 24) = v75;
    *(_QWORD *)(v91 + 32) = v77;
    *(double *)(v91 + 40) = v78;
    *(_QWORD *)(v91 + 48) = v88;
    aBlock[4] = sub_100313E9C;
    v105 = v91;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10015F6F8;
    aBlock[3] = &unk_10051CAC0;
    v92 = _Block_copy(aBlock);
    v93 = v105;
    v94 = v87;
    swift_release(v93);
    objc_msgSend(v90, "animateWithDuration:delay:options:animations:completion:", 196609, v92, 0, v89, 0.0);
    _Block_release(v92);

  }
  swift_release(v30);
  swift_release_n(v4, 2);
  swift_release(v28);
  swift_release(v27);
  v38 = *(double **)(v11 + 88);
  *(_QWORD *)(v11 + 88) = v30;
LABEL_156:
  *(_QWORD *)&v48 = swift_release(v38).n128_u64[0];
LABEL_157:
  objc_msgSend((id)v17, "setNeedsDisplay", v48);

}

uint64_t sub_100312144(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;

  v7 = v6;
  v12 = a3 & 1;
  v13 = *(double *)(v7 + 40);
  v14 = *(double *)(v7 + 48);
  v15 = *(double *)(v7 + 56);
  v16 = *(double *)(v7 + 64);
  v17 = a6 & 1;
  v18 = objc_allocWithZone((Class)_s4LineC8LineViewCMa());
  v19 = a2;
  sub_10030ED5C((uint64_t)a4);
  v20 = sub_100312CD4(v19, v12, a4, v17, v13, v14, v15, v16);
  v21 = *(void **)(v7 + 72);
  *(_QWORD *)(v7 + 72) = v20;
  v22 = v20;

  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v15, v16);
  if ((a5 & 1) != 0)
  {
    v24 = *(void **)(v7 + 24);
    v25 = *(_BYTE *)(v7 + 32);
    objc_allocWithZone((Class)type metadata accessor for CTLabel.Line());
    v26 = CTLabel.Line.init(ctLine:size:useExtendedLineBounds:)(v24, v25, v15, v16);
    objc_msgSend(v23, "addSubview:", v26);

LABEL_17:
    objc_msgSend(v22, "setMaskView:", v23);

    return (uint64_t)v22;
  }
  v27 = *(_QWORD *)(v7 + 16);
  if (!((unint64_t)v27 >> 62))
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v28)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v27 < 0)
    v33 = v27;
  else
    v33 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v33);
  v28 = result;
  if (!result)
    goto LABEL_16;
LABEL_5:
  if (v28 >= 1)
  {
    v34 = v22;
    v30 = 0;
    do
    {
      if ((v27 & 0xC000000000000001) != 0)
      {
        v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v27);
      }
      else
      {
        v31 = *(_QWORD *)(v27 + 8 * v30 + 32);
        swift_retain(v31);
      }
      ++v30;
      v32 = (void *)sub_1003154E4(a1, (uint64_t)a4);
      objc_msgSend(v23, "addSubview:", v32);
      swift_release(v31);

    }
    while (v28 != v30);
    swift_bridgeObjectRelease();
    v22 = v34;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

double sub_100312388()
{
  uint64_t v0;
  char *v1;
  double v2;
  double *v4;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_10031146C(v0);
  swift_bridgeObjectRelease();
  v4 = (double *)v1;
  swift_bridgeObjectRetain();
  sub_1003134B8((char **)&v4);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v4 + 2))
    v2 = v4[4];
  else
    v2 = 0.0;
  swift_release(v4);
  return v2;
}

double sub_100312428()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  double v3;
  char *v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_100311300(v0);
  swift_bridgeObjectRelease();
  v5 = v1;
  swift_bridgeObjectRetain();
  sub_1003134B8(&v5);
  swift_bridgeObjectRelease();
  v2 = *((_QWORD *)v5 + 2);
  if (v2)
    v3 = *(double *)&v5[8 * v2 + 24];
  else
    v3 = 0.0;
  swift_release(v5);
  return v3;
}

void sub_1003124D0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  double v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40;

  v4 = v2;
  v5 = *(_QWORD *)(v2 + 72);
  if (v5)
  {
    v6 = *(void **)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
    if (v6)
    {
      v9 = *(_QWORD *)(v4 + 16);
      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v36 = *(_QWORD *)(v4 + 16);
        else
          v36 = v9 & 0xFFFFFFFFFFFFFF8;
        v37 = v6;
        swift_bridgeObjectRetain();
        v10 = _CocoaArrayWrapper.endIndex.getter(v36);
        if (v10)
        {
LABEL_5:
          v12 = v10 - 1;
          if (__OFSUB__(v10, 1))
          {
            __break(1u);
          }
          else if ((v9 & 0xC000000000000001) == 0)
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v12 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v10 = *(_QWORD *)(v9 + 8 * v12 + 32);
              swift_retain(v10);
              goto LABEL_10;
            }
            __break(1u);
            goto LABEL_30;
          }
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
LABEL_10:
          swift_bridgeObjectRelease();
          v3 = *(_QWORD *)(v10 + 72);
          if (!((unint64_t)v3 >> 62))
          {
            v13 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v13)
              goto LABEL_12;
LABEL_34:

            swift_release(v10);
            goto LABEL_35;
          }
LABEL_30:
          if (v3 < 0)
            v38 = v3;
          else
            v38 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v13 = _CocoaArrayWrapper.endIndex.getter(v38);
          if (v13)
          {
LABEL_12:
            v14 = v13 - 1;
            if (__OFSUB__(v13, 1))
            {
              __break(1u);
            }
            else if ((v3 & 0xC000000000000001) == 0)
            {
              if ((v14 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v14 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v15 = *(_QWORD *)(v3 + 8 * v14 + 32);
                swift_retain(v15);
                goto LABEL_17;
              }
              __break(1u);
              return;
            }
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v3);
LABEL_17:
            swift_bridgeObjectRelease();
            if ((*(_BYTE *)(v4 + 80) & 1) != 0)
            {

              swift_release(v10);
              swift_release(v15);
            }
            else
            {
              v16 = a2 & 1;
              objc_msgSend(*(id *)(a1 + 168), "lineHeight");
              v18 = v17 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
              v19 = (v18 - CGRectGetHeight(*(CGRect *)(v4 + 40))) * 0.5;
              *(_BYTE *)(v4 + 80) = 1;
              v20 = (void *)objc_opt_self(UIView);
              v21 = *(double *)(a1 + 528);
              v22 = swift_allocObject(&unk_10051CAF8, 593, 7);
              *(_BYTE *)(v22 + 16) = v16;
              *(_QWORD *)(v22 + 24) = v6;
              *(double *)(v22 + 32) = v19;
              *(_QWORD *)(v22 + 40) = v10;
              *(_QWORD *)(v22 + 48) = v15;
              memcpy((void *)(v22 + 56), (const void *)a1, 0x219uLL);
              v39[4] = sub_100313FB4;
              v40 = v22;
              v39[0] = _NSConcreteStackBlock;
              v39[1] = 1107296256;
              v39[2] = sub_10015F6F8;
              v39[3] = &unk_10051CB10;
              v23 = _Block_copy(v39);
              v24 = v40;
              v25 = v6;
              swift_retain(v10);
              swift_retain(v15);
              sub_10030ED5C(a1);
              swift_release(v24);
              objc_msgSend(v20, "animateWithDuration:delay:options:animations:completion:", 196609, v23, 0, v21, 0.0);
              _Block_release(v23);
              v26 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
              v34 = (void *)static OS_dispatch_queue.main.getter(v26, v27, v28, v29, v30, v31, v32, v33);
              v35 = swift_allocObject(&unk_10051CB48, 24, 7);
              swift_weakInit(v35 + 16, v4);
              swift_retain(v35);
              OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100313FF0, v35, v21);

              swift_release(v10);
              swift_release(v15);

              swift_release_n(v35, 2);
            }
            return;
          }
          goto LABEL_34;
        }
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        v11 = v6;
        swift_bridgeObjectRetain();
        if (v10)
          goto LABEL_5;
      }

LABEL_35:
      swift_bridgeObjectRelease();
    }
  }
}

id sub_1003128B4(char a1, id a2, double a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) != 0)
  {
    objc_msgSend(a2, "frame");
    objc_msgSend(a2, "setFrame:", -a3);
  }
  CGRectGetMaxX(*(CGRect *)(a5 + 112));
  objc_msgSend(a2, "frame");
  return objc_msgSend(a2, "setFrame:");
}

double sub_10031295C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    *(_BYTE *)(Strong + 80) = 0;
    *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003129A8(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v13;
  uint64_t result;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v1 + 16);
  if ((unint64_t)v3 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    while (1)
    {
      v7 = v6 ? specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3) : swift_retain(*(_QWORD *)(v3 + 8 * v5 + 32));
      v8 = *(_QWORD *)(v7 + 32);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = *(double *)(v8 + 32);
        v11 = *(double *)(v8 + 32 + 56 * v9 - 48);
        swift_release(v7);
        if (v10 > v11)
          goto LABEL_26;
      }
      else
      {
        swift_release(v7);
        v10 = 0.0;
        v11 = 0.0;
      }
      if (v10 <= a1 && v11 > a1)
        break;
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_27;
      ++v5;
      if (v13 == v4)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    result = swift_bridgeObjectRelease();
    if (v6)
    {
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      v15 = __OFADD__(v5, 1);
      v16 = v5 + 1;
      if (!v15)
        goto LABEL_21;
    }
    else
    {
      if (v5 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v4 = *(_QWORD *)(v3 + 8 * v5 + 32);
      swift_retain(v4);
      v15 = __OFADD__(v5, 1);
      v16 = v5 + 1;
      if (!v15)
      {
LABEL_21:
        v17 = _s4WordCMa();
        Array.subscript.getter(v16, v3, v17, (uint64_t)&v19);
        return v4;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v3 < 0)
      v18 = v3;
    else
      v18 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100312B50(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = swift_bridgeObjectRetain();
  v3 = (uint64_t)sub_10030CE3C(v2);
  swift_bridgeObjectRelease();
  if ((unint64_t)v3 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = v3 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v7 = i - 4;
      if (v5)
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      else
        v8 = swift_retain(*(_QWORD *)(v3 + 8 * i));
      v9 = *(double *)(v8 + 16);
      v10 = *(double *)(v8 + 24);
      swift_release(v8);
      if (v9 > v10)
        goto LABEL_22;
      if (v9 <= a1 && v10 > a1)
        break;
      v12 = i - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_23;
      if (v12 == v4)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    if (v5)
    {
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      v13 = __OFADD__(v7, 1);
      v14 = i - 3;
      if (!v13)
        goto LABEL_18;
    }
    else
    {
      v4 = *(_QWORD *)(v3 + 8 * i);
      swift_retain(v4);
      v13 = __OFADD__(v7, 1);
      v14 = i - 3;
      if (!v13)
      {
LABEL_18:
        v15 = _s8SyllableCMa();
        Array.subscript.getter(v14, v3, v15, (uint64_t)&v18);
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    if (v3 < 0)
      v16 = v3;
    else
      v16 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_100312CD4(void *a1, char a2, const void *a3, char a4, double a5, double a6, double a7, double a8)
{
  _BYTE *v8;
  objc_class *ObjectType;
  char *v18;
  id v19;
  id v20;
  void *v21;
  char *v22;
  void *v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  a2 &= 1u;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = 0;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind] = a2;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs], a3, 0x219uLL);
  sub_10030ED5C((uint64_t)a3);
  v25.receiver = v8;
  v25.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a5, a6, a7, a8);
  v19 = objc_msgSend(a1, "CGColor");
  v20 = sub_100312E3C((uint64_t)v19, (uint64_t)a3);

  v21 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
  *(_QWORD *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = v20;

  v22 = sub_100312F64(a2, (uint64_t)a3, a4 & 1);
  sub_10030EE2C((uint64_t)a3);

  v23 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  *(_QWORD *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = v22;

  return v18;
}

id sub_100312E3C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  id v12;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v5 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  objc_msgSend(v5, "setBackgroundColor:", a1);
  objc_msgSend(*(id *)(a2 + 168), "lineHeight");
  v7 = v6 * *(double *)(a2 + 224) + *(double *)(a2 + 352) + *(double *)(a2 + 352);
  objc_msgSend(v2, "frame");
  v8 = (v7 - CGRectGetHeight(v14)) * 0.5;
  v9 = -v8;
  objc_msgSend(v2, "frame");
  v10 = v8 + v8;
  v11 = CGRectGetWidth(v15) + v8 + v8;
  objc_msgSend(v2, "frame");
  objc_msgSend(v5, "setFrame:", v9, v9, v11, v10 + CGRectGetHeight(v16));
  v12 = objc_msgSend(v2, "layer");
  objc_msgSend(v12, "addSublayer:", v5);

  return v5;
}

char *sub_100312F64(char a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  double v8;
  double v9;
  double v10;
  double v11;
  double Height;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  double v17;
  id v18;
  char *v19;
  CGRect v21;
  CGRect v22;

  v4 = v3;
  objc_msgSend(*(id *)(a2 + 168), "lineHeight");
  v9 = v8;
  v10 = *(double *)(a2 + 224);
  v11 = *(double *)(a2 + 352);
  objc_msgSend(v4, "frame");
  Height = CGRectGetHeight(v21);
  v13 = 384;
  if ((a1 & 1) == 0)
    v13 = 376;
  v14 = (v9 * v10 + v11 + v11 - Height) * 0.5;
  v15 = *(double *)(a2 + 392);
  v16 = *(id *)(a2 + v13);
  objc_msgSend(v4, "frame");
  v17 = v14 + v14 + CGRectGetHeight(v22);
  v18 = objc_allocWithZone((Class)type metadata accessor for LineProgressGradientView());
  v19 = LineProgressGradientView.init(color:featherWidth:direction:frame:)(v16, a3 & 1, v15, -v14, -v14, v14, v17);
  objc_msgSend(v4, "addSubview:", v19);
  return v19;
}

void sub_100313104()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  void *v4;
  id v5;
  char *v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "tintColorDidChange");
  v1 = *(char **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v1)
  {
    if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind])
      v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    else
      v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    v3 = *v2;
    v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v3;
    v5 = v3;
    v6 = v1;
    sub_1000DD108(0, (unint64_t *)&qword_100560950, UIColor_ptr);
    v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v4);

    if ((v5 & 1) == 0)
      sub_1003348A0();

  }
  else
  {
    __break(1u);
  }
}

void sub_10031323C(uint64_t a1)
{
  char *v1;
  char *v3;
  void **v4;
  void *v5;
  void *v6;
  id v7;
  char *v8;
  id v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v3 = *(char **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v3)
  {
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind])
      v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    else
      v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    v5 = *v4;
    v6 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v5;
    v7 = v5;
    v8 = v3;
    sub_1000DD108(0, (unint64_t *)&qword_100560950, UIColor_ptr);
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v6);

    if ((v7 & 1) == 0)
      sub_1003348A0();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100313430()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t _s4LineCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView4Line);
}

uint64_t _s4LineC8LineViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView);
}

_UNKNOWN **sub_1003134AC()
{
  return &off_100559DE0;
}

uint64_t sub_1003134B8(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100313EE0((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_100313520(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100313520(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  Swift::Int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::Int v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t *v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t *v20;
  uint64_t v21;
  Swift::Int v22;
  double *v23;
  double v24;
  Swift::Int v25;
  double *v26;
  double v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  Swift::Int v96;
  uint64_t v97;
  double *v98;

  v2 = a1;
  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(double *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = v79 + 8 * v82;
          if (v81 >= *(double *)v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v83 + 8) = *(_QWORD *)v83;
          *(double *)(v79 + 8 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v95 = result;
    v96 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      result = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Double);
      *(_QWORD *)(result + 16) = v6;
      v3 = v96;
      v94 = (_QWORD *)result;
      v98 = (double *)(result + 32);
LABEL_13:
      v8 = 0;
      v9 = *v2;
      v92 = v2;
      v93 = *v2 - 8;
      v10 = (char *)_swiftEmptyArrayStorage;
      v97 = *v2;
      while (1)
      {
        v12 = v8++;
        if (v8 < v3)
        {
          v13 = *(double *)(v9 + 8 * v8);
          v14 = *(double *)(v9 + 8 * v12);
          v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            v15 = v13;
            while (1)
            {
              v16 = v15;
              v15 = *(double *)(v9 + 8 * v8);
              if (v13 < v14 == v15 >= v16)
                break;
              if (v3 == ++v8)
              {
                v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12)
              goto LABEL_138;
            if (v12 < v8)
            {
              v17 = (uint64_t *)(v93 + 8 * v8);
              v18 = v8;
              v19 = v12;
              v20 = (uint64_t *)(v9 + 8 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9)
                    goto LABEL_144;
                  v21 = *v20;
                  *v20 = *v17;
                  *v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12))
            goto LABEL_135;
          if (v8 - v12 < v95)
          {
            v22 = v12 + v95;
            if (__OFADD__(v12, v95))
              goto LABEL_139;
            if (v22 >= v3)
              v22 = v3;
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              v23 = (double *)(v93 + 8 * v8);
              do
              {
                v24 = *(double *)(v9 + 8 * v8);
                v25 = v12;
                v26 = v23;
                do
                {
                  v27 = *v26;
                  if (v24 >= *v26)
                    break;
                  if (!v9)
                    goto LABEL_142;
                  *v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              v8 = v22;
            }
          }
        }
        if (v8 < v12)
          goto LABEL_130;
        result = swift_isUniquelyReferenced_nonNull_native(v10);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_100313D6C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
          v10 = (char *)result;
        }
        v29 = *((_QWORD *)v10 + 2);
        v28 = *((_QWORD *)v10 + 3);
        v11 = v29 + 1;
        v9 = v97;
        if (v29 >= v28 >> 1)
        {
          result = (uint64_t)sub_100313D6C((char *)(v28 > 1), v29 + 1, 1, v10);
          v9 = v97;
          v10 = (char *)result;
        }
        *((_QWORD *)v10 + 2) = v11;
        v30 = v10 + 32;
        v31 = &v10[16 * v29 + 32];
        *(_QWORD *)v31 = v12;
        *((_QWORD *)v31 + 1) = v8;
        if (v29)
        {
          while (1)
          {
            v32 = v11 - 1;
            if (v11 >= 4)
            {
              v37 = &v30[2 * v11];
              v38 = *(v37 - 8);
              v39 = *(v37 - 7);
              v43 = __OFSUB__(v39, v38);
              v40 = v39 - v38;
              if (v43)
                goto LABEL_119;
              v42 = *(v37 - 6);
              v41 = *(v37 - 5);
              v43 = __OFSUB__(v41, v42);
              v35 = v41 - v42;
              v36 = v43;
              if (v43)
                goto LABEL_120;
              v44 = v11 - 2;
              v45 = &v30[2 * v11 - 4];
              v47 = *v45;
              v46 = v45[1];
              v43 = __OFSUB__(v46, v47);
              v48 = v46 - v47;
              if (v43)
                goto LABEL_121;
              v43 = __OFADD__(v35, v48);
              v49 = v35 + v48;
              if (v43)
                goto LABEL_123;
              if (v49 >= v40)
              {
                v67 = &v30[2 * v32];
                v69 = *v67;
                v68 = v67[1];
                v43 = __OFSUB__(v68, v69);
                v70 = v68 - v69;
                if (v43)
                  goto LABEL_129;
                v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                v61 = *((_QWORD *)v10 + 4);
                v62 = *((_QWORD *)v10 + 5);
                v43 = __OFSUB__(v62, v61);
                v54 = v62 - v61;
                v55 = v43;
                goto LABEL_77;
              }
              v34 = *((_QWORD *)v10 + 4);
              v33 = *((_QWORD *)v10 + 5);
              v43 = __OFSUB__(v33, v34);
              v35 = v33 - v34;
              v36 = v43;
            }
            if ((v36 & 1) != 0)
              goto LABEL_122;
            v44 = v11 - 2;
            v50 = &v30[2 * v11 - 4];
            v52 = *v50;
            v51 = v50[1];
            v53 = __OFSUB__(v51, v52);
            v54 = v51 - v52;
            v55 = v53;
            if (v53)
              goto LABEL_124;
            v56 = &v30[2 * v32];
            v58 = *v56;
            v57 = v56[1];
            v43 = __OFSUB__(v57, v58);
            v59 = v57 - v58;
            if (v43)
              goto LABEL_126;
            if (__OFADD__(v54, v59))
              goto LABEL_128;
            if (v54 + v59 >= v35)
            {
              v60 = v35 < v59;
LABEL_83:
              if (v60)
                v32 = v44;
              goto LABEL_85;
            }
LABEL_77:
            if ((v55 & 1) != 0)
              goto LABEL_125;
            v63 = &v30[2 * v32];
            v65 = *v63;
            v64 = v63[1];
            v43 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v43)
              goto LABEL_127;
            if (v66 < v54)
              goto LABEL_15;
LABEL_85:
            v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9)
              goto LABEL_143;
            v72 = &v30[2 * v71];
            v73 = *v72;
            v74 = v30;
            v75 = &v30[2 * v32];
            v76 = v75[1];
            result = sub_100313B6C((double *)(v9 + 8 * *v72), (double *)(v9 + 8 * *v75), v9 + 8 * v76, v98);
            if (v1)
              goto LABEL_113;
            if (v76 < v73)
              goto LABEL_116;
            if (v32 > *((_QWORD *)v10 + 2))
              goto LABEL_117;
            *v72 = v73;
            v74[2 * v71 + 1] = v76;
            v77 = *((_QWORD *)v10 + 2);
            if (v32 >= v77)
              goto LABEL_118;
            v11 = v77 - 1;
            result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            v30 = v74;
            *((_QWORD *)v10 + 2) = v77 - 1;
            v9 = v97;
            if (v77 <= 2)
              goto LABEL_15;
          }
        }
        v11 = 1;
LABEL_15:
        v3 = v96;
        if (v8 >= v96)
        {
          v7 = v94;
          v2 = v92;
          goto LABEL_102;
        }
      }
    }
    v7 = _swiftEmptyArrayStorage;
    v98 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v94 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v11 = _swiftEmptyArrayStorage[2];
    v10 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
    v94 = v7;
    if (v11 >= 2)
    {
      v84 = *v2;
      do
      {
        v85 = v11 - 2;
        if (v11 < 2)
          goto LABEL_131;
        if (!v84)
          goto LABEL_145;
        v86 = (uint64_t)v10;
        v87 = v10 + 32;
        v88 = *(_QWORD *)&v10[16 * v85 + 32];
        v89 = *(_QWORD *)&v10[16 * v11 + 24];
        result = sub_100313B6C((double *)(v84 + 8 * v88), (double *)(v84 + 8 * v87[2 * v11 - 2]), v84 + 8 * v89, v98);
        if (v1)
          break;
        if (v89 < v88)
          goto LABEL_132;
        result = swift_isUniquelyReferenced_nonNull_native(v86);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_100313E64(v86);
          v86 = result;
        }
        if (v85 >= *(_QWORD *)(v86 + 16))
          goto LABEL_133;
        v90 = (_QWORD *)(v86 + 32 + 16 * v85);
        *v90 = v88;
        v90[1] = v89;
        v91 = *(_QWORD *)(v86 + 16);
        if (v11 > v91)
          goto LABEL_134;
        result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        v10 = (char *)v86;
        *(_QWORD *)(v86 + 16) = v91 - 1;
        v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    v94[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100313B6C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  BOOL v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  double v21;
  int64_t v23;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4)
      memmove(a4, __src, 8 * v13);
    v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8)
      goto LABEL_39;
    v17 = (double *)(a3 - 8);
    v18 = v6;
    while (1)
    {
      v19 = v17 + 1;
      v20 = *--v18;
      v21 = v20;
      if (*(v14 - 1) < v20)
        break;
      v21 = *(v14 - 1);
      v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--)
        goto LABEL_35;
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        v6 = v18;
        if (v14 > v4)
          continue;
      }
      v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6)
      goto LABEL_36;
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4)
    memmove(a4, __dst, 8 * v10);
  v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v15 = *v6;
      if (*v6 >= *v4)
        break;
      v16 = v7 == v6++;
      if (!v16)
        goto LABEL_16;
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v15 = *v4;
    v16 = v7 == v4++;
    if (v16)
      goto LABEL_17;
LABEL_16:
    *v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  v6 = v7;
LABEL_39:
  v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v6, v4, 8 * (v23 >> 3));
  return 1;
}

char *sub_100313D6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_100559B98);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_100313E64(uint64_t a1)
{
  return sub_100313D6C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100313E78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_100313E9C()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
    return objc_msgSend(result, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  __break(1u);
  return result;
}

uint64_t sub_100313EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100313ED8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *sub_100313EE0(uint64_t a1)
{
  return sub_1002F9BDC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_100313EF4(uint64_t a1)
{
  return sub_1002FA180(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100313F08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 593, 7);
}

id sub_100313FB4()
{
  uint64_t v0;

  return sub_1003128B4(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(double *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100313FCC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100313FF0()
{
  uint64_t v0;

  return sub_10031295C(v0);
}

_QWORD *sub_100314010(_QWORD *result, char a2, uint64_t a3)
{
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGAffineTransform v7;

  v3 = (void *)result[18];
  if (v3)
  {
    if ((a2 & 1) != 0)
    {
      v4 = xmmword_1004280C0;
      v5 = xmmword_100438760;
      v6 = 0uLL;
    }
    else
    {
      CGAffineTransformMakeTranslation(&v7, 0.0, -*(double *)(a3 + 504));
      v5 = *(_OWORD *)&v7.a;
      v4 = *(_OWORD *)&v7.c;
      v6 = *(_OWORD *)&v7.tx;
    }
    *(_OWORD *)&v7.a = v5;
    *(_OWORD *)&v7.c = v4;
    *(_OWORD *)&v7.tx = v6;
    return objc_msgSend(v3, "setTransform:", &v7);
  }
  return result;
}

void sub_10031408C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  unsigned __int8 v4;

  if (!a1)
  {
    v3 = *(void **)(a2 + 96);
    *(_QWORD *)(a2 + 96) = (a3 & 1) == 0;
    v4 = *(_BYTE *)(a2 + 104);
    *(_BYTE *)(a2 + 104) = 2;
    sub_10030FA74(v3, v4);
  }
}

id sub_10031413C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s8SyllableC12SyllableViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10031416C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10030FA74(*(id *)(v0 + 96), *(_BYTE *)(v0 + 104));

  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t _s8SyllableCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView8Syllable);
}

uint64_t _s8SyllableC12SyllableViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView8Syllable12SyllableView);
}

_UNKNOWN **sub_1003141F4()
{
  return &off_1005599F8;
}

void sub_100314200()
{
  uint64_t v0;
  uint64_t v1;
  Class isa;
  int v3;
  BOOL v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = v0;
  isa = *(Class *)(v0 + 96);
  v3 = *(unsigned __int8 *)(v1 + 104);
  if (v3 == 1)
  {
    if (isa)
    {
LABEL_9:
      sub_10030FA50(isa, v3);
      -[objc_class stopAnimation:](isa, "stopAnimation:", 1);
      goto LABEL_10;
    }
  }
  else
  {
    if (*(_BYTE *)(v1 + 104))
      v4 = 1;
    else
      v4 = isa == 0;
    if (!v4)
      goto LABEL_9;
  }
  sub_10031115C();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_10:
  v15 = sub_1003143D0;
  v16 = v1;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10015F6F8;
  v14 = &unk_10051CB78;
  v5 = _Block_copy(&v11);
  v6 = v16;
  swift_retain(v1);
  -[objc_class addAnimations:](isa, "addAnimations:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  v15 = sub_100314428;
  v16 = v1;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1002A4D68;
  v14 = &unk_10051CBA0;
  v7 = _Block_copy(&v11);
  v8 = v16;
  swift_retain(v1);
  -[objc_class addCompletion:](isa, "addCompletion:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  v9 = *(void **)(v1 + 96);
  *(_QWORD *)(v1 + 96) = isa;
  LOBYTE(v8) = *(_BYTE *)(v1 + 104);
  *(_BYTE *)(v1 + 104) = 1;
  v10 = isa;
  sub_10030FA74(v9, v8);
  -[objc_class startAnimation](v10, "startAnimation");

}

id sub_1003143D0()
{
  uint64_t v0;
  id result;
  _QWORD v2[6];

  result = *(id *)(v0 + 144);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(result, "setTransform:", v2);
  }
  return result;
}

uint64_t sub_100314410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100314420(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100314428(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  if (!a1)
  {
    v2 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 96) = 0;
    v3 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = 2;
    sub_10030FA74(v2, v3);
  }
}

_QWORD *sub_100314450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 88);
      swift_bridgeObjectRetain();
      swift_release(v5);
      sub_100383E78(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v5);
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100314570()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double *v12;
  id v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  BOOL v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  unsigned __int8 v34;
  unint64_t v35;
  uint64_t v36;
  char v37[24];
  char v38[32];

  v1 = v0;
  v2 = *(void **)(v0 + 128);
  if (v2)
  {
    v3 = objc_msgSend(v2, "layer");
    objc_msgSend(v3, "removeAllAnimations");

  }
  v4 = *(_QWORD *)(v1 + 136);
  if (v4)
  {
    swift_retain(*(_QWORD *)(v1 + 136));
    Task.cancel()();
    swift_release(v4);
    v5 = *(_QWORD *)(v1 + 136);
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(v1 + 136) = 0;
  swift_release(v5);
  v6 = *(void **)(v1 + 128);
  if (v6)
  {
    v7 = v6;
    sub_100315A00();

  }
  v8 = swift_bridgeObjectRetain();
  v9 = (uint64_t)sub_100314450(v8);
  swift_bridgeObjectRelease();
  if ((unint64_t)v9 >> 62)
    goto LABEL_38;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    v11 = 0;
    v36 = v10;
    v35 = v1;
    while (1)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
        v17 = __OFADD__(v11++, 1);
        if (v17)
          break;
        goto LABEL_18;
      }
      if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_37;
      v16 = *(_QWORD **)(v9 + 32 + 8 * v11);
      swift_retain(v16);
      v17 = __OFADD__(v11++, 1);
      if (v17)
        break;
LABEL_18:
      v18 = (char *)v16[8];
      if (v18)
      {
        v19 = v16[4];
        v20 = v16[5];
        v21 = v16[6];
        v22 = v16[7];
        v23 = (uint64_t *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
        swift_beginAccess(&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators], v38, 0, 0);
        v24 = *v23;
        if ((unint64_t)v24 >> 62)
        {
          if (v24 < 0)
            v30 = v24;
          else
            v30 = v24 & 0xFFFFFFFFFFFFFF8;
          v31 = v18;
          swift_bridgeObjectRetain();
          v25 = _CocoaArrayWrapper.endIndex.getter(v30);
          if (!v25)
            goto LABEL_11;
        }
        else
        {
          v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
          v26 = v18;
          swift_bridgeObjectRetain();
          if (!v25)
            goto LABEL_11;
        }
        if (v25 < 1)
          goto LABEL_36;
        v27 = 0;
        v1 = v24 & 0xC000000000000001;
        do
        {
          if (v1)
            v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v24);
          else
            v28 = *(id *)(v24 + 8 * v27 + 32);
          v29 = v28;
          ++v27;
          objc_msgSend(v28, "stopAnimation:", 0, v35);

        }
        while (v25 != v27);
LABEL_11:
        swift_bridgeObjectRelease();
        sub_100310430();
        v12 = (double *)CGPoint.center.unsafeMutableAddressor();
        swift_beginAccess(v12, v37, 0, 0);
        UIView.setAnchorPoint(_:preserveFrame:)(1, *v12, v12[1]);
        sub_1000DD108(0, (unint64_t *)&qword_10055CDB0, UIView_ptr);
        sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
        v13 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
        v14 = (_QWORD *)swift_allocObject(&unk_10051CD08, 56, 7);
        v14[2] = v18;
        v14[3] = v19;
        v14[4] = v20;
        v14[5] = v21;
        v14[6] = v22;
        v15 = v18;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v13, 0, sub_1003163F0, (uint64_t)v14, 0, 0, 0.0);

        objc_msgSend(v15, "sizeToFit", swift_release(v14).n128_f64[0]);
        swift_release(v16);

        v10 = v36;
        if (v11 == v36)
          goto LABEL_34;
      }
      else
      {
        swift_release(v16);
        if (v11 == v10)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          v1 = v35;
          goto LABEL_43;
        }
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    if (v9 < 0)
      v32 = v9;
    else
      v32 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_43:
  v33 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 80) = 0;
  v34 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v1 + 88) = 2;
  sub_10030FA74(v33, v34);
}

void sub_100314954(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;
  Class isa;
  int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  objc_class *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  double *v38;
  id v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  BOOL v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t j;
  id v55;
  void *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  unsigned __int8 v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  unsigned __int8 v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  double v79;
  double v80;
  double v81;
  id v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  double v92;
  double v93;
  double v94;
  uint64_t v95;
  void *v96;
  double v97;
  double v98;
  double v99;
  double v100;
  id v101;
  void *v102;
  double v103;
  id v104;
  uint64_t v105;
  _QWORD v106[2];
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t i;
  double v113;
  double v114;
  double v115;
  char v116[32];
  void **aBlock;
  uint64_t v118;
  void *v119;
  void *v120;
  void *v121;
  uint64_t v122;

  v4 = v2;
  v114 = *(double *)&a1;
  sub_10000B4C8(&qword_10055A300);
  __chkstk_darwin();
  v108 = (char *)v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *(double *)(v2 + 72);
  if (*(_QWORD *)&v115 >> 62)
  {
    if (v115 < 0.0)
      v26 = *(_QWORD *)&v115;
    else
      v26 = *(_QWORD *)&v115 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((*(_QWORD *)&v115 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v8 = v7 - 1;
      if (v7 < 1)
        goto LABEL_76;
      v109 = v4;
      v9 = 0;
      v11 = v114;
      v10 = v115;
      v12 = *(_QWORD *)&v115 & 0xC000000000000001;
      while (1)
      {
        if (v12)
        {
          v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *(_QWORD *)&v10);
        }
        else
        {
          v13 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9 + 32);
          swift_retain(v13);
        }
        v14 = *(double *)(v13 + 16);
        v15 = v14 <= a2;
        if (*(unsigned __int8 *)(v13 + 104) >= 2u)
        {
          if (*(_QWORD *)(v13 + 96))
          {
            if (v14 <= a2)
              goto LABEL_5;
            v15 = 0;
          }
          else if (v14 > a2)
          {
LABEL_5:
            swift_release(v13);
            if (v8 == v9)
              goto LABEL_25;
            goto LABEL_6;
          }
        }
        sub_10030FA74((id)v15, 2u);
        isa = *(Class *)(v13 + 96);
        v17 = *(unsigned __int8 *)(v13 + 104);
        if (v17 == 1)
        {
          if (isa && v14 <= a2)
          {
LABEL_22:
            sub_10030FA50(*(id *)(v13 + 96), v17);
            -[objc_class stopAnimation:](isa, "stopAnimation:", 1);
            goto LABEL_24;
          }
        }
        else if (!*(_BYTE *)(v13 + 104) && isa && v14 > a2)
        {
          goto LABEL_22;
        }
        sub_1000DD108(0, (unint64_t *)&qword_10055A4C0, UIViewPropertyAnimator_ptr);
        isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_24:
        v18 = swift_allocObject(&unk_10051CBF0, 569, 7);
        *(_QWORD *)(v18 + 16) = v13;
        *(_BYTE *)(v18 + 24) = v14 > a2;
        memcpy((void *)(v18 + 32), *(const void **)&v11, 0x219uLL);
        v121 = sub_1003162B4;
        v122 = v18;
        aBlock = _NSConcreteStackBlock;
        v118 = 1107296256;
        v119 = sub_10015F6F8;
        v120 = &unk_10051CC08;
        v19 = _Block_copy(&aBlock);
        v20 = v122;
        swift_retain(v13);
        sub_10030ED5C(*(uint64_t *)&v11);
        -[objc_class addAnimations:](isa, "addAnimations:", v19, swift_release(v20).n128_f64[0]);
        _Block_release(v19);
        v21 = swift_allocObject(&unk_10051CC40, 25, 7);
        *(_QWORD *)(v21 + 16) = v13;
        *(_BYTE *)(v21 + 24) = v14 > a2;
        v121 = sub_100316300;
        v122 = v21;
        aBlock = _NSConcreteStackBlock;
        v118 = 1107296256;
        v119 = sub_1002A4D68;
        v120 = &unk_10051CC58;
        v22 = _Block_copy(&aBlock);
        v23 = v122;
        swift_retain(v13);
        -[objc_class addCompletion:](isa, "addCompletion:", v22, swift_release(v23).n128_f64[0]);
        _Block_release(v22);
        v24 = *(void **)(v13 + 96);
        *(_QWORD *)(v13 + 96) = isa;
        LOBYTE(v23) = *(_BYTE *)(v13 + 104);
        *(_BYTE *)(v13 + 104) = v14 > a2;
        v25 = isa;
        sub_10030FA74(v24, v23);
        -[objc_class startAnimation](v25, "startAnimation");
        swift_release(v13);

        v10 = v115;
        if (v8 == v9)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          v4 = v109;
          goto LABEL_31;
        }
LABEL_6:
        ++v9;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_31:
  v27 = *(_QWORD *)(v4 + 32);
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    if (*(double *)(v27 + 32) <= a2)
    {
LABEL_82:
      if (*(double *)(v27 + 32) > a2)
        return;
      goto LABEL_85;
    }
  }
  else if (a2 >= 0.0)
  {
    goto LABEL_84;
  }
  if (*(_BYTE *)(v4 + 88) == 2 && !*(_QWORD *)(v4 + 80))
  {
    if (v28)
      goto LABEL_82;
    goto LABEL_84;
  }
  v29 = *(void **)(v4 + 128);
  if (v29)
  {
    v30 = objc_msgSend(v29, "layer");
    objc_msgSend(v30, "removeAllAnimations");

  }
  v31 = *(_QWORD *)(v4 + 136);
  if (v31)
  {
    swift_retain(*(_QWORD *)(v4 + 136));
    Task.cancel()();
    swift_release(v31);
    v32 = *(_QWORD *)(v4 + 136);
  }
  else
  {
    v32 = 0;
  }
  *(_QWORD *)(v4 + 136) = 0;
  swift_release(v32);
  v33 = *(void **)(v4 + 128);
  if (v33)
  {
    v34 = v33;
    sub_100315A00();

  }
  v107 = v27;
  v35 = swift_bridgeObjectRetain();
  v3 = (uint64_t)sub_100314450(v35);
  swift_bridgeObjectRelease();
  v109 = v4;
  v106[1] = 0;
  if ((unint64_t)v3 >> 62)
    goto LABEL_77;
  v36 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v36)
  {
LABEL_49:
    v37 = 0;
    *(_QWORD *)&v113 = v3 & 0xC000000000000001;
    v111 = v3 & 0xFFFFFFFFFFFFFF8;
    v110 = v3 + 32;
    for (i = v36; i != v37; v36 = i)
    {
      while (1)
      {
        if (v113 == 0.0)
        {
          if (v37 >= *(_QWORD *)(v111 + 16))
            goto LABEL_75;
          v42 = *(_QWORD **)(v110 + 8 * v37);
          swift_retain(v42);
          v43 = __OFADD__(v37++, 1);
          if (v43)
          {
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            if (v3 < 0)
              v58 = v3;
            else
              v58 = v3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v36 = _CocoaArrayWrapper.endIndex.getter(v58);
            swift_bridgeObjectRelease();
            if (!v36)
              goto LABEL_81;
            goto LABEL_49;
          }
        }
        else
        {
          v42 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v3);
          v43 = __OFADD__(v37++, 1);
          if (v43)
            goto LABEL_73;
        }
        v44 = (char *)v42[8];
        if (v44)
          break;
        swift_release(v42);
        if (v37 == v36)
          goto LABEL_81;
      }
      v45 = v3;
      v46 = v42[4];
      v47 = v42[5];
      v48 = v42[6];
      v49 = v42[7];
      v50 = (uint64_t *)&v44[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
      swift_beginAccess(&v44[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators], &aBlock, 0, 0);
      v51 = *v50;
      if ((unint64_t)v51 >> 62)
      {
        if (v51 < 0)
          v3 = v51;
        else
          v3 = v51 & 0xFFFFFFFFFFFFFF8;
        v57 = v44;
        swift_bridgeObjectRetain();
        v52 = _CocoaArrayWrapper.endIndex.getter(v3);
        if (!v52)
          goto LABEL_50;
      }
      else
      {
        v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
        v53 = v44;
        swift_bridgeObjectRetain();
        if (!v52)
          goto LABEL_50;
      }
      if (v52 < 1)
        goto LABEL_74;
      for (j = 0; j != v52; ++j)
      {
        if ((v51 & 0xC000000000000001) != 0)
          v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v51);
        else
          v55 = *(id *)(v51 + 8 * j + 32);
        v56 = v55;
        objc_msgSend(v55, "stopAnimation:", 0);

      }
LABEL_50:
      swift_bridgeObjectRelease();
      sub_100310430();
      v38 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess(v38, v116, 0, 0);
      UIView.setAnchorPoint(_:preserveFrame:)(1, *v38, v38[1]);
      sub_1000DD108(0, (unint64_t *)&qword_10055CDB0, UIView_ptr);
      sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
      v39 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
      v40 = (_QWORD *)swift_allocObject(&unk_10051CCE0, 56, 7);
      v40[2] = v44;
      v40[3] = v46;
      v40[4] = v47;
      v40[5] = v48;
      v40[6] = v49;
      v41 = v44;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v39, 0, sub_1003163F0, (uint64_t)v40, 0, 0, 0.0);

      objc_msgSend(v41, "sizeToFit", swift_release(v40).n128_f64[0]);
      swift_release(v42);

      v3 = v45;
    }
  }
LABEL_81:
  swift_bridgeObjectRelease();
  v4 = v109;
  v59 = *(void **)(v109 + 80);
  *(_QWORD *)(v109 + 80) = 0;
  v60 = *(_BYTE *)(v4 + 88);
  *(_BYTE *)(v4 + 88) = 2;
  sub_10030FA74(v59, v60);
  v27 = v107;
  if (*(_QWORD *)(v107 + 16))
    goto LABEL_82;
LABEL_84:
  if (a2 < 0.0)
    return;
LABEL_85:
  if (*(_BYTE *)(v4 + 88) == 2 && !*(_QWORD *)(v4 + 80) && (*(_BYTE *)(v4 + 48) & 1) == 0)
  {
    v61 = *(double *)(v4 + 40);
    v62 = swift_bridgeObjectRetain();
    v63 = (uint64_t)sub_100314450(v62);
    swift_bridgeObjectRelease();
    v64 = *(_QWORD *)(v27 + 16);
    if (v64)
      v65 = *(double *)(v27 + 32 + 56 * v64 - 48) - *(double *)(v27 + 32);
    else
      v65 = 0.0;
    v66 = *(_QWORD *)&v114;
    if ((unint64_t)v63 >> 62)
    {
      if (v63 < 0)
        v105 = v63;
      else
        v105 = v63 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v67 = _CocoaArrayWrapper.endIndex.getter(v105);
      swift_bridgeObjectRelease();
      if (v67 < 1)
        goto LABEL_118;
    }
    else
    {
      v67 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v67 < 1)
        goto LABEL_118;
    }
    if (v65 > 0.0)
    {
      v68 = *(void **)(v4 + 80);
      *(_QWORD *)(v4 + 80) = 0;
      v69 = *(_BYTE *)(v4 + 88);
      *(_BYTE *)(v4 + 88) = 0;
      sub_10030FA74(v68, v69);
      v70 = *(void **)(v4 + 128);
      if (v70)
      {
        v71 = v70;
        sub_100315C10(v66, v61, v65);

      }
      v72 = type metadata accessor for TaskPriority(0);
      v73 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v108, 1, 1, v72);
      v74 = swift_allocObject(&unk_10051CC90, 24, 7);
      swift_weakInit(v74 + 16, v4);
      v75 = swift_allocObject(&unk_10051CCB8, 48, 7);
      *(_QWORD *)(v75 + 16) = 0;
      *(_QWORD *)(v75 + 24) = 0;
      *(_QWORD *)(v75 + 32) = v74;
      *(double *)(v75 + 40) = v65;
      v76 = sub_100323BB4(v73, (uint64_t)&unk_100559E40, v75);
      v77 = *(_QWORD *)(v4 + 136);
      *(_QWORD *)(v4 + 136) = v76;
      swift_release(v77);
      v78 = (double)v67;
      v79 = v65 / (double)v67 * 0.4;
      if (v79 > 0.4)
        v79 = 0.4;
      v115 = v79;
      v80 = *(double *)(v66 + 216) + v61 * (*(double *)(v66 + 224) - *(double *)(v66 + 216));
      if (v65 <= 3.0)
        v81 = v65;
      else
        v81 = 3.0;
      sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
      v82 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v81);
      v84 = *(double *)(v4 + 112);
      v83 = *(double *)(v4 + 120);
      v85 = CGSize.scaled(_:)(v80, v84, v83);
      v87 = v86;
      if ((unint64_t)v63 >> 62)
      {
        if (v63 < 0)
          v89 = v63;
        else
          v89 = v63 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v88 = _CocoaArrayWrapper.endIndex.getter(v89);
        swift_bridgeObjectRelease();
        if (!v88)
          goto LABEL_117;
      }
      else
      {
        v88 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v88)
        {
LABEL_117:

          goto LABEL_118;
        }
      }
      if (v88 < 1)
      {
        __break(1u);
        return;
      }
      v90 = 0;
      v91 = v78 * 0.5;
      v92 = (v84 - v85) * 0.5;
      v93 = v83 - v87;
      v94 = *(double *)(*(_QWORD *)&v114 + 504);
      v113 = v92;
      v114 = v65 / v91;
      do
      {
        while (1)
        {
          if ((v63 & 0xC000000000000001) != 0)
          {
            v95 = specialized _ArrayBuffer._getElementSlowPath(_:)(v90, v63);
          }
          else
          {
            v95 = *(_QWORD *)(v63 + 8 * v90 + 32);
            swift_retain(v95);
          }
          ++v90;
          v96 = *(void **)(v95 + 64);
          if (v96)
          {
            v97 = *(double *)(v95 + 32);
            v98 = *(double *)(v95 + 40);
            v99 = (v97 + v113 + v80 * v97) * 0.5;
            v100 = v115 * (double)v90;
            v101 = v96;
            sub_1003108C8(v82, v99, (v98 + v93 + v80 * v98) * 0.25 - v94, v80, v100);

            v102 = *(void **)(v95 + 64);
            if (v102)
              break;
          }
          swift_release(v95);
          if (v88 == v90)
            goto LABEL_117;
        }
        v103 = v114 + v100;
        v104 = v102;
        sub_100310C84(v82, v97, v98 - v94, v103);
        swift_release(v95);

      }
      while (v88 != v90);
      goto LABEL_117;
    }
LABEL_118:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003154E4(void *a1, uint64_t a2)
{
  double *v2;
  double *v3;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  objc_class *v27;
  id v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  objc_class *v42;
  char *v43;
  id v44;
  id v45;
  NSString v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v53;
  objc_super v54;
  id v55[5];

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)_s4WordC8WordViewCMa()), "initWithFrame:", v2[12], v2[13], v2[14], v2[15]);
  v6 = *(void **)(a2 + 344);
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v6, (uint64_t)v55, 0.0, *(double *)(a2 + 352), 0.0, 0.0);
  v7 = v6;
  v8 = objc_msgSend(v5, "layer");
  v9 = objc_msgSend(v5, "traitCollection");
  objc_msgSend(v9, "displayScale");
  v11 = v10;

  objc_msgSend(v8, "setRasterizationScale:", v11);
  v12 = objc_msgSend(v5, "layer");
  objc_msgSend(v12, "setShouldRasterize:", 1);

  v13 = v5;
  sub_10015CEDC(v55);
  UIView.shadow.setter((uint64_t)v55);

  v14 = (void *)*((_QWORD *)v3 + 16);
  *((_QWORD *)v3 + 16) = v13;
  v15 = v13;

  if (!*((_QWORD *)v3 + 16))
  {
    v16 = (void *)*((_QWORD *)v3 + 10);
    v3[10] = 0.0;
    v17 = *((_BYTE *)v3 + 88);
    *((_BYTE *)v3 + 88) = 2;
    sub_10030FA74(v16, v17);
  }

  v18 = *((_QWORD *)v3 + 9);
  if (((_BYTE)v3[6] & 1) == 0)
  {
    v33 = swift_bridgeObjectRetain();
    v34 = (uint64_t)sub_100314450(v33);
    result = swift_bridgeObjectRelease();
    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v51 = v34;
      else
        v51 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v35 = _CocoaArrayWrapper.endIndex.getter(v51);
      result = swift_bridgeObjectRelease();
      if (!v35)
        goto LABEL_24;
    }
    else
    {
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v35)
        goto LABEL_24;
    }
    if (v35 >= 1)
    {
      v36 = 0;
      do
      {
        if ((v34 & 0xC000000000000001) != 0)
        {
          v37 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v34);
        }
        else
        {
          v37 = *(double **)(v34 + 8 * v36 + 32);
          swift_retain(v37);
        }
        ++v36;
        v38 = v37[4];
        v39 = v37[5];
        v40 = v37[6];
        v41 = v37[7];
        v42 = (objc_class *)_s5GlyphC9GlyphViewCMa();
        v43 = (char *)objc_allocWithZone(v42);
        *(_QWORD *)&v43[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators] = _swiftEmptyArrayStorage;
        v54.receiver = v43;
        v54.super_class = v42;
        v44 = a1;
        swift_bridgeObjectRetain();
        v45 = objc_msgSendSuper2(&v54, "initWithFrame:", v38, v39, v40, v41);
        v46 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        objc_msgSend(v45, "setText:", v46);

        objc_msgSend(v45, "setFont:", v44);
        objc_msgSend(v45, "setTextAlignment:", 0);
        v47 = v45;
        objc_msgSend(v47, "sizeToFit");

        v48 = (void *)*((_QWORD *)v37 + 8);
        *((_QWORD *)v37 + 8) = v47;
        v49 = v47;

        objc_msgSend(v15, "addSubview:", v49);
        swift_release(v37);

      }
      while (v35 != v36);
      goto LABEL_24;
    }
    goto LABEL_31;
  }
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v50 = *((_QWORD *)v3 + 9);
    else
      v50 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    result = _CocoaArrayWrapper.endIndex.getter(v50);
    v19 = result;
    if (result)
      goto LABEL_6;
LABEL_24:
    swift_bridgeObjectRelease();
    sub_1002C2300(v55);
    return (uint64_t)v15;
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v19)
    goto LABEL_24;
LABEL_6:
  if (v19 >= 1)
  {
    v21 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v18);
      }
      else
      {
        v22 = *(_QWORD *)(v18 + 8 * v21 + 32);
        swift_retain(v22);
      }
      ++v21;
      v23 = *(double *)(v22 + 112);
      v24 = *(double *)(v22 + 120);
      v25 = *(double *)(v22 + 136);
      v26 = *(double *)(v22 + 128) + 50.0;
      v27 = (objc_class *)_s8SyllableC12SyllableViewCMa();
      v53.receiver = objc_allocWithZone(v27);
      v53.super_class = v27;
      swift_bridgeObjectRetain();
      v28 = a1;
      v29 = objc_msgSendSuper2(&v53, "initWithFrame:", v23, v24, v26, v25);
      v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, "setText:", v30);

      objc_msgSend(v29, "setFont:", v28);
      objc_msgSend(v29, "setTextAlignment:", 0);

      v31 = *(void **)(v22 + 144);
      *(_QWORD *)(v22 + 144) = v29;
      v32 = v29;

      objc_msgSend(v15, "addSubview:", v32);
      swift_release(v22);

    }
    while (v19 != v21);
    goto LABEL_24;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_100315A00()
{
  void *v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  Class isa;
  id v10;
  Class v11;
  id v12;
  id v13;
  double v14;
  id v15;

  v1 = v0;
  sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
  v2 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v3);

  v5 = v4;
  objc_msgSend(v2, "settlingDuration");
  objc_msgSend(v5, "setDuration:");

  v6 = v2;
  CASpringAnimation.springParameters.setter(v6);
  v7 = v5;
  v8 = objc_msgSend(v1, "layer");
  objc_msgSend(v8, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v7, "setFromValue:", isa);

  v10 = v7;
  v11 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v10, "setToValue:", v11);

  v12 = objc_msgSend(v1, "layer");
  v13 = objc_msgSend(v10, "keyPath");
  objc_msgSend(v12, "addAnimation:forKey:", v10, v13);

  v15 = objc_msgSend(v1, "layer");
  LODWORD(v14) = 0;
  objc_msgSend(v15, "setShadowOpacity:", v14);

}

void sub_100315C10(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  float v5;
  double v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Class isa;
  Class v15;
  id v16;
  id v17;
  double v18;
  id v19;

  v4 = v3;
  v5 = *(double *)(a1 + 360) + (*(double *)(a1 + 368) - *(double *)(a1 + 360)) * a2;
  if (a3 <= 3.0)
    v6 = a3;
  else
    v6 = 3.0;
  sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
  v7 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v8);

  v10 = v9;
  objc_msgSend(v7, "settlingDuration");
  objc_msgSend(v10, "setDuration:");

  v11 = v7;
  CASpringAnimation.springParameters.setter(v11);
  v12 = v10;
  v13 = objc_msgSend(v4, "layer");
  objc_msgSend(v13, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setFromValue:", isa);

  v15 = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setToValue:", v15);

  v16 = objc_msgSend(v4, "layer");
  v17 = objc_msgSend(v12, "keyPath");
  objc_msgSend(v16, "addAnimation:forKey:", v12, v17);

  v19 = objc_msgSend(v4, "layer");
  *(float *)&v18 = v5;
  objc_msgSend(v19, "setShadowOpacity:", v18);

}

uint64_t sub_100315E34(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(double *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 88) = a5;
  return swift_task_switch(sub_100315E50, 0, 0);
}

uint64_t sub_100315E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __n128 v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(double);

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(void **)(Strong + 128);
    *(_QWORD *)(v0 + 104) = v4;
    if (v4)
    {
      v4;
      swift_release(v3);
      v18 = (uint64_t (*)(double))((char *)&dword_100559E48 + dword_100559E48);
      v5 = (_QWORD *)swift_task_alloc(unk_100559E4C);
      *(_QWORD *)(v0 + 112) = v5;
      *v5 = v0;
      v5[1] = sub_100315FAC;
      return v18(*(double *)(v0 + 96));
    }
    swift_release(Strong);
  }
  v7 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v7, v0 + 40, 0, 0);
  v8 = swift_weakLoadStrong(v7);
  if (!v8
    || ((v9 = *(_QWORD *)(v8 + 80), v10 = *(unsigned __int8 *)(v8 + 88), v11 = swift_release(v8), v10 == 2)
      ? (v12 = v9 == 0)
      : (v12 = 0),
        !v12))
  {
    v13 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v13, v0 + 64, 0, 0);
    v14 = swift_weakLoadStrong(v13);
    if (v14)
    {
      v15 = v14;
      v16 = *(void **)(v14 + 80);
      *(_QWORD *)(v15 + 80) = 1;
      v17 = *(_BYTE *)(v15 + 88);
      *(_BYTE *)(v15 + 88) = 2;
      sub_10030FA74(v16, v17);
      v11 = swift_release(v15);
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
}

uint64_t sub_100315FAC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));

  return swift_task_switch(sub_100316004, 0, 0);
}

uint64_t sub_100316004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  int v4;
  __n128 v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 40, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong
    || ((v3 = *(_QWORD *)(Strong + 80), v4 = *(unsigned __int8 *)(Strong + 88), v5 = swift_release(Strong), v4 == 2)
      ? (v6 = v3 == 0)
      : (v6 = 0),
        !v6))
  {
    v7 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v7, v0 + 64, 0, 0);
    v8 = swift_weakLoadStrong(v7);
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(v8 + 80);
      *(_QWORD *)(v9 + 80) = 1;
      v11 = *(_BYTE *)(v9 + 88);
      *(_BYTE *)(v9 + 88) = 2;
      sub_10030FA74(v10, v11);
      v5 = swift_release(v9);
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_10031616C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10030FA74(*(id *)(v0 + 80), *(_BYTE *)(v0 + 88));

  swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocClassInstance(v0, 144, 7);
}

uint64_t _s4WordCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView4Word);
}

uint64_t _s4WordC8WordViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView4Word8WordView);
}

_UNKNOWN **sub_10031620C()
{
  return &off_100559C90;
}

uint64_t sub_100316218()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 569, 7);
}

_QWORD *sub_1003162B4()
{
  uint64_t v0;

  return sub_100314010(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + 32);
}

uint64_t sub_1003162C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1003162D4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1003162DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100316300(uint64_t a1)
{
  uint64_t v1;

  sub_10031408C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_10031630C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100316330()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10031635C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc(dword_100559E3C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DC64;
  v4[12] = v3;
  v4[11] = v2;
  return swift_task_switch(sub_100315E50, 0, 0);
}

uint64_t sub_1003163CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003163F4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 32) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = v5;
  return swift_task_switch(sub_100316464, v4, v5);
}

uint64_t sub_100316464()
{
  uint64_t v0;
  _QWORD *v1;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  id v11;
  Class v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  if (*(double *)(v0 + 16) <= 0.0)
  {
    v3 = *(void **)(v0 + 24);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
    *(_QWORD *)(v0 + 72) = v4;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v5);
    *(_QWORD *)(v0 + 80) = v6;

    v7 = v6;
    objc_msgSend(v4, "settlingDuration");
    objc_msgSend(v7, "setDuration:");

    CASpringAnimation.springParameters.setter(v4);
    v8 = v7;
    v9 = objc_msgSend(v3, "layer");
    objc_msgSend(v9, "shadowOpacity");

    isa = Float._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setFromValue:", isa);

    v11 = v8;
    v12 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v11, "setToValue:", v12);

    *(_QWORD *)(v0 + 88) = objc_msgSend(v3, "layer");
    v13 = objc_msgSend(v11, "keyPath");
    if (v13)
    {
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    *(_QWORD *)(v0 + 96) = v17;
    v18 = (_QWORD *)swift_task_alloc(dword_100556B2C);
    *(_QWORD *)(v0 + 104) = v18;
    *v18 = v0;
    v18[1] = sub_100316948;
    return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v11, v15, v17);
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc(dword_100556ADC);
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_1003166CC;
    return static Task<>.sleep(for:)(*(double *)(v0 + 16));
  }
}

uint64_t sub_1003166CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003169E8;
  else
    v4 = sub_10031672C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10031672C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  Class v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = (void *)v0[3];
  v2 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
  v0[9] = v2;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v3);
  v0[10] = v4;

  v5 = v4;
  objc_msgSend(v2, "settlingDuration");
  objc_msgSend(v5, "setDuration:");

  CASpringAnimation.springParameters.setter(v2);
  v6 = v5;
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v6, "setFromValue:", isa);

  v9 = v6;
  v10 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v9, "setToValue:", v10);

  v0[11] = objc_msgSend(v1, "layer");
  v11 = objc_msgSend(v9, "keyPath");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v0[12] = v15;
  v16 = (_QWORD *)swift_task_alloc(dword_100556B2C);
  v0[13] = v16;
  *v16 = v0;
  v16[1] = sub_100316948;
  return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v9, v13, v15);
}

uint64_t sub_100316948()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));

  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1003169AC, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1003169AC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 32));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003169E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100316A24()
{
  uint64_t v0;

  return sub_100310850(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24), *(CGFloat *)(v0 + 32), *(CGFloat *)(v0 + 40), *(CGFloat *)(v0 + 48));
}

void sub_100316A40()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  const void *v3;
  char *v4;
  char *v5;
  char *v6;
  _BYTE v7[544];
  _BYTE v8[544];
  _BYTE __dst[544];
  _BYTE v10[544];
  _BYTE v11[544];
  _BYTE v12[544];

  v1 = *(char **)(v0 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (v1)
  {
    v2 = v0;
    v3 = (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs);
    memcpy(__dst, (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    memcpy(v12, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memcpy(v10, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memmove(&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    sub_10030ED5C((uint64_t)__dst);
    sub_10030ED5C((uint64_t)__dst);
    v4 = v1;
    sub_10030ED5C((uint64_t)v12);
    sub_10030EE2C((uint64_t)v10);
    sub_10030C470((uint64_t)v12);
    sub_10030EE2C((uint64_t)__dst);
    sub_10030EE2C((uint64_t)v12);

    v5 = *(char **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v5)
    {
      memcpy(v7, v3, 0x219uLL);
      memcpy(v11, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memcpy(v8, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memmove(&v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], v3, 0x219uLL);
      sub_10030ED5C((uint64_t)v7);
      sub_10030ED5C((uint64_t)v7);
      v6 = v5;
      sub_10030ED5C((uint64_t)v11);
      sub_10030EE2C((uint64_t)v8);
      sub_10030C470((uint64_t)v11);
      sub_10030EE2C((uint64_t)v7);
      sub_10030EE2C((uint64_t)v11);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100316BC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OBJC_IVAR___MusicSBS_TextContentView_isScrolling;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling);
  *(_BYTE *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling) = result;
  if (v3 != (result & 1))
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v4)
    {
      *(_BYTE *)(v4 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = result & 1;
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v5)
        *(_BYTE *)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = *(_BYTE *)(v1 + v2);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100316C24(char a1, char a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  UISpringTimingParameters v15;
  Class isa;
  void *v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  v3 = a1 & 1;
  if (*(_BYTE *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) != (a1 & 1))
  {
    v4 = v2;
    *(_BYTE *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) = v3;
    v5 = *(void **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v5)
    {
      v8 = v5;
      sub_10030C580(a1 & 1, a2 & 1);

      v9 = *(void **)(v4 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v9)
      {
        v10 = v9;
        sub_10030C580(a1 & 1, a2 & 1);

      }
      v11 = swift_allocObject(&unk_10051CDB0, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      v12 = swift_allocObject(&unk_10051CDD8, 25, 7);
      *(_QWORD *)(v12 + 16) = v11;
      *(_BYTE *)(v12 + 24) = v3;
      if ((a2 & 1) != 0)
      {
        if ((a1 & 1) != 0)
        {
          v13 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
        }
        else
        {
          sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
          v13 = (objc_class *)UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
        }
        v15.super.isa = v13;
        sub_1000DD108(0, (unint64_t *)&qword_10055A4C0, UIViewPropertyAnimator_ptr);
        isa = UIViewPropertyAnimator.init(springTimingParameters:)(v15).super.isa;
        v19[4] = sub_1003181B8;
        v20 = v12;
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 1107296256;
        v19[2] = sub_10015F6F8;
        v19[3] = &unk_10051CDF0;
        v17 = _Block_copy(v19);
        v18 = v20;
        swift_retain(v12);
        -[objc_class addAnimations:](isa, "addAnimations:", v17, swift_release(v18).n128_f64[0]);
        _Block_release(v17);
        -[objc_class startAnimation](isa, "startAnimation");

        swift_release(v12);
      }
      else
      {
        swift_retain(v11);
        sub_100316E80(v14, a1 & 1);
        swift_release(v12);
        swift_release(v11);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100316E80(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  double v12;
  id v13;
  _OWORD v14[3];
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    v7 = *(void **)(Strong + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v7)
    {
      if ((a2 & 1) != 0)
      {
        v8 = xmmword_1004280C0;
        v9 = xmmword_100438760;
        v10 = 0uLL;
      }
      else
      {
        v9 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 96];
        v8 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 112];
        v10 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 128];
      }
      v14[0] = v9;
      v14[1] = v8;
      v14[2] = v10;
      objc_msgSend(v7, "setTransform:", v14);
      v11 = *(void **)&v5[v6];
      if (v11)
      {
        if ((a2 & 1) != 0)
          v12 = 1.0;
        else
          v12 = 0.0;
        v13 = v11;
        objc_msgSend(v13, "setAlpha:", v12);

      }
    }

  }
}

id sub_100316F6C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  _BYTE *v10;
  void *v11;
  _BYTE *v12;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  _OWORD *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  __int128 v30;
  void *v31;
  _OWORD v33[3];
  _BYTE __dst[552];

  v11 = *(void **)&v10[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v11)
  {
    v12 = v10;
    v18 = (uint64_t)result;
    v19 = a10 & 1;
    v20 = a5 & 1;
    v21 = v11;
    sub_10030D5B0(v18, a2, a3, a4, v20, a6);

    *(_QWORD *)&v12[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
    v12[OBJC_IVAR___MusicSBS_TextContentView_direction] = v20;
    *(_QWORD *)&v12[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = a10 & 1;
    v22 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    v23 = *(void **)&v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    if (v23)
    {
      if (a8)
      {
        v24 = v23;
        sub_10030D5B0(a7, a8, a9, a4, v19, a6);

LABEL_11:
        objc_msgSend(v12, "setNeedsLayout", a9);
        return objc_msgSend(v12, "layoutIfNeeded");
      }
      objc_msgSend(v23, "removeFromSuperview");
      v31 = *(void **)&v12[v22];
    }
    else
    {
      if (a8)
      {
        v25 = &v12[OBJC_IVAR___MusicSBS_TextContentView_specs];
        memcpy(__dst, &v12[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
        v26 = objc_allocWithZone((Class)_s8TextViewCMa());
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10030ED5C((uint64_t)__dst);
        v27 = sub_10030D710(a7, a8, a9, __dst, 1, a4, v19, a6);
        v28 = sub_100318104(a4);
        UIView.setAnchorPoint(_:preserveFrame:)(1, v28, v29);
        objc_msgSend(v27, "setAlpha:", 0.0);
        v30 = v25[7];
        v33[0] = v25[6];
        v33[1] = v30;
        v33[2] = v25[8];
        objc_msgSend(v27, "setTransform:", v33);
        objc_msgSend(v12, "addSubview:", v27);
        v31 = *(void **)&v12[v22];
        *(_QWORD *)&v12[v22] = v27;
LABEL_10:

        goto LABEL_11;
      }
      v31 = 0;
    }
    *(_QWORD *)&v12[v22] = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_1003171C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _OWORD *a11)
{
  _BYTE *v11;
  _BYTE *v12;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  objc_class *v20;
  id v21;
  id v22;
  void *v23;
  char v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  __int128 v33;
  objc_class *v34;
  char *result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  void *v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v49;
  _OWORD v50[3];
  objc_super v51;

  v12 = v11;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  v16 = (uint64_t *)&v11[OBJC_IVAR___MusicSBS_TextContentView_text];
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v49 = OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection;
  v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  v17 = a5 & 1;
  v18 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  v44 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;
  *v16 = a1;
  v16[1] = a2;
  v19 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  memcpy(&v19[OBJC_IVAR___MusicSBS_TextContentView_specs], a11, 0x219uLL);
  *(_QWORD *)&v19[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
  v19[OBJC_IVAR___MusicSBS_TextContentView_direction] = v17;
  *(_QWORD *)&v19[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
  v20 = (objc_class *)_s8TextViewCMa();
  v21 = objc_allocWithZone(v20);
  swift_bridgeObjectRetain();
  sub_10030ED5C((uint64_t)a11);
  swift_bridgeObjectRetain();
  sub_10030ED5C((uint64_t)a11);
  v22 = sub_10030D710(a1, a2, a3, a11, 0, a4, v17, a6);
  v23 = *(void **)&v11[v18];
  *(_QWORD *)&v11[v18] = v22;

  if (a8)
  {
    v24 = a10;
    objc_allocWithZone(v20);
    sub_10030ED5C((uint64_t)a11);
    v25 = sub_10030D710(a7, a8, a9, a11, 1, a4, a10 & 1, a6);
    v26 = *(void **)&v11[v44];
    *(_QWORD *)&v11[v44] = v25;

    v27 = *(void **)&v11[v44];
    if (v27)
    {
      v28 = v27;
      v29 = sub_100318104(a4);
      UIView.setAnchorPoint(_:preserveFrame:)(1, v29, v30);

      v31 = *(void **)&v12[v44];
      if (v31)
      {
        objc_msgSend(v31, "setAlpha:", 0.0);
        v32 = *(void **)&v12[v44];
        if (v32)
        {
          v33 = a11[7];
          v50[0] = a11[6];
          v50[1] = v33;
          v50[2] = a11[8];
          objc_msgSend(v32, "setTransform:", v50);
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = a10;
  }
  v12[v49] = v24;

  v34 = (objc_class *)_s19SBS_TextContentViewCMa();
  v51.receiver = v19;
  v51.super_class = v34;
  result = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v36 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  v37 = *(_QWORD *)&result[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v37)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v38 = result;
  v39 = result;
  result = (char *)objc_msgSend(v39, "addSubview:", v37);
  v40 = *(void **)&v39[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (!v40)
  {
    sub_10030EE2C((uint64_t)a11);
    goto LABEL_13;
  }
  v41 = *(void **)&v38[v36];
  if (!v41)
    goto LABEL_15;
  v42 = v40;
  objc_msgSend(v41, "frame");
  result = *(char **)&v38[v36];
  if (result)
  {
    objc_msgSend(result, "frame");
    objc_msgSend(v42, "frame");
    objc_msgSend(v42, "setFrame:");
    v43 = v39;
    objc_msgSend(v43, "addSubview:", v42);
    sub_10030EE2C((uint64_t)a11);

LABEL_13:
    return v39;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_100317580(char **a1@<X8>)
{
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  id v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  id v21;
  __n128 v22;
  char isEscapingClosureAtFileLocation;
  objc_class *v24;
  char v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  _OWORD __dst[34];

  v2 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v2)
  {
    v3 = v1;
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
    v7 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_capabilities];
    v8 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    v27 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
    v26 = v1[OBJC_IVAR___MusicSBS_TextContentView_direction];
    if (v8)
    {
      v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
      v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
      v11 = *(_QWORD **)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = 0;
      v9 = 0;
      v11 = _swiftEmptyArrayStorage;
    }
    v12 = v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection];
    memcpy(__dst, &v1[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
    v24 = (objc_class *)_s19SBS_TextContentViewCMa();
    v13 = objc_allocWithZone(v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10030ED5C((uint64_t)__dst);
    v14 = sub_1003171C0(v4, v5, v6, v27, v26, v7, v10, v9, (uint64_t)v11, v12, __dst);
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_10051CE28, 32, 7);
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v3;
    v17 = swift_allocObject(&unk_10051CE50, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_100318208;
    *(_QWORD *)(v17 + 24) = v16;
    aBlock[4] = sub_100150C04;
    v29 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100185F2C;
    aBlock[3] = &unk_10051CE68;
    v18 = _Block_copy(aBlock);
    v19 = v29;
    v20 = v14;
    v21 = v3;
    swift_retain(v17);
    objc_msgSend(v15, "performWithoutAnimation:", v18, swift_release(v19).n128_f64[0]);
    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 139, 222, 44, 1, v22);
    swift_release(v17);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      a1[3] = (char *)v24;
      swift_release(v16);
      *a1 = v20;
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100317810(char *a1, char *a2)
{
  double v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  objc_msgSend(a2, "bounds");
  objc_msgSend(a1, "setFrame:");
  objc_msgSend(a1, "layoutIfNeeded");
  sub_100316C24(a2[OBJC_IVAR___MusicSBS_TextContentView_isSelected], 0);
  v4 = *(double *)&a2[OBJC_IVAR___MusicSBS_TextContentView_progress];
  if (v4 != *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress])
  {
    *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress] = v4;
    v5 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_textView];
    if (v5)
    {
      v6 = v5;
      sub_10030D07C(0, v4);

      v7 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
      if (v7)
      {
        v8 = v7;
        sub_10030D07C(0, v4);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10031797C(char a1, double a2, double a3)
{
  uint64_t v3;
  id result;

  result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    result = objc_msgSend(result, "sizeThatFits:");
    if ((a1 & 1) != 0)
    {
      result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result)
        return objc_msgSend(result, "sizeThatFits:", a2, a3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100317A20(double a1, double a2)
{
  uint64_t v2;
  id result;
  int v6;

  result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected);
    result = objc_msgSend(result, "sizeThatFits:");
    if (v6 == 1)
    {
      result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result)
        return objc_msgSend(result, "sizeThatFits:", a1, a2);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100317B20()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  void *v19;
  id v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  double v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  id v48;
  double v49;
  void *v50;
  double v51;
  void *v52;
  id v53;
  void *v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  void *v59;
  id v60;
  double Width;
  void *v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  double v67;
  void *v68;
  double v69;
  double v70;
  objc_super v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v1 = v0;
  v71.receiver = v0;
  v71.super_class = (Class)_s19SBS_TextContentViewCMa();
  objc_msgSendSuper2(&v71, "layoutSubviews");
  v2 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  v3 = *(void **)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_34;
  }
  v4 = v3;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "sizeThatFits:", v5, v6);
  objc_msgSend(v4, "frame");
  objc_msgSend(v4, "setFrame:");

  v7 = *(void **)&v1[v2];
  if (!v7)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v7, "layoutSubviews");
  v8 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  v9 = *(void **)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v10, "sizeThatFits:", v11, v12);
    v14 = v13;
    v16 = v15;
    v17 = UIView.untransformedFrame.getter();
    UIView.untransformedFrame.setter(v17, v18, v14, v16);

    v19 = *(void **)&v1[v8];
    if (v19)
    {
      v20 = v19;
      UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(0.0, v21, v22, v23);

      v24 = *(void **)&v1[v8];
      if (v24)
      {
        v25 = *(void **)&v1[v2];
        if (v25)
        {
          v26 = v24;
          v27 = v25;
          UIView.untransformedFrame.getter();
          v29 = v28;

          v30 = *(void **)&v1[v2];
          if (v30)
          {
            v31 = v30;
            UIView.untransformedFrame.getter();
            v33 = v32;

            v34 = v29 + v33 + *(double *)&v1[OBJC_IVAR___MusicSBS_TextContentView_specs + 88];
            v35 = UIView.untransformedFrame.getter();
            UIView.untransformedFrame.setter(v35, v34, v36, v37);

            v38 = *(void **)&v1[v8];
            goto LABEL_10;
          }
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  v38 = 0;
LABEL_10:
  objc_msgSend(v38, "layoutSubviews");
  v39 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
  if (!v39)
  {
    v52 = *(void **)&v1[v2];
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v53, "frame");
      objc_msgSend(v53, "setFrame:", 0.0);

      v54 = *(void **)&v1[v8];
      if (!v54)
        return;
      v48 = v54;
      UIView.untransformedFrame.getter();
      v58 = 0.0;
      goto LABEL_31;
    }
    goto LABEL_39;
  }
  if (v39 == 1)
  {
    v59 = *(void **)&v1[v2];
    if (v59)
    {
      v60 = v59;
      objc_msgSend(v1, "bounds");
      Width = CGRectGetWidth(v74);
      v62 = *(void **)&v1[v2];
      if (v62)
      {
        v63 = Width;
        objc_msgSend(v62, "bounds");
        v65 = (v63 - v64) * 0.5;
        objc_msgSend(v60, "frame");
        objc_msgSend(v60, "setFrame:", v65);

        v66 = *(void **)&v1[v8];
        if (!v66)
          return;
        v48 = v66;
        objc_msgSend(v1, "bounds");
        v67 = CGRectGetWidth(v75);
        v68 = *(void **)&v1[v8];
        if (v68)
          objc_msgSend(v68, "bounds");
        else
          v69 = 0.0;
        v70 = (v67 - v69) * 0.5;
        goto LABEL_30;
      }
LABEL_41:
      __break(1u);
      return;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v39 != 2)
    return;
  v40 = *(void **)&v1[v2];
  if (!v40)
    goto LABEL_37;
  v41 = v40;
  objc_msgSend(v1, "bounds");
  v42 = CGRectGetWidth(v72);
  v43 = *(void **)&v1[v2];
  if (!v43)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v44 = v42;
  objc_msgSend(v43, "bounds");
  v46 = v44 - v45;
  objc_msgSend(v41, "frame");
  objc_msgSend(v41, "setFrame:", v46);

  v47 = *(void **)&v1[v8];
  if (!v47)
    return;
  v48 = v47;
  objc_msgSend(v1, "bounds");
  v49 = CGRectGetWidth(v73);
  v50 = *(void **)&v1[v8];
  if (v50)
    objc_msgSend(v50, "bounds");
  else
    v51 = 0.0;
  v70 = v49 - v51;
LABEL_30:
  UIView.untransformedFrame.getter();
  v58 = v70;
LABEL_31:
  UIView.untransformedFrame.setter(v58, v55, v56, v57);

}

id sub_100317F44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s19SBS_TextContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s19SBS_TextContentViewCMa()
{
  return objc_opt_self(MusicSBS_TextContentView);
}

uint64_t sub_10031802C(const void *a1)
{
  _QWORD *v1;
  void *v3;
  _BYTE v5[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicSBS_TextContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10030ED5C((uint64_t)a1);
  sub_10030EE2C((uint64_t)v5);
  sub_100316A40();
  return sub_10030EE2C((uint64_t)a1);
}

uint64_t sub_1003180A4(uint64_t a1)
{
  return sub_100316BC4(a1);
}

void sub_1003180C4(char a1, char a2)
{
  sub_100316C24(a1, a2);
}

id sub_1003180E4(char a1, double a2, double a3)
{
  return sub_10031797C(a1, a2, a3);
}

double sub_100318104(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _BYTE v4[24];

  switch(a1)
  {
    case 1:
    case 3:
      v1 = CGPoint.center.unsafeMutableAddressor();
      break;
    case 2:
      v1 = CGPoint.centerRight.unsafeMutableAddressor();
      break;
    default:
      v1 = CGPoint.centerLeft.unsafeMutableAddressor();
      break;
  }
  v2 = v1;
  swift_beginAccess(v1, v4, 0, 0);
  return *(double *)v2;
}

uint64_t sub_100318170()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100318194()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1003181B8()
{
  uint64_t v0;

  sub_100316E80(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1003181C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1003181D4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1003181DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100318208()
{
  uint64_t v0;

  sub_100317810(*(char **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100318210()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100318220()
{
  _BYTE *v0;
  _QWORD *v1;

  v0[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  v1 = &v0[OBJC_IVAR___MusicSBS_TextContentView_text];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010044BC20, "MusicCoreUI/SBS_SyncedLyricsLineView+Text.swift", 47, 2, 208, 0);
  __break(1u);
}

void sub_1003182F0()
{
  qword_100562A60 = Int.seconds.getter(6);
}

void sub_100318310()
{
  qword_100562A68 = Int.seconds.getter(8);
}

CFIndex sub_100318330(uint64_t a1, uint64_t a2)
{
  CFIndex result;
  uint64_t v3;

  result = CFRange.init(_:)(*(__C::_NSRange *)&a1).location;
  qword_100562A70 = v3;
  return result;
}

CGFloat sub_100318354(uint64_t a1)
{
  return sub_1003183CC(0.9, a1, &xmmword_100562A80, algn_100562A90, &xmmword_100562AA0);
}

CGFloat sub_100318370(uint64_t a1)
{
  return sub_1003183CC(1.2, a1, &xmmword_100562AB0, &xmmword_100562AC0, &xmmword_100562AD0);
}

CGFloat sub_100318390(uint64_t a1)
{
  return sub_1003183CC(1.2, a1, &xmmword_100562AE0, algn_100562AF0, &xmmword_100562B00);
}

CGFloat sub_1003183B0(uint64_t a1)
{
  return sub_1003183CC(0.2, a1, &xmmword_100562B10, &xmmword_100562B20, &xmmword_100562B30);
}

CGFloat sub_1003183CC(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGFloat result;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;

  CGAffineTransformMakeScale(&v11, a1, a1);
  result = v11.a;
  v9 = *(_OWORD *)&v11.c;
  v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

id sub_100318420(uint64_t a1, char a2, void *__src, double a4, double a5)
{
  _BYTE *v5;
  _OWORD *v6;
  char *v7;
  double *v8;
  objc_super v10;

  v5[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  v6 = &v5[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *v6 = 0u;
  v6[1] = 0u;
  v5[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  v7 = &v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;
  v8 = (double *)&v5[OBJC_IVAR___MusicInstrumentalContentView_line];
  *(_QWORD *)v8 = a1;
  v8[1] = a4;
  v8[2] = a5;
  *((_BYTE *)v8 + 24) = a2 & 1;
  memcpy(&v5[OBJC_IVAR___MusicInstrumentalContentView_specs], __src, 0x219uLL);
  v10.receiver = v5;
  v10.super_class = (Class)_s23InstrumentalContentViewCMa();
  return objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_100318620()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v13[6];
  _BYTE v14[24];

  v1 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  v2 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 16) + -1.8;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration) = (v2 - v1) / floor((v2 - v1) * 0.25) * 0.5;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration) = (v2 - (v1 + 1.0))
                                                                               / (double)*(uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  *(_QWORD *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) = 0;
  v3 = v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) = 0;
  v4 = (uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots, v14, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v5);
  }
  if (v5 < 0)
    v12 = v5;
  else
    v12 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease(v5);
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v9, "layer");
      objc_msgSend(v11, "removeAllAnimations");

      objc_msgSend(v10, "setAlpha:", 0.0);
      v13[1] = 0;
      v13[2] = 0;
      v13[0] = 0x3FF0000000000000;
      v13[3] = 0x3FF0000000000000;
      v13[4] = 0;
      v13[5] = 0;
      objc_msgSend(v10, "setTransform:", v13);

    }
    while (v6 != v8);
    return swift_bridgeObjectRelease(v5);
  }
  __break(1u);
  return result;
}

void sub_100318838(char a1, char a2)
{
  _BYTE *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD v8[5];
  uint64_t v9;

  v2[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = a1;
  if ((a1 & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      v3 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
      v4 = swift_allocObject(&unk_10051D198, 24, 7);
      *(_QWORD *)(v4 + 16) = v2;
      v8[4] = sub_10031A5B8;
      v9 = v4;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      v8[2] = sub_10015F6F8;
      v8[3] = &unk_10051D1B0;
      v5 = _Block_copy(v8);
      v6 = v9;
      v7 = v2;
      objc_msgSend(v3, "addAnimations:", v5, swift_release(v6).n128_f64[0]);
      _Block_release(v5);
      objc_msgSend(v3, "startAnimation");

    }
    else
    {
      sub_100318620();
    }
  }
}

void sub_100318968(double a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  char *v23;
  void *v24;
  double v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void **aBlock;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  _QWORD *v40;
  char v41[24];

  v2 = &v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  if (v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8] == 1)
  {
    v3 = v1;
    v5 = (uint64_t *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dots];
    swift_beginAccess(&v1[OBJC_IVAR___MusicInstrumentalContentView_dots], v41, 0, 0);
    v6 = *v5;
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v33 = v6;
      else
        v33 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease();
      if (v34)
      {
LABEL_5:
        v7 = 0;
        *(_QWORD *)v2 = 0;
        v2[8] = 0;
        v8 = *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_line + 8] + 1.0;
        if (v8 <= a1)
        {
          v9 = (a1 - v8) / *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration];
          if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          if (v9 <= -9.22337204e18)
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
          if (v9 >= 9.22337204e18)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          if (__OFADD__((uint64_t)v9, 1))
          {
LABEL_30:
            __break(1u);
            return;
          }
          if ((uint64_t)v9 + 1 >= 3)
            v7 = 3;
          else
            v7 = (uint64_t)v9 + 1;
        }
        v10 = *(_QWORD *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
        if (v10 < 0)
        {
          __break(1u);
        }
        else
        {
          if (v10)
          {
            for (i = 0; i != v10; ++i)
            {
              v12 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 3, 0, 0.8);
              v13 = (_QWORD *)swift_allocObject(&unk_10051D0A8, 40, 7);
              v13[2] = v7;
              v13[3] = i;
              v13[4] = v3;
              v39 = sub_10031A564;
              v40 = v13;
              aBlock = _NSConcreteStackBlock;
              v36 = 1107296256;
              v37 = sub_10015F6F8;
              v38 = &unk_10051D0C0;
              v14 = _Block_copy(&aBlock);
              v15 = v40;
              v16 = v3;
              v17 = v3;
              v18 = v7;
              v19 = v16;
              objc_msgSend(v12, "addAnimations:", v14, swift_release(v15).n128_f64[0]);
              _Block_release(v14);
              v20 = swift_allocObject(&unk_10051D0F8, 32, 7);
              *(_QWORD *)(v20 + 16) = v19;
              *(_QWORD *)(v20 + 24) = i;
              v39 = sub_10031A570;
              v40 = (_QWORD *)v20;
              aBlock = _NSConcreteStackBlock;
              v36 = 1107296256;
              v37 = sub_1002A4D68;
              v38 = &unk_10051D110;
              v21 = _Block_copy(&aBlock);
              v22 = v40;
              v23 = v19;
              v7 = v18;
              v3 = v17;
              objc_msgSend(v12, "addCompletion:", v21, swift_release(v22).n128_f64[0]);
              _Block_release(v21);
              objc_msgSend(v12, "startAnimationAfterDelay:", (double)i * 0.06);

            }
          }
          v24 = (void *)objc_opt_self(UIView);
          v25 = *(double *)&v3[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] + -0.4;
          v26 = swift_allocObject(&unk_10051D148, 24, 7);
          *(_QWORD *)(v26 + 16) = v3;
          v39 = sub_10031A5B0;
          v40 = (_QWORD *)v26;
          aBlock = _NSConcreteStackBlock;
          v36 = 1107296256;
          v37 = sub_10015F6F8;
          v38 = &unk_10051D160;
          v27 = _Block_copy(&aBlock);
          v28 = v40;
          v29 = v3;
          swift_release(v28);
          objc_msgSend(v24, "animateWithDuration:delay:options:animations:completion:", 0x20000, v27, 0, v25, 0.2);
          _Block_release(v27);
          v30 = *(_QWORD *)&v29[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted];
          v31 = __OFADD__(v30, 1);
          v32 = v30 + 1;
          if (!v31)
          {
            *(_QWORD *)&v29[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = v32;
            return;
          }
        }
        __break(1u);
        goto LABEL_27;
      }
    }
    else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_5;
    }
    sub_10031A08C();
    goto LABEL_5;
  }
}

void sub_100318D60(int64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a2;
  v4 = (uint64_t *)(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  if (a2 >= a1)
  {
    swift_beginAccess(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots, v6, 0, 0);
    v5 = *v4;
    if ((v5 & 0xC000000000000001) == 0)
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > v3)
      {
        v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v5);
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_100557E68 == -1)
    {
LABEL_12:
      objc_msgSend((id)v3, "setAlpha:", *(double *)&qword_100562A70);
      goto LABEL_13;
    }
LABEL_20:
    swift_once(&qword_100557E68, sub_100318330);
    goto LABEL_12;
  }
  swift_beginAccess(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots, v6, 0, 0);
  v5 = *v4;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v5);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) <= v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
LABEL_6:
  objc_msgSend((id)v3, "setAlpha:", 1.0);
LABEL_13:

}

uint64_t sub_100318ECC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _OWORD v9[3];
  _BYTE v10[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v10, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      if (qword_100557E78 != -1)
        swift_once(&qword_100557E78, sub_100318370);
      ++v5;
      v9[0] = xmmword_100562AB0;
      v9[1] = xmmword_100562AC0;
      v9[2] = xmmword_100562AD0;
      objc_msgSend(v7, "setTransform:", v9);

    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100319020(double a1)
{
  uint64_t v1;
  char **v2;
  uint64_t v3;
  unint64_t v4;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  BOOL v19;
  unint64_t *v20;
  id v21;
  double v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char **v32;
  uint64_t v33;
  BOOL v34;
  char *v35;
  double v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char **v41;
  char v42[24];
  _BYTE v43[24];
  uint64_t aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  void *v48;
  _QWORD *v49;

  v6 = (double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line);
  v7 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  v8 = OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration;
  v9 = (a1 - (v7 + 1.0)) / *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (__OFADD__((uint64_t)v9, 1))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  if ((uint64_t)v9 + 1 >= v10)
    v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  else
    v11 = (uint64_t)v9 + 1;
  v12 = OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted;
  v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted);
  if (v11 < v13)
  {
    sub_100318620();
    v14 = (uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots, v43, 0, 0);
    v1 = *v14;
    v41 = v2;
    if (!((unint64_t)v1 >> 62))
    {
      v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3)
      {
LABEL_11:
        if (v3 >= 1)
        {
          v15 = 0;
          do
          {
            if ((v1 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v1);
            else
              v16 = *(id *)(v1 + 8 * v15 + 32);
            v17 = v16;
            v18 = objc_msgSend(v16, "layer");
            objc_msgSend(v18, "removeAllAnimations");

            if (qword_100557E68 != -1)
              swift_once(&qword_100557E68, sub_100318330);
            ++v15;
            objc_msgSend(v17, "setAlpha:", *(double *)&qword_100562A70);
            v45 = 0;
            v46 = 0;
            aBlock = 0x3FF0000000000000;
            v47 = 0x3FF0000000000000;
            v48 = 0;
            v49 = 0;
            objc_msgSend(v17, "setTransform:", &aBlock);

          }
          while (v3 != v15);
          goto LABEL_68;
        }
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        do
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          swift_bridgeObjectRetain();
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v4);
          swift_bridgeObjectRelease();
LABEL_36:
          v22 = *(double *)((char *)v2 + v8) + -0.1;
          v23 = swift_allocObject(&unk_10051D058, 24, 7);
          *(_QWORD *)(v23 + 16) = v21;
          v24 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          v48 = sub_10031A52C;
          v49 = (_QWORD *)v23;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v45 = 1107296256;
          v46 = sub_10015F6F8;
          v47 = (uint64_t)&unk_10051D070;
          v3 = (uint64_t)_Block_copy(&aBlock);
          v25 = v49;
          v26 = v21;
          v2 = v41;
          swift_release(v25);
          v4 = (unint64_t)objc_msgSend(v24, "initWithDuration:curve:animations:", 3, v3, v22);
          _Block_release((const void *)v3);
          objc_msgSend((id)v4, "startAnimation");

          v7 = v6[1];
LABEL_37:
          v27 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration);
          v28 = (a1 - v7) / v27;
          if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
            goto LABEL_73;
          if (v28 <= -9.22337204e18)
            goto LABEL_74;
          if (v28 >= 9.22337204e18)
            goto LABEL_75;
          v3 = (uint64_t)v28 + 1;
          if (__OFADD__((uint64_t)v28, 1))
            goto LABEL_76;
          v29 = OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted;
          if (*(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) >= v3)
            goto LABEL_44;
          v30 = (void *)objc_opt_self(UIView);
          v31 = swift_allocObject(&unk_10051D008, 32, 7);
          *(_QWORD *)(v31 + 16) = v2;
          *(_QWORD *)(v31 + 24) = v3;
          v48 = sub_10031A524;
          v49 = (_QWORD *)v31;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v45 = 1107296256;
          v46 = sub_10015F6F8;
          v47 = (uint64_t)&unk_10051D020;
          v3 = (uint64_t)_Block_copy(&aBlock);
          v4 = (unint64_t)v49;
          v32 = v2;
          swift_release(v4);
          objc_msgSend(v30, "animateWithDuration:delay:options:animations:completion:", 0x20000, v3, 0, v27 + -0.4, 0.2);
          _Block_release((const void *)v3);
          v33 = *(uint64_t *)((char *)v2 + v29);
          v34 = __OFADD__(v33, 1);
          v35 = (char *)(v33 + 1);
        }
        while (v34);
        *(char **)((char *)v2 + v29) = v35;
        goto LABEL_44;
      }
LABEL_68:
      swift_bridgeObjectRelease();
      sub_100318968(a1);
      return;
    }
LABEL_64:
    if (v1 < 0)
      v40 = v1;
    else
      v40 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (v3)
      goto LABEL_11;
    goto LABEL_68;
  }
  if ((*((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8) & 1) != 0
    || (v7 + 1.0 < a1
      ? (v19 = *(char **)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn) == (char *)v10)
      : (v19 = 0),
        !v19 || v6[2] + -1.8 <= a1))
  {
LABEL_44:
    v36 = v6[2];
    v37 = v36 > a1 && v36 + -1.8 < a1;
    if (v37 && (*((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) & 1) == 0)
      sub_100319824();
    return;
  }
  if (v11 == v13 || *((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) != 1)
    goto LABEL_37;
  v3 = v11 - 1;
  if (__OFSUB__(v11, 1))
    goto LABEL_78;
  v41 = v2;
  if (v3 < v13)
    goto LABEL_79;
  if (v13 == v3)
  {
LABEL_32:
    v2 = v41;
    *(char **)((char *)v41 + v12) = (char *)v11;
    v20 = (unint64_t *)((char *)v41 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess((char *)v41 + OBJC_IVAR___MusicInstrumentalContentView_dots, v42, 0, 0);
    v4 = *v20;
    if ((*v20 & 0xC000000000000001) != 0)
      goto LABEL_80;
    if (v3 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v3 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v21 = *(id *)(v4 + 8 * v3 + 32);
      goto LABEL_36;
    }
    __break(1u);
  }
  else if (v13 < v3)
  {
    v4 = (unint64_t)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots;
    swift_beginAccess((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots, v43, 0, 0);
    v2 = &selRef_superview;
    while (1)
    {
      v38 = *(_QWORD *)v4;
      if ((*(_QWORD *)v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v38);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v13 < 0)
          goto LABEL_71;
        if ((unint64_t)v13 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_72;
        v39 = *(id *)(v38 + 8 * v13 + 32);
      }
      ++v13;
      objc_msgSend(v39, "setAlpha:", 1.0);

      if (v3 == v13)
        goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_100319684(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  __int128 v8;
  id v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v15, 0, 0);
  v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (v4 < 0)
    v11 = v4;
  else
    v11 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v11);
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v9 = *(id *)(v4 + 8 * i + 32);
      v10 = v9;
      if ((a2 & 0x8000000000000001) == 1)
      {
        if (qword_100557E78 != -1)
          swift_once(&qword_100557E78, sub_100318370);
        v12 = xmmword_100562AB0;
        v13 = xmmword_100562AC0;
        v8 = xmmword_100562AD0;
      }
      else
      {
        if (qword_100557E70 != -1)
          swift_once(&qword_100557E70, sub_100318354);
        v12 = xmmword_100562A80;
        v13 = *(_OWORD *)algn_100562A90;
        v8 = xmmword_100562AA0;
      }
      v14 = v8;
      objc_msgSend(v10, "setTransform:", &v12);

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100319824()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  void **v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;

  if ((v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] & 1) == 0)
  {
    v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 1;
    v1 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 1.0, 0.25, 0.1, 0.25, 1.0);
    v2 = swift_allocObject(&unk_10051CF18, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v20 = sub_10031A4D0;
    v21 = v2;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10015F6F8;
    v19 = &unk_10051CF30;
    v3 = _Block_copy(&v16);
    v4 = v21;
    v5 = v0;
    objc_msgSend(v1, "addAnimations:", v3, swift_release(v4).n128_f64[0]);
    _Block_release(v3);
    objc_msgSend(v1, "startAnimation");
    v6 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 1, 0, 0.3);
    v7 = swift_allocObject(&unk_10051CF68, 24, 7);
    *(_QWORD *)(v7 + 16) = v5;
    v20 = sub_10031A4F0;
    v21 = v7;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10015F6F8;
    v19 = &unk_10051CF80;
    v8 = _Block_copy(&v16);
    v9 = v21;
    v10 = v5;
    objc_msgSend(v6, "addAnimations:", v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);
    objc_msgSend(v6, "startAnimationAfterDelay:", 1.0);
    v11 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 1, 0, 0.5);
    v12 = swift_allocObject(&unk_10051CFB8, 24, 7);
    *(_QWORD *)(v12 + 16) = v10;
    v20 = sub_10031A4F8;
    v21 = v12;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10015F6F8;
    v19 = &unk_10051CFD0;
    v13 = _Block_copy(&v16);
    v14 = v21;
    v15 = v10;
    objc_msgSend(v11, "addAnimations:", v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);
    objc_msgSend(v11, "startAnimationAfterDelay:", 1.0);

  }
}

uint64_t sub_100319AB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _OWORD v9[3];
  _BYTE v10[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v10, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      if (qword_100557E80 != -1)
        swift_once(&qword_100557E80, sub_100318390);
      ++v5;
      v9[0] = xmmword_100562AE0;
      v9[1] = *(_OWORD *)algn_100562AF0;
      v9[2] = xmmword_100562B00;
      objc_msgSend(v7, "setTransform:", v9);

    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100319C0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setAlpha:", 0.0);

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_100319D04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _OWORD v9[3];
  _BYTE v10[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v10, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      if (qword_100557E88 != -1)
        swift_once(&qword_100557E88, sub_1003183B0);
      ++v5;
      v9[0] = xmmword_100562B10;
      v9[1] = xmmword_100562B20;
      v9[2] = xmmword_100562B30;
      objc_msgSend(v7, "setTransform:", v9);

    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100319E58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  double v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_specs];
  v2 = *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (v2 < 0)
  {
LABEL_16:
    __break(1u);
  }
  else if (v2)
  {
    v3 = v0;
    v4 = 0;
    v5 = &v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
    do
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v7 = v6;
      v8 = 1.3;
      if (!v4)
        goto LABEL_7;
      v9 = *((_QWORD *)v1 + 61);
      v10 = __OFSUB__(v9, 1);
      v11 = v9 - 1;
      if (v10)
      {
        __break(1u);
        goto LABEL_16;
      }
      v8 = -1.3;
      if (v4 == v11)
      {
LABEL_7:
        v12 = objc_msgSend(v6, "layer");
        objc_msgSend(v12, "anchorPoint");
        objc_msgSend(v12, "setAnchorPoint:", v13 + v8);

      }
      objc_msgSend(v7, "setBackgroundColor:", *((_QWORD *)v1 + 29));
      objc_msgSend(v7, "setAlpha:", 0.0);
      objc_msgSend(v7, "setAutoresizingMask:", 40);
      v14 = objc_msgSend(v7, "layer");
      if (qword_100557E58 != -1)
        swift_once(&qword_100557E58, sub_1003182F0);
      objc_msgSend(v14, "setCornerRadius:", *(double *)&qword_100562A60);

      swift_beginAccess(v5, v19, 33, 0);
      v15 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      ++v4;
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);
      swift_endAccess(v19);
      objc_msgSend(v3, "addSubview:", v15);

    }
    while (v2 != v4);
  }
}

uint64_t sub_10031A08C()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23[24];
  CGRect v24;
  CGRect v25;

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
  swift_beginAccess(&v0[OBJC_IVAR___MusicInstrumentalContentView_dots], v23, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v3 < 0)
    v20 = *v2;
  else
    v20 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease();
  if (!v21)
LABEL_3:
    sub_100319E58();
LABEL_4:
  v4 = (double)*(uint64_t *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (qword_100557E58 != -1)
    swift_once(&qword_100557E58, sub_1003182F0);
  v5 = *(double *)&qword_100562A60 + *(double *)&qword_100562A60;
  v6 = (*(double *)&qword_100562A60 + *(double *)&qword_100562A60) * v4;
  v7 = v4 + -1.0;
  if (qword_100557E60 != -1)
    swift_once(&qword_100557E60, sub_100318310);
  v8 = v6 + v7 * *(double *)&qword_100562A68;
  v9 = Int.seconds.getter(0);
  v10 = *(_QWORD *)&v1[OBJC_IVAR___MusicInstrumentalContentView_alignment];
  if (v10 == 1)
  {
    objc_msgSend(v1, "bounds", v9);
    v11 = (CGRectGetWidth(v25) - v8) * 0.5;
  }
  else
  {
    v11 = v9;
    if (v10 == 2)
    {
      objc_msgSend(v1, "bounds");
      v11 = CGRectGetWidth(v24) - v8;
    }
  }
  v12 = *v2;
  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_14;
    return swift_bridgeObjectRelease();
  }
  if (v12 < 0)
    v22 = v12;
  else
    v22 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v22);
  v13 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_14:
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
      else
        v16 = *(id *)(v12 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      objc_msgSend(v1, "bounds");
      UIView.untransformedFrame.setter(v11, v18 * 0.5 - v5 * 0.5, v5, v5);
      v19 = *(double *)&qword_100562A68;

      v11 = v11 + v5 + v19;
    }
    while (v13 != v15);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_10031A340()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s23InstrumentalContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s23InstrumentalContentViewCMa()
{
  return objc_opt_self(MusicInstrumentalContentView);
}

uint64_t sub_10031A3E4(const void *a1)
{
  _QWORD *v1;
  void *v3;
  _BYTE v5[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  return sub_10030EE2C((uint64_t)v5);
}

uint64_t sub_10031A448(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_isScrolling) = result;
  return result;
}

uint64_t sub_10031A45C()
{
  return sub_100318620();
}

void sub_10031A47C(char a1, char a2)
{
  sub_100318838(a1, a2);
}

id sub_10031A49C()
{
  id *v0;

  return objc_msgSend(*v0, "sizeThatFits:");
}

uint64_t sub_10031A4AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031A4D0()
{
  uint64_t v0;

  return sub_100319AB8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031A4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10031A4E8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10031A4F0()
{
  uint64_t v0;

  return sub_100319C0C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031A4F8()
{
  uint64_t v0;

  return sub_100319D04(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031A500()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10031A524()
{
  uint64_t v0;

  return sub_100319684(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10031A52C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_10031A540()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10031A564()
{
  int64_t *v0;

  sub_100318D60(v0[2], v0[3], v0[4]);
}

void sub_10031A570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 24);
    if (*(_QWORD *)v1 <= v2)
    {
      v3 = __OFADD__(v2, 1);
      v4 = v2 + 1;
      if (v3)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)v1 = v4;
        *(_BYTE *)(v1 + 8) = 0;
      }
    }
  }
}

uint64_t sub_10031A5B0()
{
  uint64_t v0;

  return sub_100318ECC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031A5B8()
{
  return sub_100318620();
}

void sub_10031A5D8()
{
  _BYTE *v0;
  _OWORD *v1;
  char *v2;

  v0[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  v2 = &v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010044BC20, "MusicCoreUI/SyncedLyricsLineView+Instrumental.swift", 51, 2, 75, 0);
  __break(1u);
}

void sub_10031A72C(char a1, char a2)
{
  _BYTE *v2;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char **v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void **v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;

  v2[OBJC_IVAR___MusicTextContentView_isSelected] = a1;
  if ((a1 & 1) != 0)
  {
    v5 = Int.seconds.getter(1);
    v6 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v7 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v7)
      goto LABEL_20;
    v8 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v8, "setLineBreakStrategy:", 3);
    objc_msgSend(v8, "setNumberOfLines:", 0);
    objc_msgSend(v8, "setTextAlignment:", 4);
    objc_msgSend(v8, "setAutoresizingMask:", 18);
    objc_msgSend(v8, "setTextAlignment:", *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_alignment]);
    v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_content];
    if ((v2[OBJC_IVAR___MusicTextContentView_content + 16] & 1) != 0)
    {
      v10 = &selRef_setAttributedText_;
    }
    else
    {
      v11 = *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_content + 8];
      swift_bridgeObjectRetain();
      v12 = String._bridgeToObjectiveC()();
      sub_10031B4A4(v9, v11, 0);
      objc_msgSend(v8, "setText:", v12);

      v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_specs + 168];
      v10 = &selRef_setFont_;
    }
    objc_msgSend(v8, *v10, v9);
    objc_msgSend(v8, "setTextColor:", *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_specs + 232]);
    objc_msgSend(v2, "addSubview:", v8);
    v13 = *(void **)&v2[v6];
    *(_QWORD *)&v2[v6] = v8;

    v7 = *(void **)&v2[v6];
    if (v7)
    {
LABEL_20:
      v14 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_label];
      v15 = v7;
      objc_msgSend(v14, "frame");
      objc_msgSend(v15, "setFrame:");

      v16 = *(void **)&v2[v6];
      if (v16)
        objc_msgSend(v16, "setAlpha:", 0.0);
    }
  }
  else
  {
    v5 = Int.seconds.getter(0);
  }
  if ((a2 & 1) != 0)
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
    v18 = swift_allocObject(&unk_10051D2F0, 32, 7);
    *(_QWORD *)(v18 + 16) = v2;
    *(double *)(v18 + 24) = v5;
    v33 = sub_10031B6E0;
    v34 = v18;
    v29 = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_10015F6F8;
    v32 = &unk_10051D308;
    v19 = _Block_copy(&v29);
    v20 = v34;
    v21 = v2;
    objc_msgSend(v17, "addAnimations:", v19, swift_release(v20).n128_f64[0]);
    _Block_release(v19);
    v22 = swift_allocObject(&unk_10051D340, 24, 7);
    *(_QWORD *)(v22 + 16) = v21;
    v33 = sub_10031B798;
    v34 = v22;
    v29 = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_1002A4D68;
    v32 = &unk_10051D358;
    v23 = _Block_copy(&v29);
    v24 = v34;
    v25 = v21;
    objc_msgSend(v17, "addCompletion:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);
    objc_msgSend(v17, "startAnimation");

  }
  else
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR___MusicTextContentView_label], "setAlpha:", 1.0 - v5);
    v26 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v27 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v27)
      objc_msgSend(v27, "setAlpha:", v5);
    if ((a1 & 1) == 0)
    {
      v28 = *(void **)&v2[v26];
      if (v28)
      {
        objc_msgSend(v28, "removeFromSuperview");
        v28 = *(void **)&v2[v26];
      }
      *(_QWORD *)&v2[v26] = 0;

    }
  }
}

void sub_10031AB44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  if ((*(_BYTE *)(a2 + OBJC_IVAR___MusicTextContentView_isSelected) & 1) == 0)
  {
    v3 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v4 = *(void **)(a2 + OBJC_IVAR___MusicTextContentView_selectedLabel);
    if (v4)
    {
      objc_msgSend(v4, "removeFromSuperview");
      v4 = *(void **)(a2 + v3);
    }
    *(_QWORD *)(a2 + v3) = 0;

  }
}

char *sub_10031ABA0(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  char v14;
  id v15;
  Swift::Int v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  objc_super v23;

  v4[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v4[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  v9 = OBJC_IVAR___MusicTextContentView_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  objc_msgSend(v12, "setLineBreakStrategy:", 3);
  objc_msgSend(v12, "setNumberOfLines:", 0);
  objc_msgSend(v12, "setTextAlignment:", 4);
  objc_msgSend(v12, "setAutoresizingMask:", 18);
  *(_QWORD *)&v4[v9] = v12;
  *(_QWORD *)&v11[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;
  v13 = &v11[OBJC_IVAR___MusicTextContentView_content];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v14 = a3 & 1;
  v13[16] = a3 & 1;
  memcpy(&v11[OBJC_IVAR___MusicTextContentView_specs], (const void *)a4, 0x219uLL);
  sub_10030ED5C(a4);
  sub_10031B484(a1, a2, a3 & 1);

  v23.receiver = v11;
  v23.super_class = (Class)_s15TextContentViewCMa();
  v15 = objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = sub_1002EBC24((uint64_t)&off_100518AC0);
  v17 = (char *)v15;
  sub_10031AFD0(v16);
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    if (*(_BYTE *)(a4 + 56))
      v18 = 4;
    else
      v18 = *(_QWORD *)(a4 + 48);
    objc_msgSend(*(id *)&v17[OBJC_IVAR___MusicTextContentView_label], "setTextAlignment:", v18);
  }
  v19 = *(void **)&v17[OBJC_IVAR___MusicTextContentView_label];
  v20 = v17;
  v21 = v19;
  objc_msgSend(v20, "addSubview:", v21);
  sub_10030EE2C(a4);
  sub_10031B4A4(a1, a2, v14);

  return v20;
}

uint64_t sub_10031AE04@<X0>(char **a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  Swift::Int v13;
  char *v14;
  uint64_t result;
  _BYTE v16[544];

  v2 = v1;
  v4 = &v1[OBJC_IVAR___MusicTextContentView_content];
  v5 = *(void **)&v1[OBJC_IVAR___MusicTextContentView_content];
  v6 = *((_QWORD *)v4 + 1);
  v7 = &v2[OBJC_IVAR___MusicTextContentView_specs];
  if ((v4[16] & 1) != 0)
  {
    memcpy(v16, v7, 0x219uLL);
    v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_10031B484(v5, v6, 1);
    sub_10030ED5C((uint64_t)v16);
    v9 = v5;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    memcpy(v16, v7, 0x219uLL);
    v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_10031B484(v5, v6, 0);
    sub_10030ED5C((uint64_t)v16);
    v9 = v5;
    v10 = v6;
    v11 = 0;
  }
  v12 = sub_10031ABA0(v9, v10, v11, (uint64_t)v16);
  sub_10031A72C(v2[OBJC_IVAR___MusicTextContentView_isSelected], 0);
  *(_QWORD *)&v12[OBJC_IVAR___MusicTextContentView_alignment] = *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_alignment];
  v13 = sub_1002EBC24((uint64_t)&off_100518AE8);
  sub_10031AFD0(v13);
  swift_bridgeObjectRelease();
  v14 = v12;
  objc_msgSend(v2, "bounds");
  objc_msgSend(v14, "setFrame:");

  result = _s15TextContentViewCMa();
  a1[3] = (char *)v8;
  *a1 = v14;
  return result;
}

double sub_10031AFD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD *v10;
  int64_t v11;

  v10 = (_QWORD *)(a1 + 56);
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v3)
  {
    v5 = __clz(__rbit64(v3));
    goto LABEL_18;
  }
  if (v11 > 1)
  {
    v6 = v10[1];
    v7 = 1;
    if (v6)
      goto LABEL_17;
    v7 = 2;
    if (v11 <= 2)
      goto LABEL_19;
    v6 = v10[2];
    if (v6)
      goto LABEL_17;
    v7 = 3;
    if (v11 <= 3)
      goto LABEL_19;
    v6 = v10[3];
    if (v6)
    {
LABEL_17:
      v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v8 = 4;
    if (v11 > 4)
    {
      v6 = v10[4];
      if (v6)
      {
        v7 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v7 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          JUMPOUT(0x10031B378);
        }
        if (v7 >= v11)
          break;
        v6 = v10[v7];
        ++v8;
        if (v6)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

id sub_10031B3B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s15TextContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s15TextContentViewCMa()
{
  return objc_opt_self(MusicTextContentView);
}

id sub_10031B484(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void _s15TextContentViewC7ContentOwxx(uint64_t a1)
{
  sub_10031B4A4(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_10031B4A4(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease(a2);
}

uint64_t _s15TextContentViewC7ContentOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10031B484(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s15TextContentViewC7ContentOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10031B484(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_10031B4A4(v6, v7, v8);
  return a1;
}

uint64_t _s15TextContentViewC7ContentOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_10031B4A4(v4, v5, v6);
  return a1;
}

ValueMetadata *_s15TextContentViewC7ContentOMa()
{
  return &_s15TextContentViewC7ContentON;
}

uint64_t sub_10031B5A4(const void *a1)
{
  _QWORD *v1;
  void *v3;
  Swift::Int v4;
  _BYTE v6[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicTextContentView_specs);
  memcpy(v6, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10030ED5C((uint64_t)a1);
  sub_10030EE2C((uint64_t)v6);
  v4 = sub_1002EBC24((uint64_t)&off_100518A98);
  sub_10031AFD0(v4);
  swift_bridgeObjectRelease();
  return sub_10030EE2C((uint64_t)a1);
}

uint64_t sub_10031B638(char a1)
{
  _QWORD *v1;
  Swift::Int v2;

  *(_BYTE *)(*v1 + OBJC_IVAR___MusicTextContentView_isScrolling) = a1;
  v2 = sub_1002EBC24((uint64_t)&off_100518B10);
  sub_10031AFD0(v2);
  return swift_bridgeObjectRelease();
}

id sub_10031B67C()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR___MusicTextContentView_label), "setAlpha:", 1.0);
}

void sub_10031B69C(char a1, char a2)
{
  sub_10031A72C(a1, a2);
}

uint64_t sub_10031B6BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10031B6E0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___MusicTextContentView_label), "setAlpha:", 1.0 - v2);
  result = *(id *)(v1 + OBJC_IVAR___MusicTextContentView_selectedLabel);
  if (result)
    return objc_msgSend(result, "setAlpha:", v2);
  return result;
}

uint64_t sub_10031B75C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10031B76C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10031B774()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10031B798(uint64_t a1)
{
  uint64_t v1;

  sub_10031AB44(a1, *(_QWORD *)(v1 + 16));
}

void sub_10031B7A0()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;

  v0[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v0[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  v1 = OBJC_IVAR___MusicTextContentView_label;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setLineBreakStrategy:", 3);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setAutoresizingMask:", 18);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010044BC20, "MusicCoreUI/SyncedLyricsLineView+Text.swift", 43, 2, 121, 0);
  __break(1u);
}

uint64_t _s15TextContentViewC6ChangeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10031B8F8 + 4 * byte_10043BE3D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10031B92C + 4 * byte_10043BE38[v4]))();
}

uint64_t sub_10031B92C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031B934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10031B93CLL);
  return result;
}

uint64_t sub_10031B948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10031B950);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10031B954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031B95C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15TextContentViewC6ChangeOMa()
{
  return &_s15TextContentViewC6ChangeON;
}

unint64_t sub_10031B97C()
{
  unint64_t result;

  result = qword_100559FC8;
  if (!qword_100559FC8)
  {
    result = swift_getWitnessTable(byte_10043BEB4, &_s15TextContentViewC6ChangeON);
    atomic_store(result, (unint64_t *)&qword_100559FC8);
  }
  return result;
}

uint64_t sub_10031B9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000C53BC(v3, a1);
}

id sub_10031BA18()
{
  char *v0;
  double v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t *v9;
  double *v10;
  _BYTE v12[24];

  v1 = UIView.untransformedFrame.getter();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment];
  if (v8 == 2)
  {
    v9 = CGPoint.centerRight.unsafeMutableAddressor();
  }
  else if (v8)
  {
    v9 = CGPoint.center.unsafeMutableAddressor();
  }
  else
  {
    v9 = CGPoint.centerLeft.unsafeMutableAddressor();
  }
  v10 = (double *)v9;
  swift_beginAccess(v9, v12, 0, 0);
  objc_msgSend(v0, "setAnchorPoint:", *v10, v10[1]);
  return UIView.untransformedFrame.setter(v1, v3, v5, v7);
}

void sub_10031BAC4(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  if (a1)
    objc_msgSend(a1, "removeFromSuperview");
  v2 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView], "addSubview:", v3);
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_10000B4C8(&qword_100559390);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1004280F0;
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v1, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v3, "trailingAnchor");
    v11 = objc_msgSend(v1, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

    *(_QWORD *)(v6 + 40) = v12;
    v13 = objc_msgSend(v3, "topAnchor");
    v14 = objc_msgSend(v1, "topAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    *(_QWORD *)(v6 + 48) = v15;
    v16 = objc_msgSend(v3, "bottomAnchor");
    v17 = objc_msgSend(v1, "bottomAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v6 + 56) = v18;
    specialized Array._endMutation()(v19);
    sub_1000DD108(0, &qword_10055A058, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v4, "activateConstraints:", isa);

  }
}

void (*sub_10031BD80(uint64_t a1))(__int128 *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  id v4;

  v2 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = v2;
  v3 = *(_OWORD *)(v1 + v2);
  *(_OWORD *)a1 = v3;
  v4 = (id)v3;
  return sub_10031BDC8;
}

void sub_10031BDC8(__int128 *a1, char a2)
{
  id *v3;
  __int128 v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = (id *)(*((_QWORD *)a1 + 2) + *((_QWORD *)a1 + 3));
  v8 = *v3;
  v4 = *a1;
  *(_OWORD *)v3 = *a1;
  v5 = (id)v4;
  v6 = v5;
  if ((a2 & 1) != 0)
  {
    v7 = v5;
    sub_10031BAC4(v8);

  }
  else
  {
    sub_10031BAC4(v8);
  }

}

id sub_10031BE4C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  }
  else
  {
    v4 = sub_10031BEAC(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10031BEAC(char *a1)
{
  id v2;
  double *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
  objc_msgSend(v2, "setBackgroundColor:", *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 456]);
  objc_msgSend(v2, "setAlpha:", 0.0);
  v4 = objc_msgSend(v2, "layer");
  objc_msgSend(v4, "setCornerCurve:", kCACornerCurveContinuous);

  v5 = objc_msgSend(v2, "layer");
  objc_msgSend(v5, "setCornerRadius:", v3[58]);

  objc_msgSend(a1, "insertSubview:atIndex:", v2, 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_10000B4C8(&qword_100559390);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004280F0;
  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(a1, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -v3[59]);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v2, "trailingAnchor");
  v13 = objc_msgSend(a1, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, v3[59]);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v2, "topAnchor");
  v16 = objc_msgSend(a1, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -v3[59]);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v2, "bottomAnchor");
  v19 = objc_msgSend(a1, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, v3[59]);

  *(_QWORD *)(v8 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_1000DD108(0, &qword_10055A058, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v6, "activateConstraints:", isa);

  return v2;
}

double sub_10031C2A8(char a1)
{
  char *v1;
  double result;
  id v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;

  if (objc_msgSend(v1, "isHighlighted") != (a1 & 1))
  {
    v3 = sub_10031BE4C();
    if (objc_msgSend(v1, "isHighlighted"))
    {
      v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
      *(_QWORD *)v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius];
      v4[8] = 0;
      v5 = 0.0;
    }
    else
    {
      if ((v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius + 8] & 1) != 0)
      {
LABEL_8:
        v6 = swift_allocObject(&unk_10051D558, 32, 7);
        *(_QWORD *)(v6 + 16) = v3;
        *(_QWORD *)(v6 + 24) = v1;
        v7 = swift_allocObject(&unk_10051D580, 32, 7);
        *(_QWORD *)(v7 + 16) = v1;
        *(_QWORD *)(v7 + 24) = v3;
        v8 = v3;
        v9 = v1;
        v10 = v8;
        _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0((char)objc_msgSend(v9, "isHighlighted"), (uint64_t)sub_10031E65C, v6, (uint64_t)sub_10031E664, v7);

        swift_release(v6);
        *(_QWORD *)&result = swift_release(v7).n128_u64[0];
        return result;
      }
      v5 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    }
    sub_10031CBC0(1, v5);
    goto LABEL_8;
  }
  return result;
}

void sub_10031C3EC(void *a1, char *a2)
{
  unsigned int v4;
  double v5;
  double v6;
  id v7;

  v4 = objc_msgSend(a2, "isHighlighted");
  v5 = 0.0;
  v6 = 1.0;
  if (v4)
    v5 = 1.0;
  objc_msgSend(a1, "setAlpha:", v5);
  v7 = *(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  if (objc_msgSend(a2, "isHighlighted"))
    v6 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 448];
  objc_msgSend(v7, "setAlpha:", v6);

}

id sub_10031C49C(char *a1, void *a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;

  if (objc_msgSend(a1, "isHighlighted"))
  {
    v5 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 400];
    v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 408];
    v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 416];
    v7 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 424];
    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 432];
    v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 440];
  }
  else
  {
    v4 = 0;
    v5 = 1.0;
    v6 = 0;
    v7 = 1.0;
    v8 = 0;
    v9 = 0;
  }
  v10 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  v12 = v5;
  v13 = v4;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  objc_msgSend(v10, "setTransform:", &v12);
  v12 = v5;
  v13 = v4;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  return objc_msgSend(a2, "setTransform:", &v12);
}

double sub_10031C588(double a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  double v9;

  v3 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (!v3)
    return 0.0;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
  ObjectType = swift_getObjectType();
  v8 = v3;
  v9 = (*(double (**)(id, uint64_t, uint64_t, double, double))(v6 + 96))(objc_msgSend(v2, "isSelected"), ObjectType, v6, a1, a2);

  return v9;
}

void sub_10031C68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *, char);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  void *v16;
  _QWORD v17[4];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    v17[0] = v3;
    (*(void (**)(uint64_t, uint64_t))(v4 + 80))(ObjectType, v4);
  }
  v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling) = 1;
  v8 = sub_10031BD80((uint64_t)v17);
  v9 = *(void **)v7;
  if (*(_QWORD *)v7)
  {
    v10 = v7;
    v11 = *(unsigned __int8 *)(v1 + v6);
    v12 = *(_QWORD *)(v7 + 8);
    v13 = swift_getObjectType();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
    v15 = v9;
    v14(v11, v13, v12);
    v16 = *(void **)v10;
    *(_QWORD *)v10 = v9;
    *(_QWORD *)(v10 + 8) = v12;

  }
  v8((__int128 *)v17, 0);
  sub_10031C788(0, 0);
}

void sub_10031C788(char a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)();
  void *v9;
  uint64_t v10;
  id v11;
  char *v12;
  void **v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(_QWORD, uint64_t, uint64_t, uint64_t);
  void **v17;
  char *Strong;
  void *v19;
  uint64_t v20;
  double v21;
  uint64_t (*v22)(uint64_t);
  double v23;
  void (*v24)();
  uint64_t v25;
  char *v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, uint64_t, uint64_t);
  void **v31;
  void **aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  double v35;
  void (*v36)();
  uint64_t v37;
  char v38[24];

  v5 = a1 & 1;
  if (objc_msgSend(v2, "isSelected") != (_DWORD)v5)
  {
    objc_msgSend(v2, "setSelected:", v5);
    if (objc_msgSend(v2, "isHighlighted"))
    {
      objc_msgSend(v2, "setHighlighted:", 0);
      objc_msgSend(v2, "cancelTrackingWithEvent:", 0);
      v6 = swift_allocObject(&unk_10051D4B8, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_10051D530, 25, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      if (a2)
      {
        v8 = sub_10031E66C;
LABEL_7:
        v36 = v8;
        v37 = v7;
        aBlock = _NSConcreteStackBlock;
        v33 = 1107296256;
        v34 = sub_10015F6F8;
        v35 = COERCE_DOUBLE(&unk_10051D4F8);
        v9 = _Block_copy(&aBlock);
        v10 = v37;
        swift_retain(v7);
        v11 = a2;
        objc_msgSend(v11, "addAnimations:", v9, swift_release(v10).n128_f64[0]);
        _Block_release(v9);
        v12 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        v13 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        if (v13)
        {
          v14 = *((_QWORD *)v12 + 1);
          ObjectType = swift_getObjectType();
          aBlock = v13;
          v16 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v14 + 88);
          v17 = v13;
          v16(a1 & 1, 1, ObjectType, v14);

          swift_release(v7);
          return;
        }

        goto LABEL_17;
      }
    }
    else
    {
      v6 = swift_allocObject(&unk_10051D4B8, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_10051D4E0, 25, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      if (a2)
      {
        v8 = sub_10031E520;
        goto LABEL_7;
      }
    }
    swift_beginAccess(v6 + 16, v38, 0, 0);
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (Strong)
    {
      v19 = Strong;
      if ((a1 & 1) != 0)
      {
        v20 = 0;
        v21 = 1.0;
        v22 = 0;
        v23 = 1.0;
        v24 = 0;
        v25 = 0;
      }
      else
      {
        v21 = *(double *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
        v20 = *(_QWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 288];
        v22 = *(uint64_t (**)(uint64_t))&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
        v23 = *(double *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 304];
        v24 = *(void (**)())&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
        v25 = *(_QWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 320];
      }
      aBlock = *(void ***)&v21;
      v33 = v20;
      v34 = v22;
      v35 = v23;
      v36 = v24;
      v37 = v25;
      objc_msgSend(Strong, "setTransform:", &aBlock, swift_retain(v6).n128_f64[0]);
      swift_release(v6);

    }
    v26 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v27 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v27)
    {
      v28 = *((_QWORD *)v26 + 1);
      v29 = swift_getObjectType();
      aBlock = v27;
      v30 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v28 + 88);
      v31 = v27;
      v30(a1 & 1, 0, v29, v28);

    }
LABEL_17:
    swift_release(v7);
  }
}

void sub_10031CAC0(uint64_t a1, char a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if ((a2 & 1) != 0)
    {
      v6 = xmmword_1004280C0;
      v7 = xmmword_100438760;
      v8 = 0uLL;
    }
    else
    {
      v7 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
      v6 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
      v8 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
    }
    v9[0] = v7;
    v9[1] = v6;
    v9[2] = v8;
    objc_msgSend(Strong, "setTransform:", v9);

  }
}

void sub_10031CBC0(char a1, double a2)
{
  char *v2;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  double v13;
  Class isa;
  Class v15;
  id v16;
  double v17;
  float v18;
  double v19;
  float v20;
  double v21;
  float v22;
  double v23;
  float v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  id v37;
  NSString v38;
  id v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
  v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius;
  if (*(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] == a2)
    goto LABEL_8;
  v39 = v5;
  v7 = objc_msgSend(v5, "timingParameters");
  if (!v7
    || (v8 = v7,
        v9 = objc_msgSend(v7, "cubicTimingParameters"),
        swift_unknownObjectRelease(v8),
        !v9))
  {
    v5 = v39;
LABEL_8:

    return;
  }
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v10);

  v12 = v11;
  v13 = 0.0;
  if ((a1 & 1) != 0)
    objc_msgSend(v39, "duration", 0.0);
  objc_msgSend(v12, "setDuration:", v13);

  objc_msgSend(v12, "setFillMode:", kCAFillModeBoth);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setFromValue:", isa);

  v15 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setToValue:", v15);

  objc_msgSend(v12, "setRemovedOnCompletion:", 0);
  v16 = v12;
  objc_msgSend(v9, "controlPoint1");
  v18 = v17;
  objc_msgSend(v9, "controlPoint1");
  v20 = v19;
  objc_msgSend(v9, "controlPoint2");
  v22 = v21;
  objc_msgSend(v9, "controlPoint2");
  v24 = v23;
  v25 = objc_allocWithZone((Class)CAMediaTimingFunction);
  *(float *)&v26 = v18;
  *(float *)&v27 = v20;
  *(float *)&v28 = v22;
  *(float *)&v29 = v24;
  v30 = objc_msgSend(v25, "initWithControlPoints::::", v26, v27, v28, v29);
  objc_msgSend(v16, "setTimingFunction:", v30);

  v31 = objc_msgSend(v2, "layer");
  objc_msgSend(v31, "setShouldRasterize:", 0);

  v32 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v32, "begin");
  v33 = swift_allocObject(&unk_10051D468, 24, 7);
  *(_QWORD *)(v33 + 16) = v2;
  aBlock[4] = sub_10031E4DC;
  v41 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10015F6F8;
  aBlock[3] = &unk_10051D480;
  v34 = _Block_copy(aBlock);
  v35 = v41;
  v36 = v2;
  objc_msgSend(v32, "setCompletionBlock:", v34, swift_release(v35).n128_f64[0]);
  _Block_release(v34);
  v37 = objc_msgSend(v36, "layer");
  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "addAnimation:forKey:", v16, v38);

  objc_msgSend(v32, "commit");
  *(double *)&v2[v6] = a2;
}

void sub_10031CFC0(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "layer");
  objc_msgSend(v1, "setShouldRasterize:", 1);

}

uint64_t sub_10031D004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t (*v14)(void);
  void (*v15)(uint64_t *__return_ptr);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSString v36;
  uint64_t v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSString *v47;
  NSString *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSString v53;
  Class v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char v66;
  id v67;
  id v68;
  Swift::Int v69;
  uint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  double v73;
  double v74;
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char v96;
  uint64_t v97;
  Swift::Int v98;
  Swift::Int v99;
  uint64_t v100;
  id v101;
  void *v102;
  id v103;
  char *v104;
  char *v105;
  uint64_t v106;
  Swift::Int v107;
  void *v108;
  char *v109;
  id v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  Swift::Int v115;
  void *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  _QWORD *v123;
  char v124;
  char v125;
  id v126;
  char *v127;
  void *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  char v133;
  char v134;
  id v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  void (*v141)(char *, uint64_t);
  NSString *v142;
  id v143;
  __int128 v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  _QWORD v150[3];
  char v151;
  unsigned __int8 v152;
  uint64_t v153;
  uint64_t (*v154)(void);
  void *v155;
  uint64_t (*v156)(void);
  uint64_t v157;
  void (*v158)(uint64_t *__return_ptr);
  void *v159;
  uint64_t v160;
  _QWORD v161[5];
  uint64_t v162[8];
  uint64_t v163[8];
  uint64_t v164[8];
  uint64_t v165[6];
  char v166;
  _BYTE v167[24];
  uint64_t v168;
  char v169;
  _QWORD *v170;
  _QWORD v171[3];
  uint64_t v172;
  _QWORD *v173;
  _OWORD v174[34];

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v136 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v136 - v8;
  sub_10031BA18();
  v10 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v10, &v160, 0, 0);
  sub_1000C53BC(v10, (uint64_t)v161);
  v11 = sub_10000B4C8(&qword_1005592E0);
  if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.TextLine, 0))
  {
    LODWORD(v146) = v152;
    v12 = v153;
    v13 = v154;
    v14 = v156;
    v15 = v158;
    v16 = v159;
    v148 = v157;
    v149 = v155;
    v17 = *(_QWORD *)(v156() + 16);
    v18 = swift_bridgeObjectRelease();
    v19 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v20 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v17)
    {
      v147 = v12;
      v21 = v1;
      if (v20)
      {
        v22 = _s19SBS_TextContentViewCMa();
        v18 = swift_dynamicCastClass(v20, v22);
        if (v18)
        {
          v145 = v20;
          v143 = (id)v13();
          *(_QWORD *)&v144 = v23;
          v24 = v14();
          v142 = *(NSString **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v15(v163);
          v25 = sub_10031E470((uint64_t)v163, (uint64_t)v174);
          v26 = *((_QWORD *)&v174[1] + 1);
          if (*((_QWORD *)&v174[1] + 1))
          {
            v141 = *(void (**)(char *, uint64_t))&v174[1];
            swift_bridgeObjectRetain();
            v25 = (uint64_t)sub_1002FCADC(v163);
          }
          else
          {
            v141 = 0;
          }
          v130 = v147;
          ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v164, v25);
          v131 = sub_10031E470((uint64_t)v164, (uint64_t)v171);
          if (v172)
          {
            v132 = v173;
            swift_bridgeObjectRetain();
            v131 = (uint64_t)sub_1002FCADC(v164);
          }
          else
          {
            v132 = _swiftEmptyArrayStorage;
          }
          ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v165, v131);
          sub_10031E470((uint64_t)v165, (uint64_t)v167);
          v133 = v168;
          if (v168)
          {
            v134 = v169;
            sub_1002FCADC(v165);
            v133 = v134 & 1;
          }
          sub_100316F6C(v143, v144, v24, (uint64_t)v142, (char)v146, v130, (uint64_t)v141, v26, (uint64_t)v132, v133);
          swift_release(v16);
          swift_release(v148);
          swift_release(v149);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
      v145 = (id)((uint64_t (*)(uint64_t))v13)(v18);
      *(_QWORD *)&v144 = v85;
      v86 = v14();
      v142 = *(NSString **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v87 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v162, v87);
      v88 = sub_10031E470((uint64_t)v162, (uint64_t)v171);
      v89 = v172;
      if (v172)
      {
        v141 = (void (*)(char *, uint64_t))v171[2];
        swift_bridgeObjectRetain();
        v88 = (uint64_t)sub_1002FCADC(v162);
      }
      else
      {
        v141 = 0;
      }
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v163, v88);
      v122 = sub_10031E470((uint64_t)v163, (uint64_t)v167);
      if (v168)
      {
        v123 = v170;
        swift_bridgeObjectRetain();
        v122 = (uint64_t)sub_1002FCADC(v163);
      }
      else
      {
        v123 = _swiftEmptyArrayStorage;
      }
      v143 = v16;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v164, v122);
      sub_10031E470((uint64_t)v164, (uint64_t)v165);
      if (v165[3])
      {
        v124 = v166;
        sub_1002FCADC(v164);
        v125 = v124 & 1;
      }
      else
      {
        v125 = 0;
      }
      memcpy(v174, (const void *)(v21 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      v126 = objc_allocWithZone((Class)_s19SBS_TextContentViewCMa());
      sub_10030ED5C((uint64_t)v174);
      v127 = sub_1003171C0((uint64_t)v145, v144, v86, (uint64_t)v142, (char)v146, v147, (uint64_t)v141, v89, (uint64_t)v123, v125, v174);
      v128 = *(void **)v19;
      *(_QWORD *)v19 = v127;
      *(_QWORD *)(v19 + 8) = &off_10051CD38;
      v129 = v127;
      sub_10031BAC4(v128);
      swift_release(v143);
      swift_release(v148);
      swift_release(v149);
      swift_bridgeObjectRelease();

    }
    else
    {
      if (v20)
      {
        v90 = _s15TextContentViewCMa();
        v18 = swift_dynamicCastClass(v20, v90);
        if (v18)
        {
          v91 = v18;
          v146 = v20;
          v92 = v13();
          v93 = v91 + OBJC_IVAR___MusicTextContentView_content;
          v147 = v12;
          v95 = *(void **)(v91 + OBJC_IVAR___MusicTextContentView_content);
          v94 = *(_QWORD *)(v91 + OBJC_IVAR___MusicTextContentView_content + 8);
          v96 = *(_BYTE *)(v91 + OBJC_IVAR___MusicTextContentView_content + 16);
          *(_QWORD *)v93 = v92;
          *(_QWORD *)(v93 + 8) = v97;
          *(_BYTE *)(v93 + 16) = 0;
          swift_bridgeObjectRetain_n(v97, 2);
          sub_10031B484(v95, v94, v96);
          sub_10031B4A4(v95, v94, v96);
          v98 = sub_1002EBC24((uint64_t)&off_100518B38);
          sub_10031AFD0(v98);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10031B4A4(v95, v94, v96);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v91 + OBJC_IVAR___MusicTextContentView_alignment) = *(_QWORD *)(v1
                                                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v99 = sub_1002EBC24((uint64_t)&off_100518B60);
          sub_10031AFD0(v99);

          swift_release(v16);
          swift_release(v148);
          swift_release(v149);
LABEL_48:
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          return sub_100011758(v161);
        }
      }
      v110 = v149;
      v111 = (void *)((uint64_t (*)(uint64_t))v13)(v18);
      v113 = v112;
      memcpy(v174, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s15TextContentViewCMa());
      sub_10030ED5C((uint64_t)v174);
      v114 = sub_10031ABA0(v111, v113, 0, (uint64_t)v174);
      *(_QWORD *)&v114[OBJC_IVAR___MusicTextContentView_alignment] = *(_QWORD *)(v1
                                                                               + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v115 = sub_1002EBC24((uint64_t)&off_100518B88);
      sub_10031AFD0(v115);
      swift_bridgeObjectRelease();
      v116 = *(void **)v19;
      *(_QWORD *)v19 = v114;
      *(_QWORD *)(v19 + 8) = &off_10051D278;
      v117 = v114;
      sub_10031BAC4(v116);
      swift_release(v16);
      swift_release(v148);
      swift_release(v110);
      swift_bridgeObjectRelease();

    }
  }
  else if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.SongwritersLine, 0))
  {
    v147 = v153;
    v148 = v1;
    v149 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
    String.LocalizationValue.init(stringLiteral:)(0x206E657474697257, 0xEC000000203A7942);
    v146 = *(id *)(v5 + 16);
    ((void (*)(char *, char *, uint64_t))v146)(v7, v9, v4);
    if (qword_100557CA0 != -1)
      swift_once(&qword_100557CA0, sub_1002D2FA0);
    v27 = qword_100562670;
    static Locale.current.getter((id)qword_100562670);
    v28 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v27, v3, 0, 0, 256);
    v137 = v29;
    v138 = v28;
    v141 = *(void (**)(char *, uint64_t))(v5 + 8);
    v141(v9, v4);
    v145 = (id)sub_10000B4C8(&qword_1005597D0);
    v30 = swift_allocObject(v145, 72, 7);
    v144 = xmmword_100424BB0;
    *(_OWORD *)(v30 + 16) = xmmword_100424BB0;
    *(_QWORD *)(v30 + 32) = NSFontAttributeName;
    v31 = (void *)objc_opt_self(UIFontMetrics);
    v143 = v31;
    v142 = NSFontAttributeName;
    v32 = objc_msgSend(v31, "defaultMetrics");
    v140 = (id)objc_opt_self(UIFont);
    v33 = objc_msgSend(v140, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
    v34 = objc_msgSend(v32, "scaledFontForFont:", v33);

    v139 = sub_1000DD108(0, (unint64_t *)&qword_100558268, UIFont_ptr);
    *(_QWORD *)(v30 + 64) = v139;
    *(_QWORD *)(v30 + 40) = v34;
    sub_1002D3A28(v30);
    v35 = objc_allocWithZone((Class)NSAttributedString);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_1(0);
    v138 = v37;
    v137 = sub_10030F838();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v39 = objc_msgSend(v35, "initWithString:attributes:", v36, isa);

    v136 = v39;
    objc_msgSend(v149, "appendAttributedString:", v39);
    *(_QWORD *)&v174[0] = v147;
    String.LocalizationValue.init(stringLiteral:)(8236, 0xE200000000000000);
    ((void (*)(char *, char *, uint64_t))v146)(v7, v9, v4);
    v40 = qword_100562670;
    static Locale.current.getter((id)qword_100562670);
    v41 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v40, v3, 0, 0, 256);
    v43 = v42;
    v141(v9, v4);
    v44 = sub_10000B4C8(&qword_10055A048);
    v45 = sub_10031E424();
    BidirectionalCollection<>.joined(separator:)(v41, v43, v44, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = swift_allocObject(v145, 72, 7);
    *(_OWORD *)(v46 + 16) = v144;
    v47 = v142;
    *(_QWORD *)(v46 + 32) = v142;
    v48 = v47;
    v49 = objc_msgSend(v143, "defaultMetrics");
    v50 = objc_msgSend(v140, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
    v51 = objc_msgSend(v49, "scaledFontForFont:", v50);

    *(_QWORD *)(v46 + 64) = v139;
    *(_QWORD *)(v46 + 40) = v51;
    sub_1002D3A28(v46);
    v52 = objc_allocWithZone((Class)NSAttributedString);
    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v55 = objc_msgSend(v52, "initWithString:attributes:", v53, v54);

    v56 = v149;
    objc_msgSend(v149, "appendAttributedString:", v55);
    v57 = v148;
    v58 = v148 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v59 = *(void **)(v148 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v59)
    {
      v60 = _s15TextContentViewCMa();
      v61 = swift_dynamicCastClass(v59, v60);
      if (v61)
      {
        v62 = v61;
        v63 = v61 + OBJC_IVAR___MusicTextContentView_content;
        v64 = *(void **)(v61 + OBJC_IVAR___MusicTextContentView_content);
        v65 = *(_QWORD *)(v61 + OBJC_IVAR___MusicTextContentView_content + 8);
        v66 = *(_BYTE *)(v61 + OBJC_IVAR___MusicTextContentView_content + 16);
        *(_QWORD *)v63 = v56;
        *(_QWORD *)(v63 + 8) = 0;
        *(_BYTE *)(v63 + 16) = 1;
        v67 = v56;
        v68 = v59;
        sub_10031B484(v64, v65, v66);
        sub_10031B4A4(v64, v65, v66);
        v69 = sub_1002EBC24((uint64_t)&off_100518BB0);
        sub_10031AFD0(v69);

        swift_bridgeObjectRelease();
        sub_10031B4A4(v64, v65, v66);
        v70 = 4;
        if (!*(_BYTE *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 72))
          v70 = *(_QWORD *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 64);
        *(_QWORD *)(v62 + OBJC_IVAR___MusicTextContentView_alignment) = v70;
        v71 = sub_1002EBC24((uint64_t)&off_100518BD8);
        sub_10031AFD0(v71);

        goto LABEL_49;
      }
    }
    v100 = v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs;
    memcpy(v174, (const void *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
    v101 = objc_allocWithZone((Class)_s15TextContentViewCMa());
    v102 = v56;
    v103 = v56;
    sub_10030ED5C((uint64_t)v174);
    v104 = sub_10031ABA0(v102, 0, 1, (uint64_t)v174);
    v105 = v104;
    v106 = *(_QWORD *)(v100 + 64);
    if (*(_BYTE *)(v100 + 72))
      v106 = 4;
    *(_QWORD *)&v104[OBJC_IVAR___MusicTextContentView_alignment] = v106;
    v107 = sub_1002EBC24((uint64_t)&off_100518C00);
    sub_10031AFD0(v107);
    swift_bridgeObjectRelease();
    v108 = *(void **)v58;
    *(_QWORD *)v58 = v105;
    *(_QWORD *)(v58 + 8) = &off_10051D278;
    v109 = v105;
    sub_10031BAC4(v108);

  }
  else if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v72 = v150[0];
    v74 = *(double *)&v150[1];
    v73 = *(double *)&v150[2];
    v75 = v151;
    v76 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v77 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v77 && (v78 = _s23InstrumentalContentViewCMa(), (v79 = swift_dynamicCastClass(v77, v78)) != 0))
    {
      v80 = v79;
      v81 = v79 + OBJC_IVAR___MusicInstrumentalContentView_line;
      *(_QWORD *)v81 = v72;
      *(double *)(v81 + 8) = v74;
      *(double *)(v81 + 16) = v73;
      *(_BYTE *)(v81 + 24) = v75;
      *(_BYTE *)(v79 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) = 0;
      v82 = v77;
      sub_100318620();
      v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v84 = *(_QWORD *)(v80 + OBJC_IVAR___MusicInstrumentalContentView_alignment);
      *(_QWORD *)(v80 + OBJC_IVAR___MusicInstrumentalContentView_alignment) = v83;
      if (v83 != v84)
        sub_10031A08C();
    }
    else
    {
      memcpy(v174, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s23InstrumentalContentViewCMa());
      sub_10030ED5C((uint64_t)v174);
      v118 = (char *)sub_100318420(v72, v75, v174, v74, v73);
      v119 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v120 = *(_QWORD *)&v118[OBJC_IVAR___MusicInstrumentalContentView_alignment];
      *(_QWORD *)&v118[OBJC_IVAR___MusicInstrumentalContentView_alignment] = v119;
      if (v119 != v120)
        sub_10031A08C();
      v121 = *(void **)v76;
      *(_QWORD *)v76 = v118;
      *(_QWORD *)(v76 + 8) = &off_10051CEA0;
      v82 = v118;
      sub_10031BAC4(v121);

    }
  }
  return sub_100011758(v161);
}

id sub_10031DF64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SyncedLyricsLineView()
{
  return objc_opt_self(_TtC11MusicCoreUI20SyncedLyricsLineView);
}

char *sub_10031E048(_QWORD *a1, uint64_t a2, const void *a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  char *v12;
  id v13;
  NSString v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  Class v35;
  _OWORD v37[3];
  objc_super v38;

  v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  v7 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  v8 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, "init");
  v11 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  v12 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  sub_1000C53BC((uint64_t)a1, (uint64_t)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line]);
  *(_QWORD *)&v3[v7] = a2;
  memcpy(&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], a3, 0x219uLL);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v13 = objc_allocWithZone((Class)CAFilter);
  sub_10030ED5C((uint64_t)a3);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, "initWithType:", v14);

  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter] = v15;
  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  v16 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  v19 = v16;
  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  objc_msgSend(*(id *)&v16[v17], "setAutoresizingMask:", 18);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v16[v17]);
  objc_msgSend(v19, "setExclusiveTouch:", 1);
  v20 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
  v21 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
  v37[0] = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
  v37[1] = v20;
  v37[2] = v21;
  objc_msgSend(v19, "setTransform:", v37);
  v22 = objc_msgSend(v19, "layer");
  objc_msgSend(v22, "setShouldRasterize:", 1);

  v23 = objc_msgSend(v19, "layer");
  v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  objc_msgSend(v23, "setRasterizationScale:", v26);
  v27 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter;
  v28 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter];
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v28, "setValue:forKey:", isa, kCAFilterInputRadius);

  v30 = objc_msgSend(v19, "layer");
  v31 = sub_10000B4C8(&qword_100558DF0);
  v32 = swift_allocObject(v31, 64, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100424BB0;
  v33 = *(void **)&v19[v27];
  *(_QWORD *)(v32 + 56) = sub_1000DD108(0, (unint64_t *)&qword_100558DF8, CAFilter_ptr);
  *(_QWORD *)(v32 + 32) = v33;
  v34 = v33;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v30, "setFilters:", v35);

  sub_10031D004();
  sub_10031C68C();

  sub_100011758(a1);
  return v19;
}

unint64_t sub_10031E424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055A050;
  if (!qword_10055A050)
  {
    v1 = sub_100011650(&qword_10055A048);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10055A050);
  }
  return result;
}

uint64_t sub_10031E470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100558FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031E4B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10031E4DC()
{
  uint64_t v0;

  sub_10031CFC0(*(void **)(v0 + 16));
}

uint64_t sub_10031E4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10031E4F4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10031E4FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10031E520()
{
  uint64_t v0;

  sub_10031CAC0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10031E52C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10031E550()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010044BC20, "MusicCoreUI/SyncedLyricsLineView.swift", 38, 2, 165, 0);
  __break(1u);
}

uint64_t sub_10031E630()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10031E65C()
{
  uint64_t v0;

  sub_10031C3EC(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

id sub_10031E664()
{
  uint64_t v0;

  return sub_10031C49C(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t Radiosity.Specs.Radiosity.opacity.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain(v0[1]);
  return v1;
}

double SyncedLyricsManager.Configuration.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t SyncedLyricsManager.Configuration.init(animationDuration:finishLineAnimationDuration:maxEndTimeOffset:maxSelectedLines:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t SyncedLyricsManager.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v1 + 24, v6, 0, 0);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return swift_retain(v3);
}

double SyncedLyricsManager.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  double result;
  _BYTE v6[24];

  swift_beginAccess(v1 + 24, v6, 1, 0);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t SyncedLyricsManager.delegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 64, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 64);
}

uint64_t SyncedLyricsManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 64, v6, 1, 0);
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign(v2 + 64, a1);
  return swift_unknownObjectRelease(a1);
}

void (*SyncedLyricsManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 64, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_10031E87C;
}

void sub_10031E87C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 64, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_10031E8EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 80, v6, 1, 0);
  v4 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease(v4);
}

uint64_t SyncedLyricsManager.selectedLines.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 80, v2, 0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t SyncedLyricsManager.isPlayingSpatial.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 88);
}

void SyncedLyricsManager.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 88, v3, 1, 0);
  *(_BYTE *)(v1 + 88) = a1;
}

uint64_t (*SyncedLyricsManager.isPlayingSpatial.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 88, a1, 33, 0);
  return j_j__swift_endAccess;
}

void SyncedLyricsManager.spatialOffset.getter()
{
  uint64_t v0;
  _BYTE v1[24];

  swift_beginAccess(v0 + 88, v1, 0, 0);
  if (*(_BYTE *)(v0 + 88) == 1)
    Lyrics.spatialOffset.getter();
}

uint64_t SyncedLyricsManager.adjustedElapsedTime.getter()
{
  uint64_t v0;
  double (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  double v4;
  double v5;
  double v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  swift_beginAccess(v0 + 96, v9, 0, 0);
  v1 = *(double (**)(__n128))(v0 + 96);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 104);
    v3 = swift_retain(v2);
    v4 = v1(v3);
    swift_beginAccess(v0 + 88, &v8, 0, 0);
    v5 = 0.0;
    if (*(_BYTE *)(v0 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v5 = v6;
    }
    sub_1000DB26C((uint64_t)v1, v2);
    *(double *)&result = v4 - v5;
  }
  else
  {
    *(double *)&result = 0.0;
  }
  return result;
}

void sub_10031EB2C()
{
  uint64_t v0;
  uint64_t v1;
  double (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE v46[24];

  v1 = v0;
  swift_beginAccess(v0 + 96, v46, 0, 0);
  v2 = *(double (**)(__n128))(v0 + 96);
  if (!v2)
    goto LABEL_27;
  v3 = *(_QWORD *)(v0 + 104);
  v4 = swift_retain(v3);
  v5 = v2(v4);
  swift_beginAccess(v0 + 88, v45, 0, 0);
  v6 = 0.0;
  if (*(_BYTE *)(v0 + 88) == 1)
  {
    Lyrics.spatialOffset.getter();
    v6 = v7;
  }
  sub_1000DB26C((uint64_t)v2, v3);
  v8 = v5 - v6;
  v9 = *(_QWORD *)(v0 + 16);
  Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v36, v8 + 0.1);
  if (!*((_QWORD *)&v37 + 1))
  {
    v13 = *(_QWORD *)(v9 + 40);
    if (*(_QWORD *)(v13 + 16))
    {
      sub_1000C53BC(v13 + 32, (uint64_t)&v39);
    }
    else
    {
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
    }
    sub_1003202E8((uint64_t)&v36);
    if (*((_QWORD *)&v40 + 1))
      goto LABEL_6;
    goto LABEL_26;
  }
  sub_1000B47A8(&v36, (uint64_t)&v39);
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_26:
    sub_1003202E8((uint64_t)&v39);
LABEL_27:
    SyncedLyricsManager.update()();
    return;
  }
LABEL_6:
  sub_1000B47A8(&v39, (uint64_t)v42);
  v11 = v43;
  v10 = v44;
  sub_10000D900(v42, v43);
  v12 = (*(double (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 8))(v11);
  sub_1000C53BC((uint64_t)v42, (uint64_t)&v39);
  if (v12 >= v8)
  {
    v15 = *((_QWORD *)&v40 + 1);
    v14 = v41;
    sub_10000D900(&v39, *((uint64_t *)&v40 + 1));
    v16 = vabdd_f64(v8, (*(double (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 8))(v15));
    sub_100011758(&v39);
    if (v16 > 0.1)
    {
      sub_1000C53BC((uint64_t)v42, (uint64_t)&v36);
      swift_beginAccess(v1 + 112, v35, 33, 0);
      sub_100320490((uint64_t)&v36, v1 + 112);
      swift_endAccess(v35);
      sub_1003202E8((uint64_t)&v36);
      swift_beginAccess(v1 + 80, &v36, 1, 0);
      *(_QWORD *)(v1 + 80) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess(v1 + 64, v35, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (Strong)
      {
        v18 = Strong;
        v19 = *(_QWORD *)(v1 + 72);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v1, ObjectType, v19);
        swift_unknownObjectRelease(v18);
      }
      v21 = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (!v21)
        goto LABEL_23;
      v22 = v21;
      v23 = *(_QWORD *)(v1 + 72);
      v24 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t, double))(v23 + 16))(v1, v42, 0, v24, v23, v8);
      goto LABEL_22;
    }
  }
  else
  {
    sub_100011758(&v39);
  }
  v25 = v43;
  v26 = v44;
  sub_10000D900(v42, v43);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  v28 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
  }
  else
  {
    v29 = *(_QWORD *)(v9 + 40);
    if (v28 >= *(_QWORD *)(v29 + 16))
    {
      v38 = 0;
      v36 = 0u;
      v37 = 0u;
      goto LABEL_20;
    }
    if ((v28 & 0x8000000000000000) == 0)
    {
      sub_1000C53BC(v29 + 40 * v28 + 32, (uint64_t)&v36);
LABEL_20:
      swift_beginAccess(v1 + 112, v35, 33, 0);
      sub_100320490((uint64_t)&v36, v1 + 112);
      swift_endAccess(v35);
      sub_1003202E8((uint64_t)&v36);
      v30 = sub_10000B4C8(&qword_1005592D8);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100424BB0;
      sub_1000C53BC((uint64_t)v42, v31 + 32);
      swift_beginAccess(v1 + 80, &v36, 1, 0);
      *(_QWORD *)(v1 + 80) = v31;
      swift_bridgeObjectRelease();
      swift_beginAccess(v1 + 64, v35, 0, 0);
      v32 = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (!v32)
      {
LABEL_23:
        sub_100011758(v42);
        return;
      }
      v22 = v32;
      v33 = *(_QWORD *)(v1 + 72);
      v34 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, double))(v33 + 16))(v1, v42, 1, v34, v33, v8);
LABEL_22:
      swift_unknownObjectRelease(v22);
      goto LABEL_23;
    }
  }
  __break(1u);
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 96, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 96);
  sub_1000DB0D8(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 96, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  sub_1000DB0D8(a1, a2);
  sub_1000DB26C(v5, v6);
  sub_10031EB2C();
  return sub_1000DB26C(a1, a2);
}

void (*SyncedLyricsManager.elapsedTimeProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 96, a1, 33, 0);
  return sub_10031F038;
}

void sub_10031F038(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_10031EB2C();
}

uint64_t SyncedLyricsManager.__allocating_init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;

  v11 = swift_allocObject(v5, 152, 7);
  ObjectType = swift_getObjectType();
  v13 = sub_1003201E0(a1, a2, a3, a5, v11, ObjectType, a4);
  swift_unknownObjectRelease(a3);
  return v13;
}

uint64_t SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  v12 = sub_1003201E0(a1, a2, a3, a5, v5, ObjectType, a4);
  swift_unknownObjectRelease(a3);
  return v12;
}

Swift::Void __swiftcall SyncedLyricsManager.update()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  double v17;
  uint64_t v18;
  double (*v19)(double);
  double v20;
  uint64_t v21;
  double (*v22)(double);
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[24];
  __int128 v66;
  ValueMetadata *v67;
  _UNKNOWN **v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[40];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[24];
  _BYTE v78[24];
  _BYTE v79[24];
  _BYTE v80[24];
  _BYTE v81[24];
  _BYTE v82[24];
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v1 = v0;
  sub_10031FE2C();
  v2 = v0 + 112;
  swift_beginAccess(v2, v82, 0, 0);
  sub_1003202A0(v2, (uint64_t)&v66);
  if (v67)
  {
    sub_1000B47A8(&v66, (uint64_t)v83);
    swift_beginAccess(v1 + 96, v81, 0, 0);
    v3 = *(double (**)(__n128))(v1 + 96);
    if (v3)
    {
      v4 = *(_QWORD *)(v1 + 104);
      v5 = swift_retain(v4);
      v6 = v3(v5);
      swift_beginAccess(v1 + 88, v80, 0, 0);
      v7 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v7 = v8;
      }
      sub_1000DB26C((uint64_t)v3, v4);
      v9 = v1 + 80;
      swift_beginAccess(v1 + 80, v79, 0, 0);
      v10 = *(_QWORD *)(v1 + 80);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        sub_1000C53BC(v10 + 40 * v11 - 8, (uint64_t)&v66);
        v13 = v84;
        v12 = v85;
        sub_10000D900(v83, v84);
        v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8))(v13);
        v16 = v67;
        v15 = v68;
        sub_10000D900(&v66, (uint64_t)v67);
        v17 = v14 - (*((double (**)(ValueMetadata *))v15[1] + 2))(v16);
        swift_beginAccess(v1 + 24, v78, 0, 0);
        v19 = *(double (**)(double))(v1 + 24);
        v18 = *(_QWORD *)(v1 + 32);
        swift_retain(v18);
        v20 = v19(v17);
        swift_release(v18);
        sub_100011758(&v66);
      }
      else
      {
        swift_beginAccess(v1 + 24, v78, 0, 0);
        v22 = *(double (**)(double))(v1 + 24);
        v21 = *(_QWORD *)(v1 + 32);
        swift_retain(v21);
        v20 = v22(0.0);
        swift_release(v21);
      }
      v23 = v6 - v7;
      v24 = *(_QWORD *)(*(_QWORD *)v9 + 16);
      if (v24)
      {
        sub_1000C53BC(*(_QWORD *)v9 + 40 * v24 - 8, (uint64_t)&v66);
        v25 = sub_10000B4C8(&qword_1005592E0);
        if ((swift_dynamicCast(v74, &v66, v25, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
        {
          v26 = v74[0];
          v27 = v74[1];
          v28 = v74[2];
          v29 = v75;
          swift_beginAccess(v1 + 64, &v64, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
          if (Strong)
          {
            v31 = Strong;
            v32 = *(_QWORD *)(v1 + 72);
            ObjectType = swift_getObjectType();
            v67 = &type metadata for Lyrics.InstrumentalLine;
            v68 = &protocol witness table for Lyrics.InstrumentalLine;
            v34 = swift_allocObject(&unk_10051D5A8, 48, 7);
            *(_QWORD *)&v66 = v34;
            *(_QWORD *)(v34 + 16) = v26;
            *(_QWORD *)(v34 + 24) = v27;
            *(_QWORD *)(v34 + 32) = v28;
            *(_BYTE *)(v34 + 40) = v29;
            (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t, double))(v32 + 24))(v1, &v66, ObjectType, v32, v23);
            swift_unknownObjectRelease(v31);
            sub_100011758(&v66);
          }
        }
      }
      swift_beginAccess(v1 + 24, v77, 0, 0);
      if (sub_10031F7C4(v83, v1, v23 + *(double *)(v1 + 40), v20) == 1)
      {
        v35 = *(_QWORD *)(*(_QWORD *)v9 + 16);
        if (v35)
        {
          v36 = *(_QWORD *)v9 + 32;
          swift_bridgeObjectRetain();
          swift_beginAccess(v1 + 64, v65, 0, 0);
          do
          {
            sub_1000C53BC(v36, (uint64_t)&v66);
            v37 = swift_unknownObjectWeakLoadStrong(v1 + 64);
            if (v37)
            {
              v38 = v37;
              v39 = *(_QWORD *)(v1 + 72);
              v40 = swift_getObjectType();
              (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v39 + 40))(v1, &v66, v40, v39);
              swift_unknownObjectRelease(v38);
            }
            sub_100011758(&v66);
            v36 += 40;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
        }
      }
      v42 = v84;
      v41 = v85;
      sub_10000D900(v83, v84);
      if ((*(double (**)(uint64_t))(*(_QWORD *)(v41 + 8) + 8))(v42) <= v23 + v20)
      {
        v43 = *(_QWORD *)(*(_QWORD *)v9 + 16);
        if (v43)
        {
          sub_1000C53BC(*(_QWORD *)v9 + 40 * v43 - 8, (uint64_t)v74);
          v45 = v84;
          v44 = v85;
          sub_10000D900(v83, v84);
          v46 = (*(double (**)(uint64_t))(*(_QWORD *)(v44 + 8) + 8))(v45);
          v48 = v75;
          v47 = v76;
          sub_10000D900(v74, v75);
          v49 = (*(double (**)(uint64_t))(*(_QWORD *)(v47 + 8) + 16))(v48);
          v51 = v75;
          v50 = v76;
          sub_10000D900(v74, v75);
          v52 = (*(double (**)(uint64_t))(*(_QWORD *)(v50 + 8) + 16))(v51) - *(double *)(v1 + 48);
          sub_1000C53BC((uint64_t)v83, (uint64_t)&v66);
          v53 = sub_10000B4C8(&qword_1005592E0);
          if (swift_dynamicCast(v73, &v66, v53, &type metadata for Lyrics.InstrumentalLine, 6))
            goto LABEL_37;
          sub_1000C53BC((uint64_t)v74, (uint64_t)&v66);
          if (swift_dynamicCast(v73, &v66, v53, &type metadata for Lyrics.InstrumentalLine, 6))
            goto LABEL_37;
          if (*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16) >= *(_QWORD *)(v1 + 56))
            goto LABEL_37;
          v54 = v84;
          v55 = v85;
          sub_10000D900(v83, v84);
          v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
          v57 = v75;
          v58 = v76;
          sub_10000D900(v74, v75);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v57, v58) >= v56
            || (v60 = v84,
                v59 = v85,
                sub_10000D900(v83, v84),
                (*(double (**)(uint64_t))(*(_QWORD *)(v59 + 8) + 8))(v60) >= v23))
          {
LABEL_37:
            if (v52 < v23)
              goto LABEL_31;
            sub_1000C53BC((uint64_t)v74, (uint64_t)v73);
            if ((swift_dynamicCast(&v66, v73, v53, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
            {
              v61 = v69;
              v62 = v70;
              v63 = v71;
              swift_release(v72);
              swift_release(v63);
              swift_release(v62);
              swift_bridgeObjectRelease();
              if (v61 - *(double *)(v1 + 48) < v23)
LABEL_31:
                sub_10031FA50(v83, COERCE__INT64(v46 - v49), 0, v23);
            }
          }
          else
          {
            sub_10031FBFC(v83);
          }
          sub_100011758(v74);
        }
        else
        {
          sub_10031FA50(v83, 0, 1, v23);
        }
      }
    }
    sub_100011758(v83);
  }
  else
  {
    sub_1003202E8((uint64_t)&v66);
  }
}

uint64_t sub_10031F7C4(_QWORD *a1, uint64_t a2, double a3, double a4)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[40];
  _BYTE v34[24];
  _BYTE v35[24];
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v7 = a3 + a4;
  v9 = a1[3];
  v8 = a1[4];
  sub_10000D900(a1, v9);
  if ((*(double (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v9) <= v7)
  {
    swift_beginAccess(a2 + 80, v35, 0, 0);
    v10 = *(_QWORD *)(a2 + 80);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      sub_1000C53BC(v10 + 40 * v11 - 8, (uint64_t)v36);
      v13 = v37;
      v12 = v38;
      sub_10000D900(v36, v37);
      v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 16))(v13);
      swift_beginAccess(a2 + 24, v34, 0, 0);
      v15 = v14 - *(double *)(a2 + 48);
      sub_1000C53BC((uint64_t)a1, (uint64_t)v28);
      v16 = sub_10000B4C8(&qword_1005592E0);
      if ((swift_dynamicCast(v33, v28, v16, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0)
      {
        sub_1000C53BC((uint64_t)v36, (uint64_t)v28);
        if (!swift_dynamicCast(v33, v28, v16, &type metadata for Lyrics.InstrumentalLine, 6)
          && *(_QWORD *)(*(_QWORD *)(a2 + 80) + 16) < *(_QWORD *)(a2 + 56))
        {
          v17 = a1[3];
          v18 = a1[4];
          sub_10000D900(a1, v17);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
          v20 = v37;
          v21 = v38;
          sub_10000D900(v36, v37);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21) < v19)
          {
            v23 = a1[3];
            v22 = a1[4];
            sub_10000D900(a1, v23);
            if ((*(double (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 8))(v23) < a3)
            {
              sub_100011758(v36);
              return 2;
            }
          }
        }
      }
      if (v15 < a3)
        goto LABEL_12;
      sub_1000C53BC((uint64_t)v36, (uint64_t)v33);
      if ((swift_dynamicCast(v28, v33, v16, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
      {
        v25 = v29;
        v26 = v30;
        v27 = v31;
        swift_release(v32);
        swift_release(v27);
        swift_release(v26);
        swift_bridgeObjectRelease();
        if (v25 - *(double *)(a2 + 48) < a3)
        {
LABEL_12:
          sub_100011758(v36);
          return 1;
        }
      }
      sub_100011758(v36);
    }
  }
  return 0;
}

void sub_10031FA50(_QWORD *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _BYTE v22[24];
  _OWORD v23[2];
  uint64_t v24;
  _BYTE v25[24];

  v5 = v4;
  v10 = sub_10000B4C8(&qword_1005592D8);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100424BB0;
  sub_1000C53BC((uint64_t)a1, v11 + 32);
  swift_beginAccess(v5 + 10, v25, 1, 0);
  v5[10] = v11;
  swift_bridgeObjectRelease();
  v12 = v5[2];
  v13 = a1[3];
  v14 = a1[4];
  sub_10000D900(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)(v12 + 40);
  if (v16 < *(_QWORD *)(v17 + 16))
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      sub_1000C53BC(v17 + 40 * v16 + 32, (uint64_t)v23);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_6:
  swift_beginAccess(v5 + 14, v22, 33, 0);
  sub_100320490((uint64_t)v23, (uint64_t)(v5 + 14));
  swift_endAccess(v22);
  sub_1003202E8((uint64_t)v23);
  swift_beginAccess(v5 + 8, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 8);
  if (Strong)
  {
    v19 = Strong;
    v20 = v5[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, double))(v20 + 8))(v5, a1, a2, a3 & 1, ObjectType, v20, a4);
    swift_unknownObjectRelease(v19);
  }
}

void sub_10031FBFC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  _BYTE v24[24];
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v2 = v1;
  sub_1000C53BC((uint64_t)a1, (uint64_t)&v26);
  v4 = v1 + 10;
  swift_beginAccess(v4, v25, 1, 0);
  v5 = (_QWORD *)v2[10];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  v2[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1002F8728(0, v5[2] + 1, 1, v5);
    *v4 = (uint64_t)v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
    *v4 = (uint64_t)sub_1002F8728((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
  v9 = *((_QWORD *)&v27 + 1);
  v10 = v28;
  sub_10020DE90((uint64_t)&v26, *((uint64_t *)&v27 + 1));
  __chkstk_darwin();
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v13 + 16))(v12);
  sub_100320168(v8, (uint64_t)v12, v4, v9, v10);
  sub_100011758(&v26);
  v14 = v2[2];
  v15 = a1[3];
  v16 = a1[4];
  sub_10000D900(a1, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  v18 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = *(_QWORD *)(v14 + 40);
  if (v18 < *(_QWORD *)(v19 + 16))
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      sub_1000C53BC(v19 + 40 * v18 + 32, (uint64_t)&v26);
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return;
  }
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
LABEL_10:
  swift_beginAccess(v2 + 14, v24, 33, 0);
  sub_100320490((uint64_t)&v26, (uint64_t)(v2 + 14));
  swift_endAccess(v24);
  sub_1003202E8((uint64_t)&v26);
  swift_beginAccess(v2 + 8, &v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 8);
  if (Strong)
  {
    v21 = Strong;
    v22 = v2[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v22 + 32))(v2, a1, ObjectType, v22);
    swift_unknownObjectRelease(v21);
  }
}

void sub_10031FE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v1 = v0;
  v2 = v0 + 112;
  swift_beginAccess(v0 + 112, v31, 0, 0);
  sub_1003202A0(v0 + 112, (uint64_t)&v32);
  v3 = *((_QWORD *)&v33 + 1);
  sub_1003202E8((uint64_t)&v32);
  if (!v3)
  {
    swift_beginAccess(v1 + 96, v30, 0, 0);
    v4 = *(double (**)(__n128))(v1 + 96);
    if (v4)
    {
      v5 = *(_QWORD *)(v1 + 104);
      v6 = swift_retain(v5);
      v7 = v4(v6);
      swift_beginAccess(v1 + 88, v29, 0, 0);
      v8 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v8 = v9;
      }
      sub_1000DB26C((uint64_t)v4, v5);
      v10 = *(_QWORD *)(v1 + 16);
      v11 = *(_QWORD *)(v10 + 40);
      if (!*(_QWORD *)(v11 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      v12 = v7 - v8;
      sub_1000C53BC(v11 + 32, (uint64_t)&v32);
      v14 = *((_QWORD *)&v33 + 1);
      v13 = v34;
      sub_10000D900(&v32, *((uint64_t *)&v33 + 1));
      v15 = (*(double (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 8))(v14);
      sub_100011758(&v32);
      if (v12 > v15)
      {
        Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v26, v12);
        if (!*((_QWORD *)&v27 + 1))
        {
          sub_1003202E8((uint64_t)&v26);
          return;
        }
        sub_1000B47A8(&v26, (uint64_t)&v32);
        v17 = *((_QWORD *)&v33 + 1);
        v16 = v34;
        sub_10000D900(&v32, *((uint64_t *)&v33 + 1));
        if (v12 < (*(double (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 16))(v17))
        {
          v18 = &v32;
LABEL_20:
          sub_1000C53BC((uint64_t)v18, (uint64_t)&v26);
LABEL_22:
          swift_beginAccess(v2, v25, 33, 0);
          sub_100320490((uint64_t)&v26, v2);
          swift_endAccess(v25);
          sub_1003202E8((uint64_t)&v26);
          sub_100011758(&v32);
          return;
        }
        v20 = *((_QWORD *)&v33 + 1);
        v21 = v34;
        sub_10000D900(&v32, *((uint64_t *)&v33 + 1));
        v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        v23 = v22 + 1;
        if (!__OFADD__(v22, 1))
        {
          v24 = *(_QWORD *)(v10 + 40);
          if (v23 >= *(_QWORD *)(v24 + 16))
          {
            v28 = 0;
            v26 = 0u;
            v27 = 0u;
            goto LABEL_22;
          }
          if ((v23 & 0x8000000000000000) == 0)
          {
            v18 = (__int128 *)(v24 + 40 * v23 + 32);
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return;
      }
      v19 = *(_QWORD *)(v10 + 40);
      if (*(_QWORD *)(v19 + 16))
      {
        sub_1000C53BC(v19 + 32, (uint64_t)&v32);
      }
      else
      {
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
      }
      swift_beginAccess(v2, &v26, 33, 0);
      sub_100320490((uint64_t)&v32, v2);
      swift_endAccess(&v26);
      sub_1003202E8((uint64_t)&v32);
    }
  }
}

_QWORD *SyncedLyricsManager.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  sub_10019FB08((uint64_t)(v0 + 8));
  swift_bridgeObjectRelease();
  sub_1000DB26C(v0[12], v0[13]);
  sub_1003202E8((uint64_t)(v0 + 14));
  return v0;
}

uint64_t SyncedLyricsManager.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  sub_10019FB08((uint64_t)(v0 + 8));
  swift_bridgeObjectRelease();
  sub_1000DB26C(v0[12], v0[13]);
  sub_1003202E8((uint64_t)(v0 + 14));
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t sub_100320168(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_1000C16E0(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1000B47A8(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1003201E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _BYTE v17[24];

  v13 = a5 + 64;
  *(_QWORD *)(a5 + 72) = 0;
  v14 = swift_unknownObjectWeakInit(a5 + 64, 0);
  *(_QWORD *)(a5 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(_QWORD *)(a5 + 144) = 0;
  *(_QWORD *)(a5 + 16) = a1;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 40) = v15;
  *(_QWORD *)(a5 + 56) = *(_QWORD *)(a2 + 32);
  swift_beginAccess(v14, v17, 1, 0);
  *(_QWORD *)(a5 + 72) = a7;
  swift_unknownObjectWeakAssign(v13, a3);
  *(_BYTE *)(a5 + 88) = a4;
  return a5;
}

uint64_t sub_1003202A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003202E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_10055A360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100320328()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100320338@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 80, v5, 0, 0);
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SyncedLyricsManager()
{
  return objc_opt_self(_TtC11MusicCoreUI19SyncedLyricsManager);
}

uint64_t initializeWithCopy for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for SyncedLyricsManager.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncedLyricsManager.Configuration()
{
  return &type metadata for SyncedLyricsManager.Configuration;
}

uint64_t sub_100320490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SyncedLyricsViewController.Specs.lineChangeSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
}

void *SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v5[544];

  sub_100321D44(a1, a2, v5);
  return memcpy(a3, v5, 0x219uLL);
}

id static SyncedLyricsViewController.Specs.liftSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
}

id static SyncedLyricsViewController.Specs.growSyllableTimingParameters(response:)(double a1)
{
  sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, a1);
}

id static SyncedLyricsViewController.Specs.backgroundVocalsSpringTimingParameters(showing:)(char a1)
{
  if ((a1 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
  sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
}

id static SyncedLyricsViewController.Specs.opacityAnimator()()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
}

BOOL static SyncedLyricsViewController.Specs.SelectedLinePosition.__derived_enum_equals(_:_:)(__int128 *a1, __int128 *a2)
{
  char v3;
  double v4;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  char v10;
  CGRect v11;
  char v12;
  _QWORD v13[4];
  char v14;
  CGRect v15;

  sub_100322B8C(a1, (uint64_t)v13);
  v3 = v14;
  if ((v14 & 0x80) == 0)
  {
    v4 = *(double *)v13;
    sub_100322B8C(a2, (uint64_t)&v11);
    if ((v12 & 0x80000000) == 0)
      return v4 == v11.origin.x;
    return 0;
  }
  v14 &= ~0x80u;
  v6 = *(double *)v13;
  v7 = *(double *)&v13[1];
  v8 = *(double *)&v13[2];
  v9 = *(double *)&v13[3];
  sub_100322B8C(a2, (uint64_t)&v11);
  v10 = v12;
  if ((v12 & 0x80) == 0)
    return 0;
  v12 &= ~0x80u;
  if ((v3 & 1) != 0)
  {
    if ((v10 & 1) == 0)
      return 0;
  }
  else
  {
    if ((v10 & 1) != 0)
      return 0;
    v15.origin.x = v6;
    v15.origin.y = v7;
    v15.size.width = v8;
    v15.size.height = v9;
    if (!CGRectEqualToRect(v15, v11))
      return 0;
  }
  return 1;
}

uint64_t sub_100320774(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(char *)(a1 + 32);
  if (v2 < 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 0x80) != 0)
    {
      if ((v2 & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 32) & 1) != 0)
          return 1;
      }
      else if ((*(_BYTE *)(a2 + 32) & 1) == 0 && CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2))
      {
        return 1;
      }
    }
  }
  else if ((*(_BYTE *)(a2 + 32) & 0x80) == 0 && *(double *)a1 == *(double *)a2)
  {
    return 1;
  }
  return 0;
}

__n128 SyncedLyricsViewController.Specs.selectedLinePosition.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)(v1 + 8);
  v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.selectedLinePosition.setter(__int128 *a1)
{
  uint64_t v1;

  return sub_100322B8C(a1, v1 + 8);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

double SyncedLyricsViewController.Specs.lineSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void SyncedLyricsViewController.Specs.lineSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

void SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineDelay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void SyncedLyricsViewController.Specs.lineDelay.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 144) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineDelay.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void SyncedLyricsViewController.Specs.maxEndTimeOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 152) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.isSelected.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.font.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 168);
}

void SyncedLyricsViewController.Specs.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.font.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = result;
  *(_BYTE *)(v2 + 184) = a2 & 1;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.fontLeading.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.backgroundVocalsFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 192);
}

void SyncedLyricsViewController.Specs.backgroundVocalsFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.backgroundVocalsFont.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.writtenByFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 200);
}

void SyncedLyricsViewController.Specs.writtenByFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 200) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.writtenByFont.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.songwritersNamesFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 208);
}

void SyncedLyricsViewController.Specs.songwritersNamesFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.emphasizingScaleRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

void SyncedLyricsViewController.Specs.emphasizingScaleRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 216) = a1;
  *(double *)(v2 + 224) = a2;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.emphasizingScaleRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 232);
}

void SyncedLyricsViewController.Specs.selectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedUpcomingTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 240);
}

void SyncedLyricsViewController.Specs.selectedUpcomingTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedUpcomingTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.deselectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 248);
}

void SyncedLyricsViewController.Specs.deselectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 256);
}

void SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 264);
}

void SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 264) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.deselectedScrollTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 272);
}

void SyncedLyricsViewController.Specs.deselectedScrollTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedScrollTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 296) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 312) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.hiddenTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 328);
}

void SyncedLyricsViewController.Specs.hiddenTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.hiddenTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.animationHeadstart.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void SyncedLyricsViewController.Specs.animationHeadstart.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 336) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.animationHeadstart.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.glowColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 344);
}

void SyncedLyricsViewController.Specs.glowColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.glowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void SyncedLyricsViewController.Specs.glowRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 352) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowRadius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.glowRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 360);
}

void SyncedLyricsViewController.Specs.glowRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 360) = a1;
  *(double *)(v2 + 368) = a2;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.lineProgressionGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 376);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 376) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionGradientColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 384);
}

void SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineProgressionGradientFeather.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 392);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientFeather.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 392) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionGradientFeather.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 432);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 416) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 432) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.touchDownTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightLabelAlpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

void SyncedLyricsViewController.Specs.highlightLabelAlpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 448) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightLabelAlpha.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.highlightViewBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 456);
}

void SyncedLyricsViewController.Specs.highlightViewBackgroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 456) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewBackgroundColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightViewCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 464);
}

void SyncedLyricsViewController.Specs.highlightViewCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 464) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewCornerRadius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightViewMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void SyncedLyricsViewController.Specs.highlightViewMargin.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 472) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewMargin.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 480);
}

void SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 480) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 488);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 488) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 496);
}

void SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 496) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.syllableLift.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 504);
}

void SyncedLyricsViewController.Specs.syllableLift.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 504) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.syllableLift.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 512);
}

void SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 512) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 520);
}

void SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 520) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 528);
}

void SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 528) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 536);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 536) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void *SyncedLyricsViewController.Specs.with(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, void *a2@<X8>)
{
  const void *v2;
  _BYTE v6[544];

  memcpy(v6, v2, 0x219uLL);
  sub_10030ED5C((uint64_t)v2);
  a1(v6);
  return memcpy(a2, v6, 0x219uLL);
}

void *sub_100320FD4()
{
  _BYTE v1[544];

  sub_100321D44(0, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.default, v1, 0x219uLL);
}

void *SyncedLyricsViewController.Specs.default.unsafeMutableAddressor()
{
  if (qword_100557E90 != -1)
    swift_once(&qword_100557E90, sub_100320FD4);
  return &static SyncedLyricsViewController.Specs.default;
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100321694(&qword_100557E90, (uint64_t)&static SyncedLyricsViewController.Specs.default, (uint64_t)sub_100320FD4, a1);
}

void *sub_100321074()
{
  _BYTE v1[544];

  sub_100321D44((void (*)(_BYTE *))sub_1003210BC, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.iPad, v1, 0x219uLL);
}

void sub_1003210BC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_QWORD *)(a1 + 8) = 0x4034000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_100438860;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 48.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 32.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_QWORD *)(a1 + 176) = 0x404A000000000000;
  *(_BYTE *)(a1 + 184) = 0;
}

void *SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor()
{
  if (qword_100557E98 != -1)
    swift_once(&qword_100557E98, sub_100321074);
  return &static SyncedLyricsViewController.Specs.iPad;
}

uint64_t static SyncedLyricsViewController.Specs.iPad.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100321694(&qword_100557E98, (uint64_t)&static SyncedLyricsViewController.Specs.iPad, (uint64_t)sub_100321074, a1);
}

void *sub_1003211F0()
{
  _BYTE v1[544];

  sub_100321D44((void (*)(_BYTE *))sub_100321238, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.vision, v1, 0x219uLL);
}

void sub_100321238(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  *(_QWORD *)(a1 + 8) = 0x4042000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_100438860;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 56.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 34.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_BYTE *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 176) = 0x404C000000000000;
  *(_BYTE *)(a1 + 184) = 0;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.175);

  *(_QWORD *)(a1 + 384) = v7;
  v8 = objc_msgSend(v5, "whiteColor");

  *(_QWORD *)(a1 + 376) = v8;
  v9 = objc_msgSend(v5, "whiteColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.35);

  v11 = objc_msgSend(v5, "labelColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.55);

  v13 = objc_allocWithZone((Class)UIColor);
  v14 = swift_allocObject(&unk_10051D820, 32, 7);
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v10;
  v20[4] = sub_100323684;
  v21 = v14;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_100034978;
  v20[3] = &unk_10051D838;
  v15 = _Block_copy(v20);
  v16 = v21;
  v17 = v12;
  v18 = v10;
  v19 = objc_msgSend(v13, "initWithDynamicProvider:", v15, swift_release(v16).n128_f64[0]);

  _Block_release(v15);
  *(_QWORD *)(a1 + 240) = v19;
}

void *SyncedLyricsViewController.Specs.vision.unsafeMutableAddressor()
{
  if (qword_100557EA0 != -1)
    swift_once(&qword_100557EA0, sub_1003211F0);
  return &static SyncedLyricsViewController.Specs.vision;
}

uint64_t static SyncedLyricsViewController.Specs.vision.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100321694(&qword_100557EA0, (uint64_t)&static SyncedLyricsViewController.Specs.vision, (uint64_t)sub_1003211F0, a1);
}

void *sub_100321534()
{
  _BYTE v1[544];

  sub_100321D44((void (*)(_BYTE *))sub_10032157C, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.alternative, v1, 0x219uLL);
}

void sub_10032157C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_BYTE *)(a1 + 40) = -127;
  *(_QWORD *)(a1 + 160) = 1;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 28.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 24.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
}

void *SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor()
{
  if (qword_100557EA8 != -1)
    swift_once(&qword_100557EA8, sub_100321534);
  return &static SyncedLyricsViewController.Specs.alternative;
}

uint64_t static SyncedLyricsViewController.Specs.alternative.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100321694(&qword_100557EA8, (uint64_t)&static SyncedLyricsViewController.Specs.alternative, (uint64_t)sub_100321534, a1);
}

uint64_t sub_100321694@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_100322BA4(a2, a4);
}

id static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  return sub_100322BD8(a1, a2 & 1);
}

id static SyncedLyricsViewController.Specs.tapSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
}

id sub_1003217CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100321804(void *__src, const void *a2)
{
  _BYTE v4[544];
  _BYTE __dst[544];

  memcpy(v4, __src, 0x219uLL);
  memcpy(__dst, a2, 0x219uLL);
  return _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

id sub_100321858(void *a1, void *a2, void *a3)
{
  id v4;
  BOOL v5;
  void *v6;

  v4 = objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (id)-1)
  {
    v6 = a3;
  }
  else
  {
    v5 = v4 == (id)1;
    v6 = a3;
    if (v5)
      v6 = a2;
  }
  return v6;
}

uint64_t _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  double v5;
  char v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  _OWORD v20[3];
  _OWORD v21[3];
  _OWORD v22[3];
  _OWORD v23[3];
  _OWORD v24[3];
  __int128 v25[2];
  __int128 v26[2];
  _QWORD v27[4];
  char v28;
  CGRect v29;
  char v30;
  CGRect v31;

  if (*(double *)a1 != *(double *)a2)
    goto LABEL_33;
  sub_100322B8C((__int128 *)(a1 + 8), (uint64_t)v26);
  sub_100322B8C((__int128 *)(a2 + 8), (uint64_t)v25);
  sub_100322B8C(v26, (uint64_t)v27);
  v4 = v28;
  if (v28 < 0)
  {
    v28 &= ~0x80u;
    v7 = *(double *)v27;
    v8 = *(double *)&v27[1];
    v9 = *(double *)&v27[2];
    v10 = *(double *)&v27[3];
    sub_100322B8C(v25, (uint64_t)&v29);
    v11 = v30;
    if ((v30 & 0x80) == 0)
      goto LABEL_33;
    v30 &= ~0x80u;
    if ((v4 & 1) != 0)
    {
      if ((v11 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      if ((v11 & 1) != 0)
        goto LABEL_33;
      v31.origin.x = v7;
      v31.origin.y = v8;
      v31.size.width = v9;
      v31.size.height = v10;
      if (!CGRectEqualToRect(v31, v29))
        goto LABEL_33;
    }
  }
  else
  {
    v5 = *(double *)v27;
    sub_100322B8C(v25, (uint64_t)&v29);
    v6 = 0;
    if (v30 < 0 || v5 != v29.origin.x)
      return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  v6 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80))
    goto LABEL_33;
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88))
    goto LABEL_33;
  v12 = *(_OWORD *)(a1 + 112);
  v24[0] = *(_OWORD *)(a1 + 96);
  v24[1] = v12;
  v24[2] = *(_OWORD *)(a1 + 128);
  v13 = *(_OWORD *)(a2 + 112);
  v23[0] = *(_OWORD *)(a2 + 96);
  v23[1] = v13;
  v23[2] = *(_OWORD *)(a2 + 128);
  if ((static CGAffineTransform.== infix(_:_:)(v24, v23) & 1) == 0
    || *(double *)(a1 + 144) != *(double *)(a2 + 144)
    || *(double *)(a1 + 152) != *(double *)(a2 + 152)
    || *(_QWORD *)(a1 + 160) != *(_QWORD *)(a2 + 160)
    || (sub_1000DD108(0, (unint64_t *)&qword_100559510, NSObject_ptr),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 168), *(_QWORD *)(a2 + 168)) & 1) == 0))
  {
LABEL_33:
    v6 = 0;
    return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 184);
  if ((*(_BYTE *)(a1 + 184) & 1) == 0)
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176))
      v6 = 1;
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 192), *(_QWORD *)(a2 + 192)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 200), *(_QWORD *)(a2 + 200)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 208), *(_QWORD *)(a2 + 208)) & 1) != 0
        && *(double *)(a1 + 216) == *(double *)(a2 + 216)
        && *(double *)(a1 + 224) == *(double *)(a2 + 224)
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 232), *(_QWORD *)(a2 + 232)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 240), *(_QWORD *)(a2 + 240)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 248), *(_QWORD *)(a2 + 248)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 256), *(_QWORD *)(a2 + 256)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 264), *(_QWORD *)(a2 + 264)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 272), *(_QWORD *)(a2 + 272)) & 1) != 0)
      {
        v15 = *(_OWORD *)(a1 + 296);
        v22[0] = *(_OWORD *)(a1 + 280);
        v22[1] = v15;
        v22[2] = *(_OWORD *)(a1 + 312);
        v16 = *(_OWORD *)(a2 + 296);
        v21[0] = *(_OWORD *)(a2 + 280);
        v21[1] = v16;
        v21[2] = *(_OWORD *)(a2 + 312);
        if ((static CGAffineTransform.== infix(_:_:)(v22, v21) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 328), *(_QWORD *)(a2 + 328)) & 1) != 0
          && *(double *)(a1 + 336) == *(double *)(a2 + 336)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 344), *(_QWORD *)(a2 + 344)) & 1) != 0
          && *(double *)(a1 + 352) == *(double *)(a2 + 352)
          && *(double *)(a1 + 360) == *(double *)(a2 + 360)
          && *(double *)(a1 + 368) == *(double *)(a2 + 368)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 376), *(_QWORD *)(a2 + 376)) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 384), *(_QWORD *)(a2 + 384)) & 1) != 0
          && *(double *)(a1 + 392) == *(double *)(a2 + 392))
        {
          v17 = *(_OWORD *)(a1 + 416);
          v20[0] = *(_OWORD *)(a1 + 400);
          v20[1] = v17;
          v20[2] = *(_OWORD *)(a1 + 432);
          v18 = *(_OWORD *)(a2 + 416);
          v19[0] = *(_OWORD *)(a2 + 400);
          v19[1] = v18;
          v19[2] = *(_OWORD *)(a2 + 432);
          if ((static CGAffineTransform.== infix(_:_:)(v20, v19) & 1) != 0
            && *(double *)(a1 + 448) == *(double *)(a2 + 448)
            && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 456), *(_QWORD *)(a2 + 456)) & 1) != 0
            && *(double *)(a1 + 464) == *(double *)(a2 + 464)
            && *(double *)(a1 + 472) == *(double *)(a2 + 472)
            && *(double *)(a1 + 480) == *(double *)(a2 + 480)
            && *(_QWORD *)(a1 + 488) == *(_QWORD *)(a2 + 488)
            && *(double *)(a1 + 496) == *(double *)(a2 + 496)
            && *(double *)(a1 + 504) == *(double *)(a2 + 504)
            && *(double *)(a1 + 512) == *(double *)(a2 + 512)
            && *(double *)(a1 + 520) == *(double *)(a2 + 520)
            && *(double *)(a1 + 528) == *(double *)(a2 + 528))
          {
            v6 = ((*(_BYTE *)(a1 + 536) & 1) == 0) ^ *(_BYTE *)(a2 + 536);
            return v6 & 1;
          }
        }
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (*(_BYTE *)(a2 + 184))
    goto LABEL_38;
  return v6 & 1;
}

void *sub_100321D44@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  CGFloat v8;
  void *v9;
  CGFloat ty;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  CGFloat v19;
  void *v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  CGFloat v30;
  void *v31;
  CGFloat v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  CGFloat v41;
  void *v42;
  CGFloat v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  CGFloat v52;
  void *v53;
  CGFloat v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  CGFloat v63;
  void *v64;
  CGFloat v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  CGFloat v72;
  void *v73;
  CGFloat v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  CGFloat v83;
  void *v84;
  CGFloat v85;
  id v86;
  id v87;
  id v88;
  CGAffineTransform aBlock;
  _BYTE __src[537];

  *(_QWORD *)__src = 0x404E000000000000;
  *(_QWORD *)&__src[8] = 0x4028000000000000;
  *(_QWORD *)&__src[48] = 0;
  memset(&__src[16], 0, 25);
  __src[56] = 1;
  *(_QWORD *)&__src[64] = 0;
  __src[72] = 1;
  *(_OWORD *)&__src[80] = xmmword_100438870;
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  *(CGAffineTransform *)&__src[96] = aBlock;
  *(_OWORD *)&__src[144] = xmmword_100438880;
  *(_QWORD *)&__src[160] = 2;
  sub_1000DD108(0, (unint64_t *)&qword_100558268, UIFont_ptr);
  *(_QWORD *)&__src[168] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleLargeTitle, UIFontWeightBold);
  *(_QWORD *)&__src[176] = 0;
  __src[184] = 1;
  *(_QWORD *)&__src[192] = static UIFont.shortEmphasizedPreferredFont(forTextStyle:)(UIFontTextStyleTitle2);
  v3 = (void *)objc_opt_self(UIFont);
  *(_QWORD *)&__src[200] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
  *(_QWORD *)&__src[208] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
  *(_OWORD *)&__src[216] = xmmword_100438890;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "whiteColor");
  v6 = objc_msgSend(v4, "labelColor");
  v7 = objc_allocWithZone((Class)UIColor);
  v8 = COERCE_DOUBLE(swift_allocObject(&unk_10051D8C0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v8 + 16) = v6;
  *(_QWORD *)(*(_QWORD *)&v8 + 24) = v5;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v8;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051D8D8;
  v9 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v11 = v6;
  v12 = v5;
  v13 = objc_msgSend(v7, "initWithDynamicProvider:", v9, swift_release(*(_QWORD *)&ty).n128_f64[0]);

  _Block_release(v9);
  *(_QWORD *)&__src[232] = v13;
  v14 = objc_msgSend(v4, "whiteColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.35);

  v16 = objc_msgSend(v4, "labelColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.85);

  v18 = objc_allocWithZone((Class)UIColor);
  v19 = COERCE_DOUBLE(swift_allocObject(&unk_10051D910, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v19 + 16) = v17;
  *(_QWORD *)(*(_QWORD *)&v19 + 24) = v15;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v19;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051D928;
  v20 = _Block_copy(&aBlock);
  v21 = aBlock.ty;
  v22 = v17;
  v23 = v15;
  v24 = objc_msgSend(v18, "initWithDynamicProvider:", v20, swift_release(*(_QWORD *)&v21).n128_f64[0]);

  _Block_release(v20);
  *(_QWORD *)&__src[240] = v24;
  v25 = objc_msgSend(v4, "whiteColor");
  v26 = objc_msgSend(v25, "colorWithAlphaComponent:", 0.175);

  v27 = objc_msgSend(v4, "labelColor");
  v28 = objc_msgSend(v27, "colorWithAlphaComponent:", 0.4);

  v29 = objc_allocWithZone((Class)UIColor);
  v30 = COERCE_DOUBLE(swift_allocObject(&unk_10051D960, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v30 + 16) = v28;
  *(_QWORD *)(*(_QWORD *)&v30 + 24) = v26;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v30;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051D978;
  v31 = _Block_copy(&aBlock);
  v32 = aBlock.ty;
  v33 = v28;
  v34 = v26;
  v35 = objc_msgSend(v29, "initWithDynamicProvider:", v31, swift_release(*(_QWORD *)&v32).n128_f64[0]);

  _Block_release(v31);
  *(_QWORD *)&__src[248] = v35;
  v36 = objc_msgSend(v4, "whiteColor");
  v37 = objc_msgSend(v36, "colorWithAlphaComponent:", 0.35);

  v38 = objc_msgSend(v4, "labelColor");
  v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.85);

  v40 = objc_allocWithZone((Class)UIColor);
  v41 = COERCE_DOUBLE(swift_allocObject(&unk_10051D9B0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v41 + 16) = v39;
  *(_QWORD *)(*(_QWORD *)&v41 + 24) = v37;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v41;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051D9C8;
  v42 = _Block_copy(&aBlock);
  v43 = aBlock.ty;
  v44 = v39;
  v45 = v37;
  v46 = objc_msgSend(v40, "initWithDynamicProvider:", v42, swift_release(*(_QWORD *)&v43).n128_f64[0]);

  _Block_release(v42);
  *(_QWORD *)&__src[256] = v46;
  v47 = objc_msgSend(v4, "whiteColor");
  v48 = objc_msgSend(v47, "colorWithAlphaComponent:", 0.175);

  v49 = objc_msgSend(v4, "labelColor");
  v50 = objc_msgSend(v49, "colorWithAlphaComponent:", 0.65);

  v51 = objc_allocWithZone((Class)UIColor);
  v52 = COERCE_DOUBLE(swift_allocObject(&unk_10051DA00, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v52 + 16) = v50;
  *(_QWORD *)(*(_QWORD *)&v52 + 24) = v48;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v52;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051DA18;
  v53 = _Block_copy(&aBlock);
  v54 = aBlock.ty;
  v55 = v50;
  v56 = v48;
  v57 = objc_msgSend(v51, "initWithDynamicProvider:", v53, swift_release(*(_QWORD *)&v54).n128_f64[0]);

  _Block_release(v53);
  *(_QWORD *)&__src[264] = v57;
  v58 = objc_msgSend(v4, "whiteColor");
  v59 = objc_msgSend(v58, "colorWithAlphaComponent:", 0.4);

  v60 = objc_msgSend(v4, "labelColor");
  v61 = objc_msgSend(v60, "colorWithAlphaComponent:", 0.4);

  v62 = objc_allocWithZone((Class)UIColor);
  v63 = COERCE_DOUBLE(swift_allocObject(&unk_10051DA50, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v63 + 16) = v61;
  *(_QWORD *)(*(_QWORD *)&v63 + 24) = v59;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v63;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051DA68;
  v64 = _Block_copy(&aBlock);
  v65 = aBlock.ty;
  v66 = v61;
  v67 = v59;
  v68 = objc_msgSend(v62, "initWithDynamicProvider:", v64, swift_release(*(_QWORD *)&v65).n128_f64[0]);

  _Block_release(v64);
  *(_QWORD *)&__src[272] = v68;
  CGAffineTransformMakeScale(&aBlock, 0.98, 0.98);
  *(CGAffineTransform *)&__src[280] = aBlock;
  *(_QWORD *)&__src[328] = objc_msgSend(v4, "clearColor");
  *(_QWORD *)&__src[336] = 0x3FB999999999999ALL;
  *(_QWORD *)&__src[344] = objc_msgSend(v4, "whiteColor");
  *(_OWORD *)&__src[352] = xmmword_1004388A0;
  *(_QWORD *)&__src[368] = 0x3FD999999999999ALL;
  v69 = objc_msgSend(v4, "whiteColor");
  v70 = objc_msgSend(v4, "tintColor");
  v71 = objc_allocWithZone((Class)UIColor);
  v72 = COERCE_DOUBLE(swift_allocObject(&unk_10051DAA0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v72 + 16) = v70;
  *(_QWORD *)(*(_QWORD *)&v72 + 24) = v69;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v72;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051DAB8;
  v73 = _Block_copy(&aBlock);
  v74 = aBlock.ty;
  v75 = v70;
  v76 = v69;
  v77 = objc_msgSend(v71, "initWithDynamicProvider:", v73, swift_release(*(_QWORD *)&v74).n128_f64[0]);

  _Block_release(v73);
  *(_QWORD *)&__src[376] = v77;
  v78 = objc_msgSend(v4, "whiteColor");
  v79 = objc_msgSend(v78, "colorWithAlphaComponent:", 0.175);

  v80 = objc_msgSend(v4, "tintColor");
  v81 = objc_msgSend(v80, "colorWithAlphaComponent:", 0.175);

  v82 = objc_allocWithZone((Class)UIColor);
  v83 = COERCE_DOUBLE(swift_allocObject(&unk_10051DAF0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v83 + 16) = v81;
  *(_QWORD *)(*(_QWORD *)&v83 + 24) = v79;
  *(_QWORD *)&aBlock.tx = sub_100323684;
  aBlock.ty = v83;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100034978;
  *(_QWORD *)&aBlock.d = &unk_10051DB08;
  v84 = _Block_copy(&aBlock);
  v85 = aBlock.ty;
  v86 = v81;
  v87 = v79;
  v88 = objc_msgSend(v82, "initWithDynamicProvider:", v84, swift_release(*(_QWORD *)&v85).n128_f64[0]);

  _Block_release(v84);
  *(_QWORD *)&__src[384] = v88;
  *(_QWORD *)&__src[392] = 0x403E000000000000;
  CGAffineTransformMakeScale(&aBlock, 0.95, 0.95);
  *(CGAffineTransform *)&__src[400] = aBlock;
  *(_QWORD *)&__src[448] = 0x3FEB333333333333;
  *(_QWORD *)&__src[456] = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.08);
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)&__src[464] = _Q0;
  *(_QWORD *)&__src[480] = 0x401C000000000000;
  *(_QWORD *)&__src[488] = 3;
  *(_OWORD *)&__src[496] = xmmword_1004388B0;
  *(_OWORD *)&__src[512] = xmmword_1004388C0;
  *(_QWORD *)&__src[528] = 0x3FD0000000000000;
  __src[536] = 1;
  if (a1)
  {
    swift_retain(a2);
    a1(__src);
    sub_1000DB26C((uint64_t)a1, a2);
    sub_1000DB26C((uint64_t)a1, a2);
  }
  return memcpy(a3, __src, 0x219uLL);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  objc_class *v18;
  char *v19;
  double *v20;
  double *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  uint64_t v36;
  void **aBlock;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v8 = a1 & 1;
  if ((a1 & 1) != 0)
    v9 = 24.0;
  else
    v9 = 50.0;
  if ((a1 & 1) != 0)
    v10 = 322.0;
  else
    v10 = 300.0;
  v11 = 1.0;
  if ((a1 & 1) != 0)
    v12 = 1.0;
  else
    v12 = 2.0;
  v13 = 0.0;
  v14 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v12, v10, v9, 0.0, 0.0);
  if (v8)
  {
    v15 = 0.55;
    v16 = 0.2;
    v17 = 0.0;
  }
  else
  {
    v15 = 0.25;
    v13 = 0.1;
    v16 = 0.3;
    v11 = 0.1;
    v17 = 0.25;
  }
  v18 = (objc_class *)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint1];
  *v20 = v17;
  v20[1] = v13;
  v21 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint2];
  *v21 = v15;
  v21[1] = v11;
  v44.receiver = v19;
  v44.super_class = v18;
  v22 = objc_msgSendSuper2(&v44, "init");
  v23 = (void *)objc_opt_self(UIView);
  v42 = a2;
  v43 = a3;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_10015F6F8;
  v41 = &unk_10051D860;
  v24 = _Block_copy(&aBlock);
  v25 = v43;
  v26 = v22;
  swift_retain(a3);
  swift_release(v25);
  objc_msgSend(v23, "_animateWithDuration:delay:options:factory:animations:completion:", 0, v26, v24, 0, v16, v13);
  _Block_release(v24);

  objc_msgSend(v14, "settlingDuration");
  v28 = v27;
  objc_msgSend(v14, "mass");
  v30 = v29;
  objc_msgSend(v14, "stiffness");
  v32 = v31;
  objc_msgSend(v14, "damping");
  v34 = v33;
  v42 = a4;
  v43 = a5;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_10015F6F8;
  v41 = &unk_10051D888;
  v35 = _Block_copy(&aBlock);
  v36 = v43;
  swift_retain(a5);
  swift_release(v36);
  objc_msgSend(v23, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v35, 0, v28, v13, v30, v32, v34, 0.0);

  _Block_release(v35);
}

uint64_t sub_100322B8C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100322BA4(uint64_t a1, uint64_t a2)
{
  _s5SpecsVwcp(a2, a1);
  return a2;
}

id sub_100322BD8(uint64_t a1, char a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  if ((a2 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v2 = (*(double *)&a1 + -0.2) / 0.55;
  if (*(double *)&a1 > 0.75)
    v2 = 1.0;
  v3 = 0.0;
  if (*(double *)&a1 >= 0.2)
    v3 = v2;
  v4 = (1.0 - v3) * 0.12 + 0.78;
  v5 = v3 * 0.27 + 0.48;
  sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(v4, v5);
}

void _s5SpecsVwxx(id *a1)
{

}

uint64_t _s5SpecsVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v5 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v7 = *(void **)(a2 + 192);
  v6 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 200) = v6;
  v8 = *(void **)(a2 + 208);
  *(_QWORD *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v9 = *(void **)(a2 + 232);
  v10 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v9;
  *(_QWORD *)(a1 + 240) = v10;
  v40 = *(void **)(a2 + 248);
  v41 = *(void **)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v40;
  *(_QWORD *)(a1 + 256) = v41;
  v42 = *(void **)(a2 + 264);
  v43 = *(void **)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v42;
  *(_QWORD *)(a1 + 272) = v43;
  v11 = *(_OWORD *)(a2 + 280);
  v12 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v12;
  *(_OWORD *)(a1 + 280) = v11;
  v13 = *(_QWORD *)(a2 + 336);
  v39 = *(void **)(a2 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  *(_QWORD *)(a1 + 336) = v13;
  v15 = *(void **)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v15;
  *(_QWORD *)(a1 + 352) = v14;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  v16 = *(void **)(a2 + 376);
  v17 = *(void **)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v16;
  *(_QWORD *)(a1 + 384) = v17;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v18 = *(_OWORD *)(a2 + 400);
  v19 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v19;
  *(_OWORD *)(a1 + 400) = v18;
  v20 = *(void **)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v20;
  v21 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v21;
  v22 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v22;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  v23 = v5;
  v24 = v7;
  v25 = v6;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v33 = v39;
  v34 = v15;
  v35 = v16;
  v36 = v17;
  v37 = v20;
  return a1;
}

uint64_t _s5SpecsVwca(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(void **)(a2 + 168);
  v9 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v8;
  v10 = v8;

  v11 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v11;
  v12 = *(void **)(a2 + 192);
  v13 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 200);
  v16 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 208);
  v19 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  v20 = v18;

  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v21 = *(void **)(a2 + 232);
  v22 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = v21;
  v23 = v21;

  v24 = *(void **)(a2 + 240);
  v25 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v24;
  v26 = v24;

  v27 = *(void **)(a2 + 248);
  v28 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v27;
  v29 = v27;

  v30 = *(void **)(a2 + 256);
  v31 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v30;
  v32 = v30;

  v33 = *(void **)(a2 + 264);
  v34 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v33;
  v35 = v33;

  v36 = *(void **)(a2 + 272);
  v37 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v36;
  v38 = v36;

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v39 = *(void **)(a2 + 328);
  v40 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  v41 = v39;

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v42 = *(void **)(a2 + 344);
  v43 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v42;
  v44 = v42;

  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v45 = *(void **)(a2 + 376);
  v46 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = v45;
  v47 = v45;

  v48 = *(void **)(a2 + 384);
  v49 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v48;
  v50 = v48;

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v51 = *(void **)(a2 + 456);
  v52 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = v51;
  v53 = v51;

  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

void *_s5SpecsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x219uLL);
}

uint64_t _s5SpecsVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __int128 v22;
  void *v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v6 = *(_QWORD *)(a2 + 168);
  v7 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v6;

  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v8 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  v9 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);

  v10 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);

  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v11 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v12 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  v13 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);

  v14 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);

  v15 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v16 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v17 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v17;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v18 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v19 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);

  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v20 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);

  v21 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v22 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v22;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v23 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);

  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v24 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v24;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

uint64_t _s5SpecsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 537))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5SpecsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 536) = 0;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 537) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 168) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 537) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs()
{
  return &type metadata for SyncedLyricsViewController.Specs;
}

uint64_t _s5SpecsV20SelectedLinePositionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5SpecsV20SelectedLinePositionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1003235F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_100323604(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_100323614(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs.SelectedLinePosition()
{
  return &type metadata for SyncedLyricsViewController.Specs.SelectedLinePosition;
}

uint64_t _s5SpecsV27CustomCurveAnimationFactoryCMa()
{
  return objc_opt_self(_TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory);
}

uint64_t sub_100323658()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100323688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100323698(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_1003236A0(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (id)1)
    v5 = v2;
  else
    v5 = v3;
  if (v4 == (id)-1)
    v6 = v3;
  else
    v6 = v5;
  return v6;
}

_QWORD *sub_100323748(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

BOOL sub_1003237F4(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100323854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      type metadata accessor for SyncedLyricsLineView();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1003239C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(_QWORD *)(a2 + 40 + 8 * result++);
    if (v6 == a1)
      return result;
  }
  return 0;
}

uint64_t sub_100323A2C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  unint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;

  v3 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v5 = *(id *)(a2 + 32);
    }
    v6 = v5;
    type metadata accessor for SyncedLyricsLineView();
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      v8 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v8 == v4)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (v8 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v10 = *(id *)(a2 + 32 + 8 * v8);
      }
      v11 = v10;
      v12 = static NSObject.== infix(_:_:)(v10, v3);

      if ((v12 & 1) != 0)
        return v8;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    result = swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100323BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100011694(a1, &qword_10055A300);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_10051E4C0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18);
}

uint64_t sub_100323D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100323D38(a1, a2, a3, (uint64_t)&unk_10051E150, &qword_10055A500);
}

uint64_t sub_100323D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100323D38(a1, a2, a3, (uint64_t)&unk_10051DD68, &qword_10055A4B0);
}

uint64_t sub_100323D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v24[4];

  v10 = type metadata accessor for TaskPriority(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10);
  if ((_DWORD)v12 == 1)
  {
    sub_100011694(a1, &qword_10055A300);
    v13 = 7168;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
    {
LABEL_3:
      v15 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v14);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v19 = v18;
      swift_unknownObjectRelease(v14);
      goto LABEL_6;
    }
  }
  else
  {
    v20 = TaskPriority.rawValue.getter(v12);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    v13 = v20 | 0x1C00;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
      goto LABEL_3;
  }
  v17 = 0;
  v19 = 0;
LABEL_6:
  v21 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  sub_10000B4C8(a5);
  if (v19 | v17)
  {
    v24[0] = 0;
    v24[1] = 0;
    v22 = v24;
    v24[2] = v17;
    v24[3] = v19;
  }
  else
  {
    v22 = 0;
  }
  return swift_task_create(v13, v22);
}

uint64_t SyncedLyricsSharingTransitionInfo.line.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100323EA0(v1, a1);
}

uint64_t sub_100323EA0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Lyrics.TextLine(a2, a1);
  return a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.line.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100323EE4(a1, v1);
}

uint64_t sub_100323EE4(uint64_t a1, uint64_t a2)
{
  assignWithTake for Lyrics.TextLine(a2, a1);
  return a2;
}

id SyncedLyricsSharingTransitionInfo.initialView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 104);
}

void SyncedLyricsSharingTransitionInfo.initialView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.initialView.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

double SyncedLyricsSharingTransitionInfo.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void SyncedLyricsSharingTransitionInfo.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[15] = a1;
  v4[16] = a2;
  v4[17] = a3;
  v4[18] = a4;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.frame.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 176) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_retain(*(_QWORD *)(v0 + 216));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 216));
  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_retain(*(_QWORD *)(v0 + 232));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 232));
  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v6, 1, 0);
  *v3 = a1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
  if (v4)
  {
    swift_beginAccess(v4 + 88, &v5, 1, 0);
    *(_BYTE *)(v4 + 88) = a1 & 1;
  }
}

void (*SyncedLyricsViewController.isPlayingSpatial.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1003241B8;
}

void sub_1003241B8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v5)
    {
      v6 = *(_BYTE *)(v4 + v3[4]);
      swift_beginAccess(v5 + 88, v3, 1, 0);
      *(_BYTE *)(v5 + 88) = v6;
    }
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.isFullScreen.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isFullScreen.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.isFullScreen.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, a1, 33, 0);
  return j__swift_endAccess;
}

double SyncedLyricsViewController.bottomTapAreaHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.bottomTapAreaHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  _BYTE v4[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.bottomTapAreaHeight.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, a1, 33, 0);
  return j_j__swift_endAccess;
}

double SyncedLyricsViewController.containerHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.containerHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_100328C28();
}

void (*SyncedLyricsViewController.containerHeight.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_1003244DC;
}

void sub_1003244DC(uint64_t a1)
{
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v1 = *(void **)a1;
  v2 = *(double *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(double *)(v4 + v3);
  *(double *)(v4 + v3) = v2;
  if (v2 != v5)
    sub_100328C28();
  free(v1);
}

id sub_100324520(uint64_t a1)
{
  char *v1;
  char *v2;
  id result;
  unsigned __int8 *v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *i;
  char *v12;
  char *v13;
  void **v14;
  void (*v15)(__int128 *, char);
  void **v16;
  void *v17;
  _QWORD *v18;
  uint64_t ObjectType;
  uint64_t v20;
  char *v21;
  void (*v22)(_BYTE *, uint64_t, _QWORD *);
  id v23;
  void *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v29[32];
  _BYTE v30[544];
  _BYTE v31[544];
  char v32[24];
  char v33[24];
  _BYTE v34[544];
  _BYTE __dst[552];

  v2 = v1;
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
  {
    v5 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
    swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v33, 0, 0);
    memcpy(__dst, v5, 0x219uLL);
    sub_10030ED5C((uint64_t)__dst);
    v6 = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)__dst, a1);
    result = (id)sub_10030EE2C((uint64_t)__dst);
    if ((v6 & 1) == 0)
    {
      sub_100328C28();
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "setShowsVerticalScrollIndicator:", v5[536]);
      v7 = (uint64_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v32, 0, 0);
      v8 = *v7;
      if ((unint64_t)*v7 >> 62)
      {
        if (v8 < 0)
          v25 = *v7;
        else
          v25 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        result = (id)_CocoaArrayWrapper.endIndex.getter(v25);
        v9 = (uint64_t)result;
        if (result)
          goto LABEL_5;
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (id)swift_bridgeObjectRetain();
        if (v9)
        {
LABEL_5:
          v28 = v9 - 1;
          if (v9 < 1)
          {
            __break(1u);
            return result;
          }
          v10 = 0;
          v26 = v5;
          v27 = v8 & 0xC000000000000001;
          if ((v8 & 0xC000000000000001) == 0)
            goto LABEL_8;
LABEL_7:
          for (i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
                ;
                i = (char *)*(id *)(v8 + 8 * v10 + 32))
          {
            v12 = i;
            memcpy(v30, v5, 0x219uLL);
            v13 = &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
            memcpy(v31, &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], 0x219uLL);
            memmove(&v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], v5, 0x219uLL);
            sub_10030ED5C((uint64_t)v30);
            sub_10030ED5C((uint64_t)v30);
            sub_10030EE2C((uint64_t)v31);
            v15 = sub_10031BD80((uint64_t)v29);
            if (*v14)
            {
              v16 = v14;
              memcpy(v34, v13, 0x219uLL);
              v17 = *v16;
              v18 = v16[1];
              ObjectType = swift_getObjectType();
              v20 = v8;
              v21 = v2;
              v22 = (void (*)(_BYTE *, uint64_t, _QWORD *))v18[2];
              sub_10030ED5C((uint64_t)v34);
              v23 = v17;
              v22(v34, ObjectType, v18);
              v2 = v21;
              v8 = v20;
              v24 = *v16;
              *v16 = v17;
              v16[1] = v18;

            }
            v15((__int128 *)v29, 0);
            sub_10030EE2C((uint64_t)v30);
            sub_100329EE8(v12);

            if (v28 == v10)
              break;
            ++v10;
            v5 = v26;
            if (v27)
              goto LABEL_7;
LABEL_8:
            ;
          }
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *SyncedLyricsViewController.specs.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];

  v3 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v3, v5, 0, 0);
  memcpy(__dst, v3, 0x219uLL);
  sub_10030ED5C((uint64_t)__dst);
  return memcpy(a1, __dst, 0x219uLL);
}

uint64_t SyncedLyricsViewController.specs.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];
  _BYTE v7[544];

  v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v5, 1, 0);
  memcpy(__dst, v3, 0x219uLL);
  memcpy(v7, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10030ED5C((uint64_t)__dst);
  sub_10030ED5C((uint64_t)a1);
  sub_10030EE2C((uint64_t)v7);
  sub_100324520((uint64_t)__dst);
  sub_10030EE2C((uint64_t)a1);
  return sub_10030EE2C((uint64_t)__dst);
}

void (*SyncedLyricsViewController.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  const void *v5;

  v3 = malloc(0xF08uLL);
  *a1 = v3;
  v3[479] = v1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v3[480] = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v5 = (const void *)(v1 + v4);
  swift_beginAccess(v5, v3 + 476, 1, 0);
  memcpy(v3, v5, 0x219uLL);
  memcpy(v3 + 204, v5, 0x219uLL);
  sub_10030ED5C((uint64_t)v3);
  return sub_100324978;
}

void sub_100324978(uint64_t a1, char a2)
{
  _QWORD *v2;
  const void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD **)a1;
  v3 = (const void *)(*(_QWORD *)a1 + 1632);
  v4 = (void *)(*(_QWORD *)a1 + 2176);
  v5 = (void *)(*(_QWORD *)a1 + 2720);
  if ((a2 & 1) != 0)
  {
    v6 = (void *)(v2[479] + v2[480]);
    memcpy(v2 + 408, v3, 0x219uLL);
    memcpy(v2 + 68, v6, 0x219uLL);
    memcpy(v5, v6, 0x219uLL);
    memcpy(v6, v3, 0x219uLL);
    sub_10030ED5C((uint64_t)(v2 + 408));
    sub_10030ED5C((uint64_t)(v2 + 408));
    sub_10030ED5C((uint64_t)(v2 + 68));
    sub_10030EE2C((uint64_t)v5);
    sub_100324520((uint64_t)(v2 + 68));
    sub_10030EE2C((uint64_t)(v2 + 408));
    sub_10030EE2C((uint64_t)(v2 + 68));
    memcpy(v4, v3, 0x219uLL);
    v7 = (uint64_t)v4;
  }
  else
  {
    v8 = (void *)(v2[479] + v2[480]);
    memcpy((void *)(*(_QWORD *)a1 + 2176), v3, 0x219uLL);
    memcpy(v2 + 136, v8, 0x219uLL);
    memcpy(v5, v8, 0x219uLL);
    memcpy(v8, v3, 0x219uLL);
    sub_10030ED5C((uint64_t)(v2 + 136));
    sub_10030ED5C((uint64_t)v4);
    sub_10030EE2C((uint64_t)v5);
    sub_100324520((uint64_t)(v2 + 136));
    sub_10030EE2C((uint64_t)v4);
    v7 = (uint64_t)(v2 + 136);
  }
  sub_10030EE2C(v7);
  free(v2);
}

uint64_t SyncedLyricsViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t SyncedLyricsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*SyncedLyricsViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100324C0C;
}

void sub_100324C0C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.mode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v3, 0, 0);
  return *v1;
}

void sub_100324CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v4, v35, 0, 0);
  if (*v4)
  {
    if (a1 && *v4 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v34, 1, 0);
  *v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1002EBC30((uint64_t)_swiftEmptyArrayStorage);
    v6 = v28;
  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
  }
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews, v33, 1, 0);
  *v7 = v6;
  swift_bridgeObjectRelease();
  v8 = *v4;
  if (*v4)
  {
    v9 = swift_allocObject(&unk_10051DB58, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v32, 0, 0);
    v11 = v10[66];
    v12 = v10[19];
    v13 = v10[20];
    v14 = (char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v31, 0, 0);
    v15 = *v14;
    v16 = type metadata accessor for SyncedLyricsManager();
    v17 = swift_allocObject(v16, 152, 7);
    *(_QWORD *)(v17 + 72) = 0;
    v18 = swift_unknownObjectWeakInit(v17 + 64);
    *(_QWORD *)(v17 + 80) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v17 + 96) = 0u;
    *(_OWORD *)(v17 + 112) = 0u;
    *(_OWORD *)(v17 + 128) = 0u;
    *(_QWORD *)(v17 + 144) = 0;
    *(_QWORD *)(v17 + 16) = v8;
    *(_QWORD *)(v17 + 24) = sub_100334204;
    *(_QWORD *)(v17 + 32) = v9;
    *(_QWORD *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v12;
    *(_QWORD *)(v17 + 56) = v13;
    swift_beginAccess(v18, v30, 1, 0);
    *(_QWORD *)(v17 + 72) = &protocol witness table for SyncedLyricsViewController;
    swift_unknownObjectWeakAssign(v17 + 64, v2);
    *(_BYTE *)(v17 + 88) = v15;
    v19 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = v17;
    swift_retain_n(v8, 2);
    swift_retain(v9);
    swift_release(v20);
    sub_1003300C4();
    sub_10032A0F4(v8);
    v21 = *(_QWORD *)(v2 + v19);
    if (v21)
    {
      v22 = swift_allocObject(&unk_10051DB58, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16);
      swift_beginAccess(v21 + 96, v29, 1, 0);
      v23 = *(_QWORD *)(v21 + 96);
      v24 = *(_QWORD *)(v21 + 104);
      *(_QWORD *)(v21 + 96) = sub_100334174;
      *(_QWORD *)(v21 + 104) = v22;
      swift_retain(v21);
      swift_retain_n(v22, 2);
      sub_1000DB26C(v23, v24);
      sub_10031EB2C();
      swift_release_n(v22, 2);
      swift_release(v21);
    }
    v25 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v26, "setPaused:", sub_10032B090() & 1);
      swift_release(v8);

    }
    else
    {
      swift_release(v8);
    }
  }
  else
  {
    v27 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v27)
      objc_msgSend(v27, "setPaused:", 1);
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = 0;
  }
  swift_release(v9);
}

double sub_100325030(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v15;
  _BYTE v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0.0;
  v5 = (void *)Strong;
  v6 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, &v15, 0, 0);
  if (*(_QWORD *)v6 && *(_BYTE *)(*(_QWORD *)v6 + 56) == 2)
  {
    v7 = (a2 + -0.2) / 0.55;
    if (a2 > 0.75)
      v7 = 1.0;
    if (a2 < 0.2)
      v7 = 0.0;
    v8 = (1.0 - v7) * 0.12 + 0.78;
    v9 = v7 * 0.27 + 0.48;
    sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
    v10 = UISpringTimingParameters.init(dampingRatio:response:)(v8, v9);
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  v11 = v10;

  objc_msgSend(v11, "settlingDuration");
  v13 = v12;

  return v13;
}

uint64_t SyncedLyricsViewController.lyrics.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v3, 0, 0);
  return swift_retain(*v1);
}

double SyncedLyricsViewController.lyrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  sub_100324CC4(v4);
  swift_release(a1);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void (*SyncedLyricsViewController.lyrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *v5;
  v3[3] = *v5;
  swift_retain(v6);
  return sub_1003252E0;
}

void sub_1003252E0(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)a1;
  v4 = (uint64_t *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(_QWORD *)(v6 + v5);
  *(_QWORD *)(v6 + v5) = *v4;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_100324CC4(v7);
    swift_release(v7);
    swift_release(v3);
    v7 = *v4;
  }
  else
  {
    swift_retain(v3);
    sub_100324CC4(v7);
    swift_release(v3);
  }
  swift_release(v7);
  free(v2);
}

void sub_100325374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  double v16;
  _BYTE *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v33, 0, 0);
  sub_100328FD4(v4, (uint64_t)&v30);
  if (v31)
  {
    sub_1000B47A8(&v30, (uint64_t)v34);
    sub_100328FD4(a1, (uint64_t)&v30);
    v5 = v31;
    if (v31)
    {
      v6 = v32;
      sub_10000D900(&v30, v31);
      v7 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      v9 = v8;
      v10 = v7();
      swift_release(v9);
      sub_100011758(&v30);
      v11 = v35;
      v12 = v36;
      sub_10000D900(v34, v35);
      v13 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
      v15 = v14;
      v16 = v13();
      swift_release(v15);
      if (vabdd_f64(v10, v16) <= 0.5)
      {
        v17 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
        swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, &v29, 0, 0);
        if (*v17 != 2)
        {
          v18 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
          if (v18)
          {
            v19 = v18;
            objc_msgSend(v19, "setPaused:", sub_10032B090() & 1);

          }
          sub_100011758(v34);
          return;
        }
      }
    }
    else
    {
      sub_100011694((uint64_t)&v30, &qword_10055A2F0);
    }
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v23)
    {
      v24 = swift_allocObject(&unk_10051DB58, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16);
      swift_beginAccess(v23 + 96, &v30, 1, 0);
      v25 = *(_QWORD *)(v23 + 96);
      v26 = *(_QWORD *)(v23 + 104);
      *(_QWORD *)(v23 + 96) = sub_100334174;
      *(_QWORD *)(v23 + 104) = v24;
      swift_retain(v23);
      swift_retain_n(v24, 2);
      sub_1000DB26C(v25, v26);
      sub_10031EB2C();
      swift_release_n(v24, 2);
      swift_release(v23);
    }
    sub_100011758(v34);
  }
  else
  {
    sub_100011694((uint64_t)&v30, &qword_10055A2F0);
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v20)
    {
      swift_beginAccess(v20 + 96, v34, 1, 0);
      v21 = *(_QWORD *)(v20 + 96);
      v22 = *(_QWORD *)(v20 + 104);
      *(_QWORD *)(v20 + 96) = 0;
      *(_QWORD *)(v20 + 104) = 0;
      swift_retain(v20);
      sub_1000DB26C(v21, v22);
      sub_10031EB2C();
      swift_release(v20);
    }
  }
  v27 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v28, "setPaused:", sub_10032B090() & 1);

  }
}

double sub_100325640(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = 0.0;
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
    swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v17, 0, 0);
    sub_100328FD4(v5, (uint64_t)v18);

    v6 = v19;
    if (v19)
    {
      v7 = v20;
      sub_10000D900(v18, v19);
      v8 = *(_QWORD *)(v6 - 8);
      __chkstk_darwin();
      v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *))(v8 + 16))(v10);
      sub_100011694((uint64_t)v18, &qword_10055A2F0);
      v11 = (double (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      v13 = v12;
      v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v6);
      v3 = v11(v14);
      swift_release(v13);
    }
    else
    {
      sub_100011694((uint64_t)v18, &qword_10055A2F0);
    }
  }
  return v3;
}

uint64_t SyncedLyricsViewController.timingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100328FD4(v3, a1);
}

uint64_t SyncedLyricsViewController.timingProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  _BYTE v6[24];
  _BYTE v7[40];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v6, 0, 0);
  sub_100328FD4(v3, (uint64_t)v7);
  swift_beginAccess(v3, v5, 33, 0);
  sub_10032901C(a1, v3);
  swift_endAccess(v5);
  sub_100325374((uint64_t)v7);
  sub_100011694(a1, &qword_10055A2F0);
  return sub_100011694((uint64_t)v7, &qword_10055A2F0);
}

void (*SyncedLyricsViewController.timingProvider.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  v3[21] = v1;
  v3[22] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3 + 18, 0, 0);
  sub_100328FD4(v5, (uint64_t)v3);
  return sub_100325900;
}

void sub_100325900(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  v4 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v5 = v2[21] + v2[22];
    sub_100328FD4(*a1, v3);
    sub_100328FD4(v5, v4);
    swift_beginAccess(v5, v2 + 15, 33, 0);
    sub_10032901C(v3, v5);
    swift_endAccess(v2 + 15);
    sub_100325374(v4);
    sub_100011694(v3, &qword_10055A2F0);
    sub_100011694(v4, &qword_10055A2F0);
    v6 = (uint64_t)v2;
  }
  else
  {
    v7 = v2[21] + v2[22];
    sub_100328FD4(v7, v3);
    swift_beginAccess(v7, v4, 33, 0);
    sub_10032901C((uint64_t)v2, v7);
    swift_endAccess(v4);
    sub_100325374(v3);
    sub_100011694((uint64_t)v2, &qword_10055A2F0);
    v6 = v3;
  }
  sub_100011694(v6, &qword_10055A2F0);
  free(v2);
}

uint64_t SyncedLyricsViewController.shareHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, v4, 0, 0);
  v2 = *v1;
  sub_1000DB0D8(*v1, v1[1]);
  return v2;
}

uint64_t SyncedLyricsViewController.shareHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_1000DB26C(v6, v7);
}

uint64_t (*SyncedLyricsViewController.shareHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  char v49[24];
  objc_super v50;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_10000B4C8(&qword_10055A300);
  __chkstk_darwin();
  v4 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for SyncedLyricsViewController();
  v50.receiver = v0;
  v50.super_class = v5;
  objc_msgSendSuper2(&v50, "viewDidLoad");
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  objc_msgSend(v6, "setPreservesSuperviewLayoutMargins:", 1);

  objc_msgSend(v1, "setViewRespectsSystemMinimumLayoutMargins:", 0);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v11, v13, v15, v17);
  v19 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] = v18;

  objc_msgSend(*(id *)&v1[v19], "setClipsToBounds:", 0);
  objc_msgSend(*(id *)&v1[v19], "setIndicatorStyle:", 2);
  objc_msgSend(*(id *)&v1[v19], "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)&v1[v19], "setDelegate:", v1);
  objc_msgSend(*(id *)&v1[v19], "setMultipleTouchEnabled:", 0);
  objc_msgSend(*(id *)&v1[v19], "setShowsVerticalScrollIndicator:", v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs + 536], swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v49, 0, 0).n128_f64[0]);
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v1[v19]);

  v23 = (void *)objc_opt_self(NSNotificationCenter);
  v24 = objc_msgSend(v23, "defaultCenter");
  v25 = NSNotificationCenter.notifications(named:object:)(UISceneDidEnterBackgroundNotification, 0);

  v26 = objc_msgSend(v23, "defaultCenter");
  v48 = NSNotificationCenter.notifications(named:object:)(UISceneWillEnterForegroundNotification, 0);

  v27 = sub_10000B4C8(&qword_10055A310);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_100330DE4, 0, ObjectType);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v29);
  v30 = type metadata accessor for TaskPriority(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v4, 1, 1, v30);
  v32 = (uint64_t)v4;
  v33 = swift_allocObject(&unk_10051DB58, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  type metadata accessor for MainActor(0);
  swift_retain(v25);
  swift_retain(v33);
  v35 = static MainActor.shared.getter(v34);
  v36 = (_QWORD *)swift_allocObject(&unk_10051DB80, 48, 7);
  v36[2] = v35;
  v36[3] = &protocol witness table for MainActor;
  v36[4] = v25;
  v36[5] = v33;
  swift_release(v33);
  v37 = sub_100323BB4(v32, (uint64_t)&unk_10055A320, (uint64_t)v36);
  v38 = swift_release(v37);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v31)(v32, 1, 1, v30, v38);
  v39 = v48;
  v40 = swift_allocObject(&unk_10051DB58, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16);
  swift_retain(v39);
  swift_retain(v40);
  v42 = static MainActor.shared.getter(v41);
  v43 = (_QWORD *)swift_allocObject(&unk_10051DBA8, 48, 7);
  v43[2] = v42;
  v43[3] = &protocol witness table for MainActor;
  v43[4] = v39;
  v43[5] = v40;
  swift_release(v40);
  v44 = sub_100323BB4(v32, (uint64_t)&unk_10055A330, (uint64_t)v43);
  swift_release(v44);
  v45 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v45, "setDelegate:", v1);
  objc_msgSend(v45, "addTarget:action:", v1, "bottomTapHandler");
  v46 = objc_msgSend(v1, "view");
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v46, "addGestureRecognizer:", v45);

    swift_release(v39);
    swift_release(v25);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100326040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10055A510);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10055A518);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v16;
  v5[33] = v17;
  return swift_task_switch(sub_100326178, v16, v17);
}

uint64_t sub_100326178()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v1 = v0[26];
  v16 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[15];
  v17 = v0[16] + 16;
  v0[11] = v4;
  v5 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v6 = sub_1000DD108(0, &qword_10055A528, UIWindowScene_ptr);
  v0[34] = v6;
  v7 = sub_10001254C(&qword_10055A530, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v8 = swift_retain(v4);
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_10055A580, 0, v5, v6, v7, v8);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v9 = AsyncCompactMapSequence.transform.getter(v3);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v9, v11, v5, v6, v7);
  swift_beginAccess(v17, v0 + 8, 0, 0);
  v13 = static MainActor.shared.getter(v12);
  v0[35] = v13;
  v18 = (char *)&dword_10055A538 + dword_10055A538;
  v14 = (_QWORD *)swift_task_alloc(unk_10055A53C);
  v0[36] = v14;
  *v14 = v0;
  v14[1] = sub_10032633C;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v18)(v13, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_10032633C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 280);
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_10032639C, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_10032639C()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v33 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 208);
    v37 = *(_QWORD *)(v0 + 176);
    v36 = *(_QWORD *)(v0 + 184);
    v38 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v34, *(_QWORD *)(v0 + 216));
    swift_release(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_11;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        if (qword_100557E50 != -1)
          swift_once(&qword_100557E50, sub_1002F7F50);
        v9 = type metadata accessor for Logger(0);
        v10 = sub_10000D78C(v9, (uint64_t)static Logger.lyrics);
        v11 = Logger.logObject.getter(v10);
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v13 = 0;
          swift_slowDealloc(v13, -1, -1);
        }
        v14 = *(_QWORD *)(v0 + 176);
        v15 = *(_QWORD *)(v0 + 152);
        v42 = *(_QWORD *)(v0 + 168);
        v43 = *(_QWORD *)(v0 + 160);
        v16 = *(_QWORD *)(v0 + 136);
        v41 = *(_QWORD *)(v0 + 144);
        v17 = *(_QWORD *)(v0 + 128);

        v18 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
        v26 = (void *)static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25);
        *(_QWORD *)(v0 + 48) = sub_1003341FC;
        *(_QWORD *)(v0 + 56) = v17;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_10015F6F8;
        *(_QWORD *)(v0 + 40) = &unk_10051E4D8;
        v27 = _Block_copy((const void *)(v0 + 16));
        swift_retain(v17);
        static DispatchQoS.unspecified.getter(v28);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v29 = sub_10001254C((unint64_t *)&unk_10055A540, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v30 = sub_10000B4C8(&qword_100558B58);
        v31 = sub_1001630EC((unint64_t *)&qword_10055A550, &qword_100558B58);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v30, v31, v16, v29);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v15, v27);
        _Block_release(v27);

        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v15, v16);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v14, v43);
        swift_release(*(_QWORD *)(v0 + 56));
      }
      else
      {

      }
      goto LABEL_14;
    }
LABEL_11:

LABEL_14:
    v39 = static MainActor.shared.getter(v32);
    *(_QWORD *)(v0 + 280) = v39;
    v44 = (void (*)(uint64_t, uint64_t))((char *)&dword_10055A538 + dword_10055A538);
    v40 = (_QWORD *)swift_task_alloc(unk_10055A53C);
    *(_QWORD *)(v0 + 288) = v40;
    *v40 = v0;
    v40[1] = sub_10032633C;
    v44(v39, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_100326780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_100326798, 0, 0);
}

uint64_t sub_100326798()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  Notification.object.getter();
  v1 = *(_QWORD **)(v0 + 48);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = sub_1000DD108(0, &qword_10055A528, UIWindowScene_ptr);
    if ((swift_dynamicCast(v1, v0 + 16, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
      **(_QWORD **)(v0 + 48) = 0;
  }
  else
  {
    sub_100011694(v0 + 16, &qword_10055A570);
    *v1 = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100326834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v6 = sub_10000B4C8(&qword_10055A518);
  v3[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[11] = v7;
  v3[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055A560);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notification(0);
  v3[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[15] = v10;
  v3[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    ObjectType = swift_getObjectType();
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v3[17] = v12;
  v3[18] = v14;
  return swift_task_switch(sub_100326924, v12, v14);
}

uint64_t sub_100326924()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 2, v0[10]);
  type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  sub_10001254C(&qword_10055A568, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v1 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_1003269C8;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[13], v0[7], v0[8]);
}

uint64_t sub_1003269C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_100326B8C;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 152))(v2 + 16, 0);
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_100326A38;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100326A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(v3, &qword_10055A560);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 128), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)AsyncCompactMapSequence.Iterator.transform.getter(v9);
    *(_QWORD *)(v0 + 168) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_100326BF0;
    return ((uint64_t (*)(uint64_t, _QWORD))v14)(v0 + 48, *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_100326B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t))(v0 + 152))(v0 + 16, 1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100326BF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 168);
  v4 = *(_QWORD *)(*v0 + 120);
  v3 = *(_QWORD *)(*v0 + 128);
  v5 = *(_QWORD *)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  v6 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_100326C6C, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_100326C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    *(_QWORD *)(v0 + 152) = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 16, *(_QWORD *)(v0 + 80));
    type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
    sub_10001254C(&qword_10055A568, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v5 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
    *(_QWORD *)(v0 + 160) = v5;
    *v5 = v0;
    v5[1] = sub_1003269C8;
    return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

void sub_100326D58(uint64_t a1)
{
  uint64_t v1;
  _BYTE *Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 1;

  }
  swift_beginAccess(v1, &v7, 0, 0);
  v3 = swift_unknownObjectWeakLoadStrong(v1);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v6 = v5;

    if (v5)
    {
      objc_msgSend(v6, "setPaused:", 1);

    }
  }
}

uint64_t sub_100326E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10055A510);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10055A518);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v16;
  v5[33] = v17;
  return swift_task_switch(sub_100326F48, v16, v17);
}

uint64_t sub_100326F48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v1 = v0[26];
  v16 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[15];
  v17 = v0[16] + 16;
  v0[11] = v4;
  v5 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v6 = sub_1000DD108(0, &qword_10055A528, UIWindowScene_ptr);
  v0[34] = v6;
  v7 = sub_10001254C(&qword_10055A530, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v8 = swift_retain(v4);
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_10055A520, 0, v5, v6, v7, v8);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v9 = AsyncCompactMapSequence.transform.getter(v3);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v9, v11, v5, v6, v7);
  swift_beginAccess(v17, v0 + 8, 0, 0);
  v13 = static MainActor.shared.getter(v12);
  v0[35] = v13;
  v18 = (char *)&dword_10055A538 + dword_10055A538;
  v14 = (_QWORD *)swift_task_alloc(unk_10055A53C);
  v0[36] = v14;
  *v14 = v0;
  v14[1] = sub_10032710C;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v18)(v13, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_10032710C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 280);
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_10032716C, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_10032716C()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v28 = *(_QWORD *)(v0 + 248);
    v29 = *(_QWORD *)(v0 + 232);
    v30 = *(_QWORD *)(v0 + 208);
    v32 = *(_QWORD *)(v0 + 176);
    v31 = *(_QWORD *)(v0 + 184);
    v33 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v29, *(_QWORD *)(v0 + 216));
    swift_release(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        v9 = *(_QWORD *)(v0 + 176);
        v10 = *(_QWORD *)(v0 + 152);
        v37 = *(_QWORD *)(v0 + 168);
        v38 = *(_QWORD *)(v0 + 160);
        v11 = *(_QWORD *)(v0 + 136);
        v36 = *(_QWORD *)(v0 + 144);
        v12 = *(_QWORD *)(v0 + 128);
        v13 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
        v21 = (void *)static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
        *(_QWORD *)(v0 + 48) = sub_10033416C;
        *(_QWORD *)(v0 + 56) = v12;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_10015F6F8;
        *(_QWORD *)(v0 + 40) = &unk_10051E488;
        v22 = _Block_copy((const void *)(v0 + 16));
        swift_retain(v12);
        static DispatchQoS.unspecified.getter(v23);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v24 = sub_10001254C((unint64_t *)&unk_10055A540, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v25 = sub_10000B4C8(&qword_100558B58);
        v26 = sub_1001630EC((unint64_t *)&qword_10055A550, &qword_100558B58);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v25, v26, v11, v24);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v10, v22);
        _Block_release(v22);

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v9, v38);
        swift_release(*(_QWORD *)(v0 + 56));
      }
      else
      {

      }
      goto LABEL_10;
    }
LABEL_7:

LABEL_10:
    v34 = static MainActor.shared.getter(v27);
    *(_QWORD *)(v0 + 280) = v34;
    v39 = (void (*)(uint64_t, uint64_t))((char *)&dword_10055A538 + dword_10055A538);
    v35 = (_QWORD *)swift_task_alloc(unk_10055A53C);
    *(_QWORD *)(v0 + 288) = v35;
    *v35 = v0;
    v35[1] = sub_10032710C;
    v39(v34, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_1003274A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_100334210, 0, 0);
}

void sub_1003274B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  char v30;
  _BYTE v31[24];
  _BYTE v32[24];
  uint64_t v33[3];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    swift_retain(v5);

    if (v5)
    {
      v6 = swift_allocObject(&unk_10051DB58, 24, 7);
      swift_beginAccess(v2, v36, 0, 0);
      v7 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      swift_unknownObjectWeakInit(v6 + 16);

      swift_beginAccess(v5 + 96, v35, 1, 0);
      v8 = *(_QWORD *)(v5 + 96);
      v9 = *(_QWORD *)(v5 + 104);
      *(_QWORD *)(v5 + 96) = sub_100334174;
      *(_QWORD *)(v5 + 104) = v6;
      swift_retain_n(v6, 2);
      sub_1000DB26C(v8, v9);
      sub_10031EB2C();
      swift_release_n(v6, 2);
      swift_release(v5);
    }
  }
  swift_beginAccess(v2, v34, 0, 0);
  v10 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (v10)
  {
    v10[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;

  }
  if (qword_100557E50 != -1)
    swift_once(&qword_100557E50, sub_1002F7F50);
  v11 = type metadata accessor for Logger(0);
  sub_10000D78C(v11, (uint64_t)static Logger.lyrics);
  v12 = swift_retain_n(a1, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v33[0] = v16;
    *(_DWORD *)v15 = 136315138;
    swift_beginAccess(v2, v31, 0, 0);
    v17 = swift_unknownObjectWeakLoadStrong(v2);
    if (v17)
    {
      v18 = (void *)v17;
      v19 = sub_10032B090();

      v20 = v19 & 1;
    }
    else
    {
      v20 = 2;
    }
    v32[0] = v20;
    v21 = sub_10000B4C8(&qword_10055A558);
    v22 = (char *)String.init<A>(describing:)(v32, v21);
    *(_QWORD *)(v15 + 4) = sub_1002E9B3C(v22, v23, v33);
    swift_bridgeObjectRelease();
    swift_release_n(a1, 2);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_release_n(a1, 2);
  }

  swift_beginAccess(v2, v33, 0, 0);
  v24 = swift_unknownObjectWeakLoadStrong(v2);
  if (v24)
  {
    v25 = (void *)v24;
    v26 = *(void **)(v24 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v27 = v26;

    if (v26)
    {
      swift_beginAccess(v2, v32, 0, 0);
      v28 = swift_unknownObjectWeakLoadStrong(v2);
      if (v28)
      {
        v29 = (void *)v28;
        v30 = sub_10032B090();

      }
      else
      {
        v30 = 1;
      }
      objc_msgSend(v27, "setPaused:", v30 & 1);

    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = objc_msgSend(v5, "screen");

      v5 = objc_msgSend(v6, "displayLinkWithTarget:selector:", v1, "displayLinkFired:");
    }
    v7 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
    v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = v5;

    v9 = *(void **)&v1[v7];
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, "setPaused:", sub_10032B090() & 1);

      v11 = *(void **)&v1[v7];
      if (v11)
      {
        v12 = (void *)objc_opt_self(NSRunLoop);
        v13 = v11;
        v14 = objc_msgSend(v12, "mainRunLoop");
        objc_msgSend(v13, "addToRunLoop:forMode:", v14, NSRunLoopCommonModes);

        v15 = *(void **)&v1[v7];
        if (v15)
          objc_msgSend(v15, "setPreferredFramesPerSecond:", 30);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1);
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink], "invalidate");
  v4 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = 0;

}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  char *v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  _QWORD v48[4];
  objc_super v49;
  CGRect v50;
  CGRect v51;

  v1 = v0;
  v49.receiver = v0;
  v49.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v49, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  v3 = v2;
  _s3__C6CGRectVMa_1(0);
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v48[0] = v5;
  v48[1] = v7;
  v48[2] = v9;
  v48[3] = v11;
  v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds + 16];
  v47[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v47[1] = v13;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v48, v47) & 1) == 0)
    return;
  v14 = objc_msgSend(v1, "view");
  if (!v14)
    goto LABEL_14;
  v15 = v14;
  objc_msgSend(v14, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v50.origin.x = v17;
  v50.origin.y = v19;
  v50.size.width = v21;
  v50.size.height = v23;
  v48[0] = CGRectGetWidth(v50);
  *(_QWORD *)&v47[0] = CGRectGetWidth(*(CGRect *)v12);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v48, v47) & 1) != 0)
    sub_100329084();
  v24 = objc_msgSend(v1, "view");
  if (!v24)
    goto LABEL_15;
  v25 = v24;
  objc_msgSend(v24, "bounds");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v51.origin.x = v27;
  v51.origin.y = v29;
  v51.size.width = v31;
  v51.size.height = v33;
  v48[0] = CGRectGetHeight(v51);
  *(_QWORD *)&v47[0] = CGRectGetHeight(*(CGRect *)v12);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v48, v47) & 1) != 0)
  {
    sub_10032BCD8(0);
    v34 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v48, 0, 0);
    *(_QWORD *)&v47[0] = *(_QWORD *)v34;
    v46 = 0;
    v35 = sub_100330F58();
    if ((static ApproximatelyEquatable<>.==~ infix(_:_:)(v47, &v46, &type metadata for CGFloat, &protocol witness table for CGFloat, v35) & 1) != 0)sub_100328C28();
  }
  v36 = objc_msgSend(v1, "view");
  if (!v36)
    goto LABEL_16;
  v37 = v36;
  objc_msgSend(v36, "bounds");
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;

  *(_QWORD *)v12 = v39;
  *((_QWORD *)v12 + 1) = v41;
  *((_QWORD *)v12 + 2) = v43;
  *((_QWORD *)v12 + 3) = v45;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewLayoutMarginsDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v1, "viewLayoutMarginsDidChange");
  sub_100329084();
}

void sub_100327F18(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v5 = _s19SBS_TextContentViewCMa();
    v6 = swift_dynamicCastClass(v3, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
      if (v7)
      {
        v8 = v6;
        swift_beginAccess(v7 + 96, v23, 0, 0);
        v9 = *(double (**)(uint64_t))(v7 + 96);
        if (v9)
        {
          v10 = *(_QWORD *)(v7 + 104);
          v11 = v3;
          swift_retain(v7);
          v12 = sub_1000DB0D8((uint64_t)v9, v10);
          v13 = v9(v12);
          swift_beginAccess(v7 + 88, &v22, 0, 0);
          v14 = 0.0;
          if (*(_BYTE *)(v7 + 88) == 1)
          {
            Lyrics.spatialOffset.getter();
            v14 = v15;
          }
          sub_1000DB26C((uint64_t)v9, v10);
          swift_release(v7);
          v16 = v13 - v14;
          if (v16 != *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress))
          {
            *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v16;
            v17 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_textView);
            if (!v17)
            {
              __break(1u);
              return;
            }
            v18 = v17;
            v19 = a2 & 1;
            sub_10030D07C(v19, v16);

            v20 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
            if (v20)
            {
              v21 = v20;
              sub_10030D07C(v19, v16);

              v11 = v21;
            }
          }

        }
      }
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.presentSharing()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[24];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char v56[24];
  _QWORD v57[3];
  uint64_t *v58;
  uint64_t v59;
  char v60[24];

  v5 = v0;
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(v6, v60, 0, 0);
  v7 = *v6;
  if ((unint64_t)v7 >> 62)
    goto LABEL_18;
  v8 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_22;
LABEL_3:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_36:
    v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_8;
  }
  if (((unint64_t)v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = (char *)*(id *)(v7 + 8 * (_QWORD)v9 + 32);
LABEL_8:
    v8 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease();
  if (v4 >= v28)
  {
LABEL_44:
    sub_1000C53BC(v1, (uint64_t)v57);
    if ((swift_dynamicCast(&v53, v57, v2, &type metadata for Lyrics.SongwritersLine, 6) & 1) == 0)
      goto LABEL_52;
    swift_bridgeObjectRelease();
    sub_1000C53BC(v1, (uint64_t)v57);
    v29 = (uint64_t)v58;
    v30 = v59;
    sub_10000D900(v57, (uint64_t)v58);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    sub_100011758(v57);
    if (v31 < 1)
      goto LABEL_52;
    sub_1000C53BC(v1, (uint64_t)v57);
    v1 = (uint64_t)v58;
    v32 = v59;
    sub_10000D900(v57, (uint64_t)v58);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v1, v32);
    v7 = v33 - 1;
    if (!__OFSUB__(v33, 1))
    {
      sub_100011758(v57);
      v34 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v57, 0, 0);
      v1 = *v34;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_54:
        swift_bridgeObjectRetain();
        v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);

        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      if ((v7 & 0x8000000000000000) == 0)
      {
        if ((unint64_t)v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_50:
          v35 = (char *)*(id *)(v1 + 8 * v7 + 32);

LABEL_51:
          v8 = v35;
LABEL_52:
          objc_msgSend(v8, "setHighlighted:", 1);
          v36 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
          v44 = (void *)static OS_dispatch_queue.main.getter(v36, v37, v38, v39, v40, v41, v42, v43);
          v45 = swift_allocObject(&unk_10051DBD0, 32, 7);
          *(_QWORD *)(v45 + 16) = v5;
          *(_QWORD *)(v45 + 24) = v8;
          v46 = v5;
          v47 = v8;
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100330FC8, v45, 0.3);

          swift_release(v45);
          return;
        }
LABEL_59:
        __break(1u);
LABEL_60:
        swift_bridgeObjectRetain();
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  while (1)
  {
    sub_1000C53BC(v1, (uint64_t)v57);
    v1 = (uint64_t)v58;
    v2 = v59;
    sub_10000D900(v57, (uint64_t)v58);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    sub_100011758(v57);
    v1 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
      goto LABEL_54;
    if (v7 < 0)
      goto LABEL_56;
    if ((unint64_t)v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_50;
    __break(1u);
LABEL_18:
    if (v7 < 0)
      v14 = v7;
    else
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = (char *)_CocoaArrayWrapper.endIndex.getter(v14);
    if (v8)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v15)
      return;
    swift_beginAccess(v15 + 96, v51, 0, 0);
    v16 = *(double (**)(uint64_t))(v15 + 96);
    if (!v16)
      return;
    v17 = *(_QWORD *)(v15 + 104);
    swift_retain(v15);
    v18 = sub_1000DB0D8((uint64_t)v16, v17);
    v19 = v16(v18);
    swift_beginAccess(v15 + 88, v50, 0, 0);
    v20 = 0.0;
    if (*(_BYTE *)(v15 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v20 = v21;
    }
    sub_1000DB26C((uint64_t)v16, v17);
    swift_release(v15);
    v22 = &v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v49, 0, 0);
    v23 = *(_QWORD *)v22;
    if (!v23)
    {
      v55 = 0;
      v53 = 0u;
      v54 = 0u;
LABEL_34:
      sub_100011694((uint64_t)&v53, &qword_10055A360);
      return;
    }
    swift_retain(v23);
    Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v53, v19 - v20);
    swift_release(v23);
    if (!*((_QWORD *)&v54 + 1))
      goto LABEL_34;
    sub_1000B47A8(&v53, (uint64_t)v57);
    v24 = (uint64_t)v58;
    v25 = v59;
    sub_10000D900(v57, (uint64_t)v58);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    v26 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v48, 0, 0);
    v1 = *v26;
    if ((*v26 & 0xC000000000000001) != 0)
      goto LABEL_60;
    if (v7 < 0)
      break;
    if ((unint64_t)v7 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_62;
    v8 = (char *)*(id *)(v1 + 8 * v7 + 32);
LABEL_32:
    sub_100011758(v57);
LABEL_9:
    v1 = (uint64_t)&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v56, 0, 0);
    sub_1000C53BC(v1, (uint64_t)v57);
    v2 = sub_10000B4C8(&qword_1005592E0);
    if (!swift_dynamicCast(&v53, v57, v2, &type metadata for Lyrics.InstrumentalLine, 6))
      goto LABEL_44;
    sub_1000C53BC(v1, (uint64_t)v57);
    v3 = v58;
    v11 = v59;
    v7 = (uint64_t)sub_10000D900(v57, (uint64_t)v58);
    v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 16))(v3, v11);
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    sub_100011758(v57);
    v3 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v52, 0, 0);
    v7 = *v3;
    if ((unint64_t)*v3 >> 62)
      goto LABEL_40;
    if (v4 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_44;
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_1003287A8(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(__int128 *);
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  __int128 v44;
  __int128 v45;
  char v46[24];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char v62[24];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v2 = v1;
  v4 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v62, 0, 0);
  sub_1000C53BC(v4, (uint64_t)&v47);
  v5 = sub_10000B4C8(&qword_1005592E0);
  result = swift_dynamicCast(&v63, &v47, v5, &type metadata for Lyrics.TextLine, 6);
  if ((result & 1) != 0)
  {
    v7 = v65;
    v8 = v69;
    v9 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v44 = v68;
    v45 = v67;
    if (!v9)
      goto LABEL_10;
    v10 = v63;
    v11 = v64;
    v12 = BYTE8(v64);
    v13 = BYTE9(v64);
    v14 = BYTE10(v64);
    v15 = *((_QWORD *)&v65 + 1);
    v16 = v66;
    v17 = objc_msgSend(v9, "copy");
    _bridgeAnyObjectToAny(_:)(v17);
    swift_unknownObjectRelease(v17);
    v18 = sub_1000DD108(0, (unint64_t *)&qword_10055CDB0, UIView_ptr);
    if ((swift_dynamicCast(&v47, &v63, (char *)&type metadata for Any + 8, v18, 6) & 1) != 0)
    {
      v42 = v14;
      v43 = (void *)v47;
      objc_msgSend(a1, "cancelTrackingWithEvent:", 0);
      result = (uint64_t)objc_msgSend(v2, "view");
      if (!result)
      {
        __break(1u);
        return result;
      }
      v19 = (void *)result;
      if (v13)
        v20 = 2;
      else
        v20 = 0;
      objc_msgSend((id)result, "convertRect:fromCoordinateSpace:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], UIView.untransformedFrame.getter());
      v40 = v22;
      v41 = v21;
      v24 = v23;
      v26 = v25;

      v27 = objc_msgSend(a1, "isSelected");
      objc_msgSend(a1, "transform");
      v28 = v63;
      v29 = v64;
      v30 = v65;
      v31 = swift_allocObject(&unk_10051E100, 24, 7);
      *(_QWORD *)(v31 + 16) = a1;
      v32 = swift_allocObject(&unk_10051E128, 24, 7);
      *(_QWORD *)(v32 + 16) = a1;
      v47 = v10;
      *(_QWORD *)&v48 = v11;
      BYTE8(v48) = v12;
      BYTE9(v48) = v13;
      BYTE10(v48) = v42;
      *(_QWORD *)&v49 = v7;
      *((_QWORD *)&v49 + 1) = v15;
      v50 = v16;
      v51 = v45;
      v52 = v44;
      *(_QWORD *)&v53 = v8;
      *((_QWORD *)&v53 + 1) = v43;
      *(_QWORD *)&v54 = v20;
      *((_QWORD *)&v54 + 1) = v41;
      *(_QWORD *)&v55 = v40;
      *((_QWORD *)&v55 + 1) = v24;
      *(_QWORD *)&v56 = v26;
      BYTE8(v56) = v27;
      v57 = v28;
      v58 = v29;
      v59 = v30;
      *(_QWORD *)&v60 = sub_100333F50;
      *((_QWORD *)&v60 + 1) = v31;
      *(_QWORD *)&v61 = sub_100333F64;
      *((_QWORD *)&v61 + 1) = v32;
      v71 = v55;
      v72 = v56;
      v63 = v10;
      v64 = v48;
      v69 = v53;
      v70 = v54;
      v67 = v45;
      v68 = v44;
      v65 = v49;
      v66 = v16;
      v76 = v60;
      v77 = v61;
      v74 = v29;
      v75 = v30;
      v33 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
      v73 = v28;
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler], v46, 0, 0);
      v34 = *(void (**)(__int128 *))v33;
      if (!*(_QWORD *)v33)
      {
        v39 = a1;
        return (uint64_t)sub_100333FA4(&v47);
      }
      v35 = *((_QWORD *)v33 + 1);
      v36 = a1;
      swift_bridgeObjectRetain();
      swift_retain(v45);
      swift_retain(v44);
      swift_retain(v8);
      v37 = v43;
      sub_1000DB0D8((uint64_t)v34, v35);
      v34(&v63);

      sub_1000DB26C((uint64_t)v34, v35);
      sub_100333FA4(&v47);
      swift_release(v8);
      swift_release(v44);
      v38 = v45;
    }
    else
    {
LABEL_10:
      swift_release(v8);
      swift_release(v44);
      v38 = v45;
    }
    swift_release(v38);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall SyncedLyricsViewController.displayLinkResumeIfNeeded()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setPaused:", sub_10032B090() & 1);

  }
}

void sub_100328C28()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  CGFloat *v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  id v45;
  id v46;
  char v47[24];
  char v48[24];
  __int128 v49[2];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  CGRect v54;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v53, 0, 0).n128_u64[0];
  if (*(char *)(v2 + 40) < 0)
  {
    v22 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v48, 0, 0);
    v23 = *v22;
    if ((unint64_t)*v22 >> 62)
    {
      if (v23 < 0)
        v42 = *v22;
      else
        v42 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter(v42))
      {
LABEL_9:
        if ((v23 & 0xC000000000000001) != 0)
        {
          v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
        }
        else
        {
          if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_25;
          }
          v25 = (char *)*(id *)(v23 + 32);
        }
        v26 = v25;
        swift_bridgeObjectRelease();
        v27 = (uint64_t)&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
        swift_beginAccess(&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v47, 0, 0);
        sub_1000C53BC(v27, (uint64_t)v49);

        sub_1000B47A8(v49, (uint64_t)v50);
        v28 = v51;
        v29 = v52;
        sub_10000D900(v50, v51);
        v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
        v23 = v30;
        v2 = *v22;
        if ((*v22 & 0xC000000000000001) == 0)
        {
          if ((v30 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v30 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v31 = *(id *)(v2 + 8 * v30 + 32);
LABEL_16:
            v32 = v31;
            v33 = UIView.untransformedFrame.getter();
            v35 = v34;
            v37 = v36;
            v39 = v38;

            sub_10032B7C4(v33, v35, v37, v39);
            v41 = v40;

            v21 = fabs(v41);
            sub_100011758(v50);
            goto LABEL_22;
          }
          __break(1u);
          goto LABEL_28;
        }
LABEL_25:
        swift_bridgeObjectRetain();
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v2);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v24)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v2 + 168), "_bodyLeading");
    v21 = v43;
    goto LABEL_22;
  }
  v4 = *(double *)(v2 + 8);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v3);
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v1, "view");
  if (!v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");
  v12 = v11;

  v13 = (CGFloat *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v50, 0, 0).n128_u64[0];
  v15 = *v13;
  if (*v13 > 0.0)
  {
LABEL_6:
    v54.origin.x = v6;
    v54.origin.y = v8;
    v54.size.width = v12;
    v54.size.height = v15;
    v19 = v4 * (CGRectGetHeight(v54) / 100.0);
    objc_msgSend(*(id *)(v2 + 168), "ascender");
    v21 = v19 - v20;
LABEL_22:
    sub_1003300C4();
    v44 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v45 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
    objc_msgSend(v45, "contentInset");
    objc_msgSend(v45, "setContentInset:", v21);

    v46 = *(id *)&v1[v44];
    objc_msgSend(v46, "contentOffset");
    objc_msgSend(v46, "setContentOffset:");

    return;
  }
  v16 = objc_msgSend(v1, "view", v14);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "frame");
    v15 = v18;

    goto LABEL_6;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_100328FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032901C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SyncedLyricsViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26SyncedLyricsViewController);
}

void sub_100329084()
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  char v20[24];
  void **aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  v1 = swift_allocObject(&unk_10051E330, 24, 7);
  *(_QWORD *)(v1 + 16) = isEscapingClosureAtFileLocation;
  if ((*(_BYTE *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
  {
    v2 = (uint64_t *)(isEscapingClosureAtFileLocation
                   + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v20, 0, 0);
    v3 = *v2;
    if (!((unint64_t)v3 >> 62))
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v5 = (id)isEscapingClosureAtFileLocation;
      swift_bridgeObjectRetain();
      if (v4)
        goto LABEL_4;
LABEL_16:
      swift_bridgeObjectRelease();
      swift_release(v1);
      return;
    }
  }
  else
  {
    v12 = (void *)objc_opt_self(UIView);
    v3 = swift_allocObject(&unk_10051E358, 24, 7);
    *(_QWORD *)(v3 + 16) = isEscapingClosureAtFileLocation;
    v13 = swift_allocObject(&unk_10051E380, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100334144;
    *(_QWORD *)(v13 + 24) = v3;
    v25 = sub_100150C04;
    v26 = v13;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100185F2C;
    v24 = &unk_10051E398;
    v14 = _Block_copy(&aBlock);
    v15 = v26;
    v16 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v13);
    objc_msgSend(v12, "performWithoutAnimation:", v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 136, 383, 44, 1, v17);
    swift_release(v13);
    swift_release(v3);
    swift_release(v1);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  if (v3 < 0)
    v18 = v3;
  else
    v18 = v3 & 0xFFFFFFFFFFFFFF8;
  v19 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v4)
    goto LABEL_16;
LABEL_4:
  v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_9:
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = swift_allocObject(&unk_10051E3D0, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_10033413C;
    *(_QWORD *)(v9 + 24) = v1;
    v25 = sub_1000D75E8;
    v26 = v9;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_1002A4D68;
    v24 = &unk_10051E3E8;
    v10 = _Block_copy(&aBlock);
    v11 = v26;
    swift_retain(v1);
    objc_msgSend(v8, "addCompletion:", v10, swift_release(v11).n128_f64[0]);
    swift_release(v1);
    _Block_release(v10);

    return;
  }
  __break(1u);
}

void sub_10032936C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  _QWORD v9[5];
  uint64_t v10;

  v2 = objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_10051E420, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject(&unk_10051E448, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1003342CC;
  *(_QWORD *)(v4 + 24) = v3;
  v9[4] = sub_100150E54;
  v10 = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100185F2C;
  v9[3] = &unk_10051E460;
  v5 = _Block_copy(v9);
  v6 = v10;
  v7 = a1;
  swift_retain(v4);
  objc_msgSend((id)v2, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 136, 383, 44, 1, v8);
  swift_release(v4);
  swift_release(v3);
  if ((v2 & 1) != 0)
    __break(1u);
}

void sub_1003294A4(uint64_t a1)
{
  uint64_t *v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  char v43[24];
  CGRect v44;
  CGRect v45;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v43, 0, 0);
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0)
      v1 = (uint64_t *)*v7;
    else
      v1 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v2 = 0.0;
    v3 = 0.0;
    v4 = 0.0;
    v5 = 0.0;
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v11;
  v2 = UIView.untransformedFrame.getter();
  v3 = v12;
  v4 = v13;
  v5 = v14;

LABEL_12:
  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v42, 0, 0);
  v15 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v15 < 0)
      v8 = *v1;
    else
      v8 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v16)
      goto LABEL_24;
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_24;
  }
  if (v16 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
    else
      v18 = (char *)*(id *)(v15 + 8 * i + 32);
    v19 = v18;
    sub_100329EE8(v18);

  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (!v9)
    return;
  v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    v20 = *(char **)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_27;
LABEL_44:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_40:
  if (v8 < 0)
    v37 = v8;
  else
    v37 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = (char *)_CocoaArrayWrapper.endIndex.getter(v37);
  if (!v20)
    goto LABEL_44;
LABEL_27:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v21 = (char *)*(id *)(v8 + 32);
  }
  v20 = v21;
  swift_bridgeObjectRelease();
  objc_msgSend(v20, "frame");
  v45.origin.x = v2;
  v45.origin.y = v3;
  v45.size.width = v4;
  v45.size.height = v5;
  if (CGRectEqualToRect(v44, v45))
  {
LABEL_36:

    return;
  }
  v22 = (uint64_t)&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v38, 0, 0);
  sub_1000C53BC(v22, (uint64_t)v39);
  v23 = v40;
  v24 = v41;
  sub_10000D900(v39, v40);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  v9 = v25;
  v8 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
    goto LABEL_48;
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = *(id *)(v8 + 8 * v25 + 32);
LABEL_35:
    v27 = v26;
    v28 = UIView.untransformedFrame.getter();
    v30 = v29;
    v32 = v31;
    v34 = v33;

    sub_10032B7C4(v28, v30, v32, v34);
    v36 = v35;

    sub_100011758(v39);
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", 0.0, v36);
    goto LABEL_36;
  }
  __break(1u);
}

void sub_10032986C(char *a1, unsigned __int8 a2, uint64_t a3)
{
  char *v3;
  char *v4;
  double Width;
  id v9;
  void *v10;
  int v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  CGFloat height;
  uint64_t v34;
  uint64_t v35;
  CGFloat v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  id v48;
  double v49;
  id v50;
  double v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double MaxY;
  char **v59;
  double *v60;
  _BYTE *v61;
  CGFloat x;
  CGFloat y;
  CGFloat v64;
  CGFloat v65;
  double v66;
  id v67;
  void *v68;
  uint64_t v69;
  char v70[24];
  char v71[24];
  char v72[24];
  _BYTE v73[32];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80[24];
  CGRect v81;
  uint64_t v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;

  v4 = v3;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "frame");
  Width = CGRectGetWidth(v83);
  v9 = objc_msgSend(v4, "view");
  if (!v9)
    goto LABEL_42;
  v10 = v9;
  v11 = a2;
  objc_msgSend(v9, "layoutMargins");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v20 = Width - UIEdgeInsets.horizontal.getter(v13, v15, v17, v19);
  v21 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v80, 0, 0);
  sub_1000C53BC(v21, (uint64_t)&v81);
  v22 = sub_10000B4C8(&qword_1005592E0);
  if (swift_dynamicCast(v74, &v81, v22, &type metadata for Lyrics.TextLine, 0))
  {
    v23 = v77;
    v24 = v78;
    swift_release(v79);
    swift_release(v24);
    swift_release(v23);
    swift_bridgeObjectRelease();
    v25 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v70, 0, 0);
    if (*(_QWORD *)v25 && !*(_BYTE *)(*(_QWORD *)v25 + 96))
    {
      v27 = 1.0;
    }
    else
    {
      v26 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], &v69, 0, 0);
      v27 = v26[64];
    }
  }
  else
  {
    v27 = 1.0;
    if ((swift_dynamicCast(v74, &v81, v22, &type metadata for Lyrics.InstrumentalLine, 0) & 1) == 0
      && swift_dynamicCast(v74, &v81, v22, &type metadata for Lyrics.SongwritersLine, 0))
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_100011758(&v81);
  if (v11 == 2)
  {
    objc_msgSend(a1, "sizeThatFits:", v20 * v27, INFINITY);
  }
  else
  {
    v28 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v28)
    {
      v29 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
      ObjectType = swift_getObjectType();
      v74[0] = v28;
      (*(void (**)(_QWORD, uint64_t, uint64_t, double, double))(v29 + 96))(v11 & 1, ObjectType, v29, v20 * v27, INFINITY);
    }
  }
  sub_1000C53BC(v21, (uint64_t)v74);
  if (swift_dynamicCast(v73, v74, v22, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v31 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
    if (v31)
    {
      v32 = v31 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
      swift_beginAccess(v31 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v72, 0, 0);
      sub_1000C53BC(v32, (uint64_t)&v81);
      height = v81.size.height;
      v34 = v82;
      sub_10000D900(&v81, *(uint64_t *)&v81.size.height);
      v35 = (*(uint64_t (**)(CGFloat, uint64_t))(v34 + 16))(COERCE_CGFLOAT(*(_QWORD *)&height), v34);
      sub_100011758(&v81);
    }
    else
    {
      v35 = 0;
    }
    sub_1000C53BC(v21, (uint64_t)&v81);
    v36 = v81.size.height;
    v37 = v82;
    sub_10000D900(&v81, *(uint64_t *)&v81.size.height);
    v38 = (*(uint64_t (**)(CGFloat, uint64_t))(v37 + 16))(COERCE_CGFLOAT(*(_QWORD *)&v36), v37);
    if (v31)
    {
      v39 = v38;
      sub_100011758(&v81);
      if (v35 == v39)
        swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v71, 0, 0);
    }
    else
    {
      sub_100011758(&v81);
    }
  }
  sub_100011758(v74);
  sub_1000C53BC(v21, (uint64_t)v74);
  v40 = v75;
  v41 = v76;
  sub_10000D900(v74, v75);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
  sub_100011758(v74);
  if (!v42)
  {
    *(_QWORD *)&MaxY = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v74, 0, 0).n128_u64[0];
    v59 = &selRef_propertySetByCombiningWithPropertySet_;
    goto LABEL_36;
  }
  sub_100333F08(a3, (uint64_t)&v81);
  if ((v82 & 1) != 0)
  {
    sub_1000C53BC(v21, (uint64_t)v74);
    v43 = v75;
    v44 = v76;
    sub_10000D900(v74, v75);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
    v46 = v45 - 1;
    if (__OFSUB__(v45, 1))
    {
      __break(1u);
    }
    else
    {
      sub_100011758(v74);
      v47 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v74, 0, 0);
      v43 = *v47;
      if ((v43 & 0xC000000000000001) == 0)
      {
        if ((v46 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v46 < *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v48 = *(id *)(v43 + 8 * v46 + 32);
LABEL_30:
          objc_msgSend(v48, "frame");
          v49 = CGRectGetHeight(v84);
          v50 = v48;
          v51 = UIView.untransformedFrame.getter();
          v53 = v52;
          v55 = v54;
          v57 = v56;

          v85.origin.x = v51;
          v85.origin.y = v53;
          v85.size.width = v55;
          v85.size.height = v57;
          CGRectGetMaxY(v85);

          v59 = &selRef_propertySetByCombiningWithPropertySet_;
          if (v49 <= 0.0)
            goto LABEL_36;
          v60 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          v61 = v73;
          goto LABEL_35;
        }
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRetain();
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v43);
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  x = v81.origin.x;
  y = v81.origin.y;
  v64 = v81.size.width;
  v65 = v81.size.height;
  v66 = CGRectGetHeight(v81);
  v86.origin.x = x;
  v86.origin.y = y;
  v86.size.width = v64;
  v86.size.height = v65;
  MaxY = CGRectGetMaxY(v86);
  v59 = &selRef_propertySetByCombiningWithPropertySet_;
  if (v66 <= 0.0)
    goto LABEL_36;
  v60 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v61 = v74;
LABEL_35:
  swift_beginAccess(v60, v61, 0, 0);
  MaxY = v60[10];
LABEL_36:
  v67 = objc_msgSend(v4, v59[324], MaxY);
  if (v67)
  {
    v68 = v67;
    objc_msgSend(v67, "layoutMargins");

    return;
  }
LABEL_43:
  __break(1u);
}

void sub_100329EE8(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double Width;
  double Height;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  char v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = v1;
  memset(v32, 0, sizeof(v32));
  v33 = 1;
  sub_10032986C(a1, 2u, (uint64_t)v32);
  UIView.untransformedFrame.setter(v4, v5, v6, v7);
  v8 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v28, 0, 0);
  sub_1000C53BC(v8, (uint64_t)v29);
  v9 = v30;
  v10 = v31;
  sub_10000D900(v29, v30);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v13 = *v12;
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 - 1;
    if (!__OFSUB__(v14, 1))
      goto LABEL_3;
LABEL_13:
    __break(1u);
    return;
  }
  if (v13 < 0)
    v25 = v13;
  else
    v25 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  v15 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_13;
LABEL_3:
  sub_100011758(v29);
  if (v11 == v15)
  {
    v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v17 = *(id *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
    objc_msgSend(v17, "frame");
    Width = CGRectGetWidth(v34);
    v35.origin.x = UIView.untransformedFrame.getter();
    objc_msgSend(v17, "setContentSize:", Width, CGRectGetMaxY(v35));

    objc_msgSend(*(id *)(v2 + v16), "frame");
    Height = CGRectGetHeight(v36);
    objc_msgSend(*(id *)(v2 + v16), "contentInset");
    v21 = v20;
    v37.origin.x = UIView.untransformedFrame.getter();
    v22 = Height - (v21 + CGRectGetHeight(v37));
    v23 = *(id *)(v2 + v16);
    v24 = v23;
    if (v22 <= 0.0)
      objc_msgSend(v23, "contentInset");
    objc_msgSend(v24, "contentInset");
    objc_msgSend(v24, "setContentInset:");

  }
}

void sub_10032A0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(__int128 *, char);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, __n128);
  __n128 v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *__src;
  uint64_t *v78;
  uint64_t *v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[24];
  _BYTE __dst[552];

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v91, 0, 0);
  v5 = *v4;
  if ((unint64_t)*v4 >> 62)
    goto LABEL_61;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v7 = *(_QWORD *)(a1 + 40);
  a1 = *(_QWORD *)(v7 + 16);
  if (a1 >= v6)
    goto LABEL_8;
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v5 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5 >= a1)
      goto LABEL_6;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    return;
  }
  if (v8 < 0)
    v74 = *v4;
  else
    v74 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v74);
  swift_bridgeObjectRelease();
  if (v5 < a1)
    goto LABEL_69;
LABEL_6:
  if (a1 != v5)
  {
    if (a1 < (unint64_t)v5)
    {
      v70 = a1;
      while (1)
      {
        v71 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v71);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v70 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (v70 >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_60:
            __break(1u);
LABEL_61:
            if (v5 < 0)
              v73 = v5;
            else
              v73 = v5 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v6 = _CocoaArrayWrapper.endIndex.getter(v73);
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          v72 = *(id *)(v71 + 8 * v70 + 32);
        }
        ++v70;
        objc_msgSend(v72, "removeFromSuperview");

        if (v5 == v70)
          goto LABEL_7;
      }
    }
    goto LABEL_70;
  }
LABEL_7:
  swift_beginAccess(v4, __dst, 33, 0);
  sub_1002E5770(a1, v5);
  swift_endAccess(__dst);
LABEL_8:
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = 0;

  v10 = *(_QWORD *)(v7 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
    v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    v76 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v13 = v7 + 32;
    swift_bridgeObjectRetain();
    v78 = v11;
    swift_beginAccess(v11, v90, 0, 0);
    __src = v12;
    swift_beginAccess(v12, v89, 0, 0);
    v75 = v2;
    v79 = v4;
    while (1)
    {
      sub_1000C53BC(v13, (uint64_t)v86);
      v15 = v87;
      v16 = v88;
      sub_10000D900(v86, v87);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      v18 = v17;
      v19 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v19 < 0)
          v49 = *v4;
        else
          v49 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v50 = _CocoaArrayWrapper.endIndex.getter(v49);
        swift_bridgeObjectRelease();
        if (v18 >= v50)
        {
LABEL_34:
          sub_1000C53BC((uint64_t)v86, (uint64_t)&v83);
          v51 = *v78;
          if (*v78)
          {
            if (*(_BYTE *)(v51 + 96))
            {
              v52 = v87;
              v53 = v88;
              sub_10000D900(v86, v87);
              v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
            }
            else
            {
              v54 = __src[6];
              v55 = *((_BYTE *)__src + 56);
              sub_1000C53BC((uint64_t)v86, (uint64_t)v80);
              if ((v55 & 1) != 0)
              {
                v56 = v81;
                v57 = v82;
                sub_10000D900(v80, v81);
                v58 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v57 + 24);
                v59 = swift_retain(v51);
                v54 = v58(v56, v57, v59);
              }
              else
              {
                swift_retain(v51);
              }
              v2 = v75;
              sub_100011758(v80);
              swift_release(v51);
            }
          }
          else
          {
            v54 = 4;
          }
          memcpy(__dst, __src, 0x219uLL);
          v60 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView());
          sub_10030ED5C((uint64_t)__dst);
          v61 = sub_10031E048(&v83, v54, __dst);
          sub_10030EE2C((uint64_t)__dst);
          sub_1000DD108(0, &qword_10055A4D8, UIAction_ptr);
          v62 = swift_allocObject(&unk_10051DB58, 24, 7);
          swift_unknownObjectWeakInit(v62 + 16);
          v63 = swift_allocObject(&unk_10051E088, 24, 7);
          swift_unknownObjectWeakInit(v63 + 16);
          v64 = swift_allocObject(&unk_10051E0B0, 32, 7);
          *(_QWORD *)(v64 + 16) = v62;
          *(_QWORD *)(v64 + 24) = v63;
          v65 = v61;
          v66 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100333ED4, v64);
          objc_msgSend(v65, "addAction:forControlEvents:", v66, 64);

          objc_msgSend(*(id *)(v2 + v76), "addSubview:", v65);
          swift_beginAccess(v4, &v83, 33, 0);
          v25 = v65;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v68 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v67 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v68 >= v67 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
          v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v25);
          specialized Array._endMutation()(v69);
          swift_endAccess(&v83);
          v14 = (char *)objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
          objc_msgSend(v14, "setCancelsTouchesInView:", 0);
          objc_msgSend(v14, "addTarget:action:", v2, "shareGestureHandler:");
          objc_msgSend(v25, "addGestureRecognizer:", v14);
          sub_100329EE8(v25);

          goto LABEL_11;
        }
      }
      else if (v17 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_34;
      }
      v20 = v87;
      v21 = v88;
      sub_10000D900(v86, v87);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      a1 = v22;
      v5 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        if (v22 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_58;
        v23 = (char *)*(id *)(v5 + 8 * v22 + 32);
      }
      sub_1000C53BC((uint64_t)v86, (uint64_t)&v83);
      v24 = &v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v80, 33, 0);
      v25 = v23;
      sub_1000C1A04(v24, &v83);
      swift_endAccess(v80);
      sub_10031D004();
      sub_100011758(&v83);
      v26 = *v78;
      if (*v78)
      {
        if (*(_BYTE *)(v26 + 96))
        {
          v27 = v87;
          v28 = v88;
          sub_10000D900(v86, v87);
          v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
        }
        else
        {
          v29 = __src[6];
          v30 = *((_BYTE *)__src + 56);
          sub_1000C53BC((uint64_t)v86, (uint64_t)&v83);
          if ((v30 & 1) != 0)
          {
            v31 = v84;
            v32 = v85;
            sub_10000D900(&v83, v84);
            v33 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v32 + 24);
            v34 = swift_retain(v26);
            v29 = v33(v31, v32, v34);
          }
          else
          {
            swift_retain(v26);
          }
          sub_100011758(&v83);
          swift_release(v26);
        }
      }
      else
      {
        v29 = 4;
      }
      *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = v29;
      sub_10031D004();
      v35 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v35)
      {
        v36 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v83 = v35;
        (*(void (**)(uint64_t, uint64_t))(v36 + 80))(ObjectType, v36);
      }
      v38 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v40 = sub_10031BD80((uint64_t)&v83);
      v41 = *(void **)v39;
      if (*(_QWORD *)v39)
      {
        v42 = v39;
        v43 = v25[v38];
        v44 = *(_QWORD *)(v39 + 8);
        v45 = swift_getObjectType();
        v80[0] = v41;
        v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40);
        v47 = v41;
        v46(v43, v45, v44);
        v2 = v75;
        v48 = *(void **)v42;
        *(_QWORD *)v42 = v80[0];
        *(_QWORD *)(v42 + 8) = v44;

      }
      v40(&v83, 0);
      sub_10031C788(0, 0);
      sub_100329EE8(v25);
      v14 = v25;
LABEL_11:

      sub_100011758(v86);
      v13 += 40;
      --v10;
      v4 = v79;
      if (!v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_10032BCD8(0);
  sub_100328C28();
}

void sub_10032A970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  double v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  id v52;
  char *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double (*v60)(uint64_t, uint64_t);
  id v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t ObjectType;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  uint64_t __dst[68];
  char v81[24];
  char v82[24];
  _BYTE v83[40];
  char v84[24];
  char v85[32];
  CGRect v86;
  CGRect v87;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v85, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v84, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (!v8)
    {
      v53 = v6;
LABEL_37:

      return;
    }
    v9 = (char *)v8;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator], "selectionChanged");
    v10 = *(void **)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    if (v10)
      objc_msgSend(v10, "setPaused:", 1);
    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 1;
    v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer], "invalidate");
    v12 = *(void **)&v6[v11];
    *(_QWORD *)&v6[v11] = 0;

    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
    v13 = (uint64_t)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v82, 0, 0);
    sub_1000C53BC(v13, (uint64_t)v83);
    v14 = sub_10000B4C8(&qword_1005592E0);
    if ((swift_dynamicCast(__dst, v83, v14, &type metadata for Lyrics.TextLine, 6) & 1) == 0)
    {
LABEL_31:
      v56 = objc_msgSend(objc_allocWithZone((Class)MSVLyricsLine), "init");
      sub_1000C53BC(v13, (uint64_t)__dst);
      v58 = __dst[3];
      v57 = __dst[4];
      sub_10000D900(__dst, __dst[3]);
      v59 = *(_QWORD *)(v57 + 8);
      v60 = *(double (**)(uint64_t, uint64_t))(v59 + 8);
      v61 = v56;
      v62 = v60(v58, v59);
      v63 = *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
      v64 = 0.0;
      if (v63)
      {
        swift_beginAccess(v63 + 88, v83, 0, 0);
        if (*(_BYTE *)(v63 + 88) == 1)
        {
          swift_retain(v63);
          Lyrics.spatialOffset.getter();
          v64 = v65;
          swift_release(v63);
        }
      }
      sub_100011758(__dst);
      objc_msgSend(v61, "setStartTime:", v62 + v64);

      sub_1000C53BC(v13, (uint64_t)__dst);
      v67 = __dst[3];
      v66 = __dst[4];
      sub_10000D900(__dst, __dst[3]);
      v68 = *(_QWORD *)(v66 + 8);
      v69 = *(void (**)(uint64_t, uint64_t))(v68 + 16);
      v53 = (char *)v61;
      v69(v67, v68);
      objc_msgSend(v53, "setEndTime:");

      sub_100011758(__dst);
      v70 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], __dst, 0, 0);
      v71 = swift_unknownObjectWeakLoadStrong(v70);
      if (v71)
      {
        v72 = v71;
        v73 = *((_QWORD *)v70 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v73 + 8))(v6, v53, ObjectType, v73);

        swift_unknownObjectRelease(v72);
      }
      else
      {

      }
      goto LABEL_37;
    }
    v15 = __dst[8];
    v16 = __dst[10];
    v17 = __dst[12];
    v18 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (!v18)
      goto LABEL_23;
    v19 = _s19SBS_TextContentViewCMa();
    v20 = swift_dynamicCastClass(v18, v19);
    if (!v20)
      goto LABEL_23;
    v21 = *(_QWORD *)(v20 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v21)
      goto LABEL_40;
    v22 = *(_QWORD *)(v21
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v22)
    {
LABEL_23:
      swift_release(v17);
      swift_release(v16);
      swift_release(v15);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v78 = v17;
    v79 = v9;
    v23 = *(_QWORD *)(v22 + 24);
    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v54 = *(_QWORD *)(v22 + 24);
      else
        v54 = v23 & 0xFFFFFFFFFFFFFF8;
      v55 = v18;
      swift_retain(v22);
      swift_bridgeObjectRetain();
      v24 = _CocoaArrayWrapper.endIndex.getter(v54);
      if (v24)
        goto LABEL_12;
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v18;
      swift_retain(v22);
      swift_bridgeObjectRetain();
      if (v24)
      {
LABEL_12:
        v75 = v22;
        v76 = v16;
        v77 = v18;
        sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
        v26 = v24 - 1;
        if (v24 >= 1)
        {
          v27 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v81, 0, 0);
          v28 = 0;
          if ((v23 & 0xC000000000000001) == 0)
            goto LABEL_15;
LABEL_14:
          for (i = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v23); ; swift_retain(i))
          {
            memcpy(__dst, v27, 0x219uLL);
            *(_BYTE *)(i + 80) = 1;
            v30 = sub_10030ED5C((uint64_t)__dst);
            v38 = (void *)static OS_dispatch_queue.main.getter(v30, v31, v32, v33, v34, v35, v36, v37);
            v39 = *(double *)&__dst[65];
            v40 = swift_allocObject(&unk_10051E0D8, 24, 7);
            swift_weakInit(v40 + 16, i);
            swift_retain(v40);
            OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100333F00, v40, v39);

            swift_release_n(v40, 2);
            v41 = *(_QWORD *)(i + 72);
            if (v41)
            {
              v42 = *(void **)(v41 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
              if (v42)
              {
                v43 = (void *)__dst[21];
                v44 = v42;
                objc_msgSend(v43, "lineHeight");
                v46 = v45 * *(double *)&__dst[28] + *(double *)&__dst[44] + *(double *)&__dst[44];
                v47 = *(double *)(i + 40);
                v48 = *(double *)(i + 48);
                v49 = *(double *)(i + 56);
                v50 = *(double *)(i + 64);
                v86.origin.x = v47;
                v86.origin.y = v48;
                v86.size.width = v49;
                v86.size.height = v50;
                v51 = (v46 - CGRectGetHeight(v86)) * 0.5;
                v52 = v44;
                v87.origin.x = v47;
                v87.origin.y = v48;
                v87.size.width = v49;
                v87.size.height = v50;
                objc_msgSend(v52, "setFrame:", -v51, -v51, v51, CGRectGetHeight(v87) + v51 + v51);

              }
            }
            sub_10030EE2C((uint64_t)__dst);
            swift_release(i);
            if (v26 == v28)
              break;
            ++v28;
            if ((v23 & 0xC000000000000001) != 0)
              goto LABEL_14;
LABEL_15:
            i = *(_QWORD *)(v23 + 8 * v28 + 32);
          }
          swift_release(v78);
          swift_release(v76);
          swift_release(v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v18 = v77;
          v22 = v75;
          goto LABEL_30;
        }
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
    }
    swift_release(v78);
    swift_release(v16);
    swift_release(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:

    swift_release(v22);
    v9 = v79;
    goto LABEL_31;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.enterTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 != 2)
  {
    sub_10032CEE4();
    *v1 = 2;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.leaveTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 == 2)
  {
    sub_10032BCD8(0);
    *v1 = 0;
  }
}

uint64_t sub_10032B090()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v2, v15, 0, 0);
  if (!*v2 || (*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded) & 1) != 0)
    return 1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, &v9, 0, 0);
  sub_100328FD4(v4, (uint64_t)&v10);
  if (v11)
  {
    sub_1000B47A8(&v10, (uint64_t)v12);
    v5 = v13;
    v6 = v14;
    sub_10000D900(v12, v13);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1) != 0)
    {
      v3 = 1;
    }
    else
    {
      v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v7, &v10, 0, 0);
      v3 = *v7 == 2;
    }
    sub_100011758(v12);
  }
  else
  {
    sub_100011694((uint64_t)&v10, &qword_10055A2F0);
    return 1;
  }
  return v3;
}

_QWORD *sub_10032B1BC()
{
  char *v0;
  _QWORD *result;
  void *v2;
  double *v3;
  double v4;
  void *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v10[24];
  _BYTE v11[24];

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "frame");

    v3 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v4 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v11, 0, 0).n128_u64[0];
    if (*v3 > 0.0)
    {
LABEL_5:
      __chkstk_darwin();
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v10, 0, 0);
      __chkstk_darwin();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_100330FEC(v6, (uint64_t (*)(void))sub_100333E70);
      swift_bridgeObjectRelease();
      v8 = sub_100332AFC((uint64_t)v7);
      swift_bridgeObjectRelease();
      v9 = sub_100323748(v8);
      swift_bridgeObjectRelease();
      return v9;
    }
    result = objc_msgSend(v0, "view", v4);
    if (result)
    {
      v5 = result;
      objc_msgSend(result, "frame");

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10032B37C(_QWORD *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  BOOL v16;
  uint64_t i;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  _BYTE v44[24];
  unint64_t v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v6 = v5;
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = a1[3];
  v12 = a1[4];
  sub_10000D900(a1, v11);
  v43 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  v13 = v43(v11, v12);
  v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v14, v44, 0, 0);
  v15 = 0;
  v16 = v13 == 0;
  if (v13 <= 0)
    goto LABEL_3;
LABEL_2:
  for (i = v13 - 1; ; i = 0)
  {
    v19 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((unint64_t)v13 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      v20 = *(id *)(v19 + 8 * v13 + 32);
    }
    objc_msgSend(v20, "frame");
    v48.origin.x = a2;
    v48.origin.y = a3;
    v48.size.width = a4;
    v48.size.height = a5;
    if (!CGRectIntersectsRect(v46, v48))
      break;
    v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
    specialized Array._endMutation()(v24);

    v13 = i;
    v16 = i == 0;
    if (i > 0)
      goto LABEL_2;
LABEL_3:
    v18 = !v16;
    if (((v18 | v15) & 1) != 0)
      goto LABEL_18;
    v15 = 1;
  }

LABEL_18:
  result = v43(v11, v12);
  v13 = result + 1;
  if (__OFADD__(result, 1))
    goto LABEL_43;
  v11 = *v14;
  if ((unint64_t)*v14 >> 62)
    goto LABEL_44;
  v26 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v27 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_49;
  while (2)
  {
    v28 = 0;
    v29 = v13 == v27;
    if (v13 < v27)
    {
LABEL_22:
      v30 = v13 + 1;
      goto LABEL_28;
    }
    while (1)
    {
      v31 = !v29;
      if (((v31 | v28) & 1) != 0)
        goto LABEL_39;
      v28 = 1;
      v30 = v27;
LABEL_28:
      v11 = *v14;
      if ((*v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v13 < 0)
        break;
      if ((unint64_t)v13 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_42;
      v32 = *(id *)(v11 + 8 * v13 + 32);
LABEL_32:
      objc_msgSend(v32, "frame");
      v49.origin.x = a2;
      v49.origin.y = a3;
      v49.size.width = a4;
      v49.size.height = a5;
      if (!CGRectIntersectsRect(v47, v49))
      {

LABEL_39:
        KeyPath = swift_getKeyPath(&unk_10043C1B0);
        v38 = sub_10000B4C8(&qword_10055A4C8);
        v39 = sub_1001630EC(&qword_10055A4D0, &qword_10055A4C8);
        v40 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_100195A50, 0, v38, v39, (uint64_t)&protocol witness table for Int);
        swift_release(KeyPath);
        swift_bridgeObjectRelease();
        return v40;
      }
      v33 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v35 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
      specialized Array._endMutation()(v36);

      v13 = v30;
      v29 = v30 == v27;
      if (v30 < v27)
        goto LABEL_22;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    if (v11 < 0)
      v41 = v11;
    else
      v41 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v42 = _CocoaArrayWrapper.endIndex.getter(v41);
    result = swift_bridgeObjectRelease();
    v27 = v42 - 1;
    if (!__OFSUB__(v42, 1))
      continue;
    break;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_10032B750(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _BYTE v5[24];
  _QWORD v6[5];

  sub_1000C53BC(a1, (uint64_t)v6);
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line);
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000C1A04(v3, v6);
  swift_endAccess(v5);
  sub_10031D004();
  return sub_100011758(v6);
}

double sub_10032B7C4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  double v10;
  int v11;
  CGFloat v12;
  CGFloat v13;
  char v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  _BYTE v22[24];
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  *(_QWORD *)&v10 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v22, 0, 0).n128_u64[0];
  v11 = *(char *)(v9 + 40);
  if (v11 < 0)
  {
    v12 = *(double *)(v9 + 8);
    v13 = *(double *)(v9 + 16);
    v14 = *(_BYTE *)(v9 + 40);
    v16 = *(double *)(v9 + 24);
    v15 = *(double *)(v9 + 32);
    if ((v11 & 1) != 0)
    {
      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "frame", v10);
    }
    else
    {
      v17 = v12;
      v18 = v13;
      v19 = v16;
      v20 = v15;
    }
    CGRectGetHeight(*(CGRect *)&v17);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetHeight(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMinY(v25);
    if ((v14 & 1) == 0)
    {
      v26.origin.x = v12;
      v26.origin.y = v13;
      v26.size.width = v16;
      v26.size.height = v15;
      CGRectGetMinY(v26);
    }
  }
  else
  {
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentInset");
  }
  return 0.0;
}

void sub_10032B920(_QWORD *a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  double (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  _QWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[32];

  v5 = v4;
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v43, 0, 0);
  v13 = *v12;
  if ((*v12 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = (uint64_t *)*(id *)(v13 + 8 * v11 + 32);
      if ((a3 & 1) == 0)
        goto LABEL_24;
LABEL_5:
      v37 = a4;
      a3 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
      swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v39, 1, 0);
      a4 = *a3;
      v38 = v5;
      if (!((unint64_t)*a3 >> 62))
      {
        v14 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v14)
        {
LABEL_7:
          type metadata accessor for SyncedLyricsLineView();
          if (v14 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v14; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a4);
            else
              v16 = *(id *)(a4 + 8 * i + 32);
            v17 = v16;
            if ((static NSObject.== infix(_:_:)(v16, v12) & 1) == 0)
              sub_10031C788(0, a2);

          }
        }
LABEL_23:
        swift_bridgeObjectRelease();
        *a3 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        v5 = v38;
        LOBYTE(a4) = v37;
        goto LABEL_24;
      }
LABEL_19:
      if (a4 < 0)
        v18 = a4;
      else
        v18 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v14)
        goto LABEL_7;
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v12 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v13);
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_24:
  sub_10031C788(1, a2);
  sub_100327F18((uint64_t)v12, a2 != 0);
  v19 = *(void **)((char *)v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v19)
  {
    v20 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v19, v20))
    {
      v21 = *(void **)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
      *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = v12;
      v22 = v19;
      v23 = v12;

      if ((a4 & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
        v25 = 0.0;
        if (v24)
        {
          swift_beginAccess(v24 + 96, v41, 0, 0);
          v26 = *(double (**)(uint64_t))(v24 + 96);
          if (v26)
          {
            v27 = *(_QWORD *)(v24 + 104);
            swift_retain(v24);
            v28 = sub_1000DB0D8((uint64_t)v26, v27);
            v29 = v26(v28);
            swift_beginAccess(v24 + 88, v40, 0, 0);
            v30 = 0.0;
            if (*(_BYTE *)(v24 + 88) == 1)
            {
              Lyrics.spatialOffset.getter();
              v30 = v31;
            }
            sub_1000DB26C((uint64_t)v26, v27);
            swift_release(v24);
            v25 = v29 - v30;
          }
        }
        sub_100318968(v25);
      }

    }
  }
  sub_10032CDCC(v12, 1, 0.0);
  v32 = (_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v42, 33, 0);
  v33 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
  specialized Array._endMutation()(v36);
  swift_endAccess(v42);

}

void sub_10032BCD8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  id v45;
  double v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  double v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  double v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  id v94;
  void *v95;
  double v96;
  CGFloat v97;
  double *v98;
  double v99;
  CGFloat v100;
  id v101;
  void *v102;
  double v103;
  uint64_t v104;
  double v105;
  double v106;
  CGFloat v107;
  double v108;
  CGFloat v109;
  char **v110;
  id v111;
  void *v112;
  double v113;
  CGFloat v114;
  double *v115;
  double v116;
  CGFloat v117;
  id v118;
  void *v119;
  double v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  double v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  id v140;
  void *v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t **v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t ObjectType;
  uint64_t *v151;
  void (*v152)(uint64_t, uint64_t, uint64_t);
  id v153;
  void *v154;
  void (*v155)(__int128 *, char);
  unsigned __int8 *v156;
  unsigned __int8 *v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  char *v172;
  void (*v173)(__int128 *, char);
  char v174[24];
  char v175[24];
  Swift::Int v176;
  char v177[24];
  _QWORD v178[3];
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  char v184[24];
  char v185[24];
  uint64_t v186;
  _BYTE v187[24];
  char v188[24];
  uint64_t v189;
  _QWORD v190[3];
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;

  v4 = v1;
  v6 = objc_msgSend(v1, "traitCollection");
  v7 = objc_msgSend(v6, "accessibilityContrast");

  v172 = v4;
  if (v7 != (id)1)
  {
    v19 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v190, 0, 0);
    if (*v19 == 1)
      return;
    if (a1)
    {
      v189 = a1;
      v3 = a1;
      goto LABEL_10;
    }
    v88 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v88 || (swift_beginAccess(v88 + 80, v188, 0, 0), v89 = *(_QWORD *)(v88 + 80), !*(_QWORD *)(v89 + 16)))
    {
      v104 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      *(_QWORD *)&v105 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v187, 0, 0).n128_u64[0];
      v8 = *(_QWORD *)v104;
      if (*(_QWORD *)v104 >> 62)
        goto LABEL_165;
      if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
        return;
      goto LABEL_90;
    }
    sub_1000C53BC(v89 + 32, (uint64_t)&v191);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
    v91 = v90;
    v93 = v92;
    v94 = objc_msgSend(v4, "view");
    if (!v94)
      goto LABEL_189;
    v95 = v94;
    objc_msgSend(v94, "frame");
    v97 = v96;

    v98 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v99 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v187, 0, 0).n128_u64[0];
    v100 = *v98;
    if (*v98 <= 0.0)
    {
      v101 = objc_msgSend(v4, "view", v99);
      if (!v101)
        goto LABEL_191;
      v102 = v101;
      objc_msgSend(v101, "frame");
      v100 = v103;

    }
    v3 = sub_10032B37C(&v191, v91, v93, v97, v100);
    sub_100011758(&v191);
    v189 = v3;
    while (1)
    {
LABEL_10:
      v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v185, 0, 0);
      v17 = *(_QWORD *)v8;
      v186 = *(_QWORD *)v8;
      if ((unint64_t)v3 >> 62)
      {
LABEL_106:
        if (v3 < 0)
          v126 = v3;
        else
          v126 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = _CocoaArrayWrapper.endIndex.getter(v126);
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_12:
          if (v20 >= 1)
          {
            v21 = 0;
            v22 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            v169 = v20;
            v170 = v3 & 0xC000000000000001;
            v168 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            while (1)
            {
              if (v170)
                v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v3);
              else
                v25 = *(id *)(v3 + 8 * v21 + 32);
              v17 = (uint64_t)v25;
              v26 = *(_QWORD *)&v4[v22];
              if (!v26)
                goto LABEL_33;
              swift_beginAccess(v26 + 80, v184, 0, 0);
              v27 = *(_QWORD *)(v26 + 80);
              if (!*(_QWORD *)(v27 + 16))
                goto LABEL_33;
              sub_1000C53BC(v27 + 32, (uint64_t)&v191);
              v28 = *(_QWORD *)(v27 + 16);
              if (!v28)
              {
                sub_100011758(&v191);
LABEL_33:
                v48 = v21 + 3;
                if (__OFADD__(v21, 3))
                {
                  __break(1u);
                  goto LABEL_104;
                }
                v49 = objc_msgSend(v4, "traitCollection");
                v50 = objc_msgSend(v49, "accessibilityContrast");

                if (v50 != (id)1 || v48 <= 0)
                {
                  v52 = (double)v48;
                  if ((double)v48 > 4.0)
                    v52 = 4.0;
                  sub_10031CBC0(1, v52);
                  swift_beginAccess(v8, &v191, 33, 0);
                  if (v21 == -3)
                  {
                    v54 = (void *)sub_10039CB2C((void *)v17);
                    swift_endAccess(&v191);

                  }
                  else
                  {
                    sub_10039AD1C((Swift::Int *)&v181, (id)v17);
                    v53 = (void *)v181;
                    swift_endAccess(&v191);

                  }
                }
                goto LABEL_16;
              }
              v29 = v3;
              sub_1000C53BC(v27 + 32 + 40 * v28 - 40, (uint64_t)&v181);
              v30 = v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
              swift_beginAccess(v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v177, 0, 0);
              sub_1000C53BC(v30, (uint64_t)v178);
              v31 = v179;
              v32 = v180;
              sub_10000D900(v178, v179);
              v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
              v35 = v182;
              v34 = v183;
              sub_10000D900(&v181, v182);
              v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
              sub_100011758(v178);
              if (v36 >= v33)
              {
                sub_1000C53BC(v30, (uint64_t)v178);
                v55 = v179;
                v56 = v180;
                sub_10000D900(v178, v179);
                v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
                v58 = v194;
                v59 = v195;
                sub_10000D900(&v191, v194);
                v60 = (*(uint64_t (**)(uint64_t, unint64_t))(v59 + 16))(v58, v59);
                sub_100011758(v178);
                v4 = v172;
                v61 = objc_msgSend(v172, "traitCollection");
                v62 = objc_msgSend(v61, "accessibilityContrast");

                if (v57 >= v60)
                {
                  sub_10031CBC0(1, 0.0);
                  swift_beginAccess(v8, v178, 33, 0);
                  v23 = (void *)sub_10039CB2C((void *)v17);
                  swift_endAccess(v178);

                  v3 = v29;
                  v22 = v168;
                  v20 = v169;
                }
                else
                {
                  v3 = v29;
                  v22 = v168;
                  v20 = v169;
                  if (v62 != (id)1)
                  {
                    sub_10031CBC0(1, 3.0);
LABEL_47:
                    swift_beginAccess(v8, v178, 33, 0);
                    sub_10039AD1C(&v176, (id)v17);
                    v63 = (void *)v176;
                    swift_endAccess(v178);

                  }
                }
              }
              else
              {
                sub_1000C53BC(v30, (uint64_t)v178);
                v37 = v179;
                v38 = v180;
                sub_10000D900(v178, v179);
                v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
                v3 = v182;
                v40 = v183;
                sub_10000D900(&v181, v182);
                v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v3, v40);
                v42 = v39 - v41;
                v4 = v172;
                if (__OFSUB__(v39, v41))
                  goto LABEL_105;
                sub_100011758(v178);
                v43 = (double)v42 + 1.0;
                v44 = objc_msgSend(v172, "traitCollection");
                v45 = objc_msgSend(v44, "accessibilityContrast");

                v3 = v29;
                v22 = v168;
                v20 = v169;
                if (v45 == (id)1 && v43 > 0.0)
                  goto LABEL_15;
                if (v43 <= 4.0)
                  v46 = (double)v42 + 1.0;
                else
                  v46 = 4.0;
                sub_10031CBC0(1, v46);
                if (v43 != 0.0)
                  goto LABEL_47;
                swift_beginAccess(v8, v178, 33, 0);
                v47 = (void *)sub_10039CB2C((void *)v17);
                swift_endAccess(v178);

              }
LABEL_15:
              sub_100011758(&v181);
              sub_100011758(&v191);
LABEL_16:
              ++v21;
              v24 = (void *)sub_10039CB2C((void *)v17);

              if (v20 == v21)
              {
                v79 = (_QWORD *)swift_bridgeObjectRelease();
                v17 = v186;
                if ((v186 & 0xC000000000000001) == 0)
                  goto LABEL_111;
LABEL_76:
                if (v17 < 0)
                  v80 = v17;
                else
                  v80 = v17 & 0xFFFFFFFFFFFFFF8;
                v81 = __CocoaSet.makeIterator()(v80);
                v82 = type metadata accessor for SyncedLyricsLineView();
                v83 = sub_10001254C(&qword_10055A508, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
                v79 = Set.Iterator.init(_cocoa:)(&v191, v81, v82, v83);
                v17 = v191;
                v84 = v192;
                v85 = v193;
                v86 = v194;
                v87 = v195;
                goto LABEL_115;
              }
            }
          }
          goto LABEL_157;
        }
      }
      else
      {
        v20 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
          goto LABEL_12;
      }
      v79 = (_QWORD *)swift_bridgeObjectRelease();
      if ((v17 & 0xC000000000000001) != 0)
        goto LABEL_76;
LABEL_111:
      v86 = 0;
      v127 = -1 << *(_BYTE *)(v17 + 32);
      v84 = v17 + 56;
      v85 = ~v127;
      v128 = -v127;
      if (v128 < 64)
        v129 = ~(-1 << v128);
      else
        v129 = -1;
      v87 = v129 & *(_QWORD *)(v17 + 56);
LABEL_115:
      v3 = (unint64_t)(v85 + 64) >> 6;
      if (v17 < 0)
      {
        while (1)
        {
          v132 = __CocoaSet.Iterator.next()(v79);
          if (!v132)
            break;
          v133 = v132;
          v178[0] = v132;
          v134 = type metadata accessor for SyncedLyricsLineView();
          swift_unknownObjectRetain(v133);
          swift_dynamicCast(&v181, v178, (char *)&type metadata for Swift.AnyObject + 8, v134, 7);
          v135 = (id)v181;
          *(_QWORD *)&v136 = swift_unknownObjectRelease(v133).n128_u64[0];
          v131 = v86;
          v4 = (char *)v87;
          if (!v135)
            break;
LABEL_136:
          v140 = objc_msgSend(v172, "traitCollection", v136);
          objc_msgSend(v140, "accessibilityContrast");

          sub_10031CBC0(0, 0.0);
          swift_beginAccess(v8, &v181, 33, 0);
          v141 = (void *)sub_10039CB2C(v135);
          swift_endAccess(&v181);

          v86 = v131;
          v87 = (unint64_t)v4;
          if ((v17 & 0x8000000000000000) == 0)
            goto LABEL_116;
        }
      }
      else
      {
LABEL_116:
        if (v87)
        {
          v4 = (char *)((v87 - 1) & v87);
          v130 = __clz(__rbit64(v87)) | (v86 << 6);
          v131 = v86;
          goto LABEL_135;
        }
        v137 = v86 + 1;
        if (__OFADD__(v86, 1))
        {
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (v137 < v3)
        {
          v138 = *(_QWORD *)(v84 + 8 * v137);
          v131 = v86 + 1;
          if (!v138)
          {
            v131 = v86 + 2;
            if (v86 + 2 >= v3)
              goto LABEL_138;
            v138 = *(_QWORD *)(v84 + 8 * v131);
            if (!v138)
            {
              v131 = v86 + 3;
              if (v86 + 3 >= v3)
                goto LABEL_138;
              v138 = *(_QWORD *)(v84 + 8 * v131);
              if (!v138)
              {
                v131 = v86 + 4;
                if (v86 + 4 >= v3)
                  goto LABEL_138;
                v138 = *(_QWORD *)(v84 + 8 * v131);
                if (!v138)
                {
                  v139 = v86 + 5;
                  do
                  {
                    if (v3 == v139)
                      goto LABEL_138;
                    v138 = *(_QWORD *)(v84 + 8 * v139++);
                  }
                  while (!v138);
                  v131 = v139 - 1;
                }
              }
            }
          }
          v4 = (char *)((v138 - 1) & v138);
          v130 = __clz(__rbit64(v138)) + (v131 << 6);
LABEL_135:
          v135 = *(id *)(*(_QWORD *)(v17 + 48) + 8 * v130);
          if (!v135)
            goto LABEL_138;
          goto LABEL_136;
        }
      }
LABEL_138:
      sub_100194204(v17);
      v104 = *(_QWORD *)v8;
      if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
      {
        if (v104 < 0)
          v142 = *(_QWORD *)v8;
        else
          v142 = v104 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v144 = __CocoaSet.count.getter(v142, v143);
        swift_bridgeObjectRelease();
      }
      else
      {
        v144 = *(_QWORD *)(v104 + 16);
      }
      if (v144 < 1)
        return;
      v145 = (uint64_t **)&v172[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v172[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v178, 0, 0);
      v8 = (uint64_t)*v145;
      if (!((unint64_t)*v145 >> 62))
      {
        v2 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v2)
          goto LABEL_162;
        goto LABEL_147;
      }
LABEL_158:
      if (v8 < 0)
        v104 = v8;
      else
        v104 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter(v104);
      if (!v2)
        goto LABEL_162;
LABEL_147:
      if (v2 >= 1)
      {
        v146 = 0;
        v171 = v8 & 0xC000000000000001;
        do
        {
          if (v171)
            v156 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v146, v8);
          else
            v156 = (unsigned __int8 *)*(id *)(v8 + 8 * v146 + 32);
          v157 = v156;
          v158 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
          v156[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 0;
          v155 = sub_10031BD80((uint64_t)&v181);
          v160 = *(void **)v159;
          if (*(_QWORD *)v159)
          {
            v147 = v159;
            v148 = v157[v158];
            v149 = *(_QWORD *)(v159 + 8);
            v173 = v155;
            ObjectType = swift_getObjectType();
            v176 = (Swift::Int)v160;
            v151 = (uint64_t *)v8;
            v152 = *(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 40);
            v153 = v160;
            v152(v148, ObjectType, v149);
            v8 = (uint64_t)v151;
            v154 = *(void **)v147;
            *(_QWORD *)v147 = v176;
            *(_QWORD *)(v147 + 8) = v149;

            v155 = v173;
          }
          v155(&v181, 0);
          ++v146;

        }
        while (v2 != v146);
LABEL_162:
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
LABEL_165:
      if (v8 < 0)
        v161 = v8;
      else
        v161 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v162 = _CocoaArrayWrapper.endIndex.getter(v161);
      swift_bridgeObjectRelease();
      if (v162 < 1)
        return;
LABEL_90:
      objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v105);
      v107 = v106;
      v109 = v108;
      v110 = &selRef_propertySetByCombiningWithPropertySet_;
      v111 = objc_msgSend(v4, "view");
      if (!v111)
        goto LABEL_190;
      v112 = v111;
      objc_msgSend(v111, "frame");
      v114 = v113;

      v115 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
      *(_QWORD *)&v116 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v175, 0, 0).n128_u64[0];
      v117 = *v115;
      if (*v115 <= 0.0)
      {
        v118 = objc_msgSend(v4, "view", v116);
        if (!v118)
          goto LABEL_192;
        v119 = v118;
        objc_msgSend(v118, "frame");
        v117 = v120;

      }
      v121 = *(_QWORD *)v104;
      if ((*(_QWORD *)v104 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v122 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v121);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(_QWORD *)((v121 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_172;
        }
        v122 = (char *)*(id *)(v121 + 32);
      }
      v123 = (uint64_t)&v122[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v122[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v174, 0, 0);
      sub_1000C53BC(v123, (uint64_t)&v191);

      v3 = sub_10032B37C(&v191, v107, v109, v114, v117);
      sub_100011758(&v191);
      v189 = v3;
      v110 = (char **)((unint64_t)v3 >> 62);
      if ((unint64_t)v3 >> 62)
      {
LABEL_172:
        if (v3 < 0)
          v163 = v3;
        else
          v163 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v164 = _CocoaArrayWrapper.endIndex.getter(v163);
        v2 = v3;
        swift_bridgeObjectRelease();
        if (v164 < 1)
          goto LABEL_187;
        swift_bridgeObjectRetain();
        v165 = _CocoaArrayWrapper.endIndex.getter(v163);
        swift_bridgeObjectRelease();
        if (!v165)
          goto LABEL_193;
        swift_bridgeObjectRetain();
        v166 = _CocoaArrayWrapper.endIndex.getter(v163);
        swift_bridgeObjectRelease();
        v4 = v172;
        if (v166)
        {
LABEL_99:
          if ((v3 & 0xC000000000000001) != 0)
            goto LABEL_179;
          if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v124 = *(id *)(v3 + 32);
            if (!v110)
              goto LABEL_102;
            goto LABEL_180;
          }
          __break(1u);
LABEL_187:
          v4 = v172;
          v3 = v2;
        }
        else
        {
          __break(1u);
LABEL_179:
          v124 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
          if (!v110)
          {
LABEL_102:
            v125 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_184;
          }
LABEL_180:
          if (v3 < 0)
            v167 = v3;
          else
            v167 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v125 = _CocoaArrayWrapper.endIndex.getter(v167);
          swift_bridgeObjectRelease();
LABEL_184:
          if (!v125)
          {
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
            return;
          }
          sub_1002E5770(0, 1);

          v3 = v189;
        }
      }
      else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_99;
      }
    }
  }
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], &v181, 0, 0);
  v9 = *(_QWORD *)v8;
  if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v10 = *(_QWORD *)v8;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = type metadata accessor for SyncedLyricsLineView();
    v13 = sub_10001254C(&qword_10055A508, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v14 = Set.Iterator.init(_cocoa:)(&v191, v11, v12, v13);
    v9 = v191;
    v15 = v192;
    v16 = v193;
    v17 = v194;
    v18 = v195;
  }
  else
  {
    v64 = -1 << *(_BYTE *)(v9 + 32);
    v15 = v9 + 56;
    v16 = ~v64;
    v65 = -v64;
    if (v65 < 64)
      v66 = ~(-1 << v65);
    else
      v66 = -1;
    v18 = v66 & *(_QWORD *)(v9 + 56);
    v14 = (_QWORD *)swift_bridgeObjectRetain();
    v17 = 0;
  }
  v67 = (unint64_t)(v16 + 64) >> 6;
  if (v9 < 0)
    goto LABEL_55;
  while (1)
  {
    if (v18)
    {
      v4 = (char *)((v18 - 1) & v18);
      v68 = __clz(__rbit64(v18)) | (v17 << 6);
      v3 = v17;
      goto LABEL_72;
    }
    v74 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    if (v74 >= v67)
      goto LABEL_80;
    v75 = *(_QWORD *)(v15 + 8 * v74);
    v3 = v17 + 1;
    if (!v75)
    {
      v3 = v17 + 2;
      if (v17 + 2 >= v67)
        goto LABEL_80;
      v75 = *(_QWORD *)(v15 + 8 * v3);
      if (!v75)
      {
        v3 = v17 + 3;
        if (v17 + 3 >= v67)
          goto LABEL_80;
        v75 = *(_QWORD *)(v15 + 8 * v3);
        if (!v75)
        {
          v3 = v17 + 4;
          if (v17 + 4 >= v67)
            goto LABEL_80;
          v75 = *(_QWORD *)(v15 + 8 * v3);
          if (!v75)
            break;
        }
      }
    }
LABEL_71:
    v4 = (char *)((v75 - 1) & v75);
    v68 = __clz(__rbit64(v75)) + (v3 << 6);
LABEL_72:
    v72 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v68);
    if (!v72)
      goto LABEL_80;
    while (1)
    {
      v77 = objc_msgSend(v172, "traitCollection", v73);
      objc_msgSend(v77, "accessibilityContrast");

      sub_10031CBC0(0, 0.0);
      swift_beginAccess(v8, v178, 33, 0);
      v78 = (void *)sub_10039CB2C(v72);
      swift_endAccess(v178);

      v17 = v3;
      v18 = (unint64_t)v4;
      if ((v9 & 0x8000000000000000) == 0)
        break;
LABEL_55:
      v69 = __CocoaSet.Iterator.next()(v14);
      if (v69)
      {
        v70 = v69;
        v190[0] = v69;
        v71 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v70);
        swift_dynamicCast(v178, v190, (char *)&type metadata for Swift.AnyObject + 8, v71, 7);
        v72 = (id)v178[0];
        *(_QWORD *)&v73 = swift_unknownObjectRelease(v70).n128_u64[0];
        v3 = v17;
        v4 = (char *)v18;
        if (v72)
          continue;
      }
      goto LABEL_80;
    }
  }
  v76 = v17 + 5;
  while (v67 != v76)
  {
    v75 = *(_QWORD *)(v15 + 8 * v76++);
    if (v75)
    {
      v3 = v76 - 1;
      goto LABEL_71;
    }
  }
LABEL_80:
  sub_100194204(v9);
}

void sub_10032CDCC(void *a1, char a2, double a3)
{
  char *v3;
  char *v4;
  id v8;
  id v9;
  double v10;
  void *v11;
  _BYTE v12[24];
  Swift::Int v13;

  v4 = v3;
  v8 = objc_msgSend(v4, "traitCollection");
  v9 = objc_msgSend(v8, "accessibilityContrast");

  if (v9 != (id)1 || a3 <= 0.0)
  {
    v10 = 4.0;
    if (a3 <= 4.0)
      v10 = a3;
    sub_10031CBC0(a2 & 1, v10);
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v12, 33, 0);
    if (a3 == 0.0)
    {
      v11 = (void *)sub_10039CB2C(a1);
    }
    else
    {
      sub_10039AD1C(&v13, a1);
      v11 = (void *)v13;
    }
    swift_endAccess(v12);

  }
}

uint64_t sub_10032CEE4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t **v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(__int128 *, char);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(__int128 *, char);
  _QWORD v52[4];
  _QWORD v53[3];
  char v54[24];
  _QWORD v55[6];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v54, 0, 0);
  v3 = *(_QWORD *)v2;
  if ((*(_QWORD *)v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for SyncedLyricsLineView();
    v7 = sub_10001254C(&qword_10055A508, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v55, v5, v6, v7);
    v3 = v55[0];
    v50 = v55[1];
    v9 = v55[2];
    v10 = v55[3];
    v11 = v55[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v50 = v3 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v3 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v10 = 0;
  }
  v47 = v9;
  v48 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_30;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v23 >= v48)
      goto LABEL_33;
    v24 = *(_QWORD *)(v50 + 8 * v23);
    v17 = v10 + 1;
    if (!v24)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v48)
        goto LABEL_33;
      v24 = *(_QWORD *)(v50 + 8 * v17);
      if (!v24)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v48)
          goto LABEL_33;
        v24 = *(_QWORD *)(v50 + 8 * v17);
        if (!v24)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v48)
            goto LABEL_33;
          v24 = *(_QWORD *)(v50 + 8 * v17);
          if (!v24)
            break;
        }
      }
    }
LABEL_29:
    v15 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_30:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_33;
    while (1)
    {
      v26 = objc_msgSend(v1, "traitCollection", v22, v47);
      objc_msgSend(v26, "accessibilityContrast");

      sub_10031CBC0(1, 0.0);
      swift_beginAccess(v2, v52, 33, 0);
      v27 = (void *)sub_10039CB2C(v21);
      swift_endAccess(v52);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v53[0] = v18;
        v20 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v52, v53, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = (id)v52[0];
        *(_QWORD *)&v22 = swift_unknownObjectRelease(v19).n128_u64[0];
        v17 = v10;
        v15 = v11;
        if (v21)
          continue;
      }
      goto LABEL_33;
    }
  }
  v25 = v10 + 5;
  while (v48 != v25)
  {
    v24 = *(_QWORD *)(v50 + 8 * v25++);
    if (v24)
    {
      v17 = v25 - 1;
      goto LABEL_29;
    }
  }
LABEL_33:
  sub_100194204(v3);
  v28 = (uint64_t **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(v28, v53, 0, 0);
  v2 = (uint64_t)*v28;
  if (!((unint64_t)*v28 >> 62))
  {
    v29 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_35;
    return swift_bridgeObjectRelease();
  }
LABEL_45:
  if (v2 < 0)
    v46 = v2;
  else
    v46 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v46);
  v29 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_35:
  if (v29 >= 1)
  {
    v31 = 0;
    v49 = v2 & 0xC000000000000001;
    do
    {
      if (v49)
        v32 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v2);
      else
        v32 = (unsigned __int8 *)*(id *)(v2 + 8 * v31 + 32);
      v33 = v32;
      v34 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v32[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v36 = sub_10031BD80((uint64_t)v52);
      v37 = *(void **)v35;
      if (*(_QWORD *)v35)
      {
        v38 = v35;
        v39 = v33[v34];
        v40 = *(_QWORD *)(v35 + 8);
        v51 = v36;
        ObjectType = swift_getObjectType();
        v42 = (uint64_t *)v2;
        v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40);
        v44 = v37;
        v43(v39, ObjectType, v40);
        v2 = (uint64_t)v42;
        v45 = *(void **)v38;
        *(_QWORD *)v38 = v37;
        *(_QWORD *)(v38 + 8) = v40;

        v51((__int128 *)v52, 0);
      }
      else
      {
        v36((__int128 *)v52, 0);
      }
      ++v31;

    }
    while (v29 != v31);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_10032D364(uint64_t a1, char a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  char *v8;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char *v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  char **v25;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  CGFloat *v30;
  double v31;
  CGFloat v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t *v65;
  uint64_t (*v66)(void *, uint64_t);
  id v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  BOOL v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  id v79;
  void *v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  double *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  __int128 v95;
  char v96;
  uint64_t v97;
  __int128 v98;
  char *v99;
  char *v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  char **v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t);
  void *v113;
  uint64_t v114;
  void *v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  char *v126;
  id v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  id v135;
  CGFloat v136;
  CGFloat v137;
  double v138;
  double v139;
  unint64_t v140;
  uint64_t v141;
  CGFloat *v142;
  id v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t Strong;
  uint64_t v152;
  uint64_t v153;
  uint64_t ObjectType;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  char *v163;
  unsigned int v164;
  uint64_t v165;
  unint64_t v167;
  unint64_t v168;
  double *v169;
  char **v170;
  _QWORD *v171;
  id v172;
  char *v173;
  __int128 v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  char v179[24];
  char v180[24];
  char v181[24];
  _QWORD aBlock[3];
  void *v183;
  void (*v184)(uint64_t);
  uint64_t v185;
  __int128 v186[2];
  char v187[24];
  char v188[24];
  char v189[24];
  char v190[24];
  char v191[24];
  char v192[24];
  char v193[24];
  char v194[24];
  char v195[24];
  _OWORD v196[2];
  char v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;

  v16 = swift_allocObject(&unk_10051DFC0, 32, 7);
  *(double *)(v16 + 16) = a6;
  *(double *)(v16 + 24) = a7;
  v17 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v19 = v18;
  v20 = v8;
  objc_msgSend(*(id *)&v8[v17], "contentOffset");
  v22 = v21;
  v24 = v23;
  v25 = &selRef_propertySetByCombiningWithPropertySet_;
  v26 = objc_msgSend(v8, "view");
  if (!v26)
    goto LABEL_133;
  v27 = v26;
  objc_msgSend(v26, "frame");
  v29 = v28;

  v30 = (CGFloat *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v31 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v195, 0, 0).n128_u64[0];
  v32 = *v30;
  if (*v30 <= 0.0)
  {
    v33 = objc_msgSend(v20, "view", v31);
    if (!v33)
      goto LABEL_134;
    v34 = v33;
    objc_msgSend(v33, "frame");
    v32 = v35;

  }
  v159 = a4 & 1;
  v36 = a7 - v19;
  v198.origin.x = v22;
  v198.origin.y = v24;
  v198.size.width = v29;
  v198.size.height = v32;
  v202 = CGRectOffset(v198, 0.0, v36);
  v199.origin.x = v22;
  v199.origin.y = v24;
  v199.size.width = v29;
  v199.size.height = v32;
  v200 = CGRectUnion(v199, v202);
  v168 = sub_10032B37C((_QWORD *)a1, v200.origin.x, v200.origin.y, v200.size.width, v200.size.height);
  v37 = *(_QWORD *)(a1 + 24);
  v38 = *(_QWORD *)(a1 + 32);
  sub_10000D900((_QWORD *)a1, v37);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  v40 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v194, 0, 0);
  v41 = *(_QWORD *)v40;
  if ((v41 & 0xC000000000000001) == 0)
  {
    if ((v39 & 0x8000000000000000) != 0)
    {
LABEL_109:
      __break(1u);
    }
    else if (v39 < *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v172 = *(id *)(v41 + 8 * v39 + 32);
      if (v159)
        goto LABEL_17;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_111;
  }
  swift_bridgeObjectRetain();
  v172 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v41);
  swift_bridgeObjectRelease();
  if (v159)
    goto LABEL_17;
LABEL_9:
  v42 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v179, 0, 0);
  if (!*(_QWORD *)v42 || *(_BYTE *)(*(_QWORD *)v42 + 56) != 2)
  {
LABEL_17:
    if ((a2 & 1) != 0)
    {
      v47 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
    }
    else
    {
      v48 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v193, 0, 0);
      if (*(_QWORD *)v48 && *(_BYTE *)(*(_QWORD *)v48 + 56) == 2)
        v47 = sub_100322BD8(a3, v159);
      else
        v47 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    }
    goto LABEL_23;
  }
  v43 = (*(double *)&a3 + -0.2) / 0.55;
  if (*(double *)&a3 > 0.75)
    v43 = 1.0;
  v44 = 0.0;
  if (*(double *)&a3 >= 0.2)
    v44 = v43;
  v45 = (1.0 - v44) * 0.12 + 0.78;
  v46 = v44 * 0.27 + 0.48;
  sub_1000DD108(0, &qword_10055A200, UISpringTimingParameters_ptr);
  v47 = UISpringTimingParameters.init(dampingRatio:response:)(v45, v46);
LABEL_23:
  v49 = v47;
  v50 = *(_QWORD *)(a1 + 24);
  v51 = *(_QWORD *)(a1 + 32);
  sub_10000D900((_QWORD *)a1, v50);
  v52 = (*(double (**)(uint64_t))(*(_QWORD *)(v51 + 8) + 16))(v50);
  v169 = (double *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v53 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v192, 0, 0).n128_u64[0];
  v165 = (uint64_t)v49;
  v156 = a3;
  if ((a2 & 1) != 0 || (v54 = v52 - v169[19], objc_msgSend(v49, "settlingDuration"), v53 = v55 + a8, v54 >= v53))
  {
    objc_msgSend(v49, "settlingDuration", v53);
    v22 = v56;
  }
  else
  {
    v22 = v54 - a8;
    objc_msgSend(v49, "setImplicitDuration:", 0);
  }
  v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 1;
  v25 = (char **)OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v57 = *(char **)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
  v173 = v20;
  v170 = (char **)a1;
  v155 = a2;
  if (v57
    && (v58 = *(void **)&v57[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView]) != 0
    && (v59 = _s23InstrumentalContentViewCMa(), (v60 = swift_dynamicCastClass(v58, v59)) != 0))
  {
    v61 = v60;
    v62 = v16;
    v63 = (uint64_t)&v57[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v57[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v180, 0, 0);
    sub_1000C53BC(v63, (uint64_t)aBlock);
    v64 = v183;
    v16 = (uint64_t)v184;
    v65 = sub_10000D900(aBlock, (uint64_t)v183);
    v66 = *(uint64_t (**)(void *, uint64_t))(v16 + 16);
    v38 = v57;
    v67 = v58;
    v68 = v65;
    v69 = v66(v64, v16);
    a1 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_116;
    }
    sub_100011758(aBlock);
    v70 = (uint64_t)v170[3];
    v71 = v170[4];
    sub_10000D900(v170, v70);
    v72 = (*((uint64_t (**)(uint64_t, char *))v71 + 2))(v70, v71);
    v73 = a1 == v72;
    v16 = v62;
    v20 = v173;
    if (a1 == v72)
    {
      v74 = *(char **)((char *)v25 + (_QWORD)v173);
      *(char **)((char *)v25 + (_QWORD)v173) = 0;

      objc_msgSend((id)v38, "frame");
      *(double *)(v16 + 24) = *(double *)(v16 + 24) - (CGRectGetHeight(v201) + v169[10]);
      sub_100318620();
    }

    a1 = (uint64_t)v170;
  }
  else
  {
    v73 = 0;
  }
  sub_1000C53BC(a1, (uint64_t)aBlock);
  v75 = sub_10000B4C8(&qword_1005592E0);
  v25 = (char **)v165;
  if ((swift_dynamicCast(v186, aBlock, v75, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
  {
    v76 = (_QWORD *)a1;
    a1 = v168;
    sub_10032E620(v76, v168, v165, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36, a8);
    goto LABEL_123;
  }
  if (v73)
  {
    v77 = (_QWORD *)a1;
    a1 = v168;
    sub_10032F108(v77, v168, v165, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36);
    goto LABEL_123;
  }
  a1 = v168;
  v20 = (char *)(v168 >> 62);
  if (!(v168 >> 62))
  {
    v61 = *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_41;
  }
LABEL_111:
  if (a1 < 0)
    v145 = a1;
  else
    v145 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter(v145);
  swift_bridgeObjectRelease();
LABEL_41:
  v78 = _swiftEmptyArrayStorage;
  if (v61)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    v68 = aBlock;
    sub_1002F9450(0, v61 & ~(v61 >> 63), 0);
    if ((v61 & 0x8000000000000000) == 0)
    {
      v38 = 0;
      v78 = (_QWORD *)aBlock[0];
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, a1);
        else
          v79 = *(id *)(a1 + 8 * v38 + 32);
        v80 = v79;
        v81 = UIView.untransformedFrame.getter();
        v83 = v82;
        v85 = v84;
        v87 = v86;

        aBlock[0] = v78;
        v89 = v78[2];
        v88 = v78[3];
        if (v89 >= v88 >> 1)
        {
          sub_1002F9450((char *)(v88 > 1), v89 + 1, 1);
          v78 = (_QWORD *)aBlock[0];
        }
        ++v38;
        v78[2] = v89 + 1;
        v90 = (double *)&v78[4 * v89];
        v90[4] = v81;
        *((_QWORD *)v90 + 5) = v83;
        *((_QWORD *)v90 + 6) = v85;
        *((_QWORD *)v90 + 7) = v87;
      }
      while (v61 != v38);
      v25 = (char **)v165;
      goto LABEL_51;
    }
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
LABEL_51:
  v158 = v16;
  if (v20)
  {
    if (a1 < 0)
      v92 = a1;
    else
      v92 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v91 = _CocoaArrayWrapper.endIndex.getter(v92);
    v20 = v173;
    if (!v91)
    {
LABEL_87:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v132 = sub_100323A2C((uint64_t)v172, a1);
      v16 = v158;
      v25 = v170;
      if ((v133 & 1) != 0)
        goto LABEL_121;
      v61 = v132;
      v68 = (uint64_t *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators], v187, 0, 0);
      v38 = *v68;
      if (!((unint64_t)*v68 >> 62))
      {
        if (v61 < *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_90;
        goto LABEL_121;
      }
LABEL_117:
      if (v38 < 0)
        v146 = v38;
      else
        v146 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v147 = v146;
      v20 = v173;
      v148 = _CocoaArrayWrapper.endIndex.getter(v147);
      swift_bridgeObjectRelease();
      if (v61 < v148)
      {
LABEL_90:
        v134 = *v68;
        if ((v134 & 0xC000000000000001) == 0)
        {
          if (v61 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v61 < *(_QWORD *)((v134 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v135 = *(id *)(v134 + 8 * v61 + 32);
LABEL_94:
            sub_10032B920(v25, v135, (uint64_t *)1, 1);

LABEL_122:
            v25 = (char **)v165;
LABEL_123:
            v149 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
            swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], aBlock, 1, 0);
            if (*v149 == 1)
            {
              *v149 = 0;
              v150 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
              swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], v186, 0, 0);
              Strong = swift_unknownObjectWeakLoadStrong(v150);
              if (Strong)
              {
                v152 = Strong;
                v153 = *((_QWORD *)v150 + 1);
                ObjectType = swift_getObjectType();
                (*(void (**)(char *, uint64_t, uint64_t))(v153 + 24))(v20, ObjectType, v153);
                swift_unknownObjectRelease(v152);
              }
            }
            sub_10032BCD8(a1);
            swift_bridgeObjectRelease();

LABEL_127:
            swift_release(v16);

            return;
          }
          __break(1u);
          goto LABEL_131;
        }
        swift_bridgeObjectRetain();
        v135 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v134);
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
LABEL_121:
      sub_10032B920(v25, 0, (uint64_t *)1, 1);
      goto LABEL_122;
    }
  }
  else
  {
    v91 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v20 = v173;
    if (!v91)
      goto LABEL_87;
  }
  sub_1000DD108(0, (unint64_t *)&qword_100559510, NSObject_ptr);
  v93 = 0;
  v164 = 0;
  v163 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v167 = a1 & 0xC000000000000001;
  v157 = a1 + 32;
  v160 = v61 - 1;
  v94 = __OFSUB__(v61, 1);
  v162 = v94;
  v95 = 0uLL;
  v96 = 1;
  v97 = 56;
  v98 = 0uLL;
  v161 = v91;
  v171 = v78;
  while (1)
  {
    v196[0] = v95;
    v196[1] = v98;
    v197 = v96 & 1;
    if (v167)
      v99 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v93, a1);
    else
      v99 = (char *)*(id *)(v157 + 8 * v93);
    v100 = v99;
    if (__OFADD__(v93, 1))
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v176 = v93 + 1;
    v16 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v25, v22);
    v38 = swift_allocObject(&unk_10051DFE8, 48, 7);
    v101 = static NSObject.== infix(_:_:)(v100, v172);
    sub_10032986C(v100, v101 & 1, (uint64_t)v196);
    *(_QWORD *)(v38 + 16) = v102;
    *(_QWORD *)(v38 + 24) = v103;
    *(_QWORD *)(v38 + 32) = v104;
    *(_QWORD *)(v38 + 40) = v105;
    v177 = v97;
    v178 = (void *)v16;
    if (v93)
    {
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    else
    {
      swift_beginAccess(v38 + 16, v181, 1, 0);
      *(double *)(v38 + 24) = *(double *)(v38 + 24) - v36;
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    if ((unint64_t)v93 >= v171[2])
      goto LABEL_108;
    v106 = *(double *)((char *)v171 + v97);
    swift_beginAccess(v38 + 16, v191, 1, 0);
    if (v106 == *(double *)(v38 + 40))
    {
      v16 = v164;
      v107 = v170;
    }
    else
    {
      v107 = v170;
      v109 = (uint64_t)v170[3];
      v108 = v170[4];
      sub_10000D900(v170, v109);
      v110 = (*((uint64_t (**)(uint64_t, char *))v108 + 2))(v109, v108);
      v111 = (uint64_t)&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v190, 0, 0);
      sub_1000C53BC(v111, (uint64_t)aBlock);
      v113 = v183;
      v112 = v184;
      sub_10000D900(aBlock, (uint64_t)v183);
      LODWORD(v110) = (*((uint64_t (**)(void *, void (*)(uint64_t)))v112 + 2))(v113, v112) < v110;
      sub_100011758(aBlock);
      v16 = v110 | v164;
    }
    v114 = (uint64_t)&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v189, 0, 0);
    sub_1000C53BC(v114, (uint64_t)aBlock);
    v115 = v183;
    v116 = v184;
    sub_10000D900(aBlock, (uint64_t)v183);
    v117 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v116 + 2))(v115, v116);
    v119 = (uint64_t)v107[3];
    v118 = v107[4];
    sub_10000D900(v107, v119);
    v120 = (*((uint64_t (**)(uint64_t, char *))v118 + 2))(v119, v118);
    sub_100011758(aBlock);
    v164 = (v117 != v120) & v16;
    if (v117 != v120)
    {
      v20 = v173;
      a1 = v168;
      v25 = (char **)v165;
      goto LABEL_78;
    }
    v20 = v173;
    a1 = v168;
    v25 = (char **)v165;
    if ((v16 & 1) != 0)
      break;
LABEL_78:
    swift_beginAccess(v38 + 16, v188, 0, 0);
    v174 = *(_OWORD *)(v38 + 32);
    v175 = *(_OWORD *)(v38 + 16);
    v121 = swift_allocObject(&unk_10051E010, 32, 7);
    *(_QWORD *)(v121 + 16) = v100;
    *(_QWORD *)(v121 + 24) = v38;
    v122 = v100;
    swift_retain(v38);
    UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(2, (uint64_t)sub_100333D2C, v121);
    swift_release(v121);
    if (v162)
      goto LABEL_107;
    if (v160 == v93)
    {
      sub_1000C53BC((uint64_t)v170, (uint64_t)v186);
      v123 = swift_allocObject(&unk_10051E038, 88, 7);
      *(_QWORD *)(v123 + 16) = a1;
      *(double *)(v123 + 24) = v36;
      *(_QWORD *)(v123 + 32) = v20;
      *(_QWORD *)(v123 + 40) = v158;
      sub_1000B47A8(v186, v123 + 48);
      v184 = sub_100333D70;
      v185 = v123;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002A4D68;
      v183 = &unk_10051E050;
      v124 = _Block_copy(aBlock);
      v125 = v185;
      swift_bridgeObjectRetain();
      v126 = v173;
      v20 = v173;
      swift_retain(v158);
      objc_msgSend(v178, "addCompletion:", v124, swift_release(v125).n128_f64[0]);
      _Block_release(v124);
    }
    swift_beginAccess(v163, aBlock, 33, 0);
    v127 = v178;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v127);
    v129 = *(_QWORD *)((*(_QWORD *)v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v128 = *(_QWORD *)((*(_QWORD *)v163 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v16 = v161;
    if (v129 >= v128 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v128 > 1, v129 + 1, 1);
    v130 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v129, v127);
    specialized Array._endMutation()(v130);
    swift_endAccess(aBlock);
    if (v93 <= 1)
      v131 = 1;
    else
      v131 = v93;
    objc_msgSend(v127, "startAnimationAfterDelay:", v169[18] * (double)(v131 - 1));
    swift_release(v38);

    v96 = 0;
    ++v93;
    v97 = v177 + 32;
    v98 = v174;
    v95 = v175;
    if (v176 == v161)
      goto LABEL_87;
  }
  swift_bridgeObjectRelease();
  sub_1003300C4();
  v136 = *(double *)(v38 + 16);
  v137 = v36 + *(double *)(v38 + 24);
  *(CGFloat *)(v38 + 24) = v137;
  sub_10032B7C4(v136, v137, *(CGFloat *)(v38 + 32), *(CGFloat *)(v38 + 40));
  v139 = v138;
  if (!v93)
  {
LABEL_105:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10032D364(v170, v155 & 1, v156, v159, 1, 0.0, v139, a8);

    swift_release(v38);
    v16 = v158;
    goto LABEL_127;
  }
  if (v167)
  {
    v140 = v93 - 1;
  }
  else
  {
    v140 = v93 - 1;
    if ((unint64_t)(v93 - 1) >= *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_132;
  }
  if (v140 < v171[2])
  {
    v141 = 0;
    v142 = (CGFloat *)(v171 + 7);
    do
    {
      if (v167)
        v143 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v141, v168);
      else
        v143 = *(id *)(v168 + 8 * v141 + 32);
      v144 = v143;
      ++v141;
      UIView.untransformedFrame.setter(*(v142 - 3), *(v142 - 2), *(v142 - 1), *v142);

      v142 += 4;
    }
    while (v93 != v141);
    goto LABEL_105;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
}

id sub_10032E374(uint64_t a1, CGFloat *a2)
{
  _BYTE v4[24];

  swift_beginAccess(a2 + 2, v4, 0, 0);
  return UIView.untransformedFrame.setter(a2[2], a2[3], a2[4], a2[5]);
}

void sub_10032E3BC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t *v32;
  id v33;
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v6 = a3;
    else
      v6 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v12)
      goto LABEL_10;
  }
  else
  {
    v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_10;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a5);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((a3 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    do
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13++, a3);
      v15 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v15, v16 + a1, v17, v18);
      swift_unknownObjectRelease(v14);
    }
    while (v12 != v13);
  }
  else
  {
    v19 = 0;
    do
    {
      v20 = *(void **)(a3 + 8 * v19++ + 32);
      v21 = v20;
      v22 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v22, v23 + a1, v24, v25);

    }
    while (v12 != v19);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v26 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
  swift_beginAccess(a5 + 16, v36, 0, 0);
  objc_msgSend(v26, "setContentOffset:", *(double *)(a5 + 16), *(double *)(a5 + 24));
  *(_BYTE *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
  v27 = (_QWORD *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v35, 1, 0);
  *v27 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v28 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v28)
    return;
  v29 = a6[3];
  v30 = a6[4];
  sub_10000D900(a6, v29);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 16);
  a6 = v28;
  v6 = v31(v29, v30);
  v32 = (uint64_t *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v34, 0, 0);
  a5 = *v32;
  if ((a5 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v6 >= *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v33 = *(id *)(a5 + 8 * v6 + 32);
LABEL_15:
  sub_10032F908((uint64_t)a6, (uint64_t)v33);

}

uint64_t sub_10032E620(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t (**v29)(void *, void *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  char *v65;
  uint64_t v66;
  char v68[24];
  void **aBlock;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t (**v73)(void *, void *);
  uint64_t v74;
  __int128 v75[2];
  char v76[32];

  v11 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v16 = v14;
    v66 = v14;
    if (v14)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (a2 < 0)
    v59 = a2;
  else
    v59 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v66 = _CocoaArrayWrapper.endIndex.getter(v59);
  if (!v66)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v16 = _CocoaArrayWrapper.endIndex.getter(v59);
  result = swift_bridgeObjectRelease();
LABEL_3:
  v63 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v66 < 1)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v17 = &v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v60 = v11 & 0xC000000000000001;
  v61 = (double *)&v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v76, 0, 0);
  v18 = 0;
  v62 = v11;
  do
  {
    if (v60)
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v11);
    else
      v19 = *(id *)(v11 + 8 * v18 + 32);
    v20 = v19;
    v21 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_1000C53BC((uint64_t)a1, (uint64_t)v75);
    v22 = swift_allocObject(&unk_10051DE80, 80, 7);
    *(_QWORD *)(v22 + 16) = v20;
    sub_1000B47A8(v75, v22 + 24);
    *(_QWORD *)(v22 + 64) = v65;
    *(double *)(v22 + 72) = a7;
    v73 = (uint64_t (**)(void *, void *))sub_100333BF4;
    v74 = v22;
    aBlock = _NSConcreteStackBlock;
    v70 = 1107296256;
    v71 = sub_10015F6F8;
    v72 = &unk_10051DE98;
    v23 = _Block_copy(&aBlock);
    v24 = v74;
    v25 = v20;
    v26 = v65;
    objc_msgSend(v21, "addAnimations:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);
    v27 = (uint64_t)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v68, 0, 0);
    sub_1000C53BC(v27, (uint64_t)&aBlock);
    v28 = v72;
    v29 = v73;
    sub_10000D900(&aBlock, (uint64_t)v72);
    v30 = v29[2](v28, v29);
    v32 = a1[3];
    v31 = a1[4];
    sub_10000D900(a1, v32);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v32, v31);
    sub_100011758(&aBlock);
    if (v30 == v33)
    {
      v34 = v21;
      sub_10032B920(a1, v21, (uint64_t *)1, 0);

      v35 = *(void **)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v35)
      {
        v36 = _s23InstrumentalContentViewCMa();
        v37 = swift_dynamicCastClass(v35, v36);
        if (v37)
        {
          v38 = v37;
          v39 = swift_allocObject(&unk_10051DF20, 40, 7);
          *(_QWORD *)(v39 + 16) = v26;
          *(_QWORD *)(v39 + 24) = v25;
          *(double *)(v39 + 32) = a7;
          v73 = (uint64_t (**)(void *, void *))sub_100333C88;
          v74 = v39;
          aBlock = _NSConcreteStackBlock;
          v70 = 1107296256;
          v71 = sub_10015F6F8;
          v72 = &unk_10051DF38;
          v40 = _Block_copy(&aBlock);
          v41 = v74;
          v42 = v25;
          v43 = v26;
          v44 = v35;
          objc_msgSend(v34, "addAnimations:", v40, swift_release(v41).n128_f64[0]);
          _Block_release(v40);
          v45 = swift_allocObject(&unk_10051DF70, 32, 7);
          *(_QWORD *)(v45 + 16) = v38;
          *(double *)(v45 + 24) = a8;
          v73 = (uint64_t (**)(void *, void *))sub_100333CB8;
          v74 = v45;
          aBlock = _NSConcreteStackBlock;
          v70 = 1107296256;
          v71 = sub_1002A4D68;
          v72 = &unk_10051DF88;
          v46 = _Block_copy(&aBlock);
          v47 = v74;
          v48 = v44;
          objc_msgSend(v34, "addCompletion:", v46, swift_release(v47).n128_f64[0]);
          _Block_release(v46);

        }
      }
    }
    v11 = v62;
    if (v63 == v18)
    {
      sub_1000C53BC((uint64_t)a1, (uint64_t)v75);
      v49 = swift_allocObject(&unk_10051DED0, 104, 7);
      *(_QWORD *)(v49 + 16) = v62;
      *(double *)(v49 + 24) = a7;
      *(_QWORD *)(v49 + 32) = v25;
      *(_QWORD *)(v49 + 40) = v26;
      *(double *)(v49 + 48) = a4;
      *(double *)(v49 + 56) = a5;
      sub_1000B47A8(v75, v49 + 64);
      v73 = (uint64_t (**)(void *, void *))sub_100333C44;
      v74 = v49;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_1002A4D68;
      v72 = &unk_10051DEE8;
      v50 = _Block_copy(&aBlock);
      v51 = v74;
      swift_bridgeObjectRetain();
      v52 = v25;
      v53 = v26;
      objc_msgSend(v21, "addCompletion:", v50, swift_release(v51).n128_f64[0]);
      _Block_release(v50);
    }
    swift_beginAccess(v17, &aBlock, 33, 0);
    v54 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
    v56 = *(_QWORD *)((*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v55 = *(_QWORD *)((*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v56 >= v55 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
    v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
    specialized Array._endMutation()(v57);
    swift_endAccess(&aBlock);
    if (v18 <= 1)
      v58 = 1;
    else
      v58 = v18;
    ++v18;
    objc_msgSend(v54, "startAnimationAfterDelay:", v61[18] * (double)(v58 - 1), v60);

  }
  while (v66 != v18);
  return swift_bridgeObjectRelease();
}

id sub_10032EC18(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_1000C53BC(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  sub_10000D900(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  sub_10000D900(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_100011758(v15);
  if (v12 < v9)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

id sub_10032ED64(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_100329EE8(a2);
  v3 = (uint64_t)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v8, 0, 0);
  sub_1000C53BC(v3, (uint64_t)v9);
  v4 = v10;
  v5 = v11;
  sub_10000D900(v9, v10);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  result = (id)sub_100011758(v9);
  if (!v6)
  {
    objc_msgSend(a2, "frame");
    return objc_msgSend(a2, "setFrame:");
  }
  return result;
}

void sub_10032EE30(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v16 = a5;
    else
      v16 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
    goto LABEL_32;
  v13 = 0;
  do
  {
    if ((a5 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a5);
    else
      v14 = *(id *)(a5 + 8 * v13 + 32);
    v15 = v14;
    ++v13;
    objc_msgSend(v14, "frame");
    objc_msgSend(v15, "setFrame:");

  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease();
  v17 = a6 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v17, v28, 0, 0);
  sub_1000C53BC(v17, (uint64_t)v29);
  v18 = v30;
  v19 = v31;
  sub_10000D900(v29, v30);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v21 = (uint64_t *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v22 = *v21;
  if ((unint64_t)*v21 >> 62)
    goto LABEL_27;
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v23 >= v20)
  {
    sub_100011758(v29);
    if (v20 == v23)
    {
LABEL_16:
      objc_msgSend(*(id *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a2, a3);
      *(_BYTE *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v24 = (_QWORD *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v24, v29, 1, 0);
      *v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v20 >= v23)
      goto LABEL_33;
    while (1)
    {
      v22 = *v21;
      if ((*v21 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v22);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      if (v20 < 0)
        break;
      if ((unint64_t)v20 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_26;
      v25 = (char *)*(id *)(v22 + 8 * v20 + 32);
LABEL_22:
      ++v20;
      sub_100329EE8(v25);

      if (v23 == v20)
        goto LABEL_16;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (v22 < 0)
      v26 = v22;
    else
      v26 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_10032F108(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t (**v28)(void *, void *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  double *v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  char v51[24];
  void **aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (**v56)(void *, void *);
  uint64_t v57;
  __int128 v58[2];
  char v59[32];

  v9 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v15 = v13;
    v50 = v13;
    if (v13)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (a2 < 0)
    v43 = a2;
  else
    v43 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v50 = _CocoaArrayWrapper.endIndex.getter(v43);
  if (!v50)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = _CocoaArrayWrapper.endIndex.getter(v43);
  result = swift_bridgeObjectRelease();
LABEL_3:
  v47 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v50 < 1)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  v16 = &v49[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v44 = v9 & 0xC000000000000001;
  v45 = (double *)&v49[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v49[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v59, 0, 0);
  v17 = 0;
  v46 = v9;
  do
  {
    if (v44)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v9);
    else
      v18 = *(id *)(v9 + 8 * v17 + 32);
    v19 = v18;
    v20 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_1000C53BC((uint64_t)a1, (uint64_t)v58);
    v21 = swift_allocObject(&unk_10051DDE0, 80, 7);
    *(_QWORD *)(v21 + 16) = v19;
    sub_1000B47A8(v58, v21 + 24);
    *(double *)(v21 + 64) = a7;
    *(_QWORD *)(v21 + 72) = v49;
    v56 = (uint64_t (**)(void *, void *))sub_100333B68;
    v57 = v21;
    aBlock = _NSConcreteStackBlock;
    v53 = 1107296256;
    v54 = sub_10015F6F8;
    v55 = &unk_10051DDF8;
    v22 = _Block_copy(&aBlock);
    v23 = v57;
    v24 = v19;
    v25 = v49;
    objc_msgSend(v20, "addAnimations:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);
    v26 = (uint64_t)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v51, 0, 0);
    sub_1000C53BC(v26, (uint64_t)&aBlock);
    v27 = v55;
    v28 = v56;
    sub_10000D900(&aBlock, (uint64_t)v55);
    v29 = v28[2](v27, v28);
    v31 = a1[3];
    v30 = a1[4];
    sub_10000D900(a1, v31);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
    sub_100011758(&aBlock);
    if (v29 == v32)
    {
      v33 = v20;
      sub_10032B920(a1, v20, (uint64_t *)1, 1);

    }
    v9 = v46;
    if (v47 == v17)
    {
      sub_1000C53BC((uint64_t)a1, (uint64_t)v58);
      v34 = swift_allocObject(&unk_10051DE30, 88, 7);
      *(_QWORD *)(v34 + 16) = v46;
      *(_QWORD *)(v34 + 24) = v25;
      *(double *)(v34 + 32) = a4;
      *(double *)(v34 + 40) = a5;
      sub_1000B47A8(v58, v34 + 48);
      v56 = (uint64_t (**)(void *, void *))sub_100333BB0;
      v57 = v34;
      aBlock = _NSConcreteStackBlock;
      v53 = 1107296256;
      v54 = sub_1002A4D68;
      v55 = &unk_10051DE48;
      v35 = _Block_copy(&aBlock);
      v36 = v57;
      swift_bridgeObjectRetain();
      v37 = v25;
      objc_msgSend(v20, "addCompletion:", v35, swift_release(v36).n128_f64[0]);
      _Block_release(v35);
    }
    swift_beginAccess(v16, &aBlock, 33, 0);
    v38 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
    v40 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v39 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v40 >= v39 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
    specialized Array._endMutation()(v41);
    swift_endAccess(&aBlock);
    if (v17 <= 1)
      v42 = 1;
    else
      v42 = v17;
    ++v17;
    objc_msgSend(v38, "startAnimationAfterDelay:", v45[18] * (double)(v42 - 1));

  }
  while (v50 != v17);
  return swift_bridgeObjectRelease();
}

id sub_10032F5A0(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_1000C53BC(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  sub_10000D900(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  sub_10000D900(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_100011758(v15);
  if (v9 < v12)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

void sub_10032F6D4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  if ((a4 & 0xC000000000000001) != 0)
    goto LABEL_18;
  if (*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(a4 + 32);
    goto LABEL_4;
  }
  __break(1u);
  do
  {
    if (v5 < 0)
      v20 = v5;
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
    if (v16 < v6)
      goto LABEL_24;
LABEL_6:
    sub_100011758(v23);
    if (v6 == v16)
    {
LABEL_7:
      objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a1, a2);
      *(_BYTE *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v17 = (_QWORD *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v17, v23, 1, 0);
      *v17 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v6 >= v16)
      goto LABEL_25;
    while (1)
    {
      v18 = *v7;
      if ((*v7 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v18);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v6 < 0)
        break;
      if ((unint64_t)v6 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_17;
      v19 = (char *)*(id *)(v18 + 8 * v6 + 32);
LABEL_13:
      ++v6;
      sub_100329EE8(v19);

      if (v16 == v6)
        goto LABEL_7;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
LABEL_4:
    v12 = v11;
    v13 = (uint64_t)&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v22, 0, 0);
    sub_1000C53BC(v13, (uint64_t)v23);

    v14 = v24;
    v15 = v25;
    sub_10000D900(v23, v24);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    v7 = (uint64_t *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v21, 0, 0);
    v5 = *v7;
  }
  while ((unint64_t)*v7 >> 62);
  v16 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 >= v6)
    goto LABEL_6;
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_10032F908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double *v15;
  double v16;
  CGFloat v17;
  id v18;
  void *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)();
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)();
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  id v44;
  Class isa;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  objc_class *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  char v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD aBlock[3];
  void *v81;
  void (*v82)();
  uint64_t v83;
  char v84[24];
  char v85[24];
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[32];

  v3 = v2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentOffset");
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend((id)v3, "view");
  if (!v11)
  {
    __break(1u);
    goto LABEL_73;
  }
  v12 = v11;
  objc_msgSend(v11, "frame");
  v14 = v13;

  v15 = (double *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v91, 0, 0).n128_u64[0];
  v17 = *v15;
  if (*v15 > 0.0)
    goto LABEL_5;
  v18 = objc_msgSend((id)v3, "view", v16);
  if (!v18)
  {
LABEL_73:
    __break(1u);
    return;
  }
  v19 = v18;
  objc_msgSend(v18, "frame");
  v17 = v20;

LABEL_5:
  v21 = a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v90, 0, 0);
  sub_1000C53BC(v21, (uint64_t)aBlock);
  v22 = sub_10032B37C(aBlock, v8, v10, v14, v17);
  sub_100011758(aBlock);
  v23 = a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v23, v89, 0, 0);
  sub_1000C53BC(v23, (uint64_t)aBlock);
  v24 = v81;
  v25 = v82;
  sub_10000D900(aBlock, (uint64_t)v81);
  v76 = (*((uint64_t (**)(void *, void (*)()))v25 + 2))(v24, v25);
  sub_1000C53BC(v21, (uint64_t)v86);
  v26 = v87;
  v27 = v88;
  sub_10000D900(v86, v87);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  sub_100011758(v86);
  sub_100011758(aBlock);
  sub_1000C53BC(v23, (uint64_t)aBlock);
  v28 = v81;
  v29 = v82;
  sub_10000D900(aBlock, (uint64_t)v81);
  v30 = (*((uint64_t (**)(void *, void (*)()))v29 + 2))(v28, v29);
  v31 = (uint64_t *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v86, 0, 0);
  v79 = v31;
  v32 = *v31;
  v70 = v6;
  if ((unint64_t)*v31 >> 62)
    goto LABEL_63;
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v33 >= v30)
    goto LABEL_7;
LABEL_67:
  __break(1u);
LABEL_68:
  if (v22 < 0)
    v69 = v22;
  else
    v69 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v36 = _CocoaArrayWrapper.endIndex.getter(v69);
  swift_bridgeObjectRelease();
  while (1)
  {
    v72 = (_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    v32 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v85, 0, 0);
    v71 = v32;
    swift_beginAccess(v32, v84, 0, 0);
    v74 = 0;
    if (v30 <= v33)
      v37 = v33;
    else
      v37 = v30;
    v77 = v22 & 0xC000000000000001;
    v78 = v37;
    v73 = v3;
    while (1)
    {
      if (v30 == v78)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v32 = *v79;
      if ((*v79 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v32);
        swift_bridgeObjectRelease();
        if (!v36)
          goto LABEL_18;
      }
      else
      {
        if (v30 < 0)
          goto LABEL_58;
        if ((unint64_t)v30 >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
        v38 = *(id *)(v32 + 8 * v30 + 32);
        if (!v36)
          goto LABEL_18;
      }
      v39 = v33;
      if (v77)
      {
        swift_bridgeObjectRetain();
        v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
      }
      else
      {
        v40 = *(void **)(v22 + 32);
        swift_bridgeObjectRetain();
        v41 = v40;
      }
      v42 = v41;
      v32 = type metadata accessor for SyncedLyricsLineView();
      v43 = static NSObject.== infix(_:_:)(v42, v38);

      if ((v43 & 1) == 0)
        break;
      swift_bridgeObjectRelease();
LABEL_29:
      v33 = v39;
LABEL_30:
      if (v75 >= v76)
        goto LABEL_18;
      v44 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      sub_1000DD108(0, (unint64_t *)&qword_10055A4C0, UIViewPropertyAnimator_ptr);
      isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v44).super.isa;
      v46 = swift_allocObject(&unk_10051DD90, 32, 7);
      *(_QWORD *)(v46 + 16) = v3;
      *(_QWORD *)(v46 + 24) = v38;
      v82 = sub_100333AF8;
      v83 = v46;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10015F6F8;
      v81 = &unk_10051DDA8;
      v47 = _Block_copy(aBlock);
      v48 = v83;
      v49 = (id)v3;
      v50 = v38;
      -[objc_class addAnimations:](isa, "addAnimations:", v47, swift_release(v48).n128_f64[0]);
      _Block_release(v47);
      swift_beginAccess(v72, aBlock, 33, 0);
      v51 = isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
      v53 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v52 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v53 >= v52 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
      v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
      specialized Array._endMutation()(v54);
      swift_endAccess(aBlock);
      -[objc_class startAnimationAfterDelay:](v51, "startAnimationAfterDelay:", *(double *)(v71 + 144) * (double)v74);

      v55 = __OFADD__(v74, 1);
      v32 = ++v74;
      if (v55)
        goto LABEL_62;
LABEL_19:
      if (++v30 == v33)
        goto LABEL_8;
    }
    v33 = v39;
    if (v36 == 1)
      goto LABEL_17;
    if (v77)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v22);
      v57 = static NSObject.== infix(_:_:)(v56, v38);
      swift_unknownObjectRelease(v56);
      if ((v57 & 1) == 0)
      {
        if (v36 == 2)
        {
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          v32 = v3;
          sub_100329EE8((char *)v38);

          goto LABEL_19;
        }
        v58 = 2;
        while (1)
        {
          v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v22);
          v60 = v58 + 1;
          if (__OFADD__(v58, 1))
            break;
          v61 = v59;
          v62 = static NSObject.== infix(_:_:)(v59, v38);
          swift_unknownObjectRelease(v61);
          if ((v62 & 1) != 0)
            goto LABEL_53;
          ++v58;
          v3 = v73;
          if (v60 == v36)
          {
            swift_bridgeObjectRelease();
            v33 = v39;
            goto LABEL_18;
          }
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v63 = *(id *)(v22 + 40);
    v64 = static NSObject.== infix(_:_:)(v63, v38);

    if ((v64 & 1) != 0)
      goto LABEL_46;
    if (v36 == 2)
      goto LABEL_17;
    v3 = 6;
    while (1)
    {
      v65 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v66 = *(id *)(v22 + 8 * v3);
      v67 = static NSObject.== infix(_:_:)(v66, v38);

      if ((v67 & 1) != 0)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        v3 = v73;
        goto LABEL_29;
      }
      ++v3;
      if (v65 == v36)
      {
        swift_bridgeObjectRelease();
        v3 = v73;
        v33 = v39;
        goto LABEL_18;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    if (v32 < 0)
      v68 = v32;
    else
      v68 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v33 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease();
    if (v33 < v30)
      goto LABEL_67;
LABEL_7:
    sub_100011758(aBlock);
    if (v30 == v33)
      break;
    if ((unint64_t)v22 >> 62)
      goto LABEL_68;
    v36 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  if (v75 >= v76)
  {
    v34 = *(void **)(v3 + v70);
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, aBlock, 0, 0);
    v35 = v34;
    objc_msgSend(v35, "contentOffset");
    objc_msgSend(v35, "setContentOffset:");

  }
}

uint64_t sub_1003300C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      if (objc_msgSend(v6, "state") == (id)1)
      {
        objc_msgSend(v7, "stopAnimation:", 0);
        objc_msgSend(v7, "finishAnimationAtPosition:", 0);
      }

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

id Card.ViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

id SyncedLyricsViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  double v7;
  char *v8;
  _BYTE *v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  NSString v16;
  id v17;
  objc_super v19;
  _BYTE __src[544];

  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v7 = Int.seconds.getter(0);
  *(double *)&v3[v6] = v7;
  *(double *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v7;
  v8 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v9 = v3;
  sub_100321D44(0, 0, __src);
  memcpy(v8, __src, 0x219uLL);
  v10 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v11 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v15 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v15 = 0u;
  v15[1] = 0u;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  if (a2)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", v16, a3);

  return v17;
}

id SyncedLyricsViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  double v4;
  char *v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  objc_super v15;
  _BYTE __src[544];

  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v4 = Int.seconds.getter(0);
  *(double *)&v1[v3] = v4;
  *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v4;
  v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v6 = v1;
  sub_100321D44(0, 0, __src);
  memcpy(v5, __src, 0x219uLL);
  v7 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v8 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v9 = 0;
  v9[1] = 0;
  v10 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v12 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v12 = 0u;
  v12[1] = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

id SyncedLyricsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(double a1, uint64_t a2, _QWORD *a3, uint64_t a4, char a5)
{
  sub_1003313A4(a3, a4, a5 & 1, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3, int a4)
{
  sub_1003319B8(a3, a4, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3)
{
  sub_1003324F8(a3, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1, _QWORD *a2)
{
  sub_1003328F0(a2);
}

uint64_t sub_1003308F4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char v25;

  result = (uint64_t)sub_10032B1BC();
  v1 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v2 = result;
    if (!result)
      return swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return swift_bridgeObjectRelease();
  }
  if (v2 >= 1)
  {
    v23 = 0u;
    v24 = 0u;
    v25 = 1;
    if ((v1 & 0xC000000000000001) != 0)
      v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    else
      v3 = (char *)*(id *)(v1 + 32);
    v4 = v3;
    sub_10032986C(v3, 2u, (uint64_t)&v23);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = v4;
    UIView.untransformedFrame.setter(v6, v8, v10, v12);

    v14 = v2 - 1;
    if (v2 != 1)
    {
      v15 = 0;
      do
      {
        *(CGFloat *)&v23 = v6;
        *((CGFloat *)&v23 + 1) = v8;
        *(CGFloat *)&v24 = v10;
        *((CGFloat *)&v24 + 1) = v12;
        v25 = 0;
        if ((v1 & 0xC000000000000001) != 0)
          v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 + 1, v1);
        else
          v16 = (char *)*(id *)(v1 + 8 * v15 + 40);
        v17 = v16;
        sub_10032986C(v16, 2u, (uint64_t)&v23);
        v6 = v18;
        v8 = v19;
        v10 = v20;
        v12 = v21;
        v22 = v17;
        UIView.untransformedFrame.setter(v6, v8, v10, v12);

        ++v15;
      }
      while (v14 != v15);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100330A94(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v7, 0, 0);
  v4 = *v3;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = v5 > 0;
}

void SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1, uint64_t a2)
{
  sub_100332624(a2);
}

Swift::Bool __swiftcall SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  return sub_100333004(shouldReceive.super.isa);
}

Swift::Void __swiftcall SyncedLyricsViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_10032CEE4();
  sub_1003300C4();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll) = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer), "invalidate");
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;

}

void sub_100330C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  }
}

uint64_t sub_100330D80(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100334214;
  return v6(a1);
}

void sub_100330DE4()
{
  sub_10032BCD8(0);
}

uint64_t sub_100330E08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100330E30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10055A31C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000DC64;
  return sub_100326040(a1, v4, v5, v7, v6);
}

uint64_t sub_100330EAC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100330EE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10055A32C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100012D1C;
  return sub_100326E10(a1, v4, v5, v7, v6);
}

unint64_t sub_100330F58()
{
  unint64_t result;

  result = qword_10055A348;
  if (!qword_10055A348)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10055A348);
  }
  return result;
}

uint64_t sub_100330F9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100330FC8()
{
  uint64_t v0;

  return sub_1003287A8(*(char **)(v0 + 24));
}

_QWORD *sub_100330FEC(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = sub_1002F946C(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v16 = v2 & 0xC000000000000001;
    v6 = v2;
    while (v3 != v5)
    {
      if (v16)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = a2();
      v11 = v10;

      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_1002F946C((_QWORD *)(v12 > 1), v13 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      *((_BYTE *)v14 + 40) = v11 & 1;
      v2 = v6;
      if (v3 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100331164(uint64_t a1, char *a2)
{
  uint64_t v4;
  CGFloat *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  uint64_t result;
  void *v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  void *v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  unint64_t v33;
  CGRect v34;
  CGRect v35;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
LABEL_17:
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v33 = a1 & 0xC000000000000001;
  v31 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v5 = (CGFloat *)&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v32, 0, 0);
  v6 = 4;
  while (1)
  {
    if (v33)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    objc_msgSend(v7, "frame");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(*(id *)&a2[v31], "contentOffset");
    v19 = v18;
    v21 = v20;
    result = (uint64_t)objc_msgSend(a2, "view");
    if (!result)
      break;
    v23 = (void *)result;
    objc_msgSend((id)result, "frame");
    v25 = v24;

    v26 = *v5;
    if (*v5 <= 0.0)
    {
      result = (uint64_t)objc_msgSend(a2, "view");
      if (!result)
        goto LABEL_23;
      v27 = (void *)result;
      objc_msgSend((id)result, "frame");
      v26 = v28;

    }
    v34.origin.x = v11;
    v34.origin.y = v13;
    v34.size.width = v15;
    v34.size.height = v17;
    v35.origin.x = v19;
    v35.origin.y = v21;
    v35.size.width = v25;
    v35.size.height = v26;
    v29 = CGRectIntersectsRect(v34, v35);

    if (v29)
    {
      swift_bridgeObjectRelease(a1);
      return 1;
    }
    ++v6;
    if (v9 == v4)
      goto LABEL_14;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_1003313A4(_QWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  char v5;
  char *v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  CGFloat *v33;
  double v34;
  CGFloat v35;
  id v36;
  void *v37;
  double v38;
  int v39;
  char *v40;
  uint64_t v41;
  int v42;
  char *v43;
  double v44;
  void *v45;
  uint64_t (*v46)();
  unint64_t v47;
  id v48;
  id v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  double v58;
  uint64_t v59;
  char *v60;
  objc_class *v61;
  UISpringTimingParameters v62;
  Class isa;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  BOOL v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  double v73;
  void **aBlock;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t (*v78)();
  uint64_t v79;
  _BYTE v80[24];
  char v81[32];
  char v82[24];
  char v83[24];
  char v84[32];
  CGRect v85;
  CGRect v86;

  v6 = v4;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  sub_10000D900(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v84, 0, 0);
  v15 = *(_QWORD *)v14;
  v73 = a4;
  if ((*(_QWORD *)v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
LABEL_6:
  objc_msgSend((id)v13, "frame", *(_QWORD *)&a4);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v26 = v25;
  v28 = v27;
  v29 = objc_msgSend(v6, "view");
  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v30 = v29;
  objc_msgSend(v29, "frame");
  v32 = v31;

  v33 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v34 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v83, 0, 0).n128_u64[0];
  v35 = *v33;
  if (*v33 <= 0.0)
  {
    v36 = objc_msgSend(v6, "view", v34);
    if (!v36)
    {
LABEL_32:
      __break(1u);
      return;
    }
    v37 = v36;
    objc_msgSend(v36, "frame");
    v35 = v38;

  }
  v5 = a3 & 1;
  v85.origin.x = v17;
  v85.origin.y = v19;
  v85.size.width = v21;
  v85.size.height = v23;
  v86.origin.x = v26;
  v86.origin.y = v28;
  v86.size.width = v32;
  v86.size.height = v35;
  if (CGRectIntersectsRect(v85, v86))
  {
    v39 = 0;
  }
  else
  {
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v82, 0, 0);
    v40 = v6;
    v41 = swift_bridgeObjectRetain();
    v42 = sub_100331164(v41, v40);

    swift_bridgeObjectRelease();
    v39 = v42 ^ 1;
  }
  v43 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v44 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v81, 0, 0).n128_u64[0];
  if (*v43 != 2
    && ((objc_msgSend(*(id *)&v6[v24], "isDragging", v44) | v39) & 1) == 0
    && v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] == 1)
  {
    a3 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v80, 0, 0);
    sub_1000C53BC(a3, (uint64_t)&aBlock);
    v45 = v77;
    v46 = v78;
    sub_10000D900(&aBlock, (uint64_t)v77);
    v47 = (*((uint64_t (**)(void *, uint64_t (*)()))v46 + 2))(v45, v46);
    v10 = (_QWORD *)v47;
    v15 = *(_QWORD *)v14;
    if ((*(_QWORD *)v14 & 0xC000000000000001) == 0)
    {
      if ((v47 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v47 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v48 = *(id *)(v15 + 8 * v47 + 32);
LABEL_20:
        v49 = v48;
        v50 = UIView.untransformedFrame.getter();
        v52 = v51;
        v54 = v53;
        v56 = v55;

        sub_10032B7C4(v50, v52, v54, v56);
        v58 = v57;

        sub_100011758(&aBlock);
        sub_1000C53BC(a3, (uint64_t)&aBlock);
        v59 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling;
        sub_10032D364((uint64_t)&aBlock, v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling], a2, v5, 0, 0.0, v58, v73);

        sub_100011758(&aBlock);
        v6[v59] = 0;
        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v60 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v80, 0, 0);
  if (*(_QWORD *)v60 && *(_BYTE *)(*(_QWORD *)v60 + 56) == 2)
    v61 = (objc_class *)sub_100322BD8(a2, v5);
  else
    v61 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v62.super.isa = v61;
  sub_1000DD108(0, (unint64_t *)&qword_10055A4C0, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)(v62).super.isa;
  sub_10032B920(v10, isa, (uint64_t *)1, 1);
  v64 = swift_allocObject(&unk_10051E290, 24, 7);
  *(_QWORD *)(v64 + 16) = v6;
  v78 = sub_1003342B8;
  v79 = v64;
  aBlock = _NSConcreteStackBlock;
  v75 = 1107296256;
  v76 = sub_10015F6F8;
  v77 = &unk_10051E2A8;
  v65 = _Block_copy(&aBlock);
  v66 = v79;
  v67 = v6;
  -[objc_class addAnimations:](isa, "addAnimations:", v65, swift_release(v66).n128_f64[0]);
  _Block_release(v65);
  v68 = -[objc_class state](isa, "state") == (id)3;
  v67[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v68;
  v69 = swift_allocObject(&unk_10051E2E0, 24, 7);
  *(_QWORD *)(v69 + 16) = v67;
  v78 = sub_10033420C;
  v79 = v69;
  aBlock = _NSConcreteStackBlock;
  v75 = 1107296256;
  v76 = sub_1002A4D68;
  v77 = &unk_10051E2F8;
  v70 = _Block_copy(&aBlock);
  v71 = v79;
  v72 = v67;
  -[objc_class addCompletion:](isa, "addCompletion:", v70, swift_release(v71).n128_f64[0]);
  _Block_release(v70);
  -[objc_class startAnimation](isa, "startAnimation");

}

void sub_1003319B8(_QWORD *a1, int a2, double a3)
{
  char *v3;
  char *v4;
  char v5;
  double v6;
  char *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  id (*v17)();
  unint64_t v18;
  id v19;
  id v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  uint64_t *v29;
  uint64_t v30;
  double v31;
  double *v32;
  id v33;
  void *v34;
  double *v35;
  char *v36;
  id v37;
  id v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  id v43;
  void *v44;
  double v45;
  CGFloat v46;
  CGFloat *v47;
  double v48;
  CGFloat v49;
  id v50;
  void *v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  void *v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  double v67;
  double v68;
  void *v69;
  id (*v70)();
  uint64_t v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  id v76;
  void *v77;
  double v78;
  CGFloat v79;
  CGFloat v80;
  id v81;
  void *v82;
  double v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unsigned int v87;
  CGFloat *v88;
  uint64_t v89;
  _QWORD aBlock[3];
  void *v91;
  id (*v92)();
  double *v93;
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  _BYTE v99[64];
  CGRect v100;
  CGRect v101;

  v7 = v3;
  LODWORD(v9) = a2;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  sub_10000D900(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v98, 0, 0);
  v15 = *v14;
  if ((*v14 & 0xC000000000000001) != 0)
    goto LABEL_56;
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_59:
  swift_bridgeObjectRetain();
  v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v15);
  swift_bridgeObjectRelease();
LABEL_9:
  v20 = v19;
  v21 = UIView.untransformedFrame.getter();
  v23 = v22;
  v25 = v24;
  v27 = v26;

  sub_10032B7C4(v21, v23, v25, v27);
  v6 = v28;

  sub_100011758(aBlock);
  v29 = (uint64_t *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v96, 0, 0);
  v30 = *v29;
  swift_bridgeObjectRetain();
  v5 = sub_100323854(v13, v30);
  swift_bridgeObjectRelease();
  v4 = &v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v31 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v95, 0, 0).n128_u64[0];
  if (*v4 == 2 && (v5 & 1) == 0)
  {
    sub_1003300C4();
    v32 = (double *)swift_allocObject(&unk_10051E240, 48, 7);
    *((_QWORD *)v32 + 2) = v7;
    v32[3] = 0.0;
    v32[4] = v6;
    *((_QWORD *)v32 + 5) = v13;
    v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v92 = sub_10033411C;
    v93 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10015F6F8;
    v91 = &unk_10051E258;
    v34 = _Block_copy(aBlock);
    v35 = v93;
    v36 = v7;
    v37 = (id)v13;
    swift_release(v35);
    v13 = (unint64_t)objc_msgSend(v33, "initWithDuration:curve:animations:", 3, v34, 0.25);
    _Block_release(v34);
    if ((v9 & 1) != 0)
    {
      sub_1000C53BC(v12, (uint64_t)aBlock);
      v38 = (id)v13;
      sub_10032B920(aBlock, (void *)v13, (uint64_t *)1, 1);

      sub_100011758(aBlock);
    }
    objc_msgSend((id)v13, "startAnimation");

    goto LABEL_45;
  }
  v89 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v31);
  v40 = v39;
  v42 = v41;
  v43 = objc_msgSend(v7, "view");
  if (!v43)
    goto LABEL_71;
  v44 = v43;
  objc_msgSend(v43, "frame");
  v46 = v45;

  v47 = (CGFloat *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v48 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v94, 0, 0).n128_u64[0];
  v88 = v47;
  v49 = *v47;
  if (*v47 <= 0.0)
  {
    v50 = objc_msgSend(v7, "view", v48);
    if (!v50)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v51 = v50;
    objc_msgSend(v50, "frame");
    v49 = v52;

  }
  objc_msgSend((id)v13, "frame");
  v101.origin.x = v53;
  v101.origin.y = v54;
  v101.size.width = v55;
  v101.size.height = v56;
  v100.origin.x = v40;
  v100.origin.y = v42;
  v100.size.width = v46;
  v100.size.height = v49;
  if (CGRectIntersectsRect(v100, v101))
  {
    sub_1000C53BC((uint64_t)v10, (uint64_t)aBlock);
    v57 = sub_10000B4C8(&qword_1005592E0);
    if ((swift_dynamicCast(v99, aBlock, v57, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0
      && (v9 & 1) != 0)
    {
      sub_1003300C4();
      sub_1003313A4(v10, 0, 1, a3);
LABEL_45:

      return;
    }
  }
  sub_1000C53BC((uint64_t)v10, (uint64_t)aBlock);
  v58 = sub_10000B4C8(&qword_1005592E0);
  if (swift_dynamicCast(v99, aBlock, v58, &type metadata for Lyrics.InstrumentalLine, 6))
  {
    v87 = v9;
    v59 = v10[3];
    v9 = v10[4];
    sub_10000D900(v10, v59);
    v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v59, v9);
    v10 = (_QWORD *)v60;
    v15 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
      goto LABEL_62;
    if ((v60 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v9 = v87;
      if (v60 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v61 = (char *)*(id *)(v15 + 8 * v60 + 32);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_65:
    if (v15 < 0)
      v86 = v15;
    else
      v86 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease();
    if ((uint64_t)v10 >= v9)
      goto LABEL_38;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_33:
  if (!(v5 & 1 | ((v9 & 1) == 0)))
  {
    sub_1000C53BC(v12, (uint64_t)aBlock);
    sub_10032B920(aBlock, 0, (uint64_t *)1, 0);
    sub_100011758(aBlock);
  }
LABEL_35:
  v13 = (unint64_t)(id)v13;
  UIView.untransformedFrame.getter();
  a3 = v67;

  memset(v99, 0, 32);
  v99[32] = 1;
  sub_10032986C((char *)v13, 2u, (uint64_t)v99);
  if (v68 != a3)
  {
    sub_1000C53BC(v12, (uint64_t)aBlock);
    v69 = v91;
    v70 = v92;
    sub_10000D900(aBlock, (uint64_t)v91);
    v71 = (*((uint64_t (**)(void *, id (*)()))v70 + 2))(v69, v70);
    v9 = v71;
    v15 = *v14;
    if ((unint64_t)*v14 >> 62)
      goto LABEL_65;
    v10 = *(_QWORD **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v10 < v71)
      goto LABEL_69;
LABEL_38:
    sub_100011758(aBlock);
    if ((_QWORD *)v9 != v10)
    {
      if (v9 >= (uint64_t)v10)
        goto LABEL_70;
      do
      {
        v15 = *v14;
        if ((*v14 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v15);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v9 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            swift_bridgeObjectRetain();
            v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
            swift_bridgeObjectRelease();
LABEL_5:
            v12 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v97, 0, 0);
            sub_1000C53BC(v12, (uint64_t)aBlock);
            v16 = v91;
            v17 = v92;
            sub_10000D900(aBlock, (uint64_t)v91);
            v18 = (*((uint64_t (**)(void *, id (*)()))v17 + 2))(v16, v17);
            v4 = (char *)v18;
            v15 = *v14;
            if ((*v14 & 0xC000000000000001) != 0)
              goto LABEL_59;
            if ((v18 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v18 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v19 = *(id *)(v15 + 8 * v18 + 32);
              goto LABEL_9;
            }
            __break(1u);
LABEL_62:
            swift_bridgeObjectRetain();
            v61 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
            swift_bridgeObjectRelease();
            LOBYTE(v9) = v87;
LABEL_27:
            v62 = *(void **)&v61[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            v63 = v62;

            if (v62)
            {
              v64 = _s23InstrumentalContentViewCMa();
              if (swift_dynamicCastClass(v63, v64))
              {
                v65 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
                *(_QWORD *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = v13;
                v66 = (id)v13;

                if ((v5 & 1) != 0)
                {
                  sub_100319020(a3);

                  goto LABEL_35;
                }
                sub_100318968(a3);
                LOBYTE(v9) = v87;
              }

            }
            goto LABEL_33;
          }
          if ((unint64_t)v9 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v85 = (char *)*(id *)(v15 + 8 * v9 + 32);
        }
        ++v9;
        sub_100329EE8(v85);

      }
      while (v10 != (_QWORD *)v9);
    }
  }
  sub_1003300C4();
  objc_msgSend(*(id *)&v7[v89], "setContentOffset:", 0.0, v6);
  if (*v4)
    goto LABEL_45;
  objc_msgSend(*(id *)&v7[v89], "contentOffset");
  v73 = v72;
  v75 = v74;
  v76 = objc_msgSend(v7, "view");
  if (!v76)
    goto LABEL_73;
  v77 = v76;
  objc_msgSend(v76, "frame");
  v79 = v78;

  v80 = *v88;
  if (*v88 > 0.0)
  {
LABEL_44:
    sub_1000C53BC(v12, (uint64_t)aBlock);
    v84 = sub_10032B37C(aBlock, v73, v75, v79, v80);
    sub_100011758(aBlock);
    sub_10032BCD8(v84);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v81 = objc_msgSend(v7, "view");
  if (v81)
  {
    v82 = v81;
    objc_msgSend(v81, "frame");
    v80 = v83;

    goto LABEL_44;
  }
LABEL_74:
  __break(1u);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06syncedE14DesectAllLinesyyAA0dE7ManagerCF_0()
{
  char *v0;
  char *v1;
  char *v2;
  double v3;
  id v4;
  UIViewPropertyAnimator v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  _BYTE v19[24];
  Swift::Int v20;
  char v21[24];
  char v22[24];
  char v23[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v23, 0, 0).n128_u64[0];
  if (!*v2
    && (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "isDragging", v3) & 1) == 0)
  {
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v22, 0, 0);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    sub_1000DD108(0, (unint64_t *)&qword_10055A4C0, UIViewPropertyAnimator_ptr);
    v5.super.isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v4).super.isa;
    v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v21, 1, 0);
    v18 = v6;
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6 >> 62)
    {
      if (v7 < 0)
        v17 = *(_QWORD *)v6;
      else
        v17 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (v8)
        goto LABEL_5;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        v9 = 0;
        v10 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          else
            v11 = *(id *)(v7 + 8 * v9 + 32);
          v12 = v11;
          v13 = v5.super.isa;
          sub_10031C788(0, v5.super.isa);

          v14 = objc_msgSend(v1, "traitCollection");
          v15 = objc_msgSend(v14, "accessibilityContrast");

          if (v15 != (id)1)
          {
            sub_10031CBC0(1, 3.0);
            swift_beginAccess(v10, v19, 33, 0);
            v16 = v12;
            sub_10039AD1C(&v20, v16);
            v12 = (void *)v20;
            swift_endAccess(v19);

          }
          ++v9;
        }
        while (v8 != v9);
      }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)v18 = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
  }
}

void sub_1003324F8(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  _BYTE v14[24];

  v4 = a1[3];
  v5 = a1[4];
  sub_10000D900(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v7, v14, 0, 0);
  v8 = *v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v8);
  swift_bridgeObjectRelease();
LABEL_5:
  v10 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  v11 = v10;

  if (v10)
  {
    v12 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v11, v12))
    {
      v13 = v11;
      sub_100319020(a2);

    }
  }
}

void sub_100332624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[40];
  _QWORD __dst[69];

  sub_1000C53BC(a1, (uint64_t)v29);
  v2 = sub_10000B4C8(&qword_1005592E0);
  if ((swift_dynamicCast(__dst, v29, v2, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
  {
    v3 = __dst[2];
    v4 = BYTE1(__dst[3]);
    v5 = __dst[8];
    v6 = __dst[10];
    v7 = __dst[12];
    v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v29, 0, 0);
    v9 = *v8;
    v10 = type metadata accessor for SyncedLyricsLineView();
    swift_bridgeObjectRetain();
    Array.subscript.getter(v3, v9, v10, (uint64_t)__dst);
    swift_bridgeObjectRelease();
    v11 = (void *)__dst[0];
    if (!__dst[0])
    {
      swift_release(v7);
      swift_release(v6);
      swift_release(v5);
      swift_bridgeObjectRelease();
      return;
    }
    v12 = *(void **)(__dst[0] + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (!v12)
      goto LABEL_15;
    v13 = _s19SBS_TextContentViewCMa();
    v14 = swift_dynamicCastClass(v12, v13);
    if (!v14)
      goto LABEL_15;
    v15 = *(_QWORD *)(v14 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v15)
      goto LABEL_24;
    v16 = *(_QWORD *)(v15
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v16)
    {
LABEL_15:
      swift_release(v7);
      swift_release(v6);
      swift_release(v5);
      swift_bridgeObjectRelease();

      return;
    }
    v26 = v6;
    v27 = v5;
    v17 = *(_QWORD *)(v16 + 24);
    v25 = *(_QWORD *)(v15
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v23 = *(_QWORD *)(v16 + 24);
      else
        v23 = v17 & 0xFFFFFFFFFFFFFF8;
      v24 = v12;
      swift_retain(v16);
      swift_bridgeObjectRetain();
      v18 = _CocoaArrayWrapper.endIndex.getter(v23);
      if (v18)
        goto LABEL_9;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v12;
      swift_retain(v16);
      swift_bridgeObjectRetain();
      if (v18)
      {
LABEL_9:
        if (v18 >= 1)
        {
          v20 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
          swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v28, 0, 0);
          v21 = 0;
          do
          {
            if ((v17 & 0xC000000000000001) != 0)
            {
              v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v17);
            }
            else
            {
              v22 = *(_QWORD *)(v17 + 8 * v21 + 32);
              swift_retain(v22);
            }
            ++v21;
            memcpy(__dst, v20, 0x219uLL);
            sub_10030ED5C((uint64_t)__dst);
            sub_1003124D0((uint64_t)__dst, v4);
            sub_10030EE2C((uint64_t)__dst);
            swift_release(v22);
          }
          while (v18 != v21);
          goto LABEL_21;
        }
        __break(1u);
LABEL_24:
        __break(1u);
        return;
      }
    }
LABEL_21:
    swift_release(v25);
    swift_bridgeObjectRelease();
    swift_release(v7);
    swift_release(v26);
    swift_release(v27);
    swift_bridgeObjectRelease();

  }
}

void sub_1003328F0(_QWORD *a1)
{
  char *v1;
  id v3;
  Class isa;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void **aBlock;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v20[24];

  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v20, 0, 0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  sub_1000DD108(0, (unint64_t *)&qword_10055A4C0, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v3).super.isa;
  sub_10032B920(a1, isa, 0, 1);
  v5 = swift_allocObject(&unk_10051E1A0, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v18 = sub_1003340C0;
  v19 = v5;
  aBlock = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_10015F6F8;
  v17 = &unk_10051E1B8;
  v6 = _Block_copy(&aBlock);
  v7 = v19;
  v8 = v1;
  -[objc_class addAnimations:](isa, "addAnimations:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  v9 = -[objc_class state](isa, "state") == (id)3;
  v8[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v9;
  v10 = swift_allocObject(&unk_10051E1F0, 24, 7);
  *(_QWORD *)(v10 + 16) = v8;
  v18 = sub_1003340D8;
  v19 = v10;
  aBlock = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_1002A4D68;
  v17 = &unk_10051E208;
  v11 = _Block_copy(&aBlock);
  v12 = v19;
  v13 = v8;
  -[objc_class addCompletion:](isa, "addCompletion:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  -[objc_class startAnimation](isa, "startAnimation");

}

uint64_t sub_100332AFC(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  v3 = result + 40;
LABEL_2:
  if (v1 <= v2)
    v4 = v2;
  else
    v4 = v1;
  v5 = v4 + 1;
  v6 = (unsigned __int8 *)(v3 + 16 * v1);
  while (1)
  {
    if (v2 == v1)
      return (uint64_t)_swiftEmptyArrayStorage;
    if (v5 == ++v1)
      break;
    v7 = v6 + 16;
    v8 = *v6;
    v6 += 16;
    if (v8 == 1)
    {
      v9 = *((id *)v7 - 3);
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = (uint64_t)sub_1002F946C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        result = (uint64_t)sub_1002F946C((_QWORD *)(v10 > 1), v11 + 1, 1);
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v9;
      *((_BYTE *)v12 + 40) = 1;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_100332C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[24];

  v1 = v0;
  v2 = (uint64_t)sub_10032B1BC();
  if ((unint64_t)v2 >> 62)
    goto LABEL_26;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  while (v3)
  {
    v50 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    v5 = v2 & 0xC000000000000001;
    v6 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v7 = 4;
    v46 = v1;
    v47 = v3;
    v49 = v2;
    while (1)
    {
      v8 = v5
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = *(void **)&v8[*v6];
      if (v11)
      {
        v12 = _s19SBS_TextContentViewCMa();
        v13 = swift_dynamicCastClass(v11, v12);
        if (v13)
        {
          v14 = v6;
          v15 = *(_QWORD *)(v1 + v50);
          if (v15)
          {
            v16 = v13;
            v17 = v5;
            swift_beginAccess(v15 + 96, v52, 0, 0);
            v18 = *(double (**)(uint64_t))(v15 + 96);
            if (v18)
            {
              v19 = *(_QWORD *)(v15 + 104);
              v48 = v11;
              swift_retain(v15);
              v20 = sub_1000DB0D8((uint64_t)v18, v19);
              v21 = v18(v20);
              swift_beginAccess(v15 + 88, v51, 0, 0);
              v22 = 0.0;
              if (*(_BYTE *)(v15 + 88) == 1)
              {
                Lyrics.spatialOffset.getter();
                v22 = v23;
              }
              sub_1000DB26C((uint64_t)v18, v19);
              swift_release(v15);
              v24 = v21 - v22;
              if (v24 == *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress))
              {
                v5 = v17;
                v1 = v46;
                v3 = v47;
                v6 = v14;
                v25 = v48;
                v2 = v49;
              }
              else
              {
                *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v24;
                v26 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_textView);
                v1 = v46;
                if (!v26)
                  goto LABEL_56;
                v5 = v17;
                v6 = v14;
                v27 = v26;
                sub_10030D07C(1, v24);

                v28 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
                v3 = v47;
                v2 = v49;
                if (v28)
                {
                  v25 = v28;
                  sub_10030D07C(1, v24);

                  v9 = v48;
                }
                else
                {
                  v25 = v48;
                }
              }

              v9 = v25;
              goto LABEL_6;
            }
            v5 = v17;
            v3 = v47;
          }
          v6 = v14;
          v2 = v49;
        }
      }
LABEL_6:

      ++v7;
      if (v10 == v3)
      {
        swift_bridgeObjectRelease();
        v4 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_26:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    v3 = _CocoaArrayWrapper.endIndex.getter(v29);
    v4 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  }
  swift_bridgeObjectRelease();
LABEL_31:
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
    return;
  v30 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v31 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v31)
    goto LABEL_49;
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v53, 0, 0);
  v33 = *v32;
  if (!((unint64_t)*v32 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    v35 = v31;
    swift_bridgeObjectRetain();
    if (v34)
      goto LABEL_35;
LABEL_47:
    swift_bridgeObjectRelease();
LABEL_48:

LABEL_49:
    v44 = v4[85];
    v45 = *(_QWORD *)(v1 + v44);
    if (v45)
    {
      swift_retain(*(_QWORD *)(v1 + v44));
      SyncedLyricsManager.update()();
      swift_release(v45);
    }
    return;
  }
  if (v33 < 0)
    v42 = *v32;
  else
    v42 = v33 & 0xFFFFFFFFFFFFFF8;
  v43 = v31;
  swift_bridgeObjectRetain();
  v34 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v34)
    goto LABEL_47;
LABEL_35:
  v36 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_53:
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v33);
    goto LABEL_40;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v37 = *(id *)(v33 + 8 * v36 + 32);
LABEL_40:
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = *v32;
    swift_bridgeObjectRetain();
    v40 = sub_100323854((uint64_t)v31, v39);
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      v41 = *(void **)(v1 + v30);
      *(_QWORD *)(v1 + v30) = 0;

      sub_10032F908((uint64_t)v31, (uint64_t)v38);
      sub_10031C68C();
    }

    goto LABEL_48;
  }
  __break(1u);
LABEL_56:
  __break(1u);
}

id sub_100333004(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  double *v5;
  id v6;
  double v7;
  double v8;
  id result;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char v19[24];
  char v20[24];
  char v21[24];
  CGRect v22;

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen], v21, 0, 0);
  if (*v3 != 1)
    return 0;
  v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v20, 0, 0);
  if (*v4)
    return 0;
  v5 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight], v19, 0, 0);
  if (*v5 <= 0.0)
    return 0;
  v6 = objc_msgSend(v1, "view", *v5);
  objc_msgSend(a1, "locationInView:", v6);
  v8 = v7;

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "frame");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v22.origin.x = v12;
    v22.origin.y = v14;
    v22.size.width = v16;
    v22.size.height = v18;
    return (id)(CGRectGetHeight(v22) - *v5 < v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF14DidEndDragging_14willDecelerateySo08UIScrollF0C_SbtF_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = (void *)objc_opt_self(NSTimer);
  v2 = swift_allocObject(&unk_10051DB58, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v6[4] = sub_100334094;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100133CF8;
  v6[3] = &unk_10051E168;
  v3 = _Block_copy(v6);
  swift_release(v7);
  v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 3.0);
  _Block_release(v3);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) = v4;

}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF15WillEndDragging_12withVelocity19targetContentOffsetySo08UIScrollF0C_So7CGPointVSpyAJGtF_0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = v2;
  if (a2 <= 0.0)
  {
    if (a2 < 0.0)
    {
      v10 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v22, 1, 0);
      if (*v10 == 1)
      {
        *v10 = 0;
        v11 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
        swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v20, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v11);
        if (Strong)
        {
          v13 = Strong;
          v14 = *(_QWORD *)(v11 + 8);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v3, ObjectType, v14);
          swift_unknownObjectRelease(v13);
        }
      }
      v16 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v21, 0, 0);
      v17 = swift_unknownObjectWeakLoadStrong(v16);
      if (v17)
      {
        v7 = v17;
        v18 = *(_QWORD *)(v16 + 8);
        v19 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v3, v19, v18);
        goto LABEL_11;
      }
    }
  }
  else
  {
    v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v22, 1, 0);
    if (*v4 != 1)
    {
      *v4 = 1;
      v5 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v21, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v5);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)(v5 + 8);
        v9 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v9, v8);
LABEL_11:
        swift_unknownObjectRelease(v7);
      }
    }
  }
}

unint64_t sub_1003333E8()
{
  unint64_t result;

  result = qword_10055A3B0;
  if (!qword_10055A3B0)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for SyncedLyricsViewController.Mode, &type metadata for SyncedLyricsViewController.Mode);
    atomic_store(result, (unint64_t *)&qword_10055A3B0);
  }
  return result;
}

void sub_10033342C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_10033347C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

double destroy for SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));

  swift_release(*(_QWORD *)(a1 + 216));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 232)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v11;
  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v3;
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v6 = *(_QWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v9;
  *(_QWORD *)(a1 + 232) = v6;
  swift_bridgeObjectRetain();
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v3);
  v7 = v4;
  swift_retain(v9);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(void **)(a2 + 104);
  v12 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v14 = *(_QWORD *)(a2 + 216);
  v15 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  swift_retain(v14);
  swift_release(v15);
  v17 = *(_QWORD *)(a2 + 224);
  v16 = *(_QWORD *)(a2 + 232);
  v18 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v17;
  *(_QWORD *)(a1 + 232) = v16;
  swift_retain(v16);
  swift_release(v18);
  return a1;
}

__n128 initializeWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v7);
  v8 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  swift_release(v10);
  v12 = *(_QWORD *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 240))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 240) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsSharingTransitionInfo()
{
  return &type metadata for SyncedLyricsSharingTransitionInfo;
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsViewController.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003339E4 + 4 * byte_10043C075[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100333A18 + 4 * asc_10043C070[v4]))();
}

uint64_t sub_100333A18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100333A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100333A28);
  return result;
}

uint64_t sub_100333A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100333A3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100333A40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100333A48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Mode()
{
  return &type metadata for SyncedLyricsViewController.Mode;
}

uint64_t sub_100333A64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100333A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10055A4A4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000DC64;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10055A4A0 + dword_10055A4A0))(a1, v4);
}

void sub_100333AF8()
{
  uint64_t v0;

  sub_100329EE8(*(char **)(v0 + 24));
}

uint64_t sub_100333B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100333B2C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100333B34()
{
  uint64_t v0;

  sub_100011758((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

id sub_100333B68()
{
  uint64_t v0;

  return sub_10032F5A0(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 72));
}

uint64_t sub_100333B7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_100011758((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_100333BB0(uint64_t a1)
{
  uint64_t v1;

  sub_10032F6D4(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100333BC0()
{
  uint64_t v0;

  sub_100011758((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

id sub_100333BF4()
{
  uint64_t v0;

  return sub_10032EC18(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64));
}

uint64_t sub_100333C08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_100011758((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100333C44(uint64_t a1)
{
  uint64_t v1;

  sub_10032EE30(*(double *)(v1 + 24), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100333C5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100333C88()
{
  uint64_t v0;

  return sub_10032ED64(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100333C94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100333CB8()
{
  uint64_t v0;

  sub_100318968(*(double *)(v0 + 24));
}

uint64_t sub_100333CE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100333CF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100333D00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100333D2C()
{
  uint64_t v0;

  return sub_10032E374(*(_QWORD *)(v0 + 16), *(CGFloat **)(v0 + 24));
}

uint64_t sub_100333D34()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release(*(_QWORD *)(v0 + 40));
  sub_100011758((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_100333D70(uint64_t a1)
{
  uint64_t v1;

  sub_10032E3BC(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48));
}

uint64_t sub_100333D84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000C53BC(v3, a2);
}

uint64_t sub_100333DE0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000D900(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

BOOL sub_100333E28(void *a1)
{
  double *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGRect v7;
  CGRect v8;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  objc_msgSend(a1, "frame");
  v8.origin.x = v2;
  v8.origin.y = v3;
  v8.size.width = v4;
  v8.size.height = v5;
  return CGRectIntersectsRect(v7, v8);
}

id sub_100333E70(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = a1;
  v2();
  return v3;
}

uint64_t sub_100333EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100333ED4(uint64_t a1)
{
  uint64_t v1;

  sub_10032A970(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100333EDC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100333F00()
{
  uint64_t v0;

  return sub_1003124CC(v0);
}

uint64_t sub_100333F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8((uint64_t *)&unk_10055A4E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100333F50()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHidden:", 1);
}

id sub_100333F64()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setHidden:", 0);
  return objc_msgSend(v1, "setHighlighted:", 0);
}

_QWORD *sub_100333FA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[10];
  v5 = a1[12];
  v6 = (void *)a1[13];
  v7 = a1[27];
  swift_release(a1[29]);
  swift_release(v7);

  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100334024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10055A4F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10055A4F0 + dword_10055A4F0))(a1, v4);
}

void sub_100334094(uint64_t a1)
{
  uint64_t v1;

  sub_100330C74(a1, v1);
}

uint64_t sub_10033409C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003340C0()
{
  return sub_1003308F4();
}

void sub_1003340D8(uint64_t a1)
{
  uint64_t v1;

  sub_100330A94(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003340F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_10033411C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", *(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_10033413C()
{
  uint64_t v0;

  sub_10032936C(*(void **)(v0 + 16));
}

void sub_100334144()
{
  uint64_t v0;

  sub_1003294A4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10033414C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033415C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10033416C()
{
  uint64_t v0;

  sub_1003274B8(v0);
}

double sub_100334174()
{
  uint64_t v0;

  return sub_100325640(v0);
}

uint64_t sub_10033418C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10055A4BC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10055A4B8 + dword_10055A4B8))(a1, v4);
}

void sub_1003341FC()
{
  uint64_t v0;

  sub_100326D58(v0);
}

double sub_100334204(double a1)
{
  uint64_t v1;

  return sub_100325030(v1, a1);
}

char *LineProgressGradientView.__allocating_init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  objc_class *v7;
  char v14;
  id v15;

  v14 = a2 & 1;
  v15 = objc_allocWithZone(v7);
  return LineProgressGradientView.init(color:featherWidth:direction:frame:)(a1, v14, a3, a4, a5, a6, a7);
}

char *LineProgressGradientView.init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  objc_super v22;

  v14 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v15 = a2 & 1;
  type metadata accessor for LineProgressGradientView.GradientView();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v17 = v7;
  *(_QWORD *)&v7[v14] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = a1;
  *(double *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth] = a3;
  v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] = v15;
  v19 = a1;

  v22.receiver = v17;
  v22.super_class = (Class)type metadata accessor for LineProgressGradientView();
  v20 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a4, a5, a6, a7);
  objc_msgSend(v20, "setClipsToBounds:", 1);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView]);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView]);
  sub_100334660();
  sub_1003348A0();

  return v20;
}

uint64_t type metadata accessor for LineProgressGradientView.GradientView()
{
  return objc_opt_self(_TtCC11MusicCoreUI24LineProgressGradientViewP33_CAA5E92EB35A39E050897B33043EE84412GradientView);
}

uint64_t type metadata accessor for LineProgressGradientView()
{
  return objc_opt_self(_TtC11MusicCoreUI24LineProgressGradientView);
}

Swift::Void __swiftcall LineProgressGradientView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LineProgressGradientView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  sub_100334758();
}

void sub_100334660()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction);
  v2 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (v1)
    v6 = 1.0;
  else
    v6 = 0.0;
  if (v1)
    v7 = 0.0;
  else
    v7 = 1.0;
  objc_msgSend(v5, "setStartPoint:", v6);

  v8 = objc_msgSend(*(id *)(v0 + v2), "layer");
  v9 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v8, v9, 0, 0, 0), "setEndPoint:", v7, 0.0);

  sub_100334758();
}

void sub_100334758()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double Width;
  id v6;
  double v7;
  double v8;
  id v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  if ((v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] & 1) != 0)
  {
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = 0.0;
    v4 = v2;
  }
  else
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v10);
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v4 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = Width - v4;
    if (Width - v4 <= 0.0)
      v2 = Width - v4;
    else
      v2 = 0.0;
  }
  v6 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "setFrame:", v3, 0.0, v4, CGRectGetHeight(v11));

  v9 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView];
  objc_msgSend(v0, "bounds");
  v7 = CGRectGetWidth(v12) - *(double *)&v0[v1];
  if (v7 < 0.0)
    v8 = 0.0;
  else
    v8 = v7;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v9, "setFrame:", v2, 0.0, v8, CGRectGetHeight(v13));

}

id sub_1003348A0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v2 = objc_opt_self(CAGradientLayer);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
  v4 = sub_10000B4C8(&qword_100558DF0);
  v5 = swift_allocObject(v4, 96, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100424BA0;
  v6 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color), "CGColor"));
  _s3__C7CGColorCMa_0(0);
  v9 = v8;
  *(_QWORD *)(v5 + 56) = v8;
  *(_QWORD *)(v5 + 32) = v7;
  v10 = objc_msgSend(*(id *)(v0 + v6), "colorWithAlphaComponent:", 0.0);
  v11 = objc_msgSend(v10, "CGColor");

  *(_QWORD *)(v5 + 88) = v9;
  *(_QWORD *)(v5 + 64) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v3, "setColors:", isa);

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView), "setBackgroundColor:", *(_QWORD *)(v0 + v6));
}

id sub_100334AEC()
{
  return sub_100334B60(0, type metadata accessor for LineProgressGradientView.GradientView);
}

void LineProgressGradientView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LineProgressGradientView", 36, "init(frame:)", 12, 0);
  __break(1u);
}

id LineProgressGradientView.__deallocating_deinit(uint64_t a1)
{
  return sub_100334B60(a1, type metadata accessor for LineProgressGradientView);
}

id sub_100334B60(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

id MPCPlayerResponseItem.hasStoreLyrics.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, "metadataObject");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (v4 && (v5 = objc_msgSend(v4, "lyrics")) != 0)
    {
      v6 = v5;
      v2 = objc_msgSend(v5, "hasStoreLyrics");

    }
    else
    {
      v2 = 0;
    }

  }
  return v2;
}

uint64_t MPCPlayerResponseItem.supportsLyrics.getter()
{
  void *v0;
  uint64_t result;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = (uint64_t)objc_msgSend(v0, "metadataObject");
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend((id)result, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (!v4)
      goto LABEL_11;
    v5 = v4;
    if ((_s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(v4) & 1) == 0)
      goto LABEL_11;
    v6 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v7 = objc_msgSend(v6, "isRemoteServerLikelyReachable");

    if (v7)
    {

      return 1;
    }
    v8 = objc_msgSend(v5, "lyrics");
    if (v8 && (v9 = v8, v10 = objc_msgSend(v8, "text"), v9, v10))
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      swift_bridgeObjectRelease();
      v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v14 = v11 & 0xFFFFFFFFFFFFLL;
      return v14 != 0;
    }
    else
    {
LABEL_11:

      return 0;
    }
  }
  return result;
}

unint64_t sub_100334DE8()
{
  unint64_t result;

  result = qword_10055A5B8;
  if (!qword_10055A5B8)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for LineProgressGradientView.Direction, &type metadata for LineProgressGradientView.Direction);
    atomic_store(result, (unint64_t *)&qword_10055A5B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LineProgressGradientView.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100334E78 + 4 * byte_10043C1F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100334EAC + 4 * byte_10043C1F0[v4]))();
}

uint64_t sub_100334EAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100334EB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100334EBCLL);
  return result;
}

uint64_t sub_100334EC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100334ED0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100334ED4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100334EDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineProgressGradientView.Direction()
{
  return &type metadata for LineProgressGradientView.Direction;
}

unint64_t sub_100334EF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055A610;
  if (!qword_10055A610)
  {
    v1 = objc_opt_self(CAGradientLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055A610);
  }
  return result;
}

char *VocalsAttenuationSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  objc_super v30;
  _QWORD v31[11];

  v30.receiver = v4;
  v30.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  v10 = static AccessibilityIdentifier.named(_:)(0xD000000000000017, (void *)0x8000000100452BC0);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v11);
  v12 = qword_100557CA0;
  v13 = (char *)v9;
  if (v12 != -1)
    swift_once(&qword_100557CA0, sub_1002D2FA0);
  v14 = (void *)qword_100562670;
  v15 = (uint64_t *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess(&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition], v29, 1, 0);
  sub_100335248((uint64_t)v15, (uint64_t)v31);
  v27 = v15[1];
  v28 = *v15;
  v16 = v15[4];
  v25 = v15[3];
  v26 = (void *)v15[2];
  v17 = v15[5];
  v18 = v15[6];
  v20 = v15[7];
  v19 = v15[8];
  v21 = v15[9];
  *(_OWORD *)v15 = xmmword_1004388D0;
  v15[2] = (uint64_t)v14;
  v15[3] = 0x3FF0000000000000;
  v15[4] = 0;
  v15[5] = 0;
  v15[6] = 0x3FF0000000000000;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = (uint64_t)_swiftEmptyArrayStorage;
  v22 = v14;
  sub_100335300(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100335290);
  swift_bridgeObjectRetain();
  v23 = v22;
  swift_bridgeObjectRetain();
  sub_1003352C8(v28, v27, v26, v25, v16, v17, v18, v20, v19, v21);
  sub_10040C5AC((uint64_t)v31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100335300(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003352C8);

  return v13;
}

void VocalsAttenuationSlider.accessibilitySliderCurrentPercentageValue.getter()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

uint64_t sub_100335248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100335290(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    v4 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003352C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);

    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

_QWORD *sub_100335300(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t type metadata accessor for VocalsAttenuationSlider()
{
  return objc_opt_self(MusicVocalsAttenuationSlider);
}

double Corner.radius(in:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  double Width;
  double Height;
  CGRect v14;

  if ((a7 & 1) == 0)
    return *(double *)&a1;
  Width = CGRectGetWidth(*(CGRect *)&a2);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  Height = CGRectGetHeight(v14);
  if (Height >= Width)
    Height = Width;
  return Height * 0.5;
}

void Corner.hash(into:)(uint64_t a1, Swift::UInt64 a2, Swift::UInt a3, char a4)
{
  Swift::UInt64 v6;

  if ((a4 & 1) != 0)
  {
    String.hash(into:)(a1, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(a1, 0x737569646172, 0xE600000000000000);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a2;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a3);
  }
}

BOOL static Corner.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _BOOL4 v6;

  v6 = (a6 & 1) == 0;
  if (*(double *)&a1 != *(double *)&a4)
    v6 = 0;
  if (a2 != a5)
    v6 = 0;
  if ((a3 & 1) != 0)
    return a6 & 1;
  else
    return v6;
}

Swift::Int Corner.hashValue.getter(Swift::UInt64 a1, Swift::UInt a2, char a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  if ((a3 & 1) != 0)
  {
    String.hash(into:)(v8, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(v8, 0x737569646172, 0xE600000000000000);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a1;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10033552C()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_100335584(uint64_t a1)
{
  uint64_t v1;

  Corner.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

Swift::Int sub_100335590()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1003355E4(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a1 + 16);
  result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    v6 = (*(double *)a1 == *(double *)a2) & ~(_DWORD)result;
    if (v5 == *(_QWORD *)(a2 + 8))
      return v6;
    else
      return 0;
  }
  return result;
}

void Border.hash(into:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, double a4)
{
  Swift::UInt64 v8;

  swift_retain(a2);
  Color.hash(into:)(a1, a2);
  swift_release(a2);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a4;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  Hasher._combine(_:)(a3);
}

uint64_t static Border.__derived_struct_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4, double a5, double a6)
{
  int v7;
  unsigned int v8;

  v7 = a2;
  v8 = static Color.== infix(_:_:)(a1, a3) & (a5 == a6);
  if (v7 == a4)
    return v8;
  else
    return 0;
}

Swift::Int Border.hashValue.getter(uint64_t a1, unsigned __int8 a2, double a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  swift_retain(a1);
  Color.hash(into:)(v8, a1);
  swift_release(a1);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)&a3;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_100335760()
{
  uint64_t v0;

  return Border.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 16), *(double *)(v0 + 8));
}

void sub_100335770(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt v5;
  Swift::UInt64 v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((unsigned __int8 *)v1 + 16);
  swift_retain(*v1);
  Color.hash(into:)(a1, v3);
  swift_release(v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v5);
}

Swift::Int sub_1003357D8()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)(v6);
  swift_retain(v1);
  Color.hash(into:)(v6, v1);
  swift_release(v1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_100335850(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  double v4;
  int v5;
  char v6;
  _BOOL8 result;

  v2 = *(double *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(double *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = static Color.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v6 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

uint64_t View.corner(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[2];
  char v7;

  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return View.modifier<A>(_:)(v6, a4, &type metadata for CornerRadiusModifier, a5);
}

uint64_t sub_1003358EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_10000B4C8(&qword_10055A678);
  __chkstk_darwin();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = v2[1];
  v9 = *((_BYTE *)v2 + 16);
  v10 = sub_10000B4C8(&qword_10055A680);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  sub_100337114((uint64_t)v6, a2);
  v11 = a2 + *(int *)(sub_10000B4C8(&qword_10055A688) + 36);
  *(_QWORD *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v8;
  *(_BYTE *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = 0;
  *(_WORD *)(v11 + 32) = 256;
  return sub_100011694((uint64_t)v6, &qword_10055A678);
}

uint64_t View.border(_:corner:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v9[0] = a1;
  *(double *)&v9[1] = a8;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5 & 1;
  return View.modifier<A>(_:)(v9, a6, &type metadata for BorderViewModifier, a7);
}

uint64_t sub_100335A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v28 = a1;
  v29 = a2;
  v3 = sub_10000B4C8(&qword_10055A690);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v2;
  v7 = *((double *)v2 + 1);
  if (!*((_BYTE *)v2 + 16))
  {
    v9 = 0.5;
    goto LABEL_5;
  }
  v8 = 0.0;
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v9 = -0.5;
LABEL_5:
    v8 = v7 * v9;
  }
  v10 = v2[3];
  v27 = v2[4];
  v11 = *((_BYTE *)v2 + 40);
  swift_retain(*(_QWORD *)&v6);
  v12 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v30, 0, 0, _swiftEmptyArrayStorage, v7, 10.0, 0.0);
  v13 = v30[0];
  v14 = v30[2];
  v15 = v30[3];
  v16 = v30[4];
  v17 = static Alignment.center.getter(v12);
  v19 = v18;
  v20 = static Alignment.center.getter(v17);
  v22 = v21;
  v23 = sub_10000B4C8(&qword_10055A698);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v28, v23);
  v24 = &v5[*(int *)(v3 + 36)];
  v25 = v27;
  *(_QWORD *)v24 = v10;
  *((_QWORD *)v24 + 1) = v25;
  v24[16] = v11;
  *((double *)v24 + 3) = v8;
  *((_QWORD *)v24 + 4) = v13;
  *((_QWORD *)v24 + 5) = v30[1];
  *((_QWORD *)v24 + 6) = v14;
  *((_QWORD *)v24 + 7) = v15;
  *((_QWORD *)v24 + 8) = v16;
  *((double *)v24 + 9) = v6;
  *((_WORD *)v24 + 40) = 256;
  *((_QWORD *)v24 + 11) = v17;
  *((_QWORD *)v24 + 12) = v19;
  *((_QWORD *)v24 + 13) = v20;
  *((_QWORD *)v24 + 14) = v22;
  return sub_10033715C((uint64_t)v5, v29);
}

uint64_t sub_100335BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100335A18(a1, a2);
}

uint64_t View.hover(corner:outset:isRelative:namespace:isEnabled:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, uint64_t a5, char a6, char a7, uint64_t a8, double a9, uint64_t a10)
{
  double v10;
  _QWORD v12[2];
  char v13;
  double v14;
  uint64_t v15;
  char v16;
  char v17;

  if (((a4 | a3) & 1) != 0)
    v10 = *(double *)&a1;
  else
    v10 = *(double *)&a1 - a9;
  *(double *)v12 = v10;
  v12[1] = a2;
  v13 = a3 & 1;
  v14 = a9;
  v15 = a5;
  v16 = a6 & 1;
  v17 = a7;
  return View.modifier<A>(_:)(v12, a8, &type metadata for HoverViewModifier, a10);
}

uint64_t sub_100335C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE v25[12];
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v29 = a2;
  v28 = type metadata accessor for HighlightHoverEffect(0);
  v30 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for ContentShapeKinds(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_10000B4C8(&qword_10055A6A0);
  v10 = __chkstk_darwin();
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *v2;
  v14 = v2[1];
  v15 = *((_BYTE *)v2 + 16);
  v16 = *((double *)v2 + 3);
  v26 = *((unsigned __int8 *)v2 + 41);
  static ContentShapeKinds.hoverEffect.getter(v10);
  v17 = &v12[*(int *)(v9 + 36)];
  v18 = sub_10000B4C8(&qword_10055A6A8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(&v17[*(int *)(v18 + 40)], v8, v5);
  *(_QWORD *)v17 = v13;
  *((_QWORD *)v17 + 1) = v14;
  v17[16] = v15;
  *((double *)v17 + 3) = -v16;
  v17[32] = 0;
  v19 = sub_10000B4C8(&qword_10055A6B0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v27, v19);
  v20 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  static CustomHoverEffect<>.highlight.getter(v20);
  v21 = sub_1003371A4();
  v22 = sub_100337240();
  v23 = v28;
  View.hoverEffect<A>(_:isEnabled:)(v4, v26, v9, v28, v21, v22);
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v4, v23);
  return sub_100011694((uint64_t)v12, &qword_10055A6A0);
}

void sub_100335E30(double a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  CGRect v48;
  CGRect v49;

  v41 = a1;
  v42 = a2;
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for RoundedRectangle._Inset(0);
  __chkstk_darwin();
  v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v36 = *(void (**)(char *, _QWORD, uint64_t))(v17 + 104);
    v36(v21, enum case for RoundedCornerStyle.continuous(_:), v16);
    v36(v19, enum case for RoundedCornerStyle.circular(_:), v16);
    LOBYTE(v36) = static RoundedCornerStyle.== infix(_:_:)(v21, v19);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v37 = sub_10000E750((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    Capsule._Inset.path(in:)(&v43, v37, a5, a6, a7, a8, COERCE_DOUBLE(*(_QWORD *)&a9 & 0xFFFFFFFFFFFFFFFELL | ((v36 & 1) == 0)));
    v31 = v43;
    v32 = v44;
    v33 = v45;
    v34 = v46;
    v35 = v47;
  }
  else
  {
    v28 = v42;
    if (v42 == -1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(&v24[*(int *)(v22 + 20)], enum case for RoundedCornerStyle.continuous(_:), v16);
      v38 = v41;
      *(double *)v24 = v41;
      *((double *)v24 + 1) = v38;
      sub_100337614((uint64_t)v24, (uint64_t)v27);
      *(CGFloat *)&v27[*(int *)(v25 + 20)] = a9;
      v39 = sub_10000E750((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      RoundedRectangle._Inset.path(in:)(&v43, v39, a5, a6, a7, a8);
      v31 = v43;
      v32 = v44;
      v33 = v45;
      v34 = v46;
      v35 = v47;
      sub_10000E750((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
    }
    else
    {
      v29 = v41;
      v48.origin.x = a5;
      v48.origin.y = a6;
      v48.size.width = a7;
      v48.size.height = a8;
      v49 = CGRectInset(v48, a9, a9);
      v30 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", v28, v49.origin.x, v49.origin.y, v49.size.width, v49.size.height, v29, v29);
      Path.init(_:)(&v43, objc_msgSend(v30, "CGPath"));
      v31 = v43;
      v32 = v44;
      v33 = v45;
      v34 = v46;
      v35 = v47;

    }
  }
  *(_QWORD *)a4 = v31;
  *(_QWORD *)(a4 + 8) = v32;
  *(_QWORD *)(a4 + 16) = v33;
  *(_QWORD *)(a4 + 24) = v34;
  *(_BYTE *)(a4 + 32) = v35;
}

double sub_100336164@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  char v3;
  double result;

  v3 = *(_BYTE *)(v2 + 16);
  result = *(double *)(v2 + 24) + a2;
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = result;
  return result;
}

double sub_100336184@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  sub_100335E30(*(double *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)(v5 + 24));
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_1003361D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100337588();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100336220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100337588();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100336270(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100337588();
  return Shape.body.getter(a1, v2);
}

void sub_1003362A8()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_10055A648 = v1 == (id)6;
}

uint64_t sub_100336308()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100557EB0 != -1)
    result = swift_once(&qword_100557EB0, sub_1003362A8);
  v0 = 0x4008000000000000;
  if (byte_10055A648)
    v0 = 0x4018000000000000;
  static Corner.extraSmall = v0;
  *(_QWORD *)algn_1005633C8 = -1;
  byte_1005633D0 = 0;
  return result;
}

uint64_t *Corner.extraSmall.unsafeMutableAddressor()
{
  if (qword_100557EB8 != -1)
    swift_once(&qword_100557EB8, sub_100336308);
  return &static Corner.extraSmall;
}

uint64_t static Corner.extraSmall.getter()
{
  if (qword_100557EB8 != -1)
    swift_once(&qword_100557EB8, sub_100336308);
  return static Corner.extraSmall;
}

uint64_t sub_1003363F4()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100557EB0 != -1)
    result = swift_once(&qword_100557EB0, sub_1003362A8);
  v0 = 0x4014000000000000;
  if (byte_10055A648)
    v0 = 0x4020000000000000;
  static Corner.small = v0;
  unk_1005633E0 = -1;
  byte_1005633E8 = 0;
  return result;
}

uint64_t *Corner.small.unsafeMutableAddressor()
{
  if (qword_100557EC0 != -1)
    swift_once(&qword_100557EC0, sub_1003363F4);
  return &static Corner.small;
}

uint64_t static Corner.small.getter()
{
  if (qword_100557EC0 != -1)
    swift_once(&qword_100557EC0, sub_1003363F4);
  return static Corner.small;
}

uint64_t sub_1003364E0()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100557EB0 != -1)
    result = swift_once(&qword_100557EB0, sub_1003362A8);
  v0 = 0x4020000000000000;
  if (byte_10055A648)
    v0 = 0x4024000000000000;
  static Corner.medium = v0;
  *(_QWORD *)algn_1005633F8 = -1;
  byte_100563400 = 0;
  return result;
}

uint64_t *Corner.medium.unsafeMutableAddressor()
{
  if (qword_100557EC8 != -1)
    swift_once(&qword_100557EC8, sub_1003364E0);
  return &static Corner.medium;
}

uint64_t static Corner.medium.getter()
{
  if (qword_100557EC8 != -1)
    swift_once(&qword_100557EC8, sub_1003364E0);
  return static Corner.medium;
}

uint64_t sub_1003365CC()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100557EB0 != -1)
    result = swift_once(&qword_100557EB0, sub_1003362A8);
  v0 = 0x4024000000000000;
  if (byte_10055A648)
    v0 = 0x4030000000000000;
  static Corner.large = v0;
  unk_100563410 = -1;
  byte_100563418 = 0;
  return result;
}

uint64_t *Corner.large.unsafeMutableAddressor()
{
  if (qword_100557ED0 != -1)
    swift_once(&qword_100557ED0, sub_1003365CC);
  return &static Corner.large;
}

uint64_t static Corner.large.getter()
{
  if (qword_100557ED0 != -1)
    swift_once(&qword_100557ED0, sub_1003365CC);
  return static Corner.large;
}

uint64_t sub_1003366B8()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100557EB0 != -1)
    result = swift_once(&qword_100557EB0, sub_1003362A8);
  v0 = 0x402C000000000000;
  if (byte_10055A648)
    v0 = 0x4038000000000000;
  static Corner.extraLarge = v0;
  *(_QWORD *)algn_100563428 = -1;
  byte_100563430 = 0;
  return result;
}

uint64_t *Corner.extraLarge.unsafeMutableAddressor()
{
  if (qword_100557ED8 != -1)
    swift_once(&qword_100557ED8, sub_1003366B8);
  return &static Corner.extraLarge;
}

uint64_t static Corner.extraLarge.getter()
{
  if (qword_100557ED8 != -1)
    swift_once(&qword_100557ED8, sub_1003366B8);
  return static Corner.extraLarge;
}

uint64_t sub_1003367A4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[5];
  uint64_t v5;

  v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = sub_10033685C;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100034978;
  v4[3] = &unk_10051E938;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v5);
  result = Color.init(uiColor:)(v2);
  static Border.artwork = result;
  qword_100563440 = 0x3FE0000000000000;
  byte_100563448 = 0;
  return result;
}

id sub_10033685C(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (id)1)
  {
    v3 = objc_msgSend(v2, "blackColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  }
  else
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);
  }
  v5 = v4;

  return v5;
}

uint64_t *Border.artwork.unsafeMutableAddressor()
{
  if (qword_100557EE0 != -1)
    swift_once(&qword_100557EE0, sub_1003367A4);
  return &static Border.artwork;
}

double static Border.artwork.getter()
{
  double v0;

  if (qword_100557EE0 != -1)
    swift_once(&qword_100557EE0, sub_1003367A4);
  v0 = *(double *)&qword_100563440;
  swift_retain(static Border.artwork);
  return v0;
}

unint64_t sub_1003369AC()
{
  unint64_t result;

  result = qword_10055A650;
  if (!qword_10055A650)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for Corner, &type metadata for Corner);
    atomic_store(result, (unint64_t *)&qword_10055A650);
  }
  return result;
}

unint64_t sub_1003369F4()
{
  unint64_t result;

  result = qword_10055A658;
  if (!qword_10055A658)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for Border.StrokeStyle, &type metadata for Border.StrokeStyle);
    atomic_store(result, (unint64_t *)&qword_10055A658);
  }
  return result;
}

unint64_t sub_100336A3C()
{
  unint64_t result;

  result = qword_10055A660;
  if (!qword_10055A660)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for Border, &type metadata for Border);
    atomic_store(result, (unint64_t *)&qword_10055A660);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Corner(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Corner(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_100336AD0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100336AEC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Corner()
{
  return &type metadata for Corner;
}

uint64_t sub_100336B20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t *assignWithTake for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for Border()
{
  return &type metadata for Border;
}

uint64_t storeEnumTagSinglePayload for Border.StrokeStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100336C48 + 4 * byte_10043C2E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100336C7C + 4 * asc_10043C2E0[v4]))();
}

uint64_t sub_100336C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100336C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100336C8CLL);
  return result;
}

uint64_t sub_100336C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100336CA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100336CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100336CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Border.StrokeStyle()
{
  return &type metadata for Border.StrokeStyle;
}

uint64_t sub_100336CC8(_QWORD *a1)
{
  return sub_100336D8C(a1, (uint64_t)&type metadata for CornerRadiusModifier, (uint64_t (*)(void))sub_100336CDC);
}

unint64_t sub_100336CDC()
{
  unint64_t result;

  result = qword_10055DC60;
  if (!qword_10055DC60)
  {
    result = swift_getWitnessTable(byte_10043C548, &type metadata for CornerRadiusModifier);
    atomic_store(result, (unint64_t *)&qword_10055DC60);
  }
  return result;
}

uint64_t sub_100336D20(_QWORD *a1)
{
  return sub_100336D8C(a1, (uint64_t)&type metadata for BorderViewModifier, (uint64_t (*)(void))sub_100336D34);
}

unint64_t sub_100336D34()
{
  unint64_t result;

  result = qword_10055A668;
  if (!qword_10055A668)
  {
    result = swift_getWitnessTable(asc_10043C4F8, &type metadata for BorderViewModifier);
    atomic_store(result, (unint64_t *)&qword_10055A668);
  }
  return result;
}

uint64_t sub_100336D78(_QWORD *a1)
{
  return sub_100336D8C(a1, (uint64_t)&type metadata for HoverViewModifier, (uint64_t (*)(void))sub_100336DE8);
}

uint64_t sub_100336D8C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = a1[1];
  v5 = type metadata accessor for ModifiedContent(255, *a1, a2);
  v7[0] = v4;
  v7[1] = a3();
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v5, v7);
}

unint64_t sub_100336DE8()
{
  unint64_t result;

  result = qword_10055A670;
  if (!qword_10055A670)
  {
    result = swift_getWitnessTable(aY_26, &type metadata for HoverViewModifier);
    atomic_store(result, (unint64_t *)&qword_10055A670);
  }
  return result;
}

__n128 initializeWithCopy for HoverViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HoverViewModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverViewModifier()
{
  return &type metadata for HoverViewModifier;
}

uint64_t initializeWithCopy for BorderViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 3) = v6;
  return a1;
}

__n128 initializeWithTake for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderViewModifier()
{
  return &type metadata for BorderViewModifier;
}

uint64_t storeEnumTagSinglePayload for CornerRadiusModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t sub_1003370E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048C8E4, 1);
}

uint64_t sub_1003370F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048C8BC, 1);
}

uint64_t sub_100337104(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048C894, 1);
}

uint64_t sub_100337114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033715C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003371A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055A6B8;
  if (!qword_10055A6B8)
  {
    v1 = sub_100011650(&qword_10055A6A0);
    v2[0] = sub_100012324(&qword_10055A6C0, &qword_10055A6B0, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = sub_100012324(&qword_10055A6C8, &qword_10055A6A8, (const char *)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055A6B8);
  }
  return result;
}

unint64_t sub_100337240()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055A6D0;
  if (!qword_10055A6D0)
  {
    v1 = type metadata accessor for HighlightHoverEffect(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for HighlightHoverEffect, v1);
    atomic_store(result, (unint64_t *)&qword_10055A6D0);
  }
  return result;
}

uint64_t sub_100337288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100337298(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CornerShape()
{
  return &type metadata for CornerShape;
}

unint64_t sub_1003372B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055A6D8;
  if (!qword_10055A6D8)
  {
    v1 = sub_100011650(&qword_10055A688);
    v2[0] = sub_100337338();
    v2[1] = sub_100012324(&qword_10055A6F0, &qword_10055A6F8, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055A6D8);
  }
  return result;
}

unint64_t sub_100337338()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055A6E0;
  if (!qword_10055A6E0)
  {
    v1 = sub_100011650(&qword_10055A678);
    v2[0] = sub_100012324(&qword_10055A6E8, &qword_10055A680, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = &protocol witness table for _CompositingGroupEffect;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055A6E0);
  }
  return result;
}

unint64_t sub_1003373C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055A700;
  if (!qword_10055A700)
  {
    v1 = sub_100011650(&qword_10055A690);
    v2[0] = sub_100012324(&qword_10055A708, &qword_10055A698, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = sub_100012324(&qword_10055A710, &qword_10055A718, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055A700);
  }
  return result;
}

uint64_t sub_10033745C()
{
  _QWORD v1[4];

  v1[0] = sub_100011650(&qword_10055A6A0);
  v1[1] = type metadata accessor for HighlightHoverEffect(255);
  v1[2] = sub_1003371A4();
  v1[3] = sub_100337240();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t sub_1003374C8()
{
  return sub_100012324(&qword_10055A720, &qword_10055A728, (const char *)&protocol conformance descriptor for _ShapeView<A, B>);
}

unint64_t sub_1003374F8()
{
  unint64_t result;

  result = qword_10055A730;
  if (!qword_10055A730)
  {
    result = swift_getWitnessTable(byte_10043C5F4, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10055A730);
  }
  return result;
}

unint64_t sub_100337540()
{
  unint64_t result;

  result = qword_10055A738;
  if (!qword_10055A738)
  {
    result = swift_getWitnessTable(aU_3, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10055A738);
  }
  return result;
}

unint64_t sub_100337588()
{
  unint64_t result;

  result = qword_10055A740;
  if (!qword_10055A740)
  {
    result = swift_getWitnessTable(asc_10043C644, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10055A740);
  }
  return result;
}

unint64_t sub_1003375D0()
{
  unint64_t result;

  result = qword_10055A748;
  if (!qword_10055A748)
  {
    result = swift_getWitnessTable(aE_1, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10055A748);
  }
  return result;
}

uint64_t sub_100337614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t NoticePresenter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  NoticePresenter.init()();
  return v1;
}

uint64_t NoticePresenter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CGFloat bottom;
  CGFloat trailing;
  uint64_t v16;
  _QWORD *v17;
  __int128 v19;
  _BYTE v20[16];
  uint64_t v21;
  __int128 v22;
  CGFloat v23;
  CGFloat v24;

  v1 = sub_10000B4C8(&qword_10055A758);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v9 = &v20[-v8 - 8];
  v10 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v11 = type metadata accessor for Notice(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_100011370((uint64_t)v9, (uint64_t)v7, &qword_10055A760);
  Published.init(initialValue:)(v7, v5);
  sub_100011694((uint64_t)v9, &qword_10055A760);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v10, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
  v12 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  if (qword_100557EE8 != -1)
    swift_once(&qword_100557EE8, sub_10033834C);
  v13 = static NoticePresenter.defaultEdgePadding;
  v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v16 = swift_unknownObjectWeakInit(v20);
  v20[8] = 2;
  v21 = v13;
  v22 = v19;
  v23 = bottom;
  v24 = trailing;
  sub_10033B62C(v16, v0 + v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v17 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = 0;
  return v0;
}

uint64_t property wrapper backing initializer of NoticePresenter.notice(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a1, (uint64_t)v4, &qword_10055A760);
  Published.init(initialValue:)(v4, v2);
  return sub_100011694(a1, &qword_10055A760);
}

double sub_100337938@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v5 = swift_getKeyPath(&unk_10043C718);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1003379A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_100011370(a1, (uint64_t)&v12 - v6, &qword_10055A760);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v10 = swift_getKeyPath(&unk_10043C718);
  sub_100011370((uint64_t)v7, (uint64_t)v5, &qword_10055A760);
  swift_retain(v8);
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_100011694((uint64_t)v7, &qword_10055A760);
}

double NoticePresenter.notice.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v4 = swift_getKeyPath(&unk_10043C718);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100337AFC(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = sub_10000B4C8(&qword_10055A758);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100337B60(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  void (*v10)(_BYTE *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v4 = sub_10000B4C8(&qword_10055AA08);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v9 = &v15[-v8 - 8];
  v10 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v10(&v15[-v8 - 8], a1, v4);
  v11 = *a2;
  v10(v7, (uint64_t)v9, v4);
  swift_beginAccess(v11 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v15, 33, 0);
  v12 = sub_10000B4C8(&qword_10055A758);
  Published.projectedValue.setter(v7, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t NoticePresenter.$notice.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = sub_10000B4C8(&qword_10055A758);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

Swift::Void __swiftcall NoticePresenter.dismiss(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  double v23;
  uint64_t v24;

  v2 = v1;
  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v7 = swift_getKeyPath(&unk_10043C718);
  static Published.subscript.getter(v5, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v7);
  v8 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
  v9 = sub_100011694((uint64_t)v5, &qword_10055A760);
  if ((_DWORD)KeyPath != 1)
  {
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
    if (v11)
    {
      dispatch thunk of DispatchWorkItem.cancel()(v9);
      v10 = swift_release(v11);
    }
    if (a1)
      v12 = static Animation.default.getter(v9, v10);
    else
      v12 = 0;
    withAnimation<A>(_:_:)(v12, sub_100338454, v2, (char *)&type metadata for () + 8);
    swift_release(v12);
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v13)
    {
      *(_BYTE *)(v13
               + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) = 0;
      v14 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
      v22 = (void *)static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
      if (a1)
        v23 = 2.0;
      else
        v23 = 0.0;
      swift_retain(v2);
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_10033846C, v2, v23);

      swift_release(v2);
    }
  }
}

uint64_t sub_100337EA0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD v10[2];

  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)v10 - v4;
  v6 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v8 = swift_getKeyPath(&unk_10043C718);
  sub_100011370((uint64_t)v5, (uint64_t)v3, &qword_10055A760);
  swift_retain(a1);
  static Published.subscript.setter(v3, a1, KeyPath, v8);
  return sub_100011694((uint64_t)v5, &qword_10055A760);
}

void sub_100337FB4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v5 = swift_getKeyPath(&unk_10043C718);
  static Published.subscript.getter(v3, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_100011694((uint64_t)v3, &qword_10055A760);
  if ((_DWORD)KeyPath == 1)
    sub_1003387D4(0);
}

uint64_t NoticePresenter.present(_:internalOnly:)(uint64_t a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v7;

  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v5, a2);
  return sub_10000E750((uint64_t)v5, type metadata accessor for Notice);
}

void sub_10033813C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;

  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v24 - v6;
  sub_10000D964(a2, (uint64_t)&v24 - v6, type metadata accessor for Notice);
  v8 = type metadata accessor for Notice(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v10 = swift_getKeyPath(&unk_10043C718);
  sub_100011370((uint64_t)v7, (uint64_t)v5, &qword_10055A760);
  swift_retain(a1);
  static Published.subscript.setter(v5, a1, KeyPath, v10);
  sub_100011694((uint64_t)v7, &qword_10055A760);
  v11 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow;
  v12 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  if (v12)
  {
    v13 = objc_msgSend(v12, "rootViewController");
    if (v13)
    {
      v14 = v13;
      v15 = type metadata accessor for NoticePresenter.UIRootViewController();
      v16 = (void *)swift_dynamicCastClass(v14, v15);
      if (v16)
      {
        v17 = objc_msgSend(v16, "view");

        if (!v17)
        {
          __break(1u);
          goto LABEL_15;
        }
        objc_msgSend(v17, "setNeedsLayout");
        v14 = v17;
      }

    }
    v18 = *(void **)(a1 + v11);
    if (v18)
    {
      v19 = objc_msgSend(v18, "rootViewController");
      if (v19)
      {
        v20 = v19;
        v21 = type metadata accessor for NoticePresenter.UIRootViewController();
        v22 = (void *)swift_dynamicCastClass(v20, v21);
        if (!v22)
        {
LABEL_12:

          return;
        }
        v23 = objc_msgSend(v22, "view");

        if (v23)
        {
          objc_msgSend(v23, "layoutIfNeeded");
          v20 = v23;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
      }
    }
  }
}

void sub_10033834C()
{
  static NoticePresenter.defaultEdgePadding = 0x4024000000000000;
}

uint64_t *NoticePresenter.defaultEdgePadding.unsafeMutableAddressor()
{
  if (qword_100557EE8 != -1)
    swift_once(&qword_100557EE8, sub_10033834C);
  return &static NoticePresenter.defaultEdgePadding;
}

double static NoticePresenter.defaultEdgePadding.getter()
{
  if (qword_100557EE8 != -1)
    swift_once(&qword_100557EE8, sub_10033834C);
  return *(double *)&static NoticePresenter.defaultEdgePadding;
}

void *NoticePresenter.defaultEdge.unsafeMutableAddressor()
{
  return &static NoticePresenter.defaultEdge;
}

uint64_t NoticePresenter.UIKitConfiguration.init(edge:padding:insets:)@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  uint64_t result;

  result = swift_unknownObjectWeakInit(a2, 0);
  *(_BYTE *)(result + 8) = a1;
  *(double *)(result + 16) = a3;
  *(double *)(result + 24) = a4;
  *(double *)(result + 32) = a5;
  *(double *)(result + 40) = a6;
  *(double *)(result + 48) = a7;
  return result;
}

uint64_t sub_100338454()
{
  uint64_t v0;

  return sub_100337EA0(v0);
}

void sub_10033846C()
{
  uint64_t v0;

  sub_100337FB4(v0);
}

uint64_t NoticePresenter.uiKitConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10033B62C(v3, a1, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t NoticePresenter.uiKitConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v10[56];
  _BYTE v11[24];
  _BYTE v12[56];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v11, 0, 0);
  sub_10033B62C(v3, (uint64_t)v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v3, v10, 33, 0);
  sub_10033B67C(a1, v3);
  swift_endAccess(v10);
  sub_10033B62C(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v4 = _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v12, (uint64_t)v10);
  sub_10019FB08((uint64_t)v10);
  if ((v4 & 1) == 0)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v5)
    {
      v6 = objc_msgSend(v5, "rootViewController");
      if (v6)
      {
        v7 = v6;
        v8 = type metadata accessor for NoticePresenter.UIRootViewController();
        if (swift_dynamicCastClass(v7, v8))
        {
          sub_10033B62C(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
          sub_100339FB8((uint64_t)v10);
        }

      }
    }
  }
  sub_10019FB08(a1);
  return sub_10019FB08((uint64_t)v12);
}

void (*NoticePresenter.uiKitConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[17] = v1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v3 + 14, 0, 0);
  sub_10033B62C(v4, (uint64_t)v3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  return sub_100338674;
}

void sub_100338674(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_10033B62C(*a1, (uint64_t)v2 + 56, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v2 + 56);
    sub_10019FB08((uint64_t)v2);
  }
  else
  {
    NoticePresenter.uiKitConfiguration.setter(*a1);
  }
  free(v2);
}

uint64_t NoticePresenter.willPresentHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v4, 0, 0);
  v2 = *v1;
  sub_1000DB0D8(*v1, v1[1]);
  return v2;
}

uint64_t NoticePresenter.willPresentHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_1000DB26C(v6, v7);
}

uint64_t (*NoticePresenter.willPresentHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_1003387D4(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = a1;
  v4 = a1;
  if (v3)
  {
    v8 = v4;
    if (!a1
      || (type metadata accessor for NoticePresenter.PassthroughWindow(),
          v5 = v3,
          v6 = v8,
          v7 = static NSObject.== infix(_:_:)(v5, v6),
          v5,
          v6,
          (v7 & 1) == 0))
    {
      objc_msgSend(v3, "resignKeyWindow");
    }

    v4 = v8;
  }

}

uint64_t NoticePresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = sub_10000B4C8(&qword_10055A758);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem));
  sub_10019FB08(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_1000DB26C(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return v0;
}

uint64_t NoticePresenter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = sub_10000B4C8(&qword_10055A758);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem));
  sub_10019FB08(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_1000DB26C(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100338998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NoticePresenter(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

void sub_1003389D4(uint64_t a1, char a2)
{
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(a1, a2);
}

uint64_t View.noticePresenting(_:edge:padding:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t WitnessTable;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[2];
  char v25;
  double v26;

  v21 = a5;
  v22 = a1;
  v10 = type metadata accessor for ModifiedContent(0, a3, &type metadata for NoticePresentingModifier);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for NoticePresenter(0);
  v15 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v16 = EnvironmentObject.init()(v14, v15);
  v24[0] = v16;
  v24[1] = v17;
  v25 = a2;
  v26 = a6;
  View.modifier<A>(_:)(v24, a3, &type metadata for NoticePresentingModifier, a4);
  swift_release(v16);
  v18 = sub_10033B738();
  v23[0] = a4;
  v23[1] = v18;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v10, v23);
  View.environmentObject<A>(_:)(v21, v22, v10, v14, WitnessTable, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double NoticePresentingModifier.init(edge:padding:)(double a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for NoticePresenter(0);
  v3 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  EnvironmentObject.init()(v2, v3);
  return a1;
}

void NoticePresentingModifier.controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    swift_retain(a1);
  }
  else
  {
    v3 = type metadata accessor for NoticePresenter(0);
    v4 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    EnvironmentObject.error()(0, a2, v3, v4);
    __break(1u);
  }
}

uint64_t NoticePresentingModifier.$controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for NoticePresenter(0);
  v5 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t NoticePresentingModifier.edge.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void NoticePresentingModifier.padding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

void NoticePresentingModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_100338CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = ((uint64_t (*)(void))static Alignment.top.getter)();
  v8 = v7;
  if (v2)
  {
    swift_retain(v2);
    v9 = Edge.Set.init(_:)(v4);
    v10 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v9, v5);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = type metadata accessor for NoticePresenter(0);
    v18 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v19 = ObservedObject.init(wrappedValue:)(v2, v17, v18);
    v21 = v20;
    v22 = sub_10000B4C8(&qword_10055A790);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v0, v1, v22);
    result = sub_10000B4C8(&qword_10055A798);
    v24 = (uint64_t *)(v0 + *(int *)(result + 36));
    *v24 = v19;
    v24[1] = v21;
    *((double *)v24 + 2) = v10;
    v24[3] = v12;
    v24[4] = v14;
    v24[5] = v16;
    v24[6] = v6;
    v24[7] = v8;
  }
  else
  {
    v25 = type metadata accessor for NoticePresenter(0);
    v26 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v3, v25, v26);
    __break(1u);
  }
  return result;
}

void sub_100338DF8()
{
  __asm { BR              X9 }
}

uint64_t sub_100338E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = ((uint64_t (*)(void))static Alignment.top.getter)();
  v8 = v7;
  if (v1)
  {
    swift_retain(v1);
    v9 = Edge.Set.init(_:)(v3);
    v10 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v9, v5);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = type metadata accessor for NoticePresenter(0);
    v18 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v19 = ObservedObject.init(wrappedValue:)(v1, v17, v18);
    v21 = v20;
    v22 = sub_10000B4C8(&qword_10055A790);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v0, v4, v22);
    result = sub_10000B4C8(&qword_10055A798);
    v24 = (uint64_t *)(v0 + *(int *)(result + 36));
    *v24 = v19;
    v24[1] = v21;
    *((double *)v24 + 2) = v10;
    v24[3] = v12;
    v24[4] = v14;
    v24[5] = v16;
    v24[6] = v6;
    v24[7] = v8;
  }
  else
  {
    v25 = type metadata accessor for NoticePresenter(0);
    v26 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v2, v25, v26);
    __break(1u);
  }
  return result;
}

uint64_t sub_100338F7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  uint64_t v152;
  unsigned __int8 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;

  v148 = a2;
  v3 = (int *)type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v5 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10000B4C8(&qword_10055A9D0);
  __chkstk_darwin();
  v129 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10000B4C8(&qword_10055A9D8);
  __chkstk_darwin();
  v130 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10000B4C8(&qword_10055A9E0);
  __chkstk_darwin();
  v133 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_10000B4C8(&qword_10055A9E8);
  __chkstk_darwin();
  v135 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_10000B4C8(&qword_10055A9F0);
  v146 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v134 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Notice(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v136 = (uint64_t)&v125 - v17;
  sub_10000B4C8(&qword_10055A9F8);
  __chkstk_darwin();
  v147 = (uint64_t)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin();
  v137 = (uint64_t)&v125 - v20;
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(double *)(a1 + 24);
  v144 = *(_QWORD *)(a1 + 32);
  v23 = *(double *)(a1 + 40);
  v24 = static Alignment.center.getter(v19);
  _FrameLayout.init(width:height:alignment:)(&v150, 0, 1, v21, 0, v24, v25);
  v143 = v150;
  v142 = v151;
  v141 = v152;
  v140 = v153;
  v139 = v154;
  v138 = v155;
  v26 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v28 = swift_getKeyPath(&unk_10043C718);
  swift_retain(v26);
  v131 = v26;
  static Published.subscript.getter(v12, v29, KeyPath);
  swift_release(KeyPath);
  swift_release(v28);
  sub_10033BE18(a1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100011694((uint64_t)v12, &qword_10055A760);
    v30 = 1;
    v31 = v145;
    v32 = v137;
  }
  else
  {
    v33 = v136;
    sub_10033BE40((uint64_t)v12, v136);
    sub_10000D964(v33, (uint64_t)v16, type metadata accessor for Notice);
    v34 = &v5[v3[5]];
    *(_QWORD *)v34 = swift_getKeyPath(&unk_10043C948);
    *((_QWORD *)v34 + 1) = 0;
    *((_WORD *)v34 + 8) = 0;
    v35 = &v5[v3[6]];
    v149 = 0x3FF0000000000000;
    State.init(wrappedValue:)(&v156, &v149, &type metadata for Double);
    v36 = v157;
    *(_QWORD *)v35 = v156;
    *((_QWORD *)v35 + 1) = v36;
    v37 = &v5[v3[7]];
    LOBYTE(v149) = 0;
    GestureState.init(wrappedValue:)(&v156, &v149, &type metadata for Bool);
    v38 = v157;
    v39 = v158;
    *v37 = v156;
    *((_QWORD *)v37 + 1) = v38;
    *((_OWORD *)v37 + 1) = v39;
    v40 = &v5[v3[8]];
    LOBYTE(v149) = 0;
    State.init(wrappedValue:)(&v156, &v149, &type metadata for Bool);
    v41 = v157;
    *v40 = v156;
    *((_QWORD *)v40 + 1) = v41;
    v42 = sub_10033BE40((uint64_t)v16, (uint64_t)v5);
    v43 = static Edge.Set.leading.getter(v42);
    v44 = EdgeInsets.init(_all:)(v22);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v51 = v129;
    sub_10000D964((uint64_t)v5, v129, type metadata accessor for NoticeView);
    v52 = v51 + *(int *)(v126 + 36);
    *(_BYTE *)v52 = v43;
    *(double *)(v52 + 8) = v44;
    *(_QWORD *)(v52 + 16) = v46;
    *(_QWORD *)(v52 + 24) = v48;
    *(_QWORD *)(v52 + 32) = v50;
    *(_BYTE *)(v52 + 40) = 0;
    v53 = sub_10000E750((uint64_t)v5, type metadata accessor for NoticeView);
    v54 = static Edge.Set.trailing.getter(v53);
    v55 = EdgeInsets.init(_all:)(v23);
    v57 = v56;
    v59 = v58;
    v61 = v60;
    v62 = v130;
    sub_100011370(v51, v130, &qword_10055A9D0);
    v63 = v62 + *(int *)(v127 + 36);
    *(_BYTE *)v63 = v54;
    *(double *)(v63 + 8) = v55;
    *(_QWORD *)(v63 + 16) = v57;
    *(_QWORD *)(v63 + 24) = v59;
    *(_QWORD *)(v63 + 32) = v61;
    *(_BYTE *)(v63 + 40) = 0;
    v64 = sub_100011694(v51, &qword_10055A9D0);
    v65 = static Edge.Set.vertical.getter(v64);
    v66 = EdgeInsets.init(_all:)(0.0);
    v68 = v67;
    v70 = v69;
    v72 = v71;
    v73 = v133;
    sub_100011370(v62, v133, &qword_10055A9D8);
    v74 = v73 + *(int *)(v128 + 36);
    *(_BYTE *)v74 = v65;
    *(double *)(v74 + 8) = v66;
    *(_QWORD *)(v74 + 16) = v68;
    *(_QWORD *)(v74 + 24) = v70;
    *(_QWORD *)(v74 + 32) = v72;
    *(_BYTE *)(v74 + 40) = 0;
    v75 = sub_100011694(v62, &qword_10055A9D8);
    v76 = static AnyTransition.opacity.getter(v75);
    v77 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 300.0, 40.0, 1.0);
    v78 = AnyTransition.animation(_:)(v77, v76);
    swift_release(v76);
    v79 = swift_release(v77);
    v80 = static UnitPoint.center.getter(v79);
    v82 = static AnyTransition.scale(scale:anchor:)(0.85, v80, v81);
    v83 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 550.0, 26.0, 1.0);
    v84 = AnyTransition.animation(_:)(v83, v82);
    swift_release(v82);
    v85 = swift_release(v83);
    v86 = static UnitPoint.center.getter(v85);
    v88 = static AnyTransition.scale(scale:anchor:)(0.9, v86, v87);
    v89 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 620.0, 50.0, 1.0);
    v90 = AnyTransition.animation(_:)(v89, v88);
    swift_release(v88);
    v91 = swift_release(v89);
    v92 = static AnyTransition.asymmetric(insertion:removal:)(v84, v90, v91);
    swift_release(v84);
    v93 = swift_release(v90);
    v94 = AnyTransition.combined(with:)(v92, v78, v93);
    swift_release(v78);
    swift_release(v92);
    v95 = v135;
    sub_100011370(v73, v135, &qword_10055A9E0);
    *(_QWORD *)(v95 + *(int *)(v132 + 36)) = v94;
    sub_100011694(v73, &qword_10055A9E0);
    v96 = swift_getKeyPath(&unk_10043C948);
    type metadata accessor for MainActor(0);
    v97 = v131;
    swift_retain(v131);
    v99 = static MainActor.shared.getter(v98);
    v100 = swift_allocObject(&unk_10051ECF0, 80, 7);
    *(_QWORD *)(v100 + 16) = v99;
    *(_QWORD *)(v100 + 24) = &protocol witness table for MainActor;
    v101 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v100 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v100 + 48) = v101;
    *(_OWORD *)(v100 + 64) = *(_OWORD *)(a1 + 32);
    swift_retain(v97);
    v103 = static MainActor.shared.getter(v102);
    v104 = swift_allocObject(&unk_10051ED18, 80, 7);
    *(_QWORD *)(v104 + 16) = v103;
    *(_QWORD *)(v104 + 24) = &protocol witness table for MainActor;
    v105 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v104 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v104 + 48) = v105;
    *(_OWORD *)(v104 + 64) = *(_OWORD *)(a1 + 32);
    Binding.init(get:set:)(&v156, sub_10033BE90, v100, sub_10033BECC, v104, &type metadata for Bool);
    v106 = v156;
    v107 = v157;
    LOBYTE(v100) = v158;
    v108 = v134;
    sub_100011370(v95, v134, &qword_10055A9E8);
    v109 = v145;
    v110 = v108 + *(int *)(v145 + 36);
    *(_QWORD *)v110 = v96;
    *(_QWORD *)(v110 + 8) = v106;
    *(_QWORD *)(v110 + 16) = v107;
    *(_BYTE *)(v110 + 24) = v100;
    sub_100011694(v95, &qword_10055A9E8);
    sub_10000E750(v136, type metadata accessor for Notice);
    v32 = v137;
    sub_100011530(v108, v137, &qword_10055A9F0);
    v30 = 0;
    v31 = v109;
  }
  v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56))(v32, v30, 1, v31);
  v112 = static Alignment.center.getter(v111);
  _FrameLayout.init(width:height:alignment:)(&v156, 0, 1, v144, 0, v112, v113);
  v146 = v156;
  v114 = v157;
  v115 = v158;
  v116 = BYTE8(v158);
  v117 = v159;
  v118 = v160;
  v119 = v147;
  sub_100011370(v32, v147, &qword_10055A9F8);
  v120 = v148;
  *v148 = 0;
  *((_BYTE *)v120 + 8) = 1;
  v120[2] = v143;
  *((_BYTE *)v120 + 24) = v142;
  v120[4] = v141;
  *((_BYTE *)v120 + 40) = v140;
  v121 = v138;
  v120[6] = v139;
  v120[7] = v121;
  v122 = sub_10000B4C8(&qword_10055AA00);
  sub_100011370(v119, (uint64_t)v120 + *(int *)(v122 + 48), &qword_10055A9F8);
  v123 = (char *)v120 + *(int *)(v122 + 64);
  *(_QWORD *)v123 = 0;
  v123[8] = 1;
  *((_QWORD *)v123 + 2) = v146;
  v123[24] = v114;
  *((_QWORD *)v123 + 4) = v115;
  v123[40] = v116;
  *((_QWORD *)v123 + 6) = v117;
  *((_QWORD *)v123 + 7) = v118;
  sub_100011694(v32, &qword_10055A9F8);
  return sub_100011694(v119, &qword_10055A9F8);
}

uint64_t sub_1003399DC@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_10000B4C8(&qword_10055A760);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10043C6F0);
  v8 = swift_getKeyPath(&unk_10043C718);
  swift_retain(v6);
  static Published.subscript.getter(v5, v9, KeyPath);
  swift_release(KeyPath);
  swift_release(v8);
  sub_10033BE18(a1);
  v10 = type metadata accessor for Notice(0);
  LOBYTE(a1) = (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) != 1;
  result = sub_100011694((uint64_t)v5, &qword_10055A760);
  *a2 = a1;
  return result;
}

_BYTE *sub_100339AE0(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    swift_retain(*(_QWORD *)(a4 + 8));
    NoticePresenter.dismiss(_:)(1);
    return (_BYTE *)sub_10033BE18(a4);
  }
  return result;
}

uint64_t sub_100339B28@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[3];

  sub_10000B4C8((uint64_t *)&unk_10055EB80);
  v3 = __chkstk_darwin();
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[1];
  v12[0] = *v1;
  v12[1] = v6;
  v12[2] = v1[2];
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v3);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v7 = sub_10000B4C8(&qword_10055A9C8);
  v8 = sub_100338F7C((uint64_t)v12, &v5[*(int *)(v7 + 44)]);
  v9 = static Alignment.center.getter(v8);
  sub_1003B50F4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v9, v10);
  return sub_100011694((uint64_t)v5, (uint64_t *)&unk_10055EB80);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

double NoticePresenter.UIKitConfiguration.insets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void NoticePresenter.UIKitConfiguration.insets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

id sub_100339C78(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id result;
  void *v13;
  unsigned __int8 v14;
  objc_super v15;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for NoticePresenter.PassthroughWindow();
  v7 = objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  v8 = v7;
  if (*((_BYTE *)v3
       + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) != 1)
  {
    v9 = v7;
LABEL_8:

    return 0;
  }
  if (!v7)
    return v8;
  v9 = v7;
  v10 = objc_msgSend(v3, "rootViewController");
  if (!v10)
  {

    goto LABEL_8;
  }
  v11 = v10;
  result = objc_msgSend(v10, "view");
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(v9, "isDescendantOfView:", result);

    if ((v14 & 1) != 0)
      return v8;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_100339FAC()
{
  return sub_10033A924((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.PassthroughWindow);
}

id sub_100339FB8(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  unsigned int v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  double *v14;
  id result;
  void *v16;
  void *v17;
  _BYTE v18[32];

  v2 = v1;
  v4 = (uint64_t)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v18, 33, 0);
  sub_10033B67C(a1, v4);
  swift_endAccess(v18);
  if (!objc_msgSend(v1, "isViewLoaded"))
    return (id)sub_10019FB08(a1);
  v5 = Edge.Set.init(_:)(*(unsigned __int8 *)(v4 + 8));
  v6 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v5, *(double *)(v4 + 16));
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v18);
  v14[2] = v6;
  *((_QWORD *)v14 + 3) = v8;
  *((_QWORD *)v14 + 4) = v10;
  *((_QWORD *)v14 + 5) = v12;
  v13(v18, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v16 = result;
    objc_msgSend(result, "setNeedsLayout");

    result = objc_msgSend(v2, "view");
    if (result)
    {
      v17 = result;
      objc_msgSend(result, "layoutIfNeeded");

      return (id)sub_10019FB08(a1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10033A21C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double *v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  double *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  _BYTE v23[32];
  char v24[24];
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v25, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = (double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v24, 0, 0);
  v7 = Edge.Set.init(_:)(*((unsigned __int8 *)v6 + 8));
  v8 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v7, v6[2]);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v23);
  v16[2] = v8;
  *((_QWORD *)v16 + 3) = v10;
  *((_QWORD *)v16 + 4) = v12;
  *((_QWORD *)v16 + 5) = v14;
  v15(v23, 0);
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v18 = v17;
  v19 = objc_msgSend(v2, "view");
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v20 = v19;
  objc_msgSend(v18, "addSubview:", v19);

  v21 = objc_msgSend(v2, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "layoutIfNeeded");

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_10033A40C()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  char *v22;
  __n128 v23;
  char isEscapingClosureAtFileLocation;
  double v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  char v31[24];
  _QWORD aBlock[3];
  double v33;
  uint64_t (*v34)();
  double v35;
  double v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v37, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

    v3 = (uint64_t)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
    swift_beginAccess(&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v31, 0, 0);
    sub_10033B62C(v3, (uint64_t)aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v4 = v33;
    v5 = *(double *)&v34;
    v6 = v35;
    v7 = v36;
    v8 = objc_msgSend(v0, "view");
    if (!v8)
    {
LABEL_7:
      __break(1u);
      JUMPOUT(0x10033A808);
    }
    v9 = v8;
    sub_10019FB08((uint64_t)aBlock);
    objc_msgSend(v9, "effectiveUserInterfaceLayoutDirection");

    v10 = CGRect.inset(by:for:)(v4, v5, v6, v7);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = (void *)objc_opt_self(UIView);
    v18 = swift_allocObject(&unk_10051ED40, 24, 7);
    *(_QWORD *)(v18 + 16) = v0;
    *(double *)&v19 = COERCE_DOUBLE(swift_allocObject(&unk_10051ED68, 32, 7));
    *(_QWORD *)(v19 + 16) = sub_10033BEFC;
    *(_QWORD *)(v19 + 24) = v18;
    *(double *)&v34 = COERCE_DOUBLE(sub_100150C04);
    v35 = *(double *)&v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100185F2C;
    v33 = COERCE_DOUBLE(&unk_10051ED80);
    v20 = _Block_copy(aBlock);
    v21 = v35;
    v22 = v0;
    swift_retain(v19);
    objc_msgSend(v17, "performWithoutAnimation:", v20, swift_release(*(_QWORD *)&v21).n128_f64[0]);
    _Block_release(v20);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v19, "", 129, 462, 44, 1, v23);
    swift_release(v19);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v25 = dispatch thunk of UIHostingController.sizeThatFits(in:)(v14, v16);
      v27 = v26;
      v28 = objc_msgSend(v22, "traitCollection");
      objc_msgSend(v28, "displayScale");
      v30 = v29;

      CGRect.centeringAlong(axes:bounds:scale:)(3, v10, v12, v14, v16, v30, 0.0, 0.0, v25, v27);
      __asm { BR              X10 }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_10033A81C(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(a1
                + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController);
  v2 = objc_msgSend(v1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");

    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10033A918()
{
  return sub_10033A924((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.UIRootViewController);
}

id sub_10033A924(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10033A9A4()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_10055A750 = result;
  return result;
}

char *UIWindowScene.noticePresenter.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _OWORD v12[2];

  v1 = v0;
  if (qword_100557EF0 != -1)
    swift_once(&qword_100557EF0, sub_10033A9A4);
  v2 = objc_getAssociatedObject(v0, (const void *)qword_10055A750);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_100011530((uint64_t)v12, (uint64_t)v10, &qword_10055A570);
  if (!v11)
  {
    sub_100011694((uint64_t)v10, &qword_10055A570);
    goto LABEL_10;
  }
  v4 = type metadata accessor for NoticePresenter(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
  {
LABEL_10:
    v6 = type metadata accessor for NoticePresenter(0);
    v5 = (char *)swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    NoticePresenter.init()();
    objc_setAssociatedObject(v1, (const void *)qword_10055A750, v5, (void *)1);
    v7 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration], v12, 0, 0);
    sub_10033B62C(v7, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    swift_unknownObjectWeakAssign(v10, v1);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v10);
    return v5;
  }
  return (char *)v9;
}

char *UIView.noticePresenter.getter()
{
  void *v0;
  char *v1;
  char *v2;
  id v3;

  v1 = (char *)objc_msgSend(v0, "window");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "windowScene");

    if (v3)
    {
      v2 = UIWindowScene.noticePresenter.getter();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *UIViewController.noticePresenter.getter()
{
  void *v0;
  char *result;
  char *v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;

  if (!objc_msgSend(v0, "isViewLoaded"))
  {
    v4 = (char *)objc_msgSend(v0, "parentViewController");
    if (v4)
    {
      v6 = UIViewController.noticePresenter.getter();

      return (char *)v6;
    }
    return v4;
  }
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = (char *)objc_msgSend(result, "window");
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, "windowScene");

      if (v5)
      {
        v4 = UIWindowScene.noticePresenter.getter();

      }
      else
      {

        return 0;
      }
    }
    else
    {

    }
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(a2);
  v6 = v5;
  if (Strong)
  {
    if (v5)
    {
      sub_1000DD108(0, &qword_10055A528, UIWindowScene_ptr);
      v7 = Strong;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        goto LABEL_7;
    }
    else
    {

    }
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  if (v5)
  {

    goto LABEL_11;
  }
LABEL_7:
  v9 = *(unsigned __int8 *)(a2 + 8);
  v10 = Edge.rawValue.getter(*(unsigned __int8 *)(a1 + 8));
  if (v10 != Edge.rawValue.getter(v9) || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_11;
  v11 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40)))), 0xFuLL)));
  return v11 & 1;
}

char *sub_10033ADB0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  double *v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_class *v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v27;
  objc_super v28;
  _QWORD v29[6];
  char v30[24];

  type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin();
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController__noticePresenter] = a1;
  v7 = (double *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  sub_10033B62C(a2, (uint64_t)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v7, v30, 0, 0);
  v8 = *((unsigned __int8 *)v7 + 8);
  swift_retain_n(a1, 2);
  v9 = v2;
  v10 = Edge.Set.init(_:)(v8);
  v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v7[2]);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = type metadata accessor for NoticePresenter(0);
  v19 = sub_10001254C(&qword_100558270, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v29[0] = ObservedObject.init(wrappedValue:)(a1, v18, v19);
  v29[1] = v20;
  *(double *)&v29[2] = v11;
  v29[3] = v13;
  v29[4] = v15;
  v29[5] = v17;
  v21 = objc_allocWithZone((Class)sub_10000B4C8(&qword_10055AA10));
  *(_QWORD *)&v9[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController] = UIHostingController.init(rootView:)(v29);

  v22 = (objc_class *)type metadata accessor for NoticePresenter.UIRootViewController();
  v28.receiver = v9;
  v28.super_class = v22;
  v23 = (char *)objc_msgSendSuper2(&v28, "initWithNibName:bundle:", 0, 0);
  v24 = *(void **)&v23[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v25 = v23;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v6);
  objc_msgSend(v25, "addChildViewController:", v24);
  objc_msgSend(v24, "didMoveToParentViewController:", v25);

  sub_10019FB08(a2);
  return v25;
}

void _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(void ***, __n128);
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  id v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  char v72[24];
  char v73[24];
  void **aBlock;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  void *v77;
  void *v78;
  uint64_t v79;
  char v80[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchTime(0);
  v70 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v69 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v65 - v8;
  v67 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  v68 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1)
  {
    v65 = v9;
    v66 = v6;
    v15 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v80, 0, 0);
    v16 = *(void (**)(void ***, __n128))v15;
    if (*(_QWORD *)v15)
    {
      v17 = *(_QWORD *)(v15 + 8);
      v18 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v73, 0, 0);
      sub_10033B62C(v18, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      v19 = swift_retain(v17);
      v16(&aBlock, v19);
      sub_1000DB26C((uint64_t)v16, v17);
      NoticePresenter.uiKitConfiguration.setter((uint64_t)&aBlock);
    }
    v20 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v72, 0, 0);
    sub_10033B62C(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v21 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
    sub_10019FB08((uint64_t)&aBlock);
    if (v21)
    {
      if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow))
      {
        v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NoticePresenter.PassthroughWindow()), "initWithWindowScene:", v21);
        objc_msgSend(v22, "setWindowLevel:", UIWindowLevelStatusBar);
        sub_10033B62C(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
        v23 = objc_allocWithZone((Class)type metadata accessor for NoticePresenter.UIRootViewController());
        v24 = v22;
        swift_retain(v3);
        v26 = sub_10033ADB0(v25, (uint64_t)&aBlock);
        objc_msgSend(v24, "setRootViewController:", v26, swift_release(v3).n128_f64[0]);

        objc_msgSend(v24, "makeKeyAndVisible");
        objc_msgSend(v24, "resignKeyWindow");
        v27 = v24;
        sub_1003387D4(v24);

        v21 = v27;
      }

    }
    v28 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v28)
    {
      v28[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches] = 1;
      objc_msgSend(v28, "makeKeyAndVisible");
    }
    v29 = objc_opt_self(UIView);
    sub_10000D964(a1, (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Notice);
    v30 = *(unsigned __int8 *)(v12 + 80);
    v31 = (v30 + 24) & ~v30;
    v32 = swift_allocObject(&unk_10051EDB8, v31 + v13, v30 | 7);
    *(_QWORD *)(v32 + 16) = v3;
    sub_10033BE40((uint64_t)v14, v32 + v31);
    v33 = swift_allocObject(&unk_10051EDE0, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_10033C048;
    *(_QWORD *)(v33 + 24) = v32;
    v78 = sub_100150E54;
    v79 = v33;
    aBlock = _NSConcreteStackBlock;
    v75 = 1107296256;
    v76 = sub_100185F2C;
    v77 = &unk_10051EDF8;
    v34 = _Block_copy(&aBlock);
    v35 = v79;
    swift_retain(v3);
    swift_retain(v33);
    objc_msgSend((id)v29, "performWithoutAnimation:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v33, "", 129, 163, 40, 1, v36);
    swift_release(v33);
    if ((v29 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v37 = a1 + v11[9];
      if ((*(_BYTE *)(v37 + 8) & 1) == 0)
      {
        v38 = *(_QWORD *)v37;
        v39 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
        objc_msgSend(v39, "notificationOccurred:", v38);

      }
      if (*(_BYTE *)(a1 + v11[10]) == 1)
      {
        v78 = sub_10033C088;
        v79 = v3;
        aBlock = _NSConcreteStackBlock;
        v75 = 1107296256;
        v76 = sub_10015F6F8;
        v77 = &unk_10051EE20;
        v40 = _Block_copy(&aBlock);
        v71 = _swiftEmptyArrayStorage;
        v41 = sub_10001254C((unint64_t *)&unk_10055A540, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        swift_retain(v3);
        v42 = sub_10000B4C8(&qword_100558B58);
        v43 = sub_100012324((unint64_t *)&qword_10055A550, &qword_100558B58, (const char *)&protocol conformance descriptor for [A]);
        v44 = v68;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v71, v42, v43, v67, v41);
        v45 = type metadata accessor for DispatchWorkItem(0);
        swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
        v46 = DispatchWorkItem.init(flags:block:)(v44, v40);
        swift_release(v79);
        if (*(_QWORD *)(a1 + v11[8]))
          v47 = 3.0;
        else
          v47 = 1.5;
        v48 = sub_1000DD108(0, (unint64_t *)&qword_1005593F0, OS_dispatch_queue_ptr);
        v56 = (void *)static OS_dispatch_queue.main.getter(v48, v49, v50, v51, v52, v53, v54, v55);
        v57 = v69;
        static DispatchTime.now()(v56);
        v58 = v65;
        + infix(_:_:)(v57, v47);
        v59 = *(void (**)(char *, uint64_t))(v70 + 8);
        v60 = v57;
        v61 = v66;
        v59(v60, v66);
        OS_dispatch_queue.asyncAfter(deadline:execute:)(v58, v46);

        v59(v58, v61);
        v62 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = v46;
        v63 = swift_retain_n(v46, 2);
        if (v62)
        {
          dispatch thunk of DispatchWorkItem.cancel()(v63);
          swift_release(v32);
          v64 = v62;
        }
        else
        {
          v64 = v32;
        }
        swift_release(v64);
        swift_release_n(v46, 2);
      }
      else
      {
        swift_release(v32);
      }
    }
  }
}

uint64_t sub_10033B62C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  __int128 v5;

  a3(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v5;
  return a2;
}

uint64_t sub_10033B67C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyAssign(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  return a2;
}

uint64_t type metadata accessor for NoticePresenter.UIRootViewController()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController);
}

uint64_t type metadata accessor for NoticePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10055A7C8;
  if (!qword_10055A7C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NoticePresenter);
  return result;
}

unint64_t sub_10033B738()
{
  unint64_t result;

  result = qword_10055A788;
  if (!qword_10055A788)
  {
    result = swift_getWitnessTable(protocol conformance descriptor for NoticePresentingModifier, &type metadata for NoticePresentingModifier);
    atomic_store(result, (unint64_t *)&qword_10055A788);
  }
  return result;
}

uint64_t sub_10033B77C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticePresentingModifier.body(content:)>>, 1);
}

uint64_t sub_10033B794()
{
  return type metadata accessor for NoticePresenter(0);
}

void sub_10033B79C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10033B828(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10043C830;
    v4[3] = &unk_10043C848;
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_10033B828(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055A7D8)
  {
    v2 = sub_100011650(&qword_10055A760);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055A7D8);
  }
}

uint64_t initializeWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

uint64_t *assignWithTake for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticePresentingModifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresentingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresentingModifier()
{
  return &type metadata for NoticePresentingModifier;
}

double initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_10033BA8C(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

double assignWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v3 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(a2 + 40);
  result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

double initializeWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_10033BA8C(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_10033BA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  __n128 result;

  v5 = a4();
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

double assignWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  double result;

  v3 = swift_unknownObjectWeakTakeAssign();
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = v4;
  result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresenter.UIKitConfiguration()
{
  return &type metadata for NoticePresenter.UIKitConfiguration;
}

uint64_t type metadata accessor for NoticePresenter.PassthroughWindow()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow);
}

uint64_t sub_10033BBC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = a1[1];
  v2 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for NoticePresentingModifier);
  v3 = sub_100011650(&qword_10055A998);
  v4 = type metadata accessor for ModifiedContent(255, v2, v3);
  v7[0] = v1;
  v7[1] = sub_10033B738();
  v6[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v2, v7);
  v6[1] = sub_100012324(&qword_10055A9A0, &qword_10055A998, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v4, v6);
}

unint64_t sub_10033BC80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055A9A8;
  if (!qword_10055A9A8)
  {
    v1 = sub_100011650(&qword_10055A798);
    v2[0] = sub_100012324(&qword_10055A9B0, &qword_10055A790, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = sub_100012324(&qword_10055A9B8, &qword_10055A9C0, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055A9A8);
  }
  return result;
}

uint64_t initializeWithCopy for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for NoticePresentationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentationView()
{
  return &type metadata for NoticePresentationView;
}

uint64_t sub_10033BE08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048CB94, 1);
}

uint64_t sub_10033BE18(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_10033BE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033BE90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1003399DC(v1 + 32, a1);
}

uint64_t sub_10033BEA0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

_BYTE *sub_10033BECC(_BYTE *a1)
{
  uint64_t v1;

  return sub_100339AE0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_10033BED8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10033BEFC()
{
  uint64_t v0;

  sub_10033A81C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10033BF04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033BF14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10033BF24(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10033BF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v11;

  v1 = type metadata accessor for Notice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release(*v6);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  if (*v8)
    swift_release(v8[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_10033C048()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notice(0) - 8) + 80);
  sub_10033813C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10033C078()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10033C088()
{
  NoticePresenter.dismiss(_:)(1);
}

unint64_t sub_10033C094()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AA18;
  if (!qword_10055AA18)
  {
    v1 = sub_100011650(&qword_10055AA20);
    v2[0] = sub_100012324(&qword_10055AA28, (uint64_t *)&unk_10055EB80, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AA18);
  }
  return result;
}

uint64_t sub_10033C1E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  sub_10000D900(v1, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_10033C260;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[4], v2, v3);
}

uint64_t sub_10033C260()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_10033C2AC, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10033C2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_release(*(_QWORD *)(v0 + 64));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_1002D6840(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 32), v7);
    PresentedViewState.present(_:animated:)(v5, 1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v8 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033C360(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10055AA34);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000DC64;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_10033C3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  char v47[24];

  v37 = a2;
  v40 = a1;
  v43 = a4;
  v5 = sub_10000B4C8(&qword_10055AA58);
  v38 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_10000B4C8(&qword_10055AA60);
  __chkstk_darwin();
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000B4C8(&qword_10055AA68);
  v39 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_1005585E0);
  __chkstk_darwin();
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 96);
  swift_beginAccess(v18, v47, 0, 0);
  sub_10033C90C(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1002D6840((uint64_t)v13);
    v19 = v38;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v20(v7, v40, v5);
    v20(v9, (uint64_t)v7, v5);
    swift_storeEnumTagMultiPayload(v9, v41, 1);
    v21 = sub_100012324(&qword_10055AA70, &qword_10055AA58, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v44 = v5;
    v45 = v21;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v42, v5, OpaqueTypeConformance2, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v24 = sub_10000B4C8(&qword_10055AA38);
    v25 = sub_100012324(&qword_10055AA40, &qword_10055AA38, protocol conformance descriptor for PresentedViewState<A>);
    v26 = ObservedObject.projectedValue.getter(v37, a3, v24, v25);
    KeyPath = swift_getKeyPath(&unk_10043CA08);
    ObservedObject.Wrapper.subscript.getter(&v44, KeyPath, v26, v25);
    swift_release(KeyPath);
    swift_release(v26);
    v28 = v44;
    v29 = v45;
    v30 = v46;
    v31 = sub_100012324(&qword_10055AA70, &qword_10055AA58, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    View.sharingPicker(isPresented:item:subject:message:)(v28, v29, v30, v17, 0, 0, 0, 0, 0, 0, 0, 0, v5, v31);
    swift_release(v29);
    v32 = swift_release(v28);
    v33 = v39;
    v34 = v42;
    (*(void (**)(char *, char *, uint64_t, __n128))(v39 + 16))(v9, v11, v42, v32);
    swift_storeEnumTagMultiPayload(v9, v41, 0);
    v44 = v5;
    v45 = v31;
    v35 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v34, v5, v35, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_10033C798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10033C3B0(a1, *v2, v2[1], a2);
}

double View.shareSheetPresenting(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[2];

  swift_retain(a1);
  v6 = sub_10000B4C8(&qword_10055AA38);
  v7 = sub_100012324(&qword_10055AA40, &qword_10055AA38, protocol conformance descriptor for PresentedViewState<A>);
  v8 = ObservedObject.init(wrappedValue:)(a1, v6, v7);
  v10 = v9;
  v12[0] = v8;
  v12[1] = v9;
  View.modifier<A>(_:)(v12, a2, &type metadata for ShareSheetModifier, a3);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_10033C854(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = a1[1];
  v2 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for ShareSheetModifier);
  v4[0] = v1;
  v4[1] = sub_10033C8A8();
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v2, v4);
}

unint64_t sub_10033C8A8()
{
  unint64_t result;

  result = qword_10055AA50;
  if (!qword_10055AA50)
  {
    result = swift_getWitnessTable(byte_10043C9B4, &type metadata for ShareSheetModifier);
    atomic_store(result, (unint64_t *)&qword_10055AA50);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSheetModifier()
{
  return &type metadata for ShareSheetModifier;
}

uint64_t sub_10033C8FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048CC34, 1);
}

uint64_t sub_10033C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_1005585E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033C954@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10033C980(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

unint64_t sub_10033C9A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];
  _QWORD v5[2];

  result = qword_10055AA78;
  if (!qword_10055AA78)
  {
    v1 = sub_100011650(&qword_10055AA80);
    v2 = sub_100011650(&qword_10055AA58);
    v3 = sub_100012324(&qword_10055AA70, &qword_10055AA58, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v5[0] = v2;
    v5[1] = v3;
    v4[0] = swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    v4[1] = v3;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_10055AA78);
  }
  return result;
}

uint64_t Optional<A>.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for Font.TextStyle.body(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_10033CA9C@<X0>(uint64_t a1@<X8>)
{
  return Optional<A>.fontTextStyle.getter(a1);
}

uint64_t sub_10033CAB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t MusicUIContentConfiguration.makeContentView()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentConfiguration, &associated conformance descriptor for MusicUIContentConfiguration.MusicUIContentConfiguration.View: MusicUIContentView);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v7, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t MusicUIContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t MusicUIContentView.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2);
  a3[3] = AssociatedTypeWitness;
  a3[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentView, &associated conformance descriptor for MusicUIContentView.MusicUIContentView.Configuration: MusicUIContentConfiguration)+ 16);
  sub_1000C16E0(a3);
  return v6(a1, a2);
}

uint64_t MusicUIContentView.configuration.setter(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v12[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  __chkstk_darwin();
  v8 = &v12[-v7 - 8];
  sub_1000C53BC((uint64_t)a1, (uint64_t)v12);
  v9 = sub_10000B4C8(&qword_100558B50);
  swift_dynamicCast(v8, v12, v9, AssociatedTypeWitness, 7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 48))(v8, a2, a3);
  return sub_100011758(a1);
}

void (*MusicUIContentView.configuration.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  MusicUIContentView.configuration.getter(a2, a3, v7);
  return sub_10033CDA4;
}

void sub_10033CDA4(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[11];
    v4 = v2[10];
    sub_1000C53BC(*a1, (uint64_t)(v2 + 5));
    MusicUIContentView.configuration.setter(v2 + 5, v4, v3);
    sub_100011758(v2);
  }
  else
  {
    MusicUIContentView.configuration.setter((_QWORD *)*a1, v2[10], v2[11]);
  }
  free(v2);
}

uint64_t ArtistRazzmatazzView.init(artist:navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD v17[2];

  v8 = type metadata accessor for ArtistRazzmatazzView(0);
  v9 = (_QWORD *)(a4 + *(int *)(v8 + 24));
  v16 = _swiftEmptyArrayStorage;
  v10 = sub_10000B4C8(&qword_1005592C0);
  State.init(wrappedValue:)(v17, &v16, v10);
  v11 = v17[1];
  *v9 = v17[0];
  v9[1] = v11;
  v17[0] = 0x4052C00000000000;
  v12 = sub_10033CF90();
  ScaledMetric.init(wrappedValue:)(v17, &type metadata for CGFloat, v12);
  v13 = type metadata accessor for Artist(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a4, a1, v13);
  v15 = (_QWORD *)(a4 + *(int *)(v8 + 20));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055AB30, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView);
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.razzmatazz(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = sub_10000B4C8(&qword_1005592C0);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.rowHeight(double a1)
{
  unint64_t v1;
  double v3;

  v3 = a1;
  v1 = sub_10033CF90();
  return ScaledMetric.init(wrappedValue:)(&v3, &type metadata for CGFloat, v1);
}

unint64_t sub_10033CF90()
{
  unint64_t result;

  result = qword_10055AA98;
  if (!qword_10055AA98)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10055AA98);
  }
  return result;
}

uint64_t ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v42 = type metadata accessor for TaskPriority(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v39 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  __chkstk_darwin();
  v36 = v3;
  v37 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055AAA0);
  __chkstk_darwin();
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GridItem.Size(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10000B4C8(&qword_10055AAA8);
  v11 = *(_QWORD *)(type metadata accessor for GridItem(0) - 8);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ 2 * *(_QWORD *)(v11 + 72), *(unsigned __int8 *)(v11 + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100424BA0;
  v38 = v1;
  v13 = sub_10000B4C8(&qword_10055AAB0);
  ScaledMetric.wrappedValue.getter(&v43, v13);
  *v9 = v43;
  v14 = enum case for GridItem.Size.fixed(_:);
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v15(v9, enum case for GridItem.Size.fixed(_:), v6);
  GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  ScaledMetric.wrappedValue.getter(&v43, v13);
  *v9 = v43;
  v15(v9, v14, v6);
  v16 = GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  v17 = static HorizontalAlignment.leading.getter(v16);
  if (qword_100557F00 != -1)
    swift_once(&qword_100557F00, sub_10033F8CC);
  v18 = qword_10055AA90;
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v18;
  v5[16] = 0;
  v19 = sub_10000B4C8(&qword_10055AAB8);
  v20 = v38;
  sub_10033D35C(v12, v38, (uint64_t)&v5[*(int *)(v19 + 44)]);
  swift_bridgeObjectRelease();
  v21 = v37;
  sub_10000D964(v20, v37, type metadata accessor for ArtistRazzmatazzView);
  v22 = *(unsigned __int8 *)(v35 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_10051F030, v23 + v36, v22 | 7);
  v25 = sub_10000DB44(v21, v24 + v23, type metadata accessor for ArtistRazzmatazzView);
  v26 = v39;
  static TaskPriority.userInitiated.getter(v25);
  v27 = sub_10000B4C8(&qword_10055AAD0);
  v28 = v41;
  v29 = (char *)(v41 + *(int *)(v27 + 36));
  v30 = type metadata accessor for _TaskModifier(0);
  v31 = v40;
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v29[*(int *)(v30 + 20)], v26, v42);
  *(_QWORD *)v29 = &unk_10055AAC8;
  *((_QWORD *)v29 + 1) = v24;
  sub_100011370((uint64_t)v5, v28, &qword_10055AAA0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v32);
  return sub_100011694((uint64_t)v5, &qword_10055AAA0);
}

uint64_t sub_10033D35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  char v91[16];
  uint64_t v92;
  uint64_t v93;
  _OWORD v94[5];
  uint64_t v95;
  char v96;

  *(_QWORD *)&v89 = a1;
  *(_QWORD *)&v79 = type metadata accessor for ScrollIndicatorVisibility(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin();
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10000B4C8(&qword_10055AD40);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin();
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v84 = sub_10000B4C8(&qword_10055AD48);
  *(_QWORD *)&v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin();
  *(_QWORD *)&v80 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_10000B4C8(&qword_10055AD50);
  __chkstk_darwin();
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_10000B4C8(&qword_10055AD58);
  __chkstk_darwin();
  v90 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v82 = (uint64_t)&v72 - v13;
  v14 = __chkstk_darwin();
  v88 = (uint64_t)&v72 - v15;
  v16 = static Font.title2.getter(v14);
  v17 = Text.font(_:)(v16, 0x6174616D7A7A6152, 0xEA00000000007A7ALL, 0, _swiftEmptyArrayStorage);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release(v16);
  v25 = static Font.Weight.semibold.getter(v24);
  v86 = Text.fontWeight(_:)(*(_QWORD *)&v25, 0, v17, v19, v21 & 1, v23);
  v85 = v26;
  v73 = v27;
  v87 = v28;
  sub_10001DA20(v17, v19, v21 & 1);
  v29 = swift_bridgeObjectRelease();
  v74 = static Edge.Set.horizontal.getter(v29);
  v30 = static Axis.Set.horizontal.getter();
  v92 = v89;
  v93 = a2;
  *(_QWORD *)&v89 = a2;
  v31 = sub_10000B4C8(&qword_10055AD60);
  v32 = sub_10002F800(&qword_10055AD68, &qword_10055AD60, (uint64_t (*)(void))sub_100340F54, (uint64_t)&protocol witness table for _PaddingLayout);
  v33 = ScrollView.init(_:showsIndicators:content:)(v30, 1, sub_100340F4C, v91, v31, v32);
  v34 = static ScrollIndicatorVisibility.hidden.getter(v33);
  v35 = static Axis.Set.vertical.getter(v34);
  v36 = static Axis.Set.horizontal.getter();
  v37 = Axis.Set.init(rawValue:)(0);
  v38 = Axis.Set.init(rawValue:)(v37);
  if (Axis.Set.init(rawValue:)(v38 & v35) != v35)
    v37 = Axis.Set.init(rawValue:)(v37 | v35);
  v39 = Axis.Set.init(rawValue:)(v37);
  if (Axis.Set.init(rawValue:)(v39 & v36) != v36)
    v37 = Axis.Set.init(rawValue:)(v37 | v36);
  v40 = v80;
  v41 = sub_100012324(&qword_10055AD90, &qword_10055AD40, (const char *)&protocol conformance descriptor for ScrollView<A>);
  v42 = v76;
  View.scrollIndicators(_:axes:)(v6, v37, v76, v41);
  (*(void (**)(char *, _QWORD))(v78 + 8))(v6, v79);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v8, v42);
  v44 = static Edge.Set.bottom.getter(v43);
  if (qword_100557EF8 != -1)
    swift_once(&qword_100557EF8, sub_10033F8BC);
  v45 = v73 & 1;
  v46 = EdgeInsets.init(_all:)(*(double *)&qword_10055AA88);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v53 = v83;
  v54 = v84;
  (*(void (**)(char *, uint64_t, _QWORD))(v83 + 16))(v11, v40, v84);
  v55 = &v11[*(int *)(v77 + 36)];
  *v55 = v44;
  *((double *)v55 + 1) = v46;
  *((_QWORD *)v55 + 2) = v48;
  *((_QWORD *)v55 + 3) = v50;
  *((_QWORD *)v55 + 4) = v52;
  v55[40] = 0;
  v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v40, v54);
  v57 = static Alignment.center.getter(v56);
  v59 = v58;
  sub_10033DF24(v89, (uint64_t)v94);
  v89 = v94[0];
  v84 = v94[1];
  v83 = v94[2];
  v80 = v94[3];
  v79 = v94[4];
  v60 = v95;
  v61 = v96;
  v62 = v82;
  sub_100011370((uint64_t)v11, v82, &qword_10055AD50);
  v63 = v62 + *(int *)(v81 + 36);
  v64 = v84;
  *(_OWORD *)v63 = v89;
  *(_OWORD *)(v63 + 16) = v64;
  v65 = v80;
  *(_OWORD *)(v63 + 32) = v83;
  *(_OWORD *)(v63 + 48) = v65;
  *(_OWORD *)(v63 + 64) = v79;
  *(_QWORD *)(v63 + 80) = v60;
  *(_BYTE *)(v63 + 88) = v61;
  *(_QWORD *)(v63 + 96) = v57;
  *(_QWORD *)(v63 + 104) = v59;
  sub_100011694((uint64_t)v11, &qword_10055AD50);
  v66 = v88;
  sub_100011530(v62, v88, &qword_10055AD58);
  v67 = v90;
  sub_100011370(v66, v90, &qword_10055AD58);
  v68 = v86;
  v69 = v85;
  *(_QWORD *)a3 = v86;
  *(_QWORD *)(a3 + 8) = v69;
  *(_BYTE *)(a3 + 16) = v45;
  *(_QWORD *)(a3 + 24) = v87;
  *(_BYTE *)(a3 + 32) = v74;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_BYTE *)(a3 + 72) = 1;
  v70 = sub_10000B4C8(&qword_10055AD98);
  sub_100011370(v67, a3 + *(int *)(v70 + 48), &qword_10055AD58);
  sub_10002EBA0(v68, v69, v45);
  swift_bridgeObjectRetain();
  sub_100011694(v66, &qword_10055AD58);
  sub_100011694(v67, &qword_10055AD58);
  sub_10001DA20(v68, v69, v45);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10033D9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[3];

  v33 = a2;
  v35 = a3;
  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10000B4C8(&qword_10055AD88);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10000B4C8(&qword_10055AD78);
  __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_bridgeObjectRetain();
  v12 = static VerticalAlignment.center.getter(v11);
  if (qword_100557EF8 != -1)
    swift_once(&qword_100557EF8, sub_10033F8BC);
  v13 = qword_10055AA88;
  __chkstk_darwin();
  LODWORD(v36[0]) = 0;
  v14 = sub_10001254C(&qword_10055ADA0, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v36, v4, v14);
  v15 = sub_10000B4C8(&qword_10055ADA8);
  v16 = sub_100340FE8();
  LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)(a1, v12, v13, 0, v6, sub_100340FE0, &v30 - 4, v15, v16);
  type metadata accessor for ArtistRazzmatazzView(0);
  v17 = sub_10000B4C8(&qword_10055AAB0);
  v18 = ScaledMetric.wrappedValue.getter(v36, v17);
  v19 = (*(double *)v36 + *(double *)&qword_10055AA88) * (double)*(uint64_t *)(a1 + 16);
  v20 = static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(v36, 0, 1, *(_QWORD *)&v19, 0, v20, v21);
  v22 = v32;
  v23 = v34;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v10, v8, v34);
  v24 = &v10[*(int *)(v31 + 36)];
  v25 = v36[1];
  *(_OWORD *)v24 = v36[0];
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v36[2];
  v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  LOBYTE(v23) = static Edge.Set.horizontal.getter(v26);
  v27 = v35;
  sub_100011370((uint64_t)v10, v35, &qword_10055AD78);
  v28 = v27 + *(int *)(sub_10000B4C8(&qword_10055AD60) + 36);
  *(_BYTE *)v28 = v23;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_BYTE *)(v28 + 40) = 1;
  return sub_100011694((uint64_t)v10, &qword_10055AD78);
}

uint64_t sub_10033DCD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];

  v2 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = (uint64_t *)(a1 + *(int *)(__chkstk_darwin() + 24));
  v6 = *v4;
  v5 = v4[1];
  v18[1] = v6;
  v18[2] = v5;
  sub_10000B4C8(&qword_10055AD38);
  State.wrappedValue.getter(v18);
  KeyPath = swift_getKeyPath(&unk_10043CD58);
  sub_10000D964(a1, (uint64_t)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtistRazzmatazzView);
  v8 = *(unsigned __int8 *)(v2 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10051F080, v9 + v3, v8 | 7);
  sub_10000DB44((uint64_t)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for ArtistRazzmatazzView);
  v11 = sub_10000B4C8(&qword_1005592C0);
  v12 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v13 = sub_100012324(&qword_10055ADC0, &qword_1005592C0, (const char *)&protocol conformance descriptor for [A]);
  v14 = sub_10001254C(&qword_10055ADC8, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v15 = sub_10001254C(&qword_10055ADB8, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_10043CBC0);
  return ForEach<>.init(_:id:content:)(v18, KeyPath, sub_100341134, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_10033DE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;

  sub_10000D964(a1, a3, type metadata accessor for Razzmatazz);
  v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  swift_retain(v6);
  v8 = sub_10000B4C8(&qword_10055AAB0);
  ScaledMetric.wrappedValue.getter(&v12, v8);
  v9 = v12;
  result = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v11 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v11 = v7;
  v11[1] = v6;
  *(_QWORD *)(a3 + *(int *)(result + 24)) = v9;
  return result;
}

uint64_t sub_10033DF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int64x2_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v25 = v5;
  v26 = v4;
  sub_10000B4C8(&qword_10055AD38);
  State.wrappedValue.getter(&v27);
  v6 = *(_QWORD *)(v27 + 16);
  result = swift_bridgeObjectRelease();
  v8 = 0uLL;
  if (v6)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0uLL;
  }
  else
  {
    _StringGuts.grow(_:)(25);
    v16 = swift_bridgeObjectRelease();
    HIDWORD(v25) = -805306368;
    v26 = 0x8000000100452F20;
    v17._countAndFlagsBits = Artist.name.getter(v16);
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 46;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    LODWORD(v25) = static HierarchicalShapeStyle.secondary.getter(v19);
    v9 = Text.foregroundStyle<A>(_:)(&v25, 0xD000000000000016, 0x8000000100452F20, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v10 = v20;
    v22 = v21;
    v12 = v23;
    swift_bridgeObjectRelease();
    v11 = v22 & 1;
    KeyPath = swift_getKeyPath(&unk_10043CD20);
    result = static Edge.Set.horizontal.getter(KeyPath);
    v8 = 0uLL;
    v13 = result;
    v14 = 1;
    v15 = vdupq_n_s64(1uLL);
    v15.i64[0] = KeyPath;
  }
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(int64x2_t *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + 72) = v8;
  *(_BYTE *)(a2 + 88) = v14;
  return result;
}

uint64_t sub_10033E0BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1[6] = a1;
  v3 = type metadata accessor for MainActor(0);
  v1[7] = v3;
  v1[8] = static MainActor.shared.getter(v3);
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_10055B2F8 + dword_10055B2F8);
  v4 = (_QWORD *)swift_task_alloc(unk_10055B2FC);
  v1[9] = v4;
  *v4 = v1;
  v4[1] = sub_10033E13C;
  return v6(a1);
}

uint64_t sub_10033E13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10033E1B4, v4, v5);
}

uint64_t sub_10033E1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  *(_QWORD *)(v0 + 32) = v1;
  KeyPath = swift_getKeyPath(&unk_10043CD00);
  v4 = sub_10000B4C8(&qword_1005592C0);
  v5 = sub_100012324((unint64_t *)&qword_10055AD28, &qword_1005592C0, (const char *)&protocol conformance descriptor for [A]);
  v6 = sub_10001254C(&qword_10055AD30, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_10034B1F8, 0, v4, v5, v6);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v8 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v9;
  *(_QWORD *)(v0 + 40) = v7;
  v11 = sub_10000B4C8(&qword_10055AD38);
  State.wrappedValue.setter(v0 + 40, v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033E2D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  id v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[3];

  v2 = v1;
  v46 = a1;
  sub_10000B4C8(&qword_10055AC28);
  __chkstk_darwin();
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10055AC30);
  __chkstk_darwin();
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055AC38);
  __chkstk_darwin();
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10055AC40);
  v12 = __chkstk_darwin();
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100557EF8 != -1)
    v12 = swift_once(&qword_100557EF8, sub_10033F8BC);
  v15 = qword_10055AA88;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = sub_10000B4C8(&qword_10055AC48);
  v17 = sub_10033E65C(v2, (uint64_t)&v4[*(int *)(v16 + 44)]);
  if (qword_100557F00 != -1)
    v17 = swift_once(&qword_100557F00, sub_10033F8CC);
  v18 = *(double *)&qword_10055AA90;
  v19 = static Edge.Set.all.getter(v17);
  v20 = EdgeInsets.init(_all:)(v18);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_100011370((uint64_t)v4, (uint64_t)v7, &qword_10055AC28);
  v27 = &v7[*(int *)(v5 + 36)];
  *v27 = v19;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_100011694((uint64_t)v4, &qword_10055AC28);
  v28 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v29 = *(double *)(v2 + *(int *)(v28 + 24)) * 4.0;
  v30 = *(_QWORD *)(v2 + *(int *)(v28 + 24));
  v31 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(v47, *(_QWORD *)&v29, 0, v30, 0, v31, v32);
  sub_100011370((uint64_t)v7, (uint64_t)v10, &qword_10055AC30);
  v33 = &v10[*(int *)(v8 + 36)];
  v34 = v47[1];
  *(_OWORD *)v33 = v47[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v47[2];
  sub_100011694((uint64_t)v7, &qword_10055AC30);
  v35 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v36 = Color.init(_:)(v35);
  v37 = static Edge.Set.all.getter(v36);
  sub_100011370((uint64_t)v10, (uint64_t)v14, &qword_10055AC38);
  v38 = &v14[*(int *)(v11 + 36)];
  *(_QWORD *)v38 = v36;
  v38[8] = v37;
  sub_100011694((uint64_t)v10, &qword_10055AC38);
  if (qword_100557ED0 != -1)
    swift_once(&qword_100557ED0, sub_1003365CC);
  v39 = static Corner.large;
  v40 = unk_100563410;
  v41 = byte_100563418;
  v42 = v46;
  sub_100011370((uint64_t)v14, v46, &qword_10055AC40);
  v43 = v42 + *(int *)(sub_10000B4C8(&qword_10055AC50) + 36);
  *(_QWORD *)v43 = v39;
  *(_QWORD *)(v43 + 8) = v40;
  *(_BYTE *)(v43 + 16) = v41;
  return sub_100011694((uint64_t)v14, &qword_10055AC40);
}

uint64_t sub_10033E65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  id v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[3];

  v70 = a2;
  v3 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v60 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v61 = v4;
  v63 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10055AC58);
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  __chkstk_darwin();
  v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10000B4C8(&qword_10055AC60);
  __chkstk_darwin();
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v69 = (uint64_t)&v60 - v9;
  sub_10000B4C8(&qword_10055AC68);
  __chkstk_darwin();
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10055AC70);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10055AC78);
  __chkstk_darwin();
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_10055AC80);
  __chkstk_darwin();
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin();
  v62 = (uint64_t)&v60 - v22;
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v21);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v23 = sub_10000B4C8(&qword_10055AC88);
  v24 = sub_10033EC24(a1, (uint64_t)&v11[*(int *)(v23 + 44)]);
  v25 = *(int *)(v3 + 24);
  v64 = a1;
  v26 = *(double *)(a1 + v25);
  if (qword_100557F00 != -1)
    v24 = swift_once(&qword_100557F00, sub_10033F8CC);
  v27 = v26 - (*(double *)&qword_10055AA90 + *(double *)&qword_10055AA90);
  v28 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(v71, *(_QWORD *)&v27, 0, *(_QWORD *)&v27, 0, v28, v29);
  sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_10055AC68);
  v30 = &v14[*(int *)(v12 + 36)];
  v31 = v71[1];
  *(_OWORD *)v30 = v71[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v71[2];
  sub_100011694((uint64_t)v11, &qword_10055AC68);
  v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v33 = Color.init(_:)(v32);
  v34 = static Edge.Set.all.getter(v33);
  sub_100011370((uint64_t)v14, (uint64_t)v17, &qword_10055AC70);
  v35 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v35 = v33;
  v35[8] = v34;
  sub_100011694((uint64_t)v14, &qword_10055AC70);
  if (qword_100557EC8 != -1)
    swift_once(&qword_100557EC8, sub_1003364E0);
  v36 = static Corner.medium;
  v37 = *(_QWORD *)algn_1005633F8;
  v38 = byte_100563400;
  sub_100011370((uint64_t)v17, (uint64_t)v20, &qword_10055AC78);
  v39 = &v20[*(int *)(v18 + 36)];
  *(_QWORD *)v39 = v36;
  *((_QWORD *)v39 + 1) = v37;
  v39[16] = v38;
  sub_100011694((uint64_t)v17, &qword_10055AC78);
  v40 = v62;
  sub_100011530((uint64_t)v20, v62, &qword_10055AC80);
  v41 = v63;
  v42 = v64;
  sub_10000D964(v64, v63, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  v43 = *(unsigned __int8 *)(v60 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_10051F058, v44 + v61, v43 | 7);
  sub_10000DB44(v41, v45 + v44, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  __chkstk_darwin();
  *(&v60 - 2) = v42;
  v46 = sub_10000B4C8(&qword_10055AC90);
  v47 = sub_100340D80();
  v48 = v66;
  Button.init(action:label:)(sub_100340D30, v45, sub_100340D78, &v60 - 4, v46, v47);
  v50 = static Color.primary.getter(v49);
  KeyPath = swift_getKeyPath(&unk_10043CC10);
  v53 = v67;
  v52 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v8, v48, v68);
  v54 = (uint64_t *)&v8[*(int *)(v65 + 36)];
  *v54 = KeyPath;
  v54[1] = v50;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v52);
  v55 = v69;
  sub_100011530((uint64_t)v8, v69, &qword_10055AC60);
  sub_100011370(v40, (uint64_t)v20, &qword_10055AC80);
  sub_100011370(v55, (uint64_t)v8, &qword_10055AC60);
  v56 = v70;
  sub_100011370((uint64_t)v20, v70, &qword_10055AC80);
  v57 = sub_10000B4C8(&qword_10055ACC0);
  sub_100011370((uint64_t)v8, v56 + *(int *)(v57 + 48), &qword_10055AC60);
  v58 = v56 + *(int *)(v57 + 64);
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  sub_100011694(v55, &qword_10055AC60);
  sub_100011694(v40, &qword_10055AC80);
  sub_100011694((uint64_t)v8, &qword_10055AC60);
  return sub_100011694((uint64_t)v20, &qword_10055AC80);
}

uint64_t sub_10033EC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  double v52;
  unint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *);
  uint64_t (*v108)(char *);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v119 = a2;
  v3 = type metadata accessor for Date.FormatStyle.Symbol.Day(0);
  v117 = *(_QWORD *)(v3 - 8);
  v118 = v3;
  __chkstk_darwin();
  v116 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_10000B4C8(&qword_10055ACC8);
  __chkstk_darwin();
  v113 = (uint64_t *)((char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B4C8(&qword_10055ACD0);
  __chkstk_darwin();
  v104 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Date.FormatStyle.Symbol.Month(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin();
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for TimeZone(0);
  v9 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin();
  v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for Date.FormatStyle(0);
  v101 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v120 = (char *)&v94 - v14;
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_10000B4C8(&qword_10055ACD8);
  __chkstk_darwin();
  v20 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10000B4C8(&qword_10055ACE0);
  __chkstk_darwin();
  v97 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_10000B4C8(&qword_10055ACE8);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin();
  v99 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_10000B4C8(&qword_10055ACF0);
  __chkstk_darwin();
  v122 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v110 = (uint64_t)&v94 - v24;
  v25 = type metadata accessor for Razzmatazz(0);
  v26 = a1 + *(int *)(v25 + 24);
  v108 = *(uint64_t (**)(char *))(v16 + 16);
  v109 = v26;
  v95 = v15;
  v27 = v108(v18);
  static ParseableFormatStyle<>.dateTime.getter(v27);
  v28 = a1 + *(int *)(v25 + 32);
  v106 = v28 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v107 = *(void (**)(char *))(v9 + 16);
  v105 = v11;
  v107(v11);
  v29 = Date.FormatStyle.timeZone.setter(v11);
  static Date.FormatStyle.Symbol.Month.abbreviated.getter(v29);
  v30 = v120;
  Date.FormatStyle.month(_:)(v8);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v8, v103);
  v31 = *(void (**)(char *, uint64_t))(v101 + 8);
  v32 = v121;
  v31(v13, v121);
  v98 = v31;
  v103 = sub_10001254C(&qword_10055ACF8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  v94 = v18;
  Date.formatted<A>(_:)(&v126, v30, v32, v103);
  v31(v30, v32);
  v102 = *(_QWORD *)(v16 + 8);
  ((void (*)(char *, uint64_t))v102)(v18, v15);
  v124 = v126;
  v125 = v127;
  v101 = sub_1002EB09C();
  v33 = Text.init<A>(_:)(&v124, &type metadata for String, v101);
  v35 = v34;
  v37 = v36;
  LOBYTE(v15) = v38 & 1;
  v39 = enum case for Text.Case.uppercase(_:);
  v40 = type metadata accessor for Text.Case(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v104, v39, v40);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  KeyPath = swift_getKeyPath(&unk_10043CC70);
  v44 = v113;
  sub_100011370(v42, (uint64_t)v113 + *(int *)(v115 + 28), &qword_10055ACD0);
  *v44 = KeyPath;
  sub_100011370((uint64_t)v44, (uint64_t)&v20[*(int *)(v96 + 36)], &qword_10055ACC8);
  *(_QWORD *)v20 = v33;
  *((_QWORD *)v20 + 1) = v35;
  v20[16] = v15;
  *((_QWORD *)v20 + 3) = v37;
  sub_10002EBA0(v33, v35, v15);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v44, &qword_10055ACC8);
  sub_100011694(v42, &qword_10055ACD0);
  sub_10001DA20(v33, v35, v15);
  v45 = swift_bridgeObjectRelease();
  v46 = static Font.caption.getter(v45);
  v47 = swift_getKeyPath(&unk_10043CCA0);
  v48 = v97;
  sub_100011370((uint64_t)v20, v97, &qword_10055ACD8);
  v49 = v100;
  v50 = (uint64_t *)(v48 + *(int *)(v100 + 36));
  *v50 = v47;
  v50[1] = v46;
  v51 = sub_100011694((uint64_t)v20, &qword_10055ACD8);
  v52 = static Font.Weight.semibold.getter(v51);
  v53 = sub_100340E3C();
  v54 = v99;
  View.fontWeight(_:)(*(_QWORD *)&v52, 0, v49, v53);
  sub_100011694(v48, &qword_10055ACE0);
  v55 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  v56 = Color.init(_:)(v55);
  v57 = swift_getKeyPath(&unk_10043CCD0);
  v58 = v112;
  v59 = v122;
  v60 = v54;
  v61 = v54;
  v62 = v114;
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v122, v60, v114);
  v63 = (uint64_t *)(v59 + *(int *)(v111 + 36));
  *v63 = v57;
  v63[1] = v56;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v62);
  v64 = v59;
  v65 = v110;
  sub_100011530(v64, v110, &qword_10055ACF0);
  v66 = v94;
  v67 = v95;
  v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v108)(v94, v109, v95);
  static ParseableFormatStyle<>.dateTime.getter(v68);
  v69 = v105;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v105, v106, v123);
  v70 = Date.FormatStyle.timeZone.setter(v69);
  v71 = v116;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v70);
  v72 = v120;
  Date.FormatStyle.day(_:)(v71);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v71, v118);
  v73 = v13;
  v74 = v121;
  v75 = v98;
  v98(v73, v121);
  Date.formatted<A>(_:)(&v126, v72, v74, v103);
  v75(v72, v74);
  ((void (*)(char *, uint64_t))v102)(v66, v67);
  v124 = v126;
  v125 = v127;
  v76 = Text.init<A>(_:)(&v124, &type metadata for String, v101);
  v78 = v77;
  v80 = v79;
  v82 = v81 & 1;
  v83 = static Font.title3.getter();
  v84 = Text.font(_:)(v83, v76, v78, v82, v80);
  v86 = v85;
  LOBYTE(v39) = v87;
  v89 = v88;
  swift_release(v83);
  sub_10001DA20(v76, v78, v82);
  swift_bridgeObjectRelease();
  v90 = v122;
  sub_100011370(v65, v122, &qword_10055ACF0);
  v91 = v119;
  sub_100011370(v90, v119, &qword_10055ACF0);
  v92 = v91 + *(int *)(sub_10000B4C8(&qword_10055AD20) + 48);
  *(_QWORD *)v92 = v84;
  *(_QWORD *)(v92 + 8) = v86;
  *(_BYTE *)(v92 + 16) = v39 & 1;
  *(_QWORD *)(v92 + 24) = v89;
  sub_10002EBA0(v84, v86, v39 & 1);
  swift_bridgeObjectRetain();
  sub_100011694(v65, &qword_10055ACF0);
  sub_10001DA20(v84, v86, v39 & 1);
  swift_bridgeObjectRelease();
  return sub_100011694(v90, &qword_10055ACF0);
}

__n128 sub_10033F50C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t KeyPath;
  __n128 result;
  __n128 v13;
  _QWORD v14[2];
  unsigned __int8 v15;
  __n128 v16;
  unint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_10033F5BC(a1, (uint64_t)v14);
  v5 = v14[0];
  v6 = v14[1];
  v7 = v15;
  v13 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  KeyPath = swift_getKeyPath(&unk_10043CC40);
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0x4000000000000000;
  a2[1].n128_u8[0] = 0;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = v6;
  a2[2].n128_u8[8] = v7;
  result = v13;
  a2[3] = v13;
  a2[4].n128_u64[0] = v8;
  a2[4].n128_u8[8] = v9;
  a2[5].n128_u64[0] = v10;
  a2[5].n128_u64[1] = KeyPath;
  a2[6].n128_u64[0] = 1;
  a2[6].n128_u8[8] = 0;
  return result;
}

uint64_t sub_10033F5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  v56 = Razzmatazz.shortName.getter();
  v57 = v3;
  v4 = sub_1002EB09C();
  v5 = Text.init<A>(_:)(&v56, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Font.Weight.semibold.getter(v5);
  v13 = Text.fontWeight(_:)(*(_QWORD *)&v12, 0, v5, v7, v11, v9);
  v52 = v14;
  v53 = v13;
  v16 = v15;
  v54 = v17;
  sub_10001DA20(v5, v7, v11);
  swift_bridgeObjectRelease();
  v18 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32));
  v20 = v18[6];
  v19 = v18[7];
  v21 = v18[9];
  if (!v21)
    goto LABEL_5;
  v22 = v18[8];
  swift_bridgeObjectRetain();
  if (String.count.getter(v22, v21) != 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v23 = sub_10000B4C8(&qword_1005593D0);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100424BA0;
  *(_QWORD *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 40) = v19;
  *(_QWORD *)(v24 + 48) = v22;
  *(_QWORD *)(v24 + 56) = v21;
  v56 = v24;
  swift_bridgeObjectRetain();
  v25 = sub_10000B4C8(&qword_10055A048);
  v26 = sub_100012324((unint64_t *)&qword_10055A050, &qword_10055A048, (const char *)&protocol conformance descriptor for [A]);
  v20 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v25, v26);
  v19 = v27;
  swift_bridgeObjectRelease();
LABEL_6:
  v28 = v16 & 1;
  v56 = v20;
  v57 = v19;
  v29 = Text.init<A>(_:)(&v56, &type metadata for String, v4);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  LODWORD(v56) = static HierarchicalShapeStyle.secondary.getter(v29);
  v36 = Text.foregroundStyle<A>(_:)(&v56, v29, v31, v35, v33, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_10001DA20(v29, v31, v35);
  v43 = swift_bridgeObjectRelease();
  v44 = static Font.subheadline.getter(v43);
  v45 = Text.font(_:)(v44, v36, v38, v42, v40);
  v47 = v46;
  LOBYTE(v35) = v48;
  v50 = v49;
  swift_release(v44);
  sub_10001DA20(v36, v38, v42);
  swift_bridgeObjectRelease();
  LOBYTE(v56) = v28;
  *(_QWORD *)a2 = v53;
  *(_QWORD *)(a2 + 8) = v52;
  *(_BYTE *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v54;
  *(_QWORD *)(a2 + 32) = v45;
  *(_QWORD *)(a2 + 40) = v47;
  *(_BYTE *)(a2 + 48) = v35 & 1;
  *(_QWORD *)(a2 + 56) = v50;
  sub_10002EBA0(v53, v52, v28);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v45, v47, v35 & 1);
  swift_bridgeObjectRetain();
  sub_10001DA20(v45, v47, v35 & 1);
  swift_bridgeObjectRelease();
  sub_10001DA20(v53, v52, v56);
  return swift_bridgeObjectRelease();
}

void sub_10033F8BC()
{
  qword_10055AA88 = 0x4020000000000000;
}

void sub_10033F8CC()
{
  qword_10055AA90 = 0x4028000000000000;
}

uint64_t sub_10033F8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_10055AAC4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DC64;
  return sub_10033E0BC(v3);
}

uint64_t sub_10033F944(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtistRazzmatazzView.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    swift_retain(v12);
    swift_bridgeObjectRetain();
    swift_retain(v15);
    v19 = sub_10000B4C8(&qword_10055AAB0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtistRazzmatazzView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  v5 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v5 + 8));
  v6 = a1 + a2[7];
  v7 = sub_10000B4C8(&qword_10055AAB0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_retain(v11);
  swift_bridgeObjectRetain();
  swift_retain(v14);
  v18 = sub_10000B4C8(&qword_10055AAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 8) = v16;
  swift_retain(v16);
  swift_release(v15);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_10000B4C8(&qword_10055AAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_10000B4C8(&qword_10055AAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_release(v12);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_10000B4C8(&qword_10055AAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10033FDE4);
}

uint64_t sub_10033FDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_10000B4C8(&qword_10055AAB0);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10033FE9C);
}

uint64_t sub_10033FE9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_10000B4C8(&qword_10055AAB0);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10033FF44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for () + 64;
    v6[2] = &unk_10043CB98;
    sub_10033FFE0(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_10033FFE0(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055AB40)
  {
    v2 = sub_10033CF90();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055AB40);
  }
}

unint64_t sub_10034003C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AB78;
  if (!qword_10055AB78)
  {
    v1 = sub_100011650(&qword_10055AAD0);
    v2[0] = sub_100012324(&qword_10055AB80, &qword_10055AAA0, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = sub_10001254C(&qword_10055AB88, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AB78);
  }
  return result;
}

uint64_t *sub_1003400D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v37;
  char *v38;
  void *v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v39 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v39;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v37 = &v20[v27];
    v38 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v39;
    v29(v38, v37, v28);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = (uint64_t *)((char *)v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *(uint64_t *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
  }
  swift_retain(v35);
  return v4;
}

double sub_1003402B4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Razzmatazz(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1003403B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v36 = &v19[v26];
  v37 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v38;
  v28(v37, v36, v27);
  v30 = *(int *)(a3 + 20);
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_retain(v34);
  return a1;
}

_QWORD *sub_10034056C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  v29 = v26[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain(v28);
  swift_release(v29);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_10034078C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  return a1;
}

_QWORD *sub_1003408A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a1 + v31 + 8);
  *(_OWORD *)((char *)a1 + v31) = *(_OWORD *)((char *)a2 + v31);
  swift_release(v32);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100340A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100340A40);
}

uint64_t sub_100340A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100340ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100340AC8);
}

uint64_t sub_100340AC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055ABE8, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView.RazzmatazzCell);
}

uint64_t sub_100340B54(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100340BD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048CDF8, 1);
}

uint64_t sub_100340BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v7 + v8[6];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[7];
  v12 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v7 + v8[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = v13 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100340D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

double sub_100340D78@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_10033F50C(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100340D80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AC98;
  if (!qword_10055AC98)
  {
    v1 = sub_100011650(&qword_10055AC90);
    v2[0] = sub_100012324(&qword_10055ACA0, &qword_10055ACA8, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = sub_100012324((unint64_t *)&qword_10055ACB0, &qword_10055ACB8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AC98);
  }
  return result;
}

unint64_t sub_100340E3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AD00;
  if (!qword_10055AD00)
  {
    v1 = sub_100011650(&qword_10055ACE0);
    v2[0] = sub_100340EC0();
    v2[1] = sub_100012324((unint64_t *)&unk_10055DA40, &qword_10055AD18, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AD00);
  }
  return result;
}

unint64_t sub_100340EC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AD08;
  if (!qword_10055AD08)
  {
    v1 = sub_100011650(&qword_10055ACD8);
    v2[0] = &protocol witness table for Text;
    v2[1] = sub_100012324(&qword_10055AD10, &qword_10055ACC8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AD08);
  }
  return result;
}

uint64_t sub_100340F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10033D9E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100340F54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AD70;
  if (!qword_10055AD70)
  {
    v1 = sub_100011650(&qword_10055AD78);
    v2[0] = sub_100012324(&qword_10055AD80, &qword_10055AD88, (const char *)&protocol conformance descriptor for LazyHGrid<A>);
    v2[1] = &protocol witness table for _FrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AD70);
  }
  return result;
}

uint64_t sub_100340FE0()
{
  uint64_t v0;

  return sub_10033DCD4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100340FE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_10055ADB0;
  if (!qword_10055ADB0)
  {
    v1 = sub_100011650(&qword_10055ADA8);
    v2 = sub_10001254C(&qword_10055ADB8, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_10043CBC0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10055ADB0);
  }
  return result;
}

uint64_t sub_100341068()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for ArtistRazzmatazzView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5] + 8));
  v9 = v7 + v1[6];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v9 + 8));
  v10 = v7 + v1[7];
  v11 = sub_10000B4C8(&qword_10055AAB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100341134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  return sub_10033DE7C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100341184()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055ADD0;
  if (!qword_10055ADD0)
  {
    v1 = sub_100011650(&qword_10055AC50);
    v2[0] = sub_1003411F0();
    v2[1] = sub_100336CDC();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055ADD0);
  }
  return result;
}

unint64_t sub_1003411F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055ADD8;
  if (!qword_10055ADD8)
  {
    v1 = sub_100011650(&qword_10055AC40);
    v2[0] = sub_10002F800(&qword_10055ADE0, &qword_10055AC38, (uint64_t (*)(void))sub_100341294, (uint64_t)&protocol witness table for _FrameLayout);
    v2[1] = sub_100012324((unint64_t *)&unk_10055E950, &qword_10055E120, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055ADD8);
  }
  return result;
}

unint64_t sub_100341294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055ADE8;
  if (!qword_10055ADE8)
  {
    v1 = sub_100011650(&qword_10055AC30);
    v2[0] = sub_100012324(&qword_10055ADF0, &qword_10055AC28, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055ADE8);
  }
  return result;
}

id sub_100341318()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CitySearchController(0)), "init");
}

uint64_t sub_10034133C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t KeyPath;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  char v30[16];
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;

  v28 = a1;
  v29 = type metadata accessor for SearchFieldPlacement(0);
  v2 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10055AEF8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v1;
  v9 = sub_10000B4C8(&qword_10055AF00);
  v10 = sub_100011650(&qword_10055AF08);
  v11 = sub_100343558();
  v12 = sub_1002EB09C();
  v32 = v10;
  v33 = &type metadata for String;
  v34 = v11;
  v35 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  NavigationStack.init<>(root:)(sub_100343550, v30, v9, OpaqueTypeConformance2);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(unsigned __int8 *)(v1 + 32);
  v17 = type metadata accessor for CitySearchController(0);
  v18 = sub_10001254C(&qword_10055AF38, type metadata accessor for CitySearchController, (uint64_t)&unk_10043CDE8);
  v19 = (void *)StateObject.projectedValue.getter(v14, v15, v16, v17, v18);
  KeyPath = swift_getKeyPath(&unk_10043CE70);
  ObservedObject.Wrapper.subscript.getter(&v32, KeyPath, v19, v18);
  swift_release(KeyPath);

  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  static SearchFieldPlacement.navigationBarDrawer.getter();
  v25 = sub_100012324(&qword_10055AF40, &qword_10055AEF8, (const char *)&protocol conformance descriptor for NavigationStack<A, B>);
  View.searchable(text:placement:prompt:)(v21, v22, v23, v24, v4, 2037672259, 0xE400000000000000, 0, _swiftEmptyArrayStorage, v5, v25);
  swift_bridgeObjectRelease();
  swift_release(v22);
  v26 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v29, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10034158C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  char v34[16];
  _QWORD *v35;
  uint64_t v36;
  uint64_t (*v37)@<X0>(void **@<X0>, uint64_t@<X8>);
  uint64_t v38;
  _QWORD v39[2];

  v33[1] = a2;
  v3 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10055AF08);
  __chkstk_darwin();
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(unsigned __int8 *)(a1 + 32);
  v12 = type metadata accessor for CitySearchController(0);
  v13 = sub_10001254C(&qword_10055AF38, type metadata accessor for CitySearchController, (uint64_t)&unk_10043CDE8);
  v14 = (void *)StateObject.wrappedValue.getter(v9, v10, v11, v12, v13);
  KeyPath = swift_getKeyPath(&unk_10043CEB8);
  v16 = swift_getKeyPath(&unk_10043CEE0);
  static Published.subscript.getter(v39, v14, KeyPath);

  swift_release(KeyPath);
  swift_release(v16);
  v17 = v39[0];
  v18 = swift_getKeyPath(&unk_10043CF08);
  sub_10034363C(a1, (uint64_t)v5);
  v19 = *(unsigned __int8 *)(v3 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_10051F110, v20 + v4, v19 | 7);
  sub_10034373C((uint64_t)v5, v21 + v20);
  v38 = v21;
  v39[0] = v17;
  v35 = v39;
  v36 = v18;
  v37 = sub_100343780;
  v22 = sub_10000B4C8(&qword_10055AF48);
  v23 = sub_100343AC0();
  List<>.init(content:)(sub_100343AB4, v34, v22, v23);
  swift_release(v18);
  swift_release(v21);
  v24 = swift_bridgeObjectRelease();
  v25 = static Alignment.center.getter(v24);
  v27 = v26;
  v28 = (uint64_t)&v8[*(int *)(v6 + 36)];
  sub_100342148(a1, v28);
  v29 = (uint64_t *)(v28 + *(int *)(sub_10000B4C8(&qword_10055AF30) + 36));
  *v29 = v25;
  v29[1] = v27;
  v39[0] = 0x686372616553;
  v39[1] = 0xE600000000000000;
  v30 = sub_100343558();
  v31 = sub_1002EB09C();
  View.navigationTitle<A>(_:)(v39, v6, &type metadata for String, v30, v31);
  return sub_100011694((uint64_t)v8, &qword_10055AF08);
}

uint64_t sub_100341814()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10043CEB8);
  v2 = swift_getKeyPath(&unk_10043CEE0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_100341884@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;

  v5 = *a1;
  *(_QWORD *)a3 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = sub_10000B4C8(&qword_10055AF88);
  return sub_1003418DC(v5, a2, (_QWORD *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_1003418DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _OWORD v117[3];

  v96 = a3;
  v100 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v5 = *(_QWORD *)(v100 + 64);
  __chkstk_darwin();
  v101 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_10000B4C8((uint64_t *)&unk_10055CF90);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v103 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10000B4C8(&qword_10055AF90);
  __chkstk_darwin();
  v107 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v106 = (uint64_t)&v93 - v8;
  v9 = objc_msgSend(a1, "title");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *(_QWORD *)&v117[0] = v10;
  *((_QWORD *)&v117[0] + 1) = v12;
  v13 = sub_1002EB09C();
  v14 = Text.init<A>(_:)(v117, &type metadata for String, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  LODWORD(v117[0]) = static HierarchicalShapeStyle.primary.getter(v14);
  v112 = Text.foregroundStyle<A>(_:)(v117, v14, v16, v20, v18, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v115 = v21;
  v116 = v22;
  v24 = v23;
  sub_10001DA20(v14, v16, v20);
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, "subtitle");
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  swift_bridgeObjectRelease();
  v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v29 = v26 & 0xFFFFFFFFFFFFLL;
  if (v29)
  {
    v30 = objc_msgSend(a1, "subtitle");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    *(_QWORD *)&v117[0] = v31;
    *((_QWORD *)&v117[0] + 1) = v33;
    v34 = Text.init<A>(_:)(v117, &type metadata for String, v13);
    v36 = v35;
    v38 = v37;
    v40 = v39 & 1;
    LODWORD(v117[0]) = static HierarchicalShapeStyle.secondary.getter(v34);
    v41 = Text.foregroundStyle<A>(_:)(v117, v34, v36, v40, v38, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v93 = a1;
    v42 = v41;
    v43 = v13;
    v45 = v44;
    v95 = v5;
    v94 = a2;
    v47 = v46;
    v48 = v24;
    v50 = v49 & 1;
    sub_10001DA20(v34, v36, v40);
    v51 = swift_bridgeObjectRelease();
    v52 = static Font.subheadline.getter(v51);
    v111 = Text.font(_:)(v52, v42, v45, v50, v47);
    v114 = v53;
    LOBYTE(v36) = v54;
    v99 = v55;
    swift_release(v52);
    v98 = v36 & 1;
    v56 = v45;
    v13 = v43;
    v57 = v50;
    v24 = v48;
    sub_10001DA20(v42, v56, v57);
    a2 = v94;
    v5 = v95;
    v58 = swift_bridgeObjectRelease();
    LOBYTE(v42) = static Edge.Set.top.getter(v58);
    v59 = EdgeInsets.init(_all:)(2.0);
    v109 = v60;
    v110 = v59;
    v108 = v61;
    v97 = v62;
    v113 = v42;
    a1 = v93;
  }
  else
  {
    v111 = 0;
    v114 = 0;
    v98 = 0;
    v99 = 0;
    v113 = 0;
    v109 = 0;
    v110 = 0.0;
    v108 = 0;
    v97 = 0;
  }
  v63 = v24 & 1;
  *(_QWORD *)&v117[0] = 0;
  *((_QWORD *)&v117[0] + 1) = 0xE000000000000000;
  v64 = v101;
  sub_10034363C(a2, v101);
  v65 = *(unsigned __int8 *)(v100 + 80);
  v66 = (v65 + 16) & ~v65;
  v67 = (v5 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = swift_allocObject(&unk_10051F160, v67 + 8, v65 | 7);
  sub_10034373C(v64, v68 + v66);
  *(_QWORD *)(v68 + v67) = a1;
  v69 = a1;
  v70 = v103;
  v71 = Button<>.init<A>(_:action:)(v117, sub_100343CA8, v68, &type metadata for String, v13);
  v72 = static Alignment.center.getter(v71);
  _FrameLayout.init(width:height:alignment:)(v117, 0, 1, 0, 0, v72, v73);
  v74 = v104;
  v75 = (uint64_t)v107;
  v76 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v107, v70, v105);
  v77 = (_OWORD *)(v75 + *(int *)(v102 + 36));
  v78 = v117[1];
  *v77 = v117[0];
  v77[1] = v78;
  v77[2] = v117[2];
  (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v76);
  v79 = v106;
  sub_100343CE8(v75, v106);
  sub_100343D30(v79, v75);
  v80 = v112;
  v81 = v96;
  v82 = v115;
  *v96 = v112;
  v81[1] = v82;
  LODWORD(v95) = v24 & 1;
  *((_BYTE *)v81 + 16) = v24 & 1;
  v83 = v111;
  v81[3] = v116;
  v81[4] = v83;
  v84 = v113;
  v85 = v114;
  v86 = v98;
  v81[5] = v114;
  v81[6] = v86;
  v87 = v99;
  v81[7] = v99;
  v81[8] = v84;
  v113 = v84;
  v88 = v109;
  *((double *)v81 + 9) = v110;
  v81[10] = v88;
  v89 = v97;
  v81[11] = v108;
  v81[12] = v89;
  *((_BYTE *)v81 + 104) = 0;
  v90 = sub_10000B4C8(&qword_10055AF98);
  sub_100343D30(v75, (uint64_t)v81 + *(int *)(v90 + 64));
  sub_10002EBA0(v80, v115, v63);
  swift_bridgeObjectRetain();
  v91 = v111;
  sub_10002EB70(v111, v85, v86, v87);
  sub_100011694(v79, &qword_10055AF90);
  sub_100011694(v75, &qword_10055AF90);
  sub_10002EBB0(v91, v114, v86, v87);
  sub_10001DA20(v112, v115, v95);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100341F34(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v25[1] = a1;
  v4 = type metadata accessor for DismissAction(0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  __chkstk_darwin();
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = objc_msgSend(a2, "title", swift_retain(v7).n128_f64[0]);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(a2, "subtitle");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  objc_msgSend(a2, "coordinate");
  v17 = v16;
  objc_msgSend(a2, "coordinate");
  v19 = v18;
  KeyPath = swift_getKeyPath(&unk_10043CF20);
  v21 = swift_getKeyPath(&unk_10043CF48);
  static Published.subscript.getter(&v28, v7, KeyPath);
  swift_release(KeyPath);
  swift_release(v21);
  v31 = v28;
  v32 = v29;
  v33 = v30;
  v22 = swift_getKeyPath(&unk_10043CF20);
  v23 = swift_getKeyPath(&unk_10043CF48);
  *(_QWORD *)&v28 = v9;
  *((_QWORD *)&v28 + 1) = v11;
  *(_QWORD *)&v29 = v13;
  *((_QWORD *)&v29 + 1) = v15;
  *(_QWORD *)&v30 = v17;
  *((_QWORD *)&v30 + 1) = v19;
  swift_retain(v7);
  static Published.subscript.setter(&v28, v7, v22, v23);
  sub_10034771C((uint64_t)&v31);
  v34 = v31;
  sub_1000117BC((uint64_t)&v34);
  v28 = v32;
  sub_1000117BC((uint64_t)&v28);
  swift_release(v7);
  type metadata accessor for CitySelectionView(0);
  sub_10035DBF0((uint64_t)v6);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v6, v27);
}

uint64_t sub_100342148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for CitySearchController(0);
  v7 = sub_10001254C(&qword_10055AF38, type metadata accessor for CitySearchController, (uint64_t)&unk_10043CDE8);
  v8 = (void *)StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_10043CEB8);
  v10 = swift_getKeyPath(&unk_10043CEE0);
  static Published.subscript.getter(&v17, v8, KeyPath);

  swift_release(KeyPath);
  swift_release(v10);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v16 = v17;
    else
      v16 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = swift_bridgeObjectRelease();
  if (v11)
  {
    v13 = sub_10000B4C8(&qword_10055AF68);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    static ContentUnavailableView<>.search.getter(v12);
    v15 = sub_10000B4C8(&qword_10055AF68);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
  }
}

uint64_t sub_1003422B0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10043CE70);
  v2 = swift_getKeyPath(&unk_10043CE98);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100342320(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10043CE70);
  v5 = swift_getKeyPath(&unk_10043CE98);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

void sub_10034239C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_10043CE70);
  v6 = swift_getKeyPath(&unk_10043CE98);
  v13 = a1;
  v14 = a2;
  v7 = v2;
  static Published.subscript.setter(&v13, v7, KeyPath, v6);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v9 = swift_getKeyPath(&unk_10043CE70);
  v10 = swift_getKeyPath(&unk_10043CE98);
  static Published.subscript.getter(&v13, v7, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v14;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v8, "setQuery:", v12, v13);

}

void sub_1003424A0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10043CEB8);
  v5 = swift_getKeyPath(&unk_10043CEE0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_10034251C(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10043CEB8);
  v5 = swift_getKeyPath(&unk_10043CEE0);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

char *sub_100342590()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void **aBlock;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  objc_super v30;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10000B4C8(&qword_10055AFA0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10055AFA8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__query];
  aBlock = 0;
  v25 = 0xE000000000000000;
  v12 = v1;
  Published.init(initialValue:)(&aBlock, &type metadata for String);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v13 = &v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__completionResults];
  aBlock = (void **)_swiftEmptyArrayStorage;
  v14 = sub_10000B4C8(&qword_10055AE58);
  Published.init(initialValue:)(&aBlock, v14);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v15 = objc_msgSend(objc_allocWithZone((Class)MusicMapKitLocalSearchWrapper), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter] = v15;

  v30.receiver = v12;
  v30.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v30, "init");
  v17 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v18 = swift_allocObject(&unk_10051F188, 24, 7);
  *(_QWORD *)(v18 + 16) = v16;
  v28 = sub_100343DA4;
  v29 = v18;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_100342B84;
  v27 = &unk_10051F1A0;
  v19 = _Block_copy(&aBlock);
  v20 = v29;
  v21 = v16;
  v22 = v17;
  objc_msgSend(v22, "setDidUpdateResults:", v19, swift_release(v20).n128_f64[0]);

  _Block_release(v19);
  return v21;
}

void sub_1003427CC(uint64_t a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  _QWORD v28[4];
  _QWORD *v29;

  sub_10000B4C8(&qword_10055A300);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v18 = _swiftEmptyArrayStorage;
LABEL_18:
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain();
    v21 = a2;
    v22 = static MainActor.shared.getter(v21);
    v23 = (_QWORD *)swift_allocObject(&unk_10051F1D8, 56, 7);
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v21;
    v23[5] = v18;
    v23[6] = a1;
    v24 = sub_100323BB4((uint64_t)v5, (uint64_t)&unk_10055AFB8, (uint64_t)v23);
    swift_release(v24);
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v6)
    goto LABEL_17;
LABEL_3:
  if (v6 >= 1)
  {
    v26 = a2;
    v27 = v5;
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v10 = *(id *)(a1 + 8 * i + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, "subtitle");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      v28[2] = v13;
      v28[3] = v15;
      v28[0] = 44;
      v28[1] = 0xE100000000000000;
      v16 = sub_1002EB09C();
      LOBYTE(v12) = StringProtocol.contains<A>(_:)(v28, &type metadata for String, &type metadata for String, v16, v16);
      v17 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v8 = v29[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
        specialized ContiguousArray._endMutation()(v9);
      }
    }
    swift_bridgeObjectRelease();
    v18 = v29;
    a2 = v26;
    v5 = v27;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_100342A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[6] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100342AA0, v8, v9);
}

uint64_t sub_100342AA0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  if (v1 >> 62)
  {
    v9 = *(_QWORD *)(v0 + 32);
    if (v9 < 0)
      v10 = *(_QWORD *)(v0 + 32);
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = (uint64_t *)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  if (v2)
    v3 = (uint64_t *)(v0 + 32);
  v5 = *v3;
  swift_bridgeObjectRetain();
  KeyPath = swift_getKeyPath(&unk_10043CEB8);
  v7 = swift_getKeyPath(&unk_10043CEE0);
  *(_QWORD *)(v0 + 16) = v5;
  static Published.subscript.setter(v0 + 16, v4, KeyPath, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100342B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  unint64_t v5;
  uint64_t v6;
  __n128 v7;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100343B94();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v4(v6, v7);
  swift_release(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100342C80()
{
  return type metadata accessor for CitySearchController(0);
}

uint64_t type metadata accessor for CitySearchController(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055AE38, (uint64_t)&nominal type descriptor for CitySearchController);
}

void sub_100342C9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100342D30();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100342D84(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_100342D30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10055AE48)
  {
    v0 = type metadata accessor for Published(0, &type metadata for String);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10055AE48);
  }
}

void sub_100342D84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055AE50)
  {
    v2 = sub_100011650(&qword_10055AE58);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055AE50);
  }
}

uint64_t sub_100342DDC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v19);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = (void *)a2[3];
    v10 = *((_BYTE *)a2 + 32);
    swift_retain(v7);
    sub_100342EE8(v8, v9, v10);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_10000B4C8(&qword_10055EBC0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = v12;
      v17 = v14;
      v18 = 1;
    }
    else
    {
      v20 = *v13;
      *v12 = *v13;
      swift_retain(v20);
      v16 = v12;
      v17 = v14;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

id sub_100342EE8(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain(a2);
}

double sub_100342EF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  sub_100342F7C(*(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

double sub_100342F7C(uint64_t a1, void *a2, char a3)
{
  double result;

  if ((a3 & 1) != 0)

  else
    *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

uint64_t sub_100342F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  swift_retain(v6);
  sub_100342EE8(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  return a1;
}

uint64_t sub_100343064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(void **)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_100342EE8(v8, v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(void **)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  sub_100342F7C(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)(a2 + v14);
    sub_100011694(a1 + v14, &qword_10055EBC0);
    v17 = sub_10000B4C8(&qword_10055EBC0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  return a1;
}

uint64_t sub_100343174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100343224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v8;
  sub_100342F7C(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_100011694(a1 + v12, &qword_10055EBC0);
    v15 = sub_10000B4C8(&qword_10055EBC0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100343310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034331C);
}

uint64_t sub_10034331C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000B4C8(&qword_10055D390);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_10034339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003433A8);
}

uint64_t sub_1003433A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_10000B4C8(&qword_10055D390);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CitySelectionView(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055AEB8, (uint64_t)&nominal type descriptor for CitySelectionView);
}

void sub_100343434(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10043CDB8;
  v4[1] = &unk_10043CDD0;
  sub_1003434B0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_1003434B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055D410)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055D410);
  }
}

uint64_t sub_100343504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType();
  result = ObservableObject<>.objectWillChange.getter(ObjectType);
  *a1 = result;
  return result;
}

uint64_t sub_100343540(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048CE88, 1);
}

uint64_t sub_100343550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10034158C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100343558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055AF10;
  if (!qword_10055AF10)
  {
    v1 = sub_100011650(&qword_10055AF08);
    v2[0] = sub_100012324(&qword_10055AF18, &qword_10055AF20, (const char *)&protocol conformance descriptor for List<A, B>);
    v2[1] = sub_100012324(&qword_10055AF28, &qword_10055AF30, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055AF10);
  }
  return result;
}

void sub_1003435F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_10034239C(v1, v2);
}

uint64_t sub_10034363C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100343680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  sub_100342F7C(*(_QWORD *)(v0 + v4 + 16), *(void **)(v0 + v4 + 24), *(_BYTE *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10034373C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100343780@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8) + 80);
  return sub_100341884(a1, v2 + ((v5 + 16) & ~v5), a2);
}

double sub_1003437CC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10043CF20);
  v5 = swift_getKeyPath(&unk_10043CF48);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v10;
  v7 = v11;
  v8 = v12;
  v9 = v13;
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  return result;
}

uint64_t sub_100343858(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10043CF20);
  v10 = swift_getKeyPath(&unk_10043CF48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Published.subscript.getter(&v14, v8, KeyPath);
  swift_release(KeyPath);
  swift_release(v10);
  v17 = v14;
  v18 = v15;
  v19 = v16;
  v11 = swift_getKeyPath(&unk_10043CF20);
  v12 = swift_getKeyPath(&unk_10043CF48);
  *(_QWORD *)&v14 = v3;
  *((_QWORD *)&v14 + 1) = v2;
  *(_QWORD *)&v15 = v5;
  *((_QWORD *)&v15 + 1) = v4;
  *(_QWORD *)&v16 = v6;
  *((_QWORD *)&v16 + 1) = v7;
  swift_retain(v8);
  static Published.subscript.setter(&v14, v8, v11, v12);
  sub_10034771C((uint64_t)&v17);
  v20 = v17;
  sub_1000117BC((uint64_t)&v20);
  v14 = v18;
  return sub_1000117BC((uint64_t)&v14);
}

uint64_t sub_100343984(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = *a1;
  v7 = swift_allocObject(&unk_10051F138, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain(a2);
  swift_retain(a4);
  v8 = sub_10000B4C8(&qword_10055AE58);
  v9 = sub_10000B4C8(&qword_10055AF60);
  v10 = sub_100012324(&qword_10055AF70, &qword_10055AE58, (const char *)&protocol conformance descriptor for [A]);
  v11 = sub_10001254C(&qword_10055AF78, (uint64_t (*)(uint64_t))sub_100343B94, (uint64_t)&protocol conformance descriptor for NSObject);
  v12 = sub_100012324(&qword_10055AF58, &qword_10055AF60, (const char *)&protocol conformance descriptor for VStack<A>);
  return ForEach<>.init(_:id:content:)(&v14, a2, sub_100343B60, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100343AB4()
{
  uint64_t v0;

  return sub_100343984(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_100343AC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_10055AF50;
  if (!qword_10055AF50)
  {
    v1 = sub_100011650(&qword_10055AF48);
    v2 = sub_100012324(&qword_10055AF58, &qword_10055AF60, (const char *)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10055AF50);
  }
  return result;
}

uint64_t sub_100343B3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100343B60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

unint64_t sub_100343B94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055AF80;
  if (!qword_10055AF80)
  {
    v1 = objc_opt_self(MusicMapKitLocalSearchCompletionWrapper);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055AF80);
  }
  return result;
}

uint64_t sub_100343BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  sub_100342F7C(*(_QWORD *)(v0 + v4 + 16), *(void **)(v0 + v4 + 24), *(_BYTE *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;

  return swift_deallocObject(v0, v10, v3 | 7);
}

uint64_t sub_100343CA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100341F34(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100343CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055AF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100343D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055AF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100343D80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100343DA4(uint64_t a1)
{
  uint64_t v1;

  sub_1003427CC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100343DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100343DBC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100343DC4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100343E00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10055AFB4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000DC64;
  return sub_100342A30(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100343E80()
{
  _QWORD v1[2];

  v1[0] = sub_100011650(&qword_10055AEF8);
  v1[1] = sub_100012324(&qword_10055AF40, &qword_10055AEF8, (const char *)&protocol conformance descriptor for NavigationStack<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.searchable(text:placement:prompt:)>>, 1);
}

uint64_t Razzmatazz.shortName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v20;
  char v21[16];
  __n128 *v22;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;

  v1 = v0;
  type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v23.n128_u64[0] = 64;
  v23.n128_u64[1] = 0xE100000000000000;
  v22 = &v23;
  swift_bridgeObjectRetain_n(v9, 2);
  v10 = sub_100345040(0x7FFFFFFFFFFFFFFFLL, 1, sub_100287290, (uint64_t)v21, v8, v9);
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v10 + 2);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_1003455A8(v1, (uint64_t)v3);
LABEL_5:
    v16 = *((_QWORD *)v3 + 2);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v12 = (__n128 *)&v10[32 * v11];
  v20 = *v12;
  v14 = v12[1].n128_u64[0];
  v13 = v12[1].n128_u64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v20;
  v24 = v14;
  v25 = v13;
  static CharacterSet.whitespaces.getter(v20);
  v15 = sub_100345564();
  v16 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for Substring, v15);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1003455A8(v1, (uint64_t)v3);
  if (!v18)
    goto LABEL_5;
LABEL_6:
  sub_1003455EC((uint64_t)v3);
  return v16;
}

uint64_t sub_1003440A0(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;

  if (!a1)
  {
    sub_100346B00((uint64_t)v1, (uint64_t)&v62);
    sub_100346B00((uint64_t)&v62, (uint64_t)v53);
    v9 = v1[3];
    v54 = v1[2];
    v55 = v9;
    sub_100346B00((uint64_t)(v1 + 4), (uint64_t)&v61);
    sub_100346B00((uint64_t)&v61, (uint64_t)&v56);
    v10 = v1[7];
    v58 = v1[6];
    v59 = v10;
    v12 = v53[0];
    v11 = v53[1];
    sub_10005001C((uint64_t)&v62);
    swift_bridgeObjectRetain();
    sub_10005001C((uint64_t)&v61);
    if (v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1002F8194(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v15 = *((_QWORD *)v13 + 2);
      v14 = *((_QWORD *)v13 + 3);
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        v49 = sub_1002F8194((char *)(v14 > 1), v15 + 1, 1, v13);
        v16 = v15 + 1;
        v13 = v49;
      }
      *((_QWORD *)v13 + 2) = v16;
      v17 = &v13[16 * v15];
      *((_QWORD *)v17 + 4) = v12;
      *((_QWORD *)v17 + 5) = v11;
      v18 = v55;
      if (!v55)
        goto LABEL_21;
    }
    else
    {
      swift_bridgeObjectRetain();
      v13 = (char *)_swiftEmptyArrayStorage;
      v18 = v55;
      if (!v55)
      {
LABEL_21:
        v30 = v57;
        if (v57)
        {
          v31 = v56;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_1002F8194(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v33 = *((_QWORD *)v13 + 2);
          v32 = *((_QWORD *)v13 + 3);
          v34 = v33 + 1;
          if (v33 >= v32 >> 1)
          {
            v51 = sub_1002F8194((char *)(v32 > 1), v33 + 1, 1, v13);
            v34 = v33 + 1;
            v13 = v51;
          }
          *((_QWORD *)v13 + 2) = v34;
          v35 = &v13[16 * v33];
          *((_QWORD *)v35 + 4) = v31;
          *((_QWORD *)v35 + 5) = v30;
        }
        v36 = v59;
        if (v59)
        {
          v37 = v58;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_1002F8194(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v39 = *((_QWORD *)v13 + 2);
          v38 = *((_QWORD *)v13 + 3);
          v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            v52 = sub_1002F8194((char *)(v38 > 1), v39 + 1, 1, v13);
            v40 = v39 + 1;
            v13 = v52;
          }
          *((_QWORD *)v13 + 2) = v40;
          v41 = &v13[16 * v39];
          *((_QWORD *)v41 + 4) = v37;
          *((_QWORD *)v41 + 5) = v36;
        }
        v42 = sub_10000B4C8(&qword_100560520);
        swift_arrayDestroy(v53, 4, v42);
        v60 = v13;
        goto LABEL_38;
      }
    }
    v25 = v54;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_1002F8194(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v27 = *((_QWORD *)v13 + 2);
    v26 = *((_QWORD *)v13 + 3);
    v28 = v27 + 1;
    if (v27 >= v26 >> 1)
    {
      v50 = sub_1002F8194((char *)(v26 > 1), v27 + 1, 1, v13);
      v28 = v27 + 1;
      v13 = v50;
    }
    *((_QWORD *)v13 + 2) = v28;
    v29 = &v13[16 * v27];
    *((_QWORD *)v29 + 4) = v25;
    *((_QWORD *)v29 + 5) = v18;
    goto LABEL_21;
  }
  if (a1 != 1)
  {
    v19 = v1[5];
    if (v19)
    {
      v20 = v1[4];
      swift_bridgeObjectRetain();
      if (String.count.getter(v20, v19) == 2)
      {
        v21 = sub_10000B4C8(&qword_1005593D0);
        v22 = swift_allocObject(v21, 80, 7);
        v23 = *((_OWORD *)v1 + 1);
        *(_OWORD *)(v22 + 16) = xmmword_100427490;
        *(_OWORD *)(v22 + 32) = v23;
        *(_QWORD *)(v22 + 48) = v20;
        *(_QWORD *)(v22 + 56) = v19;
        v61 = *((_OWORD *)v1 + 3);
        v62 = v23;
        *(_OWORD *)(v22 + 64) = v61;
        v60 = (_OWORD *)v22;
        sub_10005001C((uint64_t)&v62);
        sub_10005001C((uint64_t)&v61);
        v7 = sub_10000B4C8(&qword_10055A048);
        v8 = sub_10031E424();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    v43 = sub_10000B4C8(&qword_1005593D0);
    v44 = (_OWORD *)swift_allocObject(v43, 64, 7);
    v45 = *((_OWORD *)v1 + 1);
    v44[1] = xmmword_100424BA0;
    v44[2] = v45;
    v61 = *((_OWORD *)v1 + 3);
    v62 = v45;
    v44[3] = v61;
    v60 = v44;
    sub_10005001C((uint64_t)&v62);
    sub_10005001C((uint64_t)&v61);
LABEL_38:
    v46 = sub_10000B4C8(&qword_10055A048);
    v47 = sub_10031E424();
    v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v46, v47);
    goto LABEL_39;
  }
  v2 = v1[5];
  if (v2)
  {
    v3 = v1[4];
    swift_bridgeObjectRetain();
    if (String.count.getter(v3, v2) == 2)
    {
      v4 = sub_10000B4C8(&qword_1005593D0);
      v5 = swift_allocObject(v4, 64, 7);
      v62 = *((_OWORD *)v1 + 1);
      v6 = v62;
      *(_OWORD *)(v5 + 16) = xmmword_100424BA0;
      *(_OWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 48) = v3;
      *(_QWORD *)(v5 + 56) = v2;
      *(_QWORD *)&v61 = v5;
      sub_10005001C((uint64_t)&v62);
      v7 = sub_10000B4C8(&qword_10055A048);
      v8 = sub_10031E424();
LABEL_14:
      v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v7, v8);
LABEL_39:
      swift_bridgeObjectRelease();
      return v24;
    }
    swift_bridgeObjectRelease();
  }
  v24 = v1[2];
  swift_bridgeObjectRetain();
  return v24;
}

uint64_t Razzmatazz.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Razzmatazz.performingArtist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 28);
  v4 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Razzmatazz(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055B040, (uint64_t)&nominal type descriptor for Razzmatazz);
}

uint64_t sub_100344618(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = v2[1];
  if (v4)
  {
    v5 = *v2;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v2[5];
  if (v8)
  {
    v9 = v2[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v11 = v2[6];
  v10 = v2[7];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v11, v10);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_100344704()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100344734 + 4 * byte_10043CF68[*v0]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_100344734()
{
  return 2037672291;
}

uint64_t sub_100344744()
{
  return 0x6E6F69676572;
}

uint64_t sub_100344758()
{
  return 0x7972746E756F63;
}

uint64_t sub_10034476C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100346C10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100344790(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100347088();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003447B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100347088();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1003447E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_100345628((uint64_t)v13);
  sub_100344618((uint64_t)v12);
  sub_10034567C(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  type metadata accessor for Razzmatazz.Venue(0);
  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_10001254C(&qword_10055AFD8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

double sub_1003448F8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_100346DB0(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

Swift::Int sub_100344938()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_100344618((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100344978()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_100344618((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_1003449B0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1003456E4((uint64_t *)v7, v8) & 1;
}

uint64_t sub_1003449FC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = *((_OWORD *)v2 + 3);
  v14[0] = *((_OWORD *)v2 + 2);
  v14[1] = v8;
  v9 = *((_OWORD *)v2 + 5);
  v14[2] = *((_OWORD *)v2 + 4);
  v14[3] = v9;
  sub_100345628((uint64_t)v14);
  sub_100344618(a1);
  sub_10034567C(v14);
  v10 = (id)v2[12];
  NSObject.hash(into:)(a1);

  v11 = type metadata accessor for TimeZone(0);
  v12 = sub_10001254C(&qword_10055AFD8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
}

Swift::Int sub_100344B08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_100345628((uint64_t)v13);
  sub_100344618((uint64_t)v12);
  sub_10034567C(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_10001254C(&qword_10055AFD8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

uint64_t Razzmatazz.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for Razzmatazz(0);
  v9 = type metadata accessor for Date(0);
  v10 = sub_10001254C(&qword_10055AFC8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v9, v10);
  v11 = type metadata accessor for Artist(0);
  v12 = sub_10001254C(&qword_10055AFD0, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  v13 = (char *)v2 + *(int *)(v8 + 32);
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease();
  v18 = *((_OWORD *)v13 + 3);
  v24[0] = *((_OWORD *)v13 + 2);
  v24[1] = v18;
  v19 = *((_OWORD *)v13 + 5);
  v24[2] = *((_OWORD *)v13 + 4);
  v24[3] = v19;
  sub_100345628((uint64_t)v24);
  sub_100344618(a1);
  sub_10034567C(v24);
  v20 = *((id *)v13 + 12);
  NSObject.hash(into:)(a1);

  type metadata accessor for Razzmatazz.Venue(0);
  v21 = type metadata accessor for TimeZone(0);
  v22 = sub_10001254C(&qword_10055AFD8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v21, v22);
}

Swift::Int Razzmatazz.hashValue.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[9];
  _OWORD v23[4];

  v1 = v0;
  Hasher.init(_seed:)(v22);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v4, v5);
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = type metadata accessor for Date(0);
  v8 = sub_10001254C(&qword_10055AFC8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v22, v7, v8);
  v9 = type metadata accessor for Artist(0);
  v10 = sub_10001254C(&qword_10055AFD0, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(v22, v9, v10);
  v11 = (char *)v1 + *(int *)(v6 + 32);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v12, v13);
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)v11 + 2);
  v15 = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_OWORD *)v11 + 3);
  v23[0] = *((_OWORD *)v11 + 2);
  v23[1] = v16;
  v17 = *((_OWORD *)v11 + 5);
  v23[2] = *((_OWORD *)v11 + 4);
  v23[3] = v17;
  sub_100345628((uint64_t)v23);
  sub_100344618((uint64_t)v22);
  sub_10034567C(v23);
  v18 = *((id *)v11 + 12);
  NSObject.hash(into:)(v22);

  type metadata accessor for Razzmatazz.Venue(0);
  v19 = type metadata accessor for TimeZone(0);
  v20 = sub_10001254C(&qword_10055AFD8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v22, v19, v20);
  return Hasher._finalize()();
}

Swift::Int sub_100345008()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Razzmatazz.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

char *sub_100345040(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v11 = a5;
  v14 = swift_allocObject(&unk_10051F260, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v47 = swift_allocObject(&unk_10051F288, 24, 7);
  *(_QWORD *)(v47 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v31 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v31 = 11;
    sub_100345458(v31 | (v15 << 16), v47, a2 & 1, v14, v11, a6);
    swift_bridgeObjectRelease();
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release(v14);
    v32 = v47;
    goto LABEL_40;
  }
  v42 = a1;
  v43 = v14;
  v17 = 7;
  if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v41 = v17 | (v16 << 16);
  v48 = 4 * v16;
  v10 = (char *)_swiftEmptyArrayStorage;
  v9 = 15;
  v8 = 15;
  v18 = 15;
  while (1)
  {
    v50[0] = String.subscript.getter(v9, v11, a6);
    v50[1] = v19;
    v20 = a3(v50);
    if (v7)
    {
      swift_release(v43);
      swift_release(v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    v6 = v20;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      break;
    v9 = String.index(after:)(v9, v11, a6);
LABEL_11:
    if (v48 == v9 >> 14)
      goto LABEL_31;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = String.index(after:)(v9, v11, a6);
    *(_QWORD *)(v47 + 16) = v9;
    v8 = v9;
    v18 = v9;
    goto LABEL_11;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_43;
  }
  v21 = String.subscript.getter(v8, v9, v11, a6);
  v44 = v22;
  v45 = v21;
  v24 = v23;
  v26 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_1002F8990(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v28 = *((_QWORD *)v10 + 2);
  v27 = *((_QWORD *)v10 + 3);
  v6 = v28 + 1;
  if (v28 >= v27 >> 1)
    v10 = sub_1002F8990((char *)(v27 > 1), v28 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v29 = &v10[32 * v28];
  *((_QWORD *)v29 + 4) = v45;
  *((_QWORD *)v29 + 5) = v24;
  *((_QWORD *)v29 + 6) = v26;
  *((_QWORD *)v29 + 7) = v44;
  *(_QWORD *)(v43 + 16) = v10;
  v30 = String.index(after:)(v9, v11, a6);
  v9 = v30;
  *(_QWORD *)(v47 + 16) = v30;
  if (*((_QWORD *)v10 + 2) != v42)
  {
    v8 = v30;
    v18 = v30;
    goto LABEL_11;
  }
  v18 = v30;
  v8 = v30;
LABEL_31:
  if (v48 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v33 = v43;
    goto LABEL_39;
  }
  if (v48 >= v18 >> 14)
  {
    v6 = String.subscript.getter(v18, v41, v11, a6);
    v8 = v34;
    v9 = v35;
    v11 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v10 = sub_1002F8990(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_36:
  v38 = *((_QWORD *)v10 + 2);
  v37 = *((_QWORD *)v10 + 3);
  if (v38 >= v37 >> 1)
    v10 = sub_1002F8990((char *)(v37 > 1), v38 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v38 + 1;
  v39 = &v10[32 * v38];
  *((_QWORD *)v39 + 4) = v6;
  *((_QWORD *)v39 + 5) = v8;
  *((_QWORD *)v39 + 6) = v9;
  *((_QWORD *)v39 + 7) = v11;
  v33 = v43;
  *(_QWORD *)(v43 + 16) = v10;
LABEL_39:
  swift_bridgeObjectRetain();
  swift_release(v33);
  v32 = v47;
LABEL_40:
  swift_release(v32);
  return v10;
}

uint64_t sub_100345458(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;

  v13 = *(_QWORD *)(a2 + 16);
  v14 = (v13 >> 14 == a1 >> 14) & a3;
  if (v14 == 1)
    return v14 ^ 1u;
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = a4;
  v7 = String.subscript.getter(v13, a1, a5, a6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = *(char **)(v6 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(v6 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v11 = sub_1002F8990(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  v20 = *((_QWORD *)v11 + 2);
  v19 = *((_QWORD *)v11 + 3);
  if (v20 >= v19 >> 1)
  {
    v11 = sub_1002F8990((char *)(v19 > 1), v20 + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v20 + 1;
  v21 = &v11[32 * v20];
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v8;
  *((_QWORD *)v21 + 6) = v9;
  *((_QWORD *)v21 + 7) = v10;
  return v14 ^ 1u;
}

unint64_t sub_100345564()
{
  unint64_t result;

  result = qword_10055AFC0;
  if (!qword_10055AFC0)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_10055AFC0);
  }
  return result;
}

uint64_t sub_1003455A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003455EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100345628(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_10034567C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t type metadata accessor for Razzmatazz.Venue(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055B0E0, (uint64_t)&nominal type descriptor for Razzmatazz.Venue);
}

uint64_t sub_1003456E4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *a1 == *a2 && v4 == v5;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, *a2, v5, 0), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    if (v10 != v12 || v11 != v13)
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
    v16 = a1[5];
    v17 = a2[5];
    if (v16)
    {
      if (v17)
      {
        v18 = a1[4];
        v19 = a2[4];
        if (v18 != v19 || v16 != v17)
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0);
          result = 0;
          if ((v20 & 1) == 0)
            return result;
        }
LABEL_24:
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
    else if (!v17)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1003457E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v19[4];
  _OWORD v20[4];

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0) & 1) == 0)
    return 0;
  v8 = a1[2];
  v9 = a1[3];
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = v8 == v10 && v9 == v11;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) == 0)
    return 0;
  v13 = *((_OWORD *)a1 + 3);
  v19[0] = *((_OWORD *)a1 + 2);
  v19[1] = v13;
  v14 = *((_OWORD *)a1 + 5);
  v19[2] = *((_OWORD *)a1 + 4);
  v19[3] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v20[0] = *(_OWORD *)(a2 + 32);
  v20[1] = v15;
  v16 = *(_OWORD *)(a2 + 80);
  v20[2] = *(_OWORD *)(a2 + 64);
  v20[3] = v16;
  if ((sub_1003456E4((uint64_t *)v19, v20) & 1) == 0)
    return 0;
  sub_100346B48();
  if ((static NSObject.== infix(_:_:)(a1[12], *(_QWORD *)(a2 + 96)) & 1) == 0)
    return 0;
  v17 = type metadata accessor for Razzmatazz.Venue(0);
  return static TimeZone.== infix(_:_:)((char *)a1 + *(int *)(v17 + 32), a2 + *(int *)(v17 + 32));
}

uint64_t _s11MusicCoreUI10RazzmatazzV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  int *v13;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if ((v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0) & 1) != 0)
    && ((v8 = a1[2], v9 = a1[3], v10 = a2[2], v11 = a2[3], v8 == v10) ? (v12 = v9 == v11) : (v12 = 0),
        (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) != 0)
     && (v13 = (int *)type metadata accessor for Razzmatazz(0),
         (static Date.== infix(_:_:)((char *)a1 + v13[6], (char *)a2 + v13[6]) & 1) != 0)
     && (static Artist.== infix(_:_:)((char *)a1 + v13[7], (char *)a2 + v13[7]) & 1) != 0))
  {
    return sub_1003457E4((uint64_t *)((char *)a1 + v13[8]), (uint64_t)a2 + v13[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100345990()
{
  return sub_10001254C(&qword_10055AFE0, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  char *v35;
  void *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v33);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = *(uint64_t *)((char *)a2 + v18);
    v22 = v20[1];
    *v19 = v21;
    v19[1] = v22;
    v23 = v20[3];
    v19[2] = v20[2];
    v19[3] = v23;
    v24 = v20[5];
    v19[4] = v20[4];
    v19[5] = v24;
    v25 = v20[7];
    v19[6] = v20[6];
    v19[7] = v25;
    v26 = v20[9];
    v19[8] = v20[8];
    v19[9] = v26;
    v27 = v20[11];
    v19[10] = v20[10];
    v19[11] = v27;
    v36 = (void *)v20[12];
    v19[12] = v36;
    v28 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v35 = (char *)v19 + v28;
    v29 = (char *)v20 + v28;
    v30 = type metadata accessor for TimeZone(0);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v36;
    v31(v35, v29, v30);
  }
  return v4;
}

uint64_t destroy for Razzmatazz(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v10 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  char *v33;
  void *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 16);
  v22 = v19[3];
  v18[2] = v21;
  v18[3] = v22;
  v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  v24 = v19[7];
  v18[6] = v19[6];
  v18[7] = v24;
  v25 = v19[9];
  v18[8] = v19[8];
  v18[9] = v25;
  v26 = v19[11];
  v18[10] = v19[10];
  v18[11] = v26;
  v34 = (void *)v19[12];
  v18[12] = v34;
  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v33 = (char *)v18 + v27;
  v28 = (char *)v19 + v27;
  v29 = type metadata accessor for TimeZone(0);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v34;
  v30(v33, v28, v29);
  return a1;
}

_QWORD *assignWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *(_QWORD *)((char *)a2 + v14);
  v15[1] = *(_QWORD *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (void *)v16[12];
  v18 = (void *)v15[12];
  v15[12] = v17;
  v19 = v17;

  v20 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v21 = (char *)v15 + v20;
  v22 = (char *)v16 + v20;
  v23 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for Razzmatazz(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  v20 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v20;
  *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_QWORD *assignWithTake for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  swift_bridgeObjectRelease();
  v21 = v18[5];
  v17[4] = v18[4];
  v17[5] = v21;
  swift_bridgeObjectRelease();
  v22 = v18[7];
  v17[6] = v18[6];
  v17[7] = v22;
  swift_bridgeObjectRelease();
  v23 = v18[9];
  v17[8] = v18[8];
  v17[9] = v23;
  swift_bridgeObjectRelease();
  v24 = v18[11];
  v17[10] = v18[10];
  v17[11] = v24;
  swift_bridgeObjectRelease();
  v25 = (void *)v17[12];
  v17[12] = v18[12];

  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v27 = (char *)v17 + v26;
  v28 = (char *)v18 + v26;
  v29 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100346228);
}

uint64_t sub_100346228(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003462F8);
}

uint64_t sub_1003462F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1003463B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_10043D000;
  v6[1] = &unk_10043D000;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Artist(319);
    if (v4 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Razzmatazz.Venue(319);
      if (v5 <= 0x3F)
      {
        v6[4] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100346464(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  char *v18;
  char *v19;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v16);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    v11 = (void *)a2[12];
    v12 = *(int *)(a3 + 32);
    v18 = (char *)a2 + v12;
    v19 = (char *)a1 + v12;
    a1[12] = (uint64_t)v11;
    v13 = type metadata accessor for TimeZone(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v11;
    v14(v19, v18, v13);
  }
  return v3;
}

uint64_t sub_100346574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1003465EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  char *v16;
  char *v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = (void *)a2[12];
  v11 = *(int *)(a3 + 32);
  v16 = (char *)a2 + v11;
  v17 = (char *)a1 + v11;
  a1[12] = v10;
  v12 = type metadata accessor for TimeZone(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v10;
  v13(v17, v16, v12);
  return a1;
}

_QWORD *sub_1003466D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[6] = a2[6];
  v9 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  a1[8] = a2[8];
  v10 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  a1[10] = a2[10];
  v11 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v12 = (void *)a2[12];
  v13 = (void *)a1[12];
  a1[12] = v12;
  v14 = v12;

  v15 = *(int *)(a3 + 32);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_100346800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(int *)(a3 + 32);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

_QWORD *sub_100346874(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[11];
  v17 = a1[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = (void *)a1[12];
  a1[12] = a2[12];

  v19 = *(int *)(a3 + 32);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_100346940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034694C);
}

uint64_t sub_10034694C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1003469C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003469D4);
}

uint64_t sub_1003469D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100346A48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10043D000;
  v4[1] = &unk_10043D000;
  v4[2] = "@";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100346AD4()
{
  return sub_10001254C(&qword_10055B128, type metadata accessor for Razzmatazz.Venue, (uint64_t)&unk_10043D038);
}

uint64_t sub_100346B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100560520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100346B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100559510;
  if (!qword_100559510)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100559510);
  }
  return result;
}

uint64_t sub_100346B84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100346BA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address()
{
  return &type metadata for Razzmatazz.Venue.Address;
}

unint64_t sub_100346BCC()
{
  unint64_t result;

  result = qword_10055B130;
  if (!qword_10055B130)
  {
    result = swift_getWitnessTable(byte_10043D0E0, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_10055B130);
  }
  return result;
}

uint64_t sub_100346C10(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73736572646461, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 2037672291 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(2037672291, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69676572, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972746E756F63, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100346DB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = sub_10000B4C8(&qword_10055B138);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_100347088();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Razzmatazz.Venue.Address.CodingKeys, &type metadata for Razzmatazz.Venue.Address.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  v35 = 0;
  v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v35, v5);
  v14 = v13;
  v30 = v12;
  v34 = 1;
  swift_bridgeObjectRetain();
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v5);
  v31 = v16;
  v29 = v15;
  v33 = 2;
  swift_bridgeObjectRetain();
  v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v33, v5);
  v28 = v17;
  v32 = 3;
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  v23 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100011758(a1);
  swift_bridgeObjectRelease();
  v24 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v30;
  a2[1] = v14;
  a2[2] = v29;
  a2[3] = v23;
  a2[4] = v27;
  a2[5] = v24;
  a2[6] = v22;
  a2[7] = v20;
  return result;
}

unint64_t sub_100347088()
{
  unint64_t result;

  result = qword_10055B140;
  if (!qword_10055B140)
  {
    result = swift_getWitnessTable(asc_10043D234, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B140);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Razzmatazz.Venue.Address.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100347118 + 4 * byte_10043CF71[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10034714C + 4 * byte_10043CF6C[v4]))();
}

uint64_t sub_10034714C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100347154(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10034715CLL);
  return result;
}

uint64_t sub_100347168(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100347170);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100347174(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034717C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address.CodingKeys()
{
  return &type metadata for Razzmatazz.Venue.Address.CodingKeys;
}

unint64_t sub_10034719C()
{
  unint64_t result;

  result = qword_10055B148;
  if (!qword_10055B148)
  {
    result = swift_getWitnessTable(byte_10043D20C, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B148);
  }
  return result;
}

unint64_t sub_1003471E4()
{
  unint64_t result;

  result = qword_10055B150;
  if (!qword_10055B150)
  {
    result = swift_getWitnessTable(byte_10043D17C, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B150);
  }
  return result;
}

unint64_t sub_10034722C()
{
  unint64_t result;

  result = qword_10055B158;
  if (!qword_10055B158)
  {
    result = swift_getWitnessTable(byte_10043D1A4, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B158);
  }
  return result;
}

uint64_t sub_100347270(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t);
  uint64_t v50;

  v49 = a1;
  sub_10000B4C8(&qword_10055B320);
  __chkstk_darwin();
  v48 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v45 = v7;
  __chkstk_darwin();
  v40 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v39 = (uint64_t)&v38 - v9;
  v47 = sub_10000B4C8(&qword_10055B328);
  __chkstk_darwin();
  v46 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v38 - v11);
  v13 = *(_QWORD *)(a3 + 64);
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v50 = a3;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v41 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    v24 = *(_QWORD *)(v50 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v20);
    v26 = *v25;
    v27 = v25[1];
    v28 = type metadata accessor for ShazamEvent(0);
    sub_10000D964(v24 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v20, (uint64_t)v12 + *(int *)(v47 + 48), type metadata accessor for ShazamEvent);
    *v12 = v26;
    v12[1] = v27;
    v29 = v46;
    sub_100011530((uint64_t)v12, v46, &qword_10055B328);
    swift_bridgeObjectRetain();
    v30 = (uint64_t)v48;
    v49(v29);
    if (v3)
    {
      sub_100011694(v29, &qword_10055B328);
      v37 = v41;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release(v50);
      return (uint64_t)v37;
    }
    sub_100011694(v29, &qword_10055B328);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v30, 1, v44) == 1)
    {
      result = sub_100011694(v30, &qword_10055B320);
    }
    else
    {
      v31 = v30;
      v32 = v39;
      sub_10000DB44(v31, v39, type metadata accessor for Razzmatazz);
      sub_10000DB44(v32, v40, type metadata accessor for Razzmatazz);
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
        v41 = (char *)sub_1002F897C(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      v34 = *((_QWORD *)v41 + 2);
      v33 = *((_QWORD *)v41 + 3);
      if (v34 >= v33 >> 1)
        v41 = (char *)sub_1002F897C(v33 > 1, v34 + 1, 1, v41);
      v35 = v40;
      v36 = v41;
      *((_QWORD *)v41 + 2) = v34 + 1;
      result = sub_10000DB44(v35, (uint64_t)&v36[((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v34], type metadata accessor for Razzmatazz);
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v43)
  {
LABEL_32:
    v37 = v41;
    goto LABEL_33;
  }
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1003476AC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10043D448);
  v2 = swift_getKeyPath(&unk_10043D470);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_10034771C(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  KeyPath = swift_getKeyPath(&unk_10043D3E0);
  v4 = swift_getKeyPath(&unk_10043D408);
  static Published.subscript.getter(&v15, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v4);
  v6 = v17;
  v5 = v18;
  v7 = v19;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = v15 == *(_QWORD *)a1 && v16 == v8;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *(_QWORD *)a1, v8, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  if (v6 != v10 || v5 != v11)
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v5, v10, v11, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v13 = swift_getKeyPath(&unk_10043D3E0);
    v14 = swift_getKeyPath(&unk_10043D408);
    static Published.subscript.getter(&v15, v1, v13);
    swift_release(v13);
    swift_release(v14);
    sub_10034CAC4((uint64_t)&v15);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(double *)&v7 != *(double *)(a1 + 32) || *((double *)&v7 + 1) != *(double *)(a1 + 40))
    goto LABEL_14;
}

double sub_1003478A8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  KeyPath = swift_getKeyPath(&unk_10043D3E0);
  v4 = swift_getKeyPath(&unk_10043D408);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)&v9;
  v6 = v10;
  v7 = v11;
  v8 = v12;
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  return result;
}

uint64_t sub_100347930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[48];
  _OWORD v16[3];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v1 = sub_10000B4C8(&qword_10055B268);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  *(_QWORD *)&v20 = _swiftEmptyArrayStorage;
  v6 = sub_10000B4C8(&qword_1005592C0);
  Published.init(initialValue:)(&v20, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location, &v17, 33, 0);
  strcpy((char *)&v20, "Cupertino, CA");
  HIWORD(v20) = -4864;
  strcpy((char *)&v21, "United States");
  HIWORD(v21) = -4864;
  v22 = xmmword_1004388E0;
  Published.init(initialValue:)(&v20, &type metadata for RazzmatazzController.Location);
  swift_endAccess(&v17);
  sub_10034CE78((uint64_t)v15);
  sub_100011530((uint64_t)v15, (uint64_t)v16, &qword_10055B240);
  if (*((_QWORD *)&v16[0] + 1))
  {
    v17 = v16[0];
    v18 = v16[1];
    v19 = v16[2];
    KeyPath = swift_getKeyPath(&unk_10043D3E0);
    v8 = swift_getKeyPath(&unk_10043D408);
    static Published.subscript.getter(&v12, v0, KeyPath);
    swift_release(KeyPath);
    swift_release(v8);
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v9 = swift_getKeyPath(&unk_10043D3E0);
    v10 = swift_getKeyPath(&unk_10043D408);
    v12 = v17;
    v13 = v18;
    v14 = v19;
    swift_retain(v0);
    static Published.subscript.setter(&v12, v0, v9, v10);
    sub_10034771C((uint64_t)&v20);
    v23 = v20;
    sub_1000117BC((uint64_t)&v23);
    v12 = v21;
    sub_1000117BC((uint64_t)&v12);
  }
  return v0;
}

uint64_t sub_100347B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[4] = a4;
  v7 = type metadata accessor for MainActor(0);
  v5[5] = v7;
  v5[6] = static MainActor.shared.getter(v7);
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_10055B280 + dword_10055B280);
  v8 = (_QWORD *)swift_task_alloc(unk_10055B284);
  v5[7] = v8;
  *v8 = v5;
  v8[1] = sub_100347BF8;
  return v10(a5);
}

uint64_t sub_100347BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100347C70, v4, v5);
}

uint64_t sub_100347C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 16) = v1;
  KeyPath = swift_getKeyPath(&unk_10043D428);
  v4 = sub_10000B4C8(&qword_1005592C0);
  v5 = sub_10034D8B4();
  v6 = sub_10001254C(&qword_10055AD30, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_10034B1F8, 0, v4, v5, v6);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v8 = swift_getKeyPath(&unk_10043D448);
  v9 = swift_getKeyPath(&unk_10043D470);
  *(_QWORD *)(v0 + 24) = v7;
  swift_retain(v2);
  static Published.subscript.setter(v0 + 24, v2, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100347D7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  if ((v2[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v2[4];
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((v2[5] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2[5];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
}

uint64_t sub_100347E0C(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_10000B4C8(&qword_10055B260);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_10034D870();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = *((_QWORD *)v3 + 1);
  v23 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(*(_QWORD *)&v12, v13, &v23, v5);
  if (!v2)
  {
    v14 = *((_QWORD *)v3 + 2);
    v15 = *((_QWORD *)v3 + 3);
    v22 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v22, v5);
    v16 = v3[4];
    v21 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v21, v5, v16);
    v17 = v3[5];
    v20 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v20, v5, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100347F70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100347F9C + 4 * byte_10043D290[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_100347F9C()
{
  return 0x656C746974627573;
}

uint64_t sub_100347FB4()
{
  return 0x656475746974616CLL;
}

uint64_t sub_100347FCC()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_100347FE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10034D470(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10034800C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10034D870();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100348034(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10034D870();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10034805C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_100347D7C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10034809C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_100347D7C((uint64_t)v1);
  return Hasher._finalize()();
}

double sub_1003480D4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_10034D62C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100348114(_QWORD *a1)
{
  return sub_100347E0C(a1);
}

BOOL sub_100348128(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_10034BBE0((double *)v7, (uint64_t)v8);
}

uint64_t sub_10034816C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  v2 = sub_10000B4C8(&qword_10055B268);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location;
  v4 = sub_10000B4C8(&qword_10055B270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003481EC()
{
  return type metadata accessor for RazzmatazzController(0);
}

uint64_t type metadata accessor for RazzmatazzController(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055B198, (uint64_t)&nominal type descriptor for RazzmatazzController);
}

void sub_100348208(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_100348290(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003482E8();
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_100348290(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055B1A8)
  {
    v2 = sub_100011650(&qword_1005592C0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055B1A8);
  }
}

void sub_1003482E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10055B1B0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for RazzmatazzController.Location);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10055B1B0);
  }
}

uint64_t initializeWithCopy for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzController.Location(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location()
{
  return &type metadata for RazzmatazzController.Location;
}

unint64_t sub_100348460()
{
  unint64_t result;

  result = qword_10055B238;
  if (!qword_10055B238)
  {
    result = swift_getWitnessTable(a9_1, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_10055B238);
  }
  return result;
}

uint64_t sub_1003484AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055B328);
  v14 = *(int *)(__chkstk_darwin() + 48);
  v15 = (uint64_t *)((char *)&v28 + v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D964(a1 + v14, (uint64_t)v15, type metadata accessor for ShazamEvent);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain();
  sub_100348790(v15, a2, (uint64_t)v12, a4);
  if (v4)
  {
    if (qword_100557F08 != -1)
      swift_once(&qword_100557F08, sub_10034B0A4);
    v16 = type metadata accessor for Logger(0);
    sub_10000D78C(v16, (uint64_t)qword_100563468);
    swift_errorRetain(v4);
    v17 = swift_errorRetain(v4);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v30 = v21;
      *(_DWORD *)v20 = 136315138;
      v29 = v4;
      swift_errorRetain(v4);
      v22 = sub_10000B4C8(&qword_1005593C0);
      v23 = (char *)String.init<A>(describing:)(&v29, v22);
      *(_QWORD *)(v20 + 4) = sub_1002E9B3C(v23, v24, &v30);
      swift_bridgeObjectRelease();
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not initialize Razzmatazz with error=%s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      swift_errorRelease(v4);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);

    }
    v27 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a4, 1, 1, v27);
  }
  else
  {
    v25 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a4, 0, 1, v25);
  }
}

uint64_t sub_100348790@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  int *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v5 = v4;
  v82 = a3;
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v80 = *(_QWORD *)(v13 - 8);
  v81 = v13;
  __chkstk_darwin();
  v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShazamEvent(0);
  v17 = *(_QWORD **)((char *)a1 + *(int *)(v16 + 24) + 8);
  if (v17[2] && *(_QWORD *)(a2 + 16))
  {
    v18 = v16;
    v79 = a4;
    v19 = v17[4];
    v20 = v17[5];
    swift_bridgeObjectRetain();
    v21 = sub_10013B57C(v19, v20);
    if ((v22 & 1) != 0)
    {
      v23 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 104 * v21);
      v24 = *v23;
      v75 = v12;
      v25 = v23[2];
      v74 = v23[1];
      v70 = v25;
      v71 = v24;
      v77 = v10;
      v26 = v23[4];
      v76 = v23[3];
      v63 = v5;
      v27 = v23[5];
      v68 = v23[6];
      v69 = v26;
      v58[0] = v23[7];
      v29 = v23[8];
      v28 = v23[9];
      v66 = v23[10];
      v67 = v29;
      v78 = v9;
      v30 = (void *)v23[12];
      v61 = v23[11];
      v62 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v58[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = *a1;
      v33 = a1[1];
      v34 = (char *)a1 + *(int *)(v18 + 20);
      v35 = *((_QWORD *)v34 + 1);
      v72 = *(_QWORD *)v34;
      v73 = v32;
      v64 = v35;
      v65 = v33;
      v36 = type metadata accessor for ShazamEvent.Attributes(0);
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v15, &v34[*(int *)(v36 + 20)], v81);
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v75, &v34[*(int *)(v36 + 24)], v78);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58[1] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = v15;
      v38 = v62;
      swift_bridgeObjectRetain();
      v39 = v61;
      swift_bridgeObjectRetain();
      v40 = v59;
      sub_10000E750((uint64_t)a1, type metadata accessor for ShazamEvent);
      v59 = (int *)type metadata accessor for Razzmatazz(0);
      v41 = v79;
      v42 = &v79[v59[8]];
      *(_QWORD *)v42 = v71;
      *((_QWORD *)v42 + 1) = v37;
      v43 = v76;
      *((_QWORD *)v42 + 2) = v70;
      *((_QWORD *)v42 + 3) = v43;
      *((_QWORD *)v42 + 4) = v69;
      *((_QWORD *)v42 + 5) = v27;
      *((_QWORD *)v42 + 6) = v68;
      *((_QWORD *)v42 + 7) = v31;
      *((_QWORD *)v42 + 8) = v67;
      *((_QWORD *)v42 + 9) = v38;
      *((_QWORD *)v42 + 10) = v66;
      *((_QWORD *)v42 + 11) = v39;
      *((_QWORD *)v42 + 12) = v40;
      v44 = type metadata accessor for Razzmatazz.Venue(0);
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v42[*(int *)(v44 + 32)], v75, v78);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v65;
      *(_QWORD *)v41 = v73;
      *((_QWORD *)v41 + 1) = v45;
      v46 = v64;
      *((_QWORD *)v41 + 2) = v72;
      *((_QWORD *)v41 + 3) = v46;
      v47 = v59;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v41[v59[6]], v60, v81);
      v48 = &v41[v47[7]];
      v49 = type metadata accessor for Artist(0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v48, v82, v49);
    }
    swift_bridgeObjectRelease();
  }
  v51 = type metadata accessor for RazzmatazzAPI.CustomError(0);
  v52 = sub_10001254C(&qword_10055B330, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_10043D654);
  swift_allocError(v51, v52, 0, 0);
  v54 = v53;
  v55 = *(int *)(sub_10000B4C8(&qword_10055B338) + 48);
  sub_10000D964((uint64_t)a1, v54, type metadata accessor for ShazamEvent);
  *(_QWORD *)(v54 + v55) = a2;
  v56 = swift_storeEnumTagMultiPayload(v54, v51, 1);
  swift_willThrow(v56);
  v57 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v82, v57);
  return sub_10000E750((uint64_t)a1, type metadata accessor for ShazamEvent);
}

uint64_t sub_100348BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_10055B2F8 + dword_10055B2F8);
  v4 = (_QWORD *)swift_task_alloc(unk_10055B2FC);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100348C58;
  return v6(a2);
}

uint64_t sub_100348C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100348CB4, 0, 0);
}

uint64_t sub_100348CB4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100348CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  v3[34] = a3;
  return swift_task_switch(sub_100348CEC, 0, 0);
}

uint64_t sub_100348CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v9 + 296);
  *(_QWORD *)(v9 + 280) = sub_10034B264(0, *(_QWORD *)(*(_QWORD *)(v9 + 312) + 16));
  v10 = swift_task_alloc(48);
  *(_QWORD *)(v9 + 320) = v10;
  *(_QWORD *)(v10 + 16) = v9 + 272;
  *(_OWORD *)(v10 + 24) = v14;
  *(_QWORD *)(v10 + 40) = v9 + 280;
  v11 = sub_10000B4C8(&qword_10055B2B8);
  *(_QWORD *)(v9 + 328) = v11;
  if (!sub_10041ADEC(2, 18, 0, 0))
    return swift_task_switch(sub_100348E6C, 0, 0);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v9 + 336) = v12;
  *v12 = v9;
  v12[1] = sub_100348E00;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v12, v11, (char *)&type metadata for () + 8, 0, 0, &unk_10055B2B0, v10, v11, a9);
}

uint64_t sub_100348E00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 336));
  if (v0)
  {
    *(_QWORD *)(v2 + 376) = v0;
    v3 = sub_100067C6C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 320));
    v3 = sub_1003490D0;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100348E6C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[41]);
  v0[36] = v0 + 2;
  v1 = v0[34];
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10055B2C0
                                                                                    + dword_10055B2C0);
  v2 = (_QWORD *)swift_task_alloc(unk_10055B2C4);
  v0[43] = v2;
  *v2 = v0;
  v2[1] = sub_100348EFC;
  return v4((uint64_t)v4, (uint64_t)(v0 + 36), v1, v0[37], v0[38], (uint64_t)(v0 + 35));
}

uint64_t sub_100348EFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 344);
  v3 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100349040, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 360) = v5;
  v6 = sub_10000B4C8(&qword_10055B2C8);
  *v5 = v3;
  v5[1] = sub_100348FA8;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_100348FA8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_100348FFC, 0, 0);
}

uint64_t sub_100348FFC()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  return swift_task_switch(sub_1003490D0, 0, 0);
}

uint64_t sub_100349040()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_1005593C0);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 368) = v1;
  v2 = sub_10000B4C8(&qword_10055B2C8);
  *v1 = v0;
  v1[1] = sub_100067ACC;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_1003490D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 280), 2);
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v5)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_1002F8A90(0, v4[2] + 1, 1, v4);
        v7 = v4[2];
        v6 = v4[3];
        if (v7 >= v6 >> 1)
          v4 = sub_1002F8A90((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v4);
}

uint64_t sub_1003491E8()
{
  return 0x656372756F736572;
}

uint64_t sub_100349204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    result = swift_bridgeObjectRelease(0xE900000000000073);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656372756F736572, 0xE900000000000073, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1003492A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10034F790();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003492CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10034F790();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_1003492F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_10034F66C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10034931C(char *a1, char *a2)
{
  return sub_1002F2608(*a1, *a2);
}

Swift::Int sub_100349328()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1003493B0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100349414()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100349498@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100518C28;
  return sub_10034A18C(v2, a1, a2);
}

void sub_1003494A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x652D6D617A616873;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xED000073746E6576;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1003494EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x652D6D617A616873;
}

uint64_t sub_100349530@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100518C28;
  return sub_10034A264(a1, v2, a2);
}

uint64_t sub_10034953C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351554();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100349564(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351554();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034958C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10034A9D4((uint64_t (*)(void))sub_10034F8A0, a1);
}

uint64_t sub_1003495A8(char *a1, char *a2)
{
  return sub_1002F2964(*a1, *a2);
}

Swift::Int sub_1003495B4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100349614(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(a1, v2, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

Swift::Int sub_100349648()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1003496A4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100518C78;
  return sub_10034A18C(v2, a1, a2);
}

void sub_1003496B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1003496D4()
{
  _BYTE *v0;

  if (*v0)
    return 1701669236;
  else
    return 1701667182;
}

uint64_t sub_1003496F4@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100518C78;
  return sub_10034A264(a1, v2, a2);
}

uint64_t sub_100349700(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10034F818();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100349728(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10034F818();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100349750@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;

  v66 = a2;
  v65 = type metadata accessor for Date(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v73 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator(0);
  v80 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin();
  v82 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin();
  v78 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v75 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Date.ISO8601FormatStyle.DateSeparator(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v71 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v81 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin();
  v74 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v79 = (char *)v58 - v10;
  sub_10000B4C8(&qword_10055B550);
  __chkstk_darwin();
  v87 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TimeZone(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin();
  v67 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v85 = (char *)v58 - v13;
  v14 = sub_10000B4C8(&qword_10055B558);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  v23 = a1;
  sub_10000D900(a1, v21);
  v24 = sub_10034F818();
  v25 = v89;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.CodingKeys, &type metadata for ShazamEvent.Attributes.CodingKeys, v24, v21, v22);
  if (v25)
    return sub_100011758(a1);
  v26 = v87;
  v89 = v15;
  v63 = v18;
  v27 = v86;
  v28 = v88;
  LOBYTE(v90) = 0;
  *(_QWORD *)v20 = KeyedDecodingContainer.decode(_:forKey:)(&v90, v14);
  *((_QWORD *)v20 + 1) = v30;
  v94 = 1;
  v31 = sub_10034F85C();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v90, &type metadata for ShazamEvent.Attributes.Time, &v94, v14, &type metadata for ShazamEvent.Attributes.Time, v31);
  v61 = v17;
  v62 = v14;
  v59 = v90;
  v32 = v92;
  v60 = v91;
  v33 = v93;
  v34 = (uint64_t)v26;
  TimeZone.init(identifier:)(v92, v93);
  v35 = v26;
  v36 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v35, 1, v28) == 1)
  {
    sub_100011694(v34, &qword_10055B550);
    v37 = type metadata accessor for RazzmatazzAPI.CustomError(0);
    v38 = sub_10001254C(&qword_10055B330, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_10043D654);
    swift_allocError(v37, v38, 0, 0);
    *v39 = v32;
    v39[1] = v33;
    swift_storeEnumTagMultiPayload(v39, v37, 0);
    v40 = swift_bridgeObjectRetain();
    swift_willThrow(v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v62);
    sub_100011758(v23);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v58[1] = v33;
    v41 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v85, v34, v36);
    v42 = *(int *)(v63 + 24);
    v87 = v20;
    v43 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v43(&v20[v42], v41, v36);
    v44 = v67;
    v43(v67, v41, v36);
    v45 = v71;
    (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v71, enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:), v69);
    v46 = v75;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v75, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v72);
    v47 = v78;
    (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v78, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v77);
    v48 = v82;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v82, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v83);
    v49 = v79;
    Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)(v45, v46, v47, v48, 0, v44);
    v90 = v59;
    v91 = v60;
    v50 = v81;
    v51 = v74;
    v52 = v84;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v74, v49, v84);
    v53 = sub_10001254C(&qword_10055B570, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
    v54 = v73;
    Date.init<A>(_:strategy:)(&v90, v51, v52, v53);
    v55 = v88;
    v56 = v89;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v52);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v85, v55);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v61, v62);
    v57 = (uint64_t)v87;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v87[*(int *)(v63 + 20)], v54, v65);
    sub_10000D964(v57, v66, type metadata accessor for ShazamEvent.Attributes);
    sub_100011758(v23);
    return sub_10000E750(v57, type metadata accessor for ShazamEvent.Attributes);
  }
}

uint64_t sub_100349F34()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E6F7A656D6974;
  else
    return 0x6D69547472617473;
}

uint64_t sub_100349F74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10034FA74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100349F98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003516CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100349FC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003516CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100349FE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_10034FB70(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10034A014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100349750(a1, a2);
}

uint64_t sub_10034A028(char *a1, char *a2)
{
  return sub_1002F28C4(*a1, *a2);
}

Swift::Int sub_10034A034()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10034A0B0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_10034A108()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10034A180@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100518CC8;
  return sub_10034A18C(v2, a1, a2);
}

uint64_t sub_10034A18C@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_10034A1E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x73747369747261;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10034A220()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x73747369747261;
}

uint64_t sub_10034A258@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100518CC8;
  return sub_10034A264(a1, v2, a2);
}

uint64_t sub_10034A264@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v6;
  uint64_t result;
  char v8;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

uint64_t sub_10034A2C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003517DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034A2E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003517DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034A310@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  v21 = a2;
  v3 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_10000B4C8(&qword_10055B590);
  v6 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShazamEvent(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v12 = a1[4];
  v24 = a1;
  sub_10000D900(a1, v13);
  v14 = sub_100350EAC();
  v22 = v8;
  v15 = v25;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.CodingKeys, &type metadata for ShazamEvent.CodingKeys, v14, v13, v12);
  if (v15)
    return sub_100011758(v24);
  LOBYTE(v26) = 0;
  *v11 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v23);
  v11[1] = v16;
  LOBYTE(v26) = 1;
  v17 = sub_10001254C(&qword_10055B5A0, type metadata accessor for ShazamEvent.Attributes, (uint64_t)&unk_10043D62C);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v5, v3, &v26, v23, v3, v17);
  sub_10000DB44((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 20), type metadata accessor for ShazamEvent.Attributes);
  v27 = 2;
  v18 = sub_100350EF0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v26, &type metadata for ShazamEvent.Relationships, &v27, v23, &type metadata for ShazamEvent.Relationships, v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v23);
  *(_OWORD *)((char *)v11 + *(int *)(v9 + 24)) = v26;
  sub_10000D964((uint64_t)v11, v21, type metadata accessor for ShazamEvent);
  sub_100011758(v24);
  return sub_10000E750((uint64_t)v11, type metadata accessor for ShazamEvent);
}

uint64_t sub_10034A5C4()
{
  return 25705;
}

uint64_t sub_10034A5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_10034A64C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003521C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034A674(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003521C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034A69C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_10000B4C8(&qword_10055B790);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_1003521C8();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_100011758(a1);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_10034A7C0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_10000B4C8(&qword_10055B7A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_1003521C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v8, v12, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10034A8AC()
{
  return 1635017060;
}

uint64_t sub_10034A8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_10034A940(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351DBC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034A968(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351DBC();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_10034A990@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100350078(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_10034A9B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10034A9D4((uint64_t (*)(void))sub_10034FD1C, a1);
}

uint64_t sub_10034A9D4@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10034A9FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7475626972747461;
  if (*v0 != 1)
    v1 = 0x6E6F6974616C6572;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_10034AA5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003501C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10034AA80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100350EAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034AAA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100350EAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034AAD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10034A310(a1, a2);
}

uint64_t sub_10034AAE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002F27CC(*a1, *a2);
}

Swift::Int sub_10034AAF0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10034AB80(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (*v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10034ABEC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_10034AC78@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100350330(*a1);
  *a2 = result;
  return result;
}

void sub_10034ACA4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x73736572646461;
  if (v2 != 1)
  {
    v5 = 7300455;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701667182;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10034ACF4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736572646461;
  if (*v0 != 1)
    v1 = 7300455;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

unint64_t sub_10034AD40@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100350330(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10034AD64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351710();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034AD8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351710();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10034ADB4()
{
  return 0xD000000000000011;
}

uint64_t sub_10034ADD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003506D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10034ADF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351CF0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034AE20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351CF0();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10034AE48@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_100350758(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10034AE88()
{
  _BYTE *v0;

  if (*v0)
    return 6778476;
  else
    return 7627116;
}

uint64_t sub_10034AEAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003508AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10034AED0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351D78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034AEF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100351D78();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10034AF20(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_10035097C(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

double sub_10034AF48@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_100350378(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_10034AFA0()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 25705;
}

uint64_t sub_10034AFD4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100350AD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10034AFF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100350E24();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034B020(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100350E24();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_10034B048@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_100350BB8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_10034B0A4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_100563468);
  sub_10000D78C(v0, (uint64_t)qword_100563468);
  return static Logger.music(_:)(0x6174616D7A7A6152, 0xEA00000000007A7ALL);
}

void sub_10034B104(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10043D448);
  v5 = swift_getKeyPath(&unk_10043D470);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_10034B180(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10043D448);
  v5 = swift_getKeyPath(&unk_10043D470);
  v7 = v2;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10034B1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Date(0);
  v5 = sub_10001254C(&qword_10055AD30, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  return dispatch thunk of static Comparable.< infix(_:_:)(a1, a2, v4, v5) & 1;
}

_QWORD *sub_10034B264(_QWORD *result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (a2)
    {
      v4 = sub_10000B4C8(&qword_1005592B0);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5;
      v5[2] = a2;
      v5[4] = v3;
      if (a2 != 1)
      {
        v5[5] = v3;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            *v8++ = v3;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v6;
  }
  return result;
}

uint64_t sub_10034B308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  v7 = sub_10000B4C8(&qword_10055B2D0);
  v6[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[18] = v8;
  v6[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artist(0);
  v6[20] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[21] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v6[22] = v11;
  v6[23] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10055A300) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[24] = swift_task_alloc(v12);
  v6[25] = swift_task_alloc(v12);
  v13 = sub_10000B4C8(&qword_10055B2D8);
  v6[26] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[27] = v14;
  v6[28] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10055B2E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[29] = swift_task_alloc(v15);
  v6[30] = swift_task_alloc(v15);
  return swift_task_switch(sub_10034B434, 0, 0);
}

uint64_t sub_10034B434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v45;
  char v46;
  _QWORD *v47;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v2 = *(_QWORD *)(v1 + 216);
  v51 = *(_QWORD *)(v1 + 168);
  v52 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 16);
  swift_bridgeObjectRetain();
  v4 = 0;
  v50 = v2;
  v49 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 232), 1, 1, *(_QWORD *)(v1 + 208));
      v6 = v3;
    }
    else
    {
      if (v4 >= v3)
      {
        __break(1u);
        goto LABEL_20;
      }
      v7 = *(unint64_t **)(v1 + 232);
      v57 = *(_QWORD *)(v1 + 208);
      v8 = *(_QWORD *)(v1 + 160);
      v6 = v4 + 1;
      v9 = *(_QWORD *)(v1 + 224) + *(int *)(v52 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16))(v9, *(_QWORD *)(v1 + 104)+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v4, v8);
      v10 = (char *)v7 + *(int *)(v52 + 48);
      *v7 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v10, v9, v8);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v57);
    }
    v11 = *(_QWORD *)(v1 + 240);
    v12 = *(_QWORD *)(v1 + 208);
    sub_100011530(*(_QWORD *)(v1 + 232), v11, &qword_10055B2E0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v11, 1, v12) == 1)
      break;
    v58 = v6;
    v13 = *(uint64_t **)(v1 + 240);
    v14 = *(_QWORD *)(v1 + 200);
    v15 = *(_QWORD *)(v1 + 176);
    v16 = *(char **)(v1 + 184);
    v17 = *(_QWORD *)(v1 + 160);
    v18 = *(_QWORD *)(v1 + 120);
    v55 = *(_QWORD *)(v1 + 112);
    v56 = *(_QWORD *)(v1 + 192);
    v53 = v14;
    v54 = *v13;
    v19 = (char *)v13 + *(int *)(v52 + 48);
    v20 = type metadata accessor for TaskPriority(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v22((uint64_t)v16, v19, v17);
    v23 = *(unsigned __int8 *)(v51 + 80);
    v24 = (v23 + 56) & ~v23;
    v25 = (_QWORD *)swift_allocObject(&unk_10051F510, v24 + v15, v23 | 7);
    v25[2] = 0;
    v26 = v25 + 2;
    v25[3] = 0;
    v25[4] = v54;
    v25[5] = v55;
    v25[6] = v18;
    v22((uint64_t)v25 + v24, v16, v17);
    sub_10034DB38(v53, v56);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v56, 1, v20);
    swift_retain(v18);
    v28 = *(_QWORD *)(v1 + 192);
    if ((_DWORD)v17 == 1)
    {
      sub_100011694(*(_QWORD *)(v1 + 192), &qword_10055A300);
      v29 = 0;
      v30 = *v26;
      if (*v26)
        goto LABEL_10;
    }
    else
    {
      v36 = TaskPriority.rawValue.getter(v27);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v28, v20);
      v29 = v36;
      v30 = *v26;
      if (*v26)
      {
LABEL_10:
        v31 = v25[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v30);
        v33 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v31);
        v35 = v34;
        swift_unknownObjectRelease(v30);
        goto LABEL_13;
      }
    }
    v33 = 0;
    v35 = 0;
LABEL_13:
    v2 = v50;
    v37 = **(_QWORD **)(v1 + 96);
    sub_10000B4C8(&qword_10055B2B8);
    v38 = v35 | v33;
    if (v35 | v33)
    {
      v38 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v33;
      *(_QWORD *)(v1 + 40) = v35;
    }
    v0 = *(_QWORD **)(v1 + 200);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v38;
    *(_QWORD *)(v1 + 64) = v37;
    v5 = swift_task_create(v29 | 0x3100, v1 + 48);
    swift_release(v5);
    sub_100011694((uint64_t)v0, &qword_10055A300);
    v3 = v49;
    v4 = v58;
  }
  v39 = *(_QWORD **)(v1 + 128);
  v40 = *(uint64_t **)(v1 + 96);
  swift_bridgeObjectRelease();
  v41 = *v40;
  v42 = sub_10000B4C8(&qword_10055B2B8);
  v43 = sub_10000B4C8(&qword_1005593C0);
  ThrowingTaskGroup.makeAsyncIterator()(v41, v42, v43, &protocol self-conformance witness table for Error);
  v0 = (_QWORD *)*v39;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
  *v39 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_16;
LABEL_20:
  v0 = sub_100417A0C(v0);
LABEL_16:
  v45 = *(_QWORD **)(v1 + 128);
  v46 = swift_isUniquelyReferenced_nonNull_native(v0);
  *v45 = v0;
  if ((v46 & 1) == 0)
    v0 = sub_100417A0C(v0);
  **(_QWORD **)(v1 + 128) = v0;
  v47 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 248) = v47;
  *v47 = v1;
  v47[1] = sub_10034B870;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, *(_QWORD *)(v1 + 136), v1 + 88);
}

uint64_t sub_10034B870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 248));
  if (v0)
    v2 = sub_10034BA3C;
  else
    v2 = sub_10034B8D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10034B8D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v1 = *(_QWORD *)(v0 + 80);
  if (!v1)
  {
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v13, *(_QWORD *)(v0 + 136));
    swift_task_dealloc(v8);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  *v2 = v4;
  if ((result & 1) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
  else
  {
    v14 = *(uint64_t **)(v0 + 128);
    result = (uint64_t)sub_100417A0C(v4);
    v4 = (_QWORD *)result;
    *v14 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (v3 < v4[2])
      {
        swift_bridgeObjectRelease();
        v4[v3 + 4] = v1;
        v6 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
        *(_QWORD *)(v0 + 256) = v6;
        *v6 = v0;
        v6[1] = sub_10034BADC;
        return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 136), v0 + 88);
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10034BA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v7, *(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034BADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  if (v0)
    v2 = sub_10034BA3C;
  else
    v2 = sub_10034B8D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10034BB40(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *a3;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10055B2C0
                                                                                     + dword_10055B2C0);
  v13 = (_QWORD *)swift_task_alloc(unk_10055B2C4);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_10000DC64;
  return v15(a1, a2, v12, a4, a5, a6);
}

BOOL sub_10034BBE0(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v6, 0),
        result = 0,
        (v8 & 1) != 0))
  {
    v10 = *((_QWORD *)a1 + 2);
    v11 = *((_QWORD *)a1 + 3);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    if (v10 == v12 && v11 == v13)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    result = 0;
    if ((v15 & 1) != 0)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
  }
  return result;
}

uint64_t sub_10034BC7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[7] = a1;
  v2 = type metadata accessor for URLRequest(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[12] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v6);
  v1[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v1[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v9);
  v1[18] = swift_task_alloc(v9);
  v1[19] = swift_task_alloc(v9);
  v1[20] = swift_task_alloc(v9);
  v10 = type metadata accessor for Date(0);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v1[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[25] = v13;
  v1[26] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005585E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v14);
  v1[28] = swift_task_alloc(v14);
  v15 = sub_10000B4C8(&qword_10055B300);
  v1[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URLComponents(0);
  v1[30] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v1[31] = v17;
  v1[32] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10034BE34, 0, 0);
}

uint64_t sub_10034BE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  v2 = Artist.catalogID.getter(a1);
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v3;
  if (!v3)
    goto LABEL_6;
  v4 = v2;
  v5 = v3;
  v6 = *(_QWORD *)(v1 + 224);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);
  URL.init(string:)(0xD000000000000030, 0x8000000100453030);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  result = v9(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v63 = v4;
  v65 = v9;
  v11 = *(_QWORD *)(v1 + 240);
  v12 = *(_QWORD *)(v1 + 248);
  v14 = *(_QWORD *)(v1 + 224);
  v13 = *(_QWORD *)(v1 + 232);
  v15 = *(_QWORD *)(v1 + 88);
  v16 = *(_QWORD *)(v1 + 96);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v14, 0);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v1 + 280) = v17;
  v17(v14, v15);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11);
  if ((_DWORD)result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(v1 + 208);
  v62 = *(_QWORD *)(v1 + 216);
  v52 = *(_QWORD *)(v1 + 200);
  v53 = *(_QWORD *)(v1 + 192);
  v59 = *(_QWORD *)(v1 + 176);
  v60 = *(_QWORD *)(v1 + 168);
  v19 = *(_QWORD *)(v1 + 144);
  v56 = *(_QWORD *)(v1 + 152);
  v57 = *(_QWORD *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 136);
  v54 = *(_QWORD *)(v1 + 184);
  v55 = *(_QWORD *)(v1 + 128);
  v21 = *(_QWORD *)(v1 + 120);
  v61 = *(_QWORD *)(v1 + 88);
  (*(void (**)(void))(*(_QWORD *)(v1 + 248) + 32))();
  v22 = sub_10000B4C8(&qword_10055B308);
  v23 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v58 = swift_allocObject(v22, ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ 3 * *(_QWORD *)(v23 + 72), *(unsigned __int8 *)(v23 + 80) | 7);
  *(_OWORD *)(v58 + 16) = xmmword_100427490;
  v24 = static Locale.current.getter(v58);
  v25 = Locale.identifier.getter(v24);
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v18, v53);
  URLQueryItem.init(name:value:)(108, 0xE100000000000000, v25, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)(0x6449747369747261, 0xE800000000000000, v63, v5);
  v28 = swift_bridgeObjectRelease();
  v29 = static Date.now.getter(v28);
  v30 = static FormatStyle<>.iso8601.getter(v29);
  Date.ISO8601FormatStyle.day()(v30);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8);
  v32 = v31(v20, v21);
  Date.ISO8601FormatStyle.month()(v32);
  v33 = v31(v19, v21);
  Date.ISO8601FormatStyle.year()(v33);
  v31(v56, v21);
  v34 = sub_10001254C(&qword_10055B310, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
  Date.formatted<A>(_:)((_QWORD *)(v1 + 16), v57, v21, v34);
  v31(v57, v21);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v54, v60);
  URLQueryItem.init(name:value:)(1836020326, 0xE400000000000000, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  swift_bridgeObjectRelease();
  v35 = URLComponents.queryItems.setter(v58);
  URLComponents.url.getter(v35);
  v36 = v65(v62, 1, v61);
  v37 = *(_QWORD *)(v1 + 216);
  if (v36 == 1)
  {
    swift_bridgeObjectRelease();
    sub_100011694(v37, &qword_1005585E0);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
LABEL_6:
    v38 = *(_QWORD *)(v1 + 224);
    v39 = *(_QWORD *)(v1 + 232);
    v41 = *(_QWORD *)(v1 + 208);
    v40 = *(_QWORD *)(v1 + 216);
    v42 = *(_QWORD *)(v1 + 184);
    v44 = *(_QWORD *)(v1 + 152);
    v43 = *(_QWORD *)(v1 + 160);
    v46 = *(_QWORD *)(v1 + 136);
    v45 = *(_QWORD *)(v1 + 144);
    v64 = *(_QWORD *)(v1 + 112);
    v66 = *(_QWORD *)(v1 + 104);
    v67 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 256));
    swift_task_dealloc(v39);
    swift_task_dealloc(v38);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(_swiftEmptyArrayStorage);
  }
  v48 = *(_QWORD *)(v1 + 104);
  v47 = *(_QWORD *)(v1 + 112);
  v49 = *(_QWORD *)(v1 + 88);
  v50 = *(_QWORD *)(v1 + 96);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 32))(v47, *(_QWORD *)(v1 + 216), v49);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v48, v47, v49);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v48, 0, 60.0);
  *(_QWORD *)(v1 + 288) = objc_msgSend((id)objc_opt_self(NSURLSession), "sharedSession");
  v51 = (_QWORD *)swift_task_alloc(async function pointer to NSURLSession.data(for:delegate:)[1]);
  *(_QWORD *)(v1 + 296) = v51;
  *v51 = v1;
  v51[1] = sub_10034C30C;
  return NSURLSession.data(for:delegate:)(*(_QWORD *)(v1 + 80), 0);
}

uint64_t sub_10034C30C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 296);
  v6[38] = a1;
  v6[39] = a2;
  v6[40] = v3;
  swift_task_dealloc(v7);
  if (v3)
  {
    v8 = sub_10034C7B8;
  }
  else
  {
    v9 = (void *)v6[36];

    v8 = sub_10034C394;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10034C394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54[2];

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = JSONDecoder.init()();
  v6 = sub_10034DB80();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for Root, v3, v2, &type metadata for Root, v6);
  v8 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 312);
  if (v1)
  {
    sub_10003A628(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
    swift_release(v5);
    if (qword_100557F08 != -1)
      swift_once(&qword_100557F08, sub_10034B0A4);
    v9 = type metadata accessor for Logger(0);
    sub_10000D78C(v9, (uint64_t)qword_100563468);
    swift_errorRetain(v1);
    swift_bridgeObjectRetain();
    v10 = swift_errorRetain(v1);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 272);
    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 264);
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v54[0] = v17;
      *(_DWORD *)v16 = 136315394;
      swift_bridgeObjectRetain();
      v18 = (char *)MusicItemID.description.getter(v15, v14);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 4) = sub_1002E9B3C(v18, v20, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v14, 2);
      *(_WORD *)(v16 + 12) = 2080;
      *(_QWORD *)(v0 + 48) = v1;
      swift_errorRetain(v1);
      v21 = sub_10000B4C8(&qword_1005593C0);
      v22 = (char *)String.init<A>(describing:)(v0 + 48, v21);
      *(_QWORD *)(v16 + 14) = sub_1002E9B3C(v22, v23, v54);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Could not load for artistID=%s with error=%s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }

    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v30 = *(_QWORD *)(v0 + 112);
    v32 = *(_QWORD *)(v0 + 80);
    v31 = *(_QWORD *)(v0 + 88);
    v33 = *(_QWORD *)(v0 + 64);
    v34 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    v29(v30, v31);
    v53 = _swiftEmptyArrayStorage;
  }
  else
  {
    v49 = *(_QWORD *)(v0 + 112);
    v51 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v24 = *(_QWORD *)(v0 + 72);
    v46 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 88);
    v25 = *(_QWORD *)(v0 + 56);
    v45 = *(_QWORD *)(v0 + 64);
    swift_release(v5);
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(v0 + 32);
    v26 = *(_QWORD *)(v0 + 40);
    v28 = (_QWORD *)swift_task_alloc(48);
    v28[2] = v27;
    v28[3] = v26;
    v28[4] = v25;
    swift_bridgeObjectRetain();
    v53 = (_QWORD *)sub_100347270((void (*)(uint64_t))sub_10034DBC4, (uint64_t)v28, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10003A628(v8, v7);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v28);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v46, v45);
    v51(v49, v47);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v36 = *(_QWORD *)(v0 + 224);
  v35 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v37 = *(_QWORD *)(v0 + 216);
  v39 = *(_QWORD *)(v0 + 184);
  v41 = *(_QWORD *)(v0 + 152);
  v40 = *(_QWORD *)(v0 + 160);
  v42 = *(_QWORD *)(v0 + 136);
  v43 = *(_QWORD *)(v0 + 144);
  v48 = *(_QWORD *)(v0 + 112);
  v50 = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v42);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v53);
}

uint64_t sub_10034C7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 320);
  if (qword_100557F08 != -1)
    swift_once(&qword_100557F08, sub_10034B0A4);
  v2 = type metadata accessor for Logger(0);
  sub_10000D78C(v2, (uint64_t)qword_100563468);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 272);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 264);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v36 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    v11 = (char *)MusicItemID.description.getter(v8, v7);
    v13 = v12;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 4) = sub_1002E9B3C(v11, v13, &v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v7, 2);
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v1;
    swift_errorRetain(v1);
    v14 = sub_10000B4C8(&qword_1005593C0);
    v15 = (char *)String.init<A>(describing:)(v0 + 48, v14);
    *(_QWORD *)(v9 + 14) = sub_1002E9B3C(v15, v16, &v36);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not load for artistID=%s with error=%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v18 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 72);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v17(v18, v19);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v23 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 232);
  v26 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v24);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

void sub_10034CAC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  _OWORD v12[3];
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  sub_100011530(a1, (uint64_t)v13, &qword_10055B240);
  if (*((_QWORD *)&v13[0] + 1))
  {
    v14 = v13[0];
    v15 = v13[1];
    v16 = v13[2];
    v1 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    v2 = JSONEncoder.init()();
    v12[0] = v14;
    v12[1] = v15;
    v12[2] = v16;
    v3 = sub_10034CE34();
    v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, &type metadata for RazzmatazzController.Location, v3);
    v8 = v7;
    swift_release(v2);
    v17 = v14;
    sub_1000117BC((uint64_t)&v17);
    v18 = v15;
    sub_1000117BC((uint64_t)&v18);
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Data._bridgeToObjectiveC()().super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v11);

    sub_10003A628(v6, v8);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKey:", 0, v5);

  }
}

unint64_t sub_10034CE34()
{
  unint64_t result;

  result = qword_10055B248;
  if (!qword_10055B248)
  {
    result = swift_getWitnessTable(asc_10043D318, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_10055B248);
  }
  return result;
}

void sub_10034CE78(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17;
  _QWORD v18[2];
  _OWORD v19[2];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_100011530((uint64_t)v19, (uint64_t)v15, &qword_10055A570);
  if (!v16)
  {
    sub_100011694((uint64_t)v15, &qword_10055A570);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v18, v15, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_8:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0uLL;
    goto LABEL_9;
  }
  v6 = v18[0];
  v5 = v18[1];
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONDecoder.init()();
  v9 = sub_10034DC1C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for RazzmatazzController.Location, v6, v5, &type metadata for RazzmatazzController.Location, v9);
  sub_10003A628(v6, v5);
  swift_release(v8);
  v10 = v15[0];
  v11 = v15[1];
  v12 = v15[2];
  v13 = v16;
  v14 = v17;
LABEL_9:
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v13;
  *(_OWORD *)(a1 + 32) = v14;
}

uint64_t sub_10034D1C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10034D1DC, 0, 0);
}

uint64_t sub_10034D1DC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v1 = v0[2];
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_10043D490);
  v3 = sub_100038110(&qword_10055B288, (uint64_t *)&unk_100559660, (uint64_t (*)(void))sub_10034D930, (const char *)&protocol conformance descriptor for <A> A?);
  v4 = Array.removingDuplicates<A>(with:)(KeyPath, v1, v3);
  v0[3] = v4;
  swift_release(KeyPath);
  v7 = (char *)&dword_10055B2A0 + dword_10055B2A0;
  v5 = (_QWORD *)swift_task_alloc(unk_10055B2A4);
  v0[4] = v5;
  *v5 = v0;
  v5[1] = sub_10034D2A4;
  return ((uint64_t (*)(void *, _QWORD, uint64_t))v7)(&unk_10055B298, 0, v4);
}

uint64_t sub_10034D2A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_10034D308, 0, 0);
}

uint64_t sub_10034D308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v5 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *))(v0 + 8))(v5);
  }
  v3 = (uint64_t *)(v1 + 32);
  result = swift_bridgeObjectRetain();
  v5 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v6 = *v3;
    v7 = *(_QWORD *)(*v3 + 16);
    v8 = *((_QWORD *)v5 + 2);
    v9 = v8 + v7;
    if (__OFADD__(v8, v7))
      break;
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native(v5);
    if ((_DWORD)result && v9 <= *((_QWORD *)v5 + 3) >> 1)
    {
      if (*(_QWORD *)(v6 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v8 <= v9)
        v10 = v8 + v7;
      else
        v10 = v8;
      result = sub_1002F897C(result, v10, 1, v5);
      v5 = (char *)result;
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_14:
        v11 = *((_QWORD *)v5 + 2);
        v12 = (*((_QWORD *)v5 + 3) >> 1) - v11;
        result = type metadata accessor for Razzmatazz(0);
        if (v12 < v7)
          goto LABEL_23;
        result = swift_arrayInitWithCopy(&v5[((*(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80))
                                           + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v11]);
        if (v7)
        {
          v13 = *((_QWORD *)v5 + 2);
          v14 = __OFADD__(v13, v7);
          v15 = v13 + v7;
          if (v14)
            goto LABEL_24;
          *((_QWORD *)v5 + 2) = v15;
        }
        goto LABEL_4;
      }
    }
    if (v7)
    {
      __break(1u);
      break;
    }
LABEL_4:
    result = swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10034D470(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656475746974616CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64757469676E6F6CLL, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_10034D62C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v5 = sub_10000B4C8(&qword_10055B250);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_10034D870();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  v27 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v27, v5);
  v14 = v13;
  v26 = 1;
  swift_bridgeObjectRetain();
  v22 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
  v23 = v15;
  v25 = 2;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
  v17 = v16;
  v24 = 3;
  KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100011758(a1);
  v20 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v17;
  a2[5] = v19;
  return result;
}

unint64_t sub_10034D870()
{
  unint64_t result;

  result = qword_10055B258;
  if (!qword_10055B258)
  {
    result = swift_getWitnessTable(a5_0, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B258);
  }
  return result;
}

unint64_t sub_10034D8B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055AD28;
  if (!qword_10055AD28)
  {
    v1 = sub_100011650(&qword_1005592C0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10055AD28);
  }
  return result;
}

uint64_t sub_10034D908@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = Artist.catalogID.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_10034D930()
{
  unint64_t result;

  result = qword_10055B290;
  if (!qword_10055B290)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_10055B290);
  }
  return result;
}

uint64_t sub_10034D974(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_10055B2AC);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_10000DC64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10055B2A8
                                                                                         + dword_10055B2A8))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10034DA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10034DA84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10055B2EC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_10055B2E8
                                                                                              + dword_10055B2E8))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10034DB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055A300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10034DB80()
{
  unint64_t result;

  result = qword_10055B318;
  if (!qword_10055B318)
  {
    result = swift_getWitnessTable(byte_10043D694, &type metadata for Root);
    atomic_store(result, (unint64_t *)&qword_10055B318);
  }
  return result;
}

uint64_t sub_10034DBC4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1003484AC(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t type metadata accessor for ShazamEvent(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055B4E0, (uint64_t)&nominal type descriptor for ShazamEvent);
}

uint64_t type metadata accessor for RazzmatazzAPI.CustomError(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055B450, (uint64_t)&nominal type descriptor for RazzmatazzAPI.CustomError);
}

uint64_t type metadata accessor for ShazamEvent.Attributes(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055B3A0, (uint64_t)&nominal type descriptor for ShazamEvent.Attributes);
}

unint64_t sub_10034DC1C()
{
  unint64_t result;

  result = qword_10055B340;
  if (!qword_10055B340)
  {
    result = swift_getWitnessTable(asc_10043D340, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_10055B340);
  }
  return result;
}

uint64_t *sub_10034DC60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_10034DD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_10034DDAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_10034DE58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

_OWORD *sub_10034DF08(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_10034DFA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_10034E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034E04C);
}

uint64_t sub_10034E04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10034E0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034E0F8);
}

uint64_t sub_10034E0F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10034E194(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_10043D4C8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TimeZone(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void destroy for VenueElement(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

}

_QWORD *initializeWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = (void *)a2[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v9;
  return a1;
}

_QWORD *assignWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[10] = a2[10];
  v9 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[12];
  v11 = (void *)a1[12];
  a1[12] = v10;
  v12 = v10;

  return a1;
}

_QWORD *assignWithTake for VenueElement(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = a1[9];
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  a1[10] = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(a1[11]);
  v14 = (void *)a1[12];
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement()
{
  return &type metadata for VenueElement;
}

uint64_t *sub_10034E4B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v29);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    if (EnumCaseMultiPayload == 1)
    {
      v33 = type metadata accessor for ShazamEvent(0);
      v9 = *(int *)(v33 + 20);
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = *(uint64_t *)((char *)a2 + v9 + 8);
      *v10 = *(uint64_t *)((char *)a2 + v9);
      v10[1] = v12;
      v13 = type metadata accessor for ShazamEvent.Attributes(0);
      v14 = *(int *)(v13 + 20);
      v31 = &v11[v14];
      v32 = (char *)v10 + v14;
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v32, v31, v15);
      v17 = *(int *)(v13 + 24);
      v18 = (char *)v10 + v17;
      v19 = &v11[v17];
      v20 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(int *)(v33 + 24);
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = sub_10000B4C8(&qword_10055B338);
      *(uint64_t *)((char *)a1 + *(int *)(v25 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v25 + 48));
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_10034E650(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for ShazamEvent(0) + 20);
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for ShazamEvent.Attributes(0);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v5 + *(int *)(v6 + 24);
    v10 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000B4C8(&qword_10055B338);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_10034E744(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  if (EnumCaseMultiPayload == 1)
  {
    v29 = type metadata accessor for ShazamEvent(0);
    v30 = v3;
    v8 = *(int *)(v29 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *v9 = *(_QWORD *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v28 = (char *)v9 + v13;
    v14 = &v10[v13];
    v15 = type metadata accessor for Date(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v28, v14, v15);
    v17 = *(int *)(v12 + 24);
    v18 = (char *)v9 + v17;
    v19 = &v10[v17];
    v3 = v30;
    v20 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = *(int *)(v29 + 24);
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_10000B4C8(&qword_10055B338);
    *(_QWORD *)((char *)a1 + *(int *)(v25 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 48));
    v26 = 1;
  }
  else
  {
    v26 = 0;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload(a1, v3, v26);
  return a1;
}

_QWORD *sub_10034E8B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_10000E750((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      v26 = type metadata accessor for ShazamEvent(0);
      v27 = a3;
      v7 = *(int *)(v26 + 20);
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (char *)a2 + v7;
      *v8 = *(_QWORD *)((char *)a2 + v7);
      v8[1] = *(_QWORD *)((char *)a2 + v7 + 8);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v25 = (char *)v8 + v11;
      v12 = &v9[v11];
      v13 = type metadata accessor for Date(0);
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v25, v12, v13);
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v17 = &v9[v15];
      a3 = v27;
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = *(int *)(v26 + 24);
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = sub_10000B4C8(&qword_10055B338);
      *(_QWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v22 + 48));
      v23 = 1;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload(a1, a3, v23);
  }
  return a1;
}

_OWORD *sub_10034EA4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    v6 = type metadata accessor for ShazamEvent(0);
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for ShazamEvent.Attributes(0);
    v11 = *(int *)(v10 + 20);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = *(int *)(v10 + 24);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    v19 = sub_10000B4C8(&qword_10055B338);
    *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10034EB80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_10000E750((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for ShazamEvent(0);
      v7 = *(int *)(v6 + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      v15 = *(int *)(v10 + 24);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
      v19 = sub_10000B4C8(&qword_10055B338);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10034ECCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_10043D4C8;
  result = type metadata accessor for ShazamEvent(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.BridgeObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_10034ED54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  char *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v24);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v26 = &v10[v13];
    v27 = (char *)v9 + v13;
    v14 = type metadata accessor for Date(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v27, v26, v14);
    v16 = *(int *)(v12 + 24);
    v17 = (char *)v9 + v16;
    v18 = &v10[v16];
    v19 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = *(int *)(a3 + 24);
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10034EE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for ShazamEvent.Attributes(0);
  v6 = v4 + *(int *)(v5 + 20);
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 24);
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_10034EF34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = type metadata accessor for ShazamEvent.Attributes(0);
  v11 = *(int *)(v10 + 20);
  v24 = (char *)v7 + v11;
  v12 = &v8[v11];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v24, v12, v13);
  v15 = *(int *)(v10 + 24);
  v16 = (char *)v7 + v15;
  v17 = &v8[v15];
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_10034F040(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10034F16C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_10034F238(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for ShazamEvent.Attributes(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = (char *)v8 + v16;
  v18 = &v9[v16];
  v19 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((_QWORD *)v21 + 1) = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10034F334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034F340);
}

uint64_t sub_10034F340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_10034F3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034F3C8);
}

uint64_t sub_10034F3C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10034F43C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10043D4C8;
  result = type metadata accessor for ShazamEvent.Attributes(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10043D4C8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Root()
{
  return &type metadata for Root;
}

uint64_t storeEnumTagSinglePayload for RazzmatazzController.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10034F514 + 4 * byte_10043D299[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10034F548 + 4 * byte_10043D294[v4]))();
}

uint64_t sub_10034F548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034F550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10034F558);
  return result;
}

uint64_t sub_10034F564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10034F56CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10034F570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034F578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location.CodingKeys()
{
  return &type metadata for RazzmatazzController.Location.CodingKeys;
}

unint64_t sub_10034F598()
{
  unint64_t result;

  result = qword_10055B520;
  if (!qword_10055B520)
  {
    result = swift_getWitnessTable(aU_4, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B520);
  }
  return result;
}

unint64_t sub_10034F5E0()
{
  unint64_t result;

  result = qword_10055B528;
  if (!qword_10055B528)
  {
    result = swift_getWitnessTable(byte_10043D524, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B528);
  }
  return result;
}

unint64_t sub_10034F628()
{
  unint64_t result;

  result = qword_10055B530;
  if (!qword_10055B530)
  {
    result = swift_getWitnessTable(aU_5, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B530);
  }
  return result;
}

_QWORD *sub_10034F66C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v3 = sub_10000B4C8(&qword_10055B538);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10000D900(a1, v7);
  v10 = sub_10034F790();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Root.CodingKeys, &type metadata for Root.CodingKeys, v10, v7, v8);
  if (v1)
  {
    sub_100011758(a1);
  }
  else
  {
    v11 = sub_10034F7D4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v14, &type metadata for Resources, v12, v3, &type metadata for Resources, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v14;
    sub_100011758(a1);
  }
  return v9;
}

unint64_t sub_10034F790()
{
  unint64_t result;

  result = qword_10055B540;
  if (!qword_10055B540)
  {
    result = swift_getWitnessTable(byte_10043DBD4, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B540);
  }
  return result;
}

unint64_t sub_10034F7D4()
{
  unint64_t result;

  result = qword_10055B548;
  if (!qword_10055B548)
  {
    result = swift_getWitnessTable(byte_10043DBAC, &type metadata for Resources);
    atomic_store(result, (unint64_t *)&qword_10055B548);
  }
  return result;
}

unint64_t sub_10034F818()
{
  unint64_t result;

  result = qword_10055B560;
  if (!qword_10055B560)
  {
    result = swift_getWitnessTable(byte_10043DB5C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B560);
  }
  return result;
}

unint64_t sub_10034F85C()
{
  unint64_t result;

  result = qword_10055B568;
  if (!qword_10055B568)
  {
    result = swift_getWitnessTable(byte_10043DB34, &type metadata for ShazamEvent.Attributes.Time);
    atomic_store(result, (unint64_t *)&qword_10055B568);
  }
  return result;
}

uint64_t sub_10034F8A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_10000B4C8(&qword_10055B610);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000D900(a1, v7);
  v9 = sub_100351554();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Resources.CodingKeys, &type metadata for Resources.CodingKeys, v9, v7, v8);
  if (v1)
  {
    sub_100011758(a1);
  }
  else
  {
    v10 = sub_10000B4C8(&qword_10055B620);
    HIBYTE(v15) = 0;
    v11 = sub_100351598();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = sub_10000B4C8(&qword_10055B638);
    HIBYTE(v15) = 1;
    v14 = sub_10035161C();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100011758(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_10034FA74(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D69547472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6F7A656D6974, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10034FB70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;

  v3 = sub_10000B4C8(&qword_10055B650);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000D900(a1, v7);
  v9 = sub_1003516CC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.Time.CodingKeys, &type metadata for ShazamEvent.Attributes.Time.CodingKeys, v9, v7, v8);
  if (v1)
  {
    sub_100011758(a1);
  }
  else
  {
    v13 = 0;
    v8 = KeyedDecodingContainer.decode(_:forKey:)(&v13, v3);
    v12 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v12, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100011758(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_10034FD1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  _QWORD *v38;

  v2 = v1;
  v4 = sub_10000B4C8(&qword_10055B680);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)a1[3];
  v9 = a1[4];
  sub_10000D900(a1, (uint64_t)v8);
  v10 = sub_1003517DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.CodingKeys, &type metadata for ShazamEvent.Relationships.CodingKeys, v10, v8, v9);
  if (v1)
  {
    sub_100011758(a1);
  }
  else
  {
    v37 = 0;
    v11 = sub_100351820();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for ShazamEvent.Relationships.Data, &v37, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    v13 = v38;
    v14 = v38[2];
    v36 = v7;
    if (v14)
    {
      v31 = v11;
      v33 = v5;
      v34 = v4;
      v35 = 0;
      v38 = _swiftEmptyArrayStorage;
      v32 = v13;
      sub_1002F93A8(0, v14, 0);
      v8 = v38;
      v15 = v32 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v38 = v8;
        v19 = v8[2];
        v18 = v8[3];
        swift_bridgeObjectRetain();
        if (v19 >= v18 >> 1)
        {
          sub_1002F93A8((char *)(v18 > 1), v19 + 1, 1);
          v8 = v38;
        }
        v15 += 2;
        v8[2] = v19 + 1;
        v20 = &v8[2 * v19];
        v20[4] = v16;
        v20[5] = v17;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v4 = v34;
      v2 = v35;
      v5 = v33;
      v7 = v36;
      v11 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
      v8 = _swiftEmptyArrayStorage;
    }
    v37 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for ShazamEvent.Relationships.Data, &v37, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      sub_100011758(a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v38;
      v22 = v38[2];
      if (v22)
      {
        v33 = v5;
        v34 = v4;
        v35 = 0;
        v38 = _swiftEmptyArrayStorage;
        sub_1002F93A8(0, v22, 0);
        v23 = v38;
        v32 = v21;
        v24 = v21 + 5;
        do
        {
          v25 = *(v24 - 1);
          v26 = *v24;
          v38 = v23;
          v28 = v23[2];
          v27 = v23[3];
          swift_bridgeObjectRetain();
          if (v28 >= v27 >> 1)
          {
            sub_1002F93A8((char *)(v27 > 1), v28 + 1, 1);
            v23 = v38;
          }
          v24 += 2;
          v23[2] = v28 + 1;
          v29 = &v23[2 * v28];
          v29[4] = v25;
          v29[5] = v26;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        v4 = v34;
        v5 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v36, v4);
      swift_bridgeObjectRetain();
      sub_100011758(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v8;
}

_QWORD *sub_100350078(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v3 = sub_10000B4C8(&qword_10055B720);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10000D900(a1, v7);
  v10 = sub_100351DBC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.CodingKeys, v10, v7, v8);
  if (v1)
  {
    sub_100011758(a1);
  }
  else
  {
    v11 = sub_10000B4C8(&qword_10055B730);
    v12 = sub_100038110(&qword_10055B738, &qword_10055B730, (uint64_t (*)(void))sub_100351E00, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v16;
    sub_100011758(a1);
  }
  return v9;
}

uint64_t sub_1003501C4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    v7 = 0xEA00000000007365;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease(0xED00007370696873);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974616C6572, 0xED00007370696873, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_100350330(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100518D18, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100350378@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v5 = sub_10000B4C8(&qword_10055B660);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_100351710();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.CodingKeys, &type metadata for VenueElement.Attributes.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  LOBYTE(v39) = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v39, v5);
  v14 = v13;
  v38 = v12;
  v47 = 1;
  v15 = sub_100351754();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, &type metadata for VenueElement.Attributes.StructuredAddress, &v47, v5, &type metadata for VenueElement.Attributes.StructuredAddress, v15);
  v16 = v40;
  v32 = v39;
  v33 = v14;
  v17 = v42;
  v18 = v44;
  v30 = v43;
  v31 = v41;
  v29 = v45;
  v37 = v46;
  v47 = 2;
  v19 = sub_100351798();
  v36 = v16;
  swift_bridgeObjectRetain();
  v35 = v17;
  swift_bridgeObjectRetain();
  v34 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, &type metadata for VenueElement.Attributes.Geo, &v47, v5, &type metadata for VenueElement.Attributes.Geo, v19);
  v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v39, v40);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v21 = v33;
  swift_bridgeObjectRetain();
  v22 = v20;
  swift_bridgeObjectRelease();
  sub_100011758(a1);

  v23 = v37;
  swift_bridgeObjectRelease();
  v24 = v34;
  swift_bridgeObjectRelease();
  v25 = v35;
  swift_bridgeObjectRelease();
  v26 = v36;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v38;
  a2[1] = v21;
  *((double *)a2 + 2) = v32;
  *((double *)a2 + 3) = v26;
  a2[4] = v31;
  a2[5] = v25;
  a2[6] = v30;
  a2[7] = v24;
  a2[8] = v29;
  a2[9] = v23;
  a2[10] = (uint64_t)v22;
  return result;
}

uint64_t sub_1003506D4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000100453070)
  {
    swift_bridgeObjectRelease(0x8000000100453070);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100453070, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_100350758@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v5 = sub_10000B4C8(&qword_10055B6F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_100351CF0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  v12 = sub_100351D34();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v21, &type metadata for Razzmatazz.Venue.Address, v13, v5, &type metadata for Razzmatazz.Venue.Address, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v21[1];
  v20 = v21[0];
  v18 = v21[2];
  v14 = v22;
  v15 = v23;
  result = sub_100011758(a1);
  v17 = v19;
  *(_OWORD *)a2 = v20;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1003508AC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 7627116 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7627116, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(6778476, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_10035097C(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v13;
  char v14;
  char v15;

  v4 = sub_10000B4C8(&qword_10055B710);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_10000D900(a1, v8);
  v10 = sub_100351D78();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.Geo.CodingKeys, &type metadata for VenueElement.Attributes.Geo.CodingKeys, v10, v8, v9);
  if (!v1)
  {
    v15 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v15, v4);
    v2 = v11;
    v14 = 1;
    KeyedDecodingContainer.decode(_:forKey:)(&v14, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100011758(a1);
  return v2;
}

uint64_t sub_100350AD4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease(0xEA00000000007365);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100350BB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[11];
  char v34;

  v5 = sub_10000B4C8(&qword_10055B578);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_100350E24();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.CodingKeys, &type metadata for VenueElement.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  LOBYTE(v33[0]) = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(v33, v5);
  v14 = v13;
  v34 = 1;
  v15 = sub_100350E68();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v33, &type metadata for VenueElement.Attributes, &v34, v5, &type metadata for VenueElement.Attributes, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v30 = v33[2];
  v31 = v33[0];
  v25 = v33[3];
  v26 = v33[1];
  v16 = v33[5];
  v28 = v33[6];
  v29 = v33[4];
  v32 = v33[7];
  v17 = v33[9];
  v27 = v33[8];
  v18 = (void *)v33[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v18;
  swift_bridgeObjectRetain();
  v20 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100011758(a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v26;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v31;
  a2[3] = v21;
  a2[4] = v30;
  a2[5] = v20;
  a2[6] = v29;
  a2[7] = v16;
  v23 = v32;
  a2[8] = v28;
  a2[9] = v23;
  a2[10] = v27;
  a2[11] = v17;
  a2[12] = (uint64_t)v19;
  return result;
}

unint64_t sub_100350E24()
{
  unint64_t result;

  result = qword_10055B580;
  if (!qword_10055B580)
  {
    result = swift_getWitnessTable(asc_10043DAE4, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B580);
  }
  return result;
}

unint64_t sub_100350E68()
{
  unint64_t result;

  result = qword_10055B588;
  if (!qword_10055B588)
  {
    result = swift_getWitnessTable(byte_10043DABC, &type metadata for VenueElement.Attributes);
    atomic_store(result, (unint64_t *)&qword_10055B588);
  }
  return result;
}

unint64_t sub_100350EAC()
{
  unint64_t result;

  result = qword_10055B598;
  if (!qword_10055B598)
  {
    result = swift_getWitnessTable(byte_10043DA6C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B598);
  }
  return result;
}

unint64_t sub_100350EF0()
{
  unint64_t result;

  result = qword_10055B5A8;
  if (!qword_10055B5A8)
  {
    result = swift_getWitnessTable(byte_10043DA44, &type metadata for ShazamEvent.Relationships);
    atomic_store(result, (unint64_t *)&qword_10055B5A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.CodingKeys()
{
  return &type metadata for ShazamEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.CodingKeys()
{
  return &type metadata for VenueElement.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time()
{
  return &type metadata for ShazamEvent.Attributes.Time;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for Root.CodingKeys()
{
  return &type metadata for Root.CodingKeys;
}

void destroy for VenueElement.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

}

_QWORD *initializeWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = (void *)a2[10];
  a1[10] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v8;
  return a1;
}

_QWORD *assignWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = (void *)a2[10];
  v10 = (void *)a1[10];
  a1[10] = v9;
  v11 = v9;

  return a1;
}

_QWORD *assignWithTake for VenueElement.Attributes(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(a1[9]);
  v12 = (void *)a1[10];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes()
{
  return &type metadata for VenueElement.Attributes;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships()
{
  return &type metadata for ShazamEvent.Relationships;
}

ValueMetadata *type metadata accessor for Resources()
{
  return &type metadata for Resources;
}

unint64_t sub_1003511F8()
{
  unint64_t result;

  result = qword_10055B5B0;
  if (!qword_10055B5B0)
  {
    result = swift_getWitnessTable(aM_12, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5B0);
  }
  return result;
}

unint64_t sub_100351240()
{
  unint64_t result;

  result = qword_10055B5B8;
  if (!qword_10055B5B8)
  {
    result = swift_getWitnessTable(asc_10043D8AC, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5B8);
  }
  return result;
}

unint64_t sub_100351288()
{
  unint64_t result;

  result = qword_10055B5C0;
  if (!qword_10055B5C0)
  {
    result = swift_getWitnessTable(byte_10043D964, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5C0);
  }
  return result;
}

unint64_t sub_1003512D0()
{
  unint64_t result;

  result = qword_10055B5C8;
  if (!qword_10055B5C8)
  {
    result = swift_getWitnessTable(asc_10043DA1C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5C8);
  }
  return result;
}

unint64_t sub_100351318()
{
  unint64_t result;

  result = qword_10055B5D0;
  if (!qword_10055B5D0)
  {
    result = swift_getWitnessTable(asc_10043D98C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5D0);
  }
  return result;
}

unint64_t sub_100351360()
{
  unint64_t result;

  result = qword_10055B5D8;
  if (!qword_10055B5D8)
  {
    result = swift_getWitnessTable(asc_10043D9B4, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5D8);
  }
  return result;
}

unint64_t sub_1003513A8()
{
  unint64_t result;

  result = qword_10055B5E0;
  if (!qword_10055B5E0)
  {
    result = swift_getWitnessTable(byte_10043D8D4, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5E0);
  }
  return result;
}

unint64_t sub_1003513F0()
{
  unint64_t result;

  result = qword_10055B5E8;
  if (!qword_10055B5E8)
  {
    result = swift_getWitnessTable(byte_10043D8FC, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5E8);
  }
  return result;
}

unint64_t sub_100351438()
{
  unint64_t result;

  result = qword_10055B5F0;
  if (!qword_10055B5F0)
  {
    result = swift_getWitnessTable(byte_10043D7E4, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5F0);
  }
  return result;
}

unint64_t sub_100351480()
{
  unint64_t result;

  result = qword_10055B5F8;
  if (!qword_10055B5F8)
  {
    result = swift_getWitnessTable(byte_10043D80C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B5F8);
  }
  return result;
}

unint64_t sub_1003514C8()
{
  unint64_t result;

  result = qword_10055B600;
  if (!qword_10055B600)
  {
    result = swift_getWitnessTable(byte_10043D72C, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B600);
  }
  return result;
}

unint64_t sub_100351510()
{
  unint64_t result;

  result = qword_10055B608;
  if (!qword_10055B608)
  {
    result = swift_getWitnessTable(aM_13, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B608);
  }
  return result;
}

unint64_t sub_100351554()
{
  unint64_t result;

  result = qword_10055B618;
  if (!qword_10055B618)
  {
    result = swift_getWitnessTable(byte_10043E134, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B618);
  }
  return result;
}

unint64_t sub_100351598()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055B628;
  if (!qword_10055B628)
  {
    v1 = sub_100011650(&qword_10055B620);
    v2[0] = &protocol witness table for String;
    v2[1] = sub_10001254C(&qword_10055B630, type metadata accessor for ShazamEvent, (uint64_t)&unk_10043D5DC);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> [A : B], v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055B628);
  }
  return result;
}

unint64_t sub_10035161C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055B640;
  if (!qword_10055B640)
  {
    v1 = sub_100011650(&qword_10055B638);
    v2[0] = &protocol witness table for String;
    v2[1] = sub_100351688();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> [A : B], v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055B640);
  }
  return result;
}

unint64_t sub_100351688()
{
  unint64_t result;

  result = qword_10055B648;
  if (!qword_10055B648)
  {
    result = swift_getWitnessTable(aE_2, &type metadata for VenueElement);
    atomic_store(result, (unint64_t *)&qword_10055B648);
  }
  return result;
}

unint64_t sub_1003516CC()
{
  unint64_t result;

  result = qword_10055B658;
  if (!qword_10055B658)
  {
    result = swift_getWitnessTable(asc_10043E0E4, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B658);
  }
  return result;
}

unint64_t sub_100351710()
{
  unint64_t result;

  result = qword_10055B668;
  if (!qword_10055B668)
  {
    result = swift_getWitnessTable(asc_10043E094, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B668);
  }
  return result;
}

unint64_t sub_100351754()
{
  unint64_t result;

  result = qword_10055B670;
  if (!qword_10055B670)
  {
    result = swift_getWitnessTable(byte_10043E06C, &type metadata for VenueElement.Attributes.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_10055B670);
  }
  return result;
}

unint64_t sub_100351798()
{
  unint64_t result;

  result = qword_10055B678;
  if (!qword_10055B678)
  {
    result = swift_getWitnessTable(byte_10043E044, &type metadata for VenueElement.Attributes.Geo);
    atomic_store(result, (unint64_t *)&qword_10055B678);
  }
  return result;
}

unint64_t sub_1003517DC()
{
  unint64_t result;

  result = qword_10055B688;
  if (!qword_10055B688)
  {
    result = swift_getWitnessTable(byte_10043DFF4, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B688);
  }
  return result;
}

unint64_t sub_100351820()
{
  unint64_t result;

  result = qword_10055B690;
  if (!qword_10055B690)
  {
    result = swift_getWitnessTable(asc_10043DFCC, &type metadata for ShazamEvent.Relationships.Data);
    atomic_store(result, (unint64_t *)&qword_10055B690);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data()
{
  return &type metadata for ShazamEvent.Relationships.Data;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo()
{
  return &type metadata for VenueElement.Attributes.Geo;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress;
}

uint64_t _s11MusicCoreUI11ShazamEventV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003518F0 + 4 * byte_10043D2A3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100351924 + 4 * byte_10043D29E[v4]))();
}

uint64_t sub_100351924(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035192C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100351934);
  return result;
}

uint64_t sub_100351940(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100351948);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10035194C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100351954(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.Time.CodingKeys;
}

ValueMetadata *type metadata accessor for Resources.CodingKeys()
{
  return &type metadata for Resources.CodingKeys;
}

unint64_t sub_100351994()
{
  unint64_t result;

  result = qword_10055B698;
  if (!qword_10055B698)
  {
    result = swift_getWitnessTable(byte_10043DD0C, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B698);
  }
  return result;
}

unint64_t sub_1003519DC()
{
  unint64_t result;

  result = qword_10055B6A0;
  if (!qword_10055B6A0)
  {
    result = swift_getWitnessTable(aE_3, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6A0);
  }
  return result;
}

unint64_t sub_100351A24()
{
  unint64_t result;

  result = qword_10055B6A8;
  if (!qword_10055B6A8)
  {
    result = swift_getWitnessTable(aU_6, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6A8);
  }
  return result;
}

unint64_t sub_100351A6C()
{
  unint64_t result;

  result = qword_10055B6B0;
  if (!qword_10055B6B0)
  {
    result = swift_getWitnessTable(byte_10043DFA4, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6B0);
  }
  return result;
}

unint64_t sub_100351AB4()
{
  unint64_t result;

  result = qword_10055B6B8;
  if (!qword_10055B6B8)
  {
    result = swift_getWitnessTable(byte_10043DEDC, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6B8);
  }
  return result;
}

unint64_t sub_100351AFC()
{
  unint64_t result;

  result = qword_10055B6C0;
  if (!qword_10055B6C0)
  {
    result = swift_getWitnessTable(byte_10043DF04, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6C0);
  }
  return result;
}

unint64_t sub_100351B44()
{
  unint64_t result;

  result = qword_10055B6C8;
  if (!qword_10055B6C8)
  {
    result = swift_getWitnessTable(byte_10043DDEC, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6C8);
  }
  return result;
}

unint64_t sub_100351B8C()
{
  unint64_t result;

  result = qword_10055B6D0;
  if (!qword_10055B6D0)
  {
    result = swift_getWitnessTable(byte_10043DE14, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6D0);
  }
  return result;
}

unint64_t sub_100351BD4()
{
  unint64_t result;

  result = qword_10055B6D8;
  if (!qword_10055B6D8)
  {
    result = swift_getWitnessTable(asc_10043DD34, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6D8);
  }
  return result;
}

unint64_t sub_100351C1C()
{
  unint64_t result;

  result = qword_10055B6E0;
  if (!qword_10055B6E0)
  {
    result = swift_getWitnessTable(aE_4, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6E0);
  }
  return result;
}

unint64_t sub_100351C64()
{
  unint64_t result;

  result = qword_10055B6E8;
  if (!qword_10055B6E8)
  {
    result = swift_getWitnessTable(aM_14, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6E8);
  }
  return result;
}

unint64_t sub_100351CAC()
{
  unint64_t result;

  result = qword_10055B6F0;
  if (!qword_10055B6F0)
  {
    result = swift_getWitnessTable(aU_7, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B6F0);
  }
  return result;
}

unint64_t sub_100351CF0()
{
  unint64_t result;

  result = qword_10055B700;
  if (!qword_10055B700)
  {
    result = swift_getWitnessTable(aQ_5, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B700);
  }
  return result;
}

unint64_t sub_100351D34()
{
  unint64_t result;

  result = qword_10055B708;
  if (!qword_10055B708)
  {
    result = swift_getWitnessTable(byte_10043D148, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_10055B708);
  }
  return result;
}

unint64_t sub_100351D78()
{
  unint64_t result;

  result = qword_10055B718;
  if (!qword_10055B718)
  {
    result = swift_getWitnessTable(byte_10043E450, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B718);
  }
  return result;
}

unint64_t sub_100351DBC()
{
  unint64_t result;

  result = qword_10055B728;
  if (!qword_10055B728)
  {
    result = swift_getWitnessTable(byte_10043E400, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B728);
  }
  return result;
}

unint64_t sub_100351E00()
{
  unint64_t result;

  result = qword_10055B740;
  if (!qword_10055B740)
  {
    result = swift_getWitnessTable(aQ_6, &type metadata for ShazamEvent.Relationships.Data.ID);
    atomic_store(result, (unint64_t *)&qword_10055B740);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.CodingKeys;
}

uint64_t _s11MusicCoreUI12VenueElementV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100351EA0 + 4 * byte_10043D2AD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100351ED4 + 4 * byte_10043D2A8[v4]))();
}

uint64_t sub_100351ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100351EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100351EE4);
  return result;
}

uint64_t sub_100351EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100351EF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100351EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100351F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.Geo.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID;
}

unint64_t sub_100351F44()
{
  unint64_t result;

  result = qword_10055B748;
  if (!qword_10055B748)
  {
    result = swift_getWitnessTable(byte_10043E240, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B748);
  }
  return result;
}

unint64_t sub_100351F8C()
{
  unint64_t result;

  result = qword_10055B750;
  if (!qword_10055B750)
  {
    result = swift_getWitnessTable(a1_0, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B750);
  }
  return result;
}

unint64_t sub_100351FD4()
{
  unint64_t result;

  result = qword_10055B758;
  if (!qword_10055B758)
  {
    result = swift_getWitnessTable(aY_27, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B758);
  }
  return result;
}

unint64_t sub_10035201C()
{
  unint64_t result;

  result = qword_10055B760;
  if (!qword_10055B760)
  {
    result = swift_getWitnessTable(byte_10043E320, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B760);
  }
  return result;
}

unint64_t sub_100352064()
{
  unint64_t result;

  result = qword_10055B768;
  if (!qword_10055B768)
  {
    result = swift_getWitnessTable(aY_28, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B768);
  }
  return result;
}

unint64_t sub_1003520AC()
{
  unint64_t result;

  result = qword_10055B770;
  if (!qword_10055B770)
  {
    result = swift_getWitnessTable(aI_4, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B770);
  }
  return result;
}

unint64_t sub_1003520F4()
{
  unint64_t result;

  result = qword_10055B778;
  if (!qword_10055B778)
  {
    result = swift_getWitnessTable(a1_1, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B778);
  }
  return result;
}

unint64_t sub_10035213C()
{
  unint64_t result;

  result = qword_10055B780;
  if (!qword_10055B780)
  {
    result = swift_getWitnessTable(byte_10043E1B0, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B780);
  }
  return result;
}

unint64_t sub_100352184()
{
  unint64_t result;

  result = qword_10055B788;
  if (!qword_10055B788)
  {
    result = swift_getWitnessTable(byte_10043E1D8, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B788);
  }
  return result;
}

unint64_t sub_1003521C8()
{
  unint64_t result;

  result = qword_10055B798;
  if (!qword_10055B798)
  {
    result = swift_getWitnessTable(aI_5, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B798);
  }
  return result;
}

uint64_t _s11MusicCoreUI4RootV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10035224C + 4 * byte_10043D2B2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10035226C + 4 * byte_10043D2B7[v4]))();
}

_BYTE *sub_10035224C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10035226C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100352274(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10035227C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100352284(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10035228C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys;
}

unint64_t sub_1003522AC()
{
  unint64_t result;

  result = qword_10055B7A8;
  if (!qword_10055B7A8)
  {
    result = swift_getWitnessTable(byte_10043E580, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B7A8);
  }
  return result;
}

unint64_t sub_1003522F4()
{
  unint64_t result;

  result = qword_10055B7B0;
  if (!qword_10055B7B0)
  {
    result = swift_getWitnessTable(byte_10043E4F0, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B7B0);
  }
  return result;
}

unint64_t sub_10035233C()
{
  unint64_t result;

  result = qword_10055B7B8;
  if (!qword_10055B7B8)
  {
    result = swift_getWitnessTable(byte_10043E518, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055B7B8);
  }
  return result;
}

uint64_t RazzmatazzDetailView.init(razzmatazz:noticePresenter:navigateToArtistHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  _QWORD *v10;

  sub_10000DB44(a1, a5, type metadata accessor for Razzmatazz);
  result = type metadata accessor for RazzmatazzDetailView(0);
  *(_QWORD *)(a5 + *(int *)(result + 20)) = a2;
  v10 = (_QWORD *)(a5 + *(int *)(result + 24));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for RazzmatazzDetailView(uint64_t a1)
{
  uint64_t result;

  result = qword_10055B830;
  if (!qword_10055B830)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzDetailView);
  return result;
}

uint64_t RazzmatazzDetailView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_10000B4C8(&qword_10055B7C8);
  v1 = sub_100012324(&qword_10055B7D0, &qword_10055B7C8, (const char *)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_100352A84, &v3, v0, v1);
}

uint64_t sub_100352494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  unint64_t v72;

  v56 = a2;
  v59 = sub_10000B4C8(&qword_10055B8B8);
  v69 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (char *)&v53 - v4;
  v57 = sub_10000B4C8(&qword_10055B8C0);
  v66 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v6;
  v55 = sub_10000B4C8(&qword_10055B8C8);
  v63 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v53 - v8;
  sub_10000B4C8(&qword_10055B8D0);
  __chkstk_darwin();
  v62 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v53 - v11;
  v13 = Razzmatazz.shortName.getter();
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v61 = v12;
  if (v13 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      __chkstk_darwin();
      *(&v53 - 2) = a1;
      Section<>.init(content:)(sub_1003567E8);
      v19 = sub_10000B4C8(&qword_10055B8D8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
      goto LABEL_7;
    }
  }
  v18 = sub_10000B4C8(&qword_10055B8D8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
LABEL_7:
  v71 = 1702125892;
  v72 = 0xE400000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v20 = sub_10000B4C8(&qword_10055B8E0);
  v21 = sub_100012324(&qword_10055B8E8, &qword_10055B8E0, (const char *)&protocol conformance descriptor for VStack<A>);
  v54 = sub_1002EB09C();
  Section<>.init<A>(_:content:)(&v71, sub_1003567F0, &v53 - 4, v20, &type metadata for String, v21, v54);
  v22 = LocalizedStringKey.init(stringLiteral:)(0x747369747241, 0xE600000000000000);
  v24 = v23;
  LOBYTE(v20) = v25;
  v27 = v26;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v60 = v9;
  v28 = sub_10000B4C8(&qword_10055B8F0);
  v29 = sub_100012324(&qword_10055B8F8, &qword_10055B8F0, (const char *)&protocol conformance descriptor for HStack<A>);
  v30 = v64;
  Section<>.init(_:content:)(v22, v24, v20 & 1, v27, sub_100356820, &v53 - 4, v28, v29);
  v71 = 0x6E6F697461636F4CLL;
  v72 = 0xE800000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v31 = sub_10000B4C8(&qword_10055B900);
  v32 = sub_100011650(&qword_10055B908);
  v33 = sub_100356858();
  v70[0] = v32;
  v70[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v70, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v35 = v67;
  Section<>.init<A>(_:content:)(&v71, sub_100356850, &v53 - 4, v31, &type metadata for String, OpaqueTypeConformance2, v54);
  v36 = v62;
  sub_100011370((uint64_t)v61, v62, &qword_10055B8D0);
  v37 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v38 = v65;
  v39 = v55;
  v37(v65, v60, v55);
  v40 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v41 = v57;
  v40(v68, v30, v57);
  v42 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v43 = v58;
  v44 = v35;
  v45 = v59;
  v42(v58, v44, v59);
  v46 = v56;
  sub_100011370(v36, v56, &qword_10055B8D0);
  v47 = (int *)sub_10000B4C8(&qword_10055B930);
  v37((char *)(v46 + v47[12]), v38, v39);
  v48 = v68;
  v40((char *)(v46 + v47[16]), v68, v41);
  v42((char *)(v46 + v47[20]), v43, v45);
  v49 = *(void (**)(char *, uint64_t))(v69 + 8);
  v49(v67, v45);
  v50 = *(void (**)(char *, uint64_t))(v66 + 8);
  v50(v64, v41);
  v51 = *(void (**)(char *, uint64_t))(v63 + 8);
  v51(v60, v39);
  sub_100011694((uint64_t)v61, &qword_10055B8D0);
  v49(v43, v45);
  v50(v48, v41);
  v51(v65, v39);
  return sub_100011694(v62, &qword_10055B8D0);
}

uint64_t sub_100352A84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100352494(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100352A8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzDetailView.body>>, 1);
}

uint64_t sub_100352A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[2];

  v3 = *(_QWORD *)(a1 + 24);
  v20[0] = *(_QWORD *)(a1 + 16);
  v20[1] = v3;
  v4 = sub_1002EB09C();
  swift_bridgeObjectRetain();
  v5 = Text.init<A>(_:)(v20, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v20[0]) = static HierarchicalShapeStyle.secondary.getter(v5);
  v12 = Text.foregroundStyle<A>(_:)(v20, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10001DA20(v5, v7, v11);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  return result;
}

uint64_t sub_100352B84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t OpaqueTypeConformance2;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  uint64_t (*v107)(char *);
  char *v108;
  unint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  _QWORD *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  char *v156;

  v114 = a2;
  v137 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v138 = *(_QWORD *)(v137 + 64);
  __chkstk_darwin();
  v136 = (uint64_t)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10000B4C8(&qword_10055B960);
  v146 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin();
  v139 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v145 = (char *)&v102 - v5;
  v135 = type metadata accessor for Date.FormatStyle.Symbol.Minute(0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin();
  v133 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin();
  v128 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for Date.FormatStyle.Symbol.Hour(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin();
  v127 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin();
  v123 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for Date.FormatStyle.Symbol.Month(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v119 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for Date.FormatStyle.Symbol.Day(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin();
  v116 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date.FormatStyle.Symbol.Weekday(0);
  v143 = *(_QWORD *)(v12 - 8);
  v144 = v12;
  __chkstk_darwin();
  v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for TimeZone(0);
  v15 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin();
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date.FormatStyle(0);
  v142 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v108 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v112 = (char *)&v102 - v20;
  __chkstk_darwin();
  v113 = (char *)&v102 - v21;
  __chkstk_darwin();
  v115 = (char *)&v102 - v22;
  __chkstk_darwin();
  v24 = (char *)&v102 - v23;
  __chkstk_darwin();
  v102 = (char *)&v102 - v25;
  v26 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Razzmatazz(0);
  v31 = *(int *)(v30 + 24);
  v124 = a1;
  v106 = a1 + v31;
  v107 = *(uint64_t (**)(char *))(v27 + 16);
  v32 = v107(v29);
  static ParseableFormatStyle<>.dateTime.getter(v32);
  v33 = a1 + *(int *)(v30 + 32);
  v104 = v33 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v105 = *(void (**)(char *))(v15 + 16);
  v103 = v17;
  v105(v17);
  v34 = Date.FormatStyle.timeZone.setter(v17);
  static Date.FormatStyle.Symbol.Weekday.wide.getter(v34);
  v35 = v102;
  Date.FormatStyle.weekday(_:)(v14);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v14, v144);
  v36 = *(void (**)(char *, uint64_t))(v142 + 8);
  v36(v24, v18);
  v111 = sub_10001254C(&qword_10055ACF8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v151, v35, v18, v111);
  v36(v35, v18);
  v110 = *(void (**)(char *, uint64_t))(v27 + 8);
  v37 = v26;
  v110(v29, v26);
  v147 = (uint64_t)v151;
  v148 = v152;
  v109 = sub_1002EB09C();
  v38 = Text.init<A>(_:)(&v147, &type metadata for String, v109);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  LODWORD(v151) = static HierarchicalShapeStyle.secondary.getter(v38);
  v45 = Text.foregroundStyle<A>(_:)(&v151, v38, v40, v44, v42, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v143 = v46;
  v144 = v45;
  v122 = v47;
  LODWORD(v142) = v48 & 1;
  sub_10001DA20(v38, v40, v44);
  swift_bridgeObjectRelease();
  v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v107)(v29, v106, v37);
  v50 = v108;
  static ParseableFormatStyle<>.dateTime.getter(v49);
  v51 = v103;
  ((void (*)(char *, uint64_t, uint64_t))v105)(v103, v104, v141);
  v52 = Date.FormatStyle.timeZone.setter(v51);
  v53 = v116;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v52);
  v54 = v112;
  Date.FormatStyle.day(_:)(v53);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v53, v118);
  v55 = ((uint64_t (*)(char *, uint64_t))v36)(v50, v18);
  v56 = v119;
  static Date.FormatStyle.Symbol.Month.wide.getter(v55);
  v57 = v113;
  Date.FormatStyle.month(_:)(v56);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v56, v121);
  v58 = ((uint64_t (*)(char *, uint64_t))v36)(v54, v18);
  v59 = v123;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v58);
  v60 = v115;
  Date.FormatStyle.year(_:)(v59);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v59, v126);
  v61 = ((uint64_t (*)(char *, uint64_t))v36)(v57, v18);
  v62 = v128;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter(v61);
  v63 = v127;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)(v62);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v62, v132);
  Date.FormatStyle.hour(_:)(v63);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v63, v130);
  v64 = ((uint64_t (*)(char *, uint64_t))v36)(v60, v18);
  v65 = v133;
  static Date.FormatStyle.Symbol.Minute.defaultDigits.getter(v64);
  Date.FormatStyle.minute(_:)(v65);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v65, v135);
  v36(v24, v18);
  Date.formatted<A>(_:)(&v151, v35, v18, v111);
  v36(v35, v18);
  v110(v29, v37);
  v147 = (uint64_t)v151;
  v148 = v152;
  v66 = Text.init<A>(_:)(&v147, &type metadata for String, v109);
  v68 = v67;
  v70 = v69;
  v72 = v71 & 1;
  LODWORD(v151) = static HierarchicalShapeStyle.primary.getter(v66);
  v73 = Text.foregroundStyle<A>(_:)(&v151, v66, v68, v72, v70, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v135 = v74;
  v141 = v75;
  LODWORD(v134) = v76 & 1;
  sub_10001DA20(v66, v68, v72);
  v77 = swift_bridgeObjectRelease();
  v78 = static Alignment.center.getter(v77);
  _FrameLayout.init(width:height:alignment:)(&v151, 0, 1, 0x4024000000000000, 0, v78, v79);
  v133 = v151;
  LODWORD(v132) = v152;
  v131 = v153;
  LODWORD(v130) = v154;
  v129 = v155;
  v128 = v156;
  v80 = v136;
  sub_1003568F4(v124, v136);
  v81 = *(unsigned __int8 *)(v137 + 80);
  v82 = (v81 + 16) & ~v81;
  v83 = swift_allocObject(&unk_1005203A8, v82 + v138, v81 | 7);
  sub_10000DB44(v80, v83 + v82, type metadata accessor for RazzmatazzDetailView);
  v84 = sub_10000B4C8(&qword_10055B968);
  v85 = sub_100011650(&qword_10055B970);
  v86 = type metadata accessor for TitleAndIconLabelStyle(255);
  v87 = sub_100012324(&qword_10055B978, &qword_10055B970, (const char *)&protocol conformance descriptor for Label<A, B>);
  v88 = sub_10001254C(&qword_10055B980, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  v147 = v85;
  v148 = v86;
  v149 = v87;
  v150 = v88;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v90 = v145;
  Button.init(action:label:)(sub_100356B34, v83, sub_10035411C, 0, v84, OpaqueTypeConformance2);
  LOBYTE(v29) = v142;
  LOBYTE(v147) = v142;
  v91 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
  v93 = v139;
  v92 = v140;
  v91(v139, v90, v140);
  v95 = v143;
  v94 = v144;
  v96 = v114;
  *v114 = v144;
  v96[1] = v95;
  *((_BYTE *)v96 + 16) = (_BYTE)v29;
  v96[3] = v122;
  v96[4] = v73;
  v97 = v135;
  v96[5] = v135;
  LOBYTE(v87) = v134;
  *((_BYTE *)v96 + 48) = v134;
  v96[7] = v141;
  v96[8] = 0;
  *((_BYTE *)v96 + 72) = 1;
  v96[10] = v133;
  *((_BYTE *)v96 + 88) = v132;
  v96[12] = v131;
  *((_BYTE *)v96 + 104) = v130;
  v98 = v128;
  v96[14] = v129;
  v96[15] = v98;
  v99 = sub_10000B4C8(&qword_10055B988);
  v91((char *)v96 + *(int *)(v99 + 80), v93, v92);
  sub_10002EBA0(v94, v95, v142);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v73, v97, v87);
  v100 = *(void (**)(char *, uint64_t))(v146 + 8);
  swift_bridgeObjectRetain();
  v100(v145, v92);
  v100(v93, v92);
  sub_10001DA20(v73, v97, v87);
  swift_bridgeObjectRelease();
  sub_10001DA20(v144, v143, v147);
  return swift_bridgeObjectRelease();
}

void sub_100353748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = objc_msgSend(objc_allocWithZone((Class)EKEventStore), "init");
  sub_1003568F4(a1, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(unsigned __int8 *)(v2 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = swift_allocObject(&unk_1005203D0, v6 + v3, v5 | 7);
  *(_QWORD *)(v7 + 16) = v4;
  sub_10000DB44((uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for RazzmatazzDetailView);
  aBlock[4] = sub_100356CD8;
  v12 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10016CABC;
  aBlock[3] = &unk_1005203E8;
  v8 = _Block_copy(aBlock);
  v9 = v12;
  v10 = v4;
  objc_msgSend(v10, "requestWriteOnlyAccessToEventsWithCompletion:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

}

void sub_100353890(char a1, void *a2, void *a3, uint64_t a4)
{
  Class isa;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  NSString v16;
  uint64_t v17;
  Class v18;
  __n128 v19;
  Class v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  unsigned int v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t isa_low;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  id v63;
  _OWORD v64[4];

  v61 = *(NSObject **)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  isa = v61[8].isa;
  __chkstk_darwin();
  sub_10000B4C8(&qword_10055A300);
  __chkstk_darwin();
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v59 = v10;
    v60 = (uint64_t)&v59 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
    v15 = objc_msgSend((id)objc_opt_self(EKEvent), "eventWithEventStore:", a3);
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setTitle:", v16);

    v17 = type metadata accessor for Razzmatazz(0);
    v18 = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "setStartDate:", v18);

    v19.n128_u64[0] = 0x40BC200000000000;
    Date.addingTimeInterval(_:)(v19);
    v20 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    objc_msgSend(v15, "setEndDate:", v20);

    v21 = (_OWORD *)(a4 + *(int *)(v17 + 32));
    v22 = v21[3];
    v64[0] = v21[2];
    v64[1] = v22;
    v23 = v21[5];
    v64[2] = v21[4];
    v64[3] = v23;
    v24 = v15;
    sub_1003440A0(0);
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, "setLocation:", v25);

    v26 = v24;
    v27 = objc_msgSend(a3, "defaultCalendarForNewEvents");
    objc_msgSend(v26, "setCalendar:", v27);

    v63 = 0;
    v28 = objc_msgSend(a3, "saveEvent:span:error:", v26, 0, &v63);
    v29 = v63;
    if (v28)
    {
      v30 = type metadata accessor for TaskPriority(0);
      v31 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v59, 1, 1, v30);
      v32 = a4;
      v33 = v60;
      sub_1003568F4(v32, v60);
      type metadata accessor for MainActor(0);
      v34 = static MainActor.shared.getter(v29);
      isa_low = LOBYTE(v61[10].isa);
      v36 = (isa_low + 32) & ~isa_low;
      v37 = swift_allocObject(&unk_100520420, (char *)isa + v36, isa_low | 7);
      *(_QWORD *)(v37 + 16) = v34;
      *(_QWORD *)(v37 + 24) = &protocol witness table for MainActor;
      sub_10000DB44(v33, v37 + v36, type metadata accessor for RazzmatazzDetailView);
      v38 = sub_100323D00(v31, (uint64_t)&unk_10055B998, v37);
      swift_release(v38);

    }
    else
    {
      v47 = v63;
      v48 = _convertNSErrorToError(_:)(v29);

      swift_willThrow(v49);
      if (qword_100557F08 != -1)
        swift_once(&qword_100557F08, sub_10034B0A4);
      v50 = type metadata accessor for Logger(0);
      sub_10000D78C(v50, (uint64_t)qword_100563468);
      swift_errorRetain(v48);
      v51 = swift_errorRetain(v48);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.error.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc(12, -1);
        v55 = (void *)swift_slowAlloc(32, -1);
        v63 = v55;
        *(_DWORD *)v54 = 136315138;
        v62 = v48;
        swift_errorRetain(v48);
        v56 = sub_10000B4C8(&qword_1005593C0);
        v57 = (char *)String.init<A>(describing:)(&v62, v56);
        *(_QWORD *)(v54 + 4) = sub_1002E9B3C(v57, v58, (uint64_t *)&v63);
        swift_bridgeObjectRelease();
        swift_errorRelease(v48);
        swift_errorRelease(v48);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to save event: %s", (uint8_t *)v54, 0xCu);
        swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1, -1);
        swift_slowDealloc(v54, -1, -1);

        swift_errorRelease(v48);
      }
      else
      {

        swift_errorRelease(v48);
        swift_errorRelease(v48);
        swift_errorRelease(v48);

      }
    }
  }
  else
  {
    if (qword_100557F08 != -1)
      swift_once(&qword_100557F08, sub_10034B0A4);
    v39 = type metadata accessor for Logger(0);
    sub_10000D78C(v39, (uint64_t)qword_100563468);
    swift_errorRetain(a2);
    v40 = swift_errorRetain(a2);
    v61 = Logger.logObject.getter(v40);
    v41 = static os_log_type_t.error.getter(v61);
    if (os_log_type_enabled(v61, v41))
    {
      v42 = swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v63 = a2;
      *(_QWORD *)&v64[0] = v43;
      *(_DWORD *)v42 = 136315138;
      swift_errorRetain(a2);
      v44 = sub_10000B4C8((uint64_t *)&unk_10055F510);
      v45 = (char *)String.init<A>(describing:)(&v63, v44);
      *(_QWORD *)(v42 + 4) = sub_1002E9B3C(v45, v46, (uint64_t *)v64);
      swift_bridgeObjectRelease();
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v61, v41, "No Calendar access: %s", (uint8_t *)v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
}

uint64_t sub_100353F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for UUID(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice(0);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100354000, v9, v10);
}

uint64_t sub_100354000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 20));
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD **)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v8 = UUID.uuidString.getter(v7);
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    Notice.init(id:symbol:message:headnote:link:hapticFeedback:)(v8, v10, 0x7261646E656C6163, 0xE800000000000000, 0xD000000000000011, 0x80000001004530E0, 0, 0, v4, 0, 0, 0, 0);
    _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v4, 0);
    sub_10000E750((uint64_t)v4, type metadata accessor for Notice);
  }
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 16) = v2 == 0;
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035411C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v0 = type metadata accessor for TitleAndIconLabelStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10055B970);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0x43206F7420646441;
  v13[1] = 0xEF7261646E656C61;
  v8 = sub_1002EB09C();
  v9 = Label<>.init<A>(_:systemImage:)(v13, 0xD000000000000013, 0x80000001004530C0, &type metadata for String, v8);
  TitleAndIconLabelStyle.init()(v9);
  v10 = sub_100012324(&qword_10055B978, &qword_10055B970, (const char *)&protocol conformance descriptor for Label<A, B>);
  v11 = sub_10001254C(&qword_10055B980, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)(v3, v4, v0, v10, v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1003542B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a2();
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 1;
  sub_10000B4C8(a3);
  return a4(a1);
}

uint64_t sub_10035430C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  __int16 v63;

  v55 = a2;
  v53 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v3 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8((uint64_t *)&unk_10055EC10);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_10000B4C8(&qword_10055B940);
  v10 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10000B4C8(&qword_10055D920);
  __chkstk_darwin();
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_10000B4C8(&qword_10055B948);
  __chkstk_darwin();
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v56 = (uint64_t)&v49 - v17;
  type metadata accessor for Razzmatazz(0);
  v54 = a1;
  sub_1002E65D0(v9);
  v18 = sub_10000B4C8(&qword_10055EC50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 6, 10, v18);
  if (qword_100557F10 != -1)
    swift_once(&qword_100557F10, sub_1003557E8);
  v58 = qword_10055B7C0;
  v59 = 0;
  v60 = qword_10055B7C0;
  v61 = 0;
  v62 = 0;
  v63 = 513;
  v19 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v53);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v9, (uint64_t)v7, (uint64_t)&v58, (uint64_t)v5, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  sub_10000E750((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  sub_100011694((uint64_t)v9, (uint64_t *)&unk_10055EC10);
  v20 = v52;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v52);
  v21 = &v14[*(int *)(v50 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  if (qword_100557EE0 != -1)
    swift_once(&qword_100557EE0, sub_1003367A4);
  v22 = static Border.artwork;
  v23 = qword_100563440;
  v24 = byte_100563448;
  sub_100011370((uint64_t)v14, (uint64_t)v16, &qword_10055D920);
  v25 = &v16[*(int *)(v51 + 36)];
  *(_QWORD *)v25 = v22;
  *((_QWORD *)v25 + 1) = v23;
  v25[16] = v24;
  *((_QWORD *)v25 + 3) = 0;
  *((_QWORD *)v25 + 4) = 0;
  v25[40] = 1;
  swift_retain(v22);
  sub_100011694((uint64_t)v14, &qword_10055D920);
  v26 = sub_100011530((uint64_t)v16, v56, &qword_10055B948);
  v57[0] = Artist.name.getter(v26);
  v57[1] = v27;
  v28 = sub_1002EB09C();
  v29 = Text.init<A>(_:)(v57, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v53 = v34;
  v35 = (uint64_t *)(v54 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 24));
  v36 = *v35;
  v37 = (uint64_t)v16;
  if (*v35)
  {
    v38 = v35[1];
    swift_retain(v38);
    sub_1000DB0D8(v36, v38);
    swift_release(v38);
    v39 = 1;
  }
  else
  {
    v39 = 0;
    v38 = 0;
  }
  v40 = v33 & 1;
  v41 = v56;
  v42 = v37;
  sub_100011370(v56, v37, &qword_10055B948);
  v43 = v37;
  v44 = v55;
  sub_100011370(v43, v55, &qword_10055B948);
  v45 = sub_10000B4C8(&qword_10055B950);
  v46 = v44 + *(int *)(v45 + 48);
  *(_QWORD *)v46 = v29;
  *(_QWORD *)(v46 + 8) = v31;
  *(_BYTE *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v53;
  v47 = (_QWORD *)(v44 + *(int *)(v45 + 64));
  *v47 = 0;
  v47[1] = v39;
  v47[2] = v36;
  v47[3] = v38;
  sub_10002EBA0(v29, v31, v40);
  swift_bridgeObjectRetain();
  sub_1003569BC(0, v39, v36, v38);
  sub_100011694(v41, &qword_10055B948);
  sub_1003569CC(0, v39, v36, v38);
  sub_10001DA20(v29, v31, v40);
  swift_bridgeObjectRelease();
  return sub_100011694(v42, &qword_10055B948);
}

uint64_t sub_100354814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  _OWORD v14[14];
  _OWORD v15[9];
  _OWORD v16[2];
  _OWORD v17[11];
  char v18;
  char v19;
  _OWORD v20[13];
  _OWORD v21[2];

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = __chkstk_darwin();
  v5 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = static HorizontalAlignment.leading.getter(v4);
  sub_100354A64(a1, (uint64_t)v15);
  *(_OWORD *)((char *)&v17[7] + 7) = v15[7];
  *(_OWORD *)((char *)&v17[8] + 7) = v15[8];
  *(_OWORD *)((char *)&v17[9] + 7) = v16[0];
  v17[10] = *(_OWORD *)((char *)v16 + 9);
  *(_OWORD *)((char *)&v17[3] + 7) = v15[3];
  *(_OWORD *)((char *)&v17[4] + 7) = v15[4];
  *(_OWORD *)((char *)&v17[5] + 7) = v15[5];
  *(_OWORD *)((char *)&v17[6] + 7) = v15[6];
  *(_OWORD *)((char *)v17 + 7) = v15[0];
  *(_OWORD *)((char *)&v17[1] + 7) = v15[1];
  v18 = 0;
  *(_OWORD *)((char *)&v17[2] + 7) = v15[2];
  if (qword_100557D50 != -1)
    swift_once(&qword_100557D50, sub_1002EA4C4);
  *(_OWORD *)((char *)&v14[7] + 1) = v17[7];
  *(_OWORD *)((char *)&v14[8] + 1) = v17[8];
  *(_OWORD *)((char *)&v14[9] + 1) = v17[9];
  *(_OWORD *)((char *)&v14[10] + 1) = v17[10];
  *(_OWORD *)((char *)&v14[3] + 1) = v17[3];
  *(_OWORD *)((char *)&v14[4] + 1) = v17[4];
  *(_OWORD *)((char *)&v14[5] + 1) = v17[5];
  *(_OWORD *)((char *)&v14[6] + 1) = v17[6];
  *(_OWORD *)((char *)v14 + 1) = v17[0];
  *(_OWORD *)((char *)&v14[1] + 1) = v17[1];
  *(_OWORD *)((char *)&v14[2] + 1) = v17[2];
  *(_OWORD *)((char *)&v14[11] + 8) = static EdgeInsets.zero;
  v19 = 0;
  v13 = (unint64_t)v6;
  LOBYTE(v14[0]) = 0;
  *(_OWORD *)((char *)&v14[12] + 8) = *(_OWORD *)&qword_1005628A8;
  BYTE8(v14[13]) = 0;
  sub_1003568F4(a1, (uint64_t)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_100520380, v8 + v3, v7 | 7);
  sub_10000DB44((uint64_t)v5, v9 + v8, type metadata accessor for RazzmatazzDetailView);
  v10 = sub_10000B4C8(&qword_10055B908);
  v11 = sub_100356858();
  View.onTapGesture(count:perform:)(1, sub_10035693C, v9, v10, v11);
  swift_release(v9);
  v20[12] = v14[11];
  v21[0] = v14[12];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)&v14[12] + 9);
  v20[8] = v14[7];
  v20[9] = v14[8];
  v20[10] = v14[9];
  v20[11] = v14[10];
  v20[4] = v14[3];
  v20[5] = v14[4];
  v20[6] = v14[5];
  v20[7] = v14[6];
  v20[0] = v13;
  v20[1] = v14[0];
  v20[2] = v14[1];
  v20[3] = v14[2];
  return sub_100356948((uint64_t)v20);
}

uint64_t sub_100354A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  double v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[4];
  char v56;
  _BYTE v57[7];
  _BYTE v58[7];
  char v59;
  _BYTE v60[7];
  char v61;
  char v62;

  v3 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v3 + 96), "coordinate");
  v5 = v4;
  v7 = v6;
  v46 = *(_QWORD *)(v3 + 24);
  v47 = *(_QWORD *)(v3 + 16);
  v49 = 0;
  swift_bridgeObjectRetain();
  v8 = sub_10000B4C8(&qword_100558BA0);
  v9 = State.init(wrappedValue:)(v55, &v49, v8);
  v45 = v55[0];
  v10 = static Alignment.center.getter(v9);
  _FrameLayout.init(width:height:alignment:)(&v49, 0, 1, 0x4069000000000000, 0, v10, v11);
  v12 = v50;
  v43 = v51;
  v44 = v49;
  v40 = v52;
  v41 = v54;
  v42 = v53;
  v13 = *(_OWORD *)(v3 + 48);
  v55[0] = *(_OWORD *)(v3 + 32);
  v55[1] = v13;
  v14 = *(_OWORD *)(v3 + 80);
  v55[2] = *(_OWORD *)(v3 + 64);
  v55[3] = v14;
  v48[0] = sub_1003440A0(0);
  v48[1] = v15;
  v16 = sub_1002EB09C();
  v17 = Text.init<A>(_:)(v48, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  LODWORD(v48[0]) = static HierarchicalShapeStyle.secondary.getter(v17);
  v24 = Text.foregroundStyle<A>(_:)(v48, v17, v19, v23, v21, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  sub_10001DA20(v17, v19, v23);
  v31 = swift_bridgeObjectRelease();
  LOBYTE(v23) = static Edge.Set.all.getter(v31);
  v32 = EdgeInsets.init(_all:)(8.0);
  v62 = v12;
  v61 = v40;
  v59 = v30;
  v56 = 0;
  *(_DWORD *)(a2 + 57) = v48[0];
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)v48 + 3);
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v60;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v60[3];
  v33 = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 113) = v33;
  v34 = *(_DWORD *)v57;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v57[3];
  *(_DWORD *)(a2 + 129) = v34;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v47;
  *(_QWORD *)(a2 + 24) = v46;
  *(_OWORD *)(a2 + 32) = v45;
  *(_QWORD *)(a2 + 48) = v44;
  *(_BYTE *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v43;
  *(_BYTE *)(a2 + 72) = v40;
  *(_QWORD *)(a2 + 80) = v42;
  *(_QWORD *)(a2 + 88) = v41;
  *(_QWORD *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v26;
  *(_BYTE *)(a2 + 112) = v30;
  *(_QWORD *)(a2 + 120) = v28;
  *(_BYTE *)(a2 + 128) = v23;
  *(double *)(a2 + 136) = v32;
  *(_QWORD *)(a2 + 144) = v35;
  *(_QWORD *)(a2 + 152) = v36;
  *(_QWORD *)(a2 + 160) = v37;
  *(_BYTE *)(a2 + 168) = 0;
  swift_retain(*((_QWORD *)&v45 + 1));
  swift_bridgeObjectRetain();
  v38 = (id)v45;
  sub_10002EBA0(v24, v26, v30);
  swift_bridgeObjectRetain();
  sub_10001DA20(v24, v26, v30);
  swift_release(*((_QWORD *)&v45 + 1));

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100354D18(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  void *v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  Class isa;
  uint64_t v32;
  unint64_t v33;

  sub_10000B4C8(&qword_1005585E0);
  __chkstk_darwin();
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v8 + 96), "coordinate");
  v10 = v9;
  v12 = v11;
  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v13._countAndFlagsBits = 0x3F2F2F3A7370616DLL;
  v13._object = (void *)0xEA00000000003D71;
  String.append(_:)(v13);
  v14 = *(_QWORD *)(v8 + 16);
  v15 = *(void **)(v8 + 24);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 1030515750;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  Double.write<A>(to:)(&v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v10);
  v18._countAndFlagsBits = 44;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  Double.write<A>(to:)(&v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v12);
  v19._countAndFlagsBits = 893221414;
  v19._object = (void *)0xE400000000000000;
  String.append(_:)(v19);
  URL.init(string:)(v32, v33);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_100011694((uint64_t)v3, &qword_1005585E0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v21 = (void *)objc_opt_self(UIApplication);
  v22 = objc_msgSend(v21, "sharedApplication");
  URL._bridgeToObjectiveC()(v23);
  v25 = v24;
  v26 = objc_msgSend(v22, "canOpenURL:", v24);

  if (v26)
  {
    v27 = objc_msgSend(v21, "sharedApplication");
    URL._bridgeToObjectiveC()(v28);
    v30 = v29;
    sub_1002D3A44((uint64_t)_swiftEmptyArrayStorage);
    _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
    sub_10001254C(&qword_100558688, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_10043A0EC);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v27, "openURL:options:completionHandler:", v30, isa, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_100355020@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  id v47[2];

  v34 = a1;
  v5 = type metadata accessor for Image.ResizingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v45 = a2[2];
  v40 = a2[2];
  sub_10000B4C8(&qword_10055B888);
  State.wrappedValue.getter(&v35);
  if (v35)
  {
    v12 = v35;
    v13 = Image.init(uiImage:)(v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    v14 = (void *)Image.resizable(capInsets:resizingMode:)(v8, v13, 0.0, 0.0, 0.0, 0.0);
    v15 = swift_release(v13);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v15);
    v35 = v14;
    v36 = xmmword_100427F70;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    swift_retain(v14);
    v16 = sub_10000B4C8(&qword_10055B890);
    v17 = sub_10000B4C8(&qword_10055B898);
    v18 = sub_1003566CC(&qword_10055B8A0, &qword_10055B890, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol witness table for _AspectRatioLayout);
    v19 = sub_1003566CC(&qword_10055B8A8, &qword_10055B898, (uint64_t)&protocol witness table for Color, (uint64_t)&protocol witness table for _AppearanceActionModifier);
    _ConditionalContent<>.init(storage:)(&v35, v16, v17, v18, v19);
    swift_release(v14);

  }
  else
  {
    sub_100011530((uint64_t)&v45, (uint64_t)v47, &qword_100558BA0);
    sub_100011530((uint64_t)&v45 + 8, (uint64_t)&v46, &qword_10055B880);
    v20 = (void *)Color.init(uiColor:)(objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.97, 0.96, 0.93, 1.0));
    v44 = a2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
    v21 = *(unsigned __int8 *)(v10 + 80);
    v22 = (v21 + 64) & ~v21;
    v23 = (char *)swift_allocObject(&unk_100520308, v22 + v11, v21 | 7);
    v24 = a2[1];
    *((_OWORD *)v23 + 1) = *a2;
    *((_OWORD *)v23 + 2) = v24;
    *((_OWORD *)v23 + 3) = a2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v23[v22], (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    v35 = v20;
    *(_QWORD *)&v36 = sub_10035669C;
    v37 = 0;
    v38 = 0;
    *((_QWORD *)&v36 + 1) = v23;
    v39 = 1;
    sub_10005001C((uint64_t)&v44);
    sub_10015CEDC(v47);
    sub_1000564C0(&v46);
    v25 = sub_10000B4C8(&qword_10055B890);
    v26 = sub_10000B4C8(&qword_10055B898);
    v27 = sub_1003566CC(&qword_10055B8A0, &qword_10055B890, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol witness table for _AspectRatioLayout);
    v28 = sub_1003566CC(&qword_10055B8A8, &qword_10055B898, (uint64_t)&protocol witness table for Color, (uint64_t)&protocol witness table for _AppearanceActionModifier);
    _ConditionalContent<>.init(storage:)(&v35, v25, v26, v27, v28);
  }
  result = *(double *)&v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  *(_OWORD *)a3 = v40;
  *(_OWORD *)(a3 + 16) = v30;
  *(_QWORD *)(a3 + 32) = v31;
  *(_BYTE *)(a3 + 40) = v32;
  return result;
}

void sub_1003553C8(uint64_t a1)
{
  double v1;
  uint64_t v2;
  double v3;

  v1 = GeometryProxy.size.getter(a1);
  GeometryProxy.size.getter(v2);
  sub_100355408(v1, v3);
}

void sub_100355408(double a1, double a2)
{
  double *v2;
  double *v3;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  _OWORD *v15;
  __int128 v16;
  void *v17;
  _OWORD *v18;
  _QWORD v19[5];
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  id v23;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)MKPlacemark), "initWithCoordinate:", *v2, v2[1]);
  v7 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithPlacemark:", v6);

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setName:", v8);

  v9 = sub_10000B4C8(&qword_100559390);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100424B90;
  *(_QWORD *)(v10 + 32) = v7;
  v19[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = objc_allocWithZone((Class)MusicMapKitAnnotatedMapSnapshotter);
  sub_10035672C();
  v12 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithMapItems:mapSize:distance:", isa, a1, a2, 5000.0, v19[0]);

  v21 = *((_OWORD *)v3 + 2);
  sub_100011530((uint64_t)&v21, (uint64_t)&v23, &qword_100558BA0);
  sub_100011530((uint64_t)&v21 + 8, (uint64_t)&v22, &qword_10055B880);
  v15 = (_OWORD *)swift_allocObject(&unk_100520330, 64, 7);
  v16 = *((_OWORD *)v3 + 1);
  v15[1] = *(_OWORD *)v3;
  v15[2] = v16;
  v15[3] = *((_OWORD *)v3 + 2);
  v19[4] = sub_1003567A0;
  v20 = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100013B60;
  v19[3] = &unk_100520348;
  v17 = _Block_copy(v19);
  v18 = v20;
  swift_bridgeObjectRetain();
  sub_10015CEDC(&v23);
  sub_1000564C0(&v22);
  objc_msgSend(v14, "startWithCompletionHandler:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

}

_QWORD *sub_100355658(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  id v11;
  uint64_t v12;

  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(v4, "image");
    v10 = *(_OWORD *)(a3 + 32);
    sub_100011530((uint64_t)&v10 + 8, (uint64_t)&v12, &qword_10055B880);
    sub_100011530((uint64_t)&v10, (uint64_t)&v11, &qword_100558BA0);
    v9 = v10;
    v8 = v5;
    sub_10015CEDC(&v11);
    sub_1000564C0(&v12);
    v6 = v5;
    v7 = sub_10000B4C8(&qword_10055B888);
    State.wrappedValue.setter(&v8, v7);

    sub_1002C2300(&v11);
    return sub_1003567C0(&v12);
  }
  return result;
}

_QWORD *sub_100355734@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  _OWORD *v1;
  double (*v3)@<D0>(uint64_t@<X0>, uint64_t@<X8>);
  __int128 v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  id v10;

  v6 = v1[2];
  v7 = v1[1];
  v8 = v6;
  sub_100011530((uint64_t)&v8, (uint64_t)&v10, &qword_100558BA0);
  sub_100011530((uint64_t)&v8 + 8, (uint64_t)&v9, &qword_10055B880);
  v3 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject(&unk_1005202E0, 64, 7);
  v4 = v1[1];
  *((_OWORD *)v3 + 1) = *v1;
  *((_OWORD *)v3 + 2) = v4;
  *((_OWORD *)v3 + 3) = v1[2];
  *a1 = sub_100356610;
  a1[1] = v3;
  sub_10005001C((uint64_t)&v7);
  sub_10015CEDC(&v10);
  return sub_1000564C0(&v9);
}

void sub_1003557E8()
{
  qword_10055B7C0 = 0x4046000000000000;
}

uint64_t sub_1003557F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_10000B4C8(&qword_10055B7C8);
  v1 = sub_100012324(&qword_10055B7D0, &qword_10055B7C8, (const char *)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_100356F34, &v3, v0, v1);
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzDetailView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v40;
  char *v41;
  void *v42;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v38);
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v42 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v42;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v40 = &v20[v27];
    v41 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v42;
    v29(v41, v40, v28);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = *(uint64_t *)((char *)a2 + v31);
    *(uint64_t *)((char *)v4 + v31) = v33;
    v34 = (uint64_t *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = *v35;
    swift_retain(v33);
    if (v36)
    {
      v37 = v35[1];
      *v34 = v36;
      v34[1] = v37;
      swift_retain(v37);
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
  }
  return v4;
}

double destroy for RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD *v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Razzmatazz(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  v13 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  if (*v13)
    *(_QWORD *)&result = swift_release(v13[1]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  void *v40;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v40 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v40;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v38 = &v19[v26];
  v39 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v40;
  v28(v39, v38, v27);
  v30 = *(int *)(a3 + 20);
  v31 = *(int *)(a3 + 24);
  v32 = *(_QWORD *)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v32;
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = *v34;
  swift_retain(v32);
  if (v35)
  {
    v36 = v34[1];
    *v33 = v35;
    v33[1] = v36;
    swift_retain(v36);
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
  }
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = *(_QWORD *)((char *)a1 + v25);
  v27 = *(_QWORD *)((char *)a2 + v25);
  *(_QWORD *)((char *)a1 + v25) = v27;
  swift_retain(v27);
  swift_release(v26);
  v28 = *(int *)(a3 + 24);
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = *(_QWORD *)((char *)a1 + v28);
  v32 = *v30;
  if (!v31)
  {
    if (v32)
    {
      v35 = v30[1];
      *v29 = v32;
      v29[1] = v35;
      swift_retain(v35);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    return a1;
  }
  if (!v32)
  {
    swift_release(v29[1]);
    goto LABEL_7;
  }
  v33 = v30[1];
  v34 = v29[1];
  *v29 = v32;
  v29[1] = v33;
  swift_retain(v33);
  swift_release(v34);
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzDetailView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = *v28;
  if (*v28)
  {
    v30 = v28[1];
    *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  return a1;
}

_QWORD *assignWithTake for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a1 + v31);
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_release(v32);
  v33 = *(int *)(a3 + 24);
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v36 = *(_QWORD *)((char *)a1 + v33);
  v37 = *v35;
  if (!v36)
  {
    if (v37)
    {
      v40 = v35[1];
      *v34 = v37;
      v34[1] = v40;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    return a1;
  }
  if (!v37)
  {
    swift_release(v34[1]);
    goto LABEL_7;
  }
  v38 = v35[1];
  v39 = v34[1];
  *v34 = v37;
  v34[1] = v38;
  swift_release(v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003562D4);
}

uint64_t sub_1003562D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100356368);
}

uint64_t sub_100356368(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1003563E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10043E690;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10035645C()
{
  return sub_100012324(&qword_10055B870, &qword_10055B878, (const char *)&protocol conformance descriptor for List<A, B>);
}

double destroy for RazzmatazzDetailView.MapImage(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v5 = *(void **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView.MapImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[4];
  v6 = (void *)a2[4];
  a1[4] = v6;
  v7 = v6;

  v8 = a1[5];
  v9 = a2[5];
  a1[5] = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzDetailView.MapImage()
{
  return &type metadata for RazzmatazzDetailView.MapImage;
}

uint64_t sub_1003565FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048D360, 1);
}

double sub_100356610@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100355020(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_100356618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  v7 = swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10035669C()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  sub_1003553C8(v0 + 16);
}

uint64_t sub_1003566CC(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10035672C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055B8B0;
  if (!qword_10055B8B0)
  {
    v1 = objc_opt_self(MKMapItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055B8B0);
  }
  return result;
}

uint64_t sub_10035676C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

_QWORD *sub_1003567A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100355658(a1, a2, v2 + 16);
}

uint64_t sub_1003567A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1003567B8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

_QWORD *sub_1003567C0(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1003567E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100352A9C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003567F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003542B4(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.leading.getter, &qword_10055B958, (uint64_t (*)(uint64_t))sub_100352B84, a1);
}

uint64_t sub_100356820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003542B4(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, &qword_10055B938, (uint64_t (*)(uint64_t))sub_10035430C, a1);
}

uint64_t sub_100356850()
{
  uint64_t v0;

  return sub_100354814(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100356858()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055B910;
  if (!qword_10055B910)
  {
    v1 = sub_100011650(&qword_10055B908);
    v2[0] = sub_100012324(&qword_10055B918, &qword_10055B920, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = sub_100012324(&qword_10055B928, &qword_10055DD30, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055B910);
  }
  return result;
}

uint64_t sub_1003568F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RazzmatazzDetailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035693C()
{
  return sub_100356B40(sub_100354D18);
}

uint64_t sub_100356948(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_release(v2);
  sub_10001DA20(v4, v5, v6);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003569BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a3)
    return swift_retain(a4);
  return result;
}

double sub_1003569CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result;

  if (a3)
    *(_QWORD *)&result = swift_release(a4).n128_u64[0];
  return result;
}

uint64_t sub_1003569E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 20)));
  v14 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100356B34()
{
  return sub_100356B40((uint64_t (*)(uint64_t))sub_100353748);
}

uint64_t sub_100356B40(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_100356B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 20)));
  v14 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_100356CD8(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  sub_100353890(a1, a2, *(void **)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_100356D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 20)));
  v14 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100356E84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_10055B994);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000DC64;
  return sub_100353F4C(a1, v5, v6, v7);
}

uint64_t sub_100356F08()
{
  return sub_100012324(&qword_10055B9A0, &qword_10055B9A8, (const char *)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t RazzmatazzView.init(navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD v10[2];

  v9 = 0;
  State.init(wrappedValue:)(v10, &v9, &type metadata for Bool);
  v6 = v10[0];
  v7 = v10[1];
  result = AppStorage.init<A>(wrappedValue:_:store:)(0, 0xD000000000000010, 0x8000000100453100, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = sub_10035704C;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = result;
  return result;
}

uint64_t (*variable initialization expression of RazzmatazzView._controller())()
{
  return sub_10035704C;
}

uint64_t property wrapper backing initializer of Radiosity.ViewModifier.isRadiosityEnabled(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

uint64_t property wrapper backing initializer of RazzmatazzView.isFilteringToFavorites(uint64_t a1)
{
  return AppStorage.init<A>(wrappedValue:_:store:)(a1, 0xD000000000000010, 0x8000000100453100, 0);
}

uint64_t sub_10035704C()
{
  uint64_t v0;

  v0 = type metadata accessor for RazzmatazzController(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_100347930();
}

uint64_t RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74[16];
  _OWORD *v75;
  char v76[16];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  char v85;

  v2 = (_OWORD *)v1;
  v72 = a1;
  v65 = type metadata accessor for TaskPriority(0);
  v3 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10000B4C8(&qword_10055B9C8);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055B9D0);
  v61 = v8;
  __chkstk_darwin();
  v73 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10000B4C8(&qword_10055B9D8);
  v69 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin();
  v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_10000B4C8(&qword_10055B9E0);
  v71 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin();
  v67 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v1;
  v12 = sub_10000B4C8(&qword_10055B9E8);
  v13 = sub_100012324(&qword_10055B9F0, &qword_10055B9E8, (const char *)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_1003579F0, v76, v12, v13);
  v14 = *(_QWORD *)(v1 + 8);
  v15 = *(_OWORD *)(v1 + 16);
  v85 = *(_BYTE *)(v1 + 32);
  v83 = *(_OWORD *)(v1 + 40);
  v84 = v15;
  v16 = *(_QWORD *)(v1 + 56);
  v17 = (_OWORD *)swift_allocObject(&unk_100520480, 80, 7);
  v18 = *(_OWORD *)(v1 + 16);
  v17[1] = *(_OWORD *)v1;
  v17[2] = v18;
  v19 = *(_OWORD *)(v1 + 48);
  v17[3] = *(_OWORD *)(v1 + 32);
  v17[4] = v19;
  v64 = v14;
  swift_retain(v14);
  sub_100358F5C((uint64_t *)&v84);
  sub_100358F8C((uint64_t)&v83);
  v60 = v16;
  swift_retain(v16);
  static TaskPriority.userInitiated.getter(v20);
  v21 = v73;
  v22 = &v73[*(int *)(v8 + 36)];
  v23 = type metadata accessor for _TaskModifier(0);
  v24 = v65;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v22[*(int *)(v23 + 20)], v5, v65);
  *(_QWORD *)v22 = &unk_10055BA00;
  *((_QWORD *)v22 + 1) = v17;
  v25 = v62;
  v26 = v21;
  v27 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v26, v7, v63);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v27);
  v82 = v83;
  v28 = sub_10000B4C8(&qword_10055BA08);
  State.projectedValue.getter(&v78, v28);
  v29 = v78;
  v30 = v79;
  v31 = v80;
  v32 = (_OWORD *)swift_allocObject(&unk_1005204A8, 80, 7);
  v33 = v2[1];
  v32[1] = *v2;
  v32[2] = v33;
  v34 = v2[3];
  v32[3] = v2[2];
  v32[4] = v34;
  swift_retain(v14);
  sub_100358F5C((uint64_t *)&v84);
  sub_100358F8C((uint64_t)&v83);
  v35 = type metadata accessor for CitySelectionView(0);
  v36 = sub_100359090();
  v37 = sub_10001254C(&qword_10055BA20, type metadata accessor for CitySelectionView, (uint64_t)&unk_10043CE20);
  v38 = swift_retain(v16);
  v39 = v66;
  v40 = v31;
  v41 = v61;
  v42 = (uint64_t)v73;
  View.sheet<A>(isPresented:onDismiss:content:)(v29, v30, v40, 0, 0, sub_100359088, v32, v61, v38, v35, v36, v37);
  swift_release(v30);
  swift_release(v32);
  swift_release(v29);
  sub_100011694(v42, &qword_10055B9D0);
  v75 = v2;
  v43 = sub_10000B4C8(&qword_10055BA28);
  v78 = v41;
  v79 = v35;
  v80 = v36;
  v81 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v45 = sub_100011650(&qword_10055BA30);
  v46 = sub_100012324(&qword_10055BA38, &qword_10055BA30, (const char *)&protocol conformance descriptor for ToolbarItem<A, B>);
  v78 = v45;
  v79 = v46;
  v47 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v48 = v67;
  v49 = v68;
  v50 = v43;
  View.toolbar<A>(content:)(sub_1003592D8, v74, v68, v43, OpaqueTypeConformance2, v47);
  v51 = v49;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v49);
  v52 = v60;
  AppStorage.wrappedValue.getter(v60, &type metadata for Bool);
  LOBYTE(v82) = v78;
  v53 = (_OWORD *)swift_allocObject(&unk_1005204D0, 80, 7);
  v54 = v2[1];
  v53[1] = *v2;
  v53[2] = v54;
  v55 = v2[3];
  v53[3] = v2[2];
  v53[4] = v55;
  swift_retain(v64);
  sub_100358F5C((uint64_t *)&v84);
  sub_100358F8C((uint64_t)&v83);
  swift_retain(v52);
  v78 = v51;
  v79 = v50;
  v80 = OpaqueTypeConformance2;
  v81 = v47;
  v56 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v57 = v70;
  View.onChange<A>(of:initial:_:)(&v82, 0, sub_100359B30, v53, v70, &type metadata for Bool, v56, &protocol witness table for Bool);
  v58 = swift_release(v53);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v71 + 8))(v48, v57, v58);
}

uint64_t sub_100357660@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47[16];
  uint64_t v48;
  char v49[16];
  uint64_t v50;

  v40 = a1;
  v46 = a2;
  v44 = sub_10000B4C8(&qword_10055BC10);
  __chkstk_darwin();
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000B4C8(&qword_10055BC18);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v39 - v5;
  sub_10000B4C8(&qword_10055BC20);
  __chkstk_darwin();
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10055BC28);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  v14 = sub_10000B4C8(&qword_10055BC30);
  v41 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin();
  v19 = (char *)&v39 - v18;
  v20 = v40;
  v50 = v40;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v21 = sub_10000B4C8(&qword_10055BC38);
  sub_100358004(v20, (uint64_t)&v8[*(int *)(v21 + 44)]);
  sub_1003582CC((uint64_t)v11);
  sub_100011694((uint64_t)v8, &qword_10055BC20);
  sub_100011530((uint64_t)v11, (uint64_t)v13, &qword_10055BC28);
  v22 = sub_10000B4C8(&qword_10055BC40);
  v23 = sub_10035D144();
  v24 = sub_10035D328();
  v39 = v19;
  Section<>.init(header:content:)(v13, sub_10035D13C, v49, v9, v22, v23, v24);
  v48 = v20;
  sub_100358668(0x6F637055206C6C41, 0xEC000000676E696DLL, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v3);
  v25 = sub_10000B4C8(&qword_10055BCC8);
  v26 = sub_10035D4BC();
  v27 = sub_10035D438();
  Section<>.init(header:content:)(v3, sub_10035D4B4, v47, v44, v25, v26, v27);
  v28 = v41;
  v29 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v29(v16, v19, v14);
  v30 = v45;
  v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v32 = v42;
  v33 = v43;
  v31(v43, v6, v42);
  v34 = v46;
  v29(v46, v16, v14);
  v35 = sub_10000B4C8(&qword_10055BD10);
  v31(&v34[*(int *)(v35 + 48)], v33, v32);
  v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v6, v32);
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v39, v14);
  v36(v33, v32);
  return ((uint64_t (*)(char *, uint64_t))v37)(v16, v14);
}

uint64_t sub_1003579F0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100357660(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003579F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _OWORD v75[2];

  v68 = a2;
  v69 = sub_10000B4C8(&qword_10055BCC8);
  v65 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v64 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10000B4C8(&qword_10055BD30);
  __chkstk_darwin();
  v67 = (uint64_t *)((char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_10043E920);
  v12 = swift_getKeyPath(&unk_10043E948);
  static Published.subscript.getter(&v70, v10, KeyPath);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  v13 = (uint64_t)v70;
  v14 = *(_QWORD *)(a1 + 8);
  v75[0] = *(_OWORD *)(a1 + 40);
  v74 = *(_QWORD *)(a1 + 56);
  swift_retain(v14);
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  sub_100358F8C((uint64_t)v75);
  sub_1000564C0(&v74);
  v15 = sub_10035C5C4(v13, v5, v6, v7);
  swift_release(v14);
  sub_100358F08(v5, v6);
  sub_10033BE18((uint64_t)v75);
  sub_1003567C0(&v74);
  swift_bridgeObjectRelease();
  v16 = v15[2];
  swift_bridgeObjectRelease();
  if (v16)
  {
    v17 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v18 = swift_getKeyPath(&unk_10043E920);
    v19 = swift_getKeyPath(&unk_10043E948);
    static Published.subscript.getter(&v70, v17, v18);
    swift_release(v17);
    swift_release(v18);
    swift_release(v19);
    v20 = (uint64_t)v70;
    swift_retain(v14);
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_100358F8C((uint64_t)v75);
    sub_1000564C0(&v74);
    v21 = sub_10035C5C4(v20, v5, v6, v7);
    swift_release(v14);
    sub_100358F08(v5, v6);
    sub_10033BE18((uint64_t)v75);
    sub_1003567C0(&v74);
    swift_bridgeObjectRelease();
    v70 = v21;
    v22 = swift_getKeyPath(&unk_10043E970);
    v23 = (_OWORD *)swift_allocObject(&unk_100520670, 80, 7);
    v24 = *(_OWORD *)(a1 + 16);
    v23[1] = *(_OWORD *)a1;
    v23[2] = v24;
    v25 = *(_OWORD *)(a1 + 48);
    v23[3] = *(_OWORD *)(a1 + 32);
    v23[4] = v25;
    swift_retain(v14);
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_100358F8C((uint64_t)v75);
    sub_1000564C0(&v74);
    v26 = sub_10000B4C8(&qword_1005592C0);
    v27 = type metadata accessor for RazzmatazzView.CompactListCell(0);
    v28 = sub_100012324(&qword_10055ADC0, &qword_1005592C0, (const char *)&protocol conformance descriptor for [A]);
    v29 = sub_10001254C(&qword_10055ADC8, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
    v30 = sub_10001254C(&qword_10055BCD0, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10043E788);
    v31 = v64;
    ForEach<>.init(_:id:content:)(&v70, v22, sub_10035D8A8, v23, v26, v27, v28, v29, v30);
    v32 = v65;
    v33 = v67;
    v34 = v69;
    (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 16))(v67, v31, v69);
    swift_storeEnumTagMultiPayload(v33, v66, 1);
    v35 = sub_10000B4C8(&qword_10055BC98);
    v36 = sub_10035D394();
    v37 = sub_10035D438();
    _ConditionalContent<>.init(storage:)(v33, v35, v34, v36, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v34);
  }
  else
  {
    v70 = 0;
    v71 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v72 = 0xD000000000000017;
    v73 = 0x8000000100453150;
    v39 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v40 = swift_getKeyPath(&unk_10043E988);
    v41 = swift_getKeyPath(&unk_10043E9B0);
    static Published.subscript.getter(&v70, v39, v40);
    swift_release(v39);
    swift_release(v40);
    swift_release(v41);
    v42 = (uint64_t)v70;
    v43 = (void *)v71;
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = v42;
    v44._object = v43;
    String.append(_:)(v44);
    v45 = swift_bridgeObjectRelease();
    v46 = v72;
    v47 = v73;
    LODWORD(v70) = static HierarchicalShapeStyle.secondary.getter(v45);
    v48 = Text.foregroundStyle<A>(_:)(&v70, v46, v47, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v50 = v49;
    v52 = v51;
    v54 = v53;
    swift_bridgeObjectRelease();
    v55 = swift_getKeyPath(&unk_10043E9D0);
    v56 = static Font.subheadline.getter(v55);
    v57 = swift_getKeyPath(&unk_10043E7D8);
    v58 = v66;
    v59 = v67;
    *v67 = v48;
    v59[1] = v50;
    *((_BYTE *)v59 + 16) = v52 & 1;
    v59[3] = v54;
    v59[4] = v55;
    *((_BYTE *)v59 + 40) = 1;
    v59[6] = v57;
    v59[7] = v56;
    swift_storeEnumTagMultiPayload(v59, v58, 0);
    v60 = sub_10000B4C8(&qword_10055BC98);
    v61 = sub_10035D394();
    v62 = sub_10035D438();
    return _ConditionalContent<>.init(storage:)(v59, v60, v69, v61, v62);
  }
}

uint64_t sub_100358004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v4 = sub_10000B4C8((uint64_t *)&unk_10055CF90);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v28 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  v11 = type metadata accessor for RazzmatazzController(0);
  v12 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
  v13 = StateObject.wrappedValue.getter(v8, v9, v10, v11, v12);
  KeyPath = swift_getKeyPath(&unk_10043E988);
  v15 = swift_getKeyPath(&unk_10043E9B0);
  static Published.subscript.getter(&v31, v13, KeyPath);
  swift_release(v13);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = v31;
  swift_bridgeObjectRelease();
  v30 = v16;
  v17 = *(_QWORD *)(a1 + 8);
  v31 = *(_OWORD *)(a1 + 40);
  v32 = *(_QWORD *)(a1 + 56);
  v18 = (_OWORD *)swift_allocObject(&unk_100520648, 80, 7);
  v19 = *(_OWORD *)(a1 + 16);
  v18[1] = *(_OWORD *)a1;
  v18[2] = v19;
  v20 = *(_OWORD *)(a1 + 48);
  v18[3] = *(_OWORD *)(a1 + 32);
  v18[4] = v20;
  swift_retain(v17);
  KeyValueObservationTrigger.keyPath.getter(v8, v9);
  sub_100358F8C((uint64_t)&v31);
  sub_1000564C0(&v32);
  v21 = sub_1002EB09C();
  Button<>.init<A>(_:action:)(&v30, sub_10035D664, v18, &type metadata for String, v21);
  v22 = v28;
  v23 = v29;
  v24 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v24(v28, v7, v4);
  *(_OWORD *)a2 = xmmword_1004388F0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 32) = xmmword_100438900;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = _swiftEmptyArrayStorage;
  v25 = sub_10000B4C8(&qword_10055BD28);
  v24((char *)(a2 + *(int *)(v25 + 64)), v22, v4);
  sub_10002EBA0(1918985550, 0xE400000000000000, 0);
  swift_bridgeObjectRetain();
  sub_10002EBA0(32, 0xE100000000000000, 0);
  v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  swift_bridgeObjectRetain();
  v26(v7, v4);
  v26(v22, v4);
  sub_10001DA20(32, 0xE100000000000000, 0);
  swift_bridgeObjectRelease();
  sub_10001DA20(1918985550, 0xE400000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003582CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;

  v44 = a1;
  sub_10000B4C8(&qword_10055ACD0);
  __chkstk_darwin();
  v2 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_10055BC70);
  __chkstk_darwin();
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000B4C8(&qword_10055BD20);
  v6 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10055BC68);
  __chkstk_darwin();
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v43 = sub_10000B4C8(&qword_10055BC58);
  v12 = __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Font.callout.getter(v12);
  KeyPath = swift_getKeyPath(&unk_10043E7D8);
  v17 = sub_100011370(v41, (uint64_t)v5, &qword_10055BC20);
  v18 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *v18 = KeyPath;
  v18[1] = v15;
  v19 = static Font.Weight.semibold.getter(v17);
  v20 = sub_10035D28C();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v3, v20);
  sub_100011694((uint64_t)v5, &qword_10055BC70);
  v21 = type metadata accessor for Text.Case(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
  v22 = swift_getKeyPath(&unk_10043E8F0);
  v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  v24 = sub_10000B4C8(&qword_10055ACC8);
  sub_100011370((uint64_t)v2, (uint64_t)v23 + *(int *)(v24 + 28), &qword_10055ACD0);
  *v23 = v22;
  v25 = v42;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v42);
  sub_100011694((uint64_t)v2, &qword_10055ACD0);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  v27 = static Edge.Set.horizontal.getter(v26);
  if (qword_100557F28 != -1)
    swift_once(&qword_100557F28, sub_10035C1A4);
  v28 = EdgeInsets.init(_all:)(*(double *)&qword_10055B9C0);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_10055BC68);
  v35 = &v14[*(int *)(v43 + 36)];
  *v35 = v27;
  *((double *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_100011694((uint64_t)v11, &qword_10055BC68);
  if (qword_100557D50 != -1)
    swift_once(&qword_100557D50, sub_1002EA4C4);
  v43 = static EdgeInsets.zero;
  v36 = qword_1005628A8;
  v37 = unk_1005628B0;
  v38 = v44;
  sub_100011370((uint64_t)v14, v44, &qword_10055BC58);
  v39 = v38 + *(int *)(sub_10000B4C8(&qword_10055BC28) + 36);
  *(_OWORD *)v39 = v43;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v37;
  *(_BYTE *)(v39 + 32) = 0;
  return sub_100011694((uint64_t)v14, &qword_10055BC58);
}

uint64_t sub_100358668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v55 = a5;
  sub_10000B4C8(&qword_10055ACD0);
  __chkstk_darwin();
  v50 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10055BD18);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  __chkstk_darwin();
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_10000B4C8(&qword_10055BCF8);
  __chkstk_darwin();
  v48 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v53 = sub_10000B4C8(&qword_10055BCE8);
  v14 = __chkstk_darwin();
  v54 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Font.callout.getter(v14);
  KeyPath = swift_getKeyPath(&unk_10043E7D8);
  v56 = a1;
  v57 = a2;
  v58 = a3 & 1;
  v59 = a4;
  v60 = KeyPath;
  v61 = v16;
  sub_10002EBA0(a1, a2, a3 & 1);
  v18 = swift_bridgeObjectRetain();
  v19 = static Font.Weight.semibold.getter(v18);
  v20 = sub_10000B4C8(&qword_10055BD00);
  v21 = sub_1000962C0(&qword_10055BD08, &qword_10055BD00, (unint64_t *)&unk_10055DA40, &qword_10055AD18);
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  sub_10001DA20(a1, a2, a3 & 1);
  v22 = v16;
  v23 = (uint64_t)v48;
  swift_release(v22);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v24 = type metadata accessor for Text.Case(0);
  v25 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v50, 1, 1, v24);
  v26 = swift_getKeyPath(&unk_10043E8F0);
  v27 = (uint64_t *)(v23 + *(int *)(v49 + 36));
  v28 = sub_10000B4C8(&qword_10055ACC8);
  sub_100011370(v25, (uint64_t)v27 + *(int *)(v28 + 28), &qword_10055ACD0);
  *v27 = v26;
  v30 = v51;
  v29 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v23, v12, v52);
  sub_100011694(v25, &qword_10055ACD0);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v29);
  v32 = static Edge.Set.horizontal.getter(v31);
  if (qword_100557F28 != -1)
    swift_once(&qword_100557F28, sub_10035C1A4);
  v33 = EdgeInsets.init(_all:)(*(double *)&qword_10055B9C0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v54;
  sub_100011370(v23, v54, &qword_10055BCF8);
  v41 = v40 + *(int *)(v53 + 36);
  *(_BYTE *)v41 = v32;
  *(double *)(v41 + 8) = v33;
  *(_QWORD *)(v41 + 16) = v35;
  *(_QWORD *)(v41 + 24) = v37;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  sub_100011694(v23, &qword_10055BCF8);
  if (qword_100557D50 != -1)
    swift_once(&qword_100557D50, sub_1002EA4C4);
  v53 = static EdgeInsets.zero;
  v42 = qword_1005628A8;
  v43 = unk_1005628B0;
  v44 = v55;
  sub_100011370(v40, v55, &qword_10055BCE8);
  v45 = v44 + *(int *)(sub_10000B4C8(&qword_10055BC10) + 36);
  *(_OWORD *)v45 = v53;
  *(_QWORD *)(v45 + 16) = v42;
  *(_QWORD *)(v45 + 24) = v43;
  *(_BYTE *)(v45 + 32) = 0;
  return sub_100011694(v40, &qword_10055BCE8);
}

uint64_t sub_100358A50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = type metadata accessor for RazzmatazzController(0);
  v6 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
  v7 = StateObject.wrappedValue.getter(v2, v3, v4, v5, v6);
  KeyPath = swift_getKeyPath(&unk_10043E920);
  v9 = swift_getKeyPath(&unk_10043E948);
  static Published.subscript.getter(&v23, v7, KeyPath);
  swift_release(v7);
  swift_release(KeyPath);
  swift_release(v9);
  v21 = v23;
  v10 = swift_getKeyPath(&unk_10043E970);
  v11 = *(_QWORD *)(a1 + 8);
  v23 = *(_OWORD *)(a1 + 40);
  v22 = *(_QWORD *)(a1 + 56);
  v12 = (_OWORD *)swift_allocObject(&unk_100520620, 80, 7);
  v13 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  v12[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v14;
  swift_retain(v11);
  KeyValueObservationTrigger.keyPath.getter(v2, v3);
  sub_100358F8C((uint64_t)&v23);
  sub_1000564C0(&v22);
  v15 = sub_10000B4C8(&qword_1005592C0);
  v16 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v17 = sub_100012324(&qword_10055ADC0, &qword_1005592C0, (const char *)&protocol conformance descriptor for [A]);
  v18 = sub_10001254C(&qword_10055ADC8, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v19 = sub_10001254C(&qword_10055BCD0, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10043E788);
  return ForEach<>.init(_:id:content:)(&v21, v10, sub_10035D640, v12, v15, v16, v17, v18, v19);
}

double sub_100358C50@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double result;

  sub_10000D964(a1, a3, type metadata accessor for Razzmatazz);
  v6 = *a2;
  v5 = a2[1];
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for RazzmatazzView.CompactListCell(0) + 20));
  *v7 = v6;
  v7[1] = v5;
  *(_QWORD *)&result = swift_retain(v5).n128_u64[0];
  return result;
}

uint64_t sub_100358CA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1[2] = a1;
  v3 = sub_10000B4C8(&qword_10055A300);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[4] = v4;
  v5 = static MainActor.shared.getter(v4);
  v1[5] = v5;
  v1[6] = static MainActor.shared.getter(v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (_QWORD *)swift_task_alloc(dword_10055BB54);
  v1[7] = v7;
  *v7 = v1;
  v7[1] = sub_100358D3C;
  return sub_10035C888(v6);
}

uint64_t sub_100358D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100358DB4, v4, v5);
}

uint64_t sub_100358DB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release(v0[6]);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain(v10);
  v12 = swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1005205F8, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  v15 = sub_100323BB4(v3, (uint64_t)&unk_10055BC08, (uint64_t)v14);
  swift_release(v15);
  swift_release(v10);
  swift_bridgeObjectRelease();
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10035D8A4, v16, v17);
}

double sub_100358F08(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

uint64_t sub_100358F10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10055B9FC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100012D1C;
  return sub_100358CA4(v0 + 16);
}

uint64_t *sub_100358F5C(uint64_t *a1)
{
  KeyValueObservationTrigger.keyPath.getter(*a1, a1[1]);
  return a1;
}

uint64_t sub_100358F8C(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100358FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for RazzmatazzController(0);
  v7 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  *(_QWORD *)a2 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = sub_100341318;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for CitySelectionView(0) + 24));
  *v10 = swift_getKeyPath(&unk_10043E8C0);
  v11 = sub_10000B4C8(&qword_10055EBC0);
  return swift_storeEnumTagMultiPayload(v10, v11, 0);
}

uint64_t sub_100359088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100358FB4(v1 + 16, a1);
}

unint64_t sub_100359090()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BA10;
  if (!qword_10055BA10)
  {
    v1 = sub_100011650(&qword_10055B9D0);
    v2[0] = sub_100012324(&qword_10055BA18, &qword_10055B9C8, (const char *)&protocol conformance descriptor for List<A, B>);
    v2[1] = sub_10001254C(&qword_10055AB88, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BA10);
  }
  return result;
}

uint64_t sub_10035912C(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  _QWORD v19[4];

  type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin();
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10000B4C8(&qword_10055BA30);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter(v6);
  v18 = a1;
  v9 = sub_10000B4C8(&qword_10055BB90);
  v10 = sub_100011650(&qword_10055BB98);
  v11 = type metadata accessor for ButtonMenuStyle(255);
  v12 = sub_100012324(&qword_10055BBA0, &qword_10055BB98, (const char *)&protocol conformance descriptor for Menu<A, B>);
  v13 = sub_10001254C(&qword_10055BBA8, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  v19[0] = v10;
  v19[1] = v11;
  v19[2] = v12;
  v19[3] = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
  ToolbarItem<>.init(placement:content:)(v3, sub_10035D064, v17, v9, OpaqueTypeConformance2);
  v15 = sub_100012324(&qword_10055BA38, &qword_10055BA30, (const char *)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v4, v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1003592D8()
{
  uint64_t v0;

  return sub_10035912C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003592E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[10];

  v14[1] = a2;
  v3 = type metadata accessor for ButtonMenuStyle(0);
  v14[0] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10055BB98);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[8] = a1;
  v14[4] = a1;
  sub_10000B4C8(&qword_10055BBB0);
  sub_10000B4C8(&qword_10055BBB8);
  sub_10035D07C();
  sub_100012324(&qword_10055BBD8, &qword_10055BBB8, (const char *)&protocol conformance descriptor for Picker<A, B, C>);
  v10 = Menu.init(content:label:)(sub_10035D06C);
  ButtonMenuStyle.init()(v10);
  v11 = sub_100012324(&qword_10055BBA0, &qword_10055BB98, (const char *)&protocol conformance descriptor for Menu<A, B>);
  v12 = sub_10001254C(&qword_10055BBA8, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  View.menuStyle<A>(_:)(v5, v6, v3, v11, v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1003594A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  AppStorage.projectedValue.getter(&v5, *(_QWORD *)(a1 + 56), &type metadata for Bool);
  v1 = sub_10000B4C8(&qword_10055BBE0);
  v2 = sub_100012324(&qword_10055BBE8, &qword_10055BBE0, (const char *)&protocol conformance descriptor for TupleView<A>);
  v3 = sub_1002EB09C();
  return Picker<>.init<A>(_:selection:content:)(v6, &v5, sub_10035956C, 0, &type metadata for Bool, v1, &type metadata for String, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_10035956C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = sub_10000B4C8(&qword_10055BBF0);
  v25 = v1;
  __chkstk_darwin();
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10055B970);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055BBF8);
  __chkstk_darwin();
  v26 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v24 - v10;
  __chkstk_darwin();
  v13 = (char *)&v24 - v12;
  __chkstk_darwin();
  v15 = (char *)&v24 - v14;
  v16 = LocalizedStringKey.init(stringLiteral:)(7105601, 0xE300000000000000);
  Label<>.init(_:systemImage:)(v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v3, v7, v4);
  v3[*(int *)(v1 + 36)] = 0;
  sub_100011370((uint64_t)v3, (uint64_t)v13, &qword_10055BBF0);
  v13[*(int *)(v8 + 36)] = 0;
  sub_100011694((uint64_t)v3, &qword_10055BBF0);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  sub_100011530((uint64_t)v13, (uint64_t)v15, &qword_10055BBF8);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x657469726F766146, 0xE900000000000073);
  Label<>.init(_:systemImage:)(v19);
  v17(v3, v7, v4);
  v3[*(int *)(v25 + 36)] = 1;
  sub_100011370((uint64_t)v3, (uint64_t)v11, &qword_10055BBF0);
  v11[*(int *)(v8 + 36)] = 1;
  sub_100011694((uint64_t)v3, &qword_10055BBF0);
  v18(v7, v4);
  sub_100011530((uint64_t)v11, (uint64_t)v13, &qword_10055BBF8);
  sub_100011370((uint64_t)v15, (uint64_t)v11, &qword_10055BBF8);
  v20 = v26;
  sub_100011370((uint64_t)v13, v26, &qword_10055BBF8);
  v21 = v27;
  sub_100011370((uint64_t)v11, v27, &qword_10055BBF8);
  v22 = sub_10000B4C8(&qword_10055BC00);
  sub_100011370(v20, v21 + *(int *)(v22 + 48), &qword_10055BBF8);
  sub_100011694((uint64_t)v13, &qword_10055BBF8);
  sub_100011694((uint64_t)v15, &qword_10055BBF8);
  sub_100011694(v20, &qword_10055BBF8);
  return sub_100011694((uint64_t)v11, &qword_10055BBF8);
}

uint64_t sub_100359888@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t result;
  id v15;
  _BYTE v16[16];

  sub_10000B4C8(&qword_10055E0B0);
  __chkstk_darwin();
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = Image.init(systemName:)(0xD000000000000026, 0x8000000100453120);
  static SymbolRenderingMode.palette.getter();
  v7 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = Image.symbolRenderingMode(_:)(v5, v6);
  swift_release(v6);
  sub_100011694((uint64_t)v5, &qword_10055E0B0);
  v9 = *(_QWORD *)(a1 + 56);
  AppStorage.wrappedValue.getter(v9, &type metadata for Bool);
  if (v16[15] == 1)
    v11 = static Color.white.getter(v10);
  else
    v11 = static Color.accentColor.getter(v10);
  v12 = v11;
  AppStorage.wrappedValue.getter(v9, &type metadata for Bool);
  if (v16[14] == 1)
  {
    result = static Color.accentColor.getter(v13);
  }
  else
  {
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    result = Color.init(uiColor:)(v15);
  }
  *a2 = v8;
  a2[1] = v12;
  a2[2] = result;
  return result;
}

double sub_1003599F4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  double result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  char v22;

  sub_10000B4C8(&qword_10055A300);
  __chkstk_darwin();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != *a2)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = *(_QWORD *)(a3 + 8);
    v11 = *(_OWORD *)(a3 + 16);
    v22 = *(_BYTE *)(a3 + 32);
    v20 = *(_OWORD *)(a3 + 40);
    v21 = v11;
    v19 = *(_QWORD *)(a3 + 56);
    swift_retain(v10);
    sub_100358F5C((uint64_t *)&v21);
    sub_100358F8C((uint64_t)&v20);
    v12 = sub_1000564C0(&v19);
    v13 = static MainActor.shared.getter(v12);
    v14 = swift_allocObject(&unk_1005205A8, 96, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
    v15 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v14 + 48) = v15;
    v16 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v14 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v14 + 80) = v16;
    v17 = sub_100323BB4((uint64_t)v8, (uint64_t)&unk_10055BB48, v14);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

double sub_100359B30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_1003599F4(a1, a2, v2 + 16);
}

uint64_t sub_100359B38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzView.body>>, 1);
}

uint64_t sub_100359B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4[2] = a4;
  v6 = sub_10000B4C8(&qword_10055A300);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[4] = v7;
  v8 = static MainActor.shared.getter(v7);
  v4[5] = v8;
  v4[6] = static MainActor.shared.getter(v8);
  v9 = *(_QWORD *)(a4 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_10055BB54);
  v4[7] = v10;
  *v10 = v4;
  v10[1] = sub_100359BE0;
  return sub_10035C888(v9);
}

uint64_t sub_100359BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100359C58, v4, v5);
}

uint64_t sub_100359C58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release(v0[6]);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain(v10);
  v12 = swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1005205D0, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  v15 = sub_100323BB4(v3, (uint64_t)&unk_10055BB60, (uint64_t)v14);
  swift_release(v15);
  swift_release(v10);
  swift_bridgeObjectRelease();
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100359DA8, v16, v17);
}

uint64_t sub_100359DA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100359DE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  __int128 v49;
  uint64_t v50;

  v50 = a1;
  sub_10000B4C8(&qword_10055BAD0);
  __chkstk_darwin();
  v3 = (double *)((char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10000B4C8(&qword_10055BAD8);
  __chkstk_darwin();
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10055BAE0);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10055BAE8);
  v11 = __chkstk_darwin();
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v11);
  if (qword_100557F28 != -1)
    swift_once(&qword_100557F28, sub_10035C1A4);
  v15 = *(double *)&qword_10055B9C0;
  *(_QWORD *)v3 = v14;
  v3[1] = v15;
  *((_BYTE *)v3 + 16) = 0;
  v16 = sub_10000B4C8(&qword_10055BAF0);
  v17 = sub_10035A13C(v1, (uint64_t)v3 + *(int *)(v16 + 44));
  v18 = static Edge.Set.all.getter(v17);
  v19 = EdgeInsets.init(_all:)(v15);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_100011370((uint64_t)v3, (uint64_t)v6, &qword_10055BAD0);
  v26 = &v6[*(int *)(v4 + 36)];
  *v26 = v18;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  v27 = sub_100011694((uint64_t)v3, &qword_10055BAD0);
  v28 = static Edge.Set.leading.getter(v27);
  if (qword_100557F20 != -1)
    swift_once(&qword_100557F20, sub_10035C194);
  v29 = EdgeInsets.init(_all:)(*(double *)&qword_10055B9B8);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_100011370((uint64_t)v6, (uint64_t)v9, &qword_10055BAD8);
  v36 = &v9[*(int *)(v7 + 36)];
  *v36 = v28;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100011694((uint64_t)v6, &qword_10055BAD8);
  if (qword_100557D50 != -1)
    swift_once(&qword_100557D50, sub_1002EA4C4);
  v49 = static EdgeInsets.zero;
  v37 = qword_1005628A8;
  v38 = unk_1005628B0;
  sub_100011370((uint64_t)v9, (uint64_t)v13, &qword_10055BAE0);
  v39 = &v13[*(int *)(v10 + 36)];
  *(_OWORD *)v39 = v49;
  *((_QWORD *)v39 + 2) = v37;
  *((_QWORD *)v39 + 3) = v38;
  v39[32] = 0;
  v40 = sub_100011694((uint64_t)v9, &qword_10055BAE0);
  v41 = static Alignment.leading.getter(v40);
  v43 = v42;
  v44 = sub_10000B4C8(&qword_10055BAF8);
  v45 = v50;
  v46 = v50 + *(int *)(v44 + 36);
  sub_10035AF3C(v46);
  v47 = (uint64_t *)(v46 + *(int *)(sub_10000B4C8(&qword_10055BB00) + 36));
  *v47 = v41;
  v47[1] = v43;
  return sub_100011530((uint64_t)v13, v45, &qword_10055BAE8);
}

uint64_t sub_10035A13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __int16 v85;
  char v86;
  _BYTE v87[7];
  unsigned __int8 v88;
  _BYTE v89[7];
  unsigned __int8 v90;
  _BYTE v91[7];
  unsigned __int8 v92;
  _BYTE v93[7];
  unsigned __int8 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  _BYTE v106[7];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  _BYTE v118[7];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v70 = a2;
  v66 = *(_QWORD *)(type metadata accessor for RazzmatazzView.CompactListCell(0) - 8);
  __chkstk_darwin();
  v67 = v3;
  v69 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin();
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8((uint64_t *)&unk_10055EC10);
  __chkstk_darwin();
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10055B940);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_10000B4C8(&qword_10055D920);
  __chkstk_darwin();
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10000B4C8(&qword_10055B948);
  __chkstk_darwin();
  v79 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v78 = (uint64_t)&v60 - v18;
  type metadata accessor for Razzmatazz(0);
  v68 = a1;
  sub_1002E65D0(v10);
  v19 = sub_10000B4C8(&qword_10055EC50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (qword_100557F18 != -1)
    swift_once(&qword_100557F18, sub_10035B418);
  v80 = qword_10055B9B0;
  v81 = 0;
  v82 = qword_10055B9B0;
  v83 = 0;
  v84 = 0;
  v85 = 513;
  v20 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v77);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v80, (uint64_t)v6, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  sub_10000E750((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_100011694((uint64_t)v10, (uint64_t *)&unk_10055EC10);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  v21 = &v16[*(int *)(v75 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_100557EE0 != -1)
    swift_once(&qword_100557EE0, sub_1003367A4);
  v22 = static Border.artwork;
  v23 = qword_100563440;
  v24 = byte_100563448;
  v25 = v79;
  sub_100011370((uint64_t)v16, v79, &qword_10055D920);
  v26 = v25 + *(int *)(v76 + 36);
  *(_QWORD *)v26 = v22;
  *(_QWORD *)(v26 + 8) = v23;
  *(_BYTE *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 32) = 0;
  *(_BYTE *)(v26 + 40) = 1;
  swift_retain(v22);
  sub_100011694((uint64_t)v16, &qword_10055D920);
  v27 = v78;
  v28 = sub_100011530(v25, v78, &qword_10055B948);
  v65 = static HorizontalAlignment.leading.getter(v28);
  if (qword_100557F20 != -1)
    swift_once(&qword_100557F20, sub_10035C194);
  v75 = qword_10055B9B8;
  v29 = v68;
  sub_10035A880(v68, &v103);
  v30 = v105;
  v73 = v104;
  v74 = v107;
  v76 = v109;
  v77 = v108;
  v31 = v110;
  v62 = v112;
  v63 = v111;
  v71 = v103;
  v72 = v113;
  v32 = v114;
  v64 = v115;
  KeyPath = swift_getKeyPath(&unk_10043E868);
  v94 = 0;
  v92 = v30;
  v90 = v31;
  v88 = v32;
  v86 = 0;
  v33 = v69;
  sub_10000D964(v29, v69, type metadata accessor for RazzmatazzView.CompactListCell);
  v34 = *(unsigned __int8 *)(v66 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_100520580, v35 + v67, v34 | 7);
  sub_10000DB44(v33, v36 + v35, type metadata accessor for RazzmatazzView.CompactListCell);
  sub_100011370(v27, v25, &qword_10055B948);
  v37 = v94;
  LODWORD(v66) = v94;
  v38 = v92;
  LODWORD(v67) = v92;
  v39 = v90;
  LODWORD(v68) = v90;
  v40 = v88;
  LODWORD(v69) = v88;
  LOBYTE(v33) = v86;
  v41 = v25;
  v42 = v70;
  sub_100011370(v41, v70, &qword_10055B948);
  v43 = (int *)sub_10000B4C8(&qword_10055BB28);
  v44 = (_OWORD *)(v42 + v43[12]);
  v45 = v65;
  *(_QWORD *)&v95 = v65;
  *((_QWORD *)&v95 + 1) = v75;
  LOBYTE(v96) = v37;
  *(_DWORD *)((char *)&v96 + 1) = *(_DWORD *)v93;
  DWORD1(v96) = *(_DWORD *)&v93[3];
  *((_QWORD *)&v96 + 1) = v71;
  *(_QWORD *)&v97 = v73;
  BYTE8(v97) = v38;
  *(_DWORD *)((char *)&v97 + 9) = *(_DWORD *)v91;
  HIDWORD(v97) = *(_DWORD *)&v91[3];
  *(_QWORD *)&v98 = v74;
  *((_QWORD *)&v98 + 1) = v77;
  *(_QWORD *)&v99 = v76;
  BYTE8(v99) = v39;
  *(_DWORD *)((char *)&v99 + 9) = *(_DWORD *)v89;
  HIDWORD(v99) = *(_DWORD *)&v89[3];
  v47 = v62;
  v46 = v63;
  *(_QWORD *)&v100 = v63;
  *((_QWORD *)&v100 + 1) = v62;
  *(_QWORD *)&v101 = v72;
  BYTE8(v101) = v40;
  *(_DWORD *)((char *)&v101 + 9) = *(_DWORD *)v87;
  HIDWORD(v101) = *(_DWORD *)&v87[3];
  v48 = v64;
  v49 = KeyPath;
  *(_QWORD *)&v102[0] = v64;
  *((_QWORD *)&v102[0] + 1) = KeyPath;
  *(_QWORD *)&v102[1] = 1;
  BYTE8(v102[1]) = v33;
  v50 = v95;
  v51 = v96;
  v52 = v98;
  v53 = v99;
  v44[2] = v97;
  v44[3] = v52;
  *v44 = v50;
  v44[1] = v51;
  v54 = v100;
  v55 = v101;
  *(_OWORD *)((char *)v44 + 121) = *(_OWORD *)((char *)v102 + 9);
  v56 = v102[0];
  v44[6] = v55;
  v44[7] = v56;
  v44[4] = v53;
  v44[5] = v54;
  v57 = v42 + v43[16];
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = 0;
  v58 = (uint64_t (**)())(v42 + v43[20]);
  *v58 = sub_10035C358;
  v58[1] = (uint64_t (*)())v36;
  sub_10035C3A0((uint64_t)&v95);
  swift_retain(v36);
  sub_100011694(v78, &qword_10055B948);
  swift_release(v36);
  v103 = v45;
  v104 = v75;
  v105 = v66;
  *(_DWORD *)v106 = *(_DWORD *)v93;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v93[3];
  v107 = v71;
  v108 = v73;
  LOBYTE(v109) = v67;
  *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v91;
  HIDWORD(v109) = *(_DWORD *)&v91[3];
  v110 = v74;
  v111 = v77;
  v112 = v76;
  LOBYTE(v113) = v68;
  HIDWORD(v113) = *(_DWORD *)&v89[3];
  *(_DWORD *)((char *)&v113 + 1) = *(_DWORD *)v89;
  v114 = v46;
  v115 = v47;
  v116 = v72;
  v117 = v69;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)v118 = *(_DWORD *)v87;
  v119 = v48;
  v120 = v49;
  v121 = 1;
  v122 = v33;
  sub_10035C458((uint64_t)&v103);
  return sub_100011694(v79, &qword_10055B948);
}

uint64_t sub_10035A880@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  char *v56;
  char v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  __int128 v108;
  _OWORD v109[4];

  v92 = a1;
  v93 = a2;
  type metadata accessor for FormatStyleCapitalizationContext(0);
  __chkstk_darwin();
  v97 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar(0);
  __chkstk_darwin();
  v96 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v95 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for TimeZone(0);
  v5 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin();
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BB30);
  __chkstk_darwin();
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BB38);
  __chkstk_darwin();
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Date.FormatStyle(0);
  v102 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v103 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Razzmatazz(0);
  *(_QWORD *)&v109[0] = Artist.name.getter(v13);
  *((_QWORD *)&v109[0] + 1) = v14;
  v98 = sub_1002EB09C();
  v15 = Text.init<A>(_:)(v109, &type metadata for String, v98);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v109[0]) = static HierarchicalShapeStyle.primary.getter(v15);
  v104 = Text.foregroundStyle<A>(_:)(v109, v15, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v100 = v22;
  v101 = v23;
  v99 = v24 & 1;
  sub_10001DA20(v15, v17, v21);
  v25 = swift_bridgeObjectRelease();
  static Date.FormatStyle.DateStyle.abbreviated.getter(v25);
  v26 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 0, 1, v26);
  static Date.FormatStyle.TimeStyle.omitted.getter(v27);
  v28 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
  v29 = (char *)(v92 + *(int *)(v13 + 32));
  v30 = type metadata accessor for Razzmatazz.Venue(0);
  v31 = *(uint64_t (**)(char *, char *, uint64_t))(v5 + 16);
  v32 = v7;
  v33 = v31(v7, &v29[*(int *)(v30 + 32)], v94);
  v34 = v95;
  v35 = static Locale.autoupdatingCurrent.getter(v33);
  v36 = v96;
  v37 = static Calendar.autoupdatingCurrent.getter(v35);
  v38 = v97;
  static FormatStyleCapitalizationContext.unknown.getter(v37);
  v39 = v103;
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)(v11, v9, v34, v36, v32, v38);
  v40 = sub_10001254C(&qword_10055ACF8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v108, v39, v105, v40);
  v109[0] = v108;
  v41._countAndFlagsBits = 12288995;
  v41._object = (void *)0xA300000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = Razzmatazz.shortName.getter();
  String.append(_:)(v42);
  v43 = swift_bridgeObjectRelease();
  v44 = v109[0];
  LODWORD(v109[0]) = static HierarchicalShapeStyle.secondary.getter(v43);
  v45 = Text.foregroundStyle<A>(_:)(v109, v44, *((_QWORD *)&v44 + 1), 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v47 = v46;
  LOBYTE(v9) = v48;
  v50 = v49;
  v51 = swift_bridgeObjectRelease();
  v52 = v9 & 1;
  v53 = static Font.footnote.getter(v51);
  v96 = (char *)Text.font(_:)(v53, v45, v47, v52, v50);
  v95 = v54;
  LOBYTE(v32) = v55;
  v97 = v56;
  swift_release(v53);
  v57 = v32 & 1;
  sub_10001DA20(v45, v47, v52);
  swift_bridgeObjectRelease();
  v58 = *((_OWORD *)v29 + 3);
  v109[0] = *((_OWORD *)v29 + 2);
  v109[1] = v58;
  v59 = *((_OWORD *)v29 + 5);
  v109[2] = *((_OWORD *)v29 + 4);
  v109[3] = v59;
  *(_QWORD *)&v108 = sub_1003440A0(2);
  *((_QWORD *)&v108 + 1) = v60;
  v61 = Text.init<A>(_:)(&v108, &type metadata for String, v98);
  v63 = v62;
  v65 = v64;
  v67 = v66 & 1;
  LODWORD(v108) = static HierarchicalShapeStyle.secondary.getter(v61);
  v68 = Text.foregroundStyle<A>(_:)(&v108, v61, v63, v67, v65, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v70 = v69;
  v72 = v71;
  v74 = v73 & 1;
  sub_10001DA20(v61, v63, v67);
  v75 = swift_bridgeObjectRelease();
  v76 = static Font.footnote.getter(v75);
  v77 = Text.font(_:)(v76, v68, v70, v74, v72);
  v79 = v78;
  LOBYTE(v53) = v80;
  v82 = v81;
  swift_release(v76);
  LOBYTE(v53) = v53 & 1;
  sub_10001DA20(v68, v70, v74);
  swift_bridgeObjectRelease();
  v83 = v99;
  LOBYTE(v108) = v99;
  v107 = v57;
  v106 = v53;
  v84 = v104;
  v85 = v93;
  v86 = v100;
  *v93 = v104;
  v85[1] = v86;
  *((_BYTE *)v85 + 16) = v83;
  v87 = (uint64_t)v96;
  v85[3] = v101;
  v85[4] = v87;
  v88 = (uint64_t)v95;
  v85[5] = v95;
  *((_BYTE *)v85 + 48) = v57;
  v85[7] = v97;
  v85[8] = v77;
  v85[9] = v79;
  *((_BYTE *)v85 + 80) = v53;
  v85[11] = v82;
  sub_10002EBA0(v84, v86, v83);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v87, v88, v57);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v77, v79, v53);
  v89 = *(void (**)(char *, uint64_t))(v102 + 8);
  swift_bridgeObjectRetain();
  v89(v103, v105);
  sub_10001DA20(v77, v79, v106);
  swift_bridgeObjectRelease();
  sub_10001DA20(v87, v88, v107);
  swift_bridgeObjectRelease();
  sub_10001DA20(v104, v86, v108);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10035AF3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a1;
  v51 = sub_10000B4C8(&qword_10055DB90);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  __chkstk_darwin();
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BB08);
  __chkstk_darwin();
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10000B4C8(&qword_10055BB10);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_10000B4C8(&qword_10055BB18);
  __chkstk_darwin();
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10055BB20);
  v56 = *(_QWORD *)(v12 - 8);
  v57 = v12;
  __chkstk_darwin();
  v55 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicFavoriteStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v49 - v18;
  type metadata accessor for Razzmatazz(0);
  Artist.favoriteStatus.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for MusicFavoriteStatus.favorited(_:), v14);
  v20 = static MusicFavoriteStatus.== infix(_:_:)(v19, v17);
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v17, v14);
  v21(v19, v14);
  if ((v20 & 1) != 0)
  {
    v22 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v23 = static Font.Weight.semibold.getter(v22);
    v24 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 1, 1, v24);
    v25 = static Font.system(size:weight:design:)(*(_QWORD *)&v23, 0, v7, 7.0);
    sub_100011694((uint64_t)v7, &qword_10055BB08);
    KeyPath = swift_getKeyPath(&unk_10043E7D8);
    v28 = v53;
    v27 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v5, enum case for Image.Scale.medium(_:), v54);
    v29 = swift_getKeyPath(&unk_10043E808);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v2 + *(int *)(v51 + 28), v5, v27);
    *v2 = v29;
    sub_100011370((uint64_t)v2, (uint64_t)v9 + *(int *)(v50 + 36), &qword_10055DB90);
    *v9 = v22;
    v9[1] = KeyPath;
    v9[2] = v25;
    swift_retain(v22);
    swift_retain(KeyPath);
    swift_retain(v25);
    sub_100011694((uint64_t)v2, &qword_10055DB90);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v27);
    swift_release(v25);
    swift_release(KeyPath);
    v30 = swift_release(v22);
    v31 = static Color.accentColor.getter(v30);
    v32 = swift_getKeyPath(&unk_10043E838);
    sub_100011370((uint64_t)v9, (uint64_t)v11, &qword_10055BB10);
    v33 = (uint64_t *)&v11[*(int *)(v52 + 36)];
    *v33 = v32;
    v33[1] = v31;
    v34 = sub_100011694((uint64_t)v9, &qword_10055BB10);
    v35 = static Edge.Set.leading.getter(v34);
    if (qword_100557F20 != -1)
      swift_once(&qword_100557F20, sub_10035C194);
    v36 = EdgeInsets.init(_all:)(*(double *)&qword_10055B9B8);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v43 = v55;
    sub_100011370((uint64_t)v11, v55, &qword_10055BB18);
    v44 = v57;
    v45 = v43 + *(int *)(v57 + 36);
    *(_BYTE *)v45 = v35;
    *(double *)(v45 + 8) = v36;
    *(_QWORD *)(v45 + 16) = v38;
    *(_QWORD *)(v45 + 24) = v40;
    *(_QWORD *)(v45 + 32) = v42;
    *(_BYTE *)(v45 + 40) = 0;
    sub_100011694((uint64_t)v11, &qword_10055BB18);
    v46 = v58;
    sub_100011530(v43, v58, &qword_10055BB20);
    v47 = 0;
  }
  else
  {
    v47 = 1;
    v44 = v57;
    v46 = v58;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v46, v47, 1, v44);
}

void sub_10035B418()
{
  qword_10055B9B0 = 0x404B000000000000;
}

uint64_t sub_10035B428@<X0>(uint64_t a1@<X8>)
{
  return RazzmatazzView.body.getter(a1);
}

double destroy for RazzmatazzView(_QWORD *a1)
{
  double result;

  swift_release(a1[1]);
  sub_100358F08(a1[2], a1[3]);
  swift_release(a1[6]);
  *(_QWORD *)&result = swift_release(a1[7]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain(v4);
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t assignWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter(v6, v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_100358F08(v9, v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v11);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v13;
  swift_retain(v13);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_100358F08(v6, v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_release(*(_QWORD *)(a1 + 48));
  v8 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzView()
{
  return &type metadata for RazzmatazzView;
}

uint64_t sub_10035B648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;

  v0 = sub_100011650(&qword_10055B9E0);
  v1 = sub_100011650(&qword_10055B9D8);
  v2 = sub_100011650(&qword_10055BA28);
  v9 = sub_100011650(&qword_10055B9D0);
  v10 = (void *)type metadata accessor for CitySelectionView(255);
  v11 = sub_100359090();
  v12 = (void *)sub_10001254C(&qword_10055BA20, type metadata accessor for CitySelectionView, (uint64_t)&unk_10043CE20);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v4 = sub_100011650(&qword_10055BA30);
  v5 = sub_100012324(&qword_10055BA38, &qword_10055BA30, (const char *)&protocol conformance descriptor for ToolbarItem<A, B>);
  v9 = v4;
  v10 = (void *)v5;
  v6 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v9 = v1;
  v10 = (void *)v2;
  v11 = OpaqueTypeConformance2;
  v12 = (void *)v6;
  v7 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v9 = v0;
  v10 = &type metadata for Bool;
  v11 = v7;
  v12 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t *sub_10035B7A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v38 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v38;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v36 = &v20[v27];
    v37 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v38;
    v29(v37, v36, v28);
    v31 = *(int *)(a3 + 20);
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
  }
  swift_retain(v34);
  return v4;
}

_QWORD *sub_10035B974(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v35;
  char *v36;
  void *v37;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v37 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v37;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v35 = &v19[v26];
  v36 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v37;
  v28(v36, v35, v27);
  v30 = *(int *)(a3 + 20);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_retain(v33);
  return a1;
}

_QWORD *sub_10035BB20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  v29 = v26[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain(v28);
  swift_release(v29);
  return a1;
}

_OWORD *sub_10035BD34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_10035BE44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a1 + v31 + 8);
  *(_OWORD *)((char *)a1 + v31) = *(_OWORD *)((char *)a2 + v31);
  swift_release(v32);
  return a1;
}

uint64_t sub_10035BFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035BFD4);
}

uint64_t sub_10035BFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10035C050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035C05C);
}

uint64_t sub_10035C05C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RazzmatazzView.CompactListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10055BA98;
  if (!qword_10055BA98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzView.CompactListCell);
  return result;
}

uint64_t sub_10035C110(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10035C184(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048D3FC, 1);
}

void sub_10035C194()
{
  qword_10055B9B8 = 0x4010000000000000;
}

void sub_10035C1A4()
{
  qword_10055B9C0 = 0x4028000000000000;
}

uint64_t sub_10035C1BC()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10035C1DC()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10035C210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v7 + v8[6];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[7];
  v12 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v7 + v8[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = v13 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10035C358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

uint64_t sub_10035C3A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 120);
  sub_10002EBA0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_10002EBA0(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_10002EBA0(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain(v9);
  return a1;
}

uint64_t sub_10035C458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 120);
  sub_10001DA20(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_10001DA20(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_10001DA20(v5, v6, v7);
  swift_release(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10035C510()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  sub_100358F08(v0[6], v0[7]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10035C558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10055BB44);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000DC64;
  return sub_100359B48(a1, v4, v5, v1 + 32);
}

_QWORD *sub_10035C5C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[6];
  _QWORD *v36;

  v33 = a2;
  v34 = a3;
  v32 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  v31 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v27 - v9;
  result = _swiftEmptyArrayStorage;
  v36 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v27 = v4;
    v30 = a4 & 1;
    v29 = v10 + 96;
    v28 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = a1 + v28;
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_10000D964(v13, (uint64_t)v10, type metadata accessor for Razzmatazz);
      v15 = *(void **)&v29[*(int *)(v32 + 32)];
      v16 = type metadata accessor for RazzmatazzController(0);
      v17 = sub_10001254C(&qword_10055BB58, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10043D3A8);
      v18 = StateObject.wrappedValue.getter(v33, v34, v30, v16, v17);
      KeyPath = swift_getKeyPath(&unk_10043E988);
      v20 = swift_getKeyPath(&unk_10043E9B0);
      static Published.subscript.getter(v35, v18, KeyPath);
      swift_release(v18);
      swift_release(KeyPath);
      swift_release(v20);
      v21 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", *(double *)&v35[4], *(double *)&v35[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, "distanceFromLocation:", v21);
      v23 = v22;

      if (v23 > 85000.0)
      {
        sub_10000E750((uint64_t)v10, type metadata accessor for Razzmatazz);
      }
      else
      {
        sub_10000DB44((uint64_t)v10, v31, type metadata accessor for Razzmatazz);
        v24 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        {
          sub_1002F9488(0, v24[2] + 1, 1);
          v24 = v36;
        }
        v26 = v24[2];
        v25 = v24[3];
        if (v26 >= v25 >> 1)
        {
          sub_1002F9488(v25 > 1, v26 + 1, 1);
          v24 = v36;
        }
        v24[2] = v26 + 1;
        sub_10000DB44(v31, (uint64_t)v24 + v28 + v26 * v14, type metadata accessor for Razzmatazz);
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    return v36;
  }
  return result;
}

uint64_t sub_10035C888(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1[8] = a1;
  v2 = type metadata accessor for Artist(0);
  v1[9] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[10] = v3;
  v1[11] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10055BB68);
  v1[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[13] = v5;
  v1[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10055BB70);
  v1[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[16] = v7;
  v1[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicFavoriteStatus(0);
  v1[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[19] = v9;
  v1[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10055BB78);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v1[24] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v1[25] = v13;
  v1[26] = v14;
  return swift_task_switch(sub_10035C9C8, v13, v14);
}

uint64_t sub_10035C9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 64);
  MusicLibraryRequest.init()(*(_QWORD *)(v0 + 72), &protocol witness table for Artist);
  AppStorage.wrappedValue.getter(v1, &type metadata for Bool);
  if (*(_BYTE *)(v0 + 232) == 1)
  {
    v3 = *(_QWORD *)(v0 + 160);
    v2 = *(_QWORD *)(v0 + 168);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    KeyPath = swift_getKeyPath(&unk_10043E898);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for MusicFavoriteStatus.favorited(_:), v4);
    v7 = sub_10001254C(&qword_10055BB88, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v3, v2, &protocol witness table for Artist, v7);
    v8 = swift_release(KeyPath);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v8);
  }
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  *(_QWORD *)(v0 + 216) = v9;
  *v9 = v0;
  v9[1] = sub_10035CAF0;
  return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 168));
}

uint64_t sub_10035CAF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10035CD8C;
  else
    v4 = sub_10035CB50;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

uint64_t sub_10035CB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 192));
  MusicLibraryResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = sub_100012324(&qword_10055BB80, &qword_10055BB68, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  v6 = dispatch thunk of Collection.count.getter(v4, v5);
  if (!v6)
  {
LABEL_7:
    v22 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v24 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 136);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v7 = v6;
  v8 = v0 + 56;
  v9 = *(_QWORD *)(v0 + 96);
  sub_1002F94B4(0, v6 & ~(v6 >> 63), 0);
  result = dispatch thunk of Collection.startIndex.getter(v9);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v28 = v0 + 16;
    v11 = *(_QWORD *)(v0 + 80);
    do
    {
      v12 = *(_QWORD *)(v0 + 88);
      v13 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v28, v8, *(_QWORD *)(v0 + 96), v5);
      (*(void (**)(uint64_t))(v11 + 16))(v12);
      v13(v28, 0);
      v14 = v8;
      v15 = v5;
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_1002F94B4(v16 > 1, v17 + 1, 1);
      v18 = *(_QWORD *)(v0 + 88);
      v19 = *(_QWORD *)(v0 + 96);
      v20 = *(_QWORD *)(v0 + 72);
      _swiftEmptyArrayStorage[2] = v17 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v17, v18, v20);
      dispatch thunk of Collection.formIndex(after:)(v14, v19, v15);
      --v7;
      v5 = v15;
      v8 = v14;
    }
    while (v7);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10035CD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release(*(_QWORD *)(v0 + 192));
  if (qword_100557F08 != -1)
    swift_once(&qword_100557F08, sub_10034B0A4);
  v1 = *(_QWORD *)(v0 + 224);
  v2 = type metadata accessor for Logger(0);
  sub_10000D78C(v2, (uint64_t)qword_100563468);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 224);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v21 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 48) = v7;
    swift_errorRetain(v7);
    v10 = sub_10000B4C8(&qword_1005593C0);
    v11 = (char *)String.init<A>(describing:)(v0 + 48, v10);
    *(_QWORD *)(v8 + 4) = sub_1002E9B3C(v11, v12, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not load favorite artists error=%s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 224));
    swift_errorRelease(v7);
  }

  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_10035CFA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10055B27C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100012D1C;
  return sub_100347B78(a1, v4, v5, v7, v6);
}

uint64_t sub_10035D020(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_10000D900(a1, v1);
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter(v1, v2);
}

uint64_t sub_10035D064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003592E0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10035D06C()
{
  uint64_t v0;

  return sub_1003594A4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10035D074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100359888(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10035D07C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BBC0;
  if (!qword_10055BBC0)
  {
    v1 = sub_100011650(&qword_10055BBB0);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_100012324(&qword_10055BBC8, &qword_10055BBD0, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BBC0);
  }
  return result;
}

uint64_t sub_10035D108()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10035D13C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003579F8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10035D144()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BC48;
  if (!qword_10055BC48)
  {
    v1 = sub_100011650(&qword_10055BC28);
    v2[0] = sub_1000A43B8(&qword_10055BC50, &qword_10055BC58, (uint64_t (*)(void))sub_10035D1E0);
    v2[1] = sub_100012324(&qword_10055B928, &qword_10055DD30, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BC48);
  }
  return result;
}

unint64_t sub_10035D1E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10055BC60;
  if (!qword_10055BC60)
  {
    v1 = sub_100011650(&qword_10055BC68);
    v3[0] = sub_100011650(&qword_10055BC70);
    v3[1] = sub_10035D28C();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v2[1] = sub_100012324(&qword_10055AD10, &qword_10055ACC8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BC60);
  }
  return result;
}

unint64_t sub_10035D28C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BC78;
  if (!qword_10055BC78)
  {
    v1 = sub_100011650(&qword_10055BC70);
    v2[0] = sub_100012324(&qword_10055BC80, &qword_10055BC20, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = sub_100012324((unint64_t *)&unk_10055DA40, &qword_10055AD18, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BC78);
  }
  return result;
}

unint64_t sub_10035D328()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BC88;
  if (!qword_10055BC88)
  {
    v1 = sub_100011650(&qword_10055BC40);
    v2[0] = sub_10035D394();
    v2[1] = sub_10035D438();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BC88);
  }
  return result;
}

unint64_t sub_10035D394()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BC90;
  if (!qword_10055BC90)
  {
    v1 = sub_100011650(&qword_10055BC98);
    v2[0] = sub_1000962C0(&qword_10055BCA0, &qword_10055BCA8, &qword_10055BCB0, &qword_10055BCB8);
    v2[1] = sub_100012324((unint64_t *)&unk_10055DA40, &qword_10055AD18, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BC90);
  }
  return result;
}

unint64_t sub_10035D438()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_10055BCC0;
  if (!qword_10055BCC0)
  {
    v1 = sub_100011650(&qword_10055BCC8);
    v2 = sub_10001254C(&qword_10055BCD0, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10043E788);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10055BCC0);
  }
  return result;
}

uint64_t sub_10035D4B4()
{
  uint64_t v0;

  return sub_100358A50(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10035D4BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BCD8;
  if (!qword_10055BCD8)
  {
    v1 = sub_100011650(&qword_10055BC10);
    v2[0] = sub_1000A43B8(&qword_10055BCE0, &qword_10055BCE8, (uint64_t (*)(void))sub_10035D558);
    v2[1] = sub_100012324(&qword_10055B928, &qword_10055DD30, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BCD8);
  }
  return result;
}

unint64_t sub_10035D558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10055BCF0;
  if (!qword_10055BCF0)
  {
    v1 = sub_100011650(&qword_10055BCF8);
    v3[0] = sub_100011650(&qword_10055BD00);
    v3[1] = sub_1000962C0(&qword_10055BD08, &qword_10055BD00, (unint64_t *)&unk_10055DA40, &qword_10055AD18);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v2[1] = sub_100012324(&qword_10055AD10, &qword_10055ACC8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BCF0);
  }
  return result;
}

double sub_10035D640@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100358C50(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_10035D664()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 56);
  v3 = 1;
  v1 = sub_10000B4C8(&qword_10055BA08);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_10035D6B4()
{
  _QWORD *v0;

  swift_release(v0[3]);
  sub_100358F08(v0[4], v0[5]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

unint64_t sub_10035D700()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BD38;
  if (!qword_10055BD38)
  {
    v1 = sub_100011650(&qword_10055BAF8);
    v2[0] = sub_10035D784();
    v2[1] = sub_100012324(&qword_10055BD60, &qword_10055BB00, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BD38);
  }
  return result;
}

unint64_t sub_10035D784()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BD40;
  if (!qword_10055BD40)
  {
    v1 = sub_100011650(&qword_10055BAE8);
    v2[0] = sub_1000A43B8(&qword_10055BD48, &qword_10055BAE0, (uint64_t (*)(void))sub_10035D820);
    v2[1] = sub_100012324(&qword_10055B928, &qword_10055DD30, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BD40);
  }
  return result;
}

unint64_t sub_10035D820()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BD50;
  if (!qword_10055BD50)
  {
    v1 = sub_100011650(&qword_10055BAD8);
    v2[0] = sub_100012324(&qword_10055BD58, &qword_10055BAD0, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BD50);
  }
  return result;
}

uint64_t Logger.artwork.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F60, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_100366454);
}

uint64_t MPModelPlaylistType.variant.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a1)
  {
    case 0:
      v3 = (unsigned int *)&enum case for Playlist.Variant.regular(_:);
      goto LABEL_10;
    case 1:
      v3 = (unsigned int *)&enum case for Playlist.Variant.smart(_:);
      goto LABEL_10;
    case 2:
      v3 = (unsigned int *)&enum case for Playlist.Variant.genius(_:);
      goto LABEL_10;
    case 3:
      v3 = (unsigned int *)&enum case for Playlist.Variant.folder(_:);
      goto LABEL_10;
    case 4:
    case 5:
    case 6:
    case 8:
      v3 = (unsigned int *)&enum case for Playlist.Variant.subscribed(_:);
      goto LABEL_10;
    case 7:
      v3 = (unsigned int *)&enum case for Playlist.Variant.personalMix(_:);
      goto LABEL_10;
    case 9:
      v3 = (unsigned int *)&enum case for Playlist.Variant.favoriteSongs(_:);
LABEL_10:
      v8 = *v3;
      v9 = type metadata accessor for Playlist.Variant(0);
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v9;
      break;
    default:
      v4 = type metadata accessor for Playlist.Variant(0);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      break;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t Playlist.Variant.symbolName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
    return 0x7061687372616567;
  if (v6 == enum case for Playlist.Variant.genius(_:))
    return 0x7375696E6567;
  if (v6 == enum case for Playlist.Variant.folder(_:))
    return 0x7265646C6F66;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6F6E2E636973756DLL;
}

uint64_t ArtworkImage.ViewModel.init(artwork:cropStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  return sub_100011530(a2, a3 + *(int *)(v7 + 20), &qword_100558E20);
}

uint64_t Artwork.CropStyle.fallback.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F50, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_100366284);
}

uint64_t sub_10035DB88(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = a2(0);
  return sub_10000D78C(v6, a3);
}

uint64_t Artwork.ImageFormat.fallback.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F58, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_1003662F0);
}

uint64_t sub_10035DBF0@<X0>(uint64_t a1@<X8>)
{
  return sub_10035DE04(&qword_10055EBC0, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, (char *)0x417373696D736944, (char *)0xED00006E6F697463, a1);
}

uint64_t sub_10035DC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_1002E9B3C((char *)0xD000000000000011, (char *)0x8000000100453230, &v15);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = sub_10037035C(a1, a2, 0);
    (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v13);
    return v15;
  }
  return a1;
}

uint64_t sub_10035DDD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10035DE04((uint64_t *)&unk_100558290, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (char *)0x694474756F79614CLL, (char *)0xEF6E6F6974636572, a1);
}

uint64_t sub_10035DE04@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;

  v27 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(a1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100011370(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v19 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a5, v17, v19);
  }
  else
  {
    v21 = *v17;
    v22 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
    v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v28 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)(v24 + 4) = sub_1002E9B3C(a3, v27, &v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v21);
    v26 = swift_release(v21);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

uint64_t sub_10035E00C@<X0>(uint64_t a1@<X8>)
{
  return sub_10035DE04(&qword_1005582A0, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (char *)0x5463696D616E7944, (char *)0xEF657A6953657079, a1);
}

uint64_t sub_10035E040(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned __int8 v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v10, v9))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v14 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v11 + 4) = sub_1002E9B3C((char *)0x6C6F6F42, (char *)0xE400000000000000, &v14);
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_10004CAC0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_10035E1CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10035DE04(&qword_100558318, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (char *)0x686353726F6C6F43, (char *)0xEB00000000656D65, a1);
}

uint64_t sub_10035E1FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10035E228(&qword_1005582B0, &qword_1005585B0, (char *)0xD000000000000020, (char *)0x8000000100453200, a1);
}

uint64_t sub_10035E228@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t v27;

  v26 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(a1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100011370(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
    return sub_100011530((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v23 = swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v27 = v24;
    *(_DWORD *)v23 = 136315138;
    *(_QWORD *)(v23 + 4) = sub_1002E9B3C(a3, v26, &v27);
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  v25 = swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
}

uint64_t sub_10035E420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_100370330(a1, a2);
  }
  else
  {
    swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v12, v11))
    {
      v13 = swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v13 + 4) = sub_1002E9B3C((char *)0xD000000000000019, (char *)0x80000001004531E0, &v18);
      _os_log_impl((void *)&_mh_execute_header, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    v15 = sub_1003702F4(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v6, v15);
    return v18;
  }
  return a1;
}

uint64_t sub_10035E5E4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned __int8 v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_1002E9B3C((char *)0xD000000000000017, (char *)0x80000001004531C0, &v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_10004CAC0(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_10035E778(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_1002E9B3C((char *)0x6C616E6F6974704FLL, (char *)0xEF3E726F6C6F433CLL, &v16);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = j__swift_release(a1);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
    return v16;
  }
  return a1;
}

uint64_t sub_10035E914@<X0>(uint64_t a1@<X8>)
{
  return sub_10035DE04((uint64_t *)&unk_100558280, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, (char *)0xD000000000000013, (char *)0x80000001004531A0, a1);
}

uint64_t ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4 & 1;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = a6 & 1;
  *(_BYTE *)(a8 + 41) = a7;
  return result;
}

uint64_t static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  __n128 v53;
  char *v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;

  v59 = a4;
  v70 = a2;
  v67 = a5;
  v68 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  __chkstk_darwin();
  v69 = v7;
  v63 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_100558E20);
  __chkstk_darwin();
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_10055B940);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  __chkstk_darwin();
  v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8((uint64_t *)&unk_10055EC10);
  __chkstk_darwin();
  v58 = (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v55 - v17;
  sub_10000B4C8((uint64_t *)&unk_10055E870);
  __chkstk_darwin();
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for ArtworkImage(0);
  v21 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin();
  v71 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (char *)&v55 - v23;
  __chkstk_darwin();
  v25 = (char *)&v55 - v24;
  __chkstk_darwin();
  v72 = (char *)&v55 - v26;
  v60 = a1;
  sub_100011370(a1, (uint64_t)v18, (uint64_t *)&unk_10055EC10);
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
  if (v57(v18, 1, v27) == 1)
  {
    sub_100011694((uint64_t)v18, (uint64_t *)&unk_10055EC10);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v20, 1, 1, v28);
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    v55 = v25;
    v56 = a3;
    v30 = v9;
    v31 = v13;
    v32 = v11;
    v33 = v10;
    v34 = v29;
    v35 = v21;
    v36 = *(_QWORD *)(v29 - 8);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v20, v18, v29);
    sub_10000E750((uint64_t)v18, type metadata accessor for ArtworkImage.ViewModel);
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
    v21 = v35;
    v38 = v34;
    v10 = v33;
    v11 = v32;
    v13 = v31;
    v9 = v30;
    v25 = v55;
    a3 = v56;
    v37(v20, 0, 1, v38);
  }
  sub_10035F37C((uint64_t)v20, *(_QWORD *)a3, *(_BYTE *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_BYTE *)(a3 + 24));
  ArtworkImage.artworkReusablePolicy(_:)(v59);
  v39 = v58;
  sub_100011370(v60, v58, (uint64_t *)&unk_10055EC10);
  if (v57((char *)v39, 1, v27) == 1)
  {
    sub_100011694(v39, (uint64_t *)&unk_10055EC10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  else
  {
    sub_100011370(v39 + *(int *)(v27 + 20), (uint64_t)v9, &qword_100558E20);
    sub_10000E750(v39, type metadata accessor for ArtworkImage.ViewModel);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      goto LABEL_11;
    }
  }
  if (qword_100557F50 != -1)
    swift_once(&qword_100557F50, sub_100366284);
  v40 = sub_10000D78C(v10, (uint64_t)static Artwork.CropStyle.fallback);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v40, v10);
  sub_100011694((uint64_t)v9, &qword_100558E20);
LABEL_11:
  v41 = v61;
  v42 = v71;
  ArtworkImage.artworkCropStyle(_:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v43 = *(void (**)(char *, uint64_t))(v21 + 8);
  v44 = v66;
  v43(v42, v66);
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(a3 + 32), *(unsigned __int8 *)(a3 + 40), *(unsigned __int8 *)(a3 + 41));
  v43(v41, v44);
  v45 = v63;
  sub_10000D964(v70, v63, type metadata accessor for ArtworkImage.Placeholder);
  v46 = *(unsigned __int8 *)(v68 + 80);
  v47 = (v46 + 58) & ~v46;
  v48 = (_OWORD *)swift_allocObject(&unk_100520718, v47 + v69, v46 | 7);
  v49 = *(_OWORD *)(a3 + 16);
  v48[1] = *(_OWORD *)a3;
  v48[2] = v49;
  *(_OWORD *)((char *)v48 + 42) = *(_OWORD *)(a3 + 26);
  sub_10000DB44(v45, (uint64_t)v48 + v47, type metadata accessor for ArtworkImage.Placeholder);
  v50 = sub_10000B4C8((uint64_t *)&unk_10055DC00);
  v51 = sub_100366604();
  v52 = v62;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_100366594, v48, v50, v51);
  v53 = swift_release(v48);
  ((void (*)(char *, uint64_t, __n128))v43)(v25, v44, v53);
  v43(v72, v44);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(v67, v52, v65);
}

uint64_t ArtworkImage.ViewModel.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Artwork(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10035F03C(type metadata accessor for ArtworkImage.ViewModel, (uint64_t)&qword_100558E20, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100011370, a1);
}

uint64_t ArtworkImage.ViewModel.calculatedAspectRatio.getter()
{
  double v0;
  uint64_t result;

  if (Artwork.maximumWidth.getter() < 1 || Artwork.maximumHeight.getter() < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    v0 = (double)Artwork.maximumWidth.getter();
    *(double *)&result = v0 / (double)Artwork.maximumHeight.getter();
  }
  return result;
}

uint64_t ArtworkImage.Info.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011370(v1, a1, (uint64_t *)&unk_10055EC10);
}

uint64_t ArtworkImage.Info.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10035F03C(type metadata accessor for ArtworkImage.Info, (uint64_t)type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000D964, a1);
}

uint64_t sub_10035F03C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ArtworkImage.Info.aspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24));
}

uint64_t ArtworkImage.Info.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  result = type metadata accessor for ArtworkImage.Info(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = v4[2];
  v8 = *((_BYTE *)v4 + 24);
  v9 = v4[4];
  v10 = *((_BYTE *)v4 + 40);
  LOBYTE(v4) = *((_BYTE *)v4 + 41);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 41) = (_BYTE)v4;
  return result;
}

uint64_t ArtworkImage.Info.corner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32));
}

__n128 ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __n128 result;
  uint64_t v22;

  sub_100011530(a1, a9, (uint64_t *)&unk_10055EC10);
  v17 = (int *)type metadata accessor for ArtworkImage.Info(0);
  sub_10000DB44(a2, a9 + v17[5], type metadata accessor for ArtworkImage.Placeholder);
  v18 = a9 + v17[6];
  *(_QWORD *)v18 = a3;
  *(_BYTE *)(v18 + 8) = a4 & 1;
  v19 = a9 + v17[7];
  v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)v19 = *(_OWORD *)a5;
  *(_OWORD *)(v19 + 16) = v20;
  result = *(__n128 *)(a5 + 26);
  *(__n128 *)(v19 + 26) = result;
  v22 = a9 + v17[8];
  *(_QWORD *)v22 = a6;
  *(_QWORD *)(v22 + 8) = a7;
  *(_BYTE *)(v22 + 16) = a8 & 1;
  return result;
}

uint64_t ArtworkImage.Size.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ArtworkImage.Size.height.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ArtworkImage.Size.fittingAspectRatio.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.init(cgSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3 & 1;
  if ((a3 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  *(_QWORD *)a4 = v5;
  *(_BYTE *)(a4 + 8) = v4;
  if ((a3 & 1) != 0)
    v6 = 0;
  else
    v6 = a2;
  *(_QWORD *)(a4 + 16) = v6;
  *(_BYTE *)(a4 + 24) = v4;
  *(_QWORD *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 513;
  return result;
}

void *CGFloat.squareAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.squareAspectRatio;
}

uint64_t ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result / a6;
    if ((a4 & 1) == 0 && a3 > a6)
    {
      v6 = *(double *)&result / a3;
      *(double *)&result = *(double *)&result / a3 * a6;
    }
  }
  *(double *)a5 = *(double *)&result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = v6;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result * a6;
    if ((a4 & 1) == 0 && a3 < a6)
    {
      v6 = *(double *)&result * a3;
      *(double *)&result = *(double *)&result * a3 / a6;
    }
  }
  *(double *)a5 = v6;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = *(double *)&result;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t sub_10035F334(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(__int128 *)((char *)a1 + 26);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(__int128 *)((char *)a2 + 26);
  return _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_10035F37C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  sub_10000B4C8((uint64_t *)&unk_10055E870);
  __chkstk_darwin();
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = (char *)&v14 - v11;
  if ((a3 & 1) != 0)
  {
    sub_100011370(a1, (uint64_t)&v14 - v11, (uint64_t *)&unk_10055E870);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:)(v12);
    else
      ArtworkImage.init(_:height:)(v12, *(double *)&a4);
  }
  else
  {
    sub_100011370(a1, (uint64_t)&v14 - v11, (uint64_t *)&unk_10055E870);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:width:)(v12, *(double *)&a2);
    else
      ArtworkImage.init(_:width:height:)(v12, *(double *)&a2, *(double *)&a4);
  }
  return sub_100011694(a1, (uint64_t *)&unk_10055E870);
}

uint64_t sub_10035F4CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (**v8)@<X0>(uint64_t@<X8>);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[3];
  _BYTE v61[16];
  uint64_t v62;
  char v63;

  v56 = a2;
  v59 = a3;
  v4 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10000B4C8(&qword_10055C598);
  __chkstk_darwin();
  v8 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v13 = (char *)&v53 - v12;
  v53 = sub_10000B4C8(&qword_10055BD90);
  __chkstk_darwin();
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10000B4C8(&qword_10055BD88);
  __chkstk_darwin();
  v54 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v55 = (uint64_t)&v53 - v17;
  sub_100011530(a1, (uint64_t)v61, &qword_10055C5D0);
  sub_100011530((uint64_t)v61, (uint64_t)&v62, &qword_10055C5D0);
  if ((v63 & 1) != 0 || (*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    sub_10000D964(v56, (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkImage.Placeholder);
    v18 = *(unsigned __int8 *)(v4 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject(&unk_100520B08, v20 + 42, v18 | 7);
    sub_10000DB44((uint64_t)v6, v21 + v19, type metadata accessor for ArtworkImage.Placeholder);
    v22 = (_OWORD *)(v21 + v20);
    v23 = *(_OWORD *)(a1 + 16);
    *v22 = *(_OWORD *)a1;
    v22[1] = v23;
    *(_OWORD *)((char *)v22 + 26) = *(_OWORD *)(a1 + 26);
    *v8 = sub_100370828;
    v8[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v21;
    swift_storeEnumTagMultiPayload(v8, v58, 1);
    v24 = sub_10000B4C8((uint64_t *)&unk_10055DC50);
    v25 = sub_100366688();
    v26 = sub_100012324(&qword_10055BDA0, (uint64_t *)&unk_10055DC50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    return _ConditionalContent<>.init(storage:)(v8, v57, v24, v25, v26);
  }
  else
  {
    v28 = *(_QWORD *)(a1 + 16);
    v29 = v62;
    sub_1003611A0();
    v31 = v30;
    v33 = v32;
    sub_1003611A0();
    v35 = v34;
    swift_bridgeObjectRelease();
    sub_1003611A0();
    v37 = v36;
    swift_bridgeObjectRelease();
    v38 = (_QWORD *)((char *)v11 + *(int *)(v9 + 32));
    *v38 = swift_getKeyPath(&unk_10043EA90);
    v39 = sub_10000B4C8(&qword_100558278);
    swift_storeEnumTagMultiPayload(v38, v39, 0);
    v40 = (_QWORD *)((char *)v11 + *(int *)(v9 + 36));
    *v40 = swift_getKeyPath(&unk_10043EAB8);
    v41 = sub_10000B4C8((uint64_t *)&unk_100558280);
    swift_storeEnumTagMultiPayload(v40, v41, 0);
    *v11 = v31;
    v11[1] = v33;
    v11[2] = v35;
    v11[3] = v29;
    v11[4] = v28;
    v11[5] = v37;
    sub_10000DB44((uint64_t)v11, (uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    sub_10000D964((uint64_t)v13, (uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    v15[*(int *)(v53 + 36)] = 0;
    v42 = sub_10000E750((uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    v43 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(v60, v29, 0, v28, 0, v43, v44);
    v45 = v54;
    sub_100011370((uint64_t)v15, v54, &qword_10055BD90);
    v46 = v57;
    v47 = (_OWORD *)(v45 + *(int *)(v57 + 36));
    v48 = v60[1];
    *v47 = v60[0];
    v47[1] = v48;
    v47[2] = v60[2];
    sub_100011694((uint64_t)v15, &qword_10055BD90);
    v49 = v55;
    sub_100011530(v45, v55, &qword_10055BD88);
    sub_100011370(v49, (uint64_t)v8, &qword_10055BD88);
    swift_storeEnumTagMultiPayload(v8, v58, 0);
    v50 = sub_10000B4C8((uint64_t *)&unk_10055DC50);
    v51 = sub_100366688();
    v52 = sub_100012324(&qword_10055BDA0, (uint64_t *)&unk_10055DC50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    _ConditionalContent<>.init(storage:)(v8, v46, v50, v51, v52);
    return sub_100011694(v49, &qword_10055BD88);
  }
}

uint64_t ArtworkImage.Placeholder.view(availableSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v6 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v27 - v10;
  sub_1003611A0();
  v13 = v12;
  v15 = v14;
  sub_1003611A0();
  v17 = v16;
  swift_bridgeObjectRelease(v18);
  sub_1003611A0();
  v20 = v19;
  swift_bridgeObjectRelease(v21);
  v22 = &v9[*(int *)(v6 + 32)];
  *(_QWORD *)v22 = swift_getKeyPath(&unk_10043EA90);
  v23 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  v24 = &v9[*(int *)(v6 + 36)];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_10043EAB8);
  v25 = sub_10000B4C8((uint64_t *)&unk_100558280);
  swift_storeEnumTagMultiPayload(v24, v25, 0);
  *(_QWORD *)v9 = v13;
  *((_QWORD *)v9 + 1) = v15;
  *((_QWORD *)v9 + 2) = v17;
  *((double *)v9 + 3) = a2;
  *((double *)v9 + 4) = a3;
  *((_QWORD *)v9 + 5) = v20;
  sub_10000DB44((uint64_t)v9, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_10000D964((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View);
  *(_BYTE *)(a1 + *(int *)(sub_10000B4C8(&qword_10055BD90) + 36)) = 0;
  return sub_10000E750((uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
}

uint64_t sub_10035FB20@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a2;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v5 = (double *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v38 - v6;
  v8 = sub_10000B4C8(&qword_10055BD90);
  v9 = __chkstk_darwin();
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = GeometryProxy.size.getter(v9);
  v14 = v13;
  sub_1003611A0();
  v16 = v15;
  v18 = v17;
  sub_1003611A0();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_1003611A0();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v23 = swift_getKeyPath(&unk_10043EA90);
  v24 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v25 = swift_getKeyPath(&unk_10043EAB8);
  v26 = sub_10000B4C8((uint64_t *)&unk_100558280);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v20;
  v5[3] = v12;
  *((_QWORD *)v5 + 4) = v14;
  *((_QWORD *)v5 + 5) = v22;
  sub_10000DB44((uint64_t)v5, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_10000D964((uint64_t)v7, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  v11[*(int *)(v8 + 36)] = 0;
  v27 = sub_10000E750((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  v28 = *a1;
  v29 = *((unsigned __int8 *)a1 + 8);
  v30 = a1[2];
  v31 = *((unsigned __int8 *)a1 + 24);
  v32 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v40, v28, v29, v30, v31, v32, v33);
  v34 = v39;
  sub_100011370((uint64_t)v11, v39, &qword_10055BD90);
  v35 = (_OWORD *)(v34 + *(int *)(sub_10000B4C8(&qword_10055BD88) + 36));
  v36 = v40[1];
  *v35 = v40[0];
  v35[1] = v36;
  v35[2] = v40[2];
  return sub_100011694((uint64_t)v11, &qword_10055BD90);
}

uint64_t ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_100011530(a1, a7, &qword_10055BDA8);
  v13 = (int *)type metadata accessor for ArtworkMotionView(0);
  sub_100011530(a2, a7 + v13[5], (uint64_t *)&unk_10055E870);
  sub_100011530(a3, a7 + v13[6], &qword_100558E20);
  v14 = (_OWORD *)(a7 + v13[7]);
  v15 = a4[1];
  *v14 = *a4;
  v14[1] = v15;
  *(_OWORD *)((char *)v14 + 26) = *(_OWORD *)((char *)a4 + 26);
  sub_100011530(a5, a7 + v13[8], &qword_10055BDB0);
  v16 = a7 + v13[9];
  v17 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a6, v17);
}

uint64_t ArtworkMotionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v79 = a1;
  sub_10000B4C8(&qword_100558E20);
  __chkstk_darwin();
  v70 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Artwork.CropStyle(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v77 = v5;
  v78 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v61 - v6;
  sub_10000B4C8(&qword_10055BDA8);
  __chkstk_darwin();
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8((uint64_t *)&unk_10055E870);
  __chkstk_darwin();
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v61 - v12;
  v74 = type metadata accessor for ArtworkImage(0);
  v61 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v61 - v16;
  __chkstk_darwin();
  v19 = (char *)&v61 - v18;
  __chkstk_darwin();
  v64 = (char *)&v61 - v20;
  v21 = sub_10000B4C8(&qword_10055BDB8);
  v67 = *(_QWORD *)(v21 - 8);
  v68 = v21;
  __chkstk_darwin();
  v65 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10000B4C8(&qword_10055BDC0);
  __chkstk_darwin();
  v69 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10000B4C8(&qword_10055BDC8);
  __chkstk_darwin();
  v66 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(v2, (uint64_t)v9, &qword_10055BDA8);
  v25 = type metadata accessor for VideoArtwork(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
  {
    sub_100011694((uint64_t)v9, &qword_10055BDA8);
    v27 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 1, 1, v27);
  }
  else
  {
    VideoArtwork.previewFrame.getter();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
    v27 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 0, 1, v27);
  }
  sub_10000D964(v2, (uint64_t)v7, type metadata accessor for ArtworkMotionView);
  type metadata accessor for Artwork(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v27);
  v30 = v74;
  if (v29 == 1)
  {
    v31 = (int *)v72;
    sub_100011370((uint64_t)&v7[*(int *)(v72 + 20)], (uint64_t)v13, (uint64_t *)&unk_10055E870);
    sub_10000E750((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    sub_100011694((uint64_t)v11, (uint64_t *)&unk_10055E870);
  }
  else
  {
    sub_10000E750((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v13, v11, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, v27);
    v31 = (int *)v72;
  }
  ArtworkImage.init(_:)(v13);
  ArtworkImage.artworkReusablePolicy(_:)(v2 + v31[9]);
  v32 = *(void (**)(char *, uint64_t))(v61 + 8);
  v32(v15, v30);
  v33 = v70;
  sub_100011370(v2 + v31[6], v70, &qword_100558E20);
  v34 = v73;
  v35 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v33, 1, v75) == 1)
  {
    v36 = v71;
    if (qword_100557F50 != -1)
      swift_once(&qword_100557F50, sub_100366284);
    v37 = sub_10000D78C(v35, (uint64_t)static Artwork.CropStyle.fallback);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v37, v35);
    sub_100011694(v33, &qword_100558E20);
  }
  else
  {
    v36 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v71, v33, v35);
  }
  ArtworkImage.artworkCropStyle(_:)(v36);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
  v32(v17, v30);
  v38 = v64;
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(v2 + v31[7] + 32), *(unsigned __int8 *)(v2 + v31[7] + 40), *(unsigned __int8 *)(v2 + v31[7] + 41));
  v32(v19, v30);
  v39 = v78;
  sub_10000D964(v2, v78, type metadata accessor for ArtworkMotionView);
  v40 = *(unsigned __int8 *)(v76 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = swift_allocObject(&unk_100520740, v41 + v77, v40 | 7);
  sub_10000DB44(v39, v42 + v41, type metadata accessor for ArtworkMotionView);
  v43 = sub_10000B4C8(&qword_10055BDD0);
  v44 = sub_1003684AC();
  v45 = v65;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_100368440, v42, v43, v44);
  v46 = swift_release(v42);
  v47 = ((uint64_t (*)(char *, uint64_t, __n128))v32)(v38, v30, v46);
  v48 = static Alignment.center.getter(v47);
  v50 = v49;
  v51 = (uint64_t)v69;
  v52 = (uint64_t)&v69[*(int *)(v62 + 36)];
  sub_100360E64(v2, v52);
  v53 = (uint64_t *)(v52 + *(int *)(sub_10000B4C8(&qword_10055BDE0) + 36));
  *v53 = v48;
  v53[1] = v50;
  v54 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 32))(v51, v45, v68);
  v56 = static Animation.default.getter(v54, v55);
  v57 = (uint64_t)v66;
  v58 = (uint64_t *)&v66[*(int *)(v63 + 36)];
  v59 = sub_10000B4C8(&qword_10055BDE8);
  sub_100011370(v2, (uint64_t)v58 + *(int *)(v59 + 36), &qword_10055BDA8);
  *v58 = v56;
  sub_100011530(v51, v57, &qword_10055BDC0);
  return sub_100011530(v57, v79, &qword_10055BDC8);
}

uint64_t sub_100360580@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)@<X0>(uint64_t@<X8>);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t (**v63)@<X0>(uint64_t@<X8>);
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)@<X0>(uint64_t@<X8>);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD v85[3];

  v84 = a2;
  v3 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v76 + 64);
  __chkstk_darwin();
  v77 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10000B4C8(&qword_10055C598);
  __chkstk_darwin();
  v81 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v71 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v72 = (uint64_t)&v68 - v7;
  v70 = sub_10000B4C8(&qword_10055BD90);
  __chkstk_darwin();
  v74 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_10000B4C8(&qword_10055BD88);
  __chkstk_darwin();
  v73 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v75 = (uint64_t)&v68 - v10;
  v11 = sub_10000B4C8((uint64_t *)&unk_10055DC00);
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  __chkstk_darwin();
  v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BDB0);
  __chkstk_darwin();
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin();
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v68 - v19;
  sub_100011370(a1 + *(int *)(v3 + 32), (uint64_t)v14, &qword_10055BDB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100011694((uint64_t)v14, &qword_10055BDB0);
    v21 = 1;
    v22 = v84;
  }
  else
  {
    sub_10000DB44((uint64_t)v14, (uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v23 = a1 + *(int *)(v3 + 28);
    if ((*(_BYTE *)(v23 + 8) & 1) != 0 || (*(_BYTE *)(v23 + 24) & 1) != 0)
    {
      sub_10000D964((uint64_t)v20, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
      v24 = a1;
      v25 = v77;
      sub_10000D964(v24, v77, type metadata accessor for ArtworkMotionView);
      v26 = *(unsigned __int8 *)(v16 + 80);
      v27 = (v26 + 16) & ~v26;
      v28 = *(unsigned __int8 *)(v76 + 80);
      v29 = (v17 + v28 + v27) & ~v28;
      v30 = swift_allocObject(&unk_100520AE0, v29 + v4, v26 | v28 | 7);
      sub_10000DB44((uint64_t)v18, v30 + v27, type metadata accessor for ArtworkImage.Placeholder);
      sub_10000DB44(v25, v30 + v29, type metadata accessor for ArtworkMotionView);
      v31 = v80;
      v32 = v81;
      *v81 = sub_1003706E8;
      v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v30;
      swift_storeEnumTagMultiPayload(v32, v31, 1);
      v33 = sub_10000B4C8((uint64_t *)&unk_10055DC50);
      v34 = sub_100366688();
      v35 = sub_100012324(&qword_10055BDA0, (uint64_t *)&unk_10055DC50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v32, v79, v33, v34, v35);
    }
    else
    {
      v37 = *(_QWORD *)v23;
      v38 = *(_QWORD *)(v23 + 16);
      sub_1003611A0();
      v40 = v39;
      v42 = v41;
      sub_1003611A0();
      v44 = v43;
      swift_bridgeObjectRelease();
      sub_1003611A0();
      v46 = v45;
      swift_bridgeObjectRelease();
      v47 = v69;
      v48 = v71;
      v49 = &v71[*(int *)(v69 + 32)];
      *(_QWORD *)v49 = swift_getKeyPath(&unk_10043EA90);
      v50 = sub_10000B4C8(&qword_100558278);
      swift_storeEnumTagMultiPayload(v49, v50, 0);
      v51 = (_QWORD *)((char *)v48 + *(int *)(v47 + 36));
      *v51 = swift_getKeyPath(&unk_10043EAB8);
      v52 = sub_10000B4C8((uint64_t *)&unk_100558280);
      swift_storeEnumTagMultiPayload(v51, v52, 0);
      *v48 = v40;
      v48[1] = v42;
      v48[2] = v44;
      v48[3] = v37;
      v48[4] = v38;
      v48[5] = v46;
      v53 = v72;
      sub_10000DB44((uint64_t)v48, v72, type metadata accessor for ArtworkImage.Placeholder.View);
      v54 = v74;
      sub_10000D964(v53, v74, type metadata accessor for ArtworkImage.Placeholder.View);
      *(_BYTE *)(v54 + *(int *)(v70 + 36)) = 0;
      v55 = sub_10000E750(v53, type metadata accessor for ArtworkImage.Placeholder.View);
      v56 = static Alignment.center.getter(v55);
      _FrameLayout.init(width:height:alignment:)(v85, v37, 0, v38, 0, v56, v57);
      v58 = v73;
      sub_100011370(v54, v73, &qword_10055BD90);
      v59 = v79;
      v60 = (_OWORD *)(v58 + *(int *)(v79 + 36));
      v61 = v85[1];
      *v60 = v85[0];
      v60[1] = v61;
      v60[2] = v85[2];
      sub_100011694(v54, &qword_10055BD90);
      v62 = v75;
      sub_100011530(v58, v75, &qword_10055BD88);
      v63 = v81;
      sub_100011370(v62, (uint64_t)v81, &qword_10055BD88);
      swift_storeEnumTagMultiPayload(v63, v80, 0);
      v64 = sub_10000B4C8((uint64_t *)&unk_10055DC50);
      v65 = sub_100366688();
      v66 = sub_100012324(&qword_10055BDA0, (uint64_t *)&unk_10055DC50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v63, v59, v64, v65, v66);
      sub_100011694(v62, &qword_10055BD88);
    }
    sub_10000E750((uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v22 = v84;
    sub_100011530(v36, v84, (uint64_t *)&unk_10055DC00);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v22, v21, 1, v83);
}

uint64_t sub_100360BF8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a1;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v5 = (double *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v38 - v6;
  v8 = sub_10000B4C8(&qword_10055BD90);
  v9 = __chkstk_darwin();
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = GeometryProxy.size.getter(v9);
  v14 = v13;
  sub_1003611A0();
  v16 = v15;
  v18 = v17;
  sub_1003611A0();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_1003611A0();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v23 = swift_getKeyPath(&unk_10043EA90);
  v24 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v25 = swift_getKeyPath(&unk_10043EAB8);
  v26 = sub_10000B4C8((uint64_t *)&unk_100558280);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v20;
  v5[3] = v12;
  *((_QWORD *)v5 + 4) = v14;
  *((_QWORD *)v5 + 5) = v22;
  sub_10000DB44((uint64_t)v5, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_10000D964((uint64_t)v7, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  v11[*(int *)(v8 + 36)] = 0;
  sub_10000E750((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  v27 = type metadata accessor for ArtworkMotionView(0);
  v28 = (uint64_t *)(v39 + *(int *)(v27 + 28));
  v29 = *v28;
  v30 = *((unsigned __int8 *)v28 + 8);
  v31 = v28[2];
  v32 = *((unsigned __int8 *)v28 + 24);
  v33 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v40, v29, v30, v31, v32, v33, v34);
  sub_100011370((uint64_t)v11, a2, &qword_10055BD90);
  v35 = (_OWORD *)(a2 + *(int *)(sub_10000B4C8(&qword_10055BD88) + 36));
  v36 = v40[1];
  *v35 = v40[0];
  v35[1] = v36;
  v35[2] = v40[2];
  return sub_100011694((uint64_t)v11, &qword_10055BD90);
}

uint64_t sub_100360E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = sub_10000B4C8(&qword_10055C578);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  __chkstk_darwin();
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for URL(0);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10055C580);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10055C588);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BDA8);
  __chkstk_darwin();
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(v33, (uint64_t)v13, &qword_10055BDA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100011694((uint64_t)v13, &qword_10055BDA8);
    v18 = 1;
    v19 = v34;
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    VideoArtwork.url.getter(v20);
    MotionView.init(url:previewFrame:fallback:)(v5, sub_100370888, 0, sub_100361178, 0, &type metadata for Color, &type metadata for Color);
    v21 = sub_100012324(&qword_10055C590, &qword_10055C580, (const char *)&protocol conformance descriptor for MotionView<A, B>);
    v22 = v30;
    View.mcui.getter(v6, v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    v23 = v29;
    v24 = v32;
    MCUINamespace<A>.motionShouldResetOnSizeChange(_:)(0, v32, v21);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v25 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v34, v23, v9);
    v18 = 0;
    v19 = v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19, v18, 1, v9);
}

uint64_t sub_100361178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Color.clear.getter();
  *a1 = result;
  return result;
}

void sub_1003611A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Variant(0);
  v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v3 = sub_10000B4C8(&qword_100558BB8);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D964(v0, (uint64_t)v7, v8);
  v9 = sub_10000B4C8(&qword_10055EC50);
  v10 = (char *)sub_1003612F0
      + 4
      * byte_10043EA0A[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 10, v9)];
  __asm { BR              X10 }
}

double sub_1003612F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  double v10;

  sub_100011530(v5, v4, &qword_100558BB8);
  sub_100011370(v4, v2, &qword_100558BB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, enum case for Playlist.Variant.regular(_:), v0);
    sub_100011694(v2, &qword_100558BB8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1, v0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v3, v0);
  if (v8 != enum case for Playlist.Variant.smart(_:)
    && v8 != enum case for Playlist.Variant.genius(_:)
    && v8 != enum case for Playlist.Variant.folder(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v0);
  }
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  v10 = ((double (*)(uint64_t))static Font.Weight.light.getter)(v9);
  sub_100011694(v4, &qword_100558BB8);
  return v10;
}

uint64_t ArtworkImage.Placeholder.View.init(name:weight:availableSize:scaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;

  v14 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v15 = (_QWORD *)(a3 + *(int *)(v14 + 32));
  *v15 = swift_getKeyPath(&unk_10043EA90);
  v16 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = (_QWORD *)(a3 + *(int *)(v14 + 36));
  *v17 = swift_getKeyPath(&unk_10043EAB8);
  v18 = sub_10000B4C8((uint64_t *)&unk_100558280);
  result = swift_storeEnumTagMultiPayload(v17, v18, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(double *)(a3 + 32) = a6;
  *(double *)(a3 + 40) = a7;
  return result;
}

uint64_t EnvironmentValues.placeholderStyle.getter()
{
  unint64_t v0;

  v0 = sub_100368510();
  return EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v0);
}

uint64_t sub_1003616EC()
{
  unint64_t v0;

  v0 = sub_100368510();
  return EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v0);
}

uint64_t sub_100361728(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v8;

  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v8 - v4;
  sub_100011370(a1, (uint64_t)&v8 - v4, &qword_10055BDF8);
  sub_100011370((uint64_t)v5, (uint64_t)v3, &qword_10055BDF8);
  v6 = sub_100368510();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v6);
  return sub_100011694((uint64_t)v5, &qword_10055BDF8);
}

uint64_t EnvironmentValues.placeholderStyle.setter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v6;

  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a1, (uint64_t)v3, &qword_10055BDF8);
  v4 = sub_100368510();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v4);
  return sub_100011694(a1, &qword_10055BDF8);
}

uint64_t ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v2 = (uint64_t *)v1;
  v44 = a1;
  v43 = sub_10000B4C8(&qword_10055BE00);
  __chkstk_darwin();
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000B4C8(&qword_10055BE08);
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v41 - v9;
  v11 = v1[3];
  v12 = v1[4];
  v13 = v1[5];
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  sub_10035E228(&qword_100558278, &qword_10055BDF8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v10);
  v14 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  if (v15(v10, 1, v14) == 1)
  {
    sub_100011694((uint64_t)v10, &qword_10055BDF8);
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
  }
  else
  {
    sub_100011370((uint64_t)(v10 + 40), (uint64_t)&v45, (uint64_t *)&unk_10055DC90);
    sub_10000E750((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v46 + 1))
    {
      sub_1000B47A8(&v45, (uint64_t)v48);
      v16 = v49;
      v41 = v50;
      sub_10000D900(v48, v49);
      __chkstk_darwin();
      v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      v20 = AnyShapeStyle.init<A>(_:)(v18, v16, v41);
      sub_100011758(v48);
      goto LABEL_6;
    }
  }
  sub_100011694((uint64_t)&v45, (uint64_t *)&unk_10055DC90);
  v20 = 0;
LABEL_6:
  sub_10035E228(&qword_100558278, &qword_10055BDF8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v8);
  if (v15(v8, 1, v14) == 1)
  {
    sub_100011694((uint64_t)v8, &qword_10055BDF8);
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
  }
  else
  {
    sub_100011370((uint64_t)v8, (uint64_t)&v45, (uint64_t *)&unk_10055DC90);
    sub_10000E750((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v46 + 1))
    {
      sub_1000B47A8(&v45, (uint64_t)v48);
      v21 = v49;
      v22 = v50;
      sub_10000D900(v48, v49);
      __chkstk_darwin();
      v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v25 + 16))(v24);
      v26 = AnyShapeStyle.init<A>(_:)(v24, v21, v22);
      v27 = sub_100011758(v48);
      goto LABEL_11;
    }
  }
  v27 = sub_100011694((uint64_t)&v45, (uint64_t *)&unk_10055DC90);
  v26 = 0;
LABEL_11:
  v28 = static Color.clear.getter(v27);
  if (v20)
  {
    v29 = v20;
  }
  else
  {
    v30 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v48[0] = Color.init(_:)(v30);
    v29 = AnyShapeStyle.init<A>(_:)(v48, &type metadata for Color, &protocol witness table for Color);
  }
  if (v12 >= v11)
    v31 = v11;
  else
    v31 = v12;
  v32 = v13 * v31;
  swift_retain(v20);
  v34 = static Edge.Set.all.getter(v33);
  v35 = v34;
  v36 = static Alignment.center.getter(v34);
  v38 = v37;
  sub_100361D70(v2, v26, (uint64_t)v4, v32);
  v39 = (uint64_t *)&v4[*(int *)(v43 + 36)];
  *v39 = v36;
  v39[1] = v38;
  sub_100011370((uint64_t)v4, (uint64_t)&v6[*(int *)(v42 + 36)], &qword_10055BE00);
  *(_QWORD *)v6 = v28;
  *((_QWORD *)v6 + 1) = v29;
  v6[16] = v35;
  swift_retain(v28);
  swift_retain(v29);
  sub_100011694((uint64_t)v4, &qword_10055BE00);
  swift_release(v29);
  swift_release(v28);
  swift_release(v20);
  swift_release(v26);
  return sub_100011530((uint64_t)v6, v44, &qword_10055BE08);
}

uint64_t sub_100361D70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a3;
  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin();
  v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BB08);
  __chkstk_darwin();
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10055C530);
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  __chkstk_darwin();
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055C538);
  __chkstk_darwin();
  v47 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_10000B4C8(&qword_10055C540);
  __chkstk_darwin();
  v46 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v19 = a1[1];
  swift_bridgeObjectRetain();
  v20 = Image.init(_internalSystemName:)(v18, v19);
  v51 = v9;
  if (a2)
  {
    v21 = a2;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v54 = Color.init(_:)(v22);
    v21 = AnyShapeStyle.init<A>(_:)(&v54, &type metadata for Color, &protocol witness table for Color);
  }
  v23 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
  swift_retain(a2);
  v24 = static Font.system(size:weight:design:)(0, 1, v12, a4);
  sub_100011694((uint64_t)v12, &qword_10055BB08);
  KeyPath = swift_getKeyPath(&unk_10043F810);
  v54 = v20;
  v55 = v21;
  v56 = KeyPath;
  v57 = v24;
  v26 = a1[2];
  v27 = sub_10000B4C8(&qword_10055C548);
  v28 = sub_100370370();
  View.fontWeight(_:)(v26, 0, v27, v28);
  swift_release(v24);
  swift_release(KeyPath);
  swift_release(v21);
  swift_release(v20);
  v54 = v27;
  v55 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v30 = (uint64_t)v47;
  v31 = v44;
  View.accessibility(hidden:)(1, v44, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v31);
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  v32 = v48;
  sub_10035E228(&qword_100558278, &qword_10055BDF8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, v48);
  v33 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
  {
    sub_100011694(v32, &qword_10055BDF8);
    v35 = v51;
    v34 = v52;
    v36 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v49, 1, 1, v52);
    v37 = v50;
  }
  else
  {
    v38 = v32 + *(int *)(v33 + 24);
    v36 = v49;
    sub_100011370(v38, v49, &qword_10055BE10);
    sub_10000E750(v32, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    v35 = v51;
    v34 = v52;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v36, 1, v52);
    v37 = v50;
    if (v39 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v50, v36, v34);
      goto LABEL_9;
    }
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, enum case for BlendMode.normal(_:), v34);
  sub_100011694(v36, &qword_10055BE10);
LABEL_9:
  v40 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v46[*(int *)(v45 + 36)], v37, v34);
  sub_100011370(v30, v40, &qword_10055C538);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  sub_100011694(v30, &qword_10055C538);
  return sub_100011530(v40, v53, &qword_10055C540);
}

uint64_t sub_100362294()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011370(v1, a1, (uint64_t *)&unk_10055DC90);
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_10007B328(a1, v1, (uint64_t *)&unk_10055DC90);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100011370(v1 + 40, a1, (uint64_t *)&unk_10055DC90);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_10007B328(a1, v1 + 40, (uint64_t *)&unk_10055DC90);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_100011370(v1 + *(int *)(v3 + 24), a1, &qword_10055BE10);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_10007B328(a1, v1 + *(int *)(v3 + 24), &qword_10055BE10);
}

CFRange (__swiftcall *ArtworkImage.Placeholder.View.Style.blendMode.modify())(__C::_NSRange)
{
  type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return CFRange.init(_:);
}

uint64_t ArtworkImage.Placeholder.View.Style.init(foreground:background:blendMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (uint64_t)a4 + 40;
  v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  v10 = (uint64_t)a4 + *(int *)(v9 + 24);
  v11 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_10007B328(a1, (uint64_t)a4, (uint64_t *)&unk_10055DC90);
  sub_10007B328(a2, v8, (uint64_t *)&unk_10055DC90);
  return sub_10007B328(a3, v10, &qword_10055BE10);
}

uint64_t sub_1003624A0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin();
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D924(v0, static ArtworkImage.Placeholder.View.Style.nowPlaying);
  v5 = sub_10000D78C(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
  v7 = static Color.white.getter(v6);
  v8 = Color.opacity(_:)(0.12);
  swift_release(v7);
  v17[3] = &type metadata for Color;
  v17[4] = &protocol witness table for Color;
  v17[0] = v8;
  v10 = static Color.black.getter(v9);
  v11 = Color.opacity(_:)(0.1);
  swift_release(v10);
  v16[3] = &type metadata for Color;
  v16[4] = &protocol witness table for Color;
  v16[0] = v11;
  v12 = type metadata accessor for BlendMode(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v4, 1, 1, v12);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v14 = (uint64_t)v2 + *(int *)(v0 + 24);
  v13((char *)v14, 1, 1, v12);
  sub_10007B328((uint64_t)v17, (uint64_t)v2, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v16, (uint64_t)v2 + 40, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v4, v14, &qword_10055BE10);
  return sub_10000DB44((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.nowPlaying.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F30, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_1003624A0);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100362D08(&qword_100557F30, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_1003624A0, a1);
}

uint64_t sub_1003626C0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D924(v0, static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v5 = sub_10000D78C(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = Color.init(_:)(objc_msgSend(v6, "quaternaryLabelColor"));
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = Color.init(_:)(objc_msgSend(v6, "tertiarySystemFillColor"));
  v13[3] = &type metadata for Color;
  v13[4] = &protocol witness table for Color;
  v13[0] = v8;
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v4, 1, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v11 = (uint64_t)v2 + *(int *)(v0 + 24);
  v10((char *)v11, 1, 1, v9);
  sub_10007B328((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v13, (uint64_t)v2 + 40, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v4, v11, &qword_10055BE10);
  return sub_10000DB44((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.miniPlayer.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F38, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_1003626C0);
}

uint64_t static ArtworkImage.Placeholder.View.Style.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100362D08(&qword_100557F38, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_1003626C0, a1);
}

uint64_t sub_1003628E4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin(v0);
  v2 = (_OWORD *)((char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin(v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D924(v0, static ArtworkImage.Placeholder.View.Style.widgets);
  v6 = sub_10000D78C(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
  v7 = ((uint64_t (*)(void))static Color.white.getter)();
  v8 = Color.opacity(_:)(0.25);
  v9 = swift_release(v7);
  v19[3] = &type metadata for Color;
  v19[4] = &protocol witness table for Color;
  v19[0] = v8;
  v10 = static Color.white.getter(v9);
  v11 = Color.opacity(_:)(0.07);
  swift_release(v10);
  v18[3] = &type metadata for Color;
  v18[4] = &protocol witness table for Color;
  v18[0] = v11;
  v12 = enum case for BlendMode.plusLighter(_:);
  v13 = type metadata accessor for BlendMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v5, v12, v13);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v5, 0, 1, v13);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v16 = (uint64_t)v2 + *(int *)(v0 + 24);
  v15((char *)v16, 1, 1, v13);
  sub_10007B328((uint64_t)v19, (uint64_t)v2, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v18, (uint64_t)v2 + 40, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v5, v16, &qword_10055BE10);
  return sub_10000DB44((uint64_t)v2, v6, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F40, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_1003628E4);
}

uint64_t static ArtworkImage.Placeholder.View.Style.widgets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100362D08(&qword_100557F40, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_1003628E4, a1);
}

uint64_t sub_100362B20()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin();
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D924(v0, static ArtworkImage.Placeholder.View.Style.accentuated);
  v5 = sub_10000D78C(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
  v7 = static Color.accentColor.getter(v6);
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = type metadata accessor for BlendMode(0);
  memset(v12, 0, sizeof(v12));
  v13 = 0;
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v4, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  sub_10007B328((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&unk_10055DC90);
  sub_10007B328((uint64_t)v4, v10, &qword_10055BE10);
  return sub_10000DB44((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.accentuated.unsafeMutableAddressor()
{
  return sub_10035DB88(&qword_100557F48, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_100362B20);
}

uint64_t static ArtworkImage.Placeholder.View.Style.accentuated.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100362D08(&qword_100557F48, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_100362B20, a1);
}

uint64_t sub_100362D08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v7 = sub_10000D78C(v6, a2);
  return sub_10000D964(v7, a4, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

void ArtworkImage.Placeholder.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin();
  sub_10000B4C8(&qword_100558BB8);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D964(v0, (uint64_t)v2, v3);
  v4 = sub_10000B4C8(&qword_10055EC50);
  v5 = (char *)sub_100362EA4
     + 4
     * byte_10043EA15[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 10, v4)];
  __asm { BR              X10 }
}

uint64_t sub_100362EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100011530(v5, v3, &qword_100558BB8);
  Hasher._combine(_:)(3uLL);
  sub_100011370(v3, v4, &qword_100558BB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v0) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v4, v0);
    Hasher._combine(_:)(1u);
    v7 = sub_10001254C(&qword_10055BE18, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    dispatch thunk of Hashable.hash(into:)(v1, v0, v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v0);
  }
  return sub_100011694(v3, &qword_100558BB8);
}

uint64_t sub_100362FD8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100363008 + 4 * byte_10043EA20[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_100363008()
{
  return 0x6979616C50776F6ELL;
}

uint64_t sub_100363028()
{
  return 0x6C79616C5077656ELL;
}

uint64_t sub_100363048()
{
  return 0x7473696C79616C70;
}

uint64_t sub_100363060()
{
  return 0x646956636973756DLL;
}

uint64_t sub_100363080()
{
  return 30324;
}

uint64_t sub_10036308C()
{
  return 0x6F68706F7263696DLL;
}

uint64_t sub_1003630A8()
{
  return 0x6E6F73726570;
}

uint64_t sub_1003630BC()
{
  return 0x65726E6567;
}

uint64_t sub_1003630CC()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_1003630E4()
{
  return 0x6F69646172;
}

uint64_t sub_1003630F4()
{
  unsigned __int8 *v0;

  return sub_100362FD8(*v0);
}

uint64_t sub_1003630FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10036FE8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100363120(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_10036312C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368568();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363154(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368568();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10036317C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003685AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003631A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003685AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003631CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003685F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003631F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003685F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10036321C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003686BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363244(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003686BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10036326C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_100363298(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368854();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003632C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368854();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003632E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368744();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363310(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368744();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100363338(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003687CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363360(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003687CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100363388(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368810();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003633B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368810();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003633D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368678();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363400(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368678();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100363428()
{
  return 1701869940;
}

uint64_t sub_100363438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1003634BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368788();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003634E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368788();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10036350C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368634();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363534(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368634();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10036355C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368700();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100363584(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368700();
  return CodingKey.debugDescription.getter(a1, v2);
}

void ArtworkImage.Placeholder.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v2 = sub_10000B4C8(&qword_10055BE20);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin();
  v52 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_10055BE28);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin();
  v49 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10000B4C8(&qword_10055BE30);
  v26[2] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v26[1] = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10055BE38);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin();
  v46 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10055BE40);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin();
  v43 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10055BE48);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin();
  v38 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10000B4C8(&qword_10055BE50);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v33 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10000B4C8(&qword_10055BE58);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v37 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_100558BB8);
  __chkstk_darwin();
  v34 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10000B4C8(&qword_10055BE60);
  v31 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v30 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10000B4C8(&qword_10055BE68);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  sub_10000B4C8(&qword_10055BE70);
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10000B4C8(&qword_10055BE78);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  sub_10000D900(a1, v21);
  v23 = sub_100368568();
  v56 = v20;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v23, v21, v22);
  sub_10000D964(v58, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
  v24 = sub_10000B4C8(&qword_10055EC50);
  v25 = (char *)sub_100363A1C
      + 4
      * byte_10043EA2B[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 10, v24)];
  __asm { BR              X10 }
}

uint64_t sub_100363A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 - 304);
  sub_100011530(v0, v2, &qword_100558BB8);
  *(_BYTE *)(v1 - 72) = 3;
  v3 = sub_100368788();
  v4 = *(_QWORD *)(v1 - 280);
  v6 = *(_QWORD *)(v1 - 128);
  v5 = *(_QWORD *)(v1 - 120);
  ((void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t))KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:))(&_s11PlaceholderO18PlaylistCodingKeysON, v1 - 72, v5, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = sub_10001254C(&qword_10055BEC8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v9 = *(_QWORD *)(v1 - 256);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v2, v10, v9, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(v4, v9);
  sub_100011694(v2, &qword_100558BB8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v6, v5);
}

Swift::Int ArtworkImage.Placeholder.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t ArtworkImage.Placeholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  uint64_t v73;

  v64 = a2;
  v3 = sub_10000B4C8(&qword_10055BEE8);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin();
  v63 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10055BEF0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin();
  v62 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10000B4C8(&qword_10055BEF8);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v61 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_10000B4C8(&qword_10055BF00);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin();
  v60 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_10000B4C8(&qword_10055BF08);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v68 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_10000B4C8(&qword_10055BF10);
  v45 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin();
  v58 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10000B4C8(&qword_10055BF18);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v57 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10000B4C8(&qword_10055BF20);
  v54 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v59 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10000B4C8(&qword_10055BF28);
  v41 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v56 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10000B4C8(&qword_10055BF30);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v55 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10000B4C8(&qword_10055BF38);
  v37[3] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin();
  v67 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_10055BF40);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v24 = (char *)v37 - v23;
  v25 = a1[3];
  v26 = a1[4];
  v72 = a1;
  sub_10000D900(a1, v25);
  v27 = sub_100368568();
  v71 = v19;
  v28 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v27, v25, v26);
  if (!v28)
  {
    v37[0] = v22;
    v37[2] = 0;
    v73 = v17;
    v37[1] = v24;
    v29 = KeyedDecodingContainer.allKeys.getter(v16);
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = type metadata accessor for DecodingError(0);
    swift_allocError(v30, &protocol witness table for DecodingError, 0, 0);
    v32 = v31;
    sub_10000B4C8(&qword_10055BF48);
    *v32 = v20;
    v33 = v71;
    v34 = KeyedDecodingContainer.codingPath.getter(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v34, 0xD00000000000002BLL, 0x8000000100453170, 0);
    v35 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
    swift_willThrow(v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v16);
  }
  return sub_100011758(v72);
}

void sub_10036445C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 90) = 1;
  v3 = sub_100368810();
  v4 = *(_QWORD *)(v2 - 248);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20NowPlayingCodingKeysON, v2 - 90, v1, &_s11PlaceholderO20NowPlayingCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 376) + 8))(v4, *(_QWORD *)(v2 - 368));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 2, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_100364500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 89) = 2;
  v3 = sub_1003687CC();
  v4 = *(_QWORD *)(v2 - 240);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO21NewPlaylistCodingKeysON, v2 - 89, v1, &_s11PlaceholderO21NewPlaylistCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 360) + 8))(v4, *(_QWORD *)(v2 - 352));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 3, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_1003645A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v2 - 72) = 3;
  v3 = sub_100368788();
  v4 = *(_QWORD *)(v2 - 216);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18PlaylistCodingKeysON, v2 - 72, v1, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  if (!v5)
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = sub_10001254C(&qword_10055BF50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v8 = *(_QWORD *)(v2 - 416);
    v9 = *(_QWORD *)(v2 - 312);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v6, v10, v9, v6, v7);
    v11 = *(_QWORD *)(v2 - 104);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v4, v9);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v1);
    v12 = sub_10000B4C8(&qword_10055EC50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 10, v12);
    sub_10000DB44(v8, *(_QWORD *)(v2 - 408), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364A44);
  }
  JUMPOUT(0x100364414);
}

void sub_100364678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 71) = 4;
  v3 = sub_100368744();
  v4 = *(_QWORD *)(v2 - 232);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MusicVideoCodingKeysON, v2 - 71, v1, &_s11PlaceholderO20MusicVideoCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 344) + 8))(v4, *(_QWORD *)(v2 - 336));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 4, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_10036471C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 70) = 5;
  v3 = sub_100368700();
  v4 = *(_QWORD *)(v2 - 224);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO12TvCodingKeysON, v2 - 70, v1, &_s11PlaceholderO12TvCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 328) + 8))(v4, *(_QWORD *)(v2 - 320));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 5, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_1003647C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 69) = 6;
  v4 = sub_1003686BC();
  v5 = *(_QWORD *)(v3 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MicrophoneCodingKeysON, v3 - 69, v1, &_s11PlaceholderO20MicrophoneCodingKeysON, v4);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 304) + 8))(v2, *(_QWORD *)(v3 - 296));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v3 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 6, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v3 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_100364860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 68) = 7;
  v3 = sub_100368678();
  v4 = *(_QWORD *)(v2 - 208);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO16PersonCodingKeysON, v2 - 68, v1, &_s11PlaceholderO16PersonCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 288) + 8))(v4, *(_QWORD *)(v2 - 280));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 7, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_100364904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 67) = 8;
  v3 = sub_100368634();
  v4 = *(_QWORD *)(v2 - 200);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15RadioCodingKeysON, v2 - 67, v1, &_s11PlaceholderO15RadioCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v4, *(_QWORD *)(v2 - 264));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_10000B4C8(&qword_10055EC50);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 8, 10, v6);
    sub_10000DB44(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100364434);
  }
  JUMPOUT(0x100364414);
}

void sub_1003649A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 66) = 9;
  v5 = sub_1003685F0();
  v6 = *(_QWORD *)(v4 - 192);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15GenreCodingKeysON, v4 - 66, v3, &_s11PlaceholderO15GenreCodingKeysON, v5);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v3);
    sub_10000B4C8(&qword_10055EC50);
    JUMPOUT(0x100364A3CLL);
  }
  JUMPOUT(0x100364414);
}

void sub_100364A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v4 - 65) = 10;
  v5 = sub_1003685AC();
  v6 = *(_QWORD *)(v4 - 184);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18ComposerCodingKeysON, v4 - 65, v1, &_s11PlaceholderO18ComposerCodingKeysON, v5);
  if (v7)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v1);
    JUMPOUT(0x100364434);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v1);
  v8 = sub_10000B4C8(&qword_10055EC50);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(*(_QWORD *)(v4 - 408), 10, 10, v8);
  JUMPOUT(0x100364A4CLL);
}

uint64_t sub_100364BAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkImage.Placeholder.init(from:)(a1, a2);
}

void sub_100364BC0(_QWORD *a1)
{
  ArtworkImage.Placeholder.encode(to:)(a1);
}

Swift::Int sub_100364BD8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t GenericMusicItem.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v38 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v13((char *)&v38 - v11, v1, v7);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v12, v7);
  if (v14 == enum case for GenericMusicItem.album(_:))
    goto LABEL_2;
  if (v14 == enum case for GenericMusicItem.artist(_:))
    goto LABEL_13;
  if (v14 == enum case for GenericMusicItem.composer(_:))
  {
    v17 = sub_10000B4C8(&qword_10055EC50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 10, 10, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.creditArtist(_:) || v14 == enum case for GenericMusicItem.curator(_:))
    goto LABEL_13;
  if (v14 == enum case for GenericMusicItem.editorialItem(_:))
    goto LABEL_2;
  if (v14 == enum case for GenericMusicItem.genre(_:))
  {
    v20 = sub_10000B4C8(&qword_10055EC50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 9, 10, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.musicMovie(_:))
    goto LABEL_18;
  if (v14 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v22 = sub_10000B4C8(&qword_10055EC50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 4, 10, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    Playlist.variant.getter(v23);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v24 = sub_10000B4C8(&qword_10055EC50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 0, 10, v24);
  }
  if (v14 == enum case for GenericMusicItem.radioShow(_:))
    goto LABEL_24;
  if (v14 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v19 = sub_10000B4C8(&qword_10055EC50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 6, 10, v19);
  }
  if (v14 == enum case for GenericMusicItem.socialProfile(_:))
  {
    v26 = sub_10000B4C8(&qword_10055EC50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 7, 10, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.song(_:))
    goto LABEL_2;
  if (v14 == enum case for GenericMusicItem.station(_:))
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v25 = sub_10000B4C8(&qword_10055EC50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 8, 10, v25);
  }
  if (v14 == enum case for GenericMusicItem.tvEpisode(_:)
    || v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v21 = sub_10000B4C8(&qword_10055EC50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 5, 10, v21);
  }
  if (v14 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
LABEL_3:
    v15 = sub_10000B4C8(&qword_10055EC50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 10, v15);
  }
  if (v14 == enum case for GenericMusicItem.uploadedVideo(_:))
    goto LABEL_18;
  if (v14 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (qword_100557F60 != -1)
    swift_once(&qword_100557F60, sub_100366454);
  v27 = type metadata accessor for Logger(0);
  sub_10000D78C(v27, (uint64_t)static Logger.artwork);
  v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v10, v1, v7);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.fault.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(64, -1);
    v39 = v32;
    *(_DWORD *)v31 = 136315394;
    *(_QWORD *)(v31 + 4) = sub_1002E9B3C((char *)0xD000000000000010, (char *)0x8000000100451500, &v39);
    *(_WORD *)(v31 + 12) = 2080;
    v33 = sub_10001254C((unint64_t *)&qword_100558E28, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v34 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v33);
    *(_QWORD *)(v31 + 14) = sub_1002E9B3C(v34, v35, &v39);
    swift_bridgeObjectRelease();
    v36 = *(void (**)(char *, uint64_t))(v8 + 8);
    v36(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unhandled case for %s: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t))(v8 + 8);
    v36(v10, v7);
  }

  v37 = sub_10000B4C8(&qword_10055EC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a1, 1, 10, v37);
  return ((uint64_t (*)(char *, uint64_t))v36)(v12, v7);
}

uint64_t GenericMusicItem.aspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  double v28;
  uint64_t v29;

  sub_10000B4C8((uint64_t *)&unk_10055EC10);
  __chkstk_darwin();
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UploadedVideo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(double *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v28 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)&v8 + 16);
  v13((char *)&v28 - v11, v0, v7);
  v14 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 88))(v12, v7);
  if (v14 == enum case for GenericMusicItem.album(_:)
    || v14 == enum case for GenericMusicItem.artist(_:)
    || v14 == enum case for GenericMusicItem.composer(_:)
    || v14 == enum case for GenericMusicItem.creditArtist(_:)
    || v14 == enum case for GenericMusicItem.curator(_:)
    || v14 == enum case for GenericMusicItem.editorialItem(_:)
    || v14 == enum case for GenericMusicItem.genre(_:)
    || v14 == enum case for GenericMusicItem.musicMovie(_:)
    || v14 == enum case for GenericMusicItem.musicVideo(_:)
    || v14 == enum case for GenericMusicItem.playlist(_:)
    || v14 == enum case for GenericMusicItem.radioShow(_:)
    || v14 == enum case for GenericMusicItem.recordLabel(_:)
    || v14 == enum case for GenericMusicItem.socialProfile(_:)
    || v14 == enum case for GenericMusicItem.song(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 8))(v12, v7);
  }
  v28 = v8;
  if (v14 == enum case for GenericMusicItem.station(_:))
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v28 + 8))(v12, v7);
  v8 = v28;
  if (v14 == enum case for GenericMusicItem.tvEpisode(_:))
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 8))(v12, v7);
  if (v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:)
    || v14 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v28 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v28 + 96))(v12, v7);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    sub_1002E65BC(v2);
    v16 = type metadata accessor for ArtworkImage.ViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v2, 1, v16) == 1)
    {
      sub_100011694((uint64_t)v2, (uint64_t *)&unk_10055EC10);
    }
    else
    {
      if (Artwork.maximumWidth.getter() >= 1 && Artwork.maximumHeight.getter() >= 1)
      {
        v17 = (double)Artwork.maximumWidth.getter();
        v28 = v17 / (double)Artwork.maximumHeight.getter();
        sub_10000E750((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
      sub_10000E750((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
    }
    v28 = 1.77777778;
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (v14 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v28 + 96))(v12, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100557F60 != -1)
      swift_once(&qword_100557F60, sub_100366454);
    v18 = type metadata accessor for Logger(0);
    sub_10000D78C(v18, (uint64_t)static Logger.artwork);
    v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v10, v0, v7);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.fault.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v23 = swift_slowAlloc(64, -1);
      v29 = v23;
      *(_DWORD *)v22 = 136315394;
      *(_QWORD *)(v22 + 4) = sub_1002E9B3C((char *)0xD000000000000010, (char *)0x8000000100451500, &v29);
      *(_WORD *)(v22 + 12) = 2080;
      v24 = sub_10001254C((unint64_t *)&qword_100558E28, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v24);
      *(_QWORD *)(v22 + 14) = sub_1002E9B3C(v25, v26, &v29);
      swift_bridgeObjectRelease();
      v27 = *(void (**)(char *, uint64_t))(*(_QWORD *)&v28 + 8);
      v27(v10, v7);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unhandled case for %s: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      v27 = *(void (**)(char *, uint64_t))(*(_QWORD *)&v28 + 8);
      v27(v10, v7);
    }

    return ((uint64_t (*)(char *, uint64_t))v27)(v12, v7);
  }
}

void *CGFloat.videoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.videoAspectRatio;
}

void *CGFloat.moviePosterAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.moviePosterAspectRatio;
}

void Playlist.Variant.symbolImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
  {
    v7 = 0xE900000000000065;
  }
  else if (v6 == enum case for Playlist.Variant.genius(_:))
  {
    v7 = 0xE600000000000000;
  }
  else if (v6 == enum case for Playlist.Variant.folder(_:))
  {
    v7 = 0xE600000000000000;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7 = 0xEF7473696C2E6574;
  }
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v8);

  if (!v9)
    __break(1u);
}

uint64_t ArtworkImage.ViewModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  NSString v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _BYTE v30[32];

  sub_10000B4C8(&qword_100558E20);
  __chkstk_darwin();
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v26 - v10;
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  __chkstk_darwin();
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v12);
  v28 = v13;
  v16 = a1;
  Artwork.init(_:)();
  v17 = objc_msgSend(v16, "token");
  _bridgeAnyObjectToAny(_:)(v17);
  swift_unknownObjectRelease(v17);
  v18 = sub_1000DD108(0, &qword_10055BF58, MPStoreArtworkRequestToken_ptr);
  if ((swift_dynamicCast(&v29, v30, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0)
  {

LABEL_8:
    v24 = &v15[*(int *)(v12 + 20)];
    v25 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v11, v6);
    goto LABEL_9;
  }
  v27 = a2;
  v19 = v29;
  v20 = objc_msgSend(v29, "cropStyle");

  if (!v20)
  {

    a2 = v27;
    goto LABEL_8;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v26 = v5;

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v11, v6);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v22 = (uint64_t)v26;
  Artwork.CropStyle.init(_:)(v21, (uint64_t)v26);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
  sub_100011530(v22, (uint64_t)&v15[*(int *)(v12 + 20)], &qword_100558E20);
  a2 = v27;
LABEL_9:
  sub_10000DB44((uint64_t)v15, a2, type metadata accessor for ArtworkImage.ViewModel);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(a2, 0, 1, v12);
}

uint64_t Artwork.CropStyle.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleBoundedBox);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v8 == v11 && v10 == v12)
  {
    v34 = a1;
    v17 = swift_bridgeObjectRelease_n(v10, 2);
    goto LABEL_16;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  v16 = a1;
  swift_bridgeObjectRelease(v10);
  v17 = swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_16:
    static Artwork.CropStyle.boundedBox.getter(v17);
LABEL_17:

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedWidth);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v18 == v21 && v20 == v22)
  {
    v26 = swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_19;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  v26 = swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
LABEL_19:
    static Artwork.CropStyle.constrainedWidth.getter(v26);
    goto LABEL_17;
  }
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedHeight);
  v29 = v28;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    v33 = swift_bridgeObjectRelease_n(v29, 2);
LABEL_21:
    static Artwork.CropStyle.constrainedHeight.getter(v33);
    goto LABEL_17;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
  swift_bridgeObjectRelease(v29);
  v33 = swift_bridgeObjectRelease(v32);
  if ((v36 & 1) != 0)
    goto LABEL_21;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop270);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {
    v43 = swift_bridgeObjectRelease_n(v39, 2);
LABEL_26:
    static Artwork.CropStyle.featuredContentCrop270.getter(v43);
    goto LABEL_17;
  }
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  swift_bridgeObjectRelease(v39);
  v43 = swift_bridgeObjectRelease(v42);
  if ((v44 & 1) != 0)
    goto LABEL_26;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop44);
  v47 = v46;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v50 = v48;
  if (v45 == v49 && v47 == v48)
  {
    v51 = swift_bridgeObjectRelease_n(v47, 2);
LABEL_31:
    static Artwork.CropStyle.featuredContentCrop44.getter(v51);
    goto LABEL_17;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
  swift_bridgeObjectRelease(v47);
  v51 = swift_bridgeObjectRelease(v50);
  if ((v52 & 1) != 0)
    goto LABEL_31;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop170T100B);
  v55 = v54;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v58 = v56;
  if (v53 == v57 && v55 == v56)
  {
    v59 = swift_bridgeObjectRelease_n(v55, 2);
LABEL_36:
    static Artwork.CropStyle.featuredContentCrop170T100B.getter(v59);
    goto LABEL_17;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0);
  swift_bridgeObjectRelease(v55);
  v59 = swift_bridgeObjectRelease(v58);
  if ((v60 & 1) != 0)
    goto LABEL_36;
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSourceSize);
  v63 = v62;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v66 = v64;
  if (v61 == v65 && v63 == v64)
  {
    v67 = swift_bridgeObjectRelease_n(v63, 2);
LABEL_41:
    static Artwork.CropStyle.sourceSize.getter(v67);
    goto LABEL_17;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v65, v64, 0);
  swift_bridgeObjectRelease(v63);
  v67 = swift_bridgeObjectRelease(v66);
  if ((v68 & 1) != 0)
    goto LABEL_41;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSpecificRectangle);
  v71 = v70;
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v74 = v72;
  if (v69 == v73 && v71 == v72)
  {
    v75 = swift_bridgeObjectRelease_n(v71, 2);
LABEL_46:
    static Artwork.CropStyle.specificRectangle.getter(v75);
    goto LABEL_17;
  }
  v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v73, v72, 0);
  swift_bridgeObjectRelease(v71);
  v75 = swift_bridgeObjectRelease(v74);
  if ((v76 & 1) != 0)
    goto LABEL_46;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSquareCenterCrop);
  v79 = v78;
  v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v82 = v80;
  if (v77 == v81 && v79 == v80)
  {
    v83 = swift_bridgeObjectRelease_n(v79, 2);
LABEL_51:
    static Artwork.CropStyle.squareCenterCrop.getter(v83);
    goto LABEL_17;
  }
  v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v79, v81, v80, 0);
  swift_bridgeObjectRelease(v79);
  v83 = swift_bridgeObjectRelease(v82);
  if ((v84 & 1) != 0)
    goto LABEL_51;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

uint64_t sub_100366284()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.CropStyle(0);
  sub_10000D924(v0, static Artwork.CropStyle.fallback);
  v1 = sub_10000D78C(v0, (uint64_t)static Artwork.CropStyle.fallback);
  return static Artwork.CropStyle.boundedBox.getter(v1);
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003667C8(&qword_100557F50, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_100366284, a1);
}

uint64_t sub_1003662F0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.ImageFormat(0);
  sub_10000D924(v0, static Artwork.ImageFormat.fallback);
  v1 = sub_10000D78C(v0, (uint64_t)static Artwork.ImageFormat.fallback);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Artwork.ImageFormat.heic(_:), v0);
}

uint64_t static Artwork.ImageFormat.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003667C8(&qword_100557F58, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_1003662F0, a1);
}

double static CGFloat.videoAspectRatio.getter()
{
  return 1.77777778;
}

void *CGFloat.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.verticalVideoAspectRatio;
}

double static CGFloat.verticalVideoAspectRatio.getter()
{
  return 0.5625;
}

double static CGFloat.moviePosterAspectRatio.getter()
{
  return 0.666666667;
}

uint64_t static Artwork.monogramArtwork(for:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v9 = a4 & 1;
  sub_1000DD108(0, (unint64_t *)&qword_10055D980, MPArtworkCatalog_ptr);
  if (static MPArtworkCatalog.monogram(for:layoutDirection:)(a1, a2, a3, v9))
  {
    Artwork.init(_:)();
    v10 = type metadata accessor for Artwork(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 0;
  }
  else
  {
    v10 = type metadata accessor for Artwork(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

uint64_t sub_100366454()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, static Logger.artwork);
  sub_10000D78C(v0, (uint64_t)static Logger.artwork);
  return static Logger.music(_:)(0x6B726F77747241, 0xE700000000000000);
}

uint64_t type metadata accessor for ArtworkImage.ViewModel(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055BFD8, (uint64_t)&nominal type descriptor for ArtworkImage.ViewModel);
}

uint64_t type metadata accessor for ArtworkImage.Placeholder(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055C1E8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_1003664D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 58) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_10000B4C8(&qword_10055EC50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100366594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 80);
  return sub_10035F4CC(v1 + 16, v1 + ((v3 + 58) & ~v3), a1);
}

unint64_t sub_100366604()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055BD80;
  if (!qword_10055BD80)
  {
    v1 = sub_100011650((uint64_t *)&unk_10055DC00);
    v2[0] = sub_100366688();
    v2[1] = sub_100012324(&qword_10055BDA0, (uint64_t *)&unk_10055DC50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055BD80);
  }
  return result;
}

unint64_t sub_100366688()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055DC10;
  if (!qword_10055DC10)
  {
    v1 = sub_100011650(&qword_10055BD88);
    v2[0] = sub_1003666F4();
    v2[1] = &protocol witness table for _FrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055DC10);
  }
  return result;
}

unint64_t sub_1003666F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055DC20;
  if (!qword_10055DC20)
  {
    v1 = sub_100011650(&qword_10055BD90);
    v2[0] = sub_10001254C((unint64_t *)&unk_10055DC30, type metadata accessor for ArtworkImage.Placeholder.View, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder.View);
    v2[1] = sub_100012324(&qword_10055BD98, (uint64_t *)&unk_10055DC40, (const char *)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055DC20);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055C268, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003667C8(&qword_100557F60, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_100366454, a1);
}

uint64_t sub_1003667C8@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_10000D78C(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_100366834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_10000B4C8(&qword_10055BDF8);
  sub_10000D924(v0, qword_10055BD68);
  v1 = sub_10000D78C(v0, (uint64_t)qword_10055BD68);
  v2 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_10036689C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100557F68 != -1)
    swift_once(&qword_100557F68, sub_100366834);
  v2 = sub_10000B4C8(&qword_10055BDF8);
  v3 = sub_10000D78C(v2, (uint64_t)qword_10055BD68);
  return sub_100011370(v3, a1, &qword_10055BDF8);
}

void (*EnvironmentValues.placeholderStyle.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  unint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10055BDF8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v5 = sub_100368510();
  v3[4] = v5;
  EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v5);
  return sub_1003669A8;
}

void sub_1003669A8(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_100011370((*a1)[3], (*a1)[2], &qword_10055BDF8);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_100011370(v3[2], v3[1], &qword_10055BDF8);
    EnvironmentValues.subscript.setter(v6, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v5);
    sub_100011694((uint64_t)v7, &qword_10055BDF8);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v3[4]);
  }
  sub_100011694((uint64_t)v4, &qword_10055BDF8);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_100366A84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23[2];

  v20 = a1;
  sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin();
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a2, (uint64_t)v10, &qword_10055BDF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_100011694((uint64_t)v10, &qword_10055BDF8);
  sub_10000DB44((uint64_t)v10, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  sub_100011370((uint64_t)v14, (uint64_t)&v21, (uint64_t *)&unk_10055DC90);
  if (v22)
  {
    sub_1000B47A8(&v21, (uint64_t)v23);
    v16 = v20;
    sub_100011694(v20, (uint64_t *)&unk_10055DC90);
    sub_1000B47A8(v23, v16);
  }
  else
  {
    sub_100011694((uint64_t)&v21, (uint64_t *)&unk_10055DC90);
    v16 = v20;
  }
  sub_100011370((uint64_t)(v14 + 40), (uint64_t)&v21, (uint64_t *)&unk_10055DC90);
  if (v22)
  {
    sub_1000B47A8(&v21, (uint64_t)v23);
    sub_100011694(v16 + 40, (uint64_t *)&unk_10055DC90);
    sub_1000B47A8(v23, v16 + 40);
  }
  else
  {
    sub_100011694((uint64_t)&v21, (uint64_t *)&unk_10055DC90);
  }
  sub_100011370((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v4, &qword_10055BE10);
  sub_10000E750((uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_100011694((uint64_t)v4, &qword_10055BE10);
  v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v8, v4, v5);
  v18 = v16 + *(int *)(v11 + 24);
  sub_100011694(v18, &qword_10055BE10);
  v17((char *)v18, v8, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
}

uint64_t PlaceholderStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10043EA90);
  sub_100366E80((uint64_t)v5);
  v7 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = (uint64_t *)(a2 + *(int *)(sub_10000B4C8(&qword_10055BF60) + 36));
  v9 = sub_10000B4C8(&qword_10055BF68);
  sub_100011370((uint64_t)v5, (uint64_t)v8 + *(int *)(v9 + 28), &qword_10055BDF8);
  *v8 = KeyPath;
  v10 = sub_10000B4C8(&qword_10055BF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  return sub_100011694((uint64_t)v5, &qword_10055BDF8);
}

uint64_t sub_100366E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t (**v1)(uint64_t);
  uint64_t (**v2)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B4C8(&qword_10055BE10);
  __chkstk_darwin();
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055BDF8);
  __chkstk_darwin();
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceholderStyleModifier(0);
  sub_10035E228(&qword_100558278, &qword_10055BDF8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v12 = type metadata accessor for BlendMode(0);
    memset(v16, 0, sizeof(v16));
    v17 = 0;
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v13(v9, 1, 1, v12);
    v7[3] = 0u;
    v7[4] = 0u;
    v7[1] = 0u;
    v7[2] = 0u;
    *v7 = 0u;
    v14 = (uint64_t)v7 + *(int *)(v4 + 24);
    v13((char *)v14, 1, 1, v12);
    sub_10007B328((uint64_t)v18, (uint64_t)v7, (uint64_t *)&unk_10055DC90);
    sub_10007B328((uint64_t)v16, (uint64_t)v7 + 40, (uint64_t *)&unk_10055DC90);
    sub_10007B328((uint64_t)v9, v14, &qword_10055BE10);
    sub_10000DB44((uint64_t)v7, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    sub_100011694((uint64_t)v11, &qword_10055BDF8);
  }
  else
  {
    sub_10000DB44((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  }
  return (*v2)(a1);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = a3;
  v5 = sub_10000B4C8(&qword_10055BDF8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  v9 = __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v13 = (char *)&v20 - v12;
  sub_100011370(a1, (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10055BDF8);
  v14 = (_QWORD *)((char *)v11 + *(int *)(v8 + 20));
  *v14 = swift_getKeyPath(&unk_10043EA90);
  v15 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_100520768, v17 + v7, v16 | 7);
  sub_100011530((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_10055BDF8);
  *v11 = sub_1003688B0;
  v11[1] = v18;
  sub_10000DB44((uint64_t)v11, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v13, a2, v8, v20);
  return sub_10000E750((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = a4;
  v6 = *(_QWORD *)(sub_10000B4C8(&qword_10055BDF8) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  a1(v11);
  v14 = (_QWORD *)((char *)v10 + *(int *)(v8 + 20));
  *v14 = swift_getKeyPath(&unk_10043EA90);
  v15 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_100520790, v17 + v7, v16 | 7);
  sub_100011530((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_10055BDF8);
  *v10 = sub_1003688B0;
  v10[1] = v18;
  sub_10000DB44((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v13, a3, v8, v20);
  return sub_10000E750((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin();
  v13 = (char *)&v17 - v12;
  v14 = (_QWORD *)((char *)v10 + *(int *)(v11 + 20));
  *v14 = swift_getKeyPath(&unk_10043EA90);
  v15 = sub_10000B4C8(&qword_100558278);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  *v10 = a1;
  v10[1] = a2;
  sub_10000DB44((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  swift_retain(a2);
  View.modifier<A>(_:)(v13, a3, v8, a4);
  return sub_10000E750((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  int v5;
  int v6;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
LABEL_7:
    v3 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
        v3 = 1;
      if ((v3 & 1) != 0)
        return 0;
    }
    v4 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    v5 = *(unsigned __int8 *)(a1 + 41);
    v6 = *(unsigned __int8 *)(a2 + 41);
    if (v5 == 2)
    {
      if (v6 != 2)
        return 0;
    }
    else if (v6 == 2 || (static ContentMode.== infix(_:_:)(v5 & 1, v6 & 1) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_7;
  return 0;
}

BOOL _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055C5C0);
  __chkstk_darwin();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_100558E20);
  __chkstk_darwin();
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  v16 = (char *)&v25 - v15;
  if ((static Artwork.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v26 = v7;
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  sub_100011370(a1 + *(int *)(v17 + 20), (uint64_t)v16, &qword_100558E20);
  sub_100011370(a2 + *(int *)(v17 + 20), (uint64_t)v14, &qword_100558E20);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100011370((uint64_t)v16, (uint64_t)v10, &qword_100558E20);
  sub_100011370((uint64_t)v14, v18, &qword_100558E20);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_100011694((uint64_t)v14, &qword_100558E20);
    sub_100011694((uint64_t)v16, &qword_100558E20);
    if (v19(v18, 1, v4) == 1)
    {
      sub_100011694((uint64_t)v10, &qword_100558E20);
      return 1;
    }
    goto LABEL_7;
  }
  sub_100011370((uint64_t)v10, (uint64_t)v12, &qword_100558E20);
  if (v19(v18, 1, v4) == 1)
  {
    sub_100011694((uint64_t)v14, &qword_100558E20);
    sub_100011694((uint64_t)v16, &qword_100558E20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_7:
    sub_100011694((uint64_t)v10, &qword_10055C5C0);
    return 0;
  }
  v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v18, v4);
  v21 = sub_10001254C(&qword_10055C5C8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t)&protocol conformance descriptor for Artwork.CropStyle);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v20, v4, v21);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v20, v4);
  sub_100011694((uint64_t)v14, &qword_100558E20);
  sub_100011694((uint64_t)v16, &qword_100558E20);
  v23(v12, v4);
  sub_100011694((uint64_t)v10, &qword_100558E20);
  return (v22 & 1) != 0;
}

uint64_t type metadata accessor for ArtworkImage.Info(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055C070, (uint64_t)&nominal type descriptor for ArtworkImage.Info);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4InfoV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  BOOL v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD v44[2];
  __int128 v45;
  _BYTE v46[26];

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_10055C5B8);
  __chkstk_darwin();
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8((uint64_t *)&unk_10055EC10);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  __chkstk_darwin();
  v15 = (char *)&v39 - v14;
  v41 = a1;
  sub_100011370(a1, (uint64_t)&v39 - v14, (uint64_t *)&unk_10055EC10);
  v42 = a2;
  sub_100011370(a2, (uint64_t)v13, (uint64_t *)&unk_10055EC10);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100011370((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_10055EC10);
  sub_100011370((uint64_t)v13, v16, (uint64_t *)&unk_10055EC10);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    sub_100011370((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_10055EC10);
    if (v17(v16, 1, v4) != 1)
    {
      v18 = v40;
      sub_10000DB44(v16, v40, type metadata accessor for ArtworkImage.ViewModel);
      v19 = _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)v11, v18);
      sub_10000E750(v18, type metadata accessor for ArtworkImage.ViewModel);
      sub_100011694((uint64_t)v13, (uint64_t *)&unk_10055EC10);
      sub_100011694((uint64_t)v15, (uint64_t *)&unk_10055EC10);
      sub_10000E750((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
      sub_100011694((uint64_t)v9, (uint64_t *)&unk_10055EC10);
      if (!v19)
        return 0;
      goto LABEL_8;
    }
    sub_100011694((uint64_t)v13, (uint64_t *)&unk_10055EC10);
    sub_100011694((uint64_t)v15, (uint64_t *)&unk_10055EC10);
    sub_10000E750((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_6:
    sub_100011694((uint64_t)v9, &qword_10055C5B8);
    return 0;
  }
  sub_100011694((uint64_t)v13, (uint64_t *)&unk_10055EC10);
  sub_100011694((uint64_t)v15, (uint64_t *)&unk_10055EC10);
  if (v17(v16, 1, v4) != 1)
    goto LABEL_6;
  sub_100011694((uint64_t)v9, (uint64_t *)&unk_10055EC10);
LABEL_8:
  v20 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v22 = v41;
  v21 = v42;
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(v41 + v20[5], v42 + v20[5]);
  if ((v23 & 1) != 0)
  {
    v24 = v20[6];
    v25 = (double *)(v22 + v24);
    v26 = *(_BYTE *)(v22 + v24 + 8);
    v27 = (double *)(v21 + v24);
    v28 = *(unsigned __int8 *)(v21 + v24 + 8);
    if ((v26 & 1) != 0)
    {
      if (!v28)
        return 0;
    }
    else
    {
      if (*v25 != *v27)
        LOBYTE(v28) = 1;
      if ((v28 & 1) != 0)
        return 0;
    }
    v29 = (__int128 *)(v22 + v20[7]);
    v30 = *(__int128 *)((char *)v29 + 26);
    v31 = v29[1];
    v43 = *v29;
    v44[0] = v31;
    *(_OWORD *)((char *)v44 + 10) = v30;
    v32 = (__int128 *)(v21 + v20[7]);
    *(_OWORD *)&v46[10] = *(__int128 *)((char *)v32 + 26);
    v33 = v32[1];
    v45 = *v32;
    *(_OWORD *)v46 = v33;
    if ((_s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v43, (uint64_t)&v45) & 1) != 0)
    {
      v34 = v20[8];
      v35 = v22 + v34;
      v36 = *(_BYTE *)(v22 + v34 + 16);
      v37 = v21 + v34;
      if ((v36 & 1) != 0)
      {
        if ((*(_BYTE *)(v37 + 16) & 1) == 0)
          return 0;
      }
      else if ((*(_BYTE *)(v37 + 16) & 1) != 0
             || *(double *)v35 != *(double *)v37
             || *(_QWORD *)(v35 + 8) != *(_QWORD *)(v37 + 8))
      {
        return 0;
      }
      return 1;
    }
  }
  return 0;
}

void _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;

  v12 = type metadata accessor for Playlist.Variant(0);
  v11[1] = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  sub_10000B4C8(&qword_10055C5A0);
  __chkstk_darwin();
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_100558BB8);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  sub_10000B4C8(&qword_10055C5A8);
  v5 = __chkstk_darwin();
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_10000D964(a1, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  sub_10000D964(a2, v8, type metadata accessor for ArtworkImage.Placeholder);
  v9 = sub_10000B4C8(&qword_10055EC50);
  v10 = (char *)sub_100367EB4
      + 4
      * byte_10043EA4C[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 10, v9)];
  __asm { BR              X10 }
}

uint64_t sub_100367EB4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);

  sub_10000D964(v0, v8, type metadata accessor for ArtworkImage.Placeholder);
  if (!v2(v1, 10, v7))
  {
    sub_100011530(v1, v5, &qword_100558BB8);
    v11 = *(_QWORD *)(v9 - 96);
    v12 = v11 + *(int *)(v6 + 48);
    sub_100011530(v8, v11, &qword_100558BB8);
    sub_100011370(v5, v12, &qword_100558BB8);
    v13 = *(_QWORD *)(v9 - 104);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v15 = *(_QWORD *)(v9 - 88);
    if (v14(v11, 1, v15) == 1)
    {
      sub_100011694(v5, &qword_100558BB8);
      if (v14(v12, 1, v15) == 1)
      {
        sub_100011694(v11, &qword_100558BB8);
LABEL_3:
        sub_10000E750(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 1;
      }
    }
    else
    {
      sub_100011370(v11, v4, &qword_100558BB8);
      if (v14(v12, 1, v15) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v12, v15);
        v16 = sub_10001254C(&qword_10055C5B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v17 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v3, v15, v16);
        v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v18(v3, v15);
        sub_100011694(v5, &qword_100558BB8);
        v18(v4, v15);
        sub_100011694(v11, &qword_100558BB8);
        if ((v17 & 1) != 0)
          goto LABEL_3;
LABEL_12:
        sub_10000E750(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 0;
      }
      sub_100011694(v5, &qword_100558BB8);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v15);
    }
    sub_100011694(v11, &qword_10055C5A0);
    goto LABEL_12;
  }
  sub_100011694(v8, &qword_100558BB8);
  sub_100011694(v0, &qword_10055C5A8);
  return 0;
}

uint64_t sub_1003681F4()
{
  unint64_t v0;

  v0 = sub_100368510();
  return EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v0);
}

uint64_t sub_100368234()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t type metadata accessor for ArtworkMotionView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055C118, (uint64_t)&nominal type descriptor for ArtworkMotionView);
}

uint64_t sub_100368268()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for ArtworkMotionView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for VideoArtwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  v9 = v6 + v1[5];
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v6 + v1[6];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v6 + v1[8];
  v16 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_10000B4C8(&qword_10055EC50);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 10, v17))
    {
      v18 = type metadata accessor for Playlist.Variant(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v18);
    }
  }
  v20 = v6 + v1[9];
  v21 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100368440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_100360580(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_1003684AC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10055BDD8;
  if (!qword_10055BDD8)
  {
    v1 = sub_100011650(&qword_10055BDD0);
    v2 = sub_100366604();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10055BDD8);
  }
  return result;
}

unint64_t sub_100368510()
{
  unint64_t result;

  result = qword_10055BDF0;
  if (!qword_10055BDF0)
  {
    result = swift_getWitnessTable(aU_8, &_s19PlaceholderStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_10055BDF0);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View.Style(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10055C318, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View.Style);
}

unint64_t sub_100368568()
{
  unint64_t result;

  result = qword_10055BE80;
  if (!qword_10055BE80)
  {
    result = swift_getWitnessTable(byte_10043F784, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BE80);
  }
  return result;
}

unint64_t sub_1003685AC()
{
  unint64_t result;

  result = qword_10055BE88;
  if (!qword_10055BE88)
  {
    result = swift_getWitnessTable(byte_10043F734, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BE88);
  }
  return result;
}

unint64_t sub_1003685F0()
{
  unint64_t result;

  result = qword_10055BE90;
  if (!qword_10055BE90)
  {
    result = swift_getWitnessTable(asc_10043F6E4, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BE90);
  }
  return result;
}

unint64_t sub_100368634()
{
  unint64_t result;

  result = qword_10055BE98;
  if (!qword_10055BE98)
  {
    result = swift_getWitnessTable(asc_10043F694, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BE98);
  }
  return result;
}

unint64_t sub_100368678()
{
  unint64_t result;

  result = qword_10055BEA0;
  if (!qword_10055BEA0)
  {
    result = swift_getWitnessTable(byte_10043F644, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BEA0);
  }
  return result;
}

unint64_t sub_1003686BC()
{
  unint64_t result;

  result = qword_10055BEA8;
  if (!qword_10055BEA8)
  {
    result = swift_getWitnessTable(byte_10043F5F4, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BEA8);
  }
  return result;
}

unint64_t sub_100368700()
{
  unint64_t result;

  result = qword_10055BEB0;
  if (!qword_10055BEB0)
  {
    result = swift_getWitnessTable(aM_15, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BEB0);
  }
  return result;
}

unint64_t sub_100368744()
{
  unint64_t result;

  result = qword_10055BEB8;
  if (!qword_10055BEB8)
  {
    result = swift_getWitnessTable(byte_10043F554, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BEB8);
  }
  return result;
}

unint64_t sub_100368788()
{
  unint64_t result;

  result = qword_10055BEC0;
  if (!qword_10055BEC0)
  {
    result = swift_getWitnessTable(asc_10043F504, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BEC0);
  }
  return result;
}

unint64_t sub_1003687CC()
{
  unint64_t result;

  result = qword_10055BED0;
  if (!qword_10055BED0)
  {
    result = swift_getWitnessTable(asc_10043F4B4, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BED0);
  }
  return result;
}

unint64_t sub_100368810()
{
  unint64_t result;

  result = qword_10055BED8;
  if (!qword_10055BED8)
  {
    result = swift_getWitnessTable(byte_10043F464, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BED8);
  }
  return result;
}

unint64_t sub_100368854()
{
  unint64_t result;

  result = qword_10055BEE0;
  if (!qword_10055BEE0)
  {
    result = swift_getWitnessTable(byte_10043F414, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055BEE0);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderStyleModifier(uint64_t a1)
{
  return sub_10001133C(a1, qword_10055C3B8, (uint64_t)&nominal type descriptor for PlaceholderStyleModifier);
}

uint64_t sub_1003688B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(sub_10000B4C8(&qword_10055BDF8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    if (v5[3])
      sub_100011758((_QWORD *)(v0 + v3));
    if (v5[8])
      sub_100011758(v5 + 5);
    v7 = (char *)v5 + *(int *)(v6 + 24);
    v8 = type metadata accessor for BlendMode(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1003689A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_10055BDF8) - 8) + 80);
  return sub_100366A84(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1003689E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkMotionView.body>>, 1);
}

uint64_t sub_1003689F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.View.body>>, 1);
}

uint64_t sub_100368A00()
{
  return sub_10001254C(&qword_10055BF78, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_100368A2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaceholderStyleModifier.body(content:)>>, 1);
}

uint64_t *_s9ViewModelVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10000B4C8(&qword_100558E20);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t _s9ViewModelVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Artwork.CropStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t _s9ViewModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000B4C8(&qword_100558E20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10000B4C8(&qword_100558E20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000B4C8(&qword_100558E20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10000B4C8(&qword_100558E20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100368FE8);
}

uint64_t sub_100368FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10000B4C8(&qword_100558E20);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s9ViewModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036906C);
}

uint64_t sub_10036906C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10000B4C8(&qword_100558E20);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003690EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&unk_10055BFE8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *_s4InfoVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8((uint64_t *)&unk_10055EC10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_10000B4C8(&qword_100558E20);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_10000B4C8(&qword_10055EC50);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_10000B4C8(&qword_100558BB8);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = a3[6];
    v28 = a3[7];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = (_OWORD *)((char *)a1 + v28);
    v32 = (_OWORD *)((char *)a2 + v28);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
  }
  return a1;
}

uint64_t _s4InfoVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_10000B4C8(&qword_10055EC50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for Playlist.Variant(0);
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v9, v12);
  }
  return result;
}

char *_s4InfoVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8((uint64_t *)&unk_10055EC10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_10000B4C8(&qword_100558E20);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_10000B4C8(&qword_10055EC50);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_10000B4C8(&qword_100558BB8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwca(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100558E20) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10000E750(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8((uint64_t *)&unk_10055EC10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_10000B4C8(&qword_100558E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_10000B4C8(&qword_10055EC50);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_10000B4C8(&qword_100558BB8);
      goto LABEL_21;
    }
    sub_100011694((uint64_t)v31, &qword_10055EC50);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_10000B4C8(&qword_100558BB8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)v52 = v54;
  v55 = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 16) = v55;
  v56 = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_QWORD *)(v52 + 32) = v56;
  *(_BYTE *)(v52 + 41) = v53[41];
  v57 = a3[8];
  v58 = a1 + v57;
  v59 = &a2[v57];
  v60 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v59[16];
  *(_OWORD *)v58 = v60;
  return a1;
}

char *_s4InfoVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8((uint64_t *)&unk_10055EC10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_10000B4C8(&qword_100558E20);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_10000B4C8(&qword_10055EC50);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_10000B4C8(&qword_100558BB8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwta(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100558E20) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10000E750(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8((uint64_t *)&unk_10055EC10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_10000B4C8(&qword_100558E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_10000B4C8(&qword_10055EC50);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_10000B4C8(&qword_100558BB8);
      goto LABEL_21;
    }
    sub_100011694((uint64_t)v31, &qword_10055EC50);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_10000B4C8(&qword_100558BB8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a3[7];
  v49 = a1 + v47;
  v50 = &a2[v47];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = a1 + v48;
  v52 = &a2[v48];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = v52[8];
  *(_QWORD *)(v51 + 16) = *((_QWORD *)v52 + 2);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_BYTE *)(v51 + 40) = v52[40];
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_BYTE *)(v51 + 41) = v52[41];
  v53 = a3[8];
  v54 = a1 + v53;
  v55 = &a2[v53];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_BYTE *)(v54 + 16) = v55[16];
  return a1;
}

uint64_t _s4InfoVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036A3A8);
}

uint64_t sub_10036A3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = sub_10000B4C8((uint64_t *)&unk_10055EC10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t _s4InfoVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036A46C);
}

uint64_t sub_10036A46C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_10000B4C8((uint64_t *)&unk_10055EC10);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ArtworkImage.Placeholder(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28) + 41) = a2 + 2;
  return result;
}

void sub_10036A518(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_10002E8E4(319, (unint64_t *)&unk_10055C080, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      v6[3] = &unk_10043ED40;
      v6[4] = &unk_10043ED58;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t _s4SizeVwet(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 41) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t _s4SizeVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkImage.Size()
{
  return &type metadata for ArtworkImage.Size;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkMotionView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for VideoArtwork(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_10055BDA8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Artwork(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_10000B4C8((uint64_t *)&unk_10055E870);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_10000B4C8(&qword_100558E20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = a3[7];
    v24 = a3[8];
    v25 = (_OWORD *)((char *)a1 + v23);
    v26 = (_OWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_OWORD *)((char *)v25 + 26) = *(_OWORD *)((char *)v26 + 26);
    v28 = (char *)a1 + v24;
    v29 = (char *)a2 + v24;
    v30 = type metadata accessor for ArtworkImage.Placeholder(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_10000B4C8(&qword_10055BDB0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = sub_10000B4C8(&qword_10055EC50);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 10, v33))
      {
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
      }
      else
      {
        v35 = type metadata accessor for Playlist.Variant(0);
        v42 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v29, 1, v35))
        {
          v36 = sub_10000B4C8(&qword_100558BB8);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v28, v29, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v28, 0, 1, v35);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v28, 0, 10, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for ArtworkImage.ReusePolicy(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t destroy for ArtworkMotionView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for VideoArtwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[6];
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + a2[8];
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_10000B4C8(&qword_10055EC50);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 10, v14))
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
    }
  }
  v17 = a1 + a2[9];
  v18 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

char *initializeWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_10055BDA8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_10000B4C8((uint64_t *)&unk_10055E870);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_10000B4C8(&qword_100558E20);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_10000B4C8(&qword_10055BDB0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_10000B4C8(&qword_10055EC50);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = sub_10000B4C8(&qword_100558BB8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

char *assignWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_10000B4C8(&qword_10055BDA8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = sub_10000B4C8((uint64_t *)&unk_10055E870);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = sub_10000B4C8(&qword_100558E20);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = *((_QWORD *)v32 + 2);
  v31[24] = v32[24];
  *((_QWORD *)v31 + 2) = v34;
  v35 = *((_QWORD *)v32 + 4);
  v31[40] = v32[40];
  *((_QWORD *)v31 + 4) = v35;
  v31[41] = v32[41];
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for ArtworkImage.Placeholder(0);
  v40 = *(_QWORD **)(v39 - 8);
  v41 = (uint64_t (*)(char *, uint64_t, uint64_t))v40[6];
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      v44 = sub_10000B4C8(&qword_10055EC50);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v38, 10, v44))
      {
        memcpy(v37, v38, v40[8]);
      }
      else
      {
        v56 = type metadata accessor for Playlist.Variant(0);
        v68 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v38, 1, v56))
        {
          v57 = sub_10000B4C8(&qword_100558BB8);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v37, v38, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v37, 0, 1, v56);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 10, v44);
      }
      v58 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v40[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v43)
  {
    sub_10000E750((uint64_t)v37, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v46 = &qword_10055BDB0;
LABEL_26:
    v47 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(v46) - 8) + 64);
LABEL_27:
    memcpy(v37, v38, v47);
    goto LABEL_44;
  }
  v48 = sub_10000B4C8(&qword_10055EC50);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v37, 10, v48);
  v52 = v50(v38, 10, v48);
  if (!v51)
  {
    if (!v52)
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v39 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v37, 1, v39);
      v67 = v65(v38, 1, v39);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v37, v38, v39);
          v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56);
LABEL_43:
          v58(v37, 0, 1, v39);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v37, v38, v39);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
      }
      v46 = &qword_100558BB8;
      goto LABEL_26;
    }
    sub_100011694((uint64_t)v37, &qword_10055EC50);
LABEL_39:
    v47 = v40[8];
    goto LABEL_27;
  }
  if (v52)
    goto LABEL_39;
  v53 = type metadata accessor for Playlist.Variant(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v53))
  {
    v55 = sub_10000B4C8(&qword_100558BB8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v37, v38, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v37, 0, 1, v53);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v37, 0, 10, v48);
LABEL_44:
  v59 = a3[9];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

char *initializeWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_10055BDA8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_10000B4C8((uint64_t *)&unk_10055E870);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_10000B4C8(&qword_100558E20);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_10000B4C8(&qword_10055BDB0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_10000B4C8(&qword_10055EC50);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = sub_10000B4C8(&qword_100558BB8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

char *assignWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_10000B4C8(&qword_10055BDA8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = sub_10000B4C8((uint64_t *)&unk_10055E870);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = sub_10000B4C8(&qword_100558E20);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = a3[8];
  v32 = &a1[v30];
  v33 = &a2[v30];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  v32[24] = v33[24];
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  *((_WORD *)v32 + 20) = *((_WORD *)v33 + 20);
  v34 = &a1[v31];
  v35 = &a2[v31];
  v36 = type metadata accessor for ArtworkImage.Placeholder(0);
  v37 = *(_QWORD **)(v36 - 8);
  v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v37[6];
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v41 = sub_10000B4C8(&qword_10055EC50);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 10, v41))
      {
        memcpy(v34, v35, v37[8]);
      }
      else
      {
        v53 = type metadata accessor for Playlist.Variant(0);
        v65 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v35, 1, v53))
        {
          v54 = sub_10000B4C8(&qword_100558BB8);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v34, v35, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v34, 0, 1, v53);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v34, 0, 10, v41);
      }
      v55 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v37[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v40)
  {
    sub_10000E750((uint64_t)v34, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v43 = &qword_10055BDB0;
LABEL_26:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(v43) - 8) + 64);
LABEL_27:
    memcpy(v34, v35, v44);
    goto LABEL_44;
  }
  v45 = sub_10000B4C8(&qword_10055EC50);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v34, 10, v45);
  v49 = v47(v35, 10, v45);
  if (!v48)
  {
    if (!v49)
    {
      v36 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v36 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v34, 1, v36);
      v64 = v62(v35, 1, v36);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v34, v35, v36);
          v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
LABEL_43:
          v55(v34, 0, 1, v36);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v34, v35, v36);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v34, v36);
      }
      v43 = &qword_100558BB8;
      goto LABEL_26;
    }
    sub_100011694((uint64_t)v34, &qword_10055EC50);
LABEL_39:
    v44 = v37[8];
    goto LABEL_27;
  }
  if (v49)
    goto LABEL_39;
  v50 = type metadata accessor for Playlist.Variant(0);
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v35, 1, v50))
  {
    v52 = sub_10000B4C8(&qword_100558BB8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v34, v35, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v50);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 10, v45);
LABEL_44:
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036BE6C);
}

uint64_t sub_10036BE6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v6 = sub_10000B4C8(&qword_10055BDA8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_10000B4C8((uint64_t *)&unk_10055E870);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = sub_10000B4C8(&qword_100558E20);
  v10 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v13;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 253)
  {
    v16 = sub_10000B4C8(&qword_10055BDB0);
    v10 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v16;
      v12 = a3[8];
    }
    else
    {
      v11 = type metadata accessor for ArtworkImage.ReusePolicy(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + a3[7] + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036BFA4);
}

uint64_t sub_10036BFA4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = sub_10000B4C8(&qword_10055BDA8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8((uint64_t *)&unk_10055E870);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = sub_10000B4C8(&qword_100558E20);
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 253)
        {
          *(_BYTE *)(a1 + a4[7] + 41) = a2 + 2;
          return result;
        }
        v17 = sub_10000B4C8(&qword_10055BDB0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[9];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10036C0C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[6];

  sub_10002E8E4(319, &qword_10055C128, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, &qword_10055C130, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_10055BFE8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        v12[3] = &unk_10043ED40;
        sub_10002E8E4(319, (unint64_t *)&unk_10055C138, type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v12[4] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(319);
          if (v11 <= 0x3F)
          {
            v12[5] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 6, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t *_s11PlaceholderOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_10000B4C8(&qword_10055EC50);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = sub_10000B4C8(&qword_100558BB8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t _s11PlaceholderOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_10000B4C8(&qword_10055EC50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Playlist.Variant(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *_s11PlaceholderOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_10000B4C8(&qword_10055EC50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_10000B4C8(&qword_100558BB8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_10000B4C8(&qword_10055EC50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_10000B4C8(&qword_100558BB8) - 8);
      goto LABEL_8;
    }
    sub_100011694((uint64_t)a1, &qword_10055EC50);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_10000B4C8(&qword_100558BB8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *_s11PlaceholderOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_10000B4C8(&qword_10055EC50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_10000B4C8(&qword_100558BB8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_10000B4C8(&qword_10055EC50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_10000B4C8(&qword_100558BB8) - 8);
      goto LABEL_8;
    }
    sub_100011694((uint64_t)a1, &qword_10055EC50);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_10000B4C8(&qword_100558BB8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t _s11PlaceholderOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036C9B8);
}

uint64_t sub_10036C9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10000B4C8(&qword_10055EC50);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB)
    return v5 - 10;
  else
    return 0;
}

uint64_t _s11PlaceholderOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036CA14);
}

uint64_t sub_10036CA14(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 10);
  else
    v5 = 0;
  v6 = sub_10000B4C8(&qword_10055EC50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10036CA6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_10055EC50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
}

uint64_t sub_10036CAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_10055EC50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 10, v4);
}

void sub_10036CAEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_10002E8E4(319, &qword_10055C1F8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(v2 - 8) + 64, 10);
}

uint64_t _s11PlaceholderO4ViewVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    v11 = sub_10000B4C8(&qword_100558278);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_10055BDF8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        v18 = *((_QWORD *)v10 + 3);
        if (v18)
        {
          v19 = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 3) = v18;
          *((_QWORD *)v9 + 4) = v19;
          (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v9, v10);
        }
        else
        {
          v20 = v10[1];
          *v9 = *v10;
          v9[1] = v20;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        }
        v21 = (_OWORD *)((char *)v9 + 40);
        v22 = (_OWORD *)((char *)v10 + 40);
        v23 = *((_QWORD *)v10 + 8);
        if (v23)
        {
          v24 = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 8) = v23;
          *((_QWORD *)v9 + 9) = v24;
          (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v21, v22);
        }
        else
        {
          v25 = *(_OWORD *)((char *)v10 + 56);
          *v21 = *v22;
          *(_OWORD *)((char *)v9 + 56) = v25;
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        }
        v26 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v26;
        v27 = (char *)v10 + v26;
        v28 = type metadata accessor for BlendMode(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_10000B4C8(&qword_10055BE10);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
        }
        v15 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      v17 = *(_QWORD *)v10;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain(v17);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v31 = *(int *)(a3 + 36);
    v32 = (uint64_t *)(a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = sub_10000B4C8((uint64_t *)&unk_100558280);
    if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
    {
      v35 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
      v36 = v32;
      v37 = v34;
      v38 = 1;
    }
    else
    {
      v39 = *v33;
      *v32 = *v33;
      swift_retain(v39);
      v36 = v32;
      v37 = v34;
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v36, v37, v38);
  }
  return a1;
}

double _s11PlaceholderO4ViewVwxx(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = sub_10000B4C8(&qword_100558278);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        sub_100011758(v4);
      if (v4[8])
        sub_100011758(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release(*v4);
  }
  v10 = (_QWORD *)(a1 + *(int *)(a2 + 36));
  v11 = sub_10000B4C8((uint64_t *)&unk_100558280);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v10).n128_u64[0];
  }
  return result;
}

uint64_t _s11PlaceholderO4ViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  v10 = sub_10000B4C8(&qword_100558278);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = sub_10000B4C8(&qword_10055BDF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      v16 = *((_QWORD *)v9 + 3);
      if (v16)
      {
        v17 = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 3) = v16;
        *((_QWORD *)v8 + 4) = v17;
        (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v8, v9);
      }
      else
      {
        v18 = v9[1];
        *v8 = *v9;
        v8[1] = v18;
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      }
      v19 = (_OWORD *)((char *)v8 + 40);
      v20 = (_OWORD *)((char *)v9 + 40);
      v21 = *((_QWORD *)v9 + 8);
      if (v21)
      {
        v22 = *((_QWORD *)v9 + 9);
        *((_QWORD *)v8 + 8) = v21;
        *((_QWORD *)v8 + 9) = v22;
        (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
      }
      else
      {
        v23 = *(_OWORD *)((char *)v9 + 56);
        *v19 = *v20;
        *(_OWORD *)((char *)v8 + 56) = v23;
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
      }
      v24 = *(int *)(v11 + 24);
      __dst = (char *)v8 + v24;
      v25 = (char *)v9 + v24;
      v26 = type metadata accessor for BlendMode(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10000B4C8(&qword_10055BE10);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      v14 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    v15 = *(_QWORD *)v9;
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  v29 = *(int *)(a3 + 36);
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v32 = sub_10000B4C8((uint64_t *)&unk_100558280);
  if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
  {
    v33 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
    v34 = 1;
  }
  else
  {
    v35 = *v31;
    *v30 = *v31;
    swift_retain(v35);
    v34 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v32, v34);
  return a1;
}

_QWORD *_s11PlaceholderO4ViewVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 32);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (__int128 *)((char *)a2 + v6);
    sub_100011694((uint64_t)a1 + v6, &qword_100558278);
    v9 = sub_10000B4C8(&qword_100558278);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_10000B4C8(&qword_10055BDF8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 3);
        if (v15)
        {
          *((_QWORD *)v7 + 3) = v15;
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v15 - 8))(v7, v8);
        }
        else
        {
          v16 = *v8;
          v17 = v8[1];
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          *v7 = v16;
          v7[1] = v17;
        }
        v18 = (_OWORD *)((char *)v7 + 40);
        v19 = (__int128 *)((char *)v8 + 40);
        v20 = *((_QWORD *)v8 + 8);
        if (v20)
        {
          *((_QWORD *)v7 + 8) = v20;
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v20 - 8))(v18, v19);
        }
        else
        {
          v21 = *v19;
          v22 = *(__int128 *)((char *)v8 + 56);
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          *v18 = v21;
          *(_OWORD *)((char *)v7 + 56) = v22;
        }
        v23 = *(int *)(v10 + 24);
        __dst = (char *)v7 + v23;
        v24 = (char *)v8 + v23;
        v25 = type metadata accessor for BlendMode(0);
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          v27 = sub_10000B4C8(&qword_10055BE10);
          memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        v13 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      v14 = *(_QWORD *)v8;
      *(_QWORD *)v7 = *(_QWORD *)v8;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
    v28 = *(int *)(a3 + 36);
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    sub_100011694((uint64_t)a1 + v28, (uint64_t *)&unk_100558280);
    v31 = sub_10000B4C8((uint64_t *)&unk_100558280);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
      v33 = 1;
    }
    else
    {
      v34 = *v30;
      *v29 = *v30;
      swift_retain(v34);
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v29, v31, v33);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = sub_10000B4C8(&qword_100558278);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_10000B4C8(&qword_10055BDF8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v8[1];
      *v7 = *v8;
      v7[1] = v13;
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      v14 = *(int *)(v10 + 24);
      __dst = (char *)v7 + v14;
      v15 = (char *)v8 + v14;
      v16 = type metadata accessor for BlendMode(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10000B4C8(&qword_10055BE10);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v19 = *(int *)(a3 + 36);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_10000B4C8((uint64_t *)&unk_100558280);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload(v20, v22, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)(a2 + v8);
    sub_100011694(a1 + v8, &qword_100558278);
    v11 = sub_10000B4C8(&qword_100558278);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_10055BDF8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
        *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        v16 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v16;
        v17 = (char *)v10 + v16;
        v18 = type metadata accessor for BlendMode(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_10000B4C8(&qword_10055BE10);
          memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v21 = *(int *)(a3 + 36);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_100011694(a1 + v21, (uint64_t *)&unk_100558280);
    v24 = sub_10000B4C8((uint64_t *)&unk_100558280);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036D9D8);
}

uint64_t sub_10036D9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000B4C8(&qword_10055C200);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_10055C208);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s11PlaceholderO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036DA8C);
}

uint64_t sub_10036DA8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_10000B4C8(&qword_10055C200);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_10055C208);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_10036DB30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_10043EDC8;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_10043EDE0;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10036DBF0(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&unk_10055C280, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

void sub_10036DBF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055C278)
  {
    v2 = sub_100011650(&qword_10055BDF8);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055C278);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v9);
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v11 = (_OWORD *)(v4 + 40);
    v12 = a2 + 5;
    v13 = a2[8];
    if (v13)
    {
      v14 = a2[9];
      *(_QWORD *)(v4 + 64) = v13;
      *(_QWORD *)(v4 + 72) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      v15 = *(_OWORD *)(a2 + 7);
      *v11 = *v12;
      *(_OWORD *)(v4 + 56) = v15;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v16 = *(int *)(a3 + 24);
    v17 = (void *)(v4 + v16);
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for BlendMode(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_10000B4C8(&qword_10055BE10);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwxx(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1[3])
    sub_100011758(a1);
  if (a1[8])
    sub_100011758(a1 + 5);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v9 = (_OWORD *)(a1 + 40);
  v10 = (_OWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 56);
    *v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for BlendMode(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_10000B4C8(&qword_10055BE10);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwca(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_1000C1A04((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    sub_100011758((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *((_QWORD *)a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v9)
    {
      sub_1000C1A04((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
      goto LABEL_15;
    }
    sub_100011758((_QWORD *)(a1 + 40));
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  v10 = *(__int128 *)((char *)a2 + 40);
  v11 = *(__int128 *)((char *)a2 + 56);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for BlendMode(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    v20 = sub_10000B4C8(&qword_10055BE10);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 24);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = sub_10000B4C8(&qword_10055BE10);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  if (*(_QWORD *)(a1 + 24))
    sub_100011758((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    sub_100011758((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    v16 = sub_10000B4C8(&qword_10055BE10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036E364);
}

uint64_t sub_10036E364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_10000B4C8(&qword_10055BE10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036E3FC);
}

uint64_t sub_10036E3FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = sub_10000B4C8(&qword_10055BE10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_10036E474(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = "(";
  sub_10002E8E4(319, (unint64_t *)&unk_10055C328, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PlaceholderStyleModifier(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    swift_retain(v6);
    v10 = sub_10000B4C8(&qword_100558278);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_10000B4C8(&qword_10055BDF8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = *((_QWORD *)v9 + 3);
        if (v18)
        {
          v19 = *((_QWORD *)v9 + 4);
          *((_QWORD *)v8 + 3) = v18;
          *((_QWORD *)v8 + 4) = v19;
          (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v8, v9);
        }
        else
        {
          v20 = v9[1];
          *v8 = *v9;
          v8[1] = v20;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        }
        v21 = (_OWORD *)((char *)v8 + 40);
        v22 = (_OWORD *)((char *)v9 + 40);
        v23 = *((_QWORD *)v9 + 8);
        if (v23)
        {
          v24 = *((_QWORD *)v9 + 9);
          *((_QWORD *)v8 + 8) = v23;
          *((_QWORD *)v8 + 9) = v24;
          (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v21, v22);
        }
        else
        {
          v25 = *(_OWORD *)((char *)v9 + 56);
          *v21 = *v22;
          *(_OWORD *)((char *)v8 + 56) = v25;
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        }
        v26 = *(int *)(v11 + 24);
        v27 = (char *)v8 + v26;
        v28 = (char *)v9 + v26;
        v29 = type metadata accessor for BlendMode(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_10000B4C8(&qword_10055BE10);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v15 = v8;
      v16 = v10;
      v17 = 1;
    }
    else
    {
      v14 = *(_QWORD *)v9;
      *(_QWORD *)v8 = *(_QWORD *)v9;
      swift_retain(v14);
      v15 = v8;
      v16 = v10;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

void destroy for PlaceholderStyleModifier(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = sub_10000B4C8(&qword_100558278);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        sub_100011758(v4);
      if (v4[8])
        sub_100011758(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release(*v4);
  }
}

_QWORD *initializeWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_OWORD *)((char *)a1 + v5);
  v7 = (_OWORD *)((char *)a2 + v5);
  swift_retain(v4);
  v8 = sub_10000B4C8(&qword_100558278);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_10000B4C8(&qword_10055BDF8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v12 = 1;
    }
    else
    {
      v14 = *((_QWORD *)v7 + 3);
      if (v14)
      {
        v15 = *((_QWORD *)v7 + 4);
        *((_QWORD *)v6 + 3) = v14;
        *((_QWORD *)v6 + 4) = v15;
        (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v6, v7);
      }
      else
      {
        v16 = v7[1];
        *v6 = *v7;
        v6[1] = v16;
        *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
      }
      v17 = (_OWORD *)((char *)v6 + 40);
      v18 = (_OWORD *)((char *)v7 + 40);
      v19 = *((_QWORD *)v7 + 8);
      if (v19)
      {
        v20 = *((_QWORD *)v7 + 9);
        *((_QWORD *)v6 + 8) = v19;
        *((_QWORD *)v6 + 9) = v20;
        (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
      }
      else
      {
        v21 = *(_OWORD *)((char *)v7 + 56);
        *v17 = *v18;
        *(_OWORD *)((char *)v6 + 56) = v21;
        *((_QWORD *)v6 + 9) = *((_QWORD *)v7 + 9);
      }
      v22 = *(int *)(v9 + 24);
      v23 = (char *)v6 + v22;
      v24 = (char *)v7 + v22;
      v25 = type metadata accessor for BlendMode(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_10000B4C8(&qword_10055BE10);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v12 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  else
  {
    v13 = *(_QWORD *)v7;
    *(_QWORD *)v6 = *(_QWORD *)v7;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v12);
  return a1;
}

_QWORD *assignWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (__int128 *)((char *)a2 + v8);
    sub_100011694((uint64_t)a1 + v8, &qword_100558278);
    v11 = sub_10000B4C8(&qword_100558278);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_10000B4C8(&qword_10055BDF8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        v17 = *((_QWORD *)v10 + 3);
        if (v17)
        {
          *((_QWORD *)v9 + 3) = v17;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v17 - 8))(v9, v10);
        }
        else
        {
          v18 = *v10;
          v19 = v10[1];
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          *v9 = v18;
          v9[1] = v19;
        }
        v20 = (_OWORD *)((char *)v9 + 40);
        v21 = (__int128 *)((char *)v10 + 40);
        v22 = *((_QWORD *)v10 + 8);
        if (v22)
        {
          *((_QWORD *)v9 + 8) = v22;
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v22 - 8))(v20, v21);
        }
        else
        {
          v23 = *v21;
          v24 = *(__int128 *)((char *)v10 + 56);
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          *v20 = v23;
          *(_OWORD *)((char *)v9 + 56) = v24;
        }
        v25 = *(int *)(v12 + 24);
        v26 = (char *)v9 + v25;
        v27 = (char *)v10 + v25;
        v28 = type metadata accessor for BlendMode(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_10000B4C8(&qword_10055BE10);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v15 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      v16 = *(_QWORD *)v10;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
  }
  return a1;
}

_OWORD *initializeWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = sub_10000B4C8(&qword_100558278);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_10000B4C8(&qword_10055BDF8);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = v6[1];
      *v5 = *v6;
      v5[1] = v11;
      *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
      *(_OWORD *)((char *)v5 + 40) = *(_OWORD *)((char *)v6 + 40);
      *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
      *((_QWORD *)v5 + 9) = *((_QWORD *)v6 + 9);
      v12 = *(int *)(v8 + 24);
      v13 = (char *)v5 + v12;
      v14 = (char *)v6 + v12;
      v15 = type metadata accessor for BlendMode(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_10000B4C8(&qword_10055BE10);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for PlaceholderStyleModifier(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v6);
  if ((_OWORD *)a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)(a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    sub_100011694(a1 + v7, &qword_100558278);
    v10 = sub_10000B4C8(&qword_100558278);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_10000B4C8(&qword_10055BDF8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v14 = v9[1];
        *v8 = *v9;
        v8[1] = v14;
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        v15 = *(int *)(v11 + 24);
        v16 = (char *)v8 + v15;
        v17 = (char *)v9 + v15;
        v18 = type metadata accessor for BlendMode(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_10000B4C8(&qword_10055BE10);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036EFF8);
}

uint64_t sub_10036EFF8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000B4C8(&qword_10055C200);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036F084);
}

char *sub_10036F084(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10000B4C8(&qword_10055C200);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10036F0FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  sub_10036DBF0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_10036F174()
{
  _QWORD v1[2];

  v1[0] = sub_100011650((uint64_t *)&unk_10055DC00);
  v1[1] = sub_100366604();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
}

unint64_t sub_10036F1C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C3F0;
  if (!qword_10055C3F0)
  {
    v1 = sub_100011650(&qword_10055BDC8);
    v2[0] = sub_10036F248();
    v2[1] = sub_100012324(&qword_10055C408, &qword_10055BDE8, (const char *)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C3F0);
  }
  return result;
}

unint64_t sub_10036F248()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10055C3F8;
  if (!qword_10055C3F8)
  {
    v1 = sub_100011650(&qword_10055BDC0);
    v3[0] = sub_100011650(&qword_10055BDD0);
    v3[1] = sub_1003684AC();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    v2[1] = sub_100012324(&qword_10055C400, &qword_10055BDE0, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C3F8);
  }
  return result;
}

unint64_t sub_10036F2FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C410;
  if (!qword_10055C410)
  {
    v1 = sub_100011650(&qword_10055BE08);
    v2[0] = sub_10036F380();
    v2[1] = sub_100012324(&qword_10055C438, &qword_10055BE00, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C410);
  }
  return result;
}

unint64_t sub_10036F380()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C418;
  if (!qword_10055C418)
  {
    v1 = sub_100011650(&qword_10055C420);
    v2[0] = &protocol witness table for Color;
    v2[1] = sub_100012324(&qword_10055C428, &qword_10055C430, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C418);
  }
  return result;
}

unint64_t sub_10036F408()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C440;
  if (!qword_10055C440)
  {
    v1 = sub_100011650(&qword_10055BF60);
    v2[0] = sub_100012324(&qword_10055C448, &qword_10055BF70, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = sub_100012324(&qword_10055C450, &qword_10055BF68, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C440);
  }
  return result;
}

uint64_t sub_10036F4A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for PlaceholderStyleModifier(255);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v6[0] = v2;
  v6[1] = sub_10001254C(&qword_10055C458, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v4, v6);
}

uint64_t _s11PlaceholderO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_10036F570 + 4 * byte_10043EA5C[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_10036F5A4 + 4 * byte_10043EA57[v4]))();
}

uint64_t sub_10036F5A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036F5AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10036F5B4);
  return result;
}

uint64_t sub_10036F5C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10036F5C8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_10036F5CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036F5D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11PlaceholderO10CodingKeysOMa()
{
  return &_s11PlaceholderO10CodingKeysON;
}

ValueMetadata *_s11PlaceholderO15MusicCodingKeysOMa()
{
  return &_s11PlaceholderO15MusicCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20NowPlayingCodingKeysOMa()
{
  return &_s11PlaceholderO20NowPlayingCodingKeysON;
}

ValueMetadata *_s11PlaceholderO21NewPlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO21NewPlaylistCodingKeysON;
}

uint64_t _s11PlaceholderO18PlaylistCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10036F660 + 4 * byte_10043EA61[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10036F680 + 4 * byte_10043EA66[v4]))();
}

_BYTE *sub_10036F660(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10036F680(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10036F688(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10036F690(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10036F698(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10036F6A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11PlaceholderO18PlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO18PlaylistCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MusicVideoCodingKeysOMa()
{
  return &_s11PlaceholderO20MusicVideoCodingKeysON;
}

ValueMetadata *_s11PlaceholderO12TvCodingKeysOMa()
{
  return &_s11PlaceholderO12TvCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MicrophoneCodingKeysOMa()
{
  return &_s11PlaceholderO20MicrophoneCodingKeysON;
}

ValueMetadata *_s11PlaceholderO16PersonCodingKeysOMa()
{
  return &_s11PlaceholderO16PersonCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15RadioCodingKeysOMa()
{
  return &_s11PlaceholderO15RadioCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15GenreCodingKeysOMa()
{
  return &_s11PlaceholderO15GenreCodingKeysON;
}

ValueMetadata *_s11PlaceholderO18ComposerCodingKeysOMa()
{
  return &_s11PlaceholderO18ComposerCodingKeysON;
}

ValueMetadata *_s19PlaceholderStyleKeyVMa()
{
  return &_s19PlaceholderStyleKeyVN;
}

unint64_t sub_10036F740()
{
  unint64_t result;

  result = qword_10055C460;
  if (!qword_10055C460)
  {
    result = swift_getWitnessTable(byte_10043F244, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C460);
  }
  return result;
}

unint64_t sub_10036F788()
{
  unint64_t result;

  result = qword_10055C468;
  if (!qword_10055C468)
  {
    result = swift_getWitnessTable(asc_10043F3EC, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C468);
  }
  return result;
}

unint64_t sub_10036F7D0()
{
  unint64_t result;

  result = qword_10055C470;
  if (!qword_10055C470)
  {
    result = swift_getWitnessTable(byte_10043F30C, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C470);
  }
  return result;
}

unint64_t sub_10036F818()
{
  unint64_t result;

  result = qword_10055C478;
  if (!qword_10055C478)
  {
    result = swift_getWitnessTable(byte_10043F334, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C478);
  }
  return result;
}

unint64_t sub_10036F860()
{
  unint64_t result;

  result = qword_10055C480;
  if (!qword_10055C480)
  {
    result = swift_getWitnessTable(a5_1, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C480);
  }
  return result;
}

unint64_t sub_10036F8A8()
{
  unint64_t result;

  result = qword_10055C488;
  if (!qword_10055C488)
  {
    result = swift_getWitnessTable(byte_10043F2E4, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C488);
  }
  return result;
}

unint64_t sub_10036F8F0()
{
  unint64_t result;

  result = qword_10055C490;
  if (!qword_10055C490)
  {
    result = swift_getWitnessTable(byte_10043F26C, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C490);
  }
  return result;
}

unint64_t sub_10036F938()
{
  unint64_t result;

  result = qword_10055C498;
  if (!qword_10055C498)
  {
    result = swift_getWitnessTable(aM_16, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C498);
  }
  return result;
}

unint64_t sub_10036F980()
{
  unint64_t result;

  result = qword_10055C4A0;
  if (!qword_10055C4A0)
  {
    result = swift_getWitnessTable(asc_10043F1B4, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4A0);
  }
  return result;
}

unint64_t sub_10036F9C8()
{
  unint64_t result;

  result = qword_10055C4A8;
  if (!qword_10055C4A8)
  {
    result = swift_getWitnessTable(asc_10043F1DC, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4A8);
  }
  return result;
}

unint64_t sub_10036FA10()
{
  unint64_t result;

  result = qword_10055C4B0;
  if (!qword_10055C4B0)
  {
    result = swift_getWitnessTable(byte_10043F164, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4B0);
  }
  return result;
}

unint64_t sub_10036FA58()
{
  unint64_t result;

  result = qword_10055C4B8;
  if (!qword_10055C4B8)
  {
    result = swift_getWitnessTable(aU_9, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4B8);
  }
  return result;
}

unint64_t sub_10036FAA0()
{
  unint64_t result;

  result = qword_10055C4C0;
  if (!qword_10055C4C0)
  {
    result = swift_getWitnessTable(byte_10043F114, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4C0);
  }
  return result;
}

unint64_t sub_10036FAE8()
{
  unint64_t result;

  result = qword_10055C4C8;
  if (!qword_10055C4C8)
  {
    result = swift_getWitnessTable(byte_10043F13C, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4C8);
  }
  return result;
}

unint64_t sub_10036FB30()
{
  unint64_t result;

  result = qword_10055C4D0;
  if (!qword_10055C4D0)
  {
    result = swift_getWitnessTable(asc_10043F0C4, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4D0);
  }
  return result;
}

unint64_t sub_10036FB78()
{
  unint64_t result;

  result = qword_10055C4D8;
  if (!qword_10055C4D8)
  {
    result = swift_getWitnessTable(byte_10043F0EC, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4D8);
  }
  return result;
}

unint64_t sub_10036FBC0()
{
  unint64_t result;

  result = qword_10055C4E0;
  if (!qword_10055C4E0)
  {
    result = swift_getWitnessTable(asc_10043F074, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4E0);
  }
  return result;
}

unint64_t sub_10036FC08()
{
  unint64_t result;

  result = qword_10055C4E8;
  if (!qword_10055C4E8)
  {
    result = swift_getWitnessTable(aE_5, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4E8);
  }
  return result;
}

unint64_t sub_10036FC50()
{
  unint64_t result;

  result = qword_10055C4F0;
  if (!qword_10055C4F0)
  {
    result = swift_getWitnessTable(byte_10043F024, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4F0);
  }
  return result;
}

unint64_t sub_10036FC98()
{
  unint64_t result;

  result = qword_10055C4F8;
  if (!qword_10055C4F8)
  {
    result = swift_getWitnessTable(byte_10043F04C, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C4F8);
  }
  return result;
}

unint64_t sub_10036FCE0()
{
  unint64_t result;

  result = qword_10055C500;
  if (!qword_10055C500)
  {
    result = swift_getWitnessTable(byte_10043EFD4, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C500);
  }
  return result;
}

unint64_t sub_10036FD28()
{
  unint64_t result;

  result = qword_10055C508;
  if (!qword_10055C508)
  {
    result = swift_getWitnessTable(byte_10043EFFC, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C508);
  }
  return result;
}

unint64_t sub_10036FD70()
{
  unint64_t result;

  result = qword_10055C510;
  if (!qword_10055C510)
  {
    result = swift_getWitnessTable(aM_17, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C510);
  }
  return result;
}

unint64_t sub_10036FDB8()
{
  unint64_t result;

  result = qword_10055C518;
  if (!qword_10055C518)
  {
    result = swift_getWitnessTable(aU_10, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C518);
  }
  return result;
}

unint64_t sub_10036FE00()
{
  unint64_t result;

  result = qword_10055C520;
  if (!qword_10055C520)
  {
    result = swift_getWitnessTable(byte_10043F35C, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C520);
  }
  return result;
}

unint64_t sub_10036FE48()
{
  unint64_t result;

  result = qword_10055C528;
  if (!qword_10055C528)
  {
    result = swift_getWitnessTable(asc_10043F384, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10055C528);
  }
  return result;
}

uint64_t sub_10036FE8C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  if (a1 == 0x636973756DLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636973756DLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL)
  {
    v7 = 0xEA0000000000676ELL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6979616C50776F6ELL, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6C79616C5077656ELL && a2 == 0xEB00000000747369)
  {
    v8 = 0xEB00000000747369;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C79616C5077656ELL, 0xEB00000000747369, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7473696C79616C70 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C70, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x646956636973756DLL && a2 == 0xEA00000000006F65)
  {
    v10 = 0xEA00000000006F65;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646956636973756DLL, 0xEA00000000006F65, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    v11 = 0xE200000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(30324, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x6F68706F7263696DLL && a2 == 0xEA0000000000656ELL)
  {
    v12 = 0xEA0000000000656ELL;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F68706F7263696DLL, 0xEA0000000000656ELL, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000)
  {
    v13 = 0xE600000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F73726570, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x6F69646172 && a2 == 0xE500000000000000)
  {
    v14 = 0xE500000000000000;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69646172, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0x65726E6567 && a2 == 0xE500000000000000)
  {
    v15 = 0xE500000000000000;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65726E6567, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0x7265736F706D6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 10;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265736F706D6F63, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v16 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

double sub_1003702F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  double result;

  if ((a4 & 1) != 0)
    return sub_100370300(a1, a2);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_100370300(uint64_t a1, uint64_t a2)
{
  double result;

  if (a2)
  {
    swift_release(a2);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_100370330(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    swift_retain(result);
    return swift_retain(a2);
  }
  return result;
}

double sub_10037035C(uint64_t a1, uint64_t a2, char a3)
{
  double result;

  if ((a3 & 1) == 0)
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

unint64_t sub_100370370()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C550;
  if (!qword_10055C550)
  {
    v1 = sub_100011650(&qword_10055C548);
    v2[0] = sub_1003703F4();
    v2[1] = sub_100012324((unint64_t *)&unk_10055DA40, &qword_10055AD18, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C550);
  }
  return result;
}

unint64_t sub_1003703F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C558;
  if (!qword_10055C558)
  {
    v1 = sub_100011650(&qword_10055C560);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_100012324(&qword_10055C568, &qword_10055C570, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C558);
  }
  return result;
}

uint64_t sub_100370478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for ArtworkMotionView(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = (v4 + v5 + v8) & ~v8;
  v29 = *(_QWORD *)(v7 + 64);
  v9 = v0 + v4;
  v10 = sub_10000B4C8(&qword_10055EC50);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v28(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v30 = v0;
  v13 = v0 + v31;
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v31, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = v13 + v6[5];
  v17 = type metadata accessor for Artwork(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  v19 = v13 + v6[6];
  v20 = type metadata accessor for Artwork.CropStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v22 = v13 + v6[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v22, 1, v1) && !v28(v22, 10, v10))
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  v25 = v13 + v6[9];
  v26 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  return swift_deallocObject(v30, v31 + v29, v3 | v8 | 7);
}

uint64_t sub_1003706E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_100360BF8(v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_100370760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_10000B4C8(&qword_10055EC50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 42, v2 | 7);
}

uint64_t sub_100370828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  return sub_10035FB20((uint64_t *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t TextBadge.init(immersive:)(char a1)
{
  if ((a1 & 1) != 0)
    return 4;
  else
    return 2;
}

uint64_t TextBadge.view.getter(char a1)
{
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[5];

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  v10[3] = type metadata accessor for TintShapeStyle(0);
  v10[4] = &protocol witness table for TintShapeStyle;
  sub_1000C16E0(v10);
  TintShapeStyle.init()();
  v9 = v5;
  TextBadge.view(favoriteBadgeConfiguration:)(&v9, a1);
  v7 = v6;
  sub_100372E28(&v9);
  return v7;
}

void TextBadge.view(favoriteBadgeConfiguration:)(_QWORD *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;

  if (a2 != 2)
  {
    if (a2 == 3)
    {
      sub_1000C53BC((uint64_t)(a1 + 1), (uint64_t)v79);
      v32 = v80;
      v76 = v81;
      v75 = sub_10000D900(v79, v80);
      v33 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v35 = *v33;
      v34 = v33[1];
      swift_bridgeObjectRetain();
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v36);

      if (v37)
      {
        v38 = objc_msgSend(v37, "imageWithConfiguration:", *a1);

        v39 = objc_msgSend(v38, "imageWithRenderingMode:", 2);
        v40 = Image.init(uiImage:)(v39);
        v41 = Text.init(_:)(v40);
        v43 = v42;
        v45 = v44;
        v47 = v46 & 1;
        v48 = static Text.+ infix(_:_:)(v35, v34, 0, _swiftEmptyArrayStorage, v41, v42, v47, v44);
        v50 = v49;
        v52 = v51;
        v54 = v53 & 1;
        sub_10001DA20(v41, v43, v47);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v45);
        v55 = Text.foregroundStyle<A>(_:)(v75, v48, v50, v54, v52, v32, v76);
        v57 = v56;
        v59 = v58;
        LOBYTE(v47) = v60 & 1;
        sub_10001DA20(v48, v50, v54);
        swift_bridgeObjectRelease(v52);
        v61 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
        v62 = *v61;
        v63 = v61[1];
        swift_bridgeObjectRetain();
        Text.accessibilityLabel(_:)(v62, v63, v55, v57, v47, v59);
        swift_bridgeObjectRelease(v63);
        sub_10001DA20(v55, v57, v47);
        swift_bridgeObjectRelease(v59);
        sub_100011758(v79);
      }
      else
      {
        __break(1u);
      }
    }
    else if (a2 == 4)
    {
      v2 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v3 = *v2;
      v4 = v2[1];
      swift_bridgeObjectRetain();
      v5 = Image.init(_internalSystemName:)(0x6461622E3130336ELL, 0xEF79616C702E6567);
      v6 = Text.init(_:)(v5);
      v8 = v7;
      v10 = v9;
      v12 = v11 & 1;
      v13 = static Text.+ infix(_:_:)(v3, v4, 0, _swiftEmptyArrayStorage, v6, v7, v12, v9);
      v15 = v14;
      v17 = v16;
      v19 = v18 & 1;
      sub_10001DA20(v6, v8, v12);
      swift_bridgeObjectRelease(v4);
      v20 = swift_bridgeObjectRelease(v10);
      LODWORD(v79[0]) = static HierarchicalShapeStyle.secondary.getter(v20);
      v21 = Text.foregroundStyle<A>(_:)(v79, v13, v15, v19, v17, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      v23 = v22;
      v25 = v24;
      v27 = v26 & 1;
      sub_10001DA20(v13, v15, v19);
      swift_bridgeObjectRelease(v17);
      v28 = AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor();
      v29 = *v28;
      v30 = v28[1];
      swift_bridgeObjectRetain();
      Text.accessibilityLabel(_:)(v29, v30, v21, v23, v27, v25);
      swift_bridgeObjectRelease(v30);
      sub_10001DA20(v21, v23, v27);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v64 = a2 & 1;
      v65 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v67 = *v65;
      v66 = v65[1];
      v77 = v67;
      v78 = v66;
      swift_bridgeObjectRetain();
      v68 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess(v68 + 32, v79, 0, 0);
      v69 = *(_QWORD *)(v68 + 32);
      v70 = *(void **)(v68 + 40);
      swift_bridgeObjectRetain();
      v71._countAndFlagsBits = v69;
      v71._object = v70;
      String.append(_:)(v71);
      v72 = swift_bridgeObjectRelease(v70);
      v73 = v77;
      v74 = v78;
      LODWORD(v77) = static HierarchicalShapeStyle.secondary.getter(v72);
      Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v77, v64, v73, v78, 0, (uint64_t)_swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      swift_bridgeObjectRelease(v74);
    }
  }
}

uint64_t static FavoriteBadgeConfiguration.default.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  a1[4] = type metadata accessor for TintShapeStyle(0);
  a1[5] = &protocol witness table for TintShapeStyle;
  sub_1000C16E0(a1 + 1);
  result = TintShapeStyle.init()();
  *a1 = v5;
  return result;
}

uint64_t sub_100370F08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100370F34 + 4 * byte_10043F840[*v0]))(0x7974706D65, 0xE500000000000000);
}

uint64_t sub_100370F34()
{
  return 0x746963696C707865;
}

uint64_t sub_100370F4C()
{
  return 0x657469726F766166;
}

uint64_t sub_100370F64()
{
  return 0x76697372656D6D69;
}

uint64_t sub_100370F80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100372FB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100370FA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372E5C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100370FCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372E5C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100370FF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372F6C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10037101C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372F6C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100371044()
{
  return 0x626179616C507369;
}

uint64_t sub_100371060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    result = swift_bridgeObjectRelease(0xEA0000000000656CLL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x626179616C507369, 0xEA0000000000656CLL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100371100(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372F28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100371128(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372F28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100371150(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372EE4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100371178(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372EE4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003711A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372EA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003711C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372EA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextBadge.encode(to:)(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = a2;
  v4 = sub_10000B4C8(&qword_10055C5D8);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin();
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10000B4C8(&qword_10055C5E0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10000B4C8(&qword_10055C5E8);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10055C5F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10055C5F8);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin();
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  sub_10000D900(a1, v16);
  v18 = sub_100372E5C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v18, v16, v17);
  switch(v3)
  {
    case 2:
      v41 = 0;
      v22 = sub_100372F6C();
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.EmptyCodingKeys, &v41, v40, &type metadata for TextBadge.EmptyCodingKeys, v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 3:
      v43 = 2;
      v23 = sub_100372EE4();
      v24 = v31;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.FavoriteCodingKeys, &v43, v40, &type metadata for TextBadge.FavoriteCodingKeys, v23);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 4:
      v44 = 3;
      v19 = sub_100372EA0();
      v20 = v36;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ImmersiveCodingKeys, &v44, v40, &type metadata for TextBadge.ImmersiveCodingKeys, v19);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
  }
  v42 = 1;
  v26 = sub_100372F28();
  v27 = v40;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ExplicitCodingKeys, &v42, v40, &type metadata for TextBadge.ExplicitCodingKeys, v26);
  v28 = v34;
  KeyedEncodingContainer.encode(_:forKey:)(v3 & 1, v29, v34);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v27);
}

char *TextBadge.init(from:)(_QWORD *a1)
{
  return sub_10037316C(a1);
}

char *sub_10037154C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_10037316C(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100371574(_QWORD *a1)
{
  unsigned __int8 *v1;

  return TextBadge.encode(to:)(a1, *v1);
}

uint64_t GenericMusicItem.favoriteBadge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin();
  v56 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for Artist(0);
  v4 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin();
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  __chkstk_darwin();
  v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  __chkstk_darwin();
  v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicVideo(0);
  v66 = *(_QWORD *)(v11 - 8);
  v67 = v11;
  __chkstk_darwin();
  v65 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055C628);
  __chkstk_darwin();
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for GenericMusicItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin();
  v55 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v23 = (char *)&v54 - v22;
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v54 = v1;
  v25 = v1;
  v26 = v24;
  v24((char *)&v54 - v22, v25, v19);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v23, v19);
  if (v27 != enum case for GenericMusicItem.album(_:))
  {
    if (v27 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
      v31 = v23;
      v32 = v68;
      v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v31, v68);
      Artist.favoriteStatus.getter(v33);
      v34 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v14, 0, 1, v34);
      v30 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v32);
      return v30;
    }
    if (v27 == enum case for GenericMusicItem.composer(_:)
      || v27 == enum case for GenericMusicItem.creditArtist(_:)
      || v27 == enum case for GenericMusicItem.curator(_:)
      || v27 == enum case for GenericMusicItem.editorialItem(_:)
      || v27 == enum case for GenericMusicItem.genre(_:)
      || v27 == enum case for GenericMusicItem.musicMovie(_:))
    {
      goto LABEL_11;
    }
    if (v27 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
      v36 = v65;
      v37 = v66;
      v38 = v67;
      v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v66 + 32))(v65, v23, v67);
      MusicVideo.favoriteStatus.getter(v39);
    }
    else
    {
      if (v27 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v27 != enum case for GenericMusicItem.radioShow(_:)
          && v27 != enum case for GenericMusicItem.recordLabel(_:)
          && v27 != enum case for GenericMusicItem.socialProfile(_:))
        {
          if (v27 == enum case for GenericMusicItem.song(_:))
          {
            (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
            v36 = v59;
            v37 = v60;
            v38 = v61;
            v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v60 + 32))(v59, v23, v61);
            Song.favoriteStatus.getter(v42);
            goto LABEL_18;
          }
          if (v27 != enum case for GenericMusicItem.station(_:)
            && v27 != enum case for GenericMusicItem.tvEpisode(_:)
            && v27 != enum case for GenericMusicItem.tvSeason(_:)
            && v27 != enum case for GenericMusicItem.tvShow(_:)
            && v27 != enum case for GenericMusicItem.uploadedAudio(_:)
            && v27 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v27 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
              swift_bridgeObjectRelease();
            }
            else
            {
              v43 = Logger.badging.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v43, v58);
              v44 = v26(v55, v54, v19);
              v45 = Logger.logObject.getter(v44);
              v46 = static os_log_type_t.fault.getter(v45);
              if (os_log_type_enabled(v45, v46))
              {
                v47 = swift_slowAlloc(22, -1);
                v68 = swift_slowAlloc(64, -1);
                v69 = v68;
                *(_DWORD *)v47 = 136315394;
                *(_QWORD *)(v47 + 4) = sub_1002E9B3C((char *)0xD000000000000010, (char *)0x8000000100451500, &v69);
                *(_WORD *)(v47 + 12) = 2080;
                v48 = sub_10001254C((unint64_t *)&qword_100558E28, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                v49 = v55;
                v50 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v19, v48);
                *(_QWORD *)(v47 + 14) = sub_1002E9B3C(v50, v51, &v69);
                swift_bridgeObjectRelease();
                v52 = *(void (**)(char *, uint64_t))(v20 + 8);
                v52(v49, v19);
                _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unhandled case for favorite badge with item: %s, %s", (uint8_t *)v47, 0x16u);
                v53 = v68;
                swift_arrayDestroy(v68, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v53, -1, -1);
                swift_slowDealloc(v47, -1, -1);
              }
              else
              {
                v52 = *(void (**)(char *, uint64_t))(v20 + 8);
                v52(v55, v19);
              }

              (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
              v52(v23, v19);
            }
            return 2;
          }
        }
LABEL_11:
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
        return 2;
      }
      (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
      v36 = v62;
      v37 = v63;
      v38 = v64;
      v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v63 + 32))(v62, v23, v64);
      Playlist.favoriteStatus.getter(v40);
    }
LABEL_18:
    v41 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v14, 0, 1, v41);
    v30 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v23, v15);
  Album.favoriteStatus.getter(v28);
  v29 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 0, 1, v29);
  v30 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v30;
}

uint64_t GenericMusicItem.explicitBadge(_:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  int v112;
  uint64_t v113;

  v2 = v1;
  v112 = a1;
  v85 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin();
  v83 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVSeason(0);
  v93 = *(_QWORD *)(v4 - 8);
  v94 = v4;
  __chkstk_darwin();
  v92 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v109 = *(_QWORD *)(v6 - 8);
  v110 = v6;
  __chkstk_darwin();
  v108 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for TVShow(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin();
  v89 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055C630);
  __chkstk_darwin();
  v111 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TVEpisode(0);
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  __chkstk_darwin();
  v95 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for UploadedVideo(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin();
  v80 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for UploadedAudio(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin();
  v86 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v105 = *(_QWORD *)(v14 - 8);
  v106 = v14;
  __chkstk_darwin();
  v104 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Station(0);
  v99 = *(_QWORD *)(v16 - 8);
  v100 = v16;
  __chkstk_darwin();
  v98 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Song(0);
  v102 = *(_QWORD *)(v18 - 8);
  v103 = v18;
  __chkstk_darwin();
  v101 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for MusicVideo(0);
  v20 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin();
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055C638);
  __chkstk_darwin();
  v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin();
  v28 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(type metadata accessor for GenericMusicItem(0) - 8);
  __chkstk_darwin();
  v79 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v32 = (char *)&v77 - v31;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v78 = v2;
  v34 = v2;
  v36 = v35;
  v33((char *)&v77 - v31, v34, v35);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v32, v36);
  if (v37 != enum case for GenericMusicItem.album(_:))
  {
    v40 = v112;
    if (v37 == enum case for GenericMusicItem.artist(_:)
      || v37 == enum case for GenericMusicItem.composer(_:)
      || v37 == enum case for GenericMusicItem.creditArtist(_:)
      || v37 == enum case for GenericMusicItem.curator(_:)
      || v37 == enum case for GenericMusicItem.editorialItem(_:)
      || v37 == enum case for GenericMusicItem.genre(_:))
    {
      goto LABEL_9;
    }
    if (v37 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
      v42 = v108;
      v43 = v109;
      v44 = v110;
      v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v109 + 32))(v108, v32, v110);
      v46 = (uint64_t)v111;
      MusicMovie.contentRating.getter(v45);
LABEL_14:
      v39 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(v46, v40 & 1);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
      return v39;
    }
    v47 = v112;
    if (v37 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
      v48 = v107;
      v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v32, v107);
      MusicVideo.contentRating.getter(v49);
      v39 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v24, v47 & 1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v48);
      return v39;
    }
    v50 = (uint64_t)v24;
    if (v37 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
      v51 = v104;
      v52 = v105;
      v53 = v106;
      v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v105 + 32))(v104, v32, v106);
      Playlist.contentRating.getter(v54);
    }
    else
    {
      if (v37 == enum case for GenericMusicItem.radioShow(_:)
        || v37 == enum case for GenericMusicItem.recordLabel(_:)
        || v37 == enum case for GenericMusicItem.socialProfile(_:))
      {
LABEL_9:
        (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v36);
        return 2;
      }
      if (v37 != enum case for GenericMusicItem.song(_:))
      {
        v56 = v36;
        if (v37 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
          v57 = v98;
          v58 = v99;
          v59 = v100;
          v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 32))(v98, v32, v100);
          Station.contentRating.getter(v60);
        }
        else
        {
          if (v37 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
            v42 = v95;
            v43 = v96;
            v44 = v97;
            v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v96 + 32))(v95, v32, v97);
            v46 = (uint64_t)v111;
            TVEpisode.contentRating.getter(v61);
            goto LABEL_14;
          }
          if (v37 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
            v43 = v93;
            v44 = v94;
            v42 = v92;
            v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v93 + 32))(v92, v32, v94);
            v46 = (uint64_t)v111;
            TVSeason.contentRating.getter(v62);
            goto LABEL_14;
          }
          if (v37 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
            v43 = v90;
            v42 = v89;
            v44 = v91;
            v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v90 + 32))(v89, v32, v91);
            v46 = (uint64_t)v111;
            TVShow.contentRating.getter(v63);
            goto LABEL_14;
          }
          if (v37 == enum case for GenericMusicItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
            v58 = v87;
            v57 = v86;
            v59 = v88;
            v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v87 + 32))(v86, v32, v88);
            UploadedAudio.contentRating.getter(v64);
          }
          else
          {
            if (v37 != enum case for GenericMusicItem.uploadedVideo(_:))
            {
              if (v37 == enum case for GenericMusicItem.other(_:))
              {
                (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
                swift_bridgeObjectRelease();
              }
              else
              {
                v66 = Logger.badging.unsafeMutableAddressor();
                (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v83, v66, v85);
                v67 = ((uint64_t (*)(char *, uint64_t, uint64_t))v33)(v79, v78, v36);
                v68 = Logger.logObject.getter(v67);
                v69 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v68, v69))
                {
                  v70 = swift_slowAlloc(22, -1);
                  v71 = swift_slowAlloc(64, -1);
                  v113 = v71;
                  *(_DWORD *)v70 = 136315394;
                  *(_QWORD *)(v70 + 4) = sub_1002E9B3C((char *)0xD000000000000010, (char *)0x8000000100451500, &v113);
                  *(_WORD *)(v70 + 12) = 2080;
                  v72 = sub_10001254C((unint64_t *)&qword_100558E28, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                  v73 = v79;
                  v74 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v56, v72);
                  *(_QWORD *)(v70 + 14) = sub_1002E9B3C(v74, v75, &v113);
                  swift_bridgeObjectRelease();
                  v76 = *(void (**)(char *, uint64_t))(v29 + 8);
                  v76(v73, v56);
                  _os_log_impl((void *)&_mh_execute_header, v68, v69, "Unhandled case for explicit badge with item: %s, %s", (uint8_t *)v70, 0x16u);
                  swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v71, -1, -1);
                  swift_slowDealloc(v70, -1, -1);
                }
                else
                {
                  v76 = *(void (**)(char *, uint64_t))(v29 + 8);
                  v76(v79, v36);
                }

                (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
                v76(v32, v56);
              }
              return 2;
            }
            (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
            v58 = v81;
            v57 = v80;
            v59 = v82;
            v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 32))(v80, v32, v82);
            UploadedVideo.contentRating.getter(v65);
          }
        }
        v39 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v24, v40 & 1);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
        return v39;
      }
      (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
      v51 = v101;
      v52 = v102;
      v53 = v103;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v102 + 32))(v101, v32, v103);
      Song.contentRating.getter(v55);
    }
    v39 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(v50, v47 & 1);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    return v39;
  }
  (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v36);
  v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v32, v25);
  Album.contentRating.getter(v38);
  v39 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v24, v112 & 1);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  return v39;
}

uint64_t FavoriteBadgeConfiguration.foregroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000C53BC(v1 + 8, a1);
}

uint64_t FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return sub_1000B47A8(a2, (uint64_t)(a3 + 1));
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = type metadata accessor for ContentRating(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055C6C8);
  __chkstk_darwin();
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055C638);
  __chkstk_darwin();
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v21 - v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))((char *)&v21 - v13, enum case for ContentRating.explicit(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  v15 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100011370(a1, (uint64_t)v10, &qword_10055C638);
  sub_100011370((uint64_t)v14, v15, &qword_10055C638);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v10, 1, v4) == 1)
  {
    sub_100011694(a1, &qword_10055C638);
    sub_100011694((uint64_t)v14, &qword_10055C638);
    if (v16(v15, 1, v4) == 1)
    {
      sub_100011694((uint64_t)v10, &qword_10055C638);
      return a2 & 1;
    }
    goto LABEL_6;
  }
  sub_100011370((uint64_t)v10, (uint64_t)v12, &qword_10055C638);
  if (v16(v15, 1, v4) == 1)
  {
    sub_100011694(a1, &qword_10055C638);
    sub_100011694((uint64_t)v14, &qword_10055C638);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_6:
    sub_100011694((uint64_t)v10, &qword_10055C6C8);
    return 2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  v17 = sub_10001254C(&qword_10055C6D0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
  v18 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v7, v4, v17);
  sub_100011694(a1, &qword_10055C638);
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v7, v4);
  sub_100011694((uint64_t)v14, &qword_10055C638);
  v19(v12, v4);
  sub_100011694((uint64_t)v10, &qword_10055C638);
  if ((v18 & 1) != 0)
    return a2 & 1;
  return 2;
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_10000B4C8(&qword_10055C630);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VideoContentRating(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a1, (uint64_t)v5, &qword_10055C630);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100011694(a1, &qword_10055C630);
    sub_100011694((uint64_t)v5, &qword_10055C630);
    return 2;
  }
  else
  {
    v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v12 = VideoContentRating.isExplicit.getter(v11);
    sub_100011694(a1, &qword_10055C630);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = 2;
    if (v12 != 2)
    {
      if ((v12 & 1) != 0)
        return a2 & 1;
      else
        return 2;
    }
  }
  return result;
}

uint64_t _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  sub_10000B4C8(&qword_10055C628);
  __chkstk_darwin();
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v11 - v4;
  sub_100011370(a1, (uint64_t)&v11 - v4, &qword_10055C628);
  v6 = type metadata accessor for MusicFavoriteStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1
    || (sub_100011370((uint64_t)v5, (uint64_t)v3, &qword_10055C628),
        v8 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v3, v6),
        v8 == enum case for MusicFavoriteStatus.neutral(_:)))
  {
LABEL_7:
    v9 = 2;
    goto LABEL_8;
  }
  if (v8 != enum case for MusicFavoriteStatus.favorited(_:))
  {
    if (v8 != enum case for MusicFavoriteStatus.disliked(_:))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    goto LABEL_7;
  }
  v9 = 3;
LABEL_8:
  sub_100011694(a1, &qword_10055C628);
  sub_100011694((uint64_t)v5, &qword_10055C628);
  return v9;
}

id *sub_100372E28(id *a1)
{
  _QWORD *v2;

  v2 = a1 + 1;

  sub_100011758(v2);
  return a1;
}

unint64_t sub_100372E5C()
{
  unint64_t result;

  result = qword_10055C600;
  if (!qword_10055C600)
  {
    result = swift_getWitnessTable(aE_6, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C600);
  }
  return result;
}

unint64_t sub_100372EA0()
{
  unint64_t result;

  result = qword_10055C608;
  if (!qword_10055C608)
  {
    result = swift_getWitnessTable(byte_10043FCC4, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C608);
  }
  return result;
}

unint64_t sub_100372EE4()
{
  unint64_t result;

  result = qword_10055C610;
  if (!qword_10055C610)
  {
    result = swift_getWitnessTable(byte_10043FC74, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C610);
  }
  return result;
}

unint64_t sub_100372F28()
{
  unint64_t result;

  result = qword_10055C618;
  if (!qword_10055C618)
  {
    result = swift_getWitnessTable(aU_11, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C618);
  }
  return result;
}

unint64_t sub_100372F6C()
{
  unint64_t result;

  result = qword_10055C620;
  if (!qword_10055C620)
  {
    result = swift_getWitnessTable(byte_10043FBD4, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C620);
  }
  return result;
}

uint64_t sub_100372FB0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7974706D65, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x746963696C707865 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657469726F766166, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x76697372656D6D69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x76697372656D6D69, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

char *sub_10037316C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[10];
  _QWORD *v32;
  uint64_t v33;

  v2 = sub_10000B4C8(&qword_10055C6A0);
  v3 = *(_QWORD *)(v2 - 8);
  v31[5] = v2;
  v31[6] = v3;
  __chkstk_darwin();
  v31[9] = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10055C6A8);
  v6 = *(_QWORD *)(v5 - 8);
  v31[3] = v5;
  v31[4] = v6;
  __chkstk_darwin();
  v31[8] = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10055C6B0);
  v9 = *(_QWORD *)(v8 - 8);
  v31[1] = v8;
  v31[2] = v9;
  __chkstk_darwin();
  v31[7] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10055C6B8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = sub_10000B4C8(&qword_10055C6C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  v32 = a1;
  sub_10000D900(a1, v18);
  v19 = sub_100372E5C();
  v20 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v19, v18, v17);
  if (!v20)
  {
    v31[0] = v12;
    v33 = v11;
    v21 = v14;
    v22 = KeyedDecodingContainer.allKeys.getter(v13);
    v23 = v13;
    v24 = v16;
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v16 = (char *)type metadata accessor for DecodingError(0);
    swift_allocError(v16, &protocol witness table for DecodingError, 0, 0);
    v25 = v23;
    v27 = v26;
    sub_10000B4C8(&qword_10055BF48);
    *v27 = &type metadata for TextBadge;
    v28 = KeyedDecodingContainer.codingPath.getter(v25);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x8000000100453170, 0);
    v29 = (*(uint64_t (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v16 - 1) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow(v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
  }
  sub_100011758(v32);
  return v16;
}

uint64_t getEnumTagSinglePayload for TextBadge(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1003736A8 + 4 * byte_10043F848[v4]))();
}

uint64_t storeEnumTagSinglePayload for TextBadge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100373754 + 4 * byte_10043F852[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100373788 + 4 * byte_10043F84D[v5]))();
}

uint64_t sub_100373788(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100373790(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100373798);
  return result;
}

uint64_t sub_1003737A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003737ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1003737B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003737B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge()
{
  return &type metadata for TextBadge;
}

uint64_t destroy for FavoriteBadgeConfiguration(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return sub_100011758(v1);
}

uint64_t initializeWithCopy for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for FavoriteBadgeConfiguration(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  sub_1000C1A04(v6, v4);
  return a1;
}

uint64_t assignWithTake for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  sub_100011758((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FavoriteBadgeConfiguration()
{
  return &type metadata for FavoriteBadgeConfiguration;
}

uint64_t storeEnumTagSinglePayload for TextBadge.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100373964 + 4 * byte_10043F85C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100373998 + 4 * byte_10043F857[v4]))();
}

uint64_t sub_100373998(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003739A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003739A8);
  return result;
}

uint64_t sub_1003739B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003739BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003739C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003739C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.CodingKeys()
{
  return &type metadata for TextBadge.CodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.EmptyCodingKeys()
{
  return &type metadata for TextBadge.EmptyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TextBadge.ExplicitCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100373A34 + 4 * byte_10043F861[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100373A54 + 4 * byte_10043F866[v4]))();
}

_BYTE *sub_100373A34(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100373A54(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100373A5C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100373A64(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100373A6C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100373A74(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.ExplicitCodingKeys()
{
  return &type metadata for TextBadge.ExplicitCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.FavoriteCodingKeys()
{
  return &type metadata for TextBadge.FavoriteCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.ImmersiveCodingKeys()
{
  return &type metadata for TextBadge.ImmersiveCodingKeys;
}

unint64_t sub_100373AB4()
{
  unint64_t result;

  result = qword_10055C640;
  if (!qword_10055C640)
  {
    result = swift_getWitnessTable(byte_10043FAA4, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C640);
  }
  return result;
}

unint64_t sub_100373AFC()
{
  unint64_t result;

  result = qword_10055C648;
  if (!qword_10055C648)
  {
    result = swift_getWitnessTable(byte_10043FBAC, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C648);
  }
  return result;
}

unint64_t sub_100373B44()
{
  unint64_t result;

  result = qword_10055C650;
  if (!qword_10055C650)
  {
    result = swift_getWitnessTable(aU_12, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C650);
  }
  return result;
}

unint64_t sub_100373B8C()
{
  unint64_t result;

  result = qword_10055C658;
  if (!qword_10055C658)
  {
    result = swift_getWitnessTable(asc_10043FAF4, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C658);
  }
  return result;
}

unint64_t sub_100373BD4()
{
  unint64_t result;

  result = qword_10055C660;
  if (!qword_10055C660)
  {
    result = swift_getWitnessTable(asc_10043FA14, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C660);
  }
  return result;
}

unint64_t sub_100373C1C()
{
  unint64_t result;

  result = qword_10055C668;
  if (!qword_10055C668)
  {
    result = swift_getWitnessTable(byte_10043FA3C, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C668);
  }
  return result;
}

unint64_t sub_100373C64()
{
  unint64_t result;

  result = qword_10055C670;
  if (!qword_10055C670)
  {
    result = swift_getWitnessTable(asc_10043F9C4, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C670);
  }
  return result;
}

unint64_t sub_100373CAC()
{
  unint64_t result;

  result = qword_10055C678;
  if (!qword_10055C678)
  {
    result = swift_getWitnessTable(aE_7, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C678);
  }
  return result;
}

unint64_t sub_100373CF4()
{
  unint64_t result;

  result = qword_10055C680;
  if (!qword_10055C680)
  {
    result = swift_getWitnessTable(byte_10043F974, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C680);
  }
  return result;
}

unint64_t sub_100373D3C()
{
  unint64_t result;

  result = qword_10055C688;
  if (!qword_10055C688)
  {
    result = swift_getWitnessTable(byte_10043F99C, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C688);
  }
  return result;
}

unint64_t sub_100373D84()
{
  unint64_t result;

  result = qword_10055C690;
  if (!qword_10055C690)
  {
    result = swift_getWitnessTable(byte_10043FB1C, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C690);
  }
  return result;
}

unint64_t sub_100373DCC()
{
  unint64_t result;

  result = qword_10055C698;
  if (!qword_10055C698)
  {
    result = swift_getWitnessTable(byte_10043FB44, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10055C698);
  }
  return result;
}

void sub_100373E10()
{
  qword_10055C6D8 = 0x403E000000000000;
}

void sub_100373E20()
{
  qword_10055C6E0 = 0x4018000000000000;
}

void sub_100373E30()
{
  qword_10055C6E8 = 0x402A000000000000;
}

void sub_100373E40()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_10055C6F0 = v1 == (id)6;
}

uint64_t sub_100373EA0()
{
  double v0;
  double v1;
  uint64_t result;

  if (qword_100557F88 != -1)
    result = swift_once(&qword_100557F88, sub_100373E40);
  v0 = 20.0;
  if (byte_10055C6F0)
    v1 = 20.0;
  else
    v1 = 0.0;
  *(_QWORD *)&xmmword_10055C6F8 = 0x4034000000000000;
  *((double *)&xmmword_10055C6F8 + 1) = v1;
  if (byte_10055C6F0)
    v0 = 0.0;
  qword_10055C708 = 0;
  qword_10055C710 = *(_QWORD *)&v0;
  return result;
}

void sub_100373F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_100557F88 != -1)
    a1 = swift_once(&qword_100557F88, sub_100373E40);
  if (byte_10055C6F0 == 1)
  {
    v1 = static Font.headline.getter(a1);
  }
  else
  {
    v2 = static Font.caption.getter(a1);
    v1 = Font.bold()(v2, v3);
    swift_release(v2);
  }
  qword_10055C718 = v1;
}

void sub_100373F8C()
{
  qword_10055C720 = 0x4018000000000000;
}

uint64_t sub_100373F9C()
{
  double v0;
  uint64_t result;

  if (qword_100557F88 != -1)
    result = swift_once(&qword_100557F88, sub_100373E40);
  v0 = 44.0;
  if (!byte_10055C6F0)
    v0 = 24.0;
  qword_10055C728 = *(_QWORD *)&v0;
  unk_10055C730 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100373FFC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_100557F88 != -1)
    a1 = swift_once(&qword_100557F88, sub_100373E40);
  if (byte_10055C6F0 == 1)
    result = static Alignment.topLeading.getter();
  else
    result = static Alignment.topTrailing.getter(a1);
  qword_10055C738 = result;
  unk_10055C740 = v2;
  return result;
}

uint64_t Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char v33;
  double v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  int v47;
  unsigned __int8 v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  uint64_t OpaqueTypeConformance2;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  double v72;
  char v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105[16];
  uint64_t v106;
  _QWORD v107[4];

  v103 = a2;
  v3 = type metadata accessor for ScrollBounceBehavior(0);
  v101 = *(_QWORD *)(v3 - 8);
  v102 = v3;
  __chkstk_darwin();
  v100 = (char *)v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ScrollIndicatorVisibility(0);
  v93 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin();
  v89 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (double *)((char *)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10000B4C8(&qword_10055C748);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10055C750);
  __chkstk_darwin();
  v14 = (char *)v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10000B4C8(&qword_10055C758);
  __chkstk_darwin();
  v16 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10000B4C8(&qword_10055C760);
  v88 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin();
  v87 = (char *)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_10000B4C8(&qword_10055C768);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin();
  v91 = (char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_10000B4C8(&qword_10055C770);
  __chkstk_darwin();
  v97 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10000B4C8(&qword_10055C778);
  __chkstk_darwin();
  v21 = (char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_10000B4C8(&qword_10055C780);
  v22 = __chkstk_darwin();
  v99 = (uint64_t)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = a1;
  v24 = static Axis.Set.vertical.getter(v22);
  v25 = sub_10000B4C8(&qword_10055C788);
  v26 = sub_100374948();
  v27 = ScrollView.init(_:showsIndicators:content:)(v24, 1, sub_100374940, v105, v25, v26);
  LOBYTE(v24) = static Edge.Set.all.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v14[*(int *)(v12 + 36)] = v24;
  v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29 = v84[1];
  v28(v11, v8);
  v30 = *(_QWORD *)v29;
  v31 = *(unsigned __int8 *)(v29 + 8);
  LODWORD(v12) = *(unsigned __int8 *)(v29 + 9);
  sub_1003749CC(*(_QWORD *)v29, v31, *(_BYTE *)(v29 + 9));
  v32 = COERCE_DOUBLE(sub_10035DC24(v30, v31 | ((_DWORD)v12 << 8)));
  LOBYTE(v11) = v33;
  sub_10037035C(v30, v31, v12);
  if ((v11 & 1) != 0 || v32 <= 0.0)
  {
    if (qword_100557F80 != -1)
      swift_once(&qword_100557F80, sub_100373E30);
    v34 = *(double *)&qword_10055C6E8;
  }
  else
  {
    if (qword_100557F78 != -1)
      swift_once(&qword_100557F78, sub_100373E20);
    v34 = v32 - *(double *)&qword_10055C6E0;
  }
  v35 = v87;
  v36 = (char *)v7 + *(int *)(v85 + 20);
  v37 = enum case for RoundedCornerStyle.continuous(_:);
  v38 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  *v7 = v34;
  v7[1] = v34;
  v39 = (uint64_t)&v16[*(int *)(v104 + 36)];
  sub_10000D964((uint64_t)v7, v39, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v39 + *(int *)(sub_10000B4C8((uint64_t *)&unk_10055E910) + 36)) = 256;
  sub_100011370((uint64_t)v14, (uint64_t)v16, &qword_10055C750);
  sub_10000E750((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v40 = sub_100011694((uint64_t)v14, &qword_10055C750);
  v41 = v89;
  v42 = static ScrollIndicatorVisibility.never.getter(v40);
  v43 = static Axis.Set.vertical.getter(v42);
  v44 = static Axis.Set.horizontal.getter();
  v45 = Axis.Set.init(rawValue:)(0);
  v46 = Axis.Set.init(rawValue:)(v45);
  if (Axis.Set.init(rawValue:)(v46 & v43) != v43)
    v45 = Axis.Set.init(rawValue:)(v45 | v43);
  v47 = Axis.Set.init(rawValue:)(v45);
  v48 = Axis.Set.init(rawValue:)(v47 & v44);
  v49 = v100;
  if (v48 != v44)
    v45 = Axis.Set.init(rawValue:)(v45 | v44);
  v50 = sub_1003749D8();
  View.scrollIndicators(_:axes:)(v41, v45, v104, v50);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v41, v95);
  v51 = sub_100011694((uint64_t)v16, &qword_10055C758);
  v52 = static ScrollBounceBehavior.basedOnSize.getter(v51);
  v53 = static Axis.Set.vertical.getter(v52);
  v54 = Axis.Set.init(rawValue:)(0);
  v55 = Axis.Set.init(rawValue:)(v54);
  if (Axis.Set.init(rawValue:)(v55 & v53) != v53)
    v54 = Axis.Set.init(rawValue:)(v54 | v53);
  v107[0] = v104;
  v107[1] = v50;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v107, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v57 = v91;
  v58 = v54;
  v59 = v92;
  View.scrollBounceBehavior(_:axes:)(v49, v58, v92, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v49, v102);
  v60 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v35, v59);
  v61 = static SafeAreaRegions.all.getter(v60);
  v62 = static Edge.Set.all.getter(v61);
  v63 = v94;
  v64 = v96;
  v65 = (uint64_t)v97;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v97, v57, v96);
  v66 = v65 + *(int *)(v86 + 36);
  *(_QWORD *)v66 = v61;
  *(_BYTE *)(v66 + 8) = v62;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v57, v64);
  if (qword_100557FB0 != -1)
    swift_once(&qword_100557FB0, sub_100373FFC);
  v67 = qword_10055C738;
  v68 = unk_10055C740;
  v69 = (uint64_t)&v21[*(int *)(v90 + 36)];
  sub_100374AF8(v29, v69);
  v70 = (uint64_t *)(v69 + *(int *)(sub_10000B4C8(&qword_10055C7D0) + 36));
  *v70 = v67;
  v70[1] = v68;
  v71 = sub_100011530(v65, (uint64_t)v21, &qword_10055C770);
  if (qword_100557F78 != -1)
    v71 = swift_once(&qword_100557F78, sub_100373E20);
  v72 = *(double *)&qword_10055C6E0;
  v73 = static Edge.Set.all.getter(v71);
  v74 = EdgeInsets.init(_all:)(v72);
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v81 = v99;
  sub_100011370((uint64_t)v21, v99, &qword_10055C778);
  v82 = v81 + *(int *)(v98 + 36);
  *(_BYTE *)v82 = v73;
  *(double *)(v82 + 8) = v74;
  *(_QWORD *)(v82 + 16) = v76;
  *(_QWORD *)(v82 + 24) = v78;
  *(_QWORD *)(v82 + 32) = v80;
  *(_BYTE *)(v82 + 40) = 0;
  sub_100011694((uint64_t)v21, &qword_10055C778);
  return sub_100011530(v81, v103, &qword_10055C780);
}

uint64_t sub_100374870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = a1;
  if (qword_100557F70 != -1)
    a1 = swift_once(&qword_100557F70, sub_100373E10);
  v4 = *(double *)&qword_10055C6D8;
  v5 = static Edge.Set.all.getter(a1);
  v6 = EdgeInsets.init(_all:)(v4);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = sub_10000B4C8(&qword_10055C7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v2, v13);
  result = sub_10000B4C8(&qword_10055C788);
  v15 = a2 + *(int *)(result + 36);
  *(_BYTE *)v15 = v5;
  *(double *)(v15 + 8) = v6;
  *(_QWORD *)(v15 + 16) = v8;
  *(_QWORD *)(v15 + 24) = v10;
  *(_QWORD *)(v15 + 32) = v12;
  *(_BYTE *)(v15 + 40) = 0;
  return result;
}

uint64_t sub_100374940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100374870(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100374948()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C790;
  if (!qword_10055C790)
  {
    v1 = sub_100011650(&qword_10055C788);
    v2[0] = sub_100012324(&qword_10055C798, &qword_10055C7A0, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C790);
  }
  return result;
}

uint64_t sub_1003749CC(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

unint64_t sub_1003749D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C7A8;
  if (!qword_10055C7A8)
  {
    v1 = sub_100011650(&qword_10055C758);
    v2[0] = sub_100374A5C();
    v2[1] = sub_100012324((unint64_t *)&unk_10055E960, (uint64_t *)&unk_10055E910, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C7A8);
  }
  return result;
}

unint64_t sub_100374A5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C7B0;
  if (!qword_10055C7B0)
  {
    v1 = sub_100011650(&qword_10055C750);
    v2[0] = sub_100012324(&qword_10055C7B8, &qword_10055C748, (const char *)&protocol conformance descriptor for ScrollView<A>);
    v2[1] = sub_100012324(&qword_10055C7C0, &qword_10055C7C8, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C7B0);
  }
  return result;
}

uint64_t sub_100374AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;

  v46 = a1;
  v54 = a2;
  v2 = type metadata accessor for PlainButtonStyle(0);
  v52 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v53 = v2;
  __chkstk_darwin();
  v51 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContentShapeKinds(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin();
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(type metadata accessor for Card.DisplayStyle(0) - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10055C928);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_10055C930);
  __chkstk_darwin();
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_10055C938);
  v49 = *(_QWORD *)(v17 - 8);
  v50 = v17;
  __chkstk_darwin();
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D964(v46, (uint64_t)v9, type metadata accessor for Card.DisplayStyle);
  v20 = *(unsigned __int8 *)(v7 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_100521138, v21 + v8, v20 | 7);
  sub_1003764F0((uint64_t)v9, v22 + v21);
  v23 = sub_10000B4C8(&qword_10055C940);
  v24 = sub_100376F7C();
  v25 = Button.init(action:label:)(sub_100376F50, v22, sub_100374F84, 0, v23, v24);
  static ContentShapeKinds.interaction.getter(v25);
  if (qword_100557FA8 != -1)
    swift_once(&qword_100557FA8, sub_100373F9C);
  v26 = (*(double *)&qword_10055C728 + -44.0) * 0.5;
  v27 = &v16[*(int *)(v14 + 36)];
  v28 = sub_10000B4C8(&qword_10055C9B8);
  v30 = v47;
  v29 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v27[*(int *)(v28 + 40)], v6, v48);
  *(double *)v27 = v26;
  v27[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v32 = v51;
  PlainButtonStyle.init()(v31);
  v33 = sub_1003771D0();
  v34 = sub_10001254C((unint64_t *)&qword_10055C9D8, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v35 = v53;
  View.buttonStyle<A>(_:)(v32, v14, v53, v33, v34);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v35);
  v36 = sub_100011694((uint64_t)v16, &qword_10055C930);
  if (qword_100557F90 != -1)
    v36 = swift_once(&qword_100557F90, sub_100373EA0);
  v53 = xmmword_10055C6F8;
  v37 = qword_10055C708;
  v38 = qword_10055C710;
  v39 = static Edge.Set.all.getter(v36);
  v41 = v49;
  v40 = v50;
  v42 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v54, v19, v50);
  v43 = v42 + *(int *)(sub_10000B4C8(&qword_10055C9E0) + 36);
  *(_BYTE *)v43 = v39;
  *(_OWORD *)(v43 + 8) = v53;
  *(_QWORD *)(v43 + 24) = v37;
  *(_QWORD *)(v43 + 32) = v38;
  *(_BYTE *)(v43 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v40);
}

uint64_t sub_100374EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Card.DisplayStyle(0);
  sub_10035DBF0((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100374F84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[24];
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  __int128 v78;

  v49 = a1;
  v50 = sub_10000B4C8(&qword_10055C9B0);
  __chkstk_darwin();
  v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Material(0);
  v52 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin();
  v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10000B4C8(&qword_10055C958);
  __chkstk_darwin();
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10000B4C8(&qword_10055C940);
  __chkstk_darwin();
  v45 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v48 = static Color.secondary.getter();
  KeyPath = swift_getKeyPath(&unk_10043FE60);
  if (qword_100557F98 != -1)
    swift_once(&qword_100557F98, sub_100373F10);
  v8 = qword_10055C718;
  v43 = swift_getKeyPath(&unk_10043FE90);
  v9 = qword_100557FA0;
  swift_retain(v8);
  if (v9 != -1)
    v10 = swift_once(&qword_100557FA0, sub_100373F8C);
  v11 = *(double *)&qword_10055C720;
  v12 = static Edge.Set.all.getter(v10);
  v14 = EdgeInsets.init(_all:)(v11);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  if (qword_100557FA8 != -1)
    v13 = swift_once(&qword_100557FA8, sub_100373F9C);
  v21 = qword_10055C728;
  v22 = unk_10055C730;
  v23 = static Alignment.center.getter(v13);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v66, v21, 0, 0, 1, 0, 1, v22, 0, 0, 1, 0, 1, v23, v24);
  *(_QWORD *)&v54 = v53;
  *((_QWORD *)&v54 + 1) = KeyPath;
  v25 = v48;
  v26 = v43;
  *(_QWORD *)&v55 = v48;
  *((_QWORD *)&v55 + 1) = v43;
  *(_QWORD *)&v56 = v8;
  BYTE8(v56) = v12;
  *(double *)&v57 = v14;
  *((_QWORD *)&v57 + 1) = v16;
  *(_QWORD *)&v58 = v18;
  *((_QWORD *)&v58 + 1) = v20;
  LOBYTE(v59) = 0;
  *((_QWORD *)&v59 + 1) = v66;
  LOBYTE(v60) = v67;
  *((_QWORD *)&v60 + 1) = v68;
  LOBYTE(v61) = v69;
  *((_QWORD *)&v61 + 1) = v70;
  LOBYTE(v62) = v71;
  *((_QWORD *)&v62 + 1) = v72;
  LOBYTE(v63) = v73;
  *((_QWORD *)&v63 + 1) = v74;
  LOBYTE(v64) = v75;
  *((_QWORD *)&v64 + 1) = v76;
  v65[0] = v77;
  *(_OWORD *)&v65[8] = v78;
  v27 = v51;
  v28 = static Material.thin.getter();
  v29 = static Edge.Set.all.getter(v28);
  v42 = KeyPath;
  v30 = v52;
  v31 = (uint64_t)v2;
  v32 = v2;
  v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v32, v27, v46);
  *(_BYTE *)(v31 + *(int *)(v50 + 36)) = v29;
  sub_100011370(v31, (uint64_t)&v5[*(int *)(v44 + 36)], &qword_10055C9B0);
  v34 = *(_OWORD *)v65;
  *((_OWORD *)v5 + 10) = v64;
  *((_OWORD *)v5 + 11) = v34;
  *((_QWORD *)v5 + 24) = *(_QWORD *)&v65[16];
  v35 = v61;
  *((_OWORD *)v5 + 6) = v60;
  *((_OWORD *)v5 + 7) = v35;
  v36 = v63;
  *((_OWORD *)v5 + 8) = v62;
  *((_OWORD *)v5 + 9) = v36;
  v37 = v57;
  *((_OWORD *)v5 + 2) = v56;
  *((_OWORD *)v5 + 3) = v37;
  v38 = v59;
  *((_OWORD *)v5 + 4) = v58;
  *((_OWORD *)v5 + 5) = v38;
  v39 = v55;
  *(_OWORD *)v5 = v54;
  *((_OWORD *)v5 + 1) = v39;
  sub_10037727C((uint64_t *)&v54);
  sub_100011694(v31, &qword_10055C9B0);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v33);
  swift_release(v8);
  swift_release(v26);
  swift_release(v25);
  swift_release(v42);
  swift_release(v53);
  v40 = v45;
  sub_100011370((uint64_t)v5, v45, &qword_10055C958);
  *(_WORD *)(v40 + *(int *)(v47 + 36)) = 256;
  sub_100011694((uint64_t)v5, &qword_10055C958);
  return sub_100011530(v40, v49, &qword_10055C940);
}

uint64_t Card.ViewController.__allocating_init(content:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  sub_100375E68(a1);
  v6 = v5;
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v2 + 10) - 8) + 8))(a1);
  return v6;
}

uint64_t Card.ViewController.init(content:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_isaMask & *v1;
  sub_100375E68(a1);
  v5 = v4;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_10037550C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    Card.ViewController.preferredContentSize(forWidth:)(0, 1);
    v7 = v6;

    return v7;
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
    v8 = UISheetPresentationControllerDetent.resolvedValue(in:)(a1);

  }
  return v8;
}

void sub_1003755CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0();
}

Swift::Void __swiftcall Card.ViewController.viewDidLoad()()
{
  _QWORD *v0;
  uint64_t ObjectType;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  ObjectType = swift_getObjectType();
  v3 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v0) + 0x50), *(_QWORD *)((swift_isaMask & *v0) + 0x58), v2);
  v8.receiver = v0;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "viewDidLoad");
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  objc_msgSend(v0, "setPreferredContentSize:");
  v4 = sub_10000B4C8(&qword_10055A310);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v6 = swift_allocObject(&unk_100520FC0, 24, 7);
  *(_QWORD *)(v6 + 16) = ObjectType;
  v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v5, sub_100376444, v6, ObjectType);
  swift_unknownObjectRelease(v7);
  swift_bridgeObjectRelease();
  swift_release(v6);
}

void sub_1003756F8(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLoad()();

}

id Card.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  objc_super v11;

  v7 = swift_isaMask & *v3;
  Card.ViewController.preferredContentSize(forWidth:)(*(uint64_t *)&a2, 0);
  objc_msgSend(v3, "setPreferredContentSize:");
  v9 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v8);
  v11.receiver = v3;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_1003757C4(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  Card.ViewController.viewWillTransition(to:with:)(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

Swift::Void __swiftcall Card.ViewController.viewDidLayoutSubviews()()
{
  uint64_t v0;
  _QWORD *v1;
  objc_class *v2;
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  uint64_t v13;
  double v14;
  double v15;
  CGFloat v16;
  double Height;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double MaxY;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  objc_super v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v2 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50), *(_QWORD *)((swift_isaMask & *v1) + 0x58), v0);
  v53.receiver = v1;
  v53.super_class = v2;
  objc_msgSendSuper2(&v53, "viewDidLayoutSubviews");
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v54.origin.x = v6;
  v54.origin.y = v8;
  v54.size.width = v10;
  v54.size.height = v12;
  *(double *)&v13 = CGRectGetWidth(v54);
  Card.ViewController.preferredContentSize(forWidth:)(v13, 0);
  v15 = v14;
  v55.size.height = v16;
  v55.origin.x = 0.0;
  v55.origin.y = 0.0;
  v55.size.width = v15;
  Height = CGRectGetHeight(v55);
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = v18;
  objc_msgSend(v18, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v56.origin.x = v21;
  v56.origin.y = v23;
  v56.size.width = v25;
  v56.size.height = v27;
  v28 = CGRectGetHeight(v56);
  if (v28 < Height)
    Height = v28;
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_11;
  v30 = v29;
  objc_msgSend(v29, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v57.origin.x = v32;
  v57.origin.y = v34;
  v57.size.width = v36;
  v57.size.height = v38;
  MaxY = CGRectGetMaxY(v57);
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.width = v15;
  v58.size.height = Height;
  v40 = CGRectGetHeight(v58);
  v41 = objc_msgSend(*(id *)((char *)v1 + qword_10055C870), "view");
  if (!v41)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v42 = v41;
  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    CGRect.centeringAlong(axes:in:)(1, 0.0, MaxY - v40, v15, Height);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v52 = v51;

    objc_msgSend(v42, "setFrame:", v46, v48, v50, v52);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100375A84(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLayoutSubviews()();

}

uint64_t sub_100375AB8()
{
  return 1;
}

void Card.ViewController.preferredContentSize(forWidth:)(uint64_t a1, char a2)
{
  char *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  CGRect v24;

  if ((a2 & 1) == 0)
  {
LABEL_8:
    v16 = objc_msgSend(v2, "presentingViewController");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "traitCollection");

      if (v18)
        goto LABEL_12;
    }
    v19 = objc_msgSend(v2, "presentationController");
    v20 = v19;
    if (v19)
    {
      v18 = objc_msgSend(v19, "traitCollection");

      if (v18)
      {
LABEL_12:
        v20 = v18;
        v21 = objc_msgSend(v20, "horizontalSizeClass");

        v22 = 414.0;
        if (*(double *)&a1 <= 414.0)
          v22 = *(double *)&a1;
        if (v21 == (id)2)
          *(double *)&a1 = v22;
        goto LABEL_16;
      }
      v20 = 0;
    }
LABEL_16:
    v23 = *(id *)&v2[qword_10055C870];
    dispatch thunk of UIHostingController.sizeThatFits(in:)(*(double *)&a1, INFINITY);

    return;
  }
  v4 = objc_msgSend(v2, "presentationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "containerView");

    if (v6)
    {
LABEL_7:
      objc_msgSend(v6, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v24.origin.x = v9;
      v24.origin.y = v11;
      v24.size.width = v13;
      v24.size.height = v15;
      *(double *)&a1 = CGRectGetWidth(v24);
      goto LABEL_8;
    }
  }
  v7 = objc_msgSend(v2, "view");
  if (v7)
  {
    v6 = v7;
    goto LABEL_7;
  }
  __break(1u);
}

void Card.ViewController.init(nibName:bundle:)()
{
  sub_10037647C();
}

void sub_100375CB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_10037647C();
}

id Card.ViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100375D3C(uint64_t a1)
{

}

uint64_t View.cardDisplayStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin();
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v12 - v7;
  *(_QWORD *)v6 = swift_getKeyPath(&unk_10043FD68);
  *((_WORD *)v6 + 4) = 0;
  v9 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_10043FD98);
  v10 = sub_10000B4C8(&qword_10055EBC0);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  sub_1003764F0((uint64_t)v6, (uint64_t)v8);
  View.modifier<A>(_:)(v8, a1, v4, a2);
  return sub_10000E750((uint64_t)v8, type metadata accessor for Card.DisplayStyle);
}

void sub_100375E68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t WitnessTable;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  objc_super v60;
  _QWORD v61[2];

  v56 = swift_isaMask & *v1;
  v3 = v56;
  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin();
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v54 - v7;
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ModifiedContent(0, v9, v4);
  v58 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v57 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)&v54 - v15;
  *(_QWORD *)((char *)v1 + qword_10055C868) = 0x4079E00000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  *(_QWORD *)v6 = swift_getKeyPath(&unk_10043FD68);
  *((_WORD *)v6 + 4) = 0;
  v17 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_10043FD98);
  v18 = sub_10000B4C8(&qword_10055EBC0);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_1003764F0((uint64_t)v6, (uint64_t)v8);
  v19 = v1;
  v20 = v9;
  ModifiedContent.init(content:modifier:)(v12, v8, v9, v4);
  v21 = *(_QWORD *)(v56 + 88);
  v22 = sub_10001254C(&qword_10055C918, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  v61[0] = v21;
  v61[1] = v22;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v13, v61);
  type metadata accessor for UIHostingController(0, v13, WitnessTable);
  v24 = v57;
  v25 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v55 = v16;
  v56 = v13;
  v25(v57, v16, v13);
  v26 = (void *)UIHostingController.__allocating_init(rootView:)(v24);
  v27 = qword_10055C870;
  *(_QWORD *)((char *)v19 + qword_10055C870) = v26;
  v28 = v26;
  UIHostingController.safeAreaRegions.setter(0);

  v29 = objc_msgSend(*(id *)((char *)v19 + v27), "view");
  if (!v29)
  {

    __break(1u);
LABEL_9:

    __break(1u);
    goto LABEL_10;
  }
  v30 = v29;
  v31 = (void *)objc_opt_self(UIColor);
  v32 = objc_msgSend(v31, "clearColor");
  objc_msgSend(v30, "setBackgroundColor:", v32);

  v33 = v20;
  v35 = (objc_class *)type metadata accessor for Card.ViewController(0, v20, v21, v34);
  v60.receiver = v19;
  v60.super_class = v35;
  v19 = objc_msgSendSuper2(&v60, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v19, "setModalPresentationStyle:", 2);
  v36 = objc_msgSend(v19, "sheetPresentationController");
  if (v36)
  {
    v37 = v36;
    v38 = sub_10000B4C8(&qword_100559390);
    v39 = swift_allocObject(v38, 40, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100424B90;
    sub_100376E08();
    v40 = swift_allocObject(&unk_1005210E8, 24, 7);
    swift_unknownObjectWeakInit(v40 + 16);
    v41 = (_QWORD *)swift_allocObject(&unk_100521110, 40, 7);
    v41[2] = v33;
    v41[3] = v21;
    v41[4] = v40;
    v42 = swift_retain(v40);
    v43 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(0, sub_100376E8C, v41, v42);
    swift_release(v40);
    swift_release(v41);
    *(_QWORD *)(v39 + 32) = v43;
    v59 = v39;
    specialized Array._endMutation()(v44);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v37, "setDetents:", isa);

    objc_msgSend(v37, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
  }
  v46 = objc_msgSend(v19, "view");
  if (!v46)
    goto LABEL_9;
  v47 = v46;
  v48 = objc_msgSend(v31, "clearColor");
  objc_msgSend(v47, "setBackgroundColor:", v48);

  v49 = qword_10055C870;
  objc_msgSend(v19, "addChildViewController:", *(_QWORD *)((char *)v19 + qword_10055C870));
  v50 = objc_msgSend(v19, "view");
  if (!v50)
  {
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  v51 = v50;
  v52 = objc_msgSend(*(id *)((char *)v19 + v49), "view");
  if (v52)
  {
    v53 = v52;
    objc_msgSend(v51, "addSubview:", v52);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v56);
    return;
  }
LABEL_11:

  __break(1u);
}

void _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0()
{
  char *v0;

  *(_QWORD *)&v0[qword_10055C868] = 0x4079E00000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010044BC20, "MusicCoreUI/Card.swift", 22, 2, 123, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.ViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Card.ViewController);
}

uint64_t sub_100376434()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100376448(void *a1)
{
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  return objc_msgSend(a1, "setPreferredContentSize:");
}

void sub_10037647C()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.DisplayStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_10055C830;
  if (!qword_10055C830)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Card.DisplayStyle);
  return result;
}

uint64_t sub_1003764F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100376534(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Card.DisplayStyle.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Card()
{
  return &type metadata for Card;
}

unint64_t initializeBufferWithCopyOfBuffer for Card.DisplayStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v18);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 9);
    v9 = *(_BYTE *)(a2 + 8);
    sub_1003749CC(*(_QWORD *)a2, v9, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 9) = v8;
    v10 = *(int *)(a3 + 20);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)(a2 + v10);
    v13 = sub_10000B4C8(&qword_10055EBC0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      v19 = *v12;
      *v11 = *v12;
      swift_retain(v19);
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

double destroy for Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_10037035C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_1003749CC(*(_QWORD *)a2, v8, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v12 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v11;
    *v10 = *v11;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t assignWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_1003749CC(*(_QWORD *)a2, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v6;
  v11 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  sub_10037035C(v9, v11, v10);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 20);
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)(a2 + v12);
    sub_100011694(a1 + v12, &qword_10055EBC0);
    v15 = sub_10000B4C8(&qword_10055EBC0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      v18 = *v14;
      *v13 = *v14;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t initializeWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v10 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v7;
  sub_10037035C(v8, v10, v9);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_100011694(a1 + v11, &qword_10055EBC0);
    v14 = sub_10000B4C8(&qword_10055EBC0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100376A50);
}

uint64_t sub_100376A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_10000B4C8(&qword_10055D390);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100376AD4);
}

uint64_t sub_100376AD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 9) = -(char)a2;
  }
  else
  {
    v7 = sub_10000B4C8(&qword_10055D390);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_100376B48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\n";
  sub_1003434B0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100376BBC(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_100376C0C()
{
  return sub_10002F800(&qword_10055C8F8, &qword_10055C780, (uint64_t (*)(void))sub_100376C40, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_100376C40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C900;
  if (!qword_10055C900)
  {
    v1 = sub_100011650(&qword_10055C778);
    v2[0] = sub_100376CC4();
    v2[1] = sub_100012324(&qword_10055C910, &qword_10055C7D0, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C900);
  }
  return result;
}

unint64_t sub_100376CC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  _QWORD v4[2];
  uint64_t v5;
  unint64_t v6;

  result = qword_10055C908;
  if (!qword_10055C908)
  {
    v1 = sub_100011650(&qword_10055C770);
    v2 = sub_100011650(&qword_10055C760);
    v5 = sub_100011650(&qword_10055C758);
    v6 = sub_1003749D8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    v5 = v2;
    v6 = OpaqueTypeConformance2;
    v4[0] = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
    v4[1] = &protocol witness table for _SafeAreaRegionsIgnoringLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_10055C908);
  }
  return result;
}

uint64_t sub_100376D88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for Card.DisplayStyle(255);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v6[0] = v2;
  v6[1] = sub_10001254C(&qword_10055C918, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v4, v6);
}

unint64_t sub_100376E08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055C920;
  if (!qword_10055C920)
  {
    v1 = objc_opt_self(UISheetPresentationControllerDetent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055C920);
  }
  return result;
}

uint64_t sub_100376E44()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100376E68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100376E8C(uint64_t a1)
{
  uint64_t v1;

  return sub_10037550C(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_100376E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Card.DisplayStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_10037035C(*(_QWORD *)(v0 + v4), *(unsigned __int8 *)(v0 + v4 + 8), *(_BYTE *)(v0 + v4 + 9));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_10000B4C8(&qword_10055EBC0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100376F50()
{
  type metadata accessor for Card.DisplayStyle(0);
  return sub_100374EEC();
}

unint64_t sub_100376F7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C948;
  if (!qword_10055C948)
  {
    v1 = sub_100011650(&qword_10055C940);
    v2[0] = sub_100377000();
    v2[1] = sub_100012324((unint64_t *)&unk_10055E290, &qword_10055EC90, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C948);
  }
  return result;
}

unint64_t sub_100377000()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C950;
  if (!qword_10055C950)
  {
    v1 = sub_100011650(&qword_10055C958);
    v2[0] = sub_10002F800(&qword_10055C960, &qword_10055C968, sub_1003770A4, (uint64_t)&protocol witness table for _FlexFrameLayout);
    v2[1] = sub_100012324(&qword_10055C9A8, &qword_10055C9B0, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C950);
  }
  return result;
}

uint64_t sub_1003770A4()
{
  return sub_10002F800(&qword_10055C970, &qword_10055C978, (uint64_t (*)(void))sub_1003770C8, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_1003770C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C980;
  if (!qword_10055C980)
  {
    v1 = sub_100011650(&qword_10055C988);
    v2[0] = sub_10037714C();
    v2[1] = sub_100012324((unint64_t *)&unk_10055DA40, &qword_10055AD18, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C980);
  }
  return result;
}

unint64_t sub_10037714C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C990;
  if (!qword_10055C990)
  {
    v1 = sub_100011650(&qword_10055C998);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_100012324(&qword_10055C9A0, (uint64_t *)&unk_10055D8D0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C990);
  }
  return result;
}

unint64_t sub_1003771D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055C9C0;
  if (!qword_10055C9C0)
  {
    v1 = sub_100011650(&qword_10055C930);
    v2[0] = sub_100012324(&qword_10055C9C8, &qword_10055C928, (const char *)&protocol conformance descriptor for Button<A>);
    v2[1] = sub_100012324(&qword_10055C9D0, &qword_10055C9B8, (const char *)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055C9C0);
  }
  return result;
}

uint64_t *sub_10037727C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  swift_retain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

double CarouselView.init(items:selectedIndex:selectedItem:animatesProgrammaticSelection:itemSize:horizontalSpacing:carouselToPageIndicatorSpacing:content:didSelect:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19)
{
  uint64_t v26;
  char *v27;
  int *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[24];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = a7;
  v53 = a8;
  v49 = a6;
  v47 = a4;
  v48 = a5;
  v46 = a3;
  v50 = a14;
  v51 = a15;
  v45 = a17;
  sub_10000B4C8(&qword_10055C9F0);
  __chkstk_darwin();
  v27 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[1] = 0;
  a9[2] = 0;
  a9[3] = 0;
  *(_QWORD *)v54 = a16;
  *(_OWORD *)&v54[8] = v45;
  v55 = a18;
  v56 = a19;
  v28 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v54);
  v29 = (char *)a9 + v28[16];
  v30 = type metadata accessor for Binding(0, a16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = v28[17];
  *((_BYTE *)a9 + v31) = 1;
  v32 = (_QWORD *)((char *)a9 + v28[22]);
  *v32 = 0;
  v32[1] = 0;
  v33 = v28[23];
  v57 = 0;
  State.init(wrappedValue:)(v54, &v57, &type metadata for Int);
  *(_OWORD *)((char *)a9 + v33) = *(_OWORD *)v54;
  v34 = (_QWORD *)((char *)a9 + v28[24]);
  v35 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, 1, 1, v35);
  property wrapper backing initializer of CarouselView.scrollViewProxy((uint64_t)v27, v34);
  v36 = (_QWORD *)((char *)a9 + v28[26]);
  *v36 = swift_getKeyPath(&unk_10043FF00);
  v37 = sub_10000B4C8((uint64_t *)&unk_100558290);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *a9 = a1;
  v38 = (double *)((char *)a9 + v28[18]);
  *v38 = a10;
  v38[1] = a11;
  sub_100370300(a9[1], a9[2]);
  v39 = v46;
  a9[1] = a2;
  a9[2] = v39;
  a9[3] = v47;
  v40 = type metadata accessor for Optional(0, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v29, v48, v40);
  *((_BYTE *)a9 + v31) = v49;
  *(double *)((char *)a9 + v28[20]) = a12;
  *(double *)((char *)a9 + v28[21]) = a13;
  v41 = (_QWORD *)((char *)a9 + v28[19]);
  v42 = v53;
  *v41 = v52;
  v41[1] = v42;
  sub_1000DB26C(*v32, v32[1]);
  v43 = v51;
  *v32 = v50;
  v32[1] = v43;
  result = *v38 + a12;
  *(double *)((char *)a9 + v28[25]) = result;
  return result;
}

uint64_t type metadata accessor for CarouselView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CarouselView);
}

uint64_t property wrapper backing initializer of CarouselView.currentIndex(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Int);
  return v3;
}

uint64_t property wrapper backing initializer of CarouselView.scrollViewProxy@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = sub_10000B4C8(&qword_10055C9F0);
  __chkstk_darwin();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a1, (uint64_t)v6, &qword_10055C9F0);
  State.init(wrappedValue:)(a2, v6, v4);
  return sub_100011694(a1, &qword_10055C9F0);
}

uint64_t CarouselView.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata2;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  void (*v70)(char *, uint64_t);
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  char v80[16];
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  _QWORD v89[2];
  uint64_t v90;
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[2];
  uint64_t OpaqueTypeConformance2;
  uint64_t v96;
  void *v97;
  unint64_t v98;
  void *v99;
  uint64_t v100;

  v79 = a2;
  v3 = (void *)a1[2];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v3, 0, 0);
  v4 = type metadata accessor for Array(255);
  v76 = a1[3];
  v5 = a1[6];
  v6 = a1;
  v73 = a1;
  v77 = v5;
  v96 = v76;
  v97 = &type metadata for Int;
  v98 = v5;
  v99 = &protocol witness table for Int;
  v7 = type metadata accessor for IDView(255, &v96);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v7);
  v96 = v7;
  v97 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v96, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v75 = v4;
  v74 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v4);
  v72 = v6[5];
  v96 = v4;
  v97 = v3;
  v10 = v3;
  v98 = OpaqueTypeMetadata2;
  v99 = (void *)v74;
  v100 = v72;
  v11 = type metadata accessor for ForEach(255, &v96);
  v96 = v7;
  v97 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v12 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v11, &OpaqueTypeConformance2);
  v13 = type metadata accessor for LazyHStack(255, v11, v12);
  v14 = sub_100011650(&qword_10055C9F8);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = sub_100011650(&qword_10055CA00);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _AppearanceActionModifier);
  v20 = sub_100011650(&qword_10055CA08);
  v94[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for LazyHStack<A>, v13);
  v94[1] = sub_100012324(&qword_10055CA10, &qword_10055C9F8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
  v93[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v15, v94);
  v93[1] = &protocol witness table for _PaddingLayout;
  v92[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v16, v93);
  v92[1] = sub_100012324(&qword_10055CA18, &qword_10055CA00, (const char *)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v91[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v18, v92);
  v91[1] = &protocol witness table for _AppearanceActionModifier;
  v21 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v19, v91);
  v22 = sub_10037D500();
  v96 = v19;
  v97 = (void *)v20;
  v98 = v21;
  v99 = (void *)v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v96, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v24 = type metadata accessor for Optional(255, v3);
  v96 = v19;
  v97 = (void *)v20;
  v98 = v21;
  v99 = (void *)v22;
  v25 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v26 = v72;
  v90 = *(_QWORD *)(v72 + 8);
  v27 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v24, &v90);
  v96 = v23;
  v97 = (void *)v24;
  v98 = v25;
  v99 = (void *)v27;
  v28 = swift_getOpaqueTypeMetadata2(255, &v96, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v96 = v23;
  v97 = (void *)v24;
  v98 = v25;
  v99 = (void *)v27;
  v29 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v30 = type metadata accessor for PagingScrollView(255, v28, v29);
  v31 = sub_100011650(&qword_10055CA28);
  v32 = type metadata accessor for ModifiedContent(255, v30, v31);
  v89[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for PagingScrollView<A>, v30);
  v89[1] = sub_100012324(&qword_10055CA30, &qword_10055CA28, (const char *)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v33 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v32, v89);
  v96 = v32;
  v97 = (void *)v33;
  v34 = swift_getOpaqueTypeMetadata2(255, &v96, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v96 = v32;
  v97 = (void *)v33;
  v35 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v96 = v34;
  v97 = (void *)v35;
  v36 = swift_getOpaqueTypeMetadata2(255, &v96, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v96 = v34;
  v97 = (void *)v35;
  v37 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v96 = v36;
  v97 = (void *)v37;
  v38 = swift_getOpaqueTypeMetadata2(255, &v96, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v96 = v36;
  v97 = (void *)v37;
  v39 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v40 = type metadata accessor for GeometryReader(255, v38, v39);
  v41 = type metadata accessor for ModifiedContent(255, v40, &type metadata for _FrameLayout);
  v88[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for GeometryReader<A>, v40);
  v88[1] = &protocol witness table for _FrameLayout;
  v42 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v41, v88);
  v43 = type metadata accessor for ScrollViewReader(255, v41, v42);
  v44 = type metadata accessor for ModifiedContent(255, v43, &type metadata for _FrameLayout);
  v45 = sub_100011650(&qword_10055CA38);
  v96 = v75;
  v97 = v10;
  v98 = v45;
  v99 = (void *)v74;
  v100 = v72;
  v46 = type metadata accessor for ForEach(255, &v96);
  v47 = sub_100011650(&qword_10055CA40);
  v48 = sub_100011650(&qword_10055CA48);
  v49 = type metadata accessor for AutomaticHoverEffect(255);
  v50 = sub_10037D55C();
  v51 = sub_10001254C(qword_10055CAC8, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v96 = v48;
  v97 = (void *)v49;
  v98 = v50;
  v99 = (void *)v51;
  v52 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v96 = v47;
  v97 = (void *)v52;
  v87 = swift_getOpaqueTypeConformance2(&v96, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v53 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v46, &v87);
  v54 = type metadata accessor for HStack(255, v46, v53);
  v55 = type metadata accessor for ModifiedContent(255, v54, &type metadata for _FrameLayout);
  v56 = type metadata accessor for Optional(255, v55);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v44, v56, 0, 0);
  v58 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v59 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v58);
  v60 = type metadata accessor for VStack(0, v58, v59);
  v61 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v63 = (char *)&v72 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __chkstk_darwin();
  v66 = (char *)&v72 - v65;
  v67 = *(_QWORD *)(v78 + *((int *)v73 + 21));
  v81 = v10;
  v82 = v76;
  v83 = v73[4];
  v84 = v26;
  v85 = v77;
  v86 = v78;
  v68 = static HorizontalAlignment.center.getter(v64);
  VStack.init(alignment:spacing:content:)(v68, v67, 0, sub_10037D914, v80, v58, v59);
  swift_getWitnessTable((const char *)&protocol conformance descriptor for VStack<A>, v60);
  v69 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v69(v66, v63, v60);
  v70 = *(void (**)(char *, uint64_t))(v61 + 8);
  v70(v63, v60);
  v69(v79, v66, v60);
  return ((uint64_t (*)(char *, uint64_t))v70)(v66, v60);
}

double sub_100377DD4@<D0>(_QWORD *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, _QWORD *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, _QWORD *, uint64_t);
  char *v118;
  void (*v119)(_QWORD *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  void *v127;
  double v128;
  __n128 v129;
  double result;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t WitnessTable;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  char *v153;
  _QWORD v154[2];
  uint64_t v155;
  _QWORD v156[4];
  _QWORD v157[2];
  _QWORD v158[2];
  _QWORD v159[2];
  uint64_t *v160;
  char *v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  __int128 v166;
  _QWORD v167[2];
  _QWORD v168[2];
  uint64_t v169;
  _QWORD v170[2];
  _QWORD v171[2];
  _QWORD v172[2];
  _QWORD v173[2];
  uint64_t v174;
  uint64_t v175;
  char *v176;
  unint64_t v177;
  char v178;
  uint64_t v179;
  char v180;
  __int128 v181;
  uint64_t v182;
  char *v183;
  unint64_t v184;
  void *v185;
  uint64_t v186;
  char v187;
  __int128 v188;
  uint64_t v189;

  v148 = a4;
  v149 = a6;
  v150 = a1;
  v147 = a7;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v139 = type metadata accessor for Array(255);
  v10 = sub_100011650(&qword_10055CA38);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v139);
  v182 = v139;
  v183 = a2;
  v11 = a2;
  v184 = v10;
  v185 = (void *)WitnessTable;
  v186 = (uint64_t)a5;
  v152 = a5;
  v12 = type metadata accessor for ForEach(255, &v182);
  v13 = sub_100011650(&qword_10055CA40);
  v14 = sub_100011650(&qword_10055CA48);
  v15 = type metadata accessor for AutomaticHoverEffect(255);
  v16 = sub_10037D55C();
  v17 = sub_10001254C(qword_10055CAC8, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v182 = v14;
  v183 = (char *)v15;
  v184 = v16;
  v185 = (void *)v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v182 = v13;
  v183 = (char *)OpaqueTypeConformance2;
  v189 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v136 = v12;
  v131 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v12, &v189);
  v135 = *(_QWORD *)(type metadata accessor for HStack(0, v12, v131) - 8);
  __chkstk_darwin();
  v132 = (char *)&v131 - v19;
  v145 = v20;
  v141 = *(_QWORD *)(type metadata accessor for ModifiedContent(0, v20, &type metadata for _FrameLayout) - 8);
  __chkstk_darwin();
  v133 = (uint64_t *)((char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v134 = (char *)&v131 - v22;
  v151 = v23;
  v146 = type metadata accessor for Optional(0, v23);
  v142 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin();
  v144 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v143 = (char *)&v131 - v25;
  v26 = v11;
  v153 = v11;
  v182 = (uint64_t)v11;
  v183 = a3;
  v27 = (uint64_t)a3;
  v28 = v148;
  v29 = v149;
  v184 = v148;
  v185 = a5;
  v186 = v149;
  v30 = type metadata accessor for CarouselView(0, (uint64_t)&v182);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  __chkstk_darwin();
  v34 = (char *)&v131 - v33;
  v35 = *(void (**)(_QWORD, _QWORD, _QWORD))(v31 + 16);
  v140 = v30;
  v35(v34, v150, v30);
  v36 = *(unsigned __int8 *)(v31 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = (_QWORD *)swift_allocObject(&unk_1005212C8, v37 + v32, v36 | 7);
  v38[2] = v26;
  v38[3] = v27;
  v39 = v152;
  v38[4] = v28;
  v38[5] = v39;
  v40 = v29;
  v38[6] = v29;
  v41 = v38;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v38 + v37, v34, v30);
  v137 = v27;
  v182 = v27;
  v183 = (char *)&type metadata for Int;
  v184 = v40;
  v185 = &protocol witness table for Int;
  v42 = type metadata accessor for IDView(255, &v182);
  v43 = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v42);
  v182 = v42;
  v183 = (char *)v43;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v182, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v182 = v139;
  v183 = v153;
  v184 = OpaqueTypeMetadata2;
  v185 = (void *)WitnessTable;
  v186 = (uint64_t)v39;
  v45 = type metadata accessor for ForEach(255, &v182);
  v182 = v42;
  v183 = (char *)v43;
  v174 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v46 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v45, &v174);
  v47 = type metadata accessor for LazyHStack(255, v45, v46);
  v48 = sub_100011650(&qword_10055C9F8);
  v49 = type metadata accessor for ModifiedContent(255, v47, v48);
  v50 = type metadata accessor for ModifiedContent(255, v49, &type metadata for _PaddingLayout);
  v51 = sub_100011650(&qword_10055CA00);
  v52 = type metadata accessor for ModifiedContent(255, v50, v51);
  v53 = type metadata accessor for ModifiedContent(255, v52, &type metadata for _AppearanceActionModifier);
  v54 = sub_100011650(&qword_10055CA08);
  v55 = swift_getWitnessTable((const char *)&protocol conformance descriptor for LazyHStack<A>, v47);
  v56 = sub_100012324(&qword_10055CA10, &qword_10055C9F8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
  v173[0] = v55;
  v173[1] = v56;
  v172[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v49, v173);
  v172[1] = &protocol witness table for _PaddingLayout;
  v57 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v50, v172);
  v58 = sub_100012324(&qword_10055CA18, &qword_10055CA00, (const char *)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v171[0] = v57;
  v171[1] = v58;
  v170[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v52, v171);
  v170[1] = &protocol witness table for _AppearanceActionModifier;
  v59 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v53, v170);
  v60 = sub_10037D500();
  v182 = v53;
  v183 = (char *)v54;
  v184 = v59;
  v185 = (void *)v60;
  v61 = swift_getOpaqueTypeMetadata2(255, &v182, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v62 = type metadata accessor for Optional(255, v153);
  v182 = v53;
  v183 = (char *)v54;
  v184 = v59;
  v185 = (void *)v60;
  v63 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v169 = v152[1];
  v64 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v62, &v169);
  v182 = v61;
  v183 = (char *)v62;
  v184 = v63;
  v185 = (void *)v64;
  v65 = swift_getOpaqueTypeMetadata2(255, &v182, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v182 = v61;
  v183 = (char *)v62;
  v184 = v63;
  v185 = (void *)v64;
  v66 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v67 = type metadata accessor for PagingScrollView(255, v65, v66);
  v68 = sub_100011650(&qword_10055CA28);
  v69 = type metadata accessor for ModifiedContent(255, v67, v68);
  v70 = swift_getWitnessTable((const char *)&protocol conformance descriptor for PagingScrollView<A>, v67);
  v71 = sub_100012324(&qword_10055CA30, &qword_10055CA28, (const char *)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v168[0] = v70;
  v168[1] = v71;
  v72 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v69, v168);
  v182 = v69;
  v183 = (char *)v72;
  v73 = swift_getOpaqueTypeMetadata2(255, &v182, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v182 = v69;
  v183 = (char *)v72;
  v74 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v182 = v73;
  v183 = (char *)v74;
  v75 = swift_getOpaqueTypeMetadata2(255, &v182, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v182 = v73;
  v183 = (char *)v74;
  v76 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v182 = v75;
  v183 = (char *)v76;
  v77 = swift_getOpaqueTypeMetadata2(255, &v182, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v182 = v75;
  v183 = (char *)v76;
  v78 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v79 = type metadata accessor for GeometryReader(255, v77, v78);
  v80 = type metadata accessor for ModifiedContent(0, v79, &type metadata for _FrameLayout);
  v167[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for GeometryReader<A>, v79);
  v167[1] = &protocol witness table for _FrameLayout;
  v81 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v80, v167);
  v82 = ScrollViewReader.init(content:)(sub_1003807F8, v41, v80, v81);
  v84 = v83;
  v182 = v82;
  v183 = v83;
  v85 = v150;
  v86 = *(_QWORD *)((char *)v150 + *(int *)(v140 + 72) + 8);
  v87 = static Alignment.center.getter(v82);
  v89 = v88;
  v90 = type metadata accessor for ScrollViewReader(0, v80, v81);
  v91 = swift_getWitnessTable((const char *)&protocol conformance descriptor for ScrollViewReader<A>, v90);
  v92 = v86;
  v93 = v85;
  v94 = v89;
  v95 = (uint64_t)v153;
  View.frame(width:height:alignment:)(&v175, 0, 1, v92, 0, v87, v94, v90, v91);
  swift_release(v84);
  v96 = v176;
  v160 = (uint64_t *)v175;
  v161 = v176;
  v162 = v177;
  v163 = v178;
  v164 = v179;
  v165 = v180;
  v166 = v181;
  v97 = type metadata accessor for ModifiedContent(0, v90, &type metadata for _FrameLayout);
  v159[0] = v91;
  v159[1] = &protocol witness table for _FrameLayout;
  v140 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v97, v159);
  (*(void (**)(uint64_t *, uint64_t **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(&v182, &v160, v97);
  swift_release(v96);
  if (Array.count.getter(*v93, v95) < 2)
  {
    v120 = v144;
    v121 = v151;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v141 + 56))(v144, 1, 1, v151);
    v112 = v145;
    v158[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for HStack<A>, v145, v131);
    v158[1] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v121, v158);
  }
  else
  {
    v98 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v99 = objc_msgSend(v98, "userInterfaceIdiom");

    if (v99 == (id)6)
      v100 = 0x4024000000000000;
    else
      v100 = 0x4020000000000000;
    v101 = __chkstk_darwin();
    v102 = v137;
    *(&v131 - 6) = v95;
    *(&v131 - 5) = v102;
    v103 = (uint64_t)v152;
    *(&v131 - 4) = v148;
    *(&v131 - 3) = v103;
    *(&v131 - 2) = v149;
    *(&v131 - 1) = (uint64_t)v93;
    v104 = static VerticalAlignment.center.getter(v101);
    v105 = v132;
    HStack.init(alignment:spacing:content:)(v104, v100, 0, sub_10038088C, &v131 - 8, v136, v131);
    sub_100380898();
    v107 = v106;
    v109 = static Alignment.center.getter(v108);
    v111 = v110;
    v112 = v145;
    v113 = swift_getWitnessTable((const char *)&protocol conformance descriptor for HStack<A>, v145);
    v114 = v133;
    View.frame(width:height:alignment:)(v133, 0, 1, v107, 0, v109, v111, v112, v113);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v105, v112);
    v154[0] = v113;
    v154[1] = &protocol witness table for _FrameLayout;
    v115 = v151;
    swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v151, v154);
    v116 = v141;
    v117 = *(void (**)(_QWORD, _QWORD, _QWORD))(v141 + 16);
    v118 = v134;
    v117(v134, v114, v115);
    v119 = *(void (**)(_QWORD, _QWORD))(v116 + 8);
    v119(v114, v115);
    v120 = v144;
    v117(v144, v118, v115);
    v119(v118, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v120, 0, 1, v115);
  }
  v122 = v142;
  v123 = v143;
  v124 = *(void (**)(_QWORD, _QWORD, _QWORD))(v142 + 16);
  v125 = v146;
  v124(v143, v120, v146);
  v126 = *(void (**)(_QWORD, _QWORD))(v122 + 8);
  v126(v120, v125);
  v127 = v183;
  v175 = v182;
  v176 = v183;
  v177 = v184;
  v178 = (char)v185;
  v179 = v186;
  v180 = v187;
  v181 = v188;
  v160 = &v175;
  v124(v120, v123, v125);
  v161 = v120;
  *(_QWORD *)&v128 = swift_retain(v127).n128_u64[0];
  v157[0] = v97;
  v157[1] = v125;
  v156[2] = v140;
  v156[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for HStack<A>, v112, v128);
  v156[1] = &protocol witness table for _FrameLayout;
  v155 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v151, v156);
  v156[3] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v125, &v155);
  sub_1000D9574((uint64_t *)&v160, 2uLL, (uint64_t)v157);
  v126(v123, v125);
  v129 = swift_release(v183);
  ((void (*)(char *, uint64_t, __n128))v126)(v120, v125, v129);
  *(_QWORD *)&result = swift_release(v176).n128_u64[0];
  return result;
}

double sub_1003789D8@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, _QWORD *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void (*v85)(uint64_t *, uint64_t *, uint64_t);
  void *v86;
  double result;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  void *v97;
  _QWORD *v98;
  _QWORD v99[2];
  _QWORD v100[3];
  char v101;
  _QWORD *v102;
  char v103;
  __int128 v104;
  _QWORD v105[2];
  uint64_t v106;
  _QWORD v107[2];
  _QWORD v108[2];
  _QWORD v109[2];
  _QWORD v110[2];
  uint64_t OpaqueTypeConformance2;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  char v115;
  _QWORD *v116;
  char v117;
  __int128 v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void *v122;
  _QWORD *v123;
  char v124;
  __int128 v125;

  v90 = (uint64_t)a7;
  v91 = a5;
  v97 = (void *)a3;
  v98 = a6;
  v95 = a8;
  v96 = (uint64_t)a4;
  v94 = a2;
  v92 = a1;
  v14 = type metadata accessor for ScrollViewProxy(0);
  v15 = *(_QWORD *)(v14 - 8);
  v89 = v14;
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin();
  v88 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = a3;
  v120 = a4;
  v121 = a5;
  v122 = a6;
  v123 = a7;
  v17 = type metadata accessor for CarouselView(0, (uint64_t)&v119);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin();
  v21 = (char *)&v88 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v93 = v17;
  v22(v21, a2, v17);
  v23 = v88;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v88, v92, v14);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 56) & ~v24;
  v26 = *(unsigned __int8 *)(v15 + 80);
  v27 = (v19 + v26 + v25) & ~v26;
  v28 = (char *)swift_allocObject(&unk_100521368, v27 + v16, v24 | v26 | 7);
  v29 = v96;
  v30 = v97;
  *((_QWORD *)v28 + 2) = v97;
  *((_QWORD *)v28 + 3) = v29;
  v31 = v90;
  v32 = v98;
  *((_QWORD *)v28 + 4) = v91;
  *((_QWORD *)v28 + 5) = v32;
  *((_QWORD *)v28 + 6) = v31;
  v33 = &v28[v25];
  v34 = v28;
  v92 = v28;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v33, v21, v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v34[v27], v23, v89);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v30, 0, 0);
  v35 = type metadata accessor for Array(255);
  v119 = v96;
  v120 = &type metadata for Int;
  v121 = v31;
  v122 = &protocol witness table for Int;
  v36 = type metadata accessor for IDView(255, &v119);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v36);
  v119 = v36;
  v120 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v119, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v39 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v35);
  v119 = v35;
  v120 = v30;
  v121 = OpaqueTypeMetadata2;
  v122 = (void *)v39;
  v123 = v98;
  v40 = type metadata accessor for ForEach(255, &v119);
  v119 = v36;
  v120 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v119, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v41 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v40, &OpaqueTypeConformance2);
  v42 = type metadata accessor for LazyHStack(255, v40, v41);
  v43 = sub_100011650(&qword_10055C9F8);
  v44 = type metadata accessor for ModifiedContent(255, v42, v43);
  v45 = type metadata accessor for ModifiedContent(255, v44, &type metadata for _PaddingLayout);
  v46 = sub_100011650(&qword_10055CA00);
  v47 = type metadata accessor for ModifiedContent(255, v45, v46);
  v48 = type metadata accessor for ModifiedContent(255, v47, &type metadata for _AppearanceActionModifier);
  v49 = sub_100011650(&qword_10055CA08);
  v50 = swift_getWitnessTable((const char *)&protocol conformance descriptor for LazyHStack<A>, v42);
  v51 = sub_100012324(&qword_10055CA10, &qword_10055C9F8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
  v110[0] = v50;
  v110[1] = v51;
  v109[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v44, v110);
  v109[1] = &protocol witness table for _PaddingLayout;
  v52 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v45, v109);
  v53 = sub_100012324(&qword_10055CA18, &qword_10055CA00, (const char *)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v108[0] = v52;
  v108[1] = v53;
  v107[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v47, v108);
  v107[1] = &protocol witness table for _AppearanceActionModifier;
  v54 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v48, v107);
  v55 = sub_10037D500();
  v119 = v48;
  v120 = (void *)v49;
  v121 = v54;
  v122 = (void *)v55;
  v56 = swift_getOpaqueTypeMetadata2(255, &v119, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v57 = type metadata accessor for Optional(255, v97);
  v119 = v48;
  v120 = (void *)v49;
  v121 = v54;
  v122 = (void *)v55;
  v58 = swift_getOpaqueTypeConformance2(&v119, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v106 = v98[1];
  v59 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v57, &v106);
  v119 = v56;
  v120 = (void *)v57;
  v121 = v58;
  v122 = (void *)v59;
  v60 = swift_getOpaqueTypeMetadata2(255, &v119, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v119 = v56;
  v120 = (void *)v57;
  v121 = v58;
  v122 = (void *)v59;
  v61 = swift_getOpaqueTypeConformance2(&v119, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v62 = type metadata accessor for PagingScrollView(255, v60, v61);
  v63 = sub_100011650(&qword_10055CA28);
  v64 = type metadata accessor for ModifiedContent(255, v62, v63);
  v65 = swift_getWitnessTable((const char *)&protocol conformance descriptor for PagingScrollView<A>, v62);
  v66 = sub_100012324(&qword_10055CA30, &qword_10055CA28, (const char *)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v105[0] = v65;
  v105[1] = v66;
  v67 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v64, v105);
  v119 = v64;
  v120 = (void *)v67;
  v68 = swift_getOpaqueTypeMetadata2(255, &v119, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v119 = v64;
  v120 = (void *)v67;
  v69 = swift_getOpaqueTypeConformance2(&v119, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v119 = v68;
  v120 = (void *)v69;
  v70 = swift_getOpaqueTypeMetadata2(255, &v119, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v119 = v68;
  v120 = (void *)v69;
  v71 = swift_getOpaqueTypeConformance2(&v119, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v119 = v70;
  v120 = (void *)v71;
  v72 = swift_getOpaqueTypeMetadata2(0, &v119, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v119 = v70;
  v120 = (void *)v71;
  v73 = swift_getOpaqueTypeConformance2(&v119, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v74 = GeometryReader.init(content:)(sub_1003809E4, v92, v72, v73);
  v76 = v75;
  v119 = v74;
  v120 = v75;
  v77 = *(_QWORD *)(v94 + *(int *)(v93 + 72) + 8);
  v78 = static Alignment.center.getter(v74);
  v80 = v79;
  v81 = type metadata accessor for GeometryReader(0, v72, v73);
  v82 = swift_getWitnessTable((const char *)&protocol conformance descriptor for GeometryReader<A>, v81);
  View.frame(width:height:alignment:)(&v112, 0, 1, v77, 0, v78, v80, v81, v82);
  swift_release(v76);
  v83 = v113;
  v100[0] = v112;
  v100[1] = v113;
  v100[2] = v114;
  v101 = v115;
  v102 = v116;
  v103 = v117;
  v104 = v118;
  v84 = type metadata accessor for ModifiedContent(0, v81, &type metadata for _FrameLayout);
  v99[0] = v82;
  v99[1] = &protocol witness table for _FrameLayout;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v84, v99);
  v85 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
  v85(&v119, v100, v84);
  swift_release(v83);
  v86 = v120;
  v112 = v119;
  v113 = v120;
  v114 = v121;
  v115 = (char)v122;
  v116 = v123;
  v117 = v124;
  v118 = v125;
  v85(v95, &v112, v84);
  *(_QWORD *)&result = swift_release(v86).n128_u64[0];
  return result;
}

uint64_t sub_100379108@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  double v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  int v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _BOOL8 v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  _QWORD *v124;
  uint64_t v125;
  char v126[8];
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  _QWORD *v132;
  double v133;
  uint64_t v134;
  _QWORD v135[2];
  uint64_t v136;
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  _QWORD v140[2];
  uint64_t OpaqueTypeConformance2;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  void *v145;
  _QWORD *v146;

  v115 = a8;
  v118 = a6;
  v116 = (void *)a5;
  v119 = a3;
  v124 = a2;
  v114 = a1;
  v122 = a9;
  v121 = type metadata accessor for ScrollIndicatorVisibility(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v123 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrollPagingBehavior(0);
  __chkstk_darwin();
  v117 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a4, 0, 0);
  v15 = type metadata accessor for Array(255);
  v142 = a5;
  v143 = &type metadata for Int;
  v144 = a8;
  v145 = &protocol witness table for Int;
  v16 = type metadata accessor for IDView(255, &v142);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v16);
  v142 = v16;
  v143 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v142, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v19 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v15);
  v142 = v15;
  v143 = a4;
  v125 = (uint64_t)a4;
  v144 = OpaqueTypeMetadata2;
  v145 = (void *)v19;
  v146 = a7;
  v20 = a7;
  v21 = type metadata accessor for ForEach(255, &v142);
  v142 = v16;
  v143 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v142, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v22 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v21, &OpaqueTypeConformance2);
  v23 = type metadata accessor for LazyHStack(255, v21, v22);
  v24 = sub_100011650(&qword_10055C9F8);
  v25 = type metadata accessor for ModifiedContent(255, v23, v24);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _PaddingLayout);
  v27 = sub_100011650(&qword_10055CA00);
  v28 = type metadata accessor for ModifiedContent(255, v26, v27);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _AppearanceActionModifier);
  v30 = sub_100011650(&qword_10055CA08);
  v31 = swift_getWitnessTable((const char *)&protocol conformance descriptor for LazyHStack<A>, v23);
  v32 = sub_100012324(&qword_10055CA10, &qword_10055C9F8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
  v140[0] = v31;
  v140[1] = v32;
  v139[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v25, v140);
  v139[1] = &protocol witness table for _PaddingLayout;
  v33 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v26, v139);
  v34 = sub_100012324(&qword_10055CA18, &qword_10055CA00, (const char *)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v138[0] = v33;
  v138[1] = v34;
  v137[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v28, v138);
  v137[1] = &protocol witness table for _AppearanceActionModifier;
  v35 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v29, v137);
  v36 = sub_10037D500();
  v142 = v29;
  v143 = (void *)v30;
  v144 = v35;
  v145 = (void *)v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v142, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v38 = type metadata accessor for Optional(255, a4);
  v142 = v29;
  v143 = (void *)v30;
  v144 = v35;
  v145 = (void *)v36;
  v39 = swift_getOpaqueTypeConformance2(&v142, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v40 = v20;
  v136 = v20[1];
  v41 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v38, &v136);
  v142 = v37;
  v143 = (void *)v38;
  v144 = v39;
  v145 = (void *)v41;
  v42 = swift_getOpaqueTypeMetadata2(255, &v142, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v98 = v42;
  v142 = v37;
  v143 = (void *)v38;
  v144 = v39;
  v145 = (void *)v41;
  v97 = swift_getOpaqueTypeConformance2(&v142, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v43 = type metadata accessor for PagingScrollView(0, v42, v97);
  v99 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin();
  v45 = (char *)&v94 - v44;
  v46 = sub_100011650(&qword_10055CA28);
  v47 = type metadata accessor for ModifiedContent(0, v43, v46);
  v112 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v95 = (char *)&v94 - v48;
  v49 = swift_getWitnessTable((const char *)&protocol conformance descriptor for PagingScrollView<A>, v43);
  v96 = v49;
  v50 = sub_100012324(&qword_10055CA30, &qword_10055CA28, (const char *)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v135[0] = v49;
  v135[1] = v50;
  v51 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v47, v135);
  v142 = v47;
  v143 = (void *)v51;
  v52 = swift_getOpaqueTypeMetadata2(0, &v142, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v110 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v109 = (char *)&v94 - v53;
  v113 = v47;
  v142 = v47;
  v143 = (void *)v51;
  v106 = v51;
  v54 = swift_getOpaqueTypeConformance2(&v142, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v142 = v52;
  v143 = (void *)v54;
  v55 = swift_getOpaqueTypeMetadata2(0, &v142, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v107 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v105 = (char *)&v94 - v56;
  v111 = v52;
  v142 = v52;
  v143 = (void *)v54;
  v104 = v54;
  v57 = swift_getOpaqueTypeConformance2(&v142, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v108 = v55;
  v142 = v55;
  v143 = (void *)v57;
  v101 = v57;
  v58 = swift_getOpaqueTypeMetadata2(0, &v142, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v103 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin();
  v100 = (char *)&v94 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __chkstk_darwin();
  v102 = (char *)&v94 - v61;
  v62 = GeometryProxy.size.getter(v60);
  v63 = v125;
  v64 = v116;
  v142 = v125;
  v143 = v116;
  v65 = v118;
  v144 = v118;
  v145 = v40;
  v66 = v40;
  v67 = v115;
  v146 = (_QWORD *)v115;
  v68 = type metadata accessor for CarouselView(0, (uint64_t)&v142);
  v69 = v124;
  v70 = (v62 - *(double *)((char *)v124 + *(int *)(v68 + 72))) * 0.5;
  v71 = v117;
  static ScrollPagingBehavior.childPaging.getter();
  v127 = v63;
  v128 = v64;
  v72 = v95;
  v129 = v65;
  v130 = v66;
  v131 = v67;
  v132 = v69;
  v133 = v70;
  v134 = v119;
  PagingScrollView.init(behavior:axis:content:)(v71, 0, sub_100380AA4, v126, v98, v97);
  v142 = 0x6C6C6F726373;
  v143 = (void *)0xE600000000000000;
  View.coordinateSpace<A>(name:)(&v142, v43, &type metadata for String, v96, &protocol witness table for String);
  v73 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v45, v43);
  v74 = static ScrollIndicatorVisibility.hidden.getter(v73);
  v75 = static Axis.Set.vertical.getter(v74);
  v76 = static Axis.Set.horizontal.getter();
  v77 = Axis.Set.init(rawValue:)(0);
  v78 = Axis.Set.init(rawValue:)(v77);
  if (Axis.Set.init(rawValue:)(v78 & v75) != v75)
    v77 = Axis.Set.init(rawValue:)(v77 | v75);
  v79 = Axis.Set.init(rawValue:)(v77);
  if (Axis.Set.init(rawValue:)(v79 & v76) != v76)
    v77 = Axis.Set.init(rawValue:)(v77 | v76);
  v80 = v109;
  v81 = v123;
  v82 = v77;
  v83 = v113;
  View.scrollIndicators(_:axes:)(v123, v82, v113, v106);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v81, v121);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v72, v83);
  v84 = v105;
  v85 = v111;
  View.scrollClipDisabled(_:)(1, v111, v104);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v80, v85);
  v86 = Array.count.getter(*v124, v125) < 2;
  v87 = v100;
  v88 = v108;
  View.scrollDisabled(_:)(v86, v108, v101);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v84, v88);
  v89 = v103;
  v90 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  v91 = v102;
  v90(v102, v87, v58);
  v92 = *(void (**)(char *, uint64_t))(v89 + 8);
  v92(v87, v58);
  v90(v122, v91, v58);
  return ((uint64_t (*)(char *, uint64_t))v92)(v91, v58);
}

uint64_t sub_100379AC0@<X0>(_QWORD *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, double (*a3)@<D0>(uint64_t a1@<X8>)@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, double a9@<D0>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double (*v21)@<D0>(uint64_t@<X8>);
  uint64_t v22;
  uint64_t v23;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  void *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  __n128 v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  _QWORD *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  __n128 v105;
  __n128 v106;
  void *v107;
  uint64_t v108;
  double (*v109)@<D0>(uint64_t@<X8>);
  uint64_t v110;
  double (*v111)@<D0>(uint64_t@<X8>);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double (*v115)@<D0>(uint64_t@<X8>);
  void *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  void *v133;
  _QWORD *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  __n128 v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  _QWORD *v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  _QWORD *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  double (*v198)@<D0>(uint64_t@<X8>);
  _QWORD *v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  char v203[8];
  double (*v204)@<D0>(uint64_t@<X8>);
  void *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  double (*v210)@<D0>(uint64_t@<X8>);
  uint64_t v211;
  _QWORD v212[2];
  _QWORD v213[2];
  _QWORD v214[2];
  _QWORD v215[2];
  uint64_t OpaqueTypeConformance2;
  double (*v217)@<D0>(uint64_t@<X8>);
  void *v218;
  uint64_t v219;
  void *v220;
  _QWORD *v221;

  v202 = a5;
  v188 = a2;
  v197 = a1;
  v186 = a8;
  v183 = type metadata accessor for Binding(255, a3);
  v182 = type metadata accessor for Optional(0, v183);
  v180 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin();
  v181 = (char *)&v147 - v15;
  v16 = type metadata accessor for Optional(0, a3);
  v184 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v187 = (uint64_t *)((char *)&v147 - v17);
  v178 = type metadata accessor for ScrollViewProxy(0);
  v177 = *(_QWORD *)(v178 - 8);
  v179 = *(_QWORD *)(v177 + 64);
  __chkstk_darwin();
  v176 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = a3;
  v218 = a4;
  v201 = a4;
  v219 = a5;
  v220 = a6;
  v221 = (_QWORD *)a7;
  v200 = a7;
  v196 = type metadata accessor for CarouselView(0, (uint64_t)&v217);
  v190 = *(_QWORD **)(v196 - 8);
  v195 = v190[8];
  __chkstk_darwin();
  v164 = (char *)&v147 - v19;
  type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v194 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3;
  v198 = a3;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a3, 0, 0);
  v22 = type metadata accessor for Array(255);
  v217 = (double (*)@<D0>(uint64_t@<X8>))a4;
  v218 = &type metadata for Int;
  v219 = a7;
  v220 = &protocol witness table for Int;
  v23 = type metadata accessor for IDView(255, &v217);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v23);
  v217 = (double (*)@<D0>(uint64_t@<X8>))v23;
  v218 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v217, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v26 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v22);
  v217 = (double (*)@<D0>(uint64_t@<X8>))v22;
  v218 = v21;
  v219 = OpaqueTypeMetadata2;
  v220 = (void *)v26;
  v221 = a6;
  v27 = type metadata accessor for ForEach(255, &v217);
  v217 = (double (*)@<D0>(uint64_t@<X8>))v23;
  v218 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v217, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v153 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v27, &OpaqueTypeConformance2);
  v28 = type metadata accessor for LazyHStack(0, v27, v153);
  v189 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v154 = (char *)&v147 - v29;
  v30 = sub_100011650(&qword_10055C9F8);
  v148 = v28;
  v31 = type metadata accessor for ModifiedContent(0, v28, v30);
  v159 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin();
  v155 = (char *)&v147 - v32;
  v150 = v31;
  v33 = type metadata accessor for ModifiedContent(0, v31, &type metadata for _PaddingLayout);
  v160 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin();
  v156 = (char *)&v147 - v34;
  v35 = sub_100011650(&qword_10055CA00);
  v152 = v33;
  v36 = type metadata accessor for ModifiedContent(0, v33, v35);
  v162 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v191 = (char *)&v147 - v37;
  v158 = v36;
  v38 = type metadata accessor for ModifiedContent(0, v36, &type metadata for _AppearanceActionModifier);
  v172 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin();
  v192 = (char *)&v147 - v39;
  v40 = sub_100011650(&qword_10055CA08);
  v41 = swift_getWitnessTable((const char *)&protocol conformance descriptor for LazyHStack<A>, v28);
  v42 = sub_100012324(&qword_10055CA10, &qword_10055C9F8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
  v215[0] = v41;
  v215[1] = v42;
  v149 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v31, v215);
  v214[0] = v149;
  v214[1] = &protocol witness table for _PaddingLayout;
  v43 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v33, v214);
  v151 = v43;
  v44 = sub_100012324(&qword_10055CA18, &qword_10055CA00, (const char *)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v213[0] = v43;
  v213[1] = v44;
  v157 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v36, v213);
  v212[0] = v157;
  v212[1] = &protocol witness table for _AppearanceActionModifier;
  v45 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v38, v212);
  v46 = sub_10037D500();
  v217 = (double (*)@<D0>(uint64_t@<X8>))v38;
  v218 = (void *)v40;
  v219 = v45;
  v220 = (void *)v46;
  v47 = swift_getOpaqueTypeMetadata2(0, &v217, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v174 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v193 = (char *)&v147 - v48;
  v173 = v38;
  v217 = (double (*)@<D0>(uint64_t@<X8>))v38;
  v218 = (void *)v40;
  v169 = v40;
  v163 = v45;
  v219 = v45;
  v220 = (void *)v46;
  v161 = v46;
  v49 = swift_getOpaqueTypeConformance2(&v217, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v199 = a6;
  v211 = a6[1];
  v50 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v16, &v211);
  v175 = v47;
  v217 = (double (*)@<D0>(uint64_t@<X8>))v47;
  v218 = (void *)v16;
  v185 = v16;
  v167 = v49;
  v219 = v49;
  v220 = (void *)v50;
  v165 = v50;
  v171 = swift_getOpaqueTypeMetadata2(0, &v217, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin();
  v166 = (char *)&v147 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __chkstk_darwin();
  v168 = (char *)&v147 - v53;
  v54 = static VerticalAlignment.center.getter(v52);
  v55 = v196;
  v56 = *(_QWORD *)((char *)v197 + *(int *)(v196 + 80));
  v204 = v198;
  v205 = v201;
  v206 = v202;
  v207 = a6;
  v208 = v200;
  v209 = v197;
  v57 = v194;
  v58 = v153;
  sub_10037B230();
  v59 = v154;
  v60 = LazyHStack.init(alignment:spacing:pinnedViews:content:)(v54, v56, 0, v57, sub_100380ABC, v203, v27, v58);
  v217 = sub_10037B294;
  v218 = 0;
  v61 = static Alignment.center.getter(v60);
  v63 = v62;
  v64 = sub_10000B4C8(&qword_10055CBA0);
  v65 = sub_100012324(&qword_10055CBA8, &qword_10055CBA0, (const char *)&protocol conformance descriptor for GeometryReader<A>);
  v66 = v155;
  v67 = v55;
  v68 = v63;
  v69 = v148;
  View.background<A>(_:alignment:)(&v217, v61, v68, v148, v64, v41, v65);
  v70 = v164;
  v71 = (*(uint64_t (**)(char *, uint64_t))(v189 + 8))(v59, v69);
  v72 = static Edge.Set.horizontal.getter(v71);
  v73 = v156;
  v74 = v150;
  View.padding(_:_:)(v72, *(_QWORD *)&a9, 0, v150, v149);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v66, v74);
  v75 = v190;
  v76 = (_QWORD *)v190[2];
  v77 = v67;
  ((void (*)(char *, _QWORD *, uint64_t))v76)(v70, v197, v67);
  v78 = *((unsigned __int8 *)v75 + 80);
  v189 = ((v78 + 56) & ~v78) + v195;
  v79 = (v78 + 56) & ~v78;
  v194 = (char *)v79;
  v195 = v78 | 7;
  v80 = (_QWORD *)swift_allocObject(&unk_100521390, v189, v78 | 7);
  v81 = v201;
  v80[2] = v198;
  v80[3] = v81;
  v82 = v199;
  v80[4] = v202;
  v80[5] = v82;
  v83 = v200;
  v80[6] = v200;
  v84 = (char *)v80 + v79;
  v85 = (void (*)(char *, char *, uint64_t))v75[4];
  v85(v84, v70, v67);
  v86 = sub_100380B6C();
  v87 = sub_100380BB0();
  v88 = v152;
  View.onPreferenceChange<A>(_:perform:)(&type metadata for ScrollViewOffsetKey, sub_100380AE0, v80, v152, &type metadata for ScrollViewOffsetKey, v151, v86, v87);
  v89 = swift_release(v80);
  v90 = v73;
  v91 = v83;
  (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v90, v88, v89);
  v92 = v197;
  v190 = v76;
  ((void (*)(char *, _QWORD *, uint64_t))v76)(v70, v197, v77);
  v93 = v177;
  v94 = v176;
  v95 = v178;
  (*(void (**)(char *, _QWORD, uint64_t))(v177 + 16))(v176, v188, v178);
  v96 = *(unsigned __int8 *)(v93 + 80);
  v97 = (v189 + v96) & ~v96;
  v98 = swift_allocObject(&unk_1005213B8, v97 + v179, v195 | v96);
  v99 = v201;
  *(_QWORD *)(v98 + 16) = v198;
  *(_QWORD *)(v98 + 24) = v99;
  v100 = v199;
  *(_QWORD *)(v98 + 32) = v202;
  *(_QWORD *)(v98 + 40) = v100;
  v101 = &v194[v98];
  *(_QWORD *)(v98 + 48) = v91;
  v102 = v70;
  v188 = v85;
  v85(v101, v70, v196);
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v98 + v97, v94, v95);
  v103 = v158;
  v104 = v191;
  View.onAppear(perform:)(sub_100380E2C, v98, v158, v157);
  v105 = swift_release(v98);
  (*(void (**)(char *, uint64_t, __n128))(v162 + 8))(v104, v103, v105);
  v107 = (void *)v92[2];
  if (v107)
  {
    v108 = v92[3];
    v109 = (double (*)@<D0>(uint64_t@<X8>))v92[1];
    v217 = v109;
    v218 = v107;
    v219 = v108;
    swift_retain(v109);
    swift_retain(v107);
    v110 = sub_10000B4C8(&qword_10055CB88);
    Binding.wrappedValue.getter(&v210, v110);
    swift_release(v107);
    v106 = swift_release(v109);
    v111 = v210;
  }
  else
  {
    v111 = 0;
  }
  v217 = v111;
  LOBYTE(v218) = v107 == 0;
  v112 = v196;
  ((void (*)(char *, _QWORD *, uint64_t, __n128))v190)(v70, v92, v196, v106);
  v113 = v189;
  v114 = swift_allocObject(&unk_1005213E0, v189, v195);
  v115 = v198;
  v116 = v201;
  *(_QWORD *)(v114 + 16) = v198;
  *(_QWORD *)(v114 + 24) = v116;
  v117 = v199;
  *(_QWORD *)(v114 + 32) = v202;
  *(_QWORD *)(v114 + 40) = v117;
  v118 = &v194[v114];
  *(_QWORD *)(v114 + 48) = v200;
  v188(v118, v102, v112);
  v119 = v173;
  v120 = v192;
  View.onChange<A>(of:initial:_:)(&v217, 0, sub_100380ED8, v114, v173, v169, v163, v161);
  v121 = swift_release(v114);
  (*(void (**)(char *, uint64_t, __n128))(v172 + 8))(v120, v119, v121);
  v122 = (char *)v92 + *(int *)(v112 + 64);
  v123 = v180;
  v124 = v112;
  v125 = v181;
  v126 = v182;
  (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v181, v122, v182);
  v127 = v102;
  v128 = v183;
  v129 = *(_QWORD *)(v183 - 8);
  v130 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v183) != 1)
  {
    Binding.wrappedValue.getter(v187, v128);
    v130 = 0;
    v123 = v129;
    v126 = v128;
  }
  (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v126);
  v131 = v187;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, double (*)@<D0>(uint64_t@<X8>)))(*((_QWORD *)v115 - 1)
                                                                                               + 56))(v187, v130, 1, v115);
  ((void (*)(char *, _QWORD *, uint64_t))v190)(v127, v197, v124);
  v132 = swift_allocObject(&unk_100521408, v113, v195);
  v133 = v201;
  *(_QWORD *)(v132 + 16) = v115;
  *(_QWORD *)(v132 + 24) = v133;
  v134 = v199;
  *(_QWORD *)(v132 + 32) = v202;
  *(_QWORD *)(v132 + 40) = v134;
  v135 = &v194[v132];
  *(_QWORD *)(v132 + 48) = v200;
  v188(v135, v127, v124);
  v136 = v166;
  v137 = v175;
  v138 = v185;
  v139 = v193;
  View.onChange<A>(of:initial:_:)(v131, 0, sub_100380F70, v132, v175, v185, v167, v165);
  v140 = swift_release(v132);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v184 + 8))(v131, v138, v140);
  (*(void (**)(char *, uint64_t))(v174 + 8))(v139, v137);
  v141 = v170;
  v142 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
  v143 = v168;
  v144 = v171;
  v142(v168, v136, v171);
  v145 = *(void (**)(char *, uint64_t))(v141 + 8);
  v145(v136, v144);
  v142(v186, v143, v144);
  return ((uint64_t (*)(char *, uint64_t))v145)(v143, v144);
}

uint64_t sub_10037A994@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t OpaqueTypeConformance2;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t WitnessTable;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;

  v51 = a4;
  v65 = a7;
  *(_QWORD *)&v78 = a2;
  *((_QWORD *)&v78 + 1) = a3;
  v50 = a3;
  v79 = a4;
  v80 = a5;
  v81 = a6;
  v56 = type metadata accessor for CarouselView(0, (uint64_t)&v78);
  v55 = *(_QWORD *)(v56 - 8);
  v58 = *(_QWORD *)(v55 + 64);
  __chkstk_darwin();
  v53 = (char *)&v48 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v62 = v14;
  *(_QWORD *)&v78 = a3;
  *((_QWORD *)&v78 + 1) = &type metadata for Int;
  v79 = a6;
  v80 = &protocol witness table for Int;
  v15 = a6;
  v16 = type metadata accessor for IDView(255, &v78);
  v59 = v16;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v16);
  *(_QWORD *)&v78 = v16;
  *((_QWORD *)&v78 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v78, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v61 = OpaqueTypeMetadata2;
  v60 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v78 = v14;
  *((_QWORD *)&v78 + 1) = a2;
  v79 = OpaqueTypeMetadata2;
  v80 = (void *)v60;
  v81 = (uint64_t)a5;
  v63 = type metadata accessor for ForEach(0, &v78);
  v64 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v52 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v54 = (char *)&v48 - v19;
  *(_QWORD *)&v76 = *a1;
  v20 = v76;
  v21 = type metadata accessor for Array(0);
  v22 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v21);
  RandomAccessCollection<>.indices.getter(&v78, v21, v22, &protocol witness table for Int);
  v72 = v78;
  v75 = v20;
  v23 = sub_10000B4C8(&qword_10055CB68);
  v24 = sub_10038094C();
  v74[0] = &protocol witness table for Int;
  v74[1] = v24;
  v25 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Range<A>, v23, v74);
  v26 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v21);
  zip<A, B>(_:_:)(&v76, &v72, &v75, v23, v21, v25, v26);
  v72 = v76;
  v73 = v77;
  *(_QWORD *)&v78 = v23;
  *((_QWORD *)&v78 + 1) = v21;
  v79 = v25;
  v80 = (void *)v26;
  v27 = type metadata accessor for Zip2Sequence(0, &v78);
  v28 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Zip2Sequence<A, B>, v27);
  *(_QWORD *)&v76 = Array.init<A>(_:)(&v72, TupleTypeMetadata2, v27, v28);
  v29 = v50;
  v66 = a2;
  v67 = v50;
  v30 = v51;
  v68 = v51;
  v69 = a5;
  v31 = a5;
  v70 = v15;
  KeyPath = swift_getKeyPath(&unk_1004400A0);
  v32 = v55;
  v33 = v53;
  v34 = a1;
  v35 = v56;
  (*(void (**)(char *, _QWORD *, uint64_t))(v55 + 16))(v53, v34, v56);
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = (char *)swift_allocObject(&unk_100521430, v37 + v58, v36 | 7);
  *((_QWORD *)v38 + 2) = a2;
  *((_QWORD *)v38 + 3) = v29;
  *((_QWORD *)v38 + 4) = v30;
  *((_QWORD *)v38 + 5) = v31;
  *((_QWORD *)v38 + 6) = v15;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v38[v37], v33, v35);
  v39 = (_QWORD *)swift_allocObject(&unk_100521458, 72, 7);
  v39[2] = a2;
  v39[3] = v29;
  v39[4] = v30;
  v39[5] = v31;
  v39[6] = v15;
  v39[7] = sub_1003811F8;
  v39[8] = v38;
  *(_QWORD *)&v78 = v59;
  *((_QWORD *)&v78 + 1) = WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v41 = v52;
  ForEach<>.init(_:id:content:)(&v76, KeyPath, sub_1003809A0, v39, v62, v61, v60, v31, OpaqueTypeConformance2);
  v71 = OpaqueTypeConformance2;
  v42 = v63;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v63, &v71);
  v43 = v64;
  v44 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v45 = v54;
  v44(v54, v41, v42);
  v46 = *(void (**)(char *, uint64_t))(v43 + 8);
  v46(v41, v42);
  v44(v65, v45, v42);
  return ((uint64_t (*)(char *, uint64_t))v46)(v45, v42);
}

uint64_t sub_10037AE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  void *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t WitnessTable;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;

  v51 = a6;
  v52 = a7;
  v50 = a4;
  v55 = a1;
  v56 = a4;
  v53 = a9;
  v57 = a5;
  v58 = a6;
  v59 = a7;
  v60 = a8;
  v42 = a8;
  v13 = type metadata accessor for CarouselView(0, (uint64_t)&v56);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v14;
  __chkstk_darwin();
  v54 = (char *)&v40 - v15;
  v44 = *((_QWORD *)a5 - 1);
  __chkstk_darwin();
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = (uint64_t)a5;
  v57 = &type metadata for Int;
  v58 = a8;
  v59 = &protocol witness table for Int;
  v18 = type metadata accessor for IDView(0, &v56);
  v49 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v41 = (char *)&v40 - v19;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v18);
  v56 = v18;
  v57 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v56, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v46 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v43 = (char *)&v40 - v23;
  (*(void (**)(uint64_t))(a3 + *(int *)(v13 + 76)))(a2);
  v56 = v55;
  v24 = v42;
  View.id<A>(_:)(&v56, a5, &type metadata for Int, v42, &protocol witness table for Int);
  (*(void (**)(char *, void *))(v44 + 8))(v17, a5);
  v25 = v47;
  v26 = a3;
  v27 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v54, v26, v13);
  v28 = *(unsigned __int8 *)(v25 + 80);
  v29 = (v28 + 56) & ~v28;
  v30 = (v48 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (char *)swift_allocObject(&unk_100521480, v30 + 8, v28 | 7);
  *((_QWORD *)v31 + 2) = v50;
  *((_QWORD *)v31 + 3) = a5;
  v32 = v52;
  *((_QWORD *)v31 + 4) = v51;
  *((_QWORD *)v31 + 5) = v32;
  *((_QWORD *)v31 + 6) = v24;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v31[v29], v54, v27);
  *(_QWORD *)&v31[v30] = v55;
  v33 = v41;
  View.onTapGesture(count:perform:)(1, sub_1003809A8, v31, v18, WitnessTable);
  v34 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v33, v18, v34);
  v35 = v46;
  v36 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v37 = v43;
  v36(v43, v22, OpaqueTypeMetadata2);
  v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v22, OpaqueTypeMetadata2);
  v36(v53, v37, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, OpaqueTypeMetadata2);
}

double sub_10037B198(uint64_t a1, char a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v7;
  __int128 v8;
  double result;
  _OWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = 0;
  if ((a2 & 1) != 0)
    v7 = static Animation.default.getter(a1, a4);
  __chkstk_darwin();
  v8 = *(_OWORD *)(a3 + 32);
  v10[1] = *(_OWORD *)(a3 + 16);
  v10[2] = v8;
  v11 = *(_QWORD *)(a3 + 48);
  v12 = v4;
  v13 = a1;
  withAnimation<A>(_:_:)(v7, sub_1003809AC, v10, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_10037B230()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews(0);
  v3 = 0;
  v1 = sub_10001254C(&qword_10055ADA0, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  return dispatch thunk of OptionSet.init(rawValue:)(&v3, v0, v1);
}

double sub_10037B294@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double result;
  _QWORD v10[2];

  v2 = type metadata accessor for NamedCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Color.clear.getter(v4);
  v10[0] = 0x6C6C6F726373;
  v10[1] = 0xE600000000000000;
  static CoordinateSpaceProtocol<>.named<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  v8 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for NamedCoordinateSpace);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  result = -v8;
  *(_QWORD *)a1 = v7;
  *(double *)(a1 + 8) = -v8;
  return result;
}

uint64_t sub_10037B378(double *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[5];

  v29 = a7;
  v13 = type metadata accessor for LayoutDirection(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v30[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v30[-1] - v17;
  v19 = *a1;
  v20 = a3;
  v30[0] = a3;
  v30[1] = a4;
  v30[2] = a5;
  v30[3] = a6;
  v30[4] = v29;
  result = type metadata accessor for CarouselView(0, (uint64_t)v30);
  v22 = ceil(v19 / *(double *)((char *)a2 + *(int *)(result + 100)));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v23 = result;
  v24 = (uint64_t)v22;
  sub_10035DDD0((uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for LayoutDirection.rightToLeft(_:), v13);
  v25 = static LayoutDirection.== infix(_:_:)(v18, v16);
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v16, v13);
  v26(v18, v13);
  if ((v25 & 1) == 0)
    return sub_10037B560(v24, v23);
  result = Array.count.getter(*a2, v20);
  v27 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_11;
  v28 = __OFSUB__(v27, v24);
  v24 = v27 - v24;
  if (!v28)
    return sub_10037B560(v24, v23);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10037B53C@<X0>(uint64_t a1@<X8>)
{
  return sub_10035DDD0(a1);
}

uint64_t sub_10037B560(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (**v22)(uint64_t, char *);
  void (*v23)(uint64_t, char *);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *);
  uint64_t v40;
  __int128 *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v46 = type metadata accessor for Binding(255, v6);
  v7 = type metadata accessor for Optional(0, v46);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin();
  v45 = (char *)&v37 - v8;
  v9 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  *(_QWORD *)&v47 = *v2;
  v12 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v12);
  result = Collection.isEmpty.getter(v12, WitnessTable);
  if ((result & 1) != 0)
    return result;
  result = Array.count.getter(v11, v6);
  v15 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v15 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v15 >= (a1 & ~(a1 >> 63)))
    v16 = a1 & ~(a1 >> 63);
  else
    v16 = result - 1;
  v17 = (__int128 *)((char *)v2 + *(int *)(a2 + 92));
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v41 = v17;
  *(_QWORD *)&v47 = v19;
  *((_QWORD *)&v47 + 1) = v18;
  v20 = sub_10000B4C8(&qword_10055CB80);
  result = (uint64_t)State.wrappedValue.getter(&v49);
  if (v16 != v49)
  {
    *(_QWORD *)&v47 = v19;
    *((_QWORD *)&v47 + 1) = v18;
    v49 = v16;
    State.wrappedValue.setter(&v49, v20);
    v22 = (void (**)(uint64_t, char *))((char *)v2 + *(int *)(a2 + 88));
    v23 = *v22;
    v24 = v42;
    if (*v22)
    {
      v25 = (uint64_t)v22[1];
      v39 = v23;
      v40 = v25;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49);
      v38 = v49;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49);
      Array.subscript.getter(v49, v11, v6);
      v39(v38, v24);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v6);
    }
    v40 = v20;
    v26 = v2[2];
    if (v26)
    {
      v27 = v2[3];
      v28 = v2[1];
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      swift_retain(v28);
      swift_retain(v26);
      State.wrappedValue.getter(&v49);
      *(_QWORD *)&v47 = v28;
      *((_QWORD *)&v47 + 1) = v26;
      v48 = v27;
      v29 = sub_10000B4C8(&qword_10055CB88);
      Binding.wrappedValue.setter(&v49, v29);
      swift_release(v26);
      v21 = swift_release(v28);
    }
    v30 = (char *)v2 + *(int *)(a2 + 64);
    v32 = v43;
    v31 = v44;
    v33 = v45;
    (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v45, v30, v44, v21);
    v34 = v46;
    v35 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v46) != 1)
    {
      v36 = *v3;
      v47 = *v41;
      State.wrappedValue.getter(&v49);
      Array.subscript.getter(v49, v36, v6);
      Binding.wrappedValue.setter(v24, v34);
      v32 = v35;
      v31 = v34;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  }
  return result;
}

double sub_10037B85C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  __n128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  double result;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t WitnessTable;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  __n128 v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v83 = a2;
  v80 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v79 = (char **)((char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Binding(0, v14);
  v84 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v77 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v81 = (char *)&v73 - v17;
  v82 = a3;
  v86 = a3;
  v87 = a4;
  v88 = a5;
  v89 = a6;
  v78 = a6;
  v90 = a7;
  v18 = type metadata accessor for CarouselView(0, (uint64_t)&v86);
  v75 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v73 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v74 = (char *)&v73 - v20;
  v21 = sub_100011650((uint64_t *)&unk_10055CBC0);
  v22 = type metadata accessor for Optional(255, v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v21, v22, 0, 0);
  v76 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  v25 = (uint64_t *)((char *)&v73 - v24);
  sub_10000B4C8(&qword_10055C9F0);
  __chkstk_darwin();
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v73 - v28;
  v30 = type metadata accessor for ScrollViewProxy(0);
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v83, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  sub_100011370((uint64_t)v29, (uint64_t)v27, &qword_10055C9F0);
  v32 = sub_10000B4C8(&qword_10055CB60);
  State.wrappedValue.setter(v27, v32);
  sub_100011694((uint64_t)v29, &qword_10055C9F0);
  v34 = a1[1];
  v33 = a1[2];
  v35 = a1[3];
  v83 = v18;
  v36 = *(int *)(v18 + 64);
  v37 = a1;
  v38 = (char *)v25 + *(int *)(TupleTypeMetadata2 + 48);
  *v25 = v34;
  v25[1] = v33;
  v25[2] = v35;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v38, (char *)a1 + v36, v22);
  if (v33)
  {
    v39 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v38, 1, v15) == 1)
    {
      v86 = v34;
      v87 = v33;
      v88 = v35;
      sub_100370330(v34, v33);
      swift_retain(v34);
      swift_retain(v33);
      v40 = sub_10000B4C8(&qword_10055CB88);
      Binding.wrappedValue.getter(&v85, v40);
      v41 = v85;
      v42 = v74;
      v43 = v75;
      v44 = *(void (**)(char *, uint64_t *, uint64_t))(v75 + 16);
      v45 = a1;
      v46 = v83;
      v44(v74, a1, v83);
      v47 = v82;
      if (v41 < 0)
      {
        v70 = *(void (**)(char *, uint64_t))(v43 + 8);
        v70(v42, v46);
        v71 = v73;
        v44(v73, v45, v46);
        v70(v71, v46);
      }
      else
      {
        v48 = Array.count.getter(*(_QWORD *)v42, v82);
        v49 = v42;
        v50 = v48;
        v51 = *(void (**)(char *, uint64_t))(v43 + 8);
        v51(v49, v46);
        if (v41 >= v50)
        {
          v72 = v73;
          v44(v73, v45, v46);
          if (!v41)
            Array.count.getter(*v72, v47);
          v51((char *)v72, v46);
        }
        else
        {
          sub_10037B198(v41, 1, v46, v52);
        }
      }
      swift_release(v33);
      swift_release(v34);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v81, v38, v15);
      v85 = *a1;
      sub_100370330(v34, v33);
      swift_retain(v34);
      swift_retain(v33);
      swift_bridgeObjectRetain();
      v57 = v79;
      Binding.wrappedValue.getter(v79, v15);
      v58 = v82;
      v59 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v59);
      Collection<>.firstIndex(of:)(&v86, v57, v59, WitnessTable, *(_QWORD *)(v78 + 8));
      (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v57, v58);
      swift_bridgeObjectRelease();
      if (v87 != 1)
      {
        v61 = v86;
        v86 = v34;
        v87 = v33;
        v88 = v35;
        v62 = sub_10000B4C8(&qword_10055CB88);
        Binding.wrappedValue.getter(&v85, v62);
        if (v61 == v85)
          sub_10037B198(v61, 1, v83, v63);
      }
      swift_release(v33);
      v64 = swift_release(v34);
      (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v81, v15, v64);
    }
  }
  else
  {
    v53 = v76;
    v54 = v77;
    v55 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v38, 1, v15) == 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v25, TupleTypeMetadata2);
      return result;
    }
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v38, v15);
    v85 = *v37;
    swift_bridgeObjectRetain();
    v65 = v79;
    Binding.wrappedValue.getter(v79, v15);
    v66 = v82;
    v67 = type metadata accessor for Array(0);
    v68 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v67);
    Collection<>.firstIndex(of:)(&v86, v65, v67, v68, *(_QWORD *)(v78 + 8));
    (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v65, v66);
    swift_bridgeObjectRelease();
    if (v87 != 1)
      v69.n128_f64[0] = sub_10037B198(v86, 1, v83, v69);
    (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v54, v15, v69);
  }
  return sub_100370300(*v25, v25[1]);
}

double sub_10037BEB4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((*(_BYTE *)(a3 + 8) & 1) == 0)
  {
    v10 = *(_QWORD *)a3;
    *(_QWORD *)&v14 = a5;
    *((_QWORD *)&v14 + 1) = a6;
    v15 = a7;
    v16 = a8;
    v17 = a9;
    v11 = type metadata accessor for CarouselView(0, (uint64_t)&v14);
    v14 = *(_OWORD *)(a4 + *(int *)(v11 + 92));
    sub_10000B4C8(&qword_10055CB80);
    State.wrappedValue.getter(&v13);
    if (v10 != v13)
      a1.n128_f64[0] = sub_10037B198(v10, *(_BYTE *)(a4 + *(int *)(v11 + 68)), v11, a1);
  }
  return a1.n128_f64[0];
}

uint64_t sub_10037BF50(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a6;
  v27 = a8;
  v13 = type metadata accessor for Optional(0, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v26 - v15;
  v17 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin();
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a4);
  v32 = *a3;
  v21 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v21);
  Collection<>.firstIndex(of:)(&v28, v19, v21, WitnessTable, *(_QWORD *)(a7 + 8));
  if (BYTE8(v28) != 1)
  {
    v23 = v28;
    *(_QWORD *)&v28 = a4;
    *((_QWORD *)&v28 + 1) = a5;
    v29 = v26;
    v30 = a7;
    v31 = v27;
    v24 = type metadata accessor for CarouselView(0, (uint64_t)&v28);
    v28 = *(_OWORD *)((char *)a3 + *(int *)(v24 + 92));
    sub_10000B4C8(&qword_10055CB80);
    State.wrappedValue.getter(&v32);
    if (v23 != v32)
      sub_10037B198(v23, *((_BYTE *)a3 + *(int *)(v24 + 68)), v24, v25);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, a4);
}

uint64_t sub_10037C130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t WitnessTable;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _QWORD v77[2];
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v59 = a6;
  v58 = a4;
  v56 = a3;
  v68 = a7;
  *(_QWORD *)&v81 = a2;
  *((_QWORD *)&v81 + 1) = a3;
  v82 = a4;
  v83 = a5;
  v84 = a6;
  v60 = type metadata accessor for CarouselView(0, (uint64_t)&v81);
  v10 = *(_QWORD *)(v60 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v57 = (char *)&KeyPath - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v66 = v14;
  v15 = sub_100011650(&qword_10055CA38);
  v65 = v15;
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v81 = v14;
  *((_QWORD *)&v81 + 1) = a2;
  v82 = v15;
  v83 = WitnessTable;
  v84 = a5;
  v61 = type metadata accessor for ForEach(0, &v81);
  v67 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v62 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v63 = (char *)&KeyPath - v17;
  v19 = a1;
  *(_QWORD *)&v79 = *a1;
  v18 = v79;
  v20 = type metadata accessor for Array(0);
  v21 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v20);
  RandomAccessCollection<>.indices.getter(&v81, v20, v21, &protocol witness table for Int);
  v75 = v81;
  v78 = v18;
  v22 = sub_10000B4C8(&qword_10055CB68);
  v23 = sub_10038094C();
  v77[0] = &protocol witness table for Int;
  v77[1] = v23;
  v24 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Range<A>, v22, v77);
  v25 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v20);
  zip<A, B>(_:_:)(&v79, &v75, &v78, v22, v20, v24, v25);
  v75 = v79;
  v76 = v80;
  *(_QWORD *)&v81 = v22;
  *((_QWORD *)&v81 + 1) = v20;
  v82 = v24;
  v83 = v25;
  v26 = type metadata accessor for Zip2Sequence(0, &v81);
  v27 = swift_getWitnessTable((const char *)&protocol conformance descriptor for Zip2Sequence<A, B>, v26);
  *(_QWORD *)&v79 = Array.init<A>(_:)(&v75, TupleTypeMetadata2, v26, v27);
  v28 = v56;
  v69 = a2;
  v70 = v56;
  v29 = v58;
  v71 = v58;
  v72 = a5;
  v30 = a5;
  v31 = v59;
  v73 = v59;
  KeyPath = swift_getKeyPath(&unk_1004400A0);
  v32 = v10;
  v33 = *(void (**)(char *, _QWORD *, uint64_t))(v10 + 16);
  v34 = v57;
  v35 = v60;
  v33(v57, v19, v60);
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = v32;
  v38 = (v36 + 56) & ~v36;
  v39 = (char *)swift_allocObject(&unk_1005212F0, v38 + v11, v36 | 7);
  *((_QWORD *)v39 + 2) = a2;
  *((_QWORD *)v39 + 3) = v28;
  *((_QWORD *)v39 + 4) = v29;
  *((_QWORD *)v39 + 5) = v30;
  *((_QWORD *)v39 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v39[v38], v34, v35);
  v40 = (_QWORD *)swift_allocObject(&unk_100521318, 72, 7);
  v40[2] = a2;
  v40[3] = v28;
  v40[4] = v29;
  v40[5] = v30;
  v40[6] = v31;
  v40[7] = sub_100380994;
  v40[8] = v39;
  v41 = sub_100011650(&qword_10055CA40);
  v42 = sub_100011650(&qword_10055CA48);
  v43 = type metadata accessor for AutomaticHoverEffect(255);
  v44 = sub_10037D55C();
  v45 = sub_10001254C(qword_10055CAC8, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  *(_QWORD *)&v81 = v42;
  *((_QWORD *)&v81 + 1) = v43;
  v82 = v44;
  v83 = v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  *(_QWORD *)&v81 = v41;
  *((_QWORD *)&v81 + 1) = OpaqueTypeConformance2;
  v47 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v48 = v62;
  ForEach<>.init(_:id:content:)(&v79, KeyPath, sub_1003809A0, v40, v66, v65, WitnessTable, v30, v47);
  v74 = v47;
  v49 = v61;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v61, &v74);
  v50 = v67;
  v51 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v52 = v63;
  v51(v63, v48, v49);
  v53 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53(v48, v49);
  v51(v68, v52, v49);
  return ((uint64_t (*)(char *, uint64_t))v53)(v52, v49);
}

uint64_t sub_10037C610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  char *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[4];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v71 = a8;
  v81 = a3;
  v82 = a4;
  v83 = a5;
  v84 = a6;
  v85 = a7;
  v75 = type metadata accessor for CarouselView(0, (uint64_t)&v81);
  v70 = *(_QWORD *)(v75 - 8);
  v64 = *(_QWORD *)(v70 + 64);
  __chkstk_darwin();
  v67 = (char *)&v52 - v15;
  v66 = type metadata accessor for AutomaticHoverEffect(0);
  v56 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin();
  v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055CA60);
  __chkstk_darwin();
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10000B4C8(&qword_10055CA48);
  __chkstk_darwin();
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10000B4C8(&qword_10055CA40);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v61 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10000B4C8(&qword_10055CA38);
  v58 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v57 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a2;
  v73 = a4;
  v68 = a6;
  v69 = a7;
  sub_10037CB88(a2, a1, a3, a4, a5, a6, a7, (uint64_t)v18);
  v23 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v72 = a3;
  v74 = a5;
  v23(v80, a3, a5);
  sub_100011530((uint64_t)v80, (uint64_t)&v81, &qword_10055CB78);
  if (v81)
  {
    v24 = v82;
    v25 = v83;
    v27 = v84;
    v26 = v85;
    v86 = v81;
    swift_retain(v83);
    sub_1003567C0(&v86);
    v87 = v24;
    sub_1003567C0(&v87);
    swift_release(v25);
    v88 = v27;
    sub_1003567C0(&v88);
    v89 = v26;
    sub_1003567C0(&v89);
  }
  else
  {
    v25 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  }
  v28 = v65;
  v76 = *(_OWORD *)(v65 + *(int *)(v75 + 92));
  sub_10000B4C8(&qword_10055CB80);
  State.wrappedValue.getter(&v79);
  v54 = a1;
  v29 = v79 == a1;
  sub_100011370((uint64_t)v18, (uint64_t)v20, &qword_10055CA60);
  v30 = v60;
  v31 = &v20[*(int *)(v60 + 36)];
  *(_QWORD *)v31 = v25;
  v31[8] = v29;
  v32 = sub_100011694((uint64_t)v18, &qword_10055CA60);
  v33 = v55;
  static CustomHoverEffect<>.automatic.getter(v32);
  v34 = sub_10037D55C();
  v53 = v34;
  v35 = sub_10001254C(qword_10055CAC8, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v36 = v61;
  v37 = v66;
  View.hoverEffect<A>(_:isEnabled:)(v33, 1, v30, v66, v34, v35);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v37);
  sub_100011694((uint64_t)v20, &qword_10055CA48);
  v38 = v70;
  v39 = v67;
  v40 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v67, v28, v75);
  v41 = *(unsigned __int8 *)(v38 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = (v64 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v44 = (char *)swift_allocObject(&unk_100521340, v43 + 8, v41 | 7);
  v45 = v73;
  *((_QWORD *)v44 + 2) = v72;
  *((_QWORD *)v44 + 3) = v45;
  v46 = v68;
  *((_QWORD *)v44 + 4) = v74;
  *((_QWORD *)v44 + 5) = v46;
  *((_QWORD *)v44 + 6) = v69;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v44[v42], v39, v40);
  *(_QWORD *)&v44[v43] = v54;
  *(_QWORD *)&v76 = v30;
  *((_QWORD *)&v76 + 1) = v37;
  v77 = v53;
  v78 = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v76, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v48 = v57;
  v49 = v63;
  View.onTapGesture(count:perform:)(1, sub_1003809A8, v44, v63, OpaqueTypeConformance2);
  v50 = swift_release(v44);
  (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v36, v49, v50);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v58 + 32))(v71, v48, v59);
}

uint64_t sub_10037CB88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[5];
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[5];
  uint64_t v90;

  v73 = a7;
  v72 = a6;
  *((_QWORD *)&v71 + 1) = a4;
  v75 = a2;
  v74 = a1;
  v78 = a8;
  v77 = sub_10000B4C8(&qword_10055CB90);
  __chkstk_darwin();
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_10000B4C8(&qword_10055CB98);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10000B4C8(&qword_10055CA80);
  __chkstk_darwin();
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v21 = (char *)&v64 - v20;
  v22 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  *(_QWORD *)&v71 = a3;
  v22(v83, a3, a5);
  sub_100011530((uint64_t)v83, (uint64_t)v89, &qword_10055CB78);
  v23 = v89[0];
  if (v89[0])
  {
    v24 = v89[1];
    v67 = v89[2];
    v65 = v89[3];
    v70 = v89[4];
    KeyPath = swift_getKeyPath(&unk_1004400F0);
    *(_QWORD *)&v84 = v23;
    *((_QWORD *)&v84 + 1) = KeyPath;
    v85 = v24;
    v66 = v24;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.large(_:), v12);
    swift_retain(v23);
    swift_retain(v24);
    v26 = sub_10000B4C8((uint64_t *)&unk_10055DA30);
    v64 = v21;
    v27 = v26;
    v28 = sub_10037D75C();
    View.dynamicTypeSize(_:)(v15, v27, v28);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release(v84);
    swift_release(*((_QWORD *)&v84 + 1));
    swift_release(v85);
    v84 = v71;
    v85 = a5;
    v86 = v72;
    v87 = v73;
    v29 = type metadata accessor for CarouselView(0, (uint64_t)&v84);
    v84 = *(_OWORD *)(v74 + *(int *)(v29 + 92));
    sub_10000B4C8(&qword_10055CB80);
    State.wrappedValue.getter(&v79);
    v30 = v65;
    if ((_QWORD)v79 == v75)
      v31 = v65;
    else
      v31 = v70;
    swift_retain(v31);
    v32 = swift_getKeyPath(&unk_1004400C0);
    v33 = v68;
    v34 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v19, v17, v69);
    v35 = v76;
    v36 = (uint64_t *)&v19[*(int *)(v76 + 36)];
    *v36 = v32;
    v36[1] = v31;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
    v37 = (uint64_t)v19;
    v38 = (uint64_t)v64;
    sub_100011530(v37, (uint64_t)v64, &qword_10055CA80);
    sub_100011370(v38, (uint64_t)v11, &qword_10055CA80);
    swift_storeEnumTagMultiPayload(v11, v77, 0);
    v39 = sub_10000B4C8(&qword_10055CA98);
    v40 = sub_10037D6B0();
    v41 = sub_10037D7E0();
    _ConditionalContent<>.init(storage:)(v11, v35, v39, v40, v41);
    swift_release(v66);
    swift_release(v23);
    v90 = v67;
    sub_1003567C0(&v90);
    *(_QWORD *)&v79 = v30;
    sub_1003567C0(&v79);
    *(_QWORD *)&v84 = v70;
    sub_1003567C0(&v84);
    return sub_100011694(v38, &qword_10055CA80);
  }
  else
  {
    v43 = sub_100380898();
    sub_100380898();
    v45 = v44;
    v47 = static Alignment.center.getter(v46);
    _FrameLayout.init(width:height:alignment:)(&v84, *(_QWORD *)&v43, 0, v45, 0, v47, v48);
    v49 = v84;
    v50 = BYTE8(v84);
    v51 = v85;
    v52 = v86;
    v53 = v87;
    v54 = v88;
    v56 = static Color.primary.getter(v55);
    v79 = v71;
    v80 = a5;
    v81 = v72;
    v82 = v73;
    v57 = type metadata accessor for CarouselView(0, (uint64_t)&v79);
    v79 = *(_OWORD *)(v74 + *(int *)(v57 + 92));
    sub_10000B4C8(&qword_10055CB80);
    State.wrappedValue.getter(&v90);
    v58 = 0.25;
    if (v90 == v75)
      v58 = 1.0;
    v59 = Color.opacity(_:)(v58);
    swift_release(v56);
    v60 = swift_getKeyPath(&unk_1004400C0);
    *(_QWORD *)v11 = v49;
    v11[8] = v50;
    *((_QWORD *)v11 + 2) = v51;
    v11[24] = v52;
    *((_QWORD *)v11 + 4) = v53;
    *((_QWORD *)v11 + 5) = v54;
    *((_QWORD *)v11 + 6) = v60;
    *((_QWORD *)v11 + 7) = v59;
    swift_storeEnumTagMultiPayload(v11, v77, 1);
    v61 = sub_10000B4C8(&qword_10055CA98);
    v62 = sub_10037D6B0();
    v63 = sub_10037D7E0();
    return _ConditionalContent<>.init(storage:)(v11, v76, v61, v62, v63);
  }
}

uint64_t sub_10037D150(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  BOOL v31;
  double v32;
  double v33;
  double *v34;
  double v35;
  double v36;
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v43 = a6;
  v44 = a7;
  v45 = a2;
  v11 = type metadata accessor for ScrollViewProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  v47 = v12;
  __chkstk_darwin();
  v41 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_10055C9F0);
  __chkstk_darwin();
  v15 = (char **)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v21 = (char *)&v41 - v20;
  v42 = a3;
  *(_QWORD *)&v48 = a3;
  *((_QWORD *)&v48 + 1) = a4;
  v49 = a5;
  v50 = v43;
  v51 = v44;
  v22 = (int *)type metadata accessor for CarouselView(0, (uint64_t)&v48);
  sub_10037B560(v45, (uint64_t)v22);
  v48 = *(_OWORD *)((char *)a1 + v22[23]);
  sub_10000B4C8(&qword_10055CB80);
  State.wrappedValue.getter(&v52);
  v23 = v52;
  sub_10035DDD0((uint64_t)v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for LayoutDirection.rightToLeft(_:), v16);
  LOBYTE(a4) = static LayoutDirection.== infix(_:_:)(v21, v19);
  v24 = *(void (**)(char *, uint64_t))(v17 + 8);
  v25 = v19;
  v26 = v46;
  v24(v25, v16);
  v27 = v21;
  v28 = v47;
  v24(v27, v16);
  if ((a4 & 1) == 0)
    goto LABEL_4;
  result = Array.count.getter(*a1, v42);
  v30 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  v31 = __OFSUB__(v30, v23);
  v23 = v30 - v23;
  if (v31)
  {
LABEL_8:
    __break(1u);
    return result;
  }
LABEL_4:
  v32 = *(double *)((char *)a1 + v22[25]);
  v33 = Int.seconds.getter(v23);
  v34 = (double *)((char *)a1 + v22[18]);
  v35 = *v34;
  v36 = v34[1];
  sub_10000B4C8(&qword_10055CB60);
  State.wrappedValue.getter(v15);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v26))
    return sub_100011694((uint64_t)v15, &qword_10055C9F0);
  v37 = v41;
  (*(void (**)(char *, _QWORD *, uint64_t))(v28 + 16))(v41, v15, v26);
  v38 = sub_100011694((uint64_t)v15, &qword_10055C9F0);
  v39 = static UnitPoint.leading.getter(v38);
  ScrollViewProxy.scrollTo(rect:anchor:)(*(_QWORD *)&v39, v40, 0, v32 * v33, 0.0, v35, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v37, v26);
}

uint64_t sub_10037D440()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10037D460()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10037D480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for LayoutDirection(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.layoutDirection.setter(v4);
}

unint64_t sub_10037D500()
{
  unint64_t result;
  uint64_t v1;
  void *v2;

  result = qword_10055CA20;
  if (!qword_10055CA20)
  {
    v1 = sub_100011650(&qword_10055CA08);
    v2 = &protocol witness table for Int;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10055CA20);
  }
  return result;
}

unint64_t sub_10037D55C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055CA50;
  if (!qword_10055CA50)
  {
    v1 = sub_100011650(&qword_10055CA48);
    v2[0] = sub_10037D5E0();
    v2[1] = sub_100012324(&qword_10055CAB8, &qword_10055CAC0, (const char *)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055CA50);
  }
  return result;
}

unint64_t sub_10037D5E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10055CA58;
  if (!qword_10055CA58)
  {
    v1 = sub_100011650(&qword_10055CA60);
    v2 = sub_10037D644();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> Group<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10055CA58);
  }
  return result;
}

unint64_t sub_10037D644()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055CA68;
  if (!qword_10055CA68)
  {
    v1 = sub_100011650(&qword_10055CA70);
    v2[0] = sub_10037D6B0();
    v2[1] = sub_10037D7E0();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055CA68);
  }
  return result;
}

unint64_t sub_10037D6B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10055CA78;
  if (!qword_10055CA78)
  {
    v1 = sub_100011650(&qword_10055CA80);
    v3[0] = sub_100011650((uint64_t *)&unk_10055DA30);
    v3[1] = sub_10037D75C();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    v2[1] = sub_100012324(&qword_10055C9A0, (uint64_t *)&unk_10055D8D0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055CA78);
  }
  return result;
}

unint64_t sub_10037D75C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055CA88;
  if (!qword_10055CA88)
  {
    v1 = sub_100011650((uint64_t *)&unk_10055DA30);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_100012324((unint64_t *)&unk_10055DA40, &qword_10055AD18, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055CA88);
  }
  return result;
}

unint64_t sub_10037D7E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055CA90;
  if (!qword_10055CA90)
  {
    v1 = sub_100011650(&qword_10055CA98);
    v2[0] = sub_10037D864();
    v2[1] = sub_100012324(&qword_10055C9A0, (uint64_t *)&unk_10055D8D0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055CA90);
  }
  return result;
}

unint64_t sub_10037D864()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10055CAA0;
  if (!qword_10055CAA0)
  {
    v1 = sub_100011650(&qword_10055CAA8);
    v2[0] = sub_10037D8D0();
    v2[1] = &protocol witness table for _FrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10055CAA0);
  }
  return result;
}

unint64_t sub_10037D8D0()
{
  unint64_t result;

  result = qword_10055CAB0;
  if (!qword_10055CAB0)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_10055CAB0);
  }
  return result;
}

uint64_t sub_10037D914()
{
  return sub_100380AC8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100377DD4);
}

uint64_t sub_10037D920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 32);
  v5[0] = *(_OWORD *)(a2 + 16);
  v5[1] = v3;
  v6 = v2;
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of CarouselView.body>>, 1);
}

double destroy for PageIndicator(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  *(_QWORD *)&result = swift_release(a1[4]).n128_u64[0];
  return result;
}

uint64_t *initializeWithCopy for PageIndicator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for PageIndicator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

_QWORD *assignWithTake for PageIndicator(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PageIndicator()
{
  return &type metadata for PageIndicator;
}

uint64_t sub_10037DB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 96);
}

void sub_10037DB2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[13];

  v9[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v9[1] = &unk_10043FFC8;
  v2 = type metadata accessor for Binding(255, *(_QWORD *)(a1 + 16));
  v3 = type metadata accessor for Optional(319, v2);
  if (v4 <= 0x3F)
  {
    v9[2] = *(_QWORD *)(v3 - 8) + 64;
    v9[3] = &unk_10043FFE0;
    v9[4] = &unk_10043FFF8;
    v9[5] = (char *)&value witness table for () + 64;
    v9[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[8] = &unk_100440010;
    v9[9] = &unk_100440010;
    sub_10038005C(319);
    if (v6 <= 0x3F)
    {
      v9[10] = *(_QWORD *)(v5 - 8) + 64;
      v9[11] = (char *)&value witness table for Builtin.Int64 + 64;
      sub_1003800B4(319);
      if (v8 <= 0x3F)
      {
        v9[12] = *(_QWORD *)(v7 - 8) + 64;
        swift_initStructMetadata(a1, 0, 13, v9, a1 + 56);
      }
    }
  }
}

uint64_t *sub_10037DC30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  size_t v77;
  unint64_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v84 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v84 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v85 = *(_DWORD *)(v5 + 84);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(_DWORD *)(v10 + 84);
  v13 = v12 & 0xF8;
  v86 = v10;
  v88 = v9;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18 & 0xF8;
  v20 = v19 | 7;
  if (*(_QWORD *)(v17 + 64) <= 8uLL)
    v21 = 8;
  else
    v21 = *(_QWORD *)(v17 + 64);
  v22 = v13 | v20 | v6;
  v23 = (v12 | v18 | v6) & 0x100000;
  v24 = *a2;
  *a1 = *a2;
  v25 = v22 == 7 && v23 == 0;
  if (!v25
    || (v26 = v6 | 7,
        v27 = ((v6 + 16) & ~(unint64_t)v6) + v8,
        v21
      + ((v19
        + 15
        + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8
        + ((v13
          + 23
          + ((((((((((((v27 + ((v6 + 32) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13 & 0xFFFFFFFFFFFFFFF8)) & ~v20)
      + 1 > 0x18))
  {
    v34 = v24 + ((v22 + 16) & ~v22);
    swift_retain(v24);
    return (uint64_t *)v34;
  }
  v74 = v13 + 23;
  v75 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  v76 = v19 | 7;
  v77 = v15 + 7;
  v78 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v79 = v19 + 15;
  v80 = v15;
  v81 = v17;
  v82 = v21;
  v83 = a1;
  v73 = v16;
  v28 = ~v26;
  v29 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)(v30 + 8);
  swift_bridgeObjectRetain();
  if (v31 < 0xFFFFFFFF)
  {
    v35 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    *(_OWORD *)v29 = v35;
  }
  else
  {
    v32 = *(_QWORD *)v30;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v33 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 8) = v33;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    swift_retain(v32);
    swift_retain(v33);
  }
  v36 = v86;
  v37 = ~v7;
  v38 = (_QWORD *)((v29 + v26 + 24) & v28);
  v39 = (uint64_t *)((v30 + v26 + 24) & v28);
  v40 = (uint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v85 & 0x80000000) == 0)
  {
    v41 = *v40;
    if ((unint64_t)*v40 >= 0xFFFFFFFF)
      LODWORD(v41) = -1;
    if ((_DWORD)v41 != -1)
      goto LABEL_21;
LABEL_23:
    v42 = *v39;
    *v38 = *v39;
    v43 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    v44 = *v40;
    *v43 = *v40;
    v87 = ((unint64_t)v43 + v7 + 8) & v37;
    v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain(v42);
    swift_retain(v44);
    v45(v87, ((unint64_t)v40 + v7 + 8) & v37, v84);
    goto LABEL_24;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)v40 + v7 + 8) & v37))
    goto LABEL_23;
LABEL_21:
  memcpy(v38, v39, v27);
LABEL_24:
  *((_BYTE *)v38 + v27) = *((_BYTE *)v39 + v27);
  v46 = ((unint64_t)v38 + v27) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)v39 + v27) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
  v48 = (_QWORD *)((v46 + 31) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)((v47 + 31) & 0xFFFFFFFFFFFFFFF8);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFF8);
  v52 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFF8);
  *v52 = *v51;
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
  *v54 = *v53;
  v55 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v56 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v57 = *v56;
  swift_retain(v50);
  if (v57 < 0xFFFFFFFF)
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
  }
  else
  {
    v58 = v56[1];
    *(_QWORD *)v55 = v57;
    *(_QWORD *)(v55 + 8) = v58;
    swift_retain(v58);
  }
  v59 = ~v76;
  v60 = (_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v61[1];
  v60[1] = v62;
  v63 = (char *)(((unint64_t)v60 + v74) & v75);
  v64 = (char *)(((unint64_t)v61 + v74) & v75);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_retain(v62);
  if (v65(v64, 1, v88))
  {
    memcpy(v63, v64, v80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v63, v64, v88);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v63, 0, 1, v88);
  }
  v66 = *(_QWORD *)((unint64_t)&v64[v77] & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)((unint64_t)&v63[v77] & 0xFFFFFFFFFFFFF8) = v66;
  *(_QWORD *)&v63[v78] = *(_QWORD *)&v64[v78];
  v67 = (_QWORD *)((unint64_t)&v63[v78 + v79] & v59);
  v68 = (uint64_t *)((unint64_t)&v64[v78 + v79] & v59);
  v69 = *((unsigned __int8 *)v68 + v82);
  swift_retain(v66);
  if (v69 >= 2)
  {
    if (v82 <= 3)
      v70 = v82;
    else
      v70 = 4;
    __asm { BR              X11 }
  }
  if (v69 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v81 + 16))(v67, v68, v73);
    *((_BYTE *)v67 + v82) = 1;
  }
  else
  {
    v71 = *v68;
    *v67 = *v68;
    *((_BYTE *)v67 + v82) = 0;
    swift_retain(v71);
  }
  return v83;
}

double sub_10037E138(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  __n128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  double result;

  v3 = (unint64_t)a1 + 15;
  swift_bridgeObjectRelease(*a1);
  v5 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
  {
    swift_release(*v5);
    v4 = swift_release(v5[1]);
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(((unint64_t)v5 + (v8 | 7) + 24) & ~(v8 | 7));
  v10 = ~v8;
  v11 = (v8 + 16) & ~v8;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v7 + 84) & 0x80000000) != 0)
  {
    v15 = v11 + v12;
    if (!(*(unsigned int (**)(unint64_t, __n128))(v7 + 48))(((unint64_t)v13 + v8 + 8) & v10, v4))
    {
LABEL_7:
      swift_release(*v9);
      v16 = swift_release(*v13);
      (*(void (**)(unint64_t, uint64_t, __n128))(v7 + 8))(((unint64_t)v13 + v8 + 8) & v10, v6, v16);
    }
  }
  else
  {
    v14 = *v13;
    if (*v13 >= 0xFFFFFFFFuLL)
      LODWORD(v14) = -1;
    v15 = v11 + v12;
    if ((_DWORD)v14 == -1)
      goto LABEL_7;
  }
  v17 = ((((unint64_t)v9 + v15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v17 + 8));
  v18 = (_QWORD *)((((((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 >= 0xFFFFFFFFuLL)
    swift_release(v18[1]);
  v19 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v19 + 8));
  v20 = type metadata accessor for ScrollViewProxy(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v23 = (v19 + v22 + 16) & ~v22;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  if (*(_DWORD *)(v21 + 84))
    v24 = *(_QWORD *)(v21 + 64);
  else
    v24 = *(_QWORD *)(v21 + 64) + 1;
  swift_release(*(_QWORD *)(((v23 | 7) + v24) & 0xFFFFFFFFFFFFF8));
  v25 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  v27 = (_QWORD *)((v23 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8) + v26 + 16) & ~v26);
  v28 = *(_QWORD *)(v25 + 64);
  if (v28 <= 8)
    v28 = 8;
  v29 = *((unsigned __int8 *)v27 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X14 }
  }
  if (v29 == 1)
    (*(void (**)(void))(v25 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v27).n128_u64[0];
  return result;
}

_QWORD *sub_10037E3E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int (*v53)(unint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v6 + 8);
  swift_bridgeObjectRetain();
  if (v7 < 0xFFFFFFFF)
  {
    v10 = *(_OWORD *)v6;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    *(_OWORD *)v5 = v10;
  }
  else
  {
    v8 = *(_QWORD *)v6;
    *(_QWORD *)v5 = *(_QWORD *)v6;
    v9 = *(_QWORD *)(v6 + 8);
    *(_QWORD *)(v5 + 8) = v9;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    swift_retain(v8);
    swift_retain(v9);
  }
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (_QWORD *)((v5 + (v13 | 7) + 24) & ~(v13 | 7));
  v15 = (uint64_t *)((v6 + (v13 | 7) + 24) & ~(v13 | 7));
  v16 = ~v13;
  v17 = (v13 + 16) & ~v13;
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v12 + 84) & 0x80000000) != 0)
  {
    v21 = v17 + v18;
    if ((*(unsigned int (**)(unint64_t))(v12 + 48))(((unint64_t)v19 + v13 + 8) & v16))
    {
LABEL_8:
      memcpy(v14, v15, v21);
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    v21 = v17 + v18;
    if ((_DWORD)v20 != -1)
      goto LABEL_8;
  }
  v22 = *v15;
  *v14 = *v15;
  v23 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v19;
  *v23 = *v19;
  v25 = v13 + 8;
  v26 = ((unint64_t)v23 + v13 + 8) & v16;
  v27 = ((unint64_t)v19 + v25) & v16;
  v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
  swift_retain(v22);
  swift_retain(v24);
  v28(v26, v27, v11);
LABEL_11:
  *((_BYTE *)v14 + v21) = *((_BYTE *)v15 + v21);
  v29 = ((unint64_t)v14 + v21) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v15 + v21) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v29 + 8) = *(_OWORD *)(v30 + 8);
  v31 = (_QWORD *)((v29 + 31) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)((v30 + 31) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFF8);
  *v35 = *v34;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  *v37 = *v36;
  v38 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (unint64_t *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = *v39;
  swift_retain(v33);
  if (v40 < 0xFFFFFFFF)
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  else
  {
    v41 = v39[1];
    *(_QWORD *)v38 = v40;
    *(_QWORD *)(v38 + 8) = v41;
    swift_retain(v41);
  }
  v42 = (_QWORD *)((v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = v43[1];
  v42[1] = v44;
  v45 = type metadata accessor for ScrollViewProxy(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_DWORD *)(v46 + 80) & 0xF8;
  v48 = v47 + 23;
  v49 = (unint64_t)v42 + v47 + 23;
  v50 = ~v47 & 0xFFFFFFFFFFFFFFF8;
  v51 = v49 & v50;
  v52 = ((unint64_t)v43 + v48) & v50;
  v53 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v46 + 48);
  swift_retain(v44);
  if (v53(v52, 1, v45))
  {
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
    if (v54)
      v56 = *(_QWORD *)(v46 + 64);
    else
      v56 = v55 + 1;
    memcpy((void *)v51, (const void *)v52, v56);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v46 + 16))(v51, v52, v45);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v45);
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
  }
  if (v54)
    v57 = v55;
  else
    v57 = v55 + 1;
  v58 = (uint64_t *)(((v52 | 7) + v57) & 0xFFFFFFFFFFFFF8);
  v59 = *v58;
  *(_QWORD *)(((v51 | 7) + v57) & 0xFFFFFFFFFFFFF8) = *v58;
  v60 = ((v57 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v61 = (_QWORD *)(v60 + v51);
  v62 = (char *)(v60 + v52);
  *v61 = *(_QWORD *)(v60 + v52);
  v63 = type metadata accessor for LayoutDirection(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xF8;
  v66 = v65 + 15;
  v67 = (unint64_t)v61 + v65 + 15;
  v68 = ~v65 & 0xFFFFFFFFFFFFFFF8;
  v69 = (_QWORD *)(v67 & v68);
  v70 = (uint64_t *)((unint64_t)&v62[v66] & v68);
  if (*(_QWORD *)(v64 + 64) <= 8uLL)
    v71 = 8;
  else
    v71 = *(_QWORD *)(v64 + 64);
  v72 = *((unsigned __int8 *)v70 + v71);
  swift_retain(v59);
  if (v72 >= 2)
  {
    if (v71 <= 3)
      v73 = v71;
    else
      v73 = 4;
    __asm { BR              X11 }
  }
  if (v72 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v64 + 16))(v69, v70, v63);
    v74 = 1;
  }
  else
  {
    v75 = *v70;
    *v69 = *v70;
    swift_retain(v75);
    v74 = 0;
  }
  *((_BYTE *)v69 + v71) = v74;
  return a1;
}

_QWORD *sub_10037E804(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t (*v72)(unint64_t, uint64_t, uint64_t);
  int v73;
  size_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  __n128 v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  int v101;
  size_t v102;
  _QWORD *v103;
  uint64_t v104;

  v4 = a1;
  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v7[1] < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      v15 = *v8;
      *v7 = *v8;
      v16 = v8[1];
      v7[1] = v16;
      v7[2] = v8[2];
      swift_retain(v15);
      swift_retain(v16);
      goto LABEL_8;
    }
  }
  else
  {
    v10 = *v7;
    if (v9 >= 0xFFFFFFFF)
    {
      v11 = *v8;
      *v7 = *v8;
      swift_retain(v11);
      swift_release(v10);
      v12 = v8[1];
      v13 = v7[1];
      v7[1] = v12;
      swift_retain(v12);
      v14 = swift_release(v13);
      v7[2] = v8[2];
      goto LABEL_8;
    }
    swift_release(*v7);
    swift_release(v7[1]);
  }
  v14 = *(__n128 *)v8;
  v7[2] = v8[2];
  *(__n128 *)v7 = v14;
LABEL_8:
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (_QWORD *)(((unint64_t)v7 + (v19 | 7) + 24) & ~(v19 | 7));
  v21 = (uint64_t *)(((unint64_t)v8 + (v19 | 7) + 24) & ~(v19 | 7));
  v22 = *(unsigned int *)(v18 + 84);
  v23 = *(_QWORD *)(v18 + 64);
  v24 = ((v19 + 16) & ~v19) + v23;
  v25 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v104 = ~v19;
  if ((v22 & 0x80000000) == 0)
  {
    v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = *v26;
    if ((unint64_t)*v26 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    if (*v25 > 0xFFFFFFFEuLL)
      goto LABEL_12;
LABEL_15:
    if (v28)
      goto LABEL_16;
    v32 = *v21;
    *v20 = *v21;
    v33 = *v26;
    *v25 = *v26;
    v34 = ((unint64_t)v25 + v19 + 8) & v104;
    v35 = ((unint64_t)v26 + v19 + 8) & v104;
    v36 = v24;
    v37 = v17;
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    swift_retain(v32);
    swift_retain(v33);
    v39 = v37;
    v24 = v36;
    v38(v34, v35, v39);
    goto LABEL_19;
  }
  v102 = ((v19 + 16) & ~v19) + v23;
  v103 = v4;
  v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v101 = v31(((unint64_t)v25 + v19 + 8) & ~v19, v22, v17, v14);
  v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = v102;
  v28 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v31)(((unint64_t)v26 + v19 + 8) & ~v19, v22, v17);
  v4 = v103;
  if (v101)
    goto LABEL_15;
LABEL_12:
  v29 = *v20;
  if (v28)
  {
    swift_release(*v20);
    v30 = swift_release(*v25);
    (*(void (**)(unint64_t, uint64_t, __n128))(v18 + 8))(((unint64_t)v25 + v19 + 8) & v104, v17, v30);
LABEL_16:
    memcpy(v20, v21, v24);
    goto LABEL_19;
  }
  v40 = *v21;
  *v20 = *v21;
  swift_retain(v40);
  swift_release(v29);
  v41 = *v26;
  v42 = *v25;
  *v25 = *v26;
  swift_retain(v41);
  v43 = swift_release(v42);
  (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v18 + 24))(((unint64_t)v25 + v19 + 8) & v104, ((unint64_t)v26 + v19 + 8) & v104, v17, v43);
LABEL_19:
  *((_BYTE *)v20 + v24) = *((_BYTE *)v21 + v24);
  v44 = ((unint64_t)v20 + v24) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v21 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
  v46 = (_QWORD *)((v44 + 31) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)((v45 + 31) & 0xFFFFFFFFFFFFFFF8);
  v48 = v47[1];
  v49 = v46[1];
  *v46 = *v47;
  v46[1] = v48;
  swift_retain(v48);
  swift_release(v49);
  v50 = (_QWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  v55 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v56 = *v55;
  if (*v54 < 0xFFFFFFFFuLL)
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v59 = v55[1];
      *v54 = v56;
      v54[1] = v59;
      swift_retain(v59);
      goto LABEL_26;
    }
  }
  else
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v57 = v55[1];
      v58 = v54[1];
      *v54 = v56;
      v54[1] = v57;
      swift_retain(v57);
      swift_release(v58);
      goto LABEL_26;
    }
    swift_release(v54[1]);
  }
  *(_OWORD *)v54 = *(_OWORD *)v55;
LABEL_26:
  v60 = (_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v60[1];
  v63 = v61[1];
  v60[1] = v63;
  swift_retain(v63);
  swift_release(v62);
  v64 = type metadata accessor for ScrollViewProxy(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(_DWORD *)(v65 + 80) & 0xF8;
  v67 = v66 + 23;
  v68 = (unint64_t)v60 + v66 + 23;
  v69 = ~v66 & 0xFFFFFFFFFFFFFFF8;
  v70 = v68 & v69;
  v71 = ((unint64_t)v61 + v67) & v69;
  v72 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v65 + 48);
  LODWORD(v60) = v72(v68 & v69, 1, v64);
  v73 = v72(v71, 1, v64);
  if ((_DWORD)v60)
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 16))(v70, v71, v64);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v70, 0, 1, v64);
      goto LABEL_35;
    }
  }
  else
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 24))(v70, v71, v64);
      goto LABEL_35;
    }
    (*(void (**)(unint64_t, uint64_t))(v65 + 8))(v70, v64);
  }
  if (*(_DWORD *)(v65 + 84))
    v74 = *(_QWORD *)(v65 + 64);
  else
    v74 = *(_QWORD *)(v65 + 64) + 1;
  memcpy((void *)v70, (const void *)v71, v74);
LABEL_35:
  if (*(_DWORD *)(v65 + 84))
    v75 = *(_QWORD *)(v65 + 64);
  else
    v75 = *(_QWORD *)(v65 + 64) + 1;
  v76 = (uint64_t *)(((v70 | 7) + v75) & 0xFFFFFFFFFFFFFFF8);
  v77 = (uint64_t *)(((v71 | 7) + v75) & 0xFFFFFFFFFFFFF8);
  v78 = *v77;
  v79 = *v76;
  *v76 = *v77;
  swift_retain(v78);
  swift_release(v79);
  v80 = ((v75 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v81 = (char *)(v80 + v70);
  v82 = (char *)(v80 + v71);
  *(_QWORD *)(v80 + v70) = *(_QWORD *)(v80 + v71);
  v83 = type metadata accessor for LayoutDirection(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(_DWORD *)(v84 + 80) & 0xF8;
  v86 = v85 + 15;
  v87 = &v81[v85 + 15];
  v88 = ~v85 & 0xFFFFFFFFFFFFFFF8;
  v89 = (_QWORD *)((unint64_t)v87 & v88);
  v90 = &v82[v86];
  v91 = (uint64_t *)((unint64_t)v90 & v88);
  if (((unint64_t)v87 & v88) != ((unint64_t)v90 & v88))
  {
    v92 = v83;
    if (*(_QWORD *)(v84 + 64) <= 8uLL)
      v93 = 8;
    else
      v93 = *(_QWORD *)(v84 + 64);
    v94 = *((unsigned __int8 *)v89 + v93);
    if (v94 >= 2)
    {
      if (v93 <= 3)
        v95 = v93;
      else
        v95 = 4;
      __asm { BR              X12 }
    }
    if (v94 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v84 + 8))(v89, v83);
    else
      v96 = swift_release(*v89);
    v97 = *((unsigned __int8 *)v91 + v93);
    if (v97 >= 2)
    {
      if (v93 <= 3)
        v98 = v93;
      else
        v98 = 4;
      __asm { BR              X12 }
    }
    if (v97 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v84 + 16))(v89, v91, v92, v96);
      *((_BYTE *)v89 + v93) = 1;
    }
    else
    {
      v99 = *v91;
      *v89 = *v91;
      *((_BYTE *)v89 + v93) = 0;
      swift_retain(v99);
    }
  }
  return v4;
}

_QWORD *sub_10037EEDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  size_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  size_t v41;
  size_t v42;
  size_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v5 + 16);
  *(_OWORD *)v4 = v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (_QWORD *)((v4 + (v9 | 7) + 24) & ~(v9 | 7));
  v11 = (_QWORD *)((v5 + (v9 | 7) + 24) & ~(v9 | 7));
  v12 = ~v9;
  v13 = (v9 + 16) & ~v9;
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) != 0)
  {
    v17 = v13 + v14;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & v12))
    {
LABEL_5:
      memcpy(v10, v11, v17);
      goto LABEL_8;
    }
  }
  else
  {
    v16 = *v15;
    if ((unint64_t)*v15 >= 0xFFFFFFFF)
      LODWORD(v16) = -1;
    v17 = v13 + v14;
    if ((_DWORD)v16 != -1)
      goto LABEL_5;
  }
  *v10 = *v11;
  v18 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v18 + v9 + 8) & v12, ((unint64_t)v15 + v9 + 8) & v12, v7);
LABEL_8:
  *((_BYTE *)v10 + v17) = *((_BYTE *)v11 + v17);
  v19 = ((unint64_t)v10 + v17) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  v21 = (_OWORD *)((v19 + 31) & 0xFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v20 + 31) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v28 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  else
  {
    v29 = *(_QWORD *)(v28 + 8);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
  }
  v30 = (_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = type metadata accessor for ScrollViewProxy(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  v35 = v34 + 23;
  v36 = (unint64_t)v30 + v34 + 23;
  v37 = ~v34 & 0xFFFFFFFFFFFFFFF8;
  v38 = v36 & v37;
  v39 = ((unint64_t)v31 + v35) & v37;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v32))
  {
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
    if (v40)
      v42 = v41;
    else
      v42 = v41 + 1;
    memcpy((void *)v38, (const void *)v39, v42);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 32))(v38, v39, v32);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v32);
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
  }
  if (v40)
    v43 = v41;
  else
    v43 = v41 + 1;
  *(_QWORD *)(((v38 | 7) + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v39 | 7) + v43) & 0xFFFFFFFFFFFFF8);
  v44 = ((v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v45 = (_QWORD *)(v44 + v38);
  v46 = (_QWORD *)(v44 + v39);
  *v45 = *v46;
  v47 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v48 = *(_DWORD *)(v47 + 80) & 0xF8;
  v49 = v48 + 15;
  v50 = (unint64_t)v45 + v48 + 15;
  v51 = ~v48 & 0xFFFFFFFFFFFFFFF8;
  v52 = (_QWORD *)(v50 & v51);
  v53 = (_QWORD *)(((unint64_t)v46 + v49) & v51);
  if (*(_QWORD *)(v47 + 64) <= 8uLL)
    v54 = 8;
  else
    v54 = *(_QWORD *)(v47 + 64);
  v55 = *((unsigned __int8 *)v53 + v54);
  if (v55 >= 2)
  {
    if (v54 <= 3)
      v56 = v54;
    else
      v56 = 4;
    __asm { BR              X13 }
  }
  if (v55 == 1)
  {
    (*(void (**)(_QWORD *))(v47 + 32))(v52);
    v57 = 1;
  }
  else
  {
    v57 = 0;
    *v52 = *v53;
  }
  *((_BYTE *)v52 + v54) = v57;
  return a1;
}

_QWORD *sub_10037F270(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t (*v57)(unint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  size_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  _QWORD *v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  __n128 v80;
  unsigned int v81;
  uint64_t v82;
  char v83;
  int v85;
  size_t v86;
  uint64_t v87;
  _QWORD *v88;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  v88 = a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = (__n128 *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (unint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if (v7->n128_u64[1] >= 0xFFFFFFFF)
  {
    v9 = v7->n128_u64[0];
    if (v8[1] >= 0xFFFFFFFF)
    {
      v7->n128_u64[0] = *v8;
      swift_release(v9);
      v10 = v7->n128_i64[1];
      v7->n128_u64[1] = v8[1];
      v11 = swift_release(v10);
      v7[1].n128_u64[0] = v8[2];
      goto LABEL_6;
    }
    swift_release(v9);
    swift_release(v7->n128_u64[1]);
  }
  v11 = *(__n128 *)v8;
  v7[1].n128_u64[0] = v8[2];
  *v7 = v11;
LABEL_6:
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (_QWORD *)(((unint64_t)&v7[1].n128_u64[1] + (v14 | 7)) & ~(v14 | 7));
  v16 = (_QWORD *)(((unint64_t)v8 + (v14 | 7) + 24) & ~(v14 | 7));
  v17 = *(unsigned int *)(v13 + 84);
  v18 = ~v14;
  v19 = *(_QWORD *)(v13 + 64);
  v20 = ((v14 + 16) & ~v14) + v19;
  v21 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v87 = ~v14;
  if ((v17 & 0x80000000) == 0)
  {
    v22 = v12;
    v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    if ((unint64_t)*v23 >= 0xFFFFFFFF)
      LODWORD(v24) = -1;
    v25 = v24 + 1;
    if (*v21 > 0xFFFFFFFEuLL)
      goto LABEL_10;
LABEL_13:
    if (v25)
      goto LABEL_14;
    *v15 = *v16;
    *v21 = *v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
    goto LABEL_17;
  }
  v86 = ((v14 + 16) & ~v14) + v19;
  v28 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v13 + 48);
  v85 = v28(((unint64_t)v21 + v14 + 8) & v18, v17, v12, v11);
  v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = v17;
  v22 = v12;
  v25 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v28)(((unint64_t)v23 + v14 + 8) & v18, v29, v12);
  v20 = v86;
  if (v85)
    goto LABEL_13;
LABEL_10:
  v26 = *v15;
  if (v25)
  {
    swift_release(*v15);
    v27 = swift_release(*v21);
    (*(void (**)(unint64_t, uint64_t, __n128))(v13 + 8))(((unint64_t)v21 + v14 + 8) & v87, v22, v27);
LABEL_14:
    memcpy(v15, v16, v20);
    goto LABEL_17;
  }
  *v15 = *v16;
  swift_release(v26);
  v30 = *v21;
  *v21 = *v23;
  swift_release(v30);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
LABEL_17:
  *((_BYTE *)v15 + v20) = *((_BYTE *)v16 + v20);
  v31 = ((unint64_t)v15 + v20) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v16 + v20) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  v33 = (v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v32 + 31) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_OWORD *)v34;
  v34 += 23;
  *(_OWORD *)v33 = v36;
  swift_release(v35);
  v37 = (_QWORD *)((v33 + 23) & 0xFFFFFFFFFFFFF8);
  *v37 = *(_QWORD *)(v34 & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((v34 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (unint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  if (*v40 < 0xFFFFFFFFuLL)
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v45 = v41[1];
      *v40 = v42;
      v40[1] = v45;
      goto LABEL_24;
    }
  }
  else
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v43 = v41[1];
      v44 = v40[1];
      *v40 = v42;
      v40[1] = v43;
      swift_release(v44);
      goto LABEL_24;
    }
    swift_release(v40[1]);
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_24:
  v46 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = v46[1];
  v46[1] = v47[1];
  swift_release(v48);
  v49 = type metadata accessor for ScrollViewProxy(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(_DWORD *)(v50 + 80) & 0xF8;
  v52 = v51 + 23;
  v53 = (unint64_t)v46 + v51 + 23;
  v54 = ~v51 & 0xFFFFFFFFFFFFFFF8;
  v55 = v53 & v54;
  v56 = ((unint64_t)v47 + v52) & v54;
  v57 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v50 + 48);
  v58 = v57(v53 & v54, 1, v49);
  v59 = v57(v56, 1, v49);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 32))(v55, v56, v49);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v49);
      goto LABEL_33;
    }
  }
  else
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 40))(v55, v56, v49);
      goto LABEL_33;
    }
    (*(void (**)(unint64_t, uint64_t))(v50 + 8))(v55, v49);
  }
  if (*(_DWORD *)(v50 + 84))
    v60 = *(_QWORD *)(v50 + 64);
  else
    v60 = *(_QWORD *)(v50 + 64) + 1;
  memcpy((void *)v55, (const void *)v56, v60);
LABEL_33:
  if (*(_DWORD *)(v50 + 84))
    v61 = *(_QWORD *)(v50 + 64);
  else
    v61 = *(_QWORD *)(v50 + 64) + 1;
  v62 = (uint64_t *)(((v55 | 7) + v61) & 0xFFFFFFFFFFFFFFF8);
  v63 = *v62;
  *v62 = *(_QWORD *)(((v56 | 7) + v61) & 0xFFFFFFFFFFFFF8);
  swift_release(v63);
  v64 = ((v61 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v65 = (char *)(v64 + v55);
  v66 = (char *)(v64 + v56);
  *(_QWORD *)(v64 + v55) = *(_QWORD *)(v64 + v56);
  v67 = type metadata accessor for LayoutDirection(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(_DWORD *)(v68 + 80) & 0xF8;
  v70 = v69 + 15;
  v71 = &v65[v69 + 15];
  v72 = ~v69 & 0xFFFFFFFFFFFFFFF8;
  v73 = (_QWORD *)((unint64_t)v71 & v72);
  v74 = &v66[v70];
  v75 = (_QWORD *)((unint64_t)v74 & v72);
  if (((unint64_t)v71 & v72) != ((unint64_t)v74 & v72))
  {
    v76 = v67;
    if (*(_QWORD *)(v68 + 64) <= 8uLL)
      v77 = 8;
    else
      v77 = *(_QWORD *)(v68 + 64);
    v78 = *((unsigned __int8 *)v73 + v77);
    if (v78 >= 2)
    {
      if (v77 <= 3)
        v79 = v77;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v68 + 8))(v73, v67);
    else
      v80 = swift_release(*v73);
    v81 = *((unsigned __int8 *)v75 + v77);
    if (v81 >= 2)
    {
      if (v77 <= 3)
        v82 = v77;
      else
        v82 = 4;
      __asm { BR              X12 }
    }
    if (v81 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v68 + 32))(v73, v75, v76, v80);
      v83 = 1;
    }
    else
    {
      v83 = 0;
      *v73 = *v75;
    }
    *((_BYTE *)v73 + v77) = v83;
  }
  return v88;
}

uint64_t sub_10037F890(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;

  v37 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = v7 - 1;
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  if (v8 <= v12)
    v13 = v12;
  else
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  if ((_DWORD)v11)
    v17 = 7;
  else
    v17 = 8;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = v18 | 7;
  v20 = ((v18 + 16) & ~v18) + *(_QWORD *)(v5 + 64);
  v21 = *(_DWORD *)(v10 + 80) & 0xF8;
  v22 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 + 23;
  if (a2 <= v14)
    goto LABEL_40;
  v24 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v25 = v16
      + ((((v17 + *(_QWORD *)(v10 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + v24
        + ((v23
          + ((((((((((((v20 + ((v18 + 32) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v22)
        + 16) & ~v24)
      + 1;
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v29 = ((a2 - v14 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v29))
    {
      v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 > 0xFF)
    {
      v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(_WORD *)((char *)a1 + v25))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 < 2)
    {
LABEL_40:
      if ((v13 & 0x80000000) != 0)
      {
        v33 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v19 + 24) & ~v19;
        if (v8 == v14)
        {
          v34 = (uint64_t *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v6 & 0x80000000) != 0)
          {
            v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)v34 + v18 + 8) & ~v18, v6, v37);
          }
          else
          {
            v35 = *v34;
            if ((unint64_t)*v34 >= 0xFFFFFFFF)
              LODWORD(v35) = -1;
            v36 = v35 + 1;
          }
        }
        else
        {
          v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v23+ ((((((((((((v33 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v22, v11, v9);
        }
        if (v36 >= 2)
          return v36 - 1;
        else
          return 0;
      }
      else
      {
        v32 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v32) = -1;
        return (v32 + 1);
      }
    }
  }
  v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((_BYTE *)a1 + v25))
    goto LABEL_40;
LABEL_31:
  v30 = (v27 - 1) << v26;
  if (v25 > 3)
    v30 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v31 = v25;
    else
      v31 = 4;
    __asm { BR              X11 }
  }
  return v14 + v30 + 1;
}

void sub_10037FBB0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  unsigned int v22;
  int v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = 0;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v19;
  v20 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v18 = *(_DWORD *)(v8 + 80) & 0xF8;
  v17 = *(unsigned __int8 *)(v5 + 80);
  v21 = v16
      + ((((v19 + 7) & 0xFFFFFFFFFFFFFFF8)
        + v20
        + ((v18
          + 23
          + ((((((((((((((v17 + 16) & ~v17) + *(_QWORD *)(v5 + 64) + ((v17 + 32) & ~(v17 | 7))) & 0xFFFFFFFFFFFFFFF8)
                    + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18 & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v20)
      + 1;
  if (a3 > v13)
  {
    if (v21 <= 3)
    {
      v22 = ((a3 - v13 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v22))
      {
        v14 = &dword_100000004;
      }
      else if (v22 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v22 > 1;
      }
    }
    else
    {
      v14 = &_mh_execute_header.magic + 1;
    }
  }
  if (v13 < a2)
  {
    v23 = ~v13 + a2;
    if (v21 < 4)
    {
      if ((_DWORD)v21)
      {
        v24 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if ((_DWORD)v21 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if ((_DWORD)v21 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_10037FF80()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_10037FF88()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_10038000C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_10038001C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_100380024()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_10038005C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055CB50)
  {
    v2 = sub_100011650(&qword_10055C9F0);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055CB50);
  }
}

void sub_1003800B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055CB58)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055CB58);
  }
}

uint64_t sub_100380108(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t TupleTypeMetadata2;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  uint64_t OpaqueTypeConformance2;
  uint64_t v71;
  void *v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;

  v1 = (void *)*a1;
  v2 = a1[1];
  v4 = a1[3];
  v3 = a1[4];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, *a1, 0, 0);
  v5 = type metadata accessor for Array(255);
  v71 = v2;
  v72 = &type metadata for Int;
  v73 = v3;
  v74 = &protocol witness table for Int;
  v6 = type metadata accessor for IDView(255, &v71);
  WitnessTable = swift_getWitnessTable((const char *)&protocol conformance descriptor for IDView<A, B>, v6);
  v71 = v6;
  v72 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v60 = v5;
  v61 = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v5);
  v71 = v5;
  v72 = v1;
  v73 = OpaqueTypeMetadata2;
  v74 = (void *)v61;
  v75 = v4;
  v9 = v4;
  v10 = type metadata accessor for ForEach(255, &v71);
  v71 = v6;
  v72 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v11 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v10, &OpaqueTypeConformance2);
  v12 = type metadata accessor for LazyHStack(255, v10, v11);
  v13 = sub_100011650(&qword_10055C9F8);
  v14 = type metadata accessor for ModifiedContent(255, v12, v13);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v16 = sub_100011650(&qword_10055CA00);
  v17 = type metadata accessor for ModifiedContent(255, v15, v16);
  v18 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _AppearanceActionModifier);
  v19 = sub_100011650(&qword_10055CA08);
  v69[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for LazyHStack<A>, v12);
  v69[1] = sub_100012324(&qword_10055CA10, &qword_10055C9F8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
  v68[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v14, v69);
  v68[1] = &protocol witness table for _PaddingLayout;
  v67[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v15, v68);
  v67[1] = sub_100012324(&qword_10055CA18, &qword_10055CA00, (const char *)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v66[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v17, v67);
  v66[1] = &protocol witness table for _AppearanceActionModifier;
  v20 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v18, v66);
  v21 = sub_10037D500();
  v71 = v18;
  v72 = (void *)v19;
  v73 = v20;
  v74 = (void *)v21;
  v22 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v23 = type metadata accessor for Optional(255, v1);
  v71 = v18;
  v72 = (void *)v19;
  v73 = v20;
  v74 = (void *)v21;
  v24 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v65 = *(_QWORD *)(v9 + 8);
  v25 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v23, &v65);
  v71 = v22;
  v72 = (void *)v23;
  v73 = v24;
  v74 = (void *)v25;
  v26 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v71 = v22;
  v72 = (void *)v23;
  v73 = v24;
  v74 = (void *)v25;
  v27 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v28 = type metadata accessor for PagingScrollView(255, v26, v27);
  v29 = sub_100011650(&qword_10055CA28);
  v30 = type metadata accessor for ModifiedContent(255, v28, v29);
  v64[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for PagingScrollView<A>, v28);
  v64[1] = sub_100012324(&qword_10055CA30, &qword_10055CA28, (const char *)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v31 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v30, v64);
  v71 = v30;
  v72 = (void *)v31;
  v32 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v71 = v30;
  v72 = (void *)v31;
  v33 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v71 = v32;
  v72 = (void *)v33;
  v34 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v71 = v32;
  v72 = (void *)v33;
  v35 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v71 = v34;
  v72 = (void *)v35;
  v36 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v71 = v34;
  v72 = (void *)v35;
  v37 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v38 = type metadata accessor for GeometryReader(255, v36, v37);
  v39 = type metadata accessor for ModifiedContent(255, v38, &type metadata for _FrameLayout);
  v63[0] = swift_getWitnessTable((const char *)&protocol conformance descriptor for GeometryReader<A>, v38);
  v63[1] = &protocol witness table for _FrameLayout;
  v40 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v39, v63);
  v41 = type metadata accessor for ScrollViewReader(255, v39, v40);
  v42 = type metadata accessor for ModifiedContent(255, v41, &type metadata for _FrameLayout);
  v43 = sub_100011650(&qword_10055CA38);
  v71 = v60;
  v72 = v1;
  v73 = v43;
  v74 = (void *)v61;
  v75 = v9;
  v44 = type metadata accessor for ForEach(255, &v71);
  v45 = sub_100011650(&qword_10055CA40);
  v46 = sub_100011650(&qword_10055CA48);
  v47 = type metadata accessor for AutomaticHoverEffect(255);
  v48 = sub_10037D55C();
  v49 = sub_10001254C(qword_10055CAC8, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v71 = v46;
  v72 = (void *)v47;
  v73 = v48;
  v74 = (void *)v49;
  v50 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v71 = v45;
  v72 = (void *)v50;
  v62 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v51 = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v44, &v62);
  v52 = type metadata accessor for HStack(255, v44, v51);
  v53 = type metadata accessor for ModifiedContent(255, v52, &type metadata for _FrameLayout);
  v54 = type metadata accessor for Optional(255, v53);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v42, v54, 0, 0);
  v56 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v57 = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleView<A>, v56);
  v58 = type metadata accessor for VStack(255, v56, v57);
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for VStack<A>, v58);
}

ValueMetadata *type metadata accessor for ScrollViewOffsetKey()
{
  return &type metadata for ScrollViewOffsetKey;
}

void sub_100380750()
{
  qword_10055C9E8 = 0;
}

double sub_10038075C@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_100557FB8 != -1)
    swift_once(&qword_100557FB8, sub_100380750);
  result = *(double *)&qword_10055C9E8;
  *a1 = qword_10055C9E8;
  return result;
}

double sub_1003807AC(double *a1, void (*a2)(double *__return_ptr))
{
  double result;
  double v4;

  a2(&v4);
  result = v4 + *a1;
  *a1 = result;
  return result;
}

double sub_1003807F8@<D0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = (void *)v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = (_QWORD *)v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_1003789D8(a1, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_10038088C()
{
  return sub_100380AC8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10037C130);
}

double sub_100380898()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v0 = (void *)objc_opt_self(UITraitCollection);
  v1 = objc_msgSend(v0, "currentTraitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)6)
    v3 = 10;
  else
    v3 = 8;
  v4 = objc_msgSend(v0, "currentTraitCollection");
  objc_msgSend(v4, "userInterfaceIdiom");

  return (double)v3;
}

unint64_t sub_10038094C()
{
  unint64_t result;

  result = qword_10055CB70;
  if (!qword_10055CB70)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_10055CB70);
  }
  return result;
}

uint64_t sub_100380994(uint64_t a1, uint64_t a2)
{
  return sub_100381204(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037C610);
}

uint64_t sub_1003809AC()
{
  uint64_t v0;

  return sub_10037D150(*(_QWORD **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1003809E4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = v2[6];
  v15[0] = v2[2];
  v5 = (void *)v15[0];
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  v15[4] = v9;
  v10 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v15) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_100379108(a1, (_QWORD *)((char *)v2 + v11), (uint64_t)v2 + ((v11 + v12 + v13) & ~v13), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_100380AA4@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100379AC0(*(_QWORD **)(v1 + 56), *(void (**)(char *, char *, uint64_t))(v1 + 72), *(double (**)@<D0>(uint64_t@<X8>))(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 48), a1, *(double *)(v1 + 64));
}

uint64_t sub_100380ABC()
{
  return sub_100380AC8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10037A994);
}

uint64_t sub_100380AC8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100380AE0(double *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v10[0] = v1[2];
  v3 = v10[0];
  v10[1] = v4;
  v10[2] = v5;
  v10[3] = v6;
  v10[4] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v10) - 8) + 80);
  return sub_10037B378(a1, (_QWORD *)((char *)v1 + ((v8 + 56) & ~v8)), v3, v4, v5, v6, v7);
}

unint64_t sub_100380B6C()
{
  unint64_t result;

  result = qword_10055CBB0;
  if (!qword_10055CBB0)
  {
    result = swift_getWitnessTable(byte_100440054, &type metadata for ScrollViewOffsetKey);
    atomic_store(result, (unint64_t *)&qword_10055CBB0);
  }
  return result;
}

unint64_t sub_100380BB0()
{
  unint64_t result;

  result = qword_10055CBB8;
  if (!qword_10055CBB8)
  {
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10055CBB8);
  }
  return result;
}

uint64_t sub_100380BF8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v26 = *(_OWORD *)(v0 + 16);
  v27[0] = v26;
  v27[1] = v2;
  v28 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v27);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v25 = *(_QWORD *)(v4 + 64);
  v6 = type metadata accessor for ScrollViewProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v24 = *(_QWORD *)(v7 + 64);
  v9 = v0 + ((v5 + 56) & ~v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v9 + 16))
  {
    swift_release(*(_QWORD *)(v9 + 8));
    swift_release(*(_QWORD *)(v9 + 16));
  }
  v10 = (char *)(v9 + v3[16]);
  v11 = type metadata accessor for Binding(0, v26);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_release(*(_QWORD *)v10);
    v12 = swift_release(*((_QWORD *)v10 + 1));
    (*(void (**)(char *, _QWORD, __n128))(*(_QWORD *)(v26 - 8) + 8))(&v10[*(int *)(v11 + 32)], v26, v12);
  }
  swift_release(*(_QWORD *)(v9 + v3[19] + 8));
  v13 = (_QWORD *)(v9 + v3[22]);
  if (*v13)
    swift_release(v13[1]);
  v14 = swift_release(*(_QWORD *)(v9 + v3[23] + 8));
  v15 = v9 + v3[24];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v15, 1, v6, v14))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
  v16 = sub_10000B4C8(&qword_10055CB60);
  swift_release(*(_QWORD *)(v15 + *(int *)(v16 + 28)));
  v17 = (_QWORD *)(v9 + v3[26]);
  v18 = sub_10000B4C8((uint64_t *)&unk_100558290);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    v20 = swift_release(*v17);
  }
  v21 = (((v5 + 56) & ~v5) + v25 + v8) & ~v8;
  v22 = v21 + v24;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v21, v6, v20);
  return swift_deallocObject(v0, v22, v5 | v8 | 7);
}

