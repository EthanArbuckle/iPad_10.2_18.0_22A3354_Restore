unint64_t sub_100005C00()
{
  unint64_t result;

  result = qword_100547920;
  if (!qword_100547920)
  {
    result = swift_getWitnessTable(&unk_10042457C, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100547920);
  }
  return result;
}

uint64_t sub_100005C44(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v10[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 == 1)
    {
      v6 = 0x80000001004444F0;
      v7 = 0xD000000000000019;
    }
    else
    {
      v7 = 0x43206C61626F6C47;
      v6 = 0xED00007374726168;
    }
  }
  else
  {
    v7 = 0x6168432079746943;
    v6 = 0xEB00000000737472;
  }
  v8 = String.LocalizationValue.init(stringLiteral:)(v7, v6);
  static Locale.current.getter(v8);
  return String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v3, 0, 0, 256);
}

void sub_100005D8C(_QWORD *a1@<X8>)
{
  *a1 = &off_1004F8C78;
}

uint64_t sub_100005D9C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F697461636F6CLL;
  if (*v0 != 1)
    v1 = 0x437972746E756F63;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_100005DFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10000DE1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t variable initialization expression of _NSRange.NSRangeIterator.current()
{
  return 0;
}

void sub_100005E2C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100005E38(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000116D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100005E60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000116D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100005E88(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  __int128 v20;

  v3 = v1;
  v5 = sub_10000B4C8(&qword_100547C38);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_1000116D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys, v11, v9, v10);
  v20 = *v3;
  v19 = 0;
  v12 = sub_100011714();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v19, v5, &type metadata for MusicItemID, v12);
  if (!v2)
  {
    v13 = *((_QWORD *)v3 + 2);
    v14 = *((_QWORD *)v3 + 3);
    LOBYTE(v20) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v20, v5);
    v15 = *((_QWORD *)v3 + 4);
    v16 = *((_QWORD *)v3 + 5);
    LOBYTE(v20) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_100005FDC()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];
  __int128 v8;

  Hasher.init(_seed:)(v7);
  v8 = *v0;
  v1 = v8;
  swift_bridgeObjectRetain();
  String.hash(into:)(v7, v1, *((_QWORD *)&v1 + 1));
  sub_1000117BC((uint64_t)&v8);
  v2 = *((_QWORD *)v0 + 2);
  v3 = *((_QWORD *)v0 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = *((_QWORD *)v0 + 5);
  if (v4)
  {
    v5 = *((_QWORD *)v0 + 4);
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v7, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1000060B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_100006184()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  Hasher.init(_seed:)(v8);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

double sub_100006254@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_10000DF88(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100006294(_QWORD *a1)
{
  return sub_100005E88(a1);
}

uint64_t sub_1000062A8(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s9MusicCore15SharedListeningO8ReactionV23__derived_struct_equalsySbAE_AEtFZ_0(v7, v8) & 1;
}

uint64_t sub_1000062EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  void *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  Swift::String v37;
  void *v38;
  uint64_t *v39;
  uint64_t v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  Swift::String v51;
  Swift::String v52;
  void *v53;
  Swift::String v54;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  unint64_t v60;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = 0x287472616843;
  v60 = 0xE600000000000000;
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v58._object);
  strcpy((char *)&v58, "fetchDate: \"");
  BYTE5(v58._object) = 0;
  HIWORD(v58._object) = -5120;
  v5 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 2108450;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  v9 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v9);
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v58._object);
  v58._countAndFlagsBits = 0x617A696C61636F6CLL;
  v58._object = (void *)0xEF22203A6E6F6974;
  v10 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v11 = (uint64_t *)(v0 + v10[5]);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain();
  v14 = Optional<A>.description.getter(v12, v13);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 2108450;
  v18._object = (void *)0xE300000000000000;
  String.append(_:)(v18);
  v19 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v19);
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v58._object);
  v58._countAndFlagsBits = 0xD000000000000012;
  v58._object = (void *)0x8000000100444450;
  if (qword_100547760 != -1)
    swift_once(&qword_100547760, sub_1000067CC);
  v20 = sub_10000D78C((uint64_t)v10, (uint64_t)qword_1005611C0);
  if ((sub_10000E1D4(v1, v20) & 1) != 0)
  {
    v22 = 0x4072C00000000000;
LABEL_12:
    v21.n128_u64[0] = v22;
    goto LABEL_13;
  }
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (!qword_1005613B0)
  {
    v22 = 0x40D5180000000000;
    goto LABEL_12;
  }
  v21.n128_u64[0] = sub_10009EDFC();
  if ((v23 & 1) != 0)
    v21.n128_f64[0] = 21600.0;
LABEL_13:
  Date.addingTimeInterval(_:)(v21);
  v24 = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v4, v2);
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v26);
  v28._countAndFlagsBits = 2108450;
  v28._object = (void *)0xE300000000000000;
  String.append(_:)(v28);
  v29 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v29);
  v58._countAndFlagsBits = 0x22203A6469;
  v58._object = (void *)0xE500000000000000;
  v30 = (uint64_t *)(v1 + v10[6]);
  v31 = *v30;
  v32 = v30[1];
  swift_bridgeObjectRetain();
  v33 = MusicItemID.description.getter(v31, v32);
  v35 = v34;
  swift_bridgeObjectRelease(v32);
  v36._countAndFlagsBits = v33;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v35);
  v37._countAndFlagsBits = 2108450;
  v37._object = (void *)0xE300000000000000;
  String.append(_:)(v37);
  v38 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v38);
  strcpy((char *)&v58, "title: \"");
  BYTE1(v58._object) = 0;
  WORD1(v58._object) = 0;
  HIDWORD(v58._object) = -402653184;
  v39 = (uint64_t *)(v1 + v10[7]);
  v40 = *v39;
  v41 = (void *)v39[1];
  swift_bridgeObjectRetain();
  v42._countAndFlagsBits = v40;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v41);
  v43._countAndFlagsBits = 2108450;
  v43._object = (void *)0xE300000000000000;
  String.append(_:)(v43);
  v44 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v44);
  strcpy((char *)&v58, "items: \"");
  BYTE1(v58._object) = 0;
  WORD1(v58._object) = 0;
  HIDWORD(v58._object) = -402653184;
  v45 = *(_QWORD *)(v1 + v10[8]);
  v46 = type metadata accessor for WidgetMusicItem(0);
  v47 = swift_bridgeObjectRetain();
  v48 = Array.description.getter(v47, v46);
  v50 = v49;
  swift_bridgeObjectRelease(v45);
  v51._countAndFlagsBits = v48;
  v51._object = v50;
  String.append(_:)(v51);
  swift_bridgeObjectRelease(v50);
  v52._countAndFlagsBits = 2108450;
  v52._object = (void *)0xE300000000000000;
  String.append(_:)(v52);
  v53 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v53);
  v54._countAndFlagsBits = 41;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  return v59;
}

uint64_t sub_1000067CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v0 = type metadata accessor for WidgetMusicItem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  sub_10000D924((uint64_t)v13, qword_1005611C0);
  v14 = sub_10000D78C((uint64_t)v13, (uint64_t)qword_1005611C0);
  v39 = v12;
  static Date.now.getter(v14);
  v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16 = objc_msgSend(v15, "preferredLocalizations");

  v17 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String);
  if (v17[2])
  {
    v18 = v17[4];
    v37 = v17[5];
    v38 = v18;
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = 0;
    v38 = 0;
  }
  swift_bridgeObjectRelease(v17);
  v19 = MusicItemID.init(_:)(0, 0xE000000000000000);
  v35 = v20;
  v36 = v19;
  v21 = String.LocalizationValue.init(stringLiteral:)(0x7261684320706F54, 0xEA00000000007374);
  static Locale.current.getter(v21);
  v22 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
  v24 = v23;
  if (qword_100547848 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v25 = sub_10000D78C(v0, (uint64_t)qword_100561330);
  sub_10000D964(v25, (uint64_t)v3, type metadata accessor for WidgetMusicItem);
  v26 = static Array._allocateBufferUninitialized(minimumCapacity:)(10, v0);
  *(_QWORD *)(v26 + 16) = 10;
  v27 = v26 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10000D964((uint64_t)v3, v27, type metadata accessor for WidgetMusicItem);
  v28 = *(_QWORD *)(v1 + 72);
  sub_10000D964((uint64_t)v3, v27 + v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 2 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 3 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 4 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 5 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 6 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 7 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v27 + 8 * v28, type metadata accessor for WidgetMusicItem);
  sub_10000DB44((uint64_t)v3, v27 + 9 * v28, type metadata accessor for WidgetMusicItem);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v14, v39, v41);
  v30 = (_QWORD *)(v14 + v13[5]);
  v31 = v37;
  *v30 = v38;
  v30[1] = v31;
  v32 = (uint64_t *)(v14 + v13[6]);
  v33 = v35;
  *v32 = v36;
  v32[1] = v33;
  v34 = (uint64_t *)(v14 + v13[7]);
  *v34 = v22;
  v34[1] = v24;
  *(_QWORD *)(v14 + v13[8]) = v26;
  return result;
}

uint64_t sub_100006B84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for Playlist(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[10] = v5;
  v2[11] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100547B20);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v2[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[14] = v8;
  v2[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100006C34, 0, 0);
}

uint64_t sub_100006C34(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;

  static Date.now.getter(a1);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = objc_msgSend(v2, "preferredLocalizations");

  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v4 + 32);
    v6 = swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v6 = 0;
  }
  *(_QWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 136) = v6;
  v7 = *(_QWORD *)(v1 + 96);
  v8 = swift_bridgeObjectRelease(v4);
  *(_QWORD *)(v1 + 16) = Playlist.id.getter(v8);
  *(_QWORD *)(v1 + 24) = v9;
  *(_QWORD *)(v1 + 32) = Playlist.name.getter();
  *(_QWORD *)(v1 + 40) = v10;
  Playlist.tracks.getter();
  v11 = sub_10000B4C8(&qword_100547B28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v7, 1, v11) == 1)
  {
    sub_100011694(*(_QWORD *)(v1 + 96), &qword_100547B20);
    v12 = *(_QWORD *)(v1 + 40);
    v13 = *(_QWORD *)(v1 + 16);
    v14 = *(_QWORD *)(v1 + 24);
    v15 = *(_QWORD *)(v1 + 128);
    v16 = *(_QWORD *)(v1 + 136);
    v18 = *(_QWORD *)(v1 + 112);
    v17 = *(_QWORD *)(v1 + 120);
    v19 = *(_QWORD *)(v1 + 104);
    v41 = *(_QWORD *)(v1 + 32);
    v42 = *(_QWORD *)(v1 + 96);
    v44 = *(_QWORD *)(v1 + 88);
    v20 = *(_QWORD *)(v1 + 48);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 8))(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v20, v17, v19);
    v21 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v22 = (_QWORD *)(v20 + v21[5]);
    *v22 = v15;
    v22[1] = v16;
    v23 = (_QWORD *)(v20 + v21[6]);
    *v23 = v13;
    v23[1] = v14;
    v24 = (_QWORD *)(v20 + v21[7]);
    *v24 = v41;
    v24[1] = v12;
    *(_QWORD *)(v20 + v21[8]) = _swiftEmptyArrayStorage;
    swift_task_dealloc(v17);
    swift_task_dealloc(v42);
    swift_task_dealloc(v44);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v27 = *(_QWORD *)(v1 + 80);
    v26 = *(_QWORD *)(v1 + 88);
    v28 = *(_QWORD *)(v1 + 64);
    v29 = *(_QWORD *)(v1 + 72);
    v30 = *(_QWORD *)(v1 + 56);
    v31 = sub_10006B8A4(10);
    v45 = v32;
    v34 = v33;
    v36 = v35;
    *(_QWORD *)(v1 + 144) = v31;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v26, v30, v28);
    v37 = *(unsigned __int8 *)(v29 + 80);
    v38 = (v37 + 16) & ~v37;
    v39 = swift_allocObject(&unk_1004F9238, v38 + v27, v37 | 7);
    *(_QWORD *)(v1 + 152) = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v39 + v38, v26, v28);
    v43 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A5C0
                                                                                      + dword_10054A5C0);
    v40 = (_QWORD *)swift_task_alloc(unk_10054A5C4);
    *(_QWORD *)(v1 + 160) = v40;
    *v40 = v1;
    v40[1] = sub_100006EE8;
    return v43(&unk_100547B38, v39, v31, v45, v34, v36);
  }
}

uint64_t sub_100006EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc(v2);
  swift_unknownObjectRelease(v4);
  swift_release(v3);
  return swift_task_switch(sub_100006F58, 0, 0);
}

uint64_t sub_100006F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v6, v8);
  v10 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v11 = (_QWORD *)(v2 + v10[5]);
  *v11 = v5;
  v11[1] = v4;
  v12 = (_QWORD *)(v2 + v10[6]);
  *v12 = v3;
  v12[1] = v1;
  v13 = (_QWORD *)(v2 + v10[7]);
  *v13 = v16;
  v13[1] = v15;
  *(_QWORD *)(v2 + v10[8]) = v18;
  swift_task_dealloc(v6);
  swift_task_dealloc(v9);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100007044(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  _QWORD v30[2];

  v3 = v1;
  v5 = sub_10000B4C8(&qword_100547DD0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_100012484();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys, &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys, v11, v9, v10);
  LOBYTE(v30[0]) = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_10001254C(&qword_100547DE0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, v30, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v15 = (uint64_t *)(v3 + v14[5]);
    v16 = *v15;
    v17 = v15[1];
    LOBYTE(v30[0]) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, v30, v5);
    v18 = (uint64_t *)(v3 + v14[6]);
    v20 = *v18;
    v19 = v18[1];
    v30[0] = v20;
    v30[1] = v19;
    v29 = 2;
    v21 = sub_100011714();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v29, v5, &type metadata for MusicItemID, v21);
    v22 = (uint64_t *)(v3 + v14[7]);
    v23 = *v22;
    v24 = v22[1];
    LOBYTE(v30[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v23, v24, v30, v5);
    v30[0] = *(_QWORD *)(v3 + v14[8]);
    v29 = 4;
    v25 = sub_10000B4C8(&qword_100547DE8);
    v26 = sub_1000124C8(&qword_100547DF0, &qword_100547DF8, (uint64_t)&unk_100425A20, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v29, v5, v25, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100007284@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  _QWORD v40[2];
  char v41;

  v34 = a2;
  v35 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v36 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_10000B4C8(&qword_100547E00);
  v5 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  sub_10000D900(a1, v12);
  v13 = sub_100012484();
  v38 = v7;
  v14 = v39;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys, &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys, v13, v12, v11);
  if (v14)
    return sub_100011758(a1);
  v33 = v5;
  v39 = a1;
  v15 = (uint64_t)v10;
  LOBYTE(v40[0]) = 0;
  v16 = sub_10001254C(&qword_100547E08, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v18 = v35;
  v17 = v36;
  v19 = v37;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v36, v35, v40, v37, v35, v16);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(v15, v17, v18);
  LOBYTE(v40[0]) = 1;
  v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v40, v19);
  v21 = (uint64_t *)(v15 + v8[5]);
  *v21 = v20;
  v21[1] = v22;
  v41 = 2;
  v23 = sub_100011778();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v40, &type metadata for MusicItemID, &v41, v19, &type metadata for MusicItemID, v23);
  v24 = v40[1];
  v25 = (_QWORD *)(v15 + v8[6]);
  *v25 = v40[0];
  v25[1] = v24;
  LOBYTE(v40[0]) = 3;
  v26 = KeyedDecodingContainer.decode(_:forKey:)(v40, v37);
  v27 = (uint64_t *)(v15 + v8[7]);
  *v27 = v26;
  v27[1] = v28;
  v29 = sub_10000B4C8(&qword_100547DE8);
  v41 = 4;
  v30 = sub_1000124C8(&qword_100547E10, &qword_100547E18, (uint64_t)&unk_100425A48, (const char *)&protocol conformance descriptor for <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v40, v29, &v41, v37, v29, v30);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v37);
  *(_QWORD *)(v15 + v8[8]) = v40[0];
  sub_10000D964(v15, v34, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_100011758(v39);
  return sub_10000E750(v15, type metadata accessor for TopChartsWidgetDataProvider.Chart);
}

uint64_t sub_10000769C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1000076D0 + 4 * byte_1004244D0[*v0]))(0x7461446863746566, 0xE900000000000065);
}

uint64_t sub_1000076D0()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_1000076F0()
{
  return 25705;
}

uint64_t sub_1000076FC()
{
  return 0x656C746974;
}

uint64_t sub_100007710()
{
  return 0x736D657469;
}

uint64_t sub_100007724@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10000E914(a1, a2);
  *a3 = result;
  return result;
}

void sub_100007748(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100007754(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100012484();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000777C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100012484();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000077A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100007284(a1, a2);
}

uint64_t sub_1000077B8(_QWORD *a1)
{
  return sub_100007044(a1);
}

double sub_1000077D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v1 = v0;
  v2 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100547770 != -1)
    swift_once(&qword_100547770, sub_10000D72C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_10000D78C(v5, (uint64_t)qword_100547778);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Pre-warming descriptor cache", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject(&unk_1004F9288, 40, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v1;
  swift_retain(v1);
  v12 = sub_100007C7C((uint64_t)v4, (uint64_t)&unk_100547B90, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_10000794C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_100007964, 0, 0);
}

uint64_t sub_100007964()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v1 = unk_10054A624;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10054A620 + dword_10054A620);
  swift_retain(*(_QWORD *)(v0 + 24));
  v2 = (_QWORD *)swift_task_alloc(v1);
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_1000079E0;
  return v4((uint64_t)&unk_100547BB8, *(_QWORD *)(v0 + 24), (uint64_t)&off_1004F8CA0);
}

uint64_t sub_1000079E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  swift_release(v3);
  return swift_task_switch(sub_100007A44, 0, 0);
}

uint64_t sub_100007A44()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100007A58(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 + 16) = a3;
  v5 = type metadata accessor for WidgetChartDiskCache(0);
  *(_QWORD *)(v3 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v3 + 56) = *a2;
  return swift_task_switch(sub_100007ABC, 0, 0);
}

uint64_t sub_100007ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
  *(_QWORD *)(v0 + 32) = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
  v4 = *(unsigned __int8 *)(v0 + 56);
  sub_10000D964(v1 + v3, v2, type metadata accessor for WidgetChartDiskCache);
  v5 = sub_100007F1C(v4);
  sub_10000E750(v2, type metadata accessor for WidgetChartDiskCache);
  if (v5)
  {
    swift_bridgeObjectRelease(v5);
    swift_task_dealloc(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc(dword_100547BC4);
    *(_QWORD *)(v0 + 40) = v7;
    *v7 = v0;
    v7[1] = sub_100007B88;
    return sub_10000ECC4(*(_BYTE *)(v0 + 56));
  }
}

uint64_t sub_100007B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100007BE4, 0, 0);
}

uint64_t sub_100007BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_BYTE *)(v0 + 56);
    sub_10000D964(*(_QWORD *)(v0 + 16) + *(_QWORD *)(v0 + 32), v2, type metadata accessor for WidgetChartDiskCache);
    swift_bridgeObjectRetain();
    sub_100008A40(v3);
    swift_bridgeObjectRelease(v1);
    sub_10000E750(v2, type metadata accessor for WidgetChartDiskCache);
    swift_bridgeObjectRelease(v1);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100007C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100011694(a1, &qword_100547B70);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1004F92B0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  sub_10000B4C8(&qword_100547BA8);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18);
}

uint64_t sub_100007DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100011694(a1, &qword_100547B70);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1004F95C0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18);
}

uint64_t sub_100007F1C(int a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  Swift::String v25;
  void *object;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  char v49;
  char v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v2 = type metadata accessor for Date(0);
  v3 = *(char **)(v2 - 8);
  v104 = v2;
  v105 = v3;
  v4 = __chkstk_darwin(v2);
  v101 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v97 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v97 - v9;
  v11 = sub_10000B4C8(&qword_100547BC8);
  __chkstk_darwin(v11);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v103 = (uint64_t)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v98 = (uint64_t)&v97 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v97 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v97 - v23;
  v107 = 0;
  v108 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v108);
  v107 = 0xD000000000000011;
  v108 = 0x8000000100444470;
  v102 = a1;
  LOBYTE(v106) = a1;
  v25._countAndFlagsBits = String.init<A>(describing:)(&v106, &type metadata for TopChartsWidgetDataProvider.ChartKind);
  object = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(object);
  v27 = v108;
  sub_100069B84(v107, v108, (uint64_t)v13);
  swift_bridgeObjectRelease(v27);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v100 = v14;
  if (v28(v13, 1, v14) == 1)
  {
    sub_100011694((uint64_t)v13, &qword_100547BC8);
    if (qword_100547770 != -1)
      swift_once(&qword_100547770, sub_10000D72C);
    v29 = type metadata accessor for Logger(0);
    v30 = sub_10000D78C(v29, (uint64_t)qword_100547778);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v107 = v34;
      *(_DWORD *)v33 = 136446210;
      LOBYTE(v106) = v102;
      v35 = String.init<A>(describing:)(&v106, &type metadata for TopChartsWidgetDataProvider.ChartKind);
      v37 = v36;
      v106 = sub_1000759E0(v35, v36, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Cache miss for %{public}s chart descriptors.", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }

    return 0;
  }
  v99 = v24;
  v38 = sub_10000DB44((uint64_t)v13, (uint64_t)v24, type metadata accessor for WidgetChartDiskCache.ChartList);
  static Date.now.getter(v38);
  v39 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v40 = objc_msgSend(v39, "preferredLocalizations");

  v41 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, &type metadata for String);
  v42 = v10;
  if (v41[2])
  {
    v43 = (char *)v41[4];
    v44 = v41[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v45 = v104;
  v46 = v101;
  swift_bridgeObjectRelease(v41);
  v48 = (uint64_t)v99;
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (qword_1005613B0)
  {
    v47.n128_u64[0] = sub_10009EE04();
    if ((v49 & 1) != 0)
      v47.n128_f64[0] = 86400.0;
  }
  else
  {
    v47.n128_u64[0] = 0x40F5180000000000;
  }
  Date.addingTimeInterval(_:)(v47);
  v50 = static Date.> infix(_:_:)(v8, v42);
  v51 = (void (*)(char *, uint64_t))*((_QWORD *)v105 + 1);
  v51(v8, v45);
  sub_10000D964(v48, (uint64_t)v22, type metadata accessor for WidgetChartDiskCache.ChartList);
  if ((v50 & 1) == 0)
    goto LABEL_23;
  v52 = &v22[*(int *)(v100 + 20)];
  v53 = *((_QWORD *)v52 + 1);
  if (!v53)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetChartDiskCache.ChartList);
    if (!v44)
      goto LABEL_35;
    swift_bridgeObjectRelease(v44);
LABEL_24:
    v101 = v43;
    if (qword_100547770 != -1)
      swift_once(&qword_100547770, sub_10000D72C);
    v54 = type metadata accessor for Logger(0);
    sub_10000D78C(v54, (uint64_t)qword_100547778);
    (*((void (**)(char *, char *, uint64_t))v105 + 2))(v46, v42, v45);
    v55 = v103;
    sub_10000D964(v48, v103, type metadata accessor for WidgetChartDiskCache.ChartList);
    v56 = swift_bridgeObjectRetain();
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc(42, -1);
      v100 = swift_slowAlloc(128, -1);
      v107 = v100;
      *(_DWORD *)v59 = 136446978;
      v60 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v61 = dispatch thunk of CustomStringConvertible.description.getter(v45, v60);
      v63 = v62;
      v64 = sub_1000759E0(v61, v62, &v107);
      v105 = v42;
      v106 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
      swift_bridgeObjectRelease(v63);
      v51(v46, v45);
      *(_WORD *)(v59 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v101, v44);
      v101 = (char *)v51;
      v67 = v66;
      swift_bridgeObjectRelease(v44);
      v106 = sub_1000759E0(v65, v67, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
      swift_bridgeObjectRelease(v67);
      swift_bridgeObjectRelease_n(v44, 2);
      *(_WORD *)(v59 + 22) = 2082;
      LOBYTE(v106) = v102;
      v68 = String.init<A>(describing:)(&v106, &type metadata for TopChartsWidgetDataProvider.ChartKind);
      v70 = v69;
      v106 = sub_1000759E0(v68, v69, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
      swift_bridgeObjectRelease(v70);
      *(_WORD *)(v59 + 32) = 2082;
      v71 = v103;
      v72 = sub_10000BE1C();
      v74 = v73;
      v106 = sub_1000759E0(v72, v73, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
      swift_bridgeObjectRelease(v74);
      sub_10000E750(v71, type metadata accessor for WidgetChartDiskCache.ChartList);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Cache miss now %{public}s, expected localization %{public}s, for \"%{public}s\" chart descriptors, chart list: %{public}s", (uint8_t *)v59, 0x2Au);
      v75 = v100;
      swift_arrayDestroy(v100, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v59, -1, -1);

      ((void (*)(char *, uint64_t))v101)(v105, v104);
      v76 = (uint64_t)v99;
    }
    else
    {

      sub_10000E750(v55, type metadata accessor for WidgetChartDiskCache.ChartList);
      swift_bridgeObjectRelease_n(v44, 2);
      v51(v46, v45);
      v51(v42, v45);
      v76 = v48;
    }
    sub_10000E750(v76, type metadata accessor for WidgetChartDiskCache.ChartList);
    return 0;
  }
  if (!v44)
  {
LABEL_23:
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetChartDiskCache.ChartList);
    goto LABEL_24;
  }
  if (*(char **)v52 != v43 || v53 != v44)
  {
    v79 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v52, v53, v43, v44, 0);
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetChartDiskCache.ChartList);
    if ((v79 & 1) != 0)
      goto LABEL_35;
    goto LABEL_24;
  }
  sub_10000E750((uint64_t)v22, type metadata accessor for WidgetChartDiskCache.ChartList);
LABEL_35:
  if (qword_100547770 != -1)
    swift_once(&qword_100547770, sub_10000D72C);
  v80 = type metadata accessor for Logger(0);
  sub_10000D78C(v80, (uint64_t)qword_100547778);
  v81 = v98;
  sub_10000D964(v48, v98, type metadata accessor for WidgetChartDiskCache.ChartList);
  v82 = swift_bridgeObjectRetain();
  v83 = Logger.logObject.getter(v82);
  v84 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = swift_slowAlloc(32, -1);
    v103 = swift_slowAlloc(64, -1);
    v107 = v103;
    *(_DWORD *)v85 = 136446722;
    v101 = (char *)v51;
    LOBYTE(v106) = v102;
    v86 = String.init<A>(describing:)(&v106, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    v105 = v42;
    v88 = v87;
    v106 = sub_1000759E0(v86, v87, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
    swift_bridgeObjectRelease(v88);
    *(_WORD *)(v85 + 12) = 2082;
    swift_bridgeObjectRetain();
    v89 = Optional<A>.description.getter(v43, v44);
    v90 = v81;
    v92 = v91;
    swift_bridgeObjectRelease(v44);
    v106 = sub_1000759E0(v89, v92, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
    swift_bridgeObjectRelease(v92);
    swift_bridgeObjectRelease_n(v44, 2);
    *(_WORD *)(v85 + 22) = 2050;
    v93 = v100;
    v94 = v45;
    v95 = *(_QWORD *)(*(_QWORD *)(v90 + *(int *)(v100 + 24)) + 16);
    sub_10000E750(v90, type metadata accessor for WidgetChartDiskCache.ChartList);
    v106 = v95;
    v48 = (uint64_t)v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "Using cached %{public}s chart descriptors for %{public}s with %{public}ld items.", (uint8_t *)v85, 0x20u);
    v96 = v103;
    swift_arrayDestroy(v103, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v96, -1, -1);
    swift_slowDealloc(v85, -1, -1);

    ((void (*)(char *, uint64_t))v101)(v105, v94);
  }
  else
  {
    sub_10000E750(v81, type metadata accessor for WidgetChartDiskCache.ChartList);

    swift_bridgeObjectRelease_n(v44, 2);
    v51(v42, v45);
    v93 = v100;
  }
  v77 = *(_QWORD *)(v48 + *(int *)(v93 + 24));
  swift_bridgeObjectRetain();
  sub_10000E750(v48, type metadata accessor for WidgetChartDiskCache.ChartList);
  return v77;
}

uint64_t sub_100008A40(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  void *object;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;

  v2 = type metadata accessor for WidgetDiskCache(0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v32 + 64);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100547BC8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - v13;
  v35 = 0;
  v36 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v36);
  v35 = 0xD000000000000011;
  v36 = 0x8000000100444470;
  v34 = a1;
  v15._countAndFlagsBits = String.init<A>(describing:)(&v34, &type metadata for TopChartsWidgetDataProvider.ChartKind);
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17 = v36;
  v31 = v35;
  v18 = swift_bridgeObjectRetain();
  sub_10000BD4C(v18, (uint64_t)v14);
  v19 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 0, 1, v19);
  static TaskPriority.userInitiated.getter(v20);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 0, 1, v21);
  sub_10000D964(v33, (uint64_t)v4, type metadata accessor for WidgetDiskCache);
  sub_100011370((uint64_t)v14, (uint64_t)v12, &qword_100547BC8);
  v22 = *(unsigned __int8 *)(v32 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = (v3 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(unsigned __int8 *)(v9 + 80);
  v26 = (v25 + v24 + 16) & ~v25;
  v27 = swift_allocObject(&unk_1004F92D8, v26 + v10, v22 | v25 | 7);
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  sub_10000DB44((uint64_t)v4, v27 + v23, type metadata accessor for WidgetDiskCache);
  v28 = (unint64_t *)(v27 + v24);
  *v28 = v31;
  v28[1] = v17;
  sub_100011530((uint64_t)v12, v27 + v26, &qword_100547BC8);
  swift_bridgeObjectRetain();
  v29 = sub_10006E874((uint64_t)v7, (uint64_t)&unk_100547BD0, v27);
  swift_release(v29);
  sub_100011694((uint64_t)v7, &qword_100547B70);
  swift_bridgeObjectRelease(v17);
  return sub_100011694((uint64_t)v14, &qword_100547BC8);
}

uint64_t sub_100008D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for WidgetChartDiskCache(0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547AF0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[7] = swift_task_alloc(v6);
  v4[8] = swift_task_alloc(v6);
  v7 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v4[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[10] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[11] = swift_task_alloc(v9);
  v4[12] = swift_task_alloc(v9);
  return swift_task_switch(sub_100008DCC, 0, 0);
}

uint64_t sub_100008DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v8 = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
  sub_10000D964(v4 + v8, v5, type metadata accessor for WidgetChartDiskCache);
  sub_1000090D4(v7, v6, v3);
  sub_10000E750(v5, type metadata accessor for WidgetChartDiskCache);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 112) = v9;
  if (v9(v3, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 64), &qword_100547AF0);
    v10 = (_QWORD *)swift_task_alloc(dword_100547974);
    *(_QWORD *)(v0 + 120) = v10;
    *v10 = v0;
    v10[1] = sub_100008F50;
    return sub_10000A234(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 16);
    sub_10000DB44(*(_QWORD *)(v0 + 64), v12, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000DB44(v12, v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 56);
    v16 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 72));
    swift_task_dealloc(v15);
    swift_task_dealloc(v14);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100008F50()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  return swift_task_switch(sub_100008FA4, 0, 0);
}

uint64_t sub_100008FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0 + 112))(v1, 1, *(_QWORD *)(v0 + 72)) == 1)
  {
    sub_100011694(v1, &qword_100547AF0);
    v2 = 1;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 104);
    sub_10000DB44(v1, v3, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(v6, v4, type metadata accessor for WidgetChartDiskCache);
    sub_100009C3C(v3);
    sub_10000E750(v4, type metadata accessor for WidgetChartDiskCache);
    sub_10000DB44(v3, v5, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v2 = 0;
  }
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 16), v2, 1, *(_QWORD *)(v0 + 72));
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000090D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v116 = a3;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v114 = v5;
  v115 = v6;
  v7 = __chkstk_darwin(v5);
  v111 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v110 = (char *)&v106 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v106 - v11;
  v13 = sub_10000B4C8(&qword_100547AF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v113 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v112 = (char *)&v106 - v21;
  v22 = __chkstk_darwin(v20);
  v106 = (uint64_t)&v106 - v23;
  v24 = __chkstk_darwin(v22);
  v109 = (uint64_t)&v106 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v106 - v26;
  v120 = 0x5F7472616843;
  v121 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  v108 = a1;
  v28 = MusicItemID.description.getter(a1, a2);
  v30 = v29;
  swift_bridgeObjectRelease(a2);
  v31._countAndFlagsBits = v28;
  v31._object = v30;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(v30);
  v32 = v121;
  sub_100069BB0(v120, v121, (uint64_t)v15);
  swift_bridgeObjectRelease(v32);
  v117 = v17;
  v118 = v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100547AF0);
    if (qword_100547770 != -1)
      swift_once(&qword_100547770, sub_10000D72C);
    v33 = type metadata accessor for Logger(0);
    sub_10000D78C(v33, (uint64_t)qword_100547778);
    v34 = swift_bridgeObjectRetain_n(a2, 2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v120 = v38;
      *(_DWORD *)v37 = 136446210;
      swift_bridgeObjectRetain();
      v39 = MusicItemID.description.getter(v108, a2);
      v41 = v40;
      swift_bridgeObjectRelease(a2);
      v119 = sub_1000759E0(v39, v41, &v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease_n(a2, 2);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Cache miss for chart %{public}s", v37, 0xCu);
      v42 = 1;
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

LABEL_36:
      v91 = v116;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v91, v42, 1, v118);
    }
    swift_bridgeObjectRelease_n(a2, 2);

LABEL_35:
    v42 = 1;
    goto LABEL_36;
  }
  v43 = sub_10000DB44((uint64_t)v15, (uint64_t)v27, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  static Date.now.getter(v43);
  v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v45 = objc_msgSend(v44, "preferredLocalizations");

  v46 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, &type metadata for String);
  v47 = v12;
  v48 = (uint64_t)v27;
  if (v46[2])
  {
    v50 = (char *)v46[4];
    v49 = v46[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = 0;
    v49 = 0;
  }
  v51 = (uint64_t)v113;
  v52 = v114;
  v54 = v111;
  v53 = (uint64_t)v112;
  swift_bridgeObjectRelease(v46);
  if (qword_100547760 != -1)
    swift_once(&qword_100547760, sub_1000067CC);
  v55 = sub_10000D78C(v118, (uint64_t)qword_1005611C0);
  if ((sub_10000E1D4(v48, v55) & 1) != 0)
  {
    v57 = 0x4072C00000000000;
LABEL_21:
    v56.n128_u64[0] = v57;
    goto LABEL_22;
  }
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (!qword_1005613B0)
  {
    v57 = 0x40D5180000000000;
    goto LABEL_21;
  }
  v56.n128_u64[0] = sub_10009EDFC();
  if ((v58 & 1) != 0)
    v56.n128_f64[0] = 21600.0;
LABEL_22:
  v59 = v110;
  Date.addingTimeInterval(_:)(v56);
  v107 = v47;
  v60 = static Date.> infix(_:_:)(v59, v47);
  v61 = *(void (**)(char *, uint64_t))(v115 + 8);
  v61(v59, v52);
  v62 = v109;
  sub_10000D964(v48, v109, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  if ((v60 & 1) == 0)
    goto LABEL_28;
  v63 = (_QWORD *)(v62 + *(int *)(v118 + 20));
  v64 = v63[1];
  if (v64)
  {
    if (v49)
    {
      if ((char *)*v63 == v50 && v64 == v49)
      {
        sub_10000E750(v62, type metadata accessor for TopChartsWidgetDataProvider.Chart);
LABEL_41:
        swift_bridgeObjectRelease(v49);
        goto LABEL_42;
      }
      v93 = _stringCompareWithSmolCheck(_:_:expecting:)(*v63, v64, v50, v49, 0);
      sub_10000E750(v62, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      if ((v93 & 1) != 0)
        goto LABEL_41;
LABEL_29:
      v112 = v50;
      v65 = v52;
      v66 = v61;
      if (qword_100547770 != -1)
        swift_once(&qword_100547770, sub_10000D72C);
      v67 = type metadata accessor for Logger(0);
      sub_10000D78C(v67, (uint64_t)qword_100547778);
      v68 = v107;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v54, v107, v65);
      sub_10000D964(v48, v53, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      sub_10000D964(v48, v51, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      v69 = swift_bridgeObjectRetain();
      v70 = Logger.logObject.getter(v69);
      v71 = static os_log_type_t.default.getter();
      v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        v73 = swift_slowAlloc(42, -1);
        v111 = (char *)swift_slowAlloc(128, -1);
        v120 = (uint64_t)v111;
        *(_DWORD *)v73 = 136446978;
        v115 = v48;
        v74 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        LODWORD(v110) = v72;
        v75 = dispatch thunk of CustomStringConvertible.description.getter(v65, v74);
        v77 = v76;
        v119 = sub_1000759E0(v75, v76, &v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
        swift_bridgeObjectRelease(v77);
        v66(v54, v65);
        *(_WORD *)(v73 + 12) = 2082;
        swift_bridgeObjectRetain();
        v78 = Optional<A>.description.getter(v112, v49);
        v80 = v79;
        swift_bridgeObjectRelease(v49);
        v119 = sub_1000759E0(v78, v80, &v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
        v81 = v118;
        swift_bridgeObjectRelease(v80);
        swift_bridgeObjectRelease_n(v49, 2);
        *(_WORD *)(v73 + 22) = 2082;
        v82 = (uint64_t *)(v53 + *(int *)(v81 + 28));
        v83 = *v82;
        v84 = v82[1];
        swift_bridgeObjectRetain();
        v119 = sub_1000759E0(v83, v84, &v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
        swift_bridgeObjectRelease(v84);
        sub_10000E750(v53, type metadata accessor for TopChartsWidgetDataProvider.Chart);
        *(_WORD *)(v73 + 32) = 2082;
        v85 = (uint64_t)v113;
        v86 = sub_1000062EC();
        v88 = v87;
        v119 = sub_1000759E0(v86, v87, &v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
        swift_bridgeObjectRelease(v88);
        sub_10000E750(v85, type metadata accessor for TopChartsWidgetDataProvider.Chart);
        _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v110, "Cache miss now %{public}s, expected localization %{public}s, for chart \"%{public}s\": chart %{public}s", (uint8_t *)v73, 0x2Au);
        v89 = v111;
        swift_arrayDestroy(v111, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1, -1);
        swift_slowDealloc(v73, -1, -1);

        v66(v107, v114);
        v90 = v115;
      }
      else
      {

        sub_10000E750(v51, type metadata accessor for TopChartsWidgetDataProvider.Chart);
        sub_10000E750(v53, type metadata accessor for TopChartsWidgetDataProvider.Chart);
        swift_bridgeObjectRelease_n(v49, 2);
        v66(v54, v65);
        v66(v68, v65);
        v90 = v48;
      }
      sub_10000E750(v90, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      goto LABEL_35;
    }
LABEL_28:
    sub_10000E750(v62, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  sub_10000E750(v62, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  if (v49)
  {
    swift_bridgeObjectRelease(v49);
    goto LABEL_29;
  }
LABEL_42:
  if (qword_100547770 != -1)
    swift_once(&qword_100547770, sub_10000D72C);
  v94 = type metadata accessor for Logger(0);
  sub_10000D78C(v94, (uint64_t)qword_100547778);
  v95 = v106;
  v96 = sub_10000D964(v48, v106, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v97 = Logger.logObject.getter(v96);
  v98 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v97, v98))
  {
    v99 = v52;
    v100 = v61;
    v101 = (uint8_t *)swift_slowAlloc(12, -1);
    v102 = swift_slowAlloc(32, -1);
    v120 = v102;
    *(_DWORD *)v101 = 136446210;
    v115 = v48;
    v103 = sub_1000062EC();
    v105 = v104;
    v119 = sub_1000759E0(v103, v104, &v120);
    v48 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
    swift_bridgeObjectRelease(v105);
    sub_10000E750(v95, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    _os_log_impl((void *)&_mh_execute_header, v97, v98, "Using cached chart %{public}s", v101, 0xCu);
    swift_arrayDestroy(v102, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v102, -1, -1);
    swift_slowDealloc(v101, -1, -1);

    v100(v107, v99);
  }
  else
  {

    sub_10000E750(v95, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v61(v107, v52);
  }
  v91 = v116;
  sub_10000DB44(v48, v116, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v42 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v91, v42, 1, v118);
}

uint64_t sub_100009C3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v2 = type metadata accessor for WidgetDiskCache(0);
  v39 = *(_QWORD *)(v2 - 8);
  v35 = *(_QWORD *)(v39 + 64);
  __chkstk_darwin(v2);
  v37 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100547AF0);
  v36 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v36 + 64);
  v9 = __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - v11;
  v13 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v14 = (uint64_t *)(a1 + *(int *)(v13 + 24));
  v15 = *v14;
  v16 = v14[1];
  v40 = 0x5F7472616843;
  v41 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  v17 = MusicItemID.description.getter(v15, v16);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21 = v41;
  v34 = v40;
  sub_10000D964(a1, (uint64_t)v12, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v22 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  static TaskPriority.userInitiated.getter(v22);
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 0, 1, v23);
  v24 = v37;
  sub_10000D964(v38, v37, type metadata accessor for WidgetDiskCache);
  sub_100011370((uint64_t)v12, (uint64_t)v10, &qword_100547AF0);
  v25 = *(unsigned __int8 *)(v39 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = (v35 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(unsigned __int8 *)(v36 + 80);
  v29 = (v28 + v27 + 16) & ~v28;
  v30 = swift_allocObject(&unk_1004F9260, v29 + v8, v25 | v28 | 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v30 + 24) = 0;
  sub_10000DB44(v24, v30 + v26, type metadata accessor for WidgetDiskCache);
  v31 = (uint64_t *)(v30 + v27);
  *v31 = v34;
  v31[1] = v21;
  sub_100011530((uint64_t)v10, v30 + v29, &qword_100547AF0);
  swift_bridgeObjectRetain();
  v32 = sub_10006E874((uint64_t)v6, (uint64_t)&unk_100547B78, v30);
  swift_release(v32);
  sub_100011694((uint64_t)v6, &qword_100547B70);
  swift_bridgeObjectRelease(v21);
  return sub_100011694((uint64_t)v12, &qword_100547AF0);
}

id sub_100009F14()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for TopChartsWidgetDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100009F50();
  qword_1005611D8 = (uint64_t)result;
  return result;
}

id sub_100009F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id result;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000662C8(0x7472616843706F54, 0xE900000000000073, (char *)(v1 + OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache));
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2);
  static MusicDataRequest.preferredExecutionMethod.setter(v5);
  v6 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v7 = objc_msgSend(v6, "processName");

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  if (v8 == 0x646957636973754DLL && v10 == 0xEC00000073746567)
  {
    swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, 0x646957636973754DLL, 0xEC00000073746567, 0);
    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) == 0)
      return (id)v1;
  }
  if (qword_100547770 != -1)
    swift_once(&qword_100547770, sub_10000D72C);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_10000D78C(v13, (uint64_t)qword_100547778);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "running in widget process, disabling fallback cache", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v19 = objc_msgSend(v18, "artworkDataSource");
  if (v19)
  {
    v20 = v19;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v21 = (void *)swift_dynamicCastObjCClass(v20);
    if (v21)
      objc_msgSend(v21, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v20);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000A234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  v4 = sub_10000B4C8(&qword_100547AD0);
  v3[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100547AD8);
  v3[19] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[20] = v6;
  v3[21] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v3[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[23] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v9);
  v3[25] = swift_task_alloc(v9);
  v10 = sub_10000B4C8(&qword_100547AE0);
  v3[26] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[27] = v11;
  v3[28] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicDataRequest.Source(0);
  v3[29] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[30] = v13;
  v3[31] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_100547AE8);
  v3[32] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[33] = v15;
  v3[34] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_100547AF0);
  v3[35] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[36] = swift_task_alloc(v17);
  v3[37] = swift_task_alloc(v17);
  return swift_task_switch(sub_10000A3B0, 0, 0);
}

uint64_t sub_10000A3B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;

  if (qword_100547770 != -1)
    swift_once(&qword_100547770, sub_10000D72C);
  v1 = v0[17];
  v2 = type metadata accessor for Logger(0);
  v0[38] = sub_10000D78C(v2, (uint64_t)qword_100547778);
  v3 = swift_bridgeObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[17];
  if (v6)
  {
    v8 = v0[16];
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v31 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    v11 = MusicItemID.description.getter(v8, v7);
    v13 = v12;
    swift_bridgeObjectRelease(v7);
    v0[14] = sub_1000759E0(v11, v13, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 14, v0 + 15);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Asking server for chart with id: %{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  v14 = v0[37];
  v15 = v0[31];
  v16 = v0[32];
  v17 = v0[30];
  v30 = v0[29];
  v18 = v0[22];
  v20 = v0[16];
  v19 = v0[17];
  v21 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v0[39] = v21;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v0[40] = v22;
  v22(v14, 1, 1, v21);
  KeyPath = swift_getKeyPath(&unk_100424608);
  v0[8] = v20;
  v0[9] = v19;
  v24 = sub_10001254C(&qword_100547AF8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  swift_bridgeObjectRetain();
  MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 8, v18, &protocol witness table for Playlist, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v15, enum case for MusicDataRequest.Source.widgets(_:), v30);
  MusicCatalogResourceRequest.source.setter(v15, v16);
  v25 = sub_10000B4C8(&qword_100547B00);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100424B90;
  sub_10000B4C8(&qword_100547B08);
  v27 = static PartialMusicProperty<A>.tracks.getter();
  *(_QWORD *)(v26 + 32) = v27;
  v31 = v26;
  specialized Array._endMutation()(v27);
  MusicCatalogResourceRequest.properties.setter(v31, v16);
  MusicCatalogResourceRequest.performAutomaticLibraryMapping.setter(0, v16);
  v28 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  v0[41] = v28;
  *v28 = v0;
  v28[1] = sub_10000A700;
  return MusicCatalogResourceRequest.response()(v0[28], v0[32]);
}

uint64_t sub_10000A700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 328);
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10000AE0C;
  else
    v3 = sub_10000A764;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10000A764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 208));
  sub_100069A50(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    sub_100011694(*(_QWORD *)(v0 + 144), &qword_100547AD0);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 136);
    if (v11)
    {
      v42 = *(_QWORD *)(v0 + 272);
      v43 = *(_QWORD *)(v0 + 256);
      v19 = *(_QWORD *)(v0 + 128);
      v41 = *(_QWORD *)(v0 + 264);
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = v16;
      v21 = swift_slowAlloc(32, -1);
      v44 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      v22 = MusicItemID.description.getter(v19, v18);
      v24 = v23;
      swift_bridgeObjectRelease(v18);
      *(_QWORD *)(v0 + 88) = sub_1000759E0(v22, v24, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Server did not return chart for: %{public}s ", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v15, v17);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 136), 2);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 120), 1, 1, *(_QWORD *)(v0 + 312));
    v31 = *(_QWORD *)(v0 + 288);
    v32 = *(_QWORD *)(v0 + 296);
    v33 = *(_QWORD *)(v0 + 272);
    v34 = *(_QWORD *)(v0 + 248);
    v35 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 192);
    v36 = *(_QWORD *)(v0 + 200);
    v38 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 144);
    sub_100011694(v32, &qword_100547AF0);
    swift_task_dealloc(v32);
    swift_task_dealloc(v31);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 32))(v26, *(_QWORD *)(v0 + 144), v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v25, v26, v27);
    v29 = (_QWORD *)swift_task_alloc(dword_100547B1C);
    *(_QWORD *)(v0 + 344) = v29;
    *v29 = v0;
    v29[1] = sub_10000AAC0;
    return sub_100006B84(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 192));
  }
}

uint64_t sub_10000AAC0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  return swift_task_switch(sub_10000AB14, 0, 0);
}

uint64_t sub_10000AB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 288);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v0 + 320))(v2, 0, 1, *(_QWORD *)(v0 + 312));
  v3 = sub_10000D7D8(v2, v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v7 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 296);
    v40 = *(_QWORD *)(v0 + 256);
    v41 = *(_QWORD *)(v0 + 272);
    v38 = *(_QWORD *)(v0 + 224);
    v39 = *(_QWORD *)(v0 + 264);
    v36 = *(_QWORD *)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 208);
    v32 = *(_QWORD *)(v0 + 280);
    v33 = *(_QWORD *)(v0 + 184);
    v34 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 200);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v44 = v9;
    *(_DWORD *)v8 = 136446210;
    swift_beginAccess(v6, v0 + 40, 0, 0);
    sub_100011370(v6, v7, &qword_100547AF0);
    v10 = String.init<A>(describing:)(v7, v32);
    v12 = v11;
    *(_QWORD *)(v0 + 104) = sub_1000759E0(v10, v11, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Server returned: %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 264);
    v42 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 224);
    v18 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v42, v14);
  }
  v21 = *(_QWORD *)(v0 + 296);
  v22 = *(_QWORD *)(v0 + 120);
  swift_beginAccess(v21, v0 + 16, 0, 0);
  sub_100011370(v21, v22, &qword_100547AF0);
  v23 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 296);
  v25 = *(_QWORD *)(v0 + 272);
  v26 = *(_QWORD *)(v0 + 248);
  v27 = *(_QWORD *)(v0 + 224);
  v29 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 200);
  v30 = *(_QWORD *)(v0 + 168);
  v43 = *(_QWORD *)(v0 + 144);
  sub_100011694(v24, &qword_100547AF0);
  swift_task_dealloc(v24);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000AE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 336);
    v32 = *(_QWORD *)(v0 + 264);
    v33 = *(_QWORD *)(v0 + 256);
    v34 = *(_QWORD *)(v0 + 272);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 136);
    v8 = swift_slowAlloc(22, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    v31 = swift_slowAlloc(32, -1);
    v36 = v31;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    v10 = MusicItemID.description.getter(v6, v7);
    v12 = v11;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v0 + 96) = sub_1000759E0(v10, v12, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v8 + 12) = 2114;
    swift_errorRetain(v5);
    v13 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 80) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    *v9 = v13;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Request %{public}s Failed with %{public}@", (uint8_t *)v8, 0x16u);
    v14 = sub_10000B4C8(&qword_100547B10);
    swift_arrayDestroy(v9, 1, v14);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 336);
    v17 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 272);
    v18 = *(_QWORD *)(v0 + 256);
    v19 = *(_QWORD *)(v0 + 136);

    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_bridgeObjectRelease_n(v19, 2);
    swift_errorRelease(v15);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 120);
  swift_beginAccess(v20, v0 + 16, 0, 0);
  sub_100011370(v20, v21, &qword_100547AF0);
  v22 = *(_QWORD *)(v0 + 288);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v28 = *(_QWORD *)(v0 + 192);
  v27 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 144);
  sub_100011694(v23, &qword_100547AF0);
  swift_task_dealloc(v23);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000B148@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000D900(a1, v3);
  result = dispatch thunk of PlaylistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10000B18C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1000752B0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10000B2E4()
{
  uint64_t v0;

  sub_10000E750(v0 + OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache, type metadata accessor for WidgetChartDiskCache);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10000B31C()
{
  return type metadata accessor for TopChartsWidgetDataProvider(0);
}

uint64_t type metadata accessor for TopChartsWidgetDataProvider(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100547958, (uint64_t)&nominal type descriptor for TopChartsWidgetDataProvider);
}

uint64_t sub_10000B338(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_10000B3A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;

  v4 = type metadata accessor for WidgetDiskCache(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100547A38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(v6 + 20);
    v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    v13 = *(int *)(v6 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Logger(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18 = v12;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_10000B4C8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000B508(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v4 = type metadata accessor for WidgetDiskCache(0);

  v5 = a1 + *(int *)(v4 + 24);
  v6 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

char *sub_10000B59C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = type metadata accessor for WidgetDiskCache(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(void **)&a2[v8];
  *(_QWORD *)&a1[v8] = v9;
  v10 = *(int *)(v7 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Logger(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v9;
  v14(v11, v12, v13);
  return a1;
}

char *sub_10000B690(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v10 = type metadata accessor for WidgetDiskCache(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(void **)&a2[v11];
  v13 = *(void **)&a1[v11];
  *(_QWORD *)&a1[v11] = v12;
  v14 = v12;

  v15 = *(int *)(v10 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *sub_10000B7D0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = type metadata accessor for WidgetDiskCache(0);
  *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_10000B8B4(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v10 = type metadata accessor for WidgetDiskCache(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(void **)&a1[v11];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];

  v13 = *(int *)(v10 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_10000B9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000B9FC);
}

uint64_t sub_10000B9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10000BA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000BA44);
}

uint64_t sub_10000BA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetChartDiskCache(uint64_t a1)
{
  return sub_10001133C(a1, qword_100547A98, (uint64_t)&nominal type descriptor for WidgetChartDiskCache);
}

uint64_t sub_10000BA98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TopChartsWidgetDataProvider.ChartDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for TopChartsWidgetDataProvider.ChartDescriptor(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for TopChartsWidgetDataProvider.ChartDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for TopChartsWidgetDataProvider.ChartDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 initializeWithTake for TopChartsWidgetDataProvider.ChartDescriptor(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for TopChartsWidgetDataProvider.ChartDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TopChartsWidgetDataProvider.ChartDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TopChartsWidgetDataProvider.ChartDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TopChartsWidgetDataProvider.ChartDescriptor()
{
  return &type metadata for TopChartsWidgetDataProvider.ChartDescriptor;
}

uint64_t sub_10000BD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  static Date.now.getter();
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = objc_msgSend(v4, "preferredLocalizations");

  v6 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String);
  if (v6[2])
  {
    v8 = v6[4];
    v7 = v6[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  swift_bridgeObjectRelease(v6);
  result = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  v10 = (_QWORD *)(a2 + *(int *)(result + 20));
  *v10 = v8;
  v10[1] = v7;
  *(_QWORD *)(a2 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t sub_10000BE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  __n128 v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  Swift::String v36;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  unint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v39 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = 0x73694C7472616843;
  v42 = 0xEA00000000002874;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v40._object);
  strcpy((char *)&v40, "fetchDate: \"");
  BYTE5(v40._object) = 0;
  HIWORD(v40._object) = -5120;
  v5 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 2108450;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  v9 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v9);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v40._object);
  v40._countAndFlagsBits = 0x617A696C61636F6CLL;
  v40._object = (void *)0xEF22203A6E6F6974;
  v10 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  v11 = (uint64_t *)(v0 + *(int *)(v10 + 20));
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain();
  v14 = Optional<A>.description.getter(v12, v13);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 2108450;
  v18._object = (void *)0xE300000000000000;
  String.append(_:)(v18);
  v19 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v19);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v40._object);
  v40._countAndFlagsBits = 0xD000000000000012;
  v40._object = (void *)0x8000000100444450;
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (qword_1005613B0)
  {
    v20.n128_u64[0] = sub_10009EE04();
    if ((v21 & 1) != 0)
      v20.n128_f64[0] = 86400.0;
  }
  else
  {
    v20.n128_u64[0] = 0x40F5180000000000;
  }
  Date.addingTimeInterval(_:)(v20);
  v22 = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v2);
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  v26._countAndFlagsBits = 2108450;
  v26._object = (void *)0xE300000000000000;
  String.append(_:)(v26);
  v27 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v27);
  strcpy((char *)&v40, "items: \"");
  BYTE1(v40._object) = 0;
  WORD1(v40._object) = 0;
  HIDWORD(v40._object) = -402653184;
  v28 = *(_QWORD *)(v1 + *(int *)(v10 + 24));
  v29 = swift_bridgeObjectRetain();
  v30 = Array.description.getter(v29, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
  v32 = v31;
  swift_bridgeObjectRelease(v28);
  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v32);
  v34._countAndFlagsBits = 2108450;
  v34._object = (void *)0xE300000000000000;
  String.append(_:)(v34);
  v35 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v35);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return v41;
}

uint64_t sub_10000C1BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_10000B4C8(&qword_100547E20);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_10001258C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WidgetChartDiskCache.ChartList.CodingKeys, &type metadata for WidgetChartDiskCache.ChartList.CodingKeys, v11, v9, v10);
  v25 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_10001254C(&qword_100547DE0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v25, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
    v15 = (uint64_t *)(v3 + *(int *)(v14 + 20));
    v16 = *v15;
    v17 = v15[1];
    v24 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v24, v5);
    v23 = *(_QWORD *)(v3 + *(int *)(v14 + 24));
    v22 = 2;
    v18 = sub_10000B4C8(&qword_100547E30);
    v19 = sub_1000125D0(&qword_100547E38, (uint64_t (*)(void))sub_100012638, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10000C37C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v29 = a2;
  v30 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v31 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_10000B4C8(&qword_100547E48);
  v5 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  sub_10000D900(a1, v12);
  v13 = sub_10001258C();
  v33 = v7;
  v14 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WidgetChartDiskCache.ChartList.CodingKeys, &type metadata for WidgetChartDiskCache.ChartList.CodingKeys, v13, v12, v11);
  if (v14)
    return sub_100011758(a1);
  v15 = v5;
  v34 = a1;
  v16 = (uint64_t)v10;
  v38 = 0;
  v17 = sub_10001254C(&qword_100547E08, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v19 = v30;
  v18 = v31;
  v20 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v31, v30, &v38, v32, v30, v17);
  v28 = v3;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(v16, v18, v19);
  v37 = 1;
  v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v20);
  v22 = (uint64_t *)(v16 + *(int *)(v8 + 20));
  *v22 = v21;
  v22[1] = v23;
  v24 = sub_10000B4C8(&qword_100547E30);
  v36 = 2;
  v25 = sub_1000125D0(&qword_100547E50, (uint64_t (*)(void))sub_10001267C, (const char *)&protocol conformance descriptor for <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v35, v24, &v36, v20, v24, v25);
  v26 = v34;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v32);
  *(_QWORD *)(v16 + *(int *)(v8 + 24)) = v35;
  sub_10000D964(v16, v29, type metadata accessor for WidgetChartDiskCache.ChartList);
  sub_100011758(v26);
  return sub_10000E750(v16, type metadata accessor for WidgetChartDiskCache.ChartList);
}

BOOL sub_10000C688(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000C69C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10000C6E0()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10000C708()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10000C748()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x617A696C61636F6CLL;
  if (*v0 != 1)
    v1 = 0x736D657469;
  if (*v0)
    return v1;
  else
    return 0x7461446863746566;
}

uint64_t sub_10000C7AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100012B38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10000C7D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001258C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000C7F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001258C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10000C820@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10000C37C(a1, a2);
}

uint64_t sub_10000C834(_QWORD *a1)
{
  return sub_10000C1BC(a1);
}

uint64_t sub_10000C84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for Track(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v3[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10000C8D8, 0, 0);
}

uint64_t sub_10000C8D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t **v5;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 16))(v0[10], v0[4], v0[8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  v5 = (uint64_t **)swift_task_alloc(dword_100547B44);
  v0[11] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_10000C960;
  return sub_10000C9C0(v0[2], v0[10], v0[7]);
}

uint64_t sub_10000C960()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 80);
  v2 = *(_QWORD *)(*v0 + 56);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10000C9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v6);
  v3[12] = swift_task_alloc(v6);
  v7 = type metadata accessor for MusicSiriRepresentation(0);
  v3[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[14] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v9);
  v3[16] = swift_task_alloc(v9);
  v10 = type metadata accessor for Track(0);
  v3[17] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[18] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[19] = swift_task_alloc(v12);
  v3[20] = swift_task_alloc(v12);
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  v3[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_100547B48);
  v3[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547A38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[23] = swift_task_alloc(v15);
  v3[24] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v3[25] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[26] = v17;
  v3[27] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10000CB44, 0, 0);
}

uint64_t sub_10000CB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v19)(uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  void (*v55)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 16) = Track.title.getter();
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = Track.artistName.getter();
  *(_QWORD *)(v0 + 40) = v5;
  Playlist.url.getter();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v6(v3, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 184);
    URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
    result = v6(v8, 1, v7);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v10 = *(_QWORD *)(v0 + 192);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 200));
    v11 = sub_100011694(v10, &qword_100547A38);
  }
  else
  {
    v11 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  }
  v12 = *(_QWORD *)(v0 + 176);
  Track.artwork.getter(v11);
  v13 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 224) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v0 + 232) = v14;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 176), &qword_100547B48);
    *(_QWORD *)(v0 + 256) = 0;
    v15 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v18(v15, *(_QWORD *)(v0 + 64), v16);
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 88);
    v20 = v19(v15, v16);
    LODWORD(v16) = enum case for Track.song(_:);
    *(_DWORD *)(v0 + 416) = enum case for Track.song(_:);
    v21 = sub_10000B4C8(&qword_100547B50);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v54 = v19;
    v55 = v18;
    if (v20 == (_DWORD)v16)
    {
      v22(*(_QWORD *)(v0 + 168), 1, 10, v21);
      v20 = enum case for Track.musicVideo(_:);
    }
    else
    {
      v24 = enum case for Track.musicVideo(_:);
      v25 = *(_QWORD *)(v0 + 168);
      if (v20 == enum case for Track.musicVideo(_:))
      {
        v22(v25, 4, 10, v21);
      }
      else
      {
        v22(v25, 1, 10, v21);
        v20 = v24;
      }
    }
    *(_DWORD *)(v0 + 420) = v20;
    v26 = *(_QWORD *)(v0 + 32);
    v27 = *(_QWORD *)(v0 + 16);
    v28 = *(_QWORD *)(v0 + 24);
    v30 = *(_QWORD *)(v0 + 152);
    v29 = *(_QWORD *)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 136);
    v31 = *(_QWORD *)(v0 + 144);
    v33 = *(_QWORD *)(v0 + 120);
    v34 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 104);
    v36 = *(_QWORD *)(v0 + 112);
    v37 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 272) = v26;
    *(_QWORD *)(v0 + 280) = v28;
    *(_QWORD *)(v0 + 288) = v27;
    v38 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    *(_QWORD *)(v0 + 296) = v38;
    v38(v29, v32);
    v55(v30, v37, v32);
    *(_DWORD *)(v0 + 424) = v54(v30, v32);
    v39 = ((uint64_t (*)(uint64_t, uint64_t))v38)(v30, v32);
    *(_QWORD *)(v0 + 304) = Track.id.getter(v39);
    *(_QWORD *)(v0 + 312) = v40;
    *(_QWORD *)(v0 + 320) = Track.catalogID.getter();
    *(_QWORD *)(v0 + 328) = v41;
    v42 = Track.siriRepresentation.getter();
    *(_QWORD *)(v0 + 336) = MusicSiriRepresentation.id.getter(v42);
    *(_QWORD *)(v0 + 344) = v43;
    v44 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8);
    v45 = v44(v34, v35);
    v46 = Playlist.id.getter(v45);
    *(_QWORD *)(v0 + 352) = v46;
    *(_QWORD *)(v0 + 360) = v47;
    *(_QWORD *)(v0 + 368) = Playlist.catalogID.getter(v46);
    *(_QWORD *)(v0 + 376) = v48;
    v49 = Playlist.siriRepresentation.getter();
    *(_QWORD *)(v0 + 384) = MusicSiriRepresentation.id.getter(v49);
    *(_QWORD *)(v0 + 392) = v50;
    v44(v33, v35);
    *(_QWORD *)(v0 + 400) = sub_10000D400();
    v51 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 408) = static MainActor.shared.getter();
    v52 = dispatch thunk of Actor.unownedExecutor.getter(v51, &protocol witness table for MainActor);
    return swift_task_switch(sub_10000D174, v52, v53);
  }
  else
  {
    v23 = (_QWORD *)swift_task_alloc(dword_10054925C);
    *(_QWORD *)(v0 + 240) = v23;
    *v23 = v0;
    v23[1] = sub_10000CEC4;
    return sub_100039994(150);
  }
}

uint64_t sub_10000CEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_10000CF40, 0, 0);
}

uint64_t sub_10000CF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v39(v1, *(_QWORD *)(v0 + 64), v2);
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 88);
  v4 = v38(v1, v2);
  LODWORD(v2) = enum case for Track.song(_:);
  *(_DWORD *)(v0 + 416) = enum case for Track.song(_:);
  v5 = sub_10000B4C8(&qword_100547B50);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  if (v4 == (_DWORD)v2)
  {
    v6(*(_QWORD *)(v0 + 168), 1, 10, v5);
    v4 = enum case for Track.musicVideo(_:);
  }
  else
  {
    v7 = enum case for Track.musicVideo(_:);
    v8 = *(_QWORD *)(v0 + 168);
    if (v4 == enum case for Track.musicVideo(_:))
    {
      v6(v8, 4, 10, v5);
    }
    else
    {
      v6(v8, 1, 10, v5);
      v4 = v7;
    }
  }
  *(_DWORD *)(v0 + 420) = v4;
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 272) = v9;
  *(_QWORD *)(v0 + 280) = v11;
  *(_QWORD *)(v0 + 288) = v10;
  v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  *(_QWORD *)(v0 + 296) = v21;
  v21(v12, v15);
  v39(v13, v20, v15);
  *(_DWORD *)(v0 + 424) = v38(v13, v15);
  v22 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v13, v15);
  *(_QWORD *)(v0 + 304) = Track.id.getter(v22);
  *(_QWORD *)(v0 + 312) = v23;
  *(_QWORD *)(v0 + 320) = Track.catalogID.getter();
  *(_QWORD *)(v0 + 328) = v24;
  v25 = Track.siriRepresentation.getter();
  *(_QWORD *)(v0 + 336) = MusicSiriRepresentation.id.getter(v25);
  *(_QWORD *)(v0 + 344) = v26;
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  v28 = v27(v17, v18);
  v29 = Playlist.id.getter(v28);
  *(_QWORD *)(v0 + 352) = v29;
  *(_QWORD *)(v0 + 360) = v30;
  *(_QWORD *)(v0 + 368) = Playlist.catalogID.getter(v29);
  *(_QWORD *)(v0 + 376) = v31;
  v32 = Playlist.siriRepresentation.getter();
  *(_QWORD *)(v0 + 384) = MusicSiriRepresentation.id.getter(v32);
  *(_QWORD *)(v0 + 392) = v33;
  v27(v16, v18);
  *(_QWORD *)(v0 + 400) = sub_10000D400();
  v34 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 408) = static MainActor.shared.getter();
  v35 = dispatch thunk of Actor.unownedExecutor.getter(v34, &protocol witness table for MainActor);
  return swift_task_switch(sub_10000D174, v35, v36);
}

uint64_t sub_10000D174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = swift_release(*(_QWORD *)(v0 + 408));
  type metadata accessor for InternalMusicPlayer(0, v7);
  v8 = static InternalMusicPlayer.localDevice.getter();
  v9 = InternalMusicPlayer.state<A>(for:)(v6, v1, &protocol witness table for Track);
  v10 = swift_release(v8);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v5 + 104))(v3, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4, v11);
  *(_BYTE *)(v0 + 428) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v2, v3) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v12(v3, v4);
  v12(v2, v4);
  return swift_task_switch(sub_10000D26C, 0, 0);
}

uint64_t sub_10000D26C()
{
  uint64_t v0;
  int v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_DWORD *)(v0 + 424);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v3 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 136);
  v16 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = 1.77777778;
  if (v1 != *(_DWORD *)(v0 + 420))
    v11 = 1.0;
  if (v1 == *(_DWORD *)(v0 + 416))
    v11 = 1.0;
  sub_100036164(0, 0, *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 264), v3, *(_QWORD *)(v0 + 256), *(_QWORD **)(v0 + 48), v11, v6, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360),
    *(_QWORD *)(v0 + 368),
    *(_QWORD *)(v0 + 376),
    *(_QWORD *)(v0 + 384),
    *(_QWORD *)(v0 + 392),
    (uint64_t)_swiftEmptyArrayStorage,
    *(_QWORD *)(v0 + 400),
    *(_BYTE *)(v0 + 428));
  v2(v9, v8);
  v12 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_10000D400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for MusicVideo(0);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100547B58);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100547B60);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v1, v15);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
    v20 = sub_10000B4C8(&qword_100547B68);
    v21 = swift_allocObject(v20, 34, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100424BA0;
    Song.contentRating.getter();
    *(_BYTE *)(v21 + 32) = TextBadge.init(for:isPlayable:)(v10, 1);
    Song.favoriteStatus.getter();
    v22 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 0, 1, v22);
    *(_BYTE *)(v21 + 33) = TextBadge.init(for:)(v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else if (v19 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v24 = v28;
    v23 = v29;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v4, v18, v29);
    v25 = sub_10000B4C8(&qword_100547B68);
    v21 = swift_allocObject(v25, 34, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100424BA0;
    MusicVideo.contentRating.getter();
    *(_BYTE *)(v21 + 32) = TextBadge.init(for:isPlayable:)(v10, 1);
    MusicVideo.favoriteStatus.getter();
    v26 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 1, v26);
    *(_BYTE *)(v21 + 33) = TextBadge.init(for:)(v7);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v21;
}

uint64_t sub_10000D72C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_100547778);
  sub_10000D78C(v0, (uint64_t)qword_100547778);
  return static Logger.music(_:)(0xD00000000000001BLL, 0x80000001004245A0);
}

uint64_t sub_10000D78C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t type metadata accessor for TopChartsWidgetDataProvider.Chart(uint64_t a1)
{
  return sub_10001133C(a1, qword_100547D50, (uint64_t)&nominal type descriptor for TopChartsWidgetDataProvider.Chart);
}

void sub_10000D7B8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_10000D7C4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_10000D7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100547AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000D820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10000D880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc(dword_100547B34);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_100012D1C;
  return sub_10000C84C(a1, a2, v7);
}

_QWORD *sub_10000D900(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t *sub_10000D924(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10000D964(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000D9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10000B4C8(&qword_100547AF0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = v0 + v4;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);

  v13 = v10 + *(int *)(v1 + 24);
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v15 = v0 + v8;
  v16 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v0 + v8, 1, v16))
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v8, v17);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[5] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[7] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[8]));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_10000DB44(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000DB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_100547AF0) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_10054A60C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000DC64;
  return sub_10006CB2C(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_10000DC64()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10000DCAC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_10000DD14;
  return v5(v2 + 16);
}

uint64_t sub_10000DD14()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t _s9MusicCore15SharedListeningO8ReactionV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v8 & 1) != 0))
    {
      v9 = a1[5];
      v10 = a2[5];
      if (v9)
      {
        if (v10 && (a1[4] == a2[4] && v9 == v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
          return 1;
      }
      else if (!v10)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000DE1C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC000000656D614ELL)
  {
    v7 = 0xEC000000656D614ELL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xEC000000656D614ELL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease(0xEB0000000065646FLL);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x437972746E756F63, 0xEB0000000065646FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_10000DF88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;

  v5 = sub_10000B4C8(&qword_100547C50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_1000116D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_100011758(a1);
  v28 = 0;
  v12 = sub_100011778();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v27, &type metadata for MusicItemID, &v28, v5, &type metadata for MusicItemID, v12);
  v13 = v27[1];
  v26 = v27[0];
  LOBYTE(v27[0]) = 1;
  swift_bridgeObjectRetain();
  v14 = KeyedDecodingContainer.decode(_:forKey:)(v27, v5);
  v16 = v15;
  v24 = v14;
  LOBYTE(v27[0]) = 2;
  swift_bridgeObjectRetain();
  v25 = v16;
  v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v27, v5);
  v19 = v18;
  v20 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  sub_100011758(a1);
  swift_bridgeObjectRelease(v19);
  v21 = v25;
  swift_bridgeObjectRelease(v25);
  result = swift_bridgeObjectRelease(v13);
  *a2 = v26;
  a2[1] = v13;
  a2[2] = v24;
  a2[3] = v21;
  a2[4] = v20;
  a2[5] = v19;
  return result;
}

uint64_t sub_10000E1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v4 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v5 = __chkstk_darwin(v4);
  v55 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v54 = (char *)&v53 - v8;
  v9 = __chkstk_darwin(v7);
  v56 = (uint64_t)&v53 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v53 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v53 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v53 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v53 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v53 - v23;
  v25 = static Date.== infix(_:_:)(a1, a2);
  sub_10000D964(a1, (uint64_t)v24, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000D964(a2, (uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  if ((v25 & 1) == 0)
  {
    sub_10000E750((uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750((uint64_t)v24, type metadata accessor for TopChartsWidgetDataProvider.Chart);
LABEL_15:
    v34 = (uint64_t)v54;
    v33 = (uint64_t)v55;
    sub_10000D964(a1, (uint64_t)v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a2, (uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    goto LABEL_16;
  }
  v53 = v4;
  v26 = *(int *)(v4 + 20);
  v27 = &v24[v26];
  v28 = *(_QWORD *)&v24[v26 + 8];
  v29 = &v22[v26];
  v30 = *((_QWORD *)v29 + 1);
  if (!v28)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750((uint64_t)v24, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    if (!v30)
    {
LABEL_20:
      sub_10000D964(a1, (uint64_t)v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      sub_10000D964(a2, (uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      v34 = (uint64_t)v54;
      v33 = (uint64_t)v55;
      goto LABEL_21;
    }
    v35 = v30;
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750((uint64_t)v24, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v35 = v28;
LABEL_14:
    swift_bridgeObjectRelease(v35);
    goto LABEL_15;
  }
  if (*(_QWORD *)v27 == *(_QWORD *)v29 && v28 == v30)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750((uint64_t)v24, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    swift_bridgeObjectRelease(v28);
    goto LABEL_20;
  }
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v27, v28, *(_QWORD *)v29, *((_QWORD *)v29 + 1), 0);
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750((uint64_t)v24, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  swift_bridgeObjectRelease(v28);
  sub_10000D964(a1, (uint64_t)v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000D964(a2, (uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v34 = (uint64_t)v54;
  v33 = (uint64_t)v55;
  if ((v32 & 1) == 0)
  {
LABEL_16:
    sub_10000E750((uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750((uint64_t)v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a1, (uint64_t)v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v36 = v56;
    sub_10000D964(a2, v56, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    goto LABEL_17;
  }
LABEL_21:
  v39 = *(int *)(v53 + 24);
  v40 = *(_QWORD *)&v19[v39];
  v41 = *(_QWORD *)&v19[v39 + 8];
  v42 = &v16[v39];
  v43 = *((_QWORD *)v42 + 1);
  if (v40 == *(_QWORD *)v42 && v41 == v43)
  {
    sub_10000E750((uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750((uint64_t)v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a1, (uint64_t)v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v36 = v56;
    sub_10000D964(a2, v56, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    goto LABEL_28;
  }
  v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, *(_QWORD *)v42, v43, 0);
  sub_10000E750((uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750((uint64_t)v19, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000D964(a1, (uint64_t)v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v36 = v56;
  sub_10000D964(a2, v56, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  if ((v45 & 1) == 0)
  {
LABEL_17:
    sub_10000E750((uint64_t)v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750(v36, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a1, v34, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a2, v33, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v37 = 0;
    goto LABEL_18;
  }
LABEL_28:
  v46 = v53;
  v47 = *(int *)(v53 + 28);
  v48 = *(_QWORD *)&v13[v47];
  v49 = *(_QWORD *)&v13[v47 + 8];
  v50 = (_QWORD *)(v36 + v47);
  v51 = v50[1];
  if (v48 == *v50 && v49 == v51)
  {
    sub_10000E750((uint64_t)v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000E750(v36, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a1, v34, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    sub_10000D964(a2, v33, type metadata accessor for TopChartsWidgetDataProvider.Chart);
LABEL_32:
    v37 = sub_100066D34(*(_QWORD *)(v34 + *(int *)(v46 + 32)), *(_QWORD *)(v33 + *(int *)(v46 + 32)));
    goto LABEL_18;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, *v50, v51, 0);
  sub_10000E750((uint64_t)v13, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750(v36, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000D964(a1, v34, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000D964(a2, v33, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v37 = 0;
  if ((v52 & 1) != 0)
    goto LABEL_32;
LABEL_18:
  sub_10000E750(v34, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750(v33, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  return v37 & 1;
}

uint64_t sub_10000E750(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000E78C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000E7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_100547B8C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100007964, 0, 0);
}

uint64_t sub_10000E81C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000E840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100547B9C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100547B98 + dword_100547B98))(a1, v4);
}

uint64_t sub_10000E8B0(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_100547BB4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10000DC64;
  return sub_100007A58(a1, a2, v2);
}

uint64_t sub_10000E914(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446863746566, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x617A696C61636F6CLL && a2 == 0xEC0000006E6F6974)
  {
    v7 = 0xEC0000006E6F6974;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617A696C61636F6CLL, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v8 = 0xE200000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v9 = 0xE500000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_10000EB2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_10000B4C8(&qword_100547BD8);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.GeoLocation(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = Playlist.id.getter(v9);
  v13 = v12;
  Playlist.geoLocation.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100011694((uint64_t)v6, &qword_100547BD8);
    v14 = type metadata accessor for Playlist(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0xE000000000000000;
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v18 = Playlist.GeoLocation.name.getter(v20);
    v19 = v21;
    v16 = Playlist.GeoLocation.countryCode.getter();
    v17 = v22;
    v23 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  *a2 = v25;
  a2[1] = v13;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v16;
  a2[5] = v17;
  return result;
}

uint64_t sub_10000ECC4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  *(_BYTE *)(v1 + 242) = a1;
  v2 = sub_10000B4C8(&qword_100547AD0);
  *(_QWORD *)(v1 + 416) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist.GeoLocation(0);
  *(_QWORD *)(v1 + 424) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 432) = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 440) = swift_task_alloc(v5);
  *(_QWORD *)(v1 + 448) = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547BD8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 456) = swift_task_alloc(v6);
  *(_QWORD *)(v1 + 464) = swift_task_alloc(v6);
  *(_QWORD *)(v1 + 472) = swift_task_alloc(v6);
  *(_QWORD *)(v1 + 480) = swift_task_alloc(v6);
  *(_QWORD *)(v1 + 488) = swift_task_alloc(v6);
  v7 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v1 + 496) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v1 + 504) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 512) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 520) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 528) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 536) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 544) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 552) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 560) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 568) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 576) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 584) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 592) = swift_task_alloc(v9);
  *(_QWORD *)(v1 + 600) = swift_task_alloc(v9);
  v10 = sub_10000B4C8(&qword_100547BE0);
  *(_QWORD *)(v1 + 608) = v10;
  *(_QWORD *)(v1 + 616) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100547BE8);
  *(_QWORD *)(v1 + 624) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100547AD8);
  *(_QWORD *)(v1 + 632) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v1 + 640) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 648) = swift_task_alloc(v14);
  *(_QWORD *)(v1 + 656) = swift_task_alloc(v14);
  *(_QWORD *)(v1 + 664) = swift_task_alloc(v14);
  *(_QWORD *)(v1 + 672) = swift_task_alloc(v14);
  v15 = type metadata accessor for MusicCatalogChartsResponse(0);
  *(_QWORD *)(v1 + 680) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v1 + 688) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 696) = swift_task_alloc(v17);
  *(_QWORD *)(v1 + 704) = swift_task_alloc(v17);
  v18 = type metadata accessor for MusicDataRequest.Source(0);
  *(_QWORD *)(v1 + 712) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v1 + 720) = v19;
  *(_QWORD *)(v1 + 728) = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_100547BF0);
  *(_QWORD *)(v1 + 736) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicCatalogChartsRequest(0);
  *(_QWORD *)(v1 + 744) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v1 + 752) = v22;
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 760) = swift_task_alloc(v23);
  *(_QWORD *)(v1 + 768) = swift_task_alloc(v23);
  return swift_task_switch(sub_10000EFBC, 0, 0);
}

uint64_t sub_10000EFBC()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;

  *(_QWORD *)(v0 + 280) = 0;
  *(_QWORD *)(v0 + 376) = _swiftEmptyArrayStorage;
  swift_beginAccess(v0 + 280, v0 + 120, 1, 0);
  v1 = enum case for MusicCatalogChartKind.dailyGlobalTop(_:);
  *(_DWORD *)(v0 + 228) = enum case for MusicCatalogChartKind.dailyGlobalTop(_:);
  v2 = enum case for MusicCatalogChartKind.cityTop(_:);
  *(_DWORD *)(v0 + 244) = enum case for MusicCatalogChartKind.cityTop(_:);
  v44 = enum case for MusicDataRequest.Source.widgets(_:);
  *(_DWORD *)(v0 + 816) = enum case for MusicDataRequest.Source.widgets(_:);
  v3 = *(_QWORD *)(v0 + 768);
  v4 = *(_QWORD *)(v0 + 736);
  v40 = *(_QWORD *)(v0 + 720);
  v41 = *(_QWORD *)(v0 + 728);
  v42 = *(_QWORD *)(v0 + 712);
  v39 = *(_QWORD *)(v0 + 496);
  v5 = *(unsigned __int8 *)(v0 + 242);
  v6 = type metadata accessor for Genre(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = sub_10000B4C8(&qword_100547BF8);
  v8 = type metadata accessor for MusicCatalogChartKind(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v7, v11 + *(_QWORD *)(v9 + 72), v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100424BB0;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
  v14 = v0 + 144;
  if (v5)
    v15 = v1;
  else
    v15 = v2;
  v13(v12 + v11, v15, v8);
  v16 = sub_10000B4C8(&qword_100547C00);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v17 + 32) = v39;
  *(_QWORD *)(v17 + 40) = &protocol witness table for Playlist;
  MusicCatalogChartsRequest.init(genre:kinds:types:)(v4, v12, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v41, v44, v42);
  v18 = swift_beginAccess(v3, v14, 33, 0);
  MusicCatalogChartsRequest.source.setter(v41, v18);
  MusicCatalogChartsRequest.includeGeoLocation.setter(1);
  MusicCatalogChartsRequest.excludeDefaultCharts.setter(1);
  MusicCatalogChartsRequest.limit.setter(200, 0);
  if ((unsigned __int128)(*(uint64_t *)(v0 + 280) * (__int128)200) >> 64 == (200 * *(_QWORD *)(v0 + 280)) >> 63)
  {
    MusicCatalogChartsRequest.offset.setter();
    swift_endAccess(v14);
    if (qword_100547770 == -1)
      goto LABEL_6;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_100547770, sub_10000D72C);
LABEL_6:
  v19 = type metadata accessor for Logger(0);
  v20 = sub_10000D78C(v19, (uint64_t)qword_100547778);
  *(_QWORD *)(v0 + 776) = v20;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(_BYTE *)(v0 + 242);
    v25 = swift_slowAlloc(32, -1);
    v43 = swift_slowAlloc(64, -1);
    v45 = v43;
    *(_DWORD *)v25 = 136446722;
    *(_BYTE *)(v0 + 225) = v24;
    v26 = String.init<A>(describing:)(v0 + 225, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    v28 = v27;
    *(_QWORD *)(v0 + 408) = sub_1000759E0(v26, v27, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 408, v0 + 416);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v25 + 12) = 2050;
    *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 280);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 400, v0 + 408);
    *(_WORD *)(v25 + 22) = 2082;
    v29 = swift_beginAccess(v23, v0 + 96, 32, 0);
    v30 = MusicCatalogChartsRequest.offset.getter(v29);
    v32 = v31;
    swift_endAccess(v0 + 96);
    *(_QWORD *)(v0 + 216) = v30;
    *(_BYTE *)(v0 + 224) = v32 & 1;
    v33 = sub_10000B4C8(&qword_100547C08);
    v34 = String.init<A>(describing:)(v0 + 216, v33);
    v36 = v35;
    *(_QWORD *)(v0 + 352) = sub_1000759E0(v34, v35, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 352, v0 + 360);
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Asking server for %{public}s chart list, batch: %{public}ld, offset: %{public}s.", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 752) + 16))(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 768), *(_QWORD *)(v0 + 744));
  v37 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogChartsRequest.response()[1]);
  *(_QWORD *)(v0 + 784) = v37;
  *v37 = v0;
  v37[1] = sub_10000F448;
  return MusicCatalogChartsRequest.response()(*(_QWORD *)(v0 + 704));
}

uint64_t sub_10000F448()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  *(_QWORD *)(*(_QWORD *)v1 + 792) = v0;
  swift_task_dealloc(v3);
  v4 = v2[95];
  v5 = v2[93];
  v6 = *(void (**)(uint64_t, uint64_t))(v2[94] + 8);
  if (v0)
  {
    v2[101] = v6;
    v6(v4, v5);
    v7 = sub_100010C88;
  }
  else
  {
    v2[100] = v6;
    v6(v4, v5);
    v7 = sub_10000F4CC;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10000F4CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD);
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(unint64_t, uint64_t, uint64_t);
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  _QWORD *v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  unint64_t v157;
  unint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t, char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __n128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int64_t v184;
  char *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(uint64_t, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t, uint64_t);
  unint64_t v211;
  unint64_t v212;
  _QWORD *v213;
  char v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  __n128 v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  __n128 v224;
  int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  BOOL v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  unsigned int *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  uint64_t v251;
  uint64_t v252;
  __n128 v253;
  uint64_t v254;
  uint64_t v255;
  NSObject *v256;
  os_log_type_t v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  __n128 v264;
  uint64_t v265;
  char v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _OWORD *v278;
  __int128 v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  void (*v289)(uint64_t, uint64_t);
  uint64_t v290;
  _QWORD *v291;
  uint64_t v292;
  _QWORD *v293;
  uint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  _QWORD **v297;
  uint64_t v298;
  void (*v299)(uint64_t, uint64_t, uint64_t);
  uint64_t v300;
  _QWORD **v301;
  uint64_t v302;
  uint64_t v303;
  void (*v304)(uint64_t, char *, uint64_t);
  uint64_t v305;
  uint64_t *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t (*v319)(uint64_t, uint64_t, uint64_t);
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t (*v324)(char *, char *, uint64_t);
  uint64_t v325;
  int64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  _QWORD *v340;
  _QWORD *v341;
  uint64_t v342;
  unint64_t v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349[2];

  v1 = v0;
  v2 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[86] + 16))(v0[87], v0[88], v0[85]);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  v347 = v0;
  v291 = v0 + 50;
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v0[87];
    v338 = v0[86];
    v6 = v0[85];
    v7 = *((_BYTE *)v1 + 242);
    v8 = swift_slowAlloc(22, -1);
    v329 = swift_slowAlloc(64, -1);
    *((_BYTE *)v1 + 226) = v7;
    v9 = (char *)v1 + 226;
    v10 = v1 + 49;
    v349[0] = v329;
    *(_DWORD *)v8 = 136446466;
    v11 = String.init<A>(describing:)((char *)v1 + 226, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    v13 = v12;
    v1[48] = sub_1000759E0(v11, v12, v349);
    v14 = v1 + 48;
    v1 = v347;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v14, v10);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v8 + 12) = 2082;
    v15 = sub_10001254C(&qword_100547C30, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogChartsResponse, (uint64_t)&protocol conformance descriptor for MusicCatalogChartsResponse);
    v16 = dispatch thunk of CustomStringConvertible.description.getter(v6, v15);
    v18 = v17;
    *(_QWORD *)(v9 + 166) = sub_1000759E0(v16, v17, v349);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v10, v291);
    swift_bridgeObjectRelease(v18);
    v19 = *(void (**)(uint64_t, uint64_t))(v338 + 8);
    v19(v5, v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Response for %{public}s chart list: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v329, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v329, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    v19 = *(void (**)(uint64_t, uint64_t))(v0[86] + 8);
    v19(v0[87], v0[85]);
  }

  v20 = MusicCatalogChartsResponse.playlistCharts.getter();
  v21 = *(_QWORD *)(v20 + 16);
  v22 = sub_10000B4C8(&qword_100547C10);
  v23 = *(_QWORD *)(v22 - 8);
  if (v21)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v23 + 16))(v1[78], v20 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), v22);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  v293 = v1 + 32;
  v295 = v1 + 47;
  v25 = v1[78];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v25, v24, 1, v22);
  swift_bridgeObjectRelease(v20);
  v26 = sub_10000B4C8(&qword_100547C10);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
  v29 = v1[78];
  if (v28 == 1)
  {
    v30 = (void (*)(uint64_t, uint64_t))v1[100];
    v31 = v1[96];
    v32 = v1[93];
    v33 = v1[88];
    v34 = v1[85];
    sub_100011694(v1[78], &qword_100547BE8);
    v19(v33, v34);
    v30(v31, v32);
LABEL_46:
    v104 = v1 + 21;
    v105 = v1[47];
    v106 = swift_bridgeObjectRetain_n(v105, 2);
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v107, v108))
    {
      v109 = v1 + 36;
      v332 = (char *)v1 + 227;
      v341 = v1 + 31;
      v110 = *((_BYTE *)v347 + 242);
      v111 = swift_slowAlloc(22, -1);
      v112 = swift_slowAlloc(64, -1);
      v349[0] = v112;
      *(_DWORD *)v111 = 136446466;
      v347[43] = *(_QWORD *)(v105 + 16);
      v113 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v115 = v114;
      v347[36] = sub_1000759E0(v113, v114, v349);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v109, v347 + 37);
      swift_bridgeObjectRelease_n(v105, 2);
      swift_bridgeObjectRelease(v115);
      *(_WORD *)(v111 + 12) = 2082;
      *((_BYTE *)v347 + 227) = v110;
      v1 = v347;
      v116 = String.init<A>(describing:)(v332, &type metadata for TopChartsWidgetDataProvider.ChartKind);
      v118 = v117;
      v347[31] = sub_1000759E0(v116, v117, v349);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v341, v293);
      swift_bridgeObjectRelease(v118);
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "Fetched %{public}s %{public}s charts", (uint8_t *)v111, 0x16u);
      swift_arrayDestroy(v112, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v112, -1, -1);
      swift_slowDealloc(v111, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v105, 2);
    }
    swift_beginAccess(v295, v104, 0, 0);
    if (*(_QWORD *)(*v295 + 16))
    {
      v280 = *v295;
    }
    else
    {
      swift_bridgeObjectRelease(*v295);
      v280 = 0;
    }
    v119 = v1[96];
    v120 = v1[95];
    v121 = v1;
    v122 = v1[92];
    v123 = v121[91];
    v124 = v121[88];
    v125 = v121[87];
    v126 = v121[84];
    v127 = v121[83];
    v128 = v121[82];
    v129 = v121[81];
    v281 = v121[78];
    v282 = v121[77];
    v283 = v121[75];
    v284 = v121[74];
    v285 = v121[73];
    v286 = v121[72];
    v288 = v121[71];
    v290 = v121[70];
    v292 = v121[69];
    v294 = v121[68];
    v296 = v121[67];
    v298 = v121[66];
    v300 = v121[65];
    v303 = v121[64];
    v307 = v121[61];
    v311 = v121[60];
    v315 = v121[59];
    v320 = v121[58];
    v325 = v121[57];
    v333 = v121[56];
    v342 = v121[55];
    v348 = v121[52];
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v281);
    swift_task_dealloc(v282);
    swift_task_dealloc(v283);
    swift_task_dealloc(v284);
    swift_task_dealloc(v285);
    swift_task_dealloc(v286);
    swift_task_dealloc(v288);
    swift_task_dealloc(v290);
    swift_task_dealloc(v292);
    swift_task_dealloc(v294);
    swift_task_dealloc(v296);
    swift_task_dealloc(v298);
    swift_task_dealloc(v300);
    swift_task_dealloc(v303);
    swift_task_dealloc(v307);
    swift_task_dealloc(v311);
    swift_task_dealloc(v315);
    swift_task_dealloc(v320);
    swift_task_dealloc(v325);
    swift_task_dealloc(v333);
    swift_task_dealloc(v342);
    swift_task_dealloc(v348);
    return ((uint64_t (*)(uint64_t))v121[1])(v280);
  }
  v289 = v19;
  v35 = v1[84];
  v36 = v1[83];
  v37 = v347[80];
  v38 = v347[79];
  MusicCatalogChart.items.getter(v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
  v1 = v347;
  v39(v35, v36, v38);
  v40 = sub_100012324(&qword_100547C18, &qword_100547AD8, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v38);
  dispatch thunk of Collection.endIndex.getter(v38, v40);
  if (v1[39] == v1[40])
  {
    v41 = (void (*)(uint64_t, uint64_t))v347[100];
    v42 = v347[96];
    v43 = v347[93];
    v44 = v347[88];
    v45 = v347[85];
    (*(void (**)(_QWORD, _QWORD))(v347[80] + 8))(v347[84], v347[79]);
LABEL_45:
    v289(v44, v45);
    v41(v42, v43);
    goto LABEL_46;
  }
  v46 = v347[79];
  v47 = v347[77];
  v48 = v347[76];
  v299 = *(void (**)(uint64_t, uint64_t, uint64_t))(v347[80] + 16);
  v299(v347[82], v347[84], v46);
  v347[41] = _swiftEmptyArrayStorage;
  v49 = sub_100012324(&qword_100547C20, &qword_100547AD8, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v46, v49);
  v306 = (uint64_t *)(v47 + *(int *)(v48 + 36));
  v50 = *v306;
  v310 = v40;
  dispatch thunk of Collection.endIndex.getter(v46, v40);
  v51 = _swiftEmptyArrayStorage;
  if (v50 == v347[42])
    goto LABEL_26;
  v287 = v347 + 41;
  v53 = v306;
  v52 = v40;
  v54 = v347 + 8;
  do
  {
    v55 = v1[81];
    v314 = v1[80];
    v56 = v347[79];
    v57 = v347[77];
    v318 = v347[75];
    v58 = v347[74];
    v59 = v347[63];
    v60 = v347[62];
    v323 = v347[61];
    v330 = v347[54];
    v339 = v347[53];
    v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v54, v53, v56, v52);
    (*(void (**)(uint64_t))(v59 + 16))(v58);
    v61(v54, 0);
    v299(v55, v57, v56);
    dispatch thunk of Collection.formIndex(after:)(v53, v56, v52);
    v62 = v56;
    v1 = v347;
    (*(void (**)(uint64_t, uint64_t))(v314 + 8))(v55, v62);
    v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32);
    v64 = v63(v318, v58, v60);
    Playlist.geoLocation.getter(v64);
    v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v330 + 48))(v323, 1, v339);
    v66 = v347[61];
    if ((_DWORD)v65 == 1)
    {
      sub_100011694(v347[61], &qword_100547BD8);
LABEL_14:
      (*(void (**)(_QWORD, _QWORD))(v347[63] + 8))(v347[75], v347[62]);
      v53 = v306;
      goto LABEL_15;
    }
    v67 = v347[53];
    v68 = v347[54];
    v69 = Playlist.GeoLocation.name.getter(v65);
    v71 = v70;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
    swift_bridgeObjectRelease(v71);
    v72 = HIBYTE(v71) & 0xF;
    if ((v71 & 0x2000000000000000) == 0)
      v72 = v69 & 0xFFFFFFFFFFFFLL;
    if (!v72)
      goto LABEL_14;
    v63(v347[73], v347[75], v347[62]);
    v73 = (_QWORD *)v347[41];
    v53 = v306;
    if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
    {
      sub_1000383EC(0, v73[2] + 1, 1);
      v73 = (_QWORD *)*v287;
    }
    v75 = v73[2];
    v74 = v73[3];
    if (v75 >= v74 >> 1)
    {
      sub_1000383EC(v74 > 1, v75 + 1, 1);
      v73 = (_QWORD *)*v287;
    }
    v76 = v347[73];
    v77 = v347[62];
    v78 = v347[63];
    v73[2] = v75 + 1;
    v63((uint64_t)v73+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v75, v76, v77);
    v347[41] = v73;
LABEL_15:
    v40 = *v53;
    v52 = v310;
    dispatch thunk of Collection.endIndex.getter(v347[79], v310);
  }
  while (v40 != v347[42]);
  v51 = (_QWORD *)*v287;
LABEL_26:
  sub_100011694(v1[77], &qword_100547BE0);
  v79 = v51[2];
  if (!v79)
  {
    v41 = (void (*)(uint64_t, uint64_t))v1[100];
    v42 = v1[96];
    v43 = v1[93];
    v44 = v1[88];
    v45 = v1[85];
    v100 = v51;
    v101 = v1[84];
    v102 = v1[80];
    v103 = v1[79];
    swift_release(v100);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
    goto LABEL_45;
  }
  v297 = (_QWORD **)(v1 + 45);
  v340 = v51;
  if (*((_BYTE *)v1 + 242))
  {
    if (*((_BYTE *)v1 + 242) == 1)
    {
      v80 = 0;
      v1[32] = _swiftEmptyArrayStorage;
      while (1)
      {
        if (v80 >= v51[2])
        {
          __break(1u);
          goto LABEL_101;
        }
        v81 = v1[63];
        v82 = v1[59];
        v83 = v1[53];
        v40 = v1[54];
        v84 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        v324 = *(uint64_t (**)(char *, char *, uint64_t))(v81 + 16);
        v331 = *(_QWORD *)(v81 + 72);
        v85 = v324((char *)v1[70], (char *)v51 + v84 + v331 * v80, v1[62]);
        Playlist.geoLocation.getter(v85);
        v319 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
        v86 = v319(v82, 1, v83);
        v87 = v1[59];
        if (v86 == 1)
        {
          sub_100011694(v1[59], &qword_100547BD8);
        }
        else
        {
          v88 = v1[53];
          v40 = v1[54];
          v89 = Playlist.GeoLocation.countryCode.getter();
          v91 = v90;
          v92 = v88;
          v51 = v340;
          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v87, v92);
          if (v91)
          {
            swift_bridgeObjectRelease(v91);
            v93 = HIBYTE(v91) & 0xF;
            if ((v91 & 0x2000000000000000) == 0)
              v93 = v89 & 0xFFFFFFFFFFFFLL;
            if (v93)
            {
              v94 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1[63] + 32);
              v94(v1[69], v1[70], v1[62]);
              v95 = v1[32];
              if ((swift_isUniquelyReferenced_nonNull_native(v95) & 1) == 0)
              {
                sub_1000383EC(0, *(_QWORD *)(v95 + 16) + 1, 1);
                v95 = *v293;
              }
              v97 = *(_QWORD *)(v95 + 16);
              v96 = *(_QWORD *)(v95 + 24);
              if (v97 >= v96 >> 1)
              {
                sub_1000383EC(v96 > 1, v97 + 1, 1);
                v95 = *v293;
              }
              v98 = v1[69];
              v99 = v1[62];
              *(_QWORD *)(v95 + 16) = v97 + 1;
              v94(v95 + v84 + v97 * v331, v98, v99);
              v1[32] = v95;
              v51 = v340;
              goto LABEL_32;
            }
          }
        }
        (*(void (**)(_QWORD, _QWORD))(v1[63] + 8))(v1[70], v1[62]);
LABEL_32:
        if (v79 == ++v80)
        {
          swift_release(v51);
          v183 = *v293;
          v184 = *(_QWORD *)(*v293 + 16);
          if (v184)
          {
            v1[45] = _swiftEmptyArrayStorage;
            sub_100038418(0, v184, 0);
            v302 = v183;
            v185 = (char *)(v183 + v84);
            do
            {
              v186 = (char *)v1[68];
              v187 = v1[67];
              v188 = v1[62];
              v189 = v1[58];
              v190 = v1[53];
              v324(v186, v185, v188);
              v191 = v324((char *)v187, v186, v188);
              v192 = Playlist.id.getter(v191);
              v194 = v193;
              Playlist.geoLocation.getter(v192);
              v195 = v319(v189, 1, v190);
              v196 = v1[67];
              v197 = v1[62];
              v198 = v1[63];
              if (v195 == 1)
              {
                sub_100011694(v1[58], &qword_100547BD8);
                v199 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
                v199(v196, v197);
                v313 = 0;
                v317 = 0;
                v200 = 0;
                v343 = 0xE000000000000000;
              }
              else
              {
                v305 = v192;
                v309 = v194;
                v202 = v1[54];
                v201 = v1[55];
                v203 = v1[53];
                v204 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v202 + 32))(v201, v1[58], v203);
                v205 = Playlist.GeoLocation.name.getter(v204);
                v343 = v206;
                v207 = Playlist.GeoLocation.countryCode.getter();
                v313 = v208;
                v317 = v207;
                v199 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
                v209 = v197;
                v200 = v205;
                v199(v196, v209);
                v210 = *(void (**)(uint64_t, uint64_t))(v202 + 8);
                v192 = v305;
                v194 = v309;
                v210(v201, v203);
              }
              v199(v1[68], v1[62]);
              v156 = (_QWORD *)v1[45];
              if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) == 0)
              {
                sub_100038418(0, v156[2] + 1, 1);
                v156 = *v297;
              }
              v212 = v156[2];
              v211 = v156[3];
              if (v212 >= v211 >> 1)
              {
                sub_100038418(v211 > 1, v212 + 1, 1);
                v156 = *v297;
              }
              v156[2] = v212 + 1;
              v213 = &v156[6 * v212];
              v213[4] = v192;
              v213[5] = v194;
              v213[6] = v200;
              v213[7] = v343;
              v213[8] = v317;
              v213[9] = v313;
              v185 += v331;
              --v184;
            }
            while (v184);
            swift_release(v302);
          }
          else
          {
            swift_release(*v293);
            v156 = _swiftEmptyArrayStorage;
          }
          v179 = v1[88];
          v180 = v1[85];
          v181 = v1[84];
          v40 = v1[80];
          v182 = v1[79];
          goto LABEL_84;
        }
      }
    }
    v335 = v1 + 2;
    v160 = v1[63];
    v161 = (char *)v51 + ((*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80));
    v162 = *(_QWORD *)(v160 + 72);
    v163 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v160 + 16);
    swift_retain(v51);
    while (1)
    {
      v164 = v1[57];
      v166 = v1[53];
      v165 = v1[54];
      v167 = v163(v1[65], v161, v1[62]);
      Playlist.geoLocation.getter(v167);
      v168 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v164, 1, v166);
      v169 = v1[57];
      if (v168 == 1)
        break;
      v171 = v1[53];
      v170 = v1[54];
      v172 = Playlist.GeoLocation.countryCode.getter();
      v174 = v173;
      v175 = v171;
      v51 = v340;
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v169, v175);
      if (!v174)
        goto LABEL_86;
      swift_bridgeObjectRelease(v174);
      v176 = HIBYTE(v174) & 0xF;
      if ((v174 & 0x2000000000000000) == 0)
        v176 = v172 & 0xFFFFFFFFFFFFLL;
      if (!v176)
        goto LABEL_86;
      (*(void (**)(_QWORD, _QWORD))(v1[63] + 8))(v1[65], v1[62]);
      v161 += v162;
      if (!--v79)
      {
        v177 = swift_release(v340);
        v178 = 1;
        goto LABEL_87;
      }
    }
    sub_100011694(v1[57], &qword_100547BD8);
LABEL_86:
    v216 = v1[65];
    v217 = v1[62];
    v218 = v1[63];
    v219 = v1[52];
    v220 = swift_release(v51);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v218 + 32))(v219, v216, v217, v220);
    v178 = 0;
LABEL_87:
    v221 = v1[62];
    v222 = v1[63];
    v223 = v1[52];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v222 + 56))(v223, v178, 1, v221, v177);
    v224 = swift_release(v51);
    v225 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v222 + 48))(v223, 1, v221, v224);
    v40 = v1[88];
    v180 = v1[85];
    v226 = v1[84];
    v227 = v1[80];
    v228 = v1[79];
    if (v225 == 1)
    {
      sub_100011694(v1[52], &qword_100547AD0);
      v214 = MusicItemCollection.hasNextBatch.getter(v228);
      (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v226, v228);
      v215 = v40;
      goto LABEL_89;
    }
    v273 = (char *)v1[66];
    v346 = v1[88];
    v40 = v1[63];
    v274 = v1[64];
    v275 = v1[62];
    v276 = v347[52];
    swift_bridgeObjectRelease(v347[47]);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v273, v276, v275);
    v277 = sub_10000B4C8(&qword_100547C28);
    v278 = (_OWORD *)swift_allocObject(v277, 80, 7);
    v278[1] = xmmword_100424BB0;
    v163(v274, v273, v275);
    sub_10000EB2C(v274, v335);
    v279 = *((_OWORD *)v335 + 1);
    v278[2] = *(_OWORD *)v335;
    v278[3] = v279;
    v278[4] = *((_OWORD *)v335 + 2);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v273, v275);
    (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v226, v228);
    v289(v346, v180);
    v214 = 0;
    v347[47] = v278;
    v1 = v347;
  }
  else
  {
    v131 = v1[63];
    v1[46] = _swiftEmptyArrayStorage;
    v301 = (_QWORD **)(v1 + 46);
    sub_100038418(0, v79, 0);
    v132 = (char *)v51 + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
    v304 = *(void (**)(uint64_t, char *, uint64_t))(v131 + 16);
    v308 = *(_QWORD *)(v131 + 72);
    do
    {
      v326 = v79;
      v133 = v1[72];
      v134 = v1[71];
      v135 = v1[62];
      v136 = v1[60];
      v138 = v1[53];
      v137 = v1[54];
      v304(v133, v132, v135);
      v139 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v304)(v134, v133, v135);
      v140 = Playlist.id.getter(v139);
      v321 = v141;
      Playlist.geoLocation.getter(v140);
      v142 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v136, 1, v138);
      v143 = v1[71];
      v144 = v1[62];
      v145 = v1[63];
      v146 = v1[60];
      v334 = v140;
      if (v142 == 1)
      {
        sub_100011694(v146, &qword_100547BD8);
        v147 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
        v147(v143, v144);
        v312 = 0;
        v316 = 0;
        v148 = 0;
        v149 = 0xE000000000000000;
      }
      else
      {
        v150 = v1[56];
        v151 = v1[53];
        v152 = v1[54];
        v153 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 32))(v150, v146, v151);
        v148 = Playlist.GeoLocation.name.getter(v153);
        v149 = v154;
        v312 = Playlist.GeoLocation.countryCode.getter();
        v316 = v155;
        v147 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
        v147(v143, v144);
        (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v150, v151);
      }
      v147(v1[72], v1[62]);
      v156 = (_QWORD *)v1[46];
      if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) == 0)
      {
        sub_100038418(0, v156[2] + 1, 1);
        v156 = *v301;
      }
      v158 = v156[2];
      v157 = v156[3];
      if (v158 >= v157 >> 1)
      {
        sub_100038418(v157 > 1, v158 + 1, 1);
        v156 = *v301;
      }
      v156[2] = v158 + 1;
      v159 = &v156[6 * v158];
      v159[4] = v334;
      v159[5] = v321;
      v159[6] = v148;
      v159[7] = v149;
      v159[8] = v312;
      v159[9] = v316;
      v132 += v308;
      v79 = v326 - 1;
    }
    while (v326 != 1);
    v179 = v1[88];
    v180 = v1[85];
    v181 = v1[84];
    v40 = v1[80];
    v182 = v1[79];
    swift_release(v340);
LABEL_84:
    sub_10000B18C((uint64_t)v156);
    v214 = MusicItemCollection.hasNextBatch.getter(v182);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v181, v182);
    v215 = v179;
LABEL_89:
    v289(v215, v180);
  }
  v229 = v1[35];
  v230 = __OFADD__(v229, 1);
  v231 = v229 + 1;
  if (v230)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v232 = (void (*)(uint64_t, uint64_t))v1[100];
  v233 = v1[96];
  v234 = v1[93];
  v1[35] = v231;
  v232(v233, v234);
  if ((v214 & 1) == 0)
    goto LABEL_46;
  v235 = v1 + 18;
  v344 = *((_DWORD *)v1 + 204);
  v236 = (unsigned int *)v1 + 61;
  v237 = v1[96];
  v238 = v1[92];
  v239 = v1[91];
  v327 = v1[90];
  v336 = v1[89];
  v240 = v1[62];
  if (*((_BYTE *)v1 + 242))
    v236 = (unsigned int *)v1 + 57;
  v241 = *v236;
  v242 = type metadata accessor for Genre(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v242 - 8) + 56))(v238, 1, 1, v242);
  v243 = sub_10000B4C8(&qword_100547BF8);
  v244 = type metadata accessor for MusicCatalogChartKind(0);
  v245 = *(_QWORD *)(v244 - 8);
  v246 = *(unsigned __int8 *)(v245 + 80);
  v247 = (v246 + 32) & ~v246;
  v248 = swift_allocObject(v243, v247 + *(_QWORD *)(v245 + 72), v246 | 7);
  *(_OWORD *)(v248 + 16) = xmmword_100424BB0;
  v249 = v248 + v247;
  v250 = v235;
  v40 = (uint64_t)v347;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v245 + 104))(v249, v241, v244);
  v251 = sub_10000B4C8(&qword_100547C00);
  v252 = swift_allocObject(v251, 48, 7);
  *(_OWORD *)(v252 + 16) = xmmword_100424BB0;
  *(_QWORD *)(v252 + 32) = v240;
  *(_QWORD *)(v252 + 40) = &protocol witness table for Playlist;
  MusicCatalogChartsRequest.init(genre:kinds:types:)(v238, v248, v252);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v327 + 104))(v239, v344, v336);
  v253 = swift_beginAccess(v237, v250, 33, 0);
  MusicCatalogChartsRequest.source.setter(v239, v253);
  MusicCatalogChartsRequest.includeGeoLocation.setter(1);
  MusicCatalogChartsRequest.excludeDefaultCharts.setter(1);
  MusicCatalogChartsRequest.limit.setter(200, 0);
  if ((unsigned __int128)(*(uint64_t *)(v40 + 280) * (__int128)200) >> 64 != (200 * *(_QWORD *)(v40 + 280)) >> 63)
    goto LABEL_102;
  MusicCatalogChartsRequest.offset.setter();
  swift_endAccess(v250);
  if (qword_100547770 != -1)
LABEL_103:
    swift_once(&qword_100547770, sub_10000D72C);
  v254 = type metadata accessor for Logger(0);
  v255 = sub_10000D78C(v254, (uint64_t)qword_100547778);
  *(_QWORD *)(v40 + 776) = v255;
  v256 = Logger.logObject.getter(v255);
  v257 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v256, v257))
  {
    v322 = v40 + 96;
    v328 = v40 + 216;
    v345 = v40 + 352;
    v258 = v347[96];
    v259 = *((_BYTE *)v347 + 242);
    v260 = swift_slowAlloc(32, -1);
    v337 = swift_slowAlloc(64, -1);
    v349[0] = v337;
    *(_DWORD *)v260 = 136446722;
    *((_BYTE *)v347 + 225) = v259;
    v261 = String.init<A>(describing:)((char *)v347 + 225, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    v263 = v262;
    v347[51] = sub_1000759E0(v261, v262, v349);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v347 + 51, v347 + 52);
    swift_bridgeObjectRelease(v263);
    *(_WORD *)(v260 + 12) = 2050;
    v347[50] = v347[35];
    v40 = (uint64_t)v347;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v291, v347 + 51);
    *(_WORD *)(v260 + 22) = 2082;
    v264 = swift_beginAccess(v258, v322, 32, 0);
    v265 = MusicCatalogChartsRequest.offset.getter(v264);
    v267 = v266;
    swift_endAccess(v322);
    v347[27] = v265;
    *((_BYTE *)v347 + 224) = v267 & 1;
    v268 = sub_10000B4C8(&qword_100547C08);
    v269 = String.init<A>(describing:)(v328, v268);
    v271 = v270;
    v347[44] = sub_1000759E0(v269, v270, v349);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v345, v297);
    swift_bridgeObjectRelease(v271);
    _os_log_impl((void *)&_mh_execute_header, v256, v257, "Asking server for %{public}s chart list, batch: %{public}ld, offset: %{public}s.", (uint8_t *)v260, 0x20u);
    swift_arrayDestroy(v337, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v337, -1, -1);
    swift_slowDealloc(v260, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v40 + 752) + 16))(*(_QWORD *)(v40 + 760), *(_QWORD *)(v40 + 768), *(_QWORD *)(v40 + 744));
  v272 = (uint64_t *)swift_task_alloc(async function pointer to MusicCatalogChartsRequest.response()[1]);
  *(_QWORD *)(v40 + 784) = v272;
  *v272 = v40;
  v272[1] = (uint64_t)sub_10000F448;
  return MusicCatalogChartsRequest.response()(*(_QWORD *)(v40 + 704));
}

uint64_t sub_100010C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[2];

  v1 = *(_QWORD *)(v0 + 792);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 792);
    v72 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
    v74 = *(_QWORD *)(v0 + 768);
    v69 = *(_QWORD *)(v0 + 744);
    v6 = *(_BYTE *)(v0 + 242);
    v7 = swift_slowAlloc(42, -1);
    v65 = (uint64_t *)swift_slowAlloc(8, -1);
    v67 = swift_slowAlloc(64, -1);
    v77[0] = v67;
    *(_DWORD *)v7 = 136446978;
    *(_BYTE *)(v0 + 241) = v6;
    v8 = String.init<A>(describing:)(v0 + 241, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    v10 = v9;
    *(_QWORD *)(v0 + 264) = sub_1000759E0(v8, v9, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 264, v0 + 272);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v7 + 12) = 2050;
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 280);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 272, v0 + 280);
    *(_WORD *)(v7 + 22) = 2082;
    v11 = swift_beginAccess(v74, v0 + 192, 32, 0);
    v12 = MusicCatalogChartsRequest.offset.getter(v11);
    v14 = v13;
    swift_endAccess(v0 + 192);
    *(_QWORD *)(v0 + 232) = v12;
    *(_BYTE *)(v0 + 240) = v14 & 1;
    v15 = sub_10000B4C8(&qword_100547C08);
    v16 = String.init<A>(describing:)(v0 + 232, v15);
    v18 = v17;
    *(_QWORD *)(v0 + 296) = sub_1000759E0(v16, v17, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 296, v0 + 304);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v7 + 32) = 2114;
    swift_errorRetain(v5);
    v19 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 304) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 304, v0 + 312);
    *v65 = v19;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Request failed for %{public}s chart list, batch: %{public}ld, offset: %{public}s with %{public}@", (uint8_t *)v7, 0x2Au);
    v20 = sub_10000B4C8(&qword_100547B10);
    swift_arrayDestroy(v65, 1, v20);
    swift_slowDealloc(v65, -1, -1);
    swift_arrayDestroy(v67, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v5);
    v72(v74, v69);
  }
  else
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
    v22 = *(_QWORD *)(v0 + 792);
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(_QWORD *)(v0 + 744);
    swift_errorRelease(v22);
    swift_errorRelease(v22);
    swift_errorRelease(v22);

    v21(v23, v24);
  }
  v25 = (_QWORD *)(v0 + 376);
  v26 = *(_QWORD *)(v0 + 376);
  v27 = swift_bridgeObjectRetain_n(v26, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v70 = *(_BYTE *)(v0 + 242);
    v30 = swift_slowAlloc(22, -1);
    v31 = swift_slowAlloc(64, -1);
    v77[0] = v31;
    *(_DWORD *)v30 = 136446466;
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v26 + 16);
    v32 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v34 = v33;
    *(_QWORD *)(v0 + 288) = sub_1000759E0(v32, v33, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 288, v0 + 296);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v30 + 12) = 2082;
    *(_BYTE *)(v0 + 227) = v70;
    v35 = String.init<A>(describing:)(v0 + 227, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    v37 = v36;
    *(_QWORD *)(v0 + 248) = sub_1000759E0(v35, v36, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 248, v0 + 256);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Fetched %{public}s %{public}s charts", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v26, 2);
  }
  swift_beginAccess(v0 + 376, v0 + 168, 0, 0);
  if (*(_QWORD *)(*v25 + 16))
  {
    v76 = *v25;
  }
  else
  {
    swift_bridgeObjectRelease(*v25);
    v76 = 0;
  }
  v38 = *(_QWORD *)(v0 + 760);
  v39 = *(_QWORD *)(v0 + 736);
  v40 = *(_QWORD *)(v0 + 728);
  v41 = *(_QWORD *)(v0 + 704);
  v42 = *(_QWORD *)(v0 + 696);
  v43 = *(_QWORD *)(v0 + 672);
  v44 = *(_QWORD *)(v0 + 664);
  v45 = *(_QWORD *)(v0 + 656);
  v46 = *(_QWORD *)(v0 + 648);
  v48 = *(_QWORD *)(v0 + 624);
  v49 = *(_QWORD *)(v0 + 616);
  v50 = *(_QWORD *)(v0 + 600);
  v51 = *(_QWORD *)(v0 + 592);
  v52 = *(_QWORD *)(v0 + 584);
  v53 = *(_QWORD *)(v0 + 576);
  v54 = *(_QWORD *)(v0 + 568);
  v55 = *(_QWORD *)(v0 + 560);
  v56 = *(_QWORD *)(v0 + 552);
  v57 = *(_QWORD *)(v0 + 544);
  v58 = *(_QWORD *)(v0 + 536);
  v59 = *(_QWORD *)(v0 + 528);
  v60 = *(_QWORD *)(v0 + 520);
  v61 = *(_QWORD *)(v0 + 512);
  v62 = *(_QWORD *)(v0 + 488);
  v63 = *(_QWORD *)(v0 + 480);
  v64 = *(_QWORD *)(v0 + 472);
  v66 = *(_QWORD *)(v0 + 464);
  v68 = *(_QWORD *)(v0 + 456);
  v71 = *(_QWORD *)(v0 + 448);
  v73 = *(_QWORD *)(v0 + 440);
  v75 = *(_QWORD *)(v0 + 416);
  swift_task_dealloc(*(_QWORD *)(v0 + 768));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v71);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v76);
}

uint64_t type metadata accessor for WidgetChartDiskCache.ChartList(uint64_t a1)
{
  return sub_10001133C(a1, qword_100547CB8, (uint64_t)&nominal type descriptor for WidgetChartDiskCache.ChartList);
}

uint64_t sub_10001133C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_100011370(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000B4C8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000113B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10000B4C8(&qword_100547BC8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = v0 + v4;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);

  v13 = v10 + *(int *)(v1 + 24);
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v15 = v0 + v8;
  v16 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v0 + v8, 1, v16))
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v8, v17);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + *(int *)(v16 + 20) + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + *(int *)(v16 + 24)));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_100011530(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000B4C8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100011574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_100547BC8) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_10054A67C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_100012D1C;
  return sub_10006BC88(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_100011650(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100011694(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10000B4C8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000116D0()
{
  unint64_t result;

  result = qword_100547C40;
  if (!qword_100547C40)
  {
    result = swift_getWitnessTable(&unk_100424864, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547C40);
  }
  return result;
}

unint64_t sub_100011714()
{
  unint64_t result;

  result = qword_100547C48;
  if (!qword_100547C48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_100547C48);
  }
  return result;
}

uint64_t sub_100011758(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_100011778()
{
  unint64_t result;

  result = qword_100547C58;
  if (!qword_100547C58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_100547C58);
  }
  return result;
}

uint64_t sub_1000117BC(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

_BYTE *initializeBufferWithCopyOfBuffer for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys()
{
  return &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys;
}

ValueMetadata *type metadata accessor for TopChartsWidgetDataProvider.ChartKind()
{
  return &type metadata for TopChartsWidgetDataProvider.ChartKind;
}

uint64_t *sub_100011820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v13;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
  }
  return a1;
}

uint64_t sub_1000118C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_100011918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v12;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t sub_100011990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  v14 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_100011A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100011A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 24);
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_100011B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100011B18);
}

uint64_t sub_100011B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100011B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100011BA0);
}

uint64_t sub_100011BA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_100011C18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100424650;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100011C98(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = v21;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
  }
  return a1;
}

uint64_t sub_100011D70(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

uint64_t sub_100011DE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v20;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  return a1;
}

uint64_t sub_100011E90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = a3[8];
  v23 = *(_QWORD *)(a2 + v22);
  v24 = *(_QWORD *)(a1 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  return a1;
}

uint64_t sub_100011F80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100011FF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  v25 = a3[8];
  v26 = *(_QWORD *)(a1 + v25);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_1000120B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000120BC);
}

uint64_t sub_1000120BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10001213C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100012148);
}

uint64_t sub_100012148(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1000121C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100424650;
    v4[2] = &unk_100424670;
    v4[3] = &unk_100424670;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

__n128 initializeWithTake for HeaderView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_100547D98)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, &unk_1004F9478);
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100547D98);
  }
}

uint64_t sub_1000122F8()
{
  return sub_100012324(&qword_100547DA0, &qword_100547DA8, (const char *)&protocol conformance descriptor for [A]);
}

uint64_t sub_100012324(unint64_t *a1, uint64_t *a2, const char *a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100011650(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012368()
{
  unint64_t result;

  result = qword_100547DB0;
  if (!qword_100547DB0)
  {
    result = swift_getWitnessTable(&unk_100424784, &type metadata for TopChartsWidgetDataProvider.ChartKind);
    atomic_store(result, (unint64_t *)&qword_100547DB0);
  }
  return result;
}

unint64_t sub_1000123B0()
{
  unint64_t result;

  result = qword_100547DB8;
  if (!qword_100547DB8)
  {
    result = swift_getWitnessTable(&unk_10042483C, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547DB8);
  }
  return result;
}

unint64_t sub_1000123F8()
{
  unint64_t result;

  result = qword_100547DC0;
  if (!qword_100547DC0)
  {
    result = swift_getWitnessTable(&unk_1004247AC, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547DC0);
  }
  return result;
}

unint64_t sub_100012440()
{
  unint64_t result;

  result = qword_100547DC8;
  if (!qword_100547DC8)
  {
    result = swift_getWitnessTable(&unk_1004247D4, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547DC8);
  }
  return result;
}

unint64_t sub_100012484()
{
  unint64_t result;

  result = qword_100547DD8;
  if (!qword_100547DD8)
  {
    result = swift_getWitnessTable(&unk_100424B14, &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547DD8);
  }
  return result;
}

uint64_t sub_1000124C8(unint64_t *a1, unint64_t *a2, uint64_t a3, const char *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_100011650(&qword_100547DE8);
    v10 = sub_10001254C(a2, type metadata accessor for WidgetMusicItem, a3);
    result = swift_getWitnessTable(a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001254C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001258C()
{
  unint64_t result;

  result = qword_100547E28;
  if (!qword_100547E28)
  {
    result = swift_getWitnessTable(&unk_100424AC4, &type metadata for WidgetChartDiskCache.ChartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E28);
  }
  return result;
}

uint64_t sub_1000125D0(unint64_t *a1, uint64_t (*a2)(void), const char *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_100011650(&qword_100547E30);
    v8 = a2();
    result = swift_getWitnessTable(a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012638()
{
  unint64_t result;

  result = qword_100547E40;
  if (!qword_100547E40)
  {
    result = swift_getWitnessTable(&unk_100424554, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100547E40);
  }
  return result;
}

unint64_t sub_10001267C()
{
  unint64_t result;

  result = qword_100547E58;
  if (!qword_100547E58)
  {
    result = swift_getWitnessTable(&unk_10042452C, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100547E58);
  }
  return result;
}

uint64_t _s17ChildrenAddStatusOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12MusicWidgets27TopChartsWidgetDataProviderC15ChartDescriptorV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10001279C + 4 * byte_1004244DA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000127D0 + 4 * byte_1004244D5[v4]))();
}

uint64_t sub_1000127D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000127D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000127E0);
  return result;
}

uint64_t sub_1000127EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000127F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000127F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012800(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001280C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100012814(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetChartDiskCache.ChartList.CodingKeys()
{
  return &type metadata for WidgetChartDiskCache.ChartList.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TopChartsWidgetDataProvider.Chart.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TopChartsWidgetDataProvider.Chart.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100012908 + 4 * byte_1004244E4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10001293C + 4 * byte_1004244DF[v4]))();
}

uint64_t sub_10001293C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10001294CLL);
  return result;
}

uint64_t sub_100012958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100012960);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100012964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001296C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TopChartsWidgetDataProvider.Chart.CodingKeys()
{
  return &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys;
}

unint64_t sub_10001298C()
{
  unint64_t result;

  result = qword_100547E60;
  if (!qword_100547E60)
  {
    result = swift_getWitnessTable(&unk_1004249E4, &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E60);
  }
  return result;
}

unint64_t sub_1000129D4()
{
  unint64_t result;

  result = qword_100547E68;
  if (!qword_100547E68)
  {
    result = swift_getWitnessTable(&unk_100424A9C, &type metadata for WidgetChartDiskCache.ChartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E68);
  }
  return result;
}

unint64_t sub_100012A1C()
{
  unint64_t result;

  result = qword_100547E70;
  if (!qword_100547E70)
  {
    result = swift_getWitnessTable(&unk_100424A0C, &type metadata for WidgetChartDiskCache.ChartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E70);
  }
  return result;
}

unint64_t sub_100012A64()
{
  unint64_t result;

  result = qword_100547E78;
  if (!qword_100547E78)
  {
    result = swift_getWitnessTable(&unk_100424A34, &type metadata for WidgetChartDiskCache.ChartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E78);
  }
  return result;
}

unint64_t sub_100012AAC()
{
  unint64_t result;

  result = qword_100547E80;
  if (!qword_100547E80)
  {
    result = swift_getWitnessTable(&unk_100424954, &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E80);
  }
  return result;
}

unint64_t sub_100012AF4()
{
  unint64_t result;

  result = qword_100547E88;
  if (!qword_100547E88)
  {
    result = swift_getWitnessTable(&unk_10042497C, &type metadata for TopChartsWidgetDataProvider.Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100547E88);
  }
  return result;
}

uint64_t sub_100012B38(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446863746566, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x617A696C61636F6CLL && a2 == 0xEC0000006E6F6974)
  {
    v7 = 0xEC0000006E6F6974;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617A696C61636F6CLL, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100012CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10054A40C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10054A408 + dword_10054A408))(a1, v4);
}

ValueMetadata *type metadata accessor for TopChartsWidget()
{
  return &type metadata for TopChartsWidget;
}

uint64_t sub_100012D40(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100481DBC, 1);
}

uint64_t sub_100012D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;

  v68 = a1;
  v1 = type metadata accessor for TopChartsWidgetTimelineProvider(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100547E98);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100547EA0);
  v9 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  v64 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_10000B4C8(&qword_100547EA8);
  v65 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_100547EB0);
  v14 = *(_QWORD *)(v13 - 8);
  v66 = v13;
  v67 = v14;
  __chkstk_darwin(v13);
  v71 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.music(_:)(0xD00000000000001FLL, 0x8000000100444530);
  v16 = type metadata accessor for TopChartsWidgetView(0);
  v17 = sub_10001254C(&qword_100547EB8, type metadata accessor for TopChartsWidgetView, (uint64_t)&unk_100425BC4);
  v18 = sub_10001254C(&qword_100547EC0, type metadata accessor for TopChartsWidgetTimelineProvider, (uint64_t)&unk_100427AE0);
  AppIntentConfiguration.init<A>(kind:intent:provider:content:)(0xD000000000000015, 0x8000000100444510, &type metadata for TopChartsWidgetConfigurationIntent, v3, sub_1000132DC, 0, &type metadata for TopChartsWidgetConfigurationIntent, v16, v1, v17, v18);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x7261684320706F54, 0xEA00000000007374);
  v21 = v20;
  LOBYTE(v17) = v22;
  v24 = v23;
  v25 = sub_10001333C();
  WidgetConfiguration.configurationDisplayName(_:)(v19, v21, v17 & 1, v24, v4, v25);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v26 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000003BLL, 0x8000000100444550);
  v28 = v27;
  LOBYTE(v7) = v29;
  v31 = v30;
  v72 = v4;
  v73 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v72, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v33 = v26;
  v34 = v63;
  WidgetConfiguration.description(_:)(v33, v28, v7 & 1, v31, v63, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v28);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v11, v34);
  v35 = sub_10000B4C8(&qword_100547ED0);
  v64 = v35;
  v36 = type metadata accessor for WidgetFamily(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(_QWORD *)(v37 + 72);
  v39 = *(unsigned __int8 *)(v37 + 80);
  v40 = (v39 + 32) & ~v39;
  v61 = v39 | 7;
  v62 = v40 + 4 * v38;
  v41 = swift_allocObject(v35, v62, v39 | 7);
  v60 = xmmword_100424BC0;
  *(_OWORD *)(v41 + 16) = xmmword_100424BC0;
  v59 = enum case for WidgetFamily.systemSmall(_:);
  v42 = *(void (**)(uint64_t))(v37 + 104);
  v42(v41 + v40);
  v58 = enum case for WidgetFamily.systemMedium(_:);
  v42(v41 + v40 + v38);
  v57 = enum case for WidgetFamily.systemLarge(_:);
  v42(v41 + v40 + 2 * v38);
  v56 = 3 * v38;
  v43 = enum case for WidgetFamily.systemExtraLarge(_:);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v41 + v40 + 3 * v38, enum case for WidgetFamily.systemExtraLarge(_:), v36);
  v72 = v34;
  v73 = OpaqueTypeConformance2;
  v44 = swift_getOpaqueTypeConformance2(&v72, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v45 = v70;
  v46 = v69;
  WidgetConfiguration.supportedFamilies(_:)(v41, v70, v44);
  swift_bridgeObjectRelease(v41);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v45);
  v47 = sub_10000B4C8(&qword_100547ED8);
  v48 = type metadata accessor for WidgetLocation(0);
  v49 = swift_allocObject(v47, ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) | 7);
  *(_OWORD *)(v49 + 16) = xmmword_100424BB0;
  static WidgetLocation.iPhoneWidgetsOnMac.getter();
  v50 = swift_allocObject(v64, v62, v61);
  *(_OWORD *)(v50 + 16) = v60;
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v50 + v40, v59, v36);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v50 + v40 + v38, v58, v36);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v50 + v40 + 2 * v38, v57, v36);
  ((void (*)(uint64_t, uint64_t, uint64_t))v42)(v50 + v40 + v56, v43, v36);
  v72 = v70;
  v73 = v44;
  v51 = swift_getOpaqueTypeConformance2(&v72, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v52 = v66;
  v53 = v71;
  WidgetConfiguration.disfavoredLocations(_:for:)(v49, v50, v66, v51);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v50);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v53, v52);
}

uint64_t sub_1000132DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  sub_100013388(a1, a2);
  v3 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TopChartsWidgetView(0) + 20));
  *v3 = swift_getKeyPath(&unk_100424C30);
  v4 = sub_10000B4C8(&qword_100547EE0);
  return swift_storeEnumTagMultiPayload(v3, v4, 0);
}

unint64_t sub_10001333C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100547EC8;
  if (!qword_100547EC8)
  {
    v1 = sub_100011650(&qword_100547E98);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for AppIntentConfiguration<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100547EC8);
  }
  return result;
}

uint64_t sub_100013388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000133CC()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_1000133EC()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_10001340C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;

  v0 = sub_100011650(&qword_100547EB0);
  v1 = sub_100011650(&qword_100547EA8);
  v2 = sub_100011650(&qword_100547EA0);
  v7 = sub_100011650(&qword_100547E98);
  v8 = sub_10001333C();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v7 = v2;
  v8 = OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v7 = v1;
  v8 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
  v7 = v0;
  v8 = v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disfavoredLocations(_:for:)>>, 1);
}

id sub_1000134D8()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for NowPlayingDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_10001500C();
  qword_1005611E0 = (uint64_t)result;
  return result;
}

void sub_100013514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v4 = sub_10000B4C8(&qword_1005482E0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (void *)objc_opt_self(MPAVRoutingController);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_1004F9718, v9 + v6, v8 | 7);
  *(_QWORD *)(v10 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100016DAC;
  v14 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100013BD4;
  aBlock[3] = &unk_1004F9730;
  v11 = _Block_copy(aBlock);
  v12 = v14;
  swift_retain(a2);
  objc_msgSend(v7, "getActiveRouteWithCompletion:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
}

uint64_t sub_100013664(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v6 = sub_10000B4C8(&qword_1005482E0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = objc_msgSend(objc_allocWithZone((Class)MPCPlayerRequest), "init");
  v10 = a1;
  v11 = MPCPlaybackEngine.Configuration.systemMusic.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = objc_msgSend((id)objc_opt_self(MPCPlayerPath), "pathWithRoute:bundleID:playerID:", v10, 0, v12);

  objc_msgSend(v9, "setPlayerPath:", v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(&unk_1004F9768, v15 + v8, v14 | 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v9;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_100016E88;
  v23 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100013B60;
  aBlock[3] = &unk_1004F9780;
  v17 = _Block_copy(aBlock);
  v18 = v23;
  swift_retain(a2);
  v19 = v9;
  v20 = objc_msgSend(v19, "performWithCompletion:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

  return swift_unknownObjectRelease(v20);
}

uint64_t sub_10001386C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __CFString *v16;
  __CFString *v17;
  __CFString *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v28;
  uint64_t v29;

  if (a1)
  {
    v5 = (unint64_t)objc_msgSend(a1, "state");
    v6 = v5 - 2;
    if (v5 - 2 <= 4 && ((0x1Du >> v6) & 1) != 0)
    {
      v7 = 8 * v6;
      v8 = 0x100010000uLL >> (v7 & 0xF8);
      v5 = *(_QWORD *)((char *)&unk_100424F30 + v7);
      goto LABEL_7;
    }
  }
  else
  {
    v5 = 0;
  }
  LOBYTE(v8) = 2;
LABEL_7:
  v9 = a4;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(32, -1);
    v13 = swift_slowAlloc(96, -1);
    v29 = v13;
    *(_DWORD *)v12 = 136446722;
    LOBYTE(v28) = v8;
    v14 = String.init<A>(describing:)(&v28, &type metadata for NowPlayingDataProvider.PlayerState);
    v16 = (__CFString *)v15;
    v28 = (id)sub_1000759E0(v14, v15, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v12 + 12) = 2082;
    if (v5 <= 6)
    {
      v16 = off_1004F9900[v5];
      v17 = off_1004F98C8[v5];
    }
    v18 = v16;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v28 = (id)sub_1000759E0(v19, v21, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v12 + 22) = 2082;
    v28 = objc_msgSend(v9, "playerPath");
    v22 = sub_10000B4C8(&qword_1005482E8);
    v23 = String.init<A>(describing:)(&v28, v22);
    v25 = v24;
    v28 = (id)sub_1000759E0(v23, v24, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);

    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Widget state: %{public}s, mpcState: %{public}s, path: %{public}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy(v13, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  LOBYTE(v29) = v8;
  v26 = sub_10000B4C8(&qword_1005482E0);
  return CheckedContinuation.resume(returning:)(&v29, v26);
}

void sub_100013B60(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_100013BD4(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_100013C28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100066A60(*a1, *a2);
}

Swift::Int sub_100013C34()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x646573756170;
  if (v1 != 1)
  {
    v3 = 0x646570706F7473;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x676E6979616C70;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100013CD0(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x646573756170;
  if (*v1 != 1)
  {
    v3 = 0x646570706F7473;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x676E6979616C70;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100013D48()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x646573756170;
  if (v1 != 1)
  {
    v3 = 0x646570706F7473;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x676E6979616C70;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100013DE0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1000170DC(*a1);
  *a2 = result;
  return result;
}

void sub_100013E0C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x646573756170;
  if (v2 != 1)
  {
    v5 = 0x646570706F7473;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x676E6979616C70;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100013E68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[2] = v0;
  v2 = sub_10000B4C8(&qword_1005481F0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v1[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[5] = v4;
  v1[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_1005482C8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_1005482D8);
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v1[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[11] = v8;
  v1[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100013F60, 0, 0);
}

uint64_t sub_100013F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  sub_100011370(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItemProgress, v3, &qword_1005482C8);
  sub_10006A4FC(*(_QWORD *)(v3 + *(int *)(v5 + 44)), *(_QWORD *)(v3 + *(int *)(v5 + 44) + 8), v4);
  sub_100011694(v3, &qword_1005482C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 72), &qword_1005482D8);
    v6 = 0.0;
  }
  else
  {
    sub_10000DB44(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96), type metadata accessor for NowPlayingDataProvider.ItemProgress);
    if (qword_100547798 != -1)
      swift_once(&qword_100547798, sub_100014474);
    v7 = *(_QWORD *)(v0 + 96);
    v8 = sub_10000D78C(*(_QWORD *)(v0 + 80), (uint64_t)qword_1005611E8);
    v6 = 0.0;
    if (!sub_1000169F8(v7, v8))
    {
      v9 = *(_QWORD *)(v0 + 32);
      v10 = *(_QWORD *)(v0 + 40);
      v11 = *(_QWORD *)(v0 + 24);
      sub_100011370(*(_QWORD *)(v0 + 96) + *(int *)(*(_QWORD *)(v0 + 80) + 24), v11, &qword_1005481F0);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
      v13 = *(_QWORD *)(v0 + 48);
      if (v12 == 1)
      {
        v14 = *(_QWORD *)(v0 + 24);
        static Date.now.getter(v13);
        sub_100011694(v14, &qword_1005481F0);
      }
      else
      {
        (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(v13, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
      }
      v16 = *(_QWORD *)(v0 + 40);
      v15 = *(_QWORD *)(v0 + 48);
      v17 = *(_QWORD *)(v0 + 32);
      v6 = Date.distance(to:)(*(_QWORD *)(v0 + 96) + *(int *)(*(_QWORD *)(v0 + 80) + 20));
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    }
    sub_10001624C(*(_QWORD *)(v0 + 96));
  }
  v18 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 48);
  v21 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v19);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(double))(v0 + 8))(v6);
}

uint64_t sub_100014178(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_10000B4C8(&qword_1005482C8);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_1005482D8);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000141FC, 0, 0);
}

uint64_t sub_1000141FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_100014288;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 64, 0, 0, 0x7453726579616C70, 0xEB00000000657461, sub_100016D2C, *(_QWORD *)(v0 + 24), &type metadata for NowPlayingDataProvider.PlayerState);
}

uint64_t sub_100014288()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_1000142DC, 0, 0);
}

uint64_t sub_1000142DC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_BYTE *)(v0 + 64))
  {
    if (*(_BYTE *)(v0 + 64) != 1)
    {
      swift_bridgeObjectRelease(0xE700000000000000);
      goto LABEL_9;
    }
    v1 = 0x646573756170;
    v2 = 0xE600000000000000;
  }
  else
  {
    v1 = 0x676E6979616C70;
    v2 = 0xE700000000000000;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0x646570706F7473, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v2);
  if ((v3 & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);
    sub_100011370(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItemProgress, v5, &qword_1005482C8);
    sub_10006A4FC(*(_QWORD *)(v5 + *(int *)(v6 + 44)), *(_QWORD *)(v5 + *(int *)(v6 + 44) + 8), v4);
    sub_100011694(v5, &qword_1005482C8);
    v7 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
    v9 = *(_QWORD *)(v0 + 48);
    if (v8 != 1)
    {
      sub_10000DB44(v9, *(_QWORD *)(v0 + 16), type metadata accessor for NowPlayingDataProvider.ItemProgress);
      goto LABEL_12;
    }
    sub_100011694(v9, &qword_1005482D8);
  }
LABEL_9:
  if (qword_100547798 != -1)
    swift_once(&qword_100547798, sub_100014474);
  v10 = *(_QWORD *)(v0 + 16);
  v11 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v12 = sub_10000D78C(v11, (uint64_t)qword_1005611E8);
  sub_100016208(v12, v10);
LABEL_12:
  v13 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100014474()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, char *, uint64_t);
  uint64_t v16;

  v0 = sub_10000B4C8(&qword_1005481F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v16 - v8;
  v10 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  sub_10000D924(v10, qword_1005611E8);
  v11 = sub_10000D78C(v10, (uint64_t)qword_1005611E8);
  v12 = static Date.now.getter(v11);
  v13 = static Date.distantFuture.getter(v12);
  static Date.distantPast.getter(v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  v14 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v14(v11, v9, v3);
  v14(v11 + *(int *)(v10 + 20), v7, v3);
  return sub_1000161C0((uint64_t)v2, v11 + *(int *)(v10 + 24));
}

uint64_t sub_1000145C8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v2 = v1;
  v28 = a1;
  v3 = sub_10000B4C8(&qword_100548340);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v27 - v7;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v27 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v27 - v14, v2, v9);
  v17 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v16(v13, v2 + *(int *)(v17 + 20), v9);
  v18 = sub_10001254C(&qword_100548348, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v15, v13, v9, v18);
  if ((result & 1) != 0)
  {
    v20 = &v8[*(int *)(v3 + 48)];
    v27 = v10;
    v21 = v28;
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v8, v15, v9);
    v22(v20, v13, v9);
    v23 = &v6[*(int *)(v3 + 48)];
    v16(v6, (uint64_t)v8, v9);
    v16(v23, (uint64_t)v20, v9);
    v22(v21, v6, v9);
    v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    v24(v23, v9);
    v25 = &v6[*(int *)(v3 + 48)];
    v22(v6, v8, v9);
    v22(v25, v20, v9);
    v26 = sub_10000B4C8(&qword_100548350);
    v22(&v21[*(int *)(v26 + 36)], v25, v9);
    return ((uint64_t (*)(char *, uint64_t))v24)(v6, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000147F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  void *v14;
  Swift::String v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v20;
  _QWORD v21[2];

  v1 = sub_10000B4C8(&qword_1005481F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v21, "ItemProgress(");
  HIWORD(v21[1]) = -4864;
  v20._countAndFlagsBits = 0x7461447472617473;
  v20._object = (void *)0xEB00000000203A65;
  v4 = type metadata accessor for Date(0);
  v5 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v9);
  v20._countAndFlagsBits = 0x3A65746144646E65;
  v20._object = (void *)0xE900000000000020;
  v10 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v5);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v14);
  v20._countAndFlagsBits = 0x7461446573756170;
  v20._object = (void *)0xEB00000000203A65;
  sub_100011370(v0 + *(int *)(v10 + 24), (uint64_t)v3, &qword_1005481F0);
  v15._countAndFlagsBits = String.init<A>(describing:)(v3, v1);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v21[0];
}

uint64_t sub_100014A14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  v5 = sub_10000B4C8(&qword_1005482A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_10001617C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, v11, v9, v10);
  v21 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_10001254C(&qword_100547DE0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v21, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v15 = v3 + *(int *)(v14 + 20);
    v20 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v20, v5, v12, v13);
    v16 = v3 + *(int *)(v14 + 24);
    v19 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v16, &v19, v5, v12, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100014BAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;

  v33 = a2;
  v3 = sub_10000B4C8(&qword_1005481F0);
  __chkstk_darwin(v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Date(0);
  v35 = *(_QWORD *)(v37 - 8);
  v5 = __chkstk_darwin(v37);
  v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v36 = (uint64_t *)((char *)&v31 - v8);
  v38 = sub_10000B4C8(&qword_100548298);
  v9 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v15 = a1[4];
  sub_10000D900(a1, v16);
  v17 = sub_10001617C();
  v39 = v11;
  v18 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, v17, v16, v15);
  if (v18)
    return sub_100011758(a1);
  v19 = v9;
  v31 = v12;
  v32 = v14;
  v40 = a1;
  v43 = 0;
  v20 = (_QWORD *)sub_10001254C(&qword_100547E08, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v21 = v36;
  v22 = v37;
  v23 = v38;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v36, v37, &v43, v38, v37, v20);
  v24 = *(void (**)(char *, _QWORD *, uint64_t))(v35 + 32);
  v24(v32, v21, v22);
  v42 = 1;
  v36 = v20;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v7, v22, &v42, v23, v22, v20);
  v25 = v23;
  v26 = v31;
  v24(&v32[*(int *)(v31 + 20)], v7, v22);
  v41 = 2;
  v27 = (uint64_t)v34;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v22, &v41, v25, v22, v36);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v39, v38);
  v28 = *(int *)(v26 + 24);
  v29 = (uint64_t)v32;
  sub_1000161C0(v27, (uint64_t)&v32[v28]);
  sub_100016208(v29, v33);
  sub_100011758(v40);
  return sub_10001624C(v29);
}

uint64_t sub_100014F0C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65746144646E65;
  if (*v0 != 1)
    v1 = 0x7461446573756170;
  if (*v0)
    return v1;
  else
    return 0x7461447472617473;
}

uint64_t sub_100014F68@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100017124(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100014F8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001617C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100014FB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001617C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100014FDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100014BAC(a1, a2);
}

uint64_t sub_100014FF0(_QWORD *a1)
{
  return sub_100014A14(a1);
}

id sub_10001500C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id result;
  void *v19;

  v1 = v0;
  v2 = type metadata accessor for NowPlayingDataProvider.Cache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_QWORD *)(v0 + 16) = sub_100015324();
  static Logger.music(_:)(0xD000000000000016, 0x8000000100424C80);
  v3 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v4 = objc_msgSend(v3, "processName");

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  if (v5 == 0x646957636973754DLL && v7 == 0xEC00000073746567)
  {
    v10 = swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, 0x646957636973754DLL, 0xEC00000073746567, 0);
    v10 = swift_bridgeObjectRelease(v7);
    if ((v9 & 1) == 0)
      return (id)v1;
  }
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "running in widget process, disabling fallback cache", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v15 = objc_msgSend(v14, "artworkDataSource");
  if (v15)
  {
    v16 = v15;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v17 = (void *)swift_dynamicCastObjCClass(v16);
    if (v17)
      objc_msgSend(v17, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v16);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v19 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001527C()
{
  uint64_t v0;

  sub_100011694(v0 + OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItem, &qword_1005482C0);
  sub_100011694(v0+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItemProgress, &qword_1005482C8);
  sub_100011694(v0+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentItemBackground, &qword_1005482D0);
  sub_100011694(v0+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentContainer, &qword_1005482C0);
  sub_100011694(v0+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentContainerBackground, &qword_1005482D0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100015324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0
     + OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItem;
  v8 = type metadata accessor for WidgetMusicItem(0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v6, 1, 1, v8);
  sub_100016288((uint64_t)v6, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0x49746E6572727563, 0xEB000000006D6574, &qword_100548310, &qword_1005482C0, v7);
  v10 = v0
      + OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItemProgress;
  v11 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  sub_100016288((uint64_t)v3, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD000000000000013, 0x8000000100444710, &qword_1005482D8, &qword_1005482C8, v10);
  sub_100016530((void *)1, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD000000000000015, 0x8000000100444730, (char *)(v0+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentItemBackground));
  v12 = v0
      + OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentContainer;
  v9(v6, 1, 1, v8);
  sub_100016288((uint64_t)v6, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD000000000000010, 0x8000000100444750, &qword_100548310, &qword_1005482C0, v12);
  sub_100016530((void *)1, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD00000000000001ALL, 0x8000000100444770, (char *)(v0+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentContainerBackground));
  return v0;
}

uint64_t sub_1000155C8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC12MusicWidgets22NowPlayingDataProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100015620()
{
  return type metadata accessor for NowPlayingDataProvider(0);
}

uint64_t type metadata accessor for NowPlayingDataProvider(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100547F18, (uint64_t)&nominal type descriptor for NowPlayingDataProvider);
}

uint64_t sub_10001563C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000156B8()
{
  return type metadata accessor for NowPlayingDataProvider.Cache(0);
}

uint64_t type metadata accessor for NowPlayingDataProvider.Cache(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100548068, (uint64_t)&nominal type descriptor for NowPlayingDataProvider.Cache);
}

void sub_1000156D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_10001577C(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v9[0] = v4;
    sub_100015820(319);
    if (v6 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(v5 - 8) + 64;
      sub_1000158D8(319);
      if (v8 <= 0x3F)
      {
        v10 = *(_QWORD *)(v7 - 8) + 64;
        v11 = v4;
        v12 = v10;
        swift_updateClassMetadata2(a1, 256, 5, v9, a1 + 80);
      }
    }
  }
}

void sub_10001577C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_100548078)
  {
    v2 = type metadata accessor for WidgetMusicItem(255);
    v3 = sub_10001254C(&qword_100547E18, type metadata accessor for WidgetMusicItem, (uint64_t)&unk_100425A48);
    v4 = sub_10001254C(&qword_100547DF8, type metadata accessor for WidgetMusicItem, (uint64_t)&unk_100425A20);
    v5 = type metadata accessor for FileBacked(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_100548078);
  }
}

void sub_100015820(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_100548080)
  {
    v2 = type metadata accessor for NowPlayingDataProvider.ItemProgress(255);
    v3 = sub_10001254C(&qword_100548088, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)&unk_100424D44);
    v4 = sub_10001254C(&qword_100548090, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)&unk_100424D1C);
    v5 = type metadata accessor for FileBacked(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_100548080);
  }
}

uint64_t type metadata accessor for NowPlayingDataProvider.ItemProgress(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100548250, (uint64_t)&nominal type descriptor for NowPlayingDataProvider.ItemProgress);
}

void sub_1000158D8(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_100548098)
  {
    v2 = sub_10001593C();
    v3 = sub_100015980();
    v4 = type metadata accessor for FileBacked(a1, (uint64_t)&type metadata for CodableImage, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_100548098);
  }
}

unint64_t sub_10001593C()
{
  unint64_t result;

  result = qword_1005480A0;
  if (!qword_1005480A0)
  {
    result = swift_getWitnessTable(&unk_1004274F4, &type metadata for CodableImage);
    atomic_store(result, (unint64_t *)&qword_1005480A0);
  }
  return result;
}

unint64_t sub_100015980()
{
  unint64_t result;

  result = qword_1005480A8;
  if (!qword_1005480A8)
  {
    result = swift_getWitnessTable(&unk_1004274CC, &type metadata for CodableImage);
    atomic_store(result, (unint64_t *)&qword_1005480A8);
  }
  return result;
}

uint64_t *sub_1000159C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100015AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_100015B7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_100015C5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_100015D88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_100015E68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_100015F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100015FA0);
}

uint64_t sub_100015FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10000B4C8(&qword_1005481F0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100016018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100016024);
}

uint64_t sub_100016024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10000B4C8(&qword_1005481F0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000160A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    sub_100016128(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_100016128(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100548260)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100548260);
  }
}

unint64_t sub_10001617C()
{
  unint64_t result;

  result = qword_1005482A0;
  if (!qword_1005482A0)
  {
    result = swift_getWitnessTable(&unk_100424EDC, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005482A0);
  }
  return result;
}

uint64_t sub_1000161C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_1005481F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001624C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100016288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v38 = a6;
  v39 = a7;
  v40 = a4;
  v41 = a5;
  v34 = a2;
  v35 = a3;
  v36 = a1;
  v37 = a8;
  v33 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for WidgetDiskCache(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(int *)(v18 + 20);
  sub_100017290();
  static DispatchQoS.unspecified.getter();
  v42 = _swiftEmptyArrayStorage;
  v21 = sub_10001254C((unint64_t *)&qword_100548320, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v22 = sub_10000B4C8(&qword_100548328);
  v23 = sub_1000172CC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v42, v22, v23, v11, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v33);
  v24 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100444790, v16, v13, v10, 0);
  *(_QWORD *)&v20[v32] = v24;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v25 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v26 = v35;
  sub_1000664E0(v34, v35, v20);

  swift_bridgeObjectRelease(v26);
  sub_100011694(v36, v38);
  v27 = v37;
  sub_10000DB44((uint64_t)v20, v37, type metadata accessor for WidgetDiskCache);
  result = sub_10000B4C8(v39);
  v29 = (_QWORD *)(v27 + *(int *)(result + 44));
  v30 = v41;
  *v29 = v40;
  v29[1] = v30;
  return result;
}

uint64_t sub_100016530@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v31 = a4;
  v32 = a5;
  v28 = a2;
  v29 = a3;
  v30 = a1;
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(int *)(type metadata accessor for WidgetDiskCache(0) + 20);
  v26 = sub_100017290();
  static DispatchQoS.unspecified.getter(v26);
  v33 = _swiftEmptyArrayStorage;
  v17 = sub_10001254C((unint64_t *)&qword_100548320, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_10000B4C8(&qword_100548328);
  v19 = sub_1000172CC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v18, v19, v11, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100444790, v16, v13, v10, 0);
  *(_QWORD *)&a6[v27] = v20;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v21 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v22 = v29;
  sub_1000664E0(v28, v29, a6);

  swift_bridgeObjectRelease(v22);
  sub_100017318(v30);
  result = sub_10000B4C8(&qword_1005482D0);
  v24 = &a6[*(int *)(result + 44)];
  v25 = v32;
  *(_QWORD *)v24 = v31;
  *((_QWORD *)v24 + 1) = v25;
  return result;
}

uint64_t sub_100016794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v31 = a4;
  v32 = a5;
  v28 = a2;
  v29 = a3;
  v30 = a1;
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(int *)(type metadata accessor for WidgetDiskCache(0) + 20);
  v26 = sub_100017290();
  static DispatchQoS.unspecified.getter(v26);
  v33 = _swiftEmptyArrayStorage;
  v17 = sub_10001254C((unint64_t *)&qword_100548320, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_10000B4C8(&qword_100548328);
  v19 = sub_1000172CC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v18, v19, v11, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100444790, v16, v13, v10, 0);
  *(_QWORD *)&a6[v27] = v20;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v21 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v22 = v29;
  sub_1000664E0(v28, v29, a6);

  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v30);
  result = sub_10000B4C8(&qword_100548338);
  v24 = &a6[*(int *)(result + 44)];
  v25 = v32;
  *(_QWORD *)v24 = v31;
  *((_QWORD *)v24 + 1) = v25;
  return result;
}

BOOL sub_1000169F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_1005482B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_1005481F0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v28 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v28 - v18;
  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v29 = v7;
  v20 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if ((static Date.== infix(_:_:)(a1 + *(int *)(v20 + 20), a2 + *(int *)(v20 + 20)) & 1) == 0)
    return 0;
  sub_100011370(a1 + *(int *)(v20 + 24), (uint64_t)v19, &qword_1005481F0);
  sub_100011370(a2 + *(int *)(v20 + 24), (uint64_t)v17, &qword_1005481F0);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100011370((uint64_t)v19, (uint64_t)v10, &qword_1005481F0);
  sub_100011370((uint64_t)v17, v21, &qword_1005481F0);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_100011694((uint64_t)v17, &qword_1005481F0);
    sub_100011694((uint64_t)v19, &qword_1005481F0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_100011694((uint64_t)v10, &qword_1005481F0);
      return 1;
    }
    goto LABEL_8;
  }
  sub_100011370((uint64_t)v10, (uint64_t)v14, &qword_1005481F0);
  if (v22(v21, 1, v4) == 1)
  {
    sub_100011694((uint64_t)v17, &qword_1005481F0);
    sub_100011694((uint64_t)v19, &qword_1005481F0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_100011694((uint64_t)v10, &qword_1005482B0);
    return 0;
  }
  v23 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v21, v4);
  v24 = sub_10001254C(&qword_1005482B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v25 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v23, v4, v24);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v23, v4);
  sub_100011694((uint64_t)v17, &qword_1005481F0);
  sub_100011694((uint64_t)v19, &qword_1005481F0);
  v26(v14, v4);
  sub_100011694((uint64_t)v10, &qword_1005481F0);
  return (v25 & 1) != 0;
}

void sub_100016D2C(uint64_t a1)
{
  uint64_t v1;

  sub_100013514(a1, v1);
}

uint64_t sub_100016D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_10000B4C8(&qword_1005482E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100016DAC(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_1005482E0) - 8) + 80);
  return sub_100013664(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_100016DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100016E00(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100016E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10000B4C8(&qword_1005482E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100016E88(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10000B4C8(&qword_1005482E0);
  return sub_10001386C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

ValueMetadata *type metadata accessor for NowPlayingDataProvider.PlayerState()
{
  return &type metadata for NowPlayingDataProvider.PlayerState;
}

uint64_t _s12MusicWidgets22NowPlayingDataProviderC11PlayerStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100016F3C + 4 * byte_100424C75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100016F70 + 4 * byte_100424C70[v4]))();
}

uint64_t sub_100016F70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100016F78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100016F80);
  return result;
}

uint64_t sub_100016F8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100016F94);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100016F98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100016FA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingDataProvider.ItemProgress.CodingKeys()
{
  return &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys;
}

unint64_t sub_100016FC0()
{
  unint64_t result;

  result = qword_1005482F0;
  if (!qword_1005482F0)
  {
    result = swift_getWitnessTable(&unk_100424E14, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005482F0);
  }
  return result;
}

unint64_t sub_100017008()
{
  unint64_t result;

  result = qword_1005482F8;
  if (!qword_1005482F8)
  {
    result = swift_getWitnessTable(&unk_100424EB4, &type metadata for NowPlayingDataProvider.PlayerState);
    atomic_store(result, (unint64_t *)&qword_1005482F8);
  }
  return result;
}

unint64_t sub_100017050()
{
  unint64_t result;

  result = qword_100548300;
  if (!qword_100548300)
  {
    result = swift_getWitnessTable(&unk_100424D84, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100548300);
  }
  return result;
}

unint64_t sub_100017098()
{
  unint64_t result;

  result = qword_100548308;
  if (!qword_100548308)
  {
    result = swift_getWitnessTable(&unk_100424DAC, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100548308);
  }
  return result;
}

unint64_t sub_1000170DC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004F8CC8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100017124(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461447472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65746144646E65, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x7461446573756170 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7461446573756170, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_100017290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548318;
  if (!qword_100548318)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100548318);
  }
  return result;
}

unint64_t sub_1000172CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548330;
  if (!qword_100548330)
  {
    v1 = sub_100011650(&qword_100548328);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100548330);
  }
  return result;
}

void sub_100017318(id a1)
{
  if (a1 != (id)1)

}

char *sub_100017330(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD *, uint64_t, int *);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void (*v72)(_QWORD *, _QWORD, uint64_t, int *);
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  id v90;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *__dsta;
  char *__dst;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v32);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v101 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v99 = v7;
    v102 = v8;
    v8(&a1[v9], &a2[v9], v7);
    v12 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v10[v12[7]] = v11[v12[7]];
    *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
    v21 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    v22 = &a1[v21];
    v100 = a2;
    v23 = &a2[v21];
    v24 = (int *)type metadata accessor for WidgetMusicItem(0);
    v25 = *((_QWORD *)v24 - 1);
    v26 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26((char *)v23, 1, v24))
    {
      v27 = sub_10000B4C8(&qword_100548310);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      v29 = v99;
      v28 = v100;
      v31 = v101;
      v30 = v102;
    }
    else
    {
      v96 = v25;
      v33 = v23[1];
      *v22 = *v23;
      v22[1] = v33;
      v34 = v23[3];
      v22[2] = v23[2];
      v22[3] = v34;
      v35 = v23[5];
      v22[4] = v23[4];
      v22[5] = v35;
      v36 = v24[7];
      v37 = (char *)v22 + v36;
      __dsta = (char *)v23 + v36;
      v38 = type metadata accessor for URL(0);
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v93(v37, __dsta, v38);
      v39 = v24[8];
      v40 = (_QWORD *)((char *)v22 + v39);
      v41 = (_QWORD *)((char *)v23 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v24[9];
      v44 = (_QWORD *)((char *)v22 + v43);
      v45 = (_QWORD *)((char *)v23 + v43);
      v94 = v45[1];
      *v44 = *v45;
      v44[1] = v94;
      v46 = v24[10];
      v47 = (_QWORD *)((char *)v22 + v46);
      v48 = (_QWORD *)((char *)v23 + v46);
      v92 = v48[1];
      *v47 = *v48;
      v47[1] = v92;
      v49 = v24[11];
      v50 = (_QWORD *)((char *)v22 + v49);
      v51 = (_QWORD *)((char *)v23 + v49);
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      v53 = v24[12];
      v54 = (_QWORD *)((char *)v22 + v53);
      v55 = (_QWORD *)((char *)v23 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = v24[13];
      v58 = (_QWORD *)((char *)v22 + v57);
      v59 = (_QWORD *)((char *)v23 + v57);
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      *(_QWORD *)((char *)v22 + v24[14]) = *(_QWORD *)((char *)v23 + v24[14]);
      *((_BYTE *)v22 + v24[15]) = *((_BYTE *)v23 + v24[15]);
      v61 = v24[16];
      __dst = (char *)v22 + v61;
      v62 = (char *)v23 + v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63 = sub_10000B4C8(&qword_100547B50);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = v62;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 10, v63))
      {
        v66 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        v29 = v99;
        v28 = v100;
        v30 = v102;
      }
      else
      {
        v67 = type metadata accessor for Playlist.Variant(0);
        v95 = *(_QWORD *)(v67 - 8);
        v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48))(v62, 1, v67);
        v28 = v100;
        if (v68)
        {
          v69 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v95 + 16))(__dst, v65, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dst, 0, 1, v67);
        }
        v29 = v99;
        v30 = v102;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 10, v63);
      }
      *(_QWORD *)((char *)v22 + v24[17]) = *(_QWORD *)((char *)v23 + v24[17]);
      v70 = v24[18];
      v71 = *(void **)((char *)v23 + v70);
      *(_QWORD *)((char *)v22 + v70) = v71;
      *(_QWORD *)((char *)v22 + v24[19]) = *(_QWORD *)((char *)v23 + v24[19]);
      v72 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v96 + 56);
      v73 = v71;
      swift_bridgeObjectRetain();
      v72((char *)v22, 0, 1, v24);
      v31 = v101;
    }
    v74 = a3[8];
    v75 = &a1[v74];
    v76 = (char *)v28 + v74;
    v77 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v78 = *(_QWORD *)(v77 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
    {
      v79 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v30(v75, v76, v29);
      v30(&v75[*(int *)(v77 + 20)], &v76[*(int *)(v77 + 20)], v29);
      v80 = *(int *)(v77 + 24);
      v81 = &v75[v80];
      v82 = &v76[v80];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v82, 1, v29))
      {
        v83 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v102(v81, v82, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v81, 0, 1, v29);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
    }
    v84 = a3[9];
    v85 = a3[10];
    v86 = *(void **)((char *)v28 + v84);
    *(_QWORD *)&a1[v84] = v86;
    v87 = &a1[v85];
    v88 = (_QWORD *)((char *)v28 + v85);
    v89 = v88[1];
    *v87 = *v88;
    v87[1] = v89;
    v90 = v86;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10001789C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  v6(v7, v4);
  v8 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[8]));
  v9 = (_QWORD *)(a1 + a2[7]);
  v10 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease(v9[1]);
    swift_bridgeObjectRelease(v9[3]);
    swift_bridgeObjectRelease(v9[5]);
    v11 = (char *)v9 + v10[7];
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[14]));
    v13 = (char *)v9 + v10[16];
    v14 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 10, v14))
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v10[19]));
  }
  v17 = a1 + a2[8];
  v18 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v6(v17, v4);
    v6(v17 + *(int *)(v18 + 20), v4);
    v19 = v17 + *(int *)(v18 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4))
      v6(v19, v4);
  }

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
}

uint64_t sub_100017B30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t, int *);
  id v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  id v89;
  void *__src;
  char *__dsta;
  char *__dst;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for Date(0);
  v97 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v98 = v6;
  v99 = v7;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v11[6];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  v20 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v21 = (_QWORD *)(a1 + v20);
  v96 = a2;
  v22 = (_QWORD *)(a2 + v20);
  v23 = (int *)type metadata accessor for WidgetMusicItem(0);
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = sub_10000B4C8(&qword_100548310);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    v28 = v97;
    v27 = v98;
    v29 = (void (*)(char *, char *, uint64_t))v99;
  }
  else
  {
    v94 = v24;
    v95 = a3;
    v30 = v22[1];
    *v21 = *v22;
    v21[1] = v30;
    v31 = v22[3];
    v21[2] = v22[2];
    v21[3] = v31;
    v32 = v22[5];
    v21[4] = v22[4];
    v21[5] = v32;
    v33 = v23[7];
    v34 = (char *)v21 + v33;
    __dsta = (char *)v22 + v33;
    v35 = type metadata accessor for URL(0);
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v34, __dsta, v35);
    v37 = v23[8];
    v38 = (_QWORD *)((char *)v21 + v37);
    v39 = (_QWORD *)((char *)v22 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = v23[9];
    v42 = (_QWORD *)((char *)v21 + v41);
    v43 = (_QWORD *)((char *)v22 + v41);
    __src = (void *)v43[1];
    *v42 = *v43;
    v42[1] = __src;
    v44 = v23[10];
    v45 = (_QWORD *)((char *)v21 + v44);
    v46 = (_QWORD *)((char *)v22 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = v23[11];
    v49 = (_QWORD *)((char *)v21 + v48);
    v50 = (_QWORD *)((char *)v22 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v23[12];
    v53 = (_QWORD *)((char *)v21 + v52);
    v54 = (_QWORD *)((char *)v22 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = v23[13];
    v57 = (_QWORD *)((char *)v21 + v56);
    v58 = (_QWORD *)((char *)v22 + v56);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    *(_QWORD *)((char *)v21 + v23[14]) = *(_QWORD *)((char *)v22 + v23[14]);
    *((_BYTE *)v21 + v23[15]) = *((_BYTE *)v22 + v23[15]);
    v60 = v23[16];
    __dst = (char *)v21 + v60;
    v61 = (char *)v22 + v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62 = sub_10000B4C8(&qword_100547B50);
    v63 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 10, v62))
    {
      v64 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      v27 = v98;
      v29 = (void (*)(char *, char *, uint64_t))v99;
      v65 = v94;
    }
    else
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      v27 = v98;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v61, 1, v66))
      {
        v68 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v61, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(__dst, v61, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v66);
      }
      v29 = (void (*)(char *, char *, uint64_t))v99;
      v65 = v94;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dst, 0, 10, v62);
    }
    *(_QWORD *)((char *)v21 + v23[17]) = *(_QWORD *)((char *)v22 + v23[17]);
    v69 = v23[18];
    v70 = *(void **)((char *)v22 + v69);
    *(_QWORD *)((char *)v21 + v69) = v70;
    *(_QWORD *)((char *)v21 + v23[19]) = *(_QWORD *)((char *)v22 + v23[19]);
    v71 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v65 + 56);
    v72 = v70;
    swift_bridgeObjectRetain();
    v71(v21, 0, 1, v23);
    a3 = v95;
    v28 = v97;
  }
  v73 = a3[8];
  v74 = (char *)(a1 + v73);
  v75 = (char *)(v96 + v73);
  v76 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v29(v74, v75, v27);
    v29(&v74[*(int *)(v76 + 20)], &v75[*(int *)(v76 + 20)], v27);
    v79 = *(int *)(v76 + 24);
    v80 = &v74[v79];
    v81 = &v75[v79];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v81, 1, v27))
    {
      v82 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      v99((uint64_t)v80, (uint64_t)v81, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v80, 0, 1, v27);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  v83 = a3[9];
  v84 = a3[10];
  v85 = *(void **)(v96 + v83);
  *(_QWORD *)(a1 + v83) = v85;
  v86 = (_QWORD *)(a1 + v84);
  v87 = (_QWORD *)(v96 + v84);
  v88 = v87[1];
  *v86 = *v87;
  v86[1] = v88;
  v89 = v85;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100018054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int *v26;
  uint64_t (*v27)(_QWORD *, uint64_t, int *);
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  void *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void (*v108)(_QWORD *, _QWORD, uint64_t, int *);
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(void *, uint64_t, uint64_t);
  int v113;
  int v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, uint64_t);
  int v128;
  int v129;
  void (*v130)(uint64_t, char *, uint64_t);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  size_t v134;
  void *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t (*v140)(void *, uint64_t, uint64_t);
  int v141;
  int v142;
  uint64_t v143;
  void *v144;
  void *v145;
  id v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  char *__dst;
  uint64_t v153;
  int *v154;
  int *v155;
  uint64_t v156;
  void (*v157)(uint64_t, char *, uint64_t);
  _QWORD *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;

  v6 = type metadata accessor for Date(0);
  v160 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = v11[6];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  *v17 = *v18;
  v19 = v17[1];
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v20 = v11[8];
  v21 = *(_QWORD *)(v10 + v20);
  v22 = *(_QWORD *)(v9 + v20);
  *(_QWORD *)(v9 + v20) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v22);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v23 = a3[7];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = (int *)type metadata accessor for WidgetMusicItem(0);
  v158 = (_QWORD *)*((_QWORD *)v26 - 1);
  v27 = (uint64_t (*)(_QWORD *, uint64_t, int *))v158[6];
  LODWORD(v19) = v27(v24, 1, v26);
  v28 = v27(v25, 1, v26);
  v161 = v6;
  v157 = (void (*)(uint64_t, char *, uint64_t))v7;
  if (!(_DWORD)v19)
  {
    if (v28)
    {
      sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v155 = a3;
    v156 = a2;
    *v24 = *v25;
    v58 = v24[1];
    v24[1] = v25[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v24[2] = v25[2];
    v59 = v24[3];
    v24[3] = v25[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v59);
    v24[4] = v25[4];
    v60 = v24[5];
    v24[5] = v25[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v60);
    v61 = v26[7];
    v62 = (char *)v24 + v61;
    v63 = (char *)v25 + v61;
    v64 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 24))(v62, v63, v64);
    v65 = v26[8];
    v66 = (_QWORD *)((char *)v24 + v65);
    v67 = (_QWORD *)((char *)v25 + v65);
    *v66 = *v67;
    v68 = v66[1];
    v66[1] = v67[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v68);
    v69 = v26[9];
    v70 = (_QWORD *)((char *)v24 + v69);
    v71 = (_QWORD *)((char *)v25 + v69);
    *v70 = *v71;
    v72 = v70[1];
    v70[1] = v71[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    v73 = v26[10];
    v74 = (_QWORD *)((char *)v24 + v73);
    v75 = (_QWORD *)((char *)v25 + v73);
    *v74 = *v75;
    v76 = v74[1];
    v74[1] = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v76);
    v77 = v26[11];
    v78 = (_QWORD *)((char *)v24 + v77);
    v79 = (_QWORD *)((char *)v25 + v77);
    *v78 = *v79;
    v80 = v78[1];
    v78[1] = v79[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v80);
    v81 = v26[12];
    v82 = (_QWORD *)((char *)v24 + v81);
    v83 = (_QWORD *)((char *)v25 + v81);
    *v82 = *v83;
    v84 = v82[1];
    v82[1] = v83[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v84);
    v85 = v26[13];
    v86 = (_QWORD *)((char *)v24 + v85);
    v87 = (_QWORD *)((char *)v25 + v85);
    *v86 = *v87;
    v88 = v86[1];
    v86[1] = v87[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v88);
    v89 = v26[14];
    v90 = *(_QWORD *)((char *)v24 + v89);
    *(_QWORD *)((char *)v24 + v89) = *(_QWORD *)((char *)v25 + v89);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v90);
    *((_BYTE *)v24 + v26[15]) = *((_BYTE *)v25 + v26[15]);
    v91 = v26[16];
    v92 = (char *)v24 + v91;
    v93 = (char *)v25 + v91;
    v94 = sub_10000B4C8(&qword_100547B50);
    v95 = *(_QWORD *)(v94 - 8);
    v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
    v97 = v92;
    LODWORD(v92) = v96(v92, 10, v94);
    v98 = v96(v93, 10, v94);
    if ((_DWORD)v92)
    {
      if (!v98)
      {
        v99 = type metadata accessor for Playlist.Variant(0);
        v100 = *(_QWORD *)(v99 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v93, 1, v99))
        {
          v101 = sub_10000B4C8(&qword_100548358);
          memcpy(v97, v93, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v100 + 16))(v97, v93, v99);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v97, 0, 10, v94);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v98)
      {
        v110 = type metadata accessor for Playlist.Variant(0);
        v111 = *(_QWORD *)(v110 - 8);
        v112 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v111 + 48);
        v113 = v112(v97, 1, v110);
        v114 = v112(v93, 1, v110);
        if (v113)
        {
          if (!v114)
          {
            (*(void (**)(void *, char *, uint64_t))(v111 + 16))(v97, v93, v110);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v97, 0, 1, v110);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v114)
          {
            (*(void (**)(void *, char *, uint64_t))(v111 + 24))(v97, v93, v110);
            goto LABEL_26;
          }
          (*(void (**)(void *, uint64_t))(v111 + 8))(v97, v110);
        }
        v105 = sub_10000B4C8(&qword_100548358);
LABEL_17:
        memcpy(v97, v93, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
LABEL_26:
        a3 = v155;
        a2 = v156;
        *(_QWORD *)((char *)v24 + v26[17]) = *(_QWORD *)((char *)v25 + v26[17]);
        v115 = v26[18];
        v116 = *(void **)((char *)v24 + v115);
        v117 = *(void **)((char *)v25 + v115);
        *(_QWORD *)((char *)v24 + v115) = v117;
        v118 = v117;

        v119 = v26[19];
        v120 = *(_QWORD *)((char *)v25 + v119);
        v121 = *(_QWORD *)((char *)v24 + v119);
        *(_QWORD *)((char *)v24 + v119) = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v121);
        goto LABEL_27;
      }
      sub_100011694((uint64_t)v97, &qword_100547B50);
    }
    v105 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_17;
  }
  if (v28)
  {
LABEL_7:
    v57 = sub_10000B4C8(&qword_100548310);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_27;
  }
  v154 = a3;
  v153 = a1;
  *v24 = *v25;
  v24[1] = v25[1];
  v24[2] = v25[2];
  v24[3] = v25[3];
  v24[4] = v25[4];
  v24[5] = v25[5];
  v29 = v26[7];
  v30 = (char *)v24 + v29;
  v31 = (char *)v25 + v29;
  v32 = type metadata accessor for URL(0);
  v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v30, v31, v32);
  v34 = v26[8];
  v35 = (_QWORD *)((char *)v24 + v34);
  v36 = (_QWORD *)((char *)v25 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  v37 = v26[9];
  v38 = (_QWORD *)((char *)v24 + v37);
  v39 = (_QWORD *)((char *)v25 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  v40 = v26[10];
  v41 = (_QWORD *)((char *)v24 + v40);
  v42 = (_QWORD *)((char *)v25 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  v43 = v26[11];
  v44 = (_QWORD *)((char *)v24 + v43);
  v45 = (_QWORD *)((char *)v25 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  v46 = v26[12];
  v47 = (_QWORD *)((char *)v24 + v46);
  v48 = (_QWORD *)((char *)v25 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  v49 = v26[13];
  v50 = (_QWORD *)((char *)v24 + v49);
  v51 = (_QWORD *)((char *)v25 + v49);
  *v50 = *v51;
  v50[1] = v51[1];
  *(_QWORD *)((char *)v24 + v26[14]) = *(_QWORD *)((char *)v25 + v26[14]);
  *((_BYTE *)v24 + v26[15]) = *((_BYTE *)v25 + v26[15]);
  v52 = v26[16];
  __dst = (char *)v24 + v52;
  v53 = (char *)v25 + v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54 = sub_10000B4C8(&qword_100547B50);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 10, v54))
  {
    v56 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    a1 = v153;
  }
  else
  {
    v102 = type metadata accessor for Playlist.Variant(0);
    v103 = *(_QWORD *)(v102 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v53, 1, v102))
    {
      v104 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(__dst, v53, v102);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(__dst, 0, 1, v102);
    }
    a1 = v153;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 10, v54);
  }
  a3 = v154;
  *(_QWORD *)((char *)v24 + v26[17]) = *(_QWORD *)((char *)v25 + v26[17]);
  v106 = v26[18];
  v107 = *(void **)((char *)v25 + v106);
  *(_QWORD *)((char *)v24 + v106) = v107;
  *(_QWORD *)((char *)v24 + v26[19]) = *(_QWORD *)((char *)v25 + v26[19]);
  v108 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))v158[7];
  v109 = v107;
  swift_bridgeObjectRetain();
  v108(v24, 0, 1, v26);
LABEL_27:
  v122 = a3[8];
  v123 = a1 + v122;
  v124 = (char *)(a2 + v122);
  v125 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v126 = *(_QWORD *)(v125 - 8);
  v127 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  v128 = v127(v123, 1, v125);
  v129 = v127((uint64_t)v124, 1, v125);
  if (!v128)
  {
    if (!v129)
    {
      v157(v123, v124, v161);
      v157(v123 + *(int *)(v125 + 20), &v124[*(int *)(v125 + 20)], v161);
      v137 = *(int *)(v125 + 24);
      v138 = (void *)(v123 + v137);
      v139 = &v124[v137];
      v140 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v160 + 48);
      v141 = v140(v138, 1, v161);
      v142 = v140(v139, 1, v161);
      if (v141)
      {
        if (!v142)
        {
          (*(void (**)(void *, char *, uint64_t))(v160 + 16))(v138, v139, v161);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v138, 0, 1, v161);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v142)
        {
          v157((uint64_t)v138, v139, v161);
          goto LABEL_40;
        }
        (*(void (**)(void *, uint64_t))(v160 + 8))(v138, v161);
      }
      v134 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005481F0) - 8) + 64);
      v135 = v138;
      v136 = v139;
      goto LABEL_34;
    }
    sub_10000E750(v123, type metadata accessor for NowPlayingDataProvider.ItemProgress);
LABEL_33:
    v134 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005482D8) - 8) + 64);
    v135 = (void *)v123;
    v136 = v124;
LABEL_34:
    memcpy(v135, v136, v134);
    goto LABEL_40;
  }
  if (v129)
    goto LABEL_33;
  v130 = *(void (**)(uint64_t, char *, uint64_t))(v160 + 16);
  v130(v123, v124, v161);
  v130(v123 + *(int *)(v125 + 20), &v124[*(int *)(v125 + 20)], v161);
  v131 = *(int *)(v125 + 24);
  v159 = (void *)(v123 + v131);
  v132 = &v124[v131];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v132, 1, v161))
  {
    v133 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v159, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    v130((uint64_t)v159, v132, v161);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v159, 0, 1, v161);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
LABEL_40:
  v143 = a3[9];
  v144 = *(void **)(a1 + v143);
  v145 = *(void **)(a2 + v143);
  *(_QWORD *)(a1 + v143) = v145;
  v146 = v145;

  v147 = a3[10];
  v148 = (_QWORD *)(a1 + v147);
  v149 = (_QWORD *)(a2 + v147);
  *v148 = *v149;
  v150 = v148[1];
  v148[1] = v149[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v150);
  return a1;
}

uint64_t sub_100018AF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *__dst;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  void (*v53)(char *, char *, uint64_t);

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v8(a1 + v9, a2 + v9, v6);
  v12 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  *(_OWORD *)(v10 + v12[5]) = *(_OWORD *)(v11 + v12[5]);
  *(_OWORD *)(v10 + v12[6]) = *(_OWORD *)(v11 + v12[6]);
  *(_BYTE *)(v10 + v12[7]) = *(_BYTE *)(v11 + v12[7]);
  *(_QWORD *)(v10 + v12[8]) = *(_QWORD *)(v11 + v12[8]);
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for WidgetMusicItem(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_10000B4C8(&qword_100548310);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v50 = v17;
    v51 = v7;
    v52 = v8;
    v19 = v15[1];
    *v14 = *v15;
    v14[1] = v19;
    v14[2] = v15[2];
    v20 = v16[7];
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    *(_OWORD *)((char *)v14 + v16[8]) = *(_OWORD *)((char *)v15 + v16[8]);
    *(_OWORD *)((char *)v14 + v16[9]) = *(_OWORD *)((char *)v15 + v16[9]);
    *(_OWORD *)((char *)v14 + v16[10]) = *(_OWORD *)((char *)v15 + v16[10]);
    *(_OWORD *)((char *)v14 + v16[11]) = *(_OWORD *)((char *)v15 + v16[11]);
    *(_OWORD *)((char *)v14 + v16[12]) = *(_OWORD *)((char *)v15 + v16[12]);
    *(_OWORD *)((char *)v14 + v16[13]) = *(_OWORD *)((char *)v15 + v16[13]);
    *(_QWORD *)((char *)v14 + v16[14]) = *(_QWORD *)((char *)v15 + v16[14]);
    *((_BYTE *)v14 + v16[15]) = *((_BYTE *)v15 + v16[15]);
    v24 = v16[16];
    __dst = (char *)v14 + v24;
    v25 = (char *)v15 + v24;
    v26 = sub_10000B4C8(&qword_100547B50);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 10, v26))
    {
      v28 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      v7 = v51;
      v8 = v52;
    }
    else
    {
      v47 = v26;
      v48 = v27;
      v29 = type metadata accessor for Playlist.Variant(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
      {
        v31 = sub_10000B4C8(&qword_100548358);
        v32 = __dst;
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v46 = v30;
        v32 = __dst;
        v33(__dst, v25, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v29);
      }
      v8 = v52;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v32, 0, 10, v47);
      v7 = v51;
    }
    *(_QWORD *)((char *)v14 + v16[17]) = *(_QWORD *)((char *)v15 + v16[17]);
    *(_QWORD *)((char *)v14 + v16[18]) = *(_QWORD *)((char *)v15 + v16[18]);
    *(_QWORD *)((char *)v14 + v16[19]) = *(_QWORD *)((char *)v15 + v16[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v50 + 56))(v14, 0, 1, v16);
  }
  v34 = a3[8];
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v35, (uint64_t)v36, v6);
    v8((uint64_t)&v35[*(int *)(v37 + 20)], (uint64_t)&v36[*(int *)(v37 + 20)], v6);
    v40 = *(int *)(v37 + 24);
    v53 = (void (*)(char *, char *, uint64_t))v8;
    v41 = &v35[v40];
    v42 = &v36[v40];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v42, 1, v6))
    {
      v43 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v53(v41, v42, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v44 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v44) = *(_OWORD *)(a2 + v44);
  return a1;
}

uint64_t sub_100018F30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD *, uint64_t, int *);
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  uint64_t v100;
  size_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(void *, uint64_t, uint64_t);
  int v115;
  int v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(char *, uint64_t, uint64_t);
  int v127;
  int v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t (*v138)(char *, uint64_t, uint64_t);
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v151)(void *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *__dst;
  void *__dsta;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;

  v6 = type metadata accessor for Date(0);
  v163 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v162 = (void (*)(char *, char *, uint64_t))v7;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (uint64_t *)(v10 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  v18 = v11[6];
  v19 = (_QWORD *)(v9 + v18);
  v20 = (uint64_t *)(v10 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = v19[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease(v23);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v24 = v11[8];
  v25 = *(_QWORD *)(v9 + v24);
  *(_QWORD *)(v9 + v24) = *(_QWORD *)(v10 + v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = (int *)type metadata accessor for WidgetMusicItem(0);
  v30 = *((_QWORD *)v29 - 1);
  v31 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (v33)
    {
      sub_10000E750((uint64_t)v27, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v161 = v6;
    v46 = v28[1];
    v47 = v27[1];
    *v27 = *v28;
    v27[1] = v46;
    swift_bridgeObjectRelease(v47);
    v48 = v28[3];
    v49 = v27[3];
    v27[2] = v28[2];
    v27[3] = v48;
    swift_bridgeObjectRelease(v49);
    v50 = v28[5];
    v51 = v27[5];
    v27[4] = v28[4];
    v27[5] = v50;
    swift_bridgeObjectRelease(v51);
    v52 = v29[7];
    v53 = (char *)v27 + v52;
    v54 = (char *)v28 + v52;
    v55 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
    v56 = v29[8];
    v57 = (_QWORD *)((char *)v27 + v56);
    v58 = (_QWORD *)((char *)v28 + v56);
    v60 = *v58;
    v59 = v58[1];
    v61 = v57[1];
    *v57 = v60;
    v57[1] = v59;
    swift_bridgeObjectRelease(v61);
    v62 = v29[9];
    v63 = (_QWORD *)((char *)v27 + v62);
    v64 = (_QWORD *)((char *)v28 + v62);
    v66 = *v64;
    v65 = v64[1];
    v67 = v63[1];
    *v63 = v66;
    v63[1] = v65;
    swift_bridgeObjectRelease(v67);
    v68 = v29[10];
    v69 = (_QWORD *)((char *)v27 + v68);
    v70 = (_QWORD *)((char *)v28 + v68);
    v72 = *v70;
    v71 = v70[1];
    v73 = v69[1];
    *v69 = v72;
    v69[1] = v71;
    swift_bridgeObjectRelease(v73);
    v74 = v29[11];
    v75 = (_QWORD *)((char *)v27 + v74);
    v76 = (_QWORD *)((char *)v28 + v74);
    v78 = *v76;
    v77 = v76[1];
    v79 = v75[1];
    *v75 = v78;
    v75[1] = v77;
    swift_bridgeObjectRelease(v79);
    v80 = v29[12];
    v81 = (_QWORD *)((char *)v27 + v80);
    v82 = (_QWORD *)((char *)v28 + v80);
    v84 = *v82;
    v83 = v82[1];
    v85 = v81[1];
    *v81 = v84;
    v81[1] = v83;
    swift_bridgeObjectRelease(v85);
    v86 = v29[13];
    v87 = (_QWORD *)((char *)v27 + v86);
    v88 = (_QWORD *)((char *)v28 + v86);
    v90 = *v88;
    v89 = v88[1];
    v91 = v87[1];
    *v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease(v91);
    v92 = v29[14];
    v93 = *(_QWORD *)((char *)v27 + v92);
    *(_QWORD *)((char *)v27 + v92) = *(_QWORD *)((char *)v28 + v92);
    swift_bridgeObjectRelease(v93);
    *((_BYTE *)v27 + v29[15]) = *((_BYTE *)v28 + v29[15]);
    v94 = v29[16];
    v95 = (char *)v27 + v94;
    v96 = (char *)v28 + v94;
    v97 = sub_10000B4C8(&qword_100547B50);
    v154 = *(_QWORD *)(v97 - 8);
    v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v154 + 48);
    v159 = v95;
    LODWORD(v95) = v98(v95, 10, v97);
    __dst = v96;
    v99 = v98(v96, 10, v97);
    if ((_DWORD)v95)
    {
      if (!v99)
      {
        v109 = type metadata accessor for Playlist.Variant(0);
        v110 = *(_QWORD *)(v109 - 8);
        v153 = v109;
        if ((*(unsigned int (**)(char *, uint64_t))(v110 + 48))(v96, 1))
        {
          v111 = sub_10000B4C8(&qword_100548358);
          memcpy(v159, v96, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v110 + 32))(v159, v96, v153);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v159, 0, 1, v153);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v159, 0, 10, v97);
        goto LABEL_28;
      }
      v100 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_11:
      v101 = *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64);
      v102 = v159;
LABEL_17:
      memcpy(v102, __dst, v101);
LABEL_28:
      v6 = v161;
      *(_QWORD *)((char *)v27 + v29[17]) = *(_QWORD *)((char *)v28 + v29[17]);
      v117 = v29[18];
      v118 = *(void **)((char *)v27 + v117);
      *(_QWORD *)((char *)v27 + v117) = *(_QWORD *)((char *)v28 + v117);

      v119 = v29[19];
      v120 = *(_QWORD *)((char *)v27 + v119);
      *(_QWORD *)((char *)v27 + v119) = *(_QWORD *)((char *)v28 + v119);
      swift_bridgeObjectRelease(v120);
      goto LABEL_29;
    }
    if (v99)
    {
      v107 = v159;
      sub_100011694((uint64_t)v159, &qword_100547B50);
      v108 = type metadata accessor for ArtworkImage.Placeholder(0);
    }
    else
    {
      v112 = type metadata accessor for Playlist.Variant(0);
      v113 = *(_QWORD *)(v112 - 8);
      v114 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v113 + 48);
      v115 = v114(v159, 1, v112);
      v116 = v114(__dst, 1, v112);
      if (v115)
      {
        if (!v116)
        {
          (*(void (**)(void *, char *, uint64_t))(v113 + 32))(v159, __dst, v112);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v159, 0, 1, v112);
          goto LABEL_28;
        }
        v100 = sub_10000B4C8(&qword_100548358);
        goto LABEL_11;
      }
      if (!v116)
      {
        (*(void (**)(void *, char *, uint64_t))(v113 + 40))(v159, __dst, v112);
        goto LABEL_28;
      }
      v151 = *(void (**)(void *, uint64_t))(v113 + 8);
      v107 = v159;
      v151(v159, v112);
      v108 = sub_10000B4C8(&qword_100548358);
    }
    v101 = *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64);
    v102 = v107;
    goto LABEL_17;
  }
  if (v33)
  {
LABEL_7:
    v45 = sub_10000B4C8(&qword_100548310);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_29;
  }
  v158 = a2;
  v160 = v6;
  v34 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v34;
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  v35 = v29[7];
  v36 = (char *)v27 + v35;
  v37 = (char *)v28 + v35;
  v38 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  *(_OWORD *)((char *)v27 + v29[8]) = *(_OWORD *)((char *)v28 + v29[8]);
  *(_OWORD *)((char *)v27 + v29[9]) = *(_OWORD *)((char *)v28 + v29[9]);
  *(_OWORD *)((char *)v27 + v29[10]) = *(_OWORD *)((char *)v28 + v29[10]);
  *(_OWORD *)((char *)v27 + v29[11]) = *(_OWORD *)((char *)v28 + v29[11]);
  *(_OWORD *)((char *)v27 + v29[12]) = *(_OWORD *)((char *)v28 + v29[12]);
  *(_OWORD *)((char *)v27 + v29[13]) = *(_OWORD *)((char *)v28 + v29[13]);
  *(_QWORD *)((char *)v27 + v29[14]) = *(_QWORD *)((char *)v28 + v29[14]);
  *((_BYTE *)v27 + v29[15]) = *((_BYTE *)v28 + v29[15]);
  v39 = v29[16];
  v40 = (char *)v27 + v39;
  v41 = (char *)v28 + v39;
  v42 = sub_10000B4C8(&qword_100547B50);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 10, v42))
  {
    v44 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v152 = v43;
    v155 = v42;
    __dsta = v40;
    v103 = type metadata accessor for Playlist.Variant(0);
    v104 = *(_QWORD *)(v103 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v41, 1, v103))
    {
      v105 = sub_10000B4C8(&qword_100548358);
      v106 = __dsta;
      memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v106 = __dsta;
      (*(void (**)(void *, char *, uint64_t))(v104 + 32))(__dsta, v41, v103);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(__dsta, 0, 1, v103);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v106, 0, 10, v155);
  }
  a2 = v158;
  v6 = v160;
  *(_QWORD *)((char *)v27 + v29[17]) = *(_QWORD *)((char *)v28 + v29[17]);
  *(_QWORD *)((char *)v27 + v29[18]) = *(_QWORD *)((char *)v28 + v29[18]);
  *(_QWORD *)((char *)v27 + v29[19]) = *(_QWORD *)((char *)v28 + v29[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
LABEL_29:
  v121 = a3[8];
  v122 = (char *)(a1 + v121);
  v123 = (char *)(a2 + v121);
  v124 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v125 = *(_QWORD *)(v124 - 8);
  v126 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
  v127 = v126(v122, 1, v124);
  v128 = v126(v123, 1, v124);
  if (!v127)
  {
    if (!v128)
    {
      v162(v122, v123, v6);
      v162(&v122[*(int *)(v124 + 20)], &v123[*(int *)(v124 + 20)], v6);
      v135 = *(int *)(v124 + 24);
      v136 = &v122[v135];
      v137 = &v123[v135];
      v138 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v163 + 48);
      v139 = v138(v136, 1, v6);
      v140 = v138(v137, 1, v6);
      if (v139)
      {
        if (!v140)
        {
          (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v136, v137, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v136, 0, 1, v6);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v140)
        {
          v162(v136, v137, v6);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v163 + 8))(v136, v6);
      }
      v141 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      goto LABEL_44;
    }
    sub_10000E750((uint64_t)v122, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    goto LABEL_35;
  }
  if (v128)
  {
LABEL_35:
    v134 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    goto LABEL_44;
  }
  v129 = *(void (**)(char *, char *, uint64_t))(v163 + 32);
  v129(v122, v123, v6);
  v129(&v122[*(int *)(v124 + 20)], &v123[*(int *)(v124 + 20)], v6);
  v130 = *(int *)(v124 + 24);
  v131 = &v122[v130];
  v132 = &v123[v130];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v132, 1, v6))
  {
    v133 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    v129(v131, v132, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v131, 0, 1, v6);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
LABEL_44:
  v142 = a3[9];
  v143 = *(void **)(a1 + v142);
  *(_QWORD *)(a1 + v142) = *(_QWORD *)(a2 + v142);

  v144 = a3[10];
  v145 = (_QWORD *)(a1 + v144);
  v146 = (uint64_t *)(a2 + v144);
  v148 = *v146;
  v147 = v146[1];
  v149 = v145[1];
  *v145 = v148;
  v145[1] = v147;
  swift_bridgeObjectRelease(v149);
  return a1;
}

uint64_t sub_100019850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001985C);
}

uint64_t sub_10001985C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  int v18;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for WidgetMusicRecommendation(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_10000B4C8(&qword_100548310);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_9;
  }
  v15 = sub_10000B4C8(&qword_1005482D8);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[8];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  v18 = v17 - 1;
  if (v18 < 0)
    v18 = -1;
  return (v18 + 1);
}

uint64_t sub_100019960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001996C);
}

uint64_t sub_10001996C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for WidgetMusicRecommendation(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_10000B4C8(&qword_100548310);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[7];
    goto LABEL_9;
  }
  result = sub_10000B4C8(&qword_1005482D8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[9]) = a2;
  return result;
}

uint64_t type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_1005483B8, (uint64_t)&nominal type descriptor for RecommendationsWidgetTimelineProvider.Entry);
}

void sub_100019A74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for WidgetMusicRecommendation(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v10[2] = &unk_100424F68;
      sub_100019B6C(319, (unint64_t *)&qword_1005483C8, type metadata accessor for WidgetMusicItem);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_100019B6C(319, (unint64_t *)&unk_1005483D0, type metadata accessor for NowPlayingDataProvider.ItemProgress);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          v10[5] = &unk_100424F80;
          v10[6] = &unk_100424F98;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_100019B6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_100019BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100019BF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100019C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100019C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100019CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100019CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100019D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100019D44);
}

uint64_t sub_100019D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100019D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019D8C);
}

uint64_t sub_100019D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecommendationsWidgetTimelineProvider(uint64_t a1)
{
  return sub_10001133C(a1, qword_100548470, (uint64_t)&nominal type descriptor for RecommendationsWidgetTimelineProvider);
}

uint64_t sub_100019DE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100019E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  sub_10000D924((uint64_t)v10, qword_100561200);
  v11 = sub_10000D78C((uint64_t)v10, (uint64_t)qword_100561200);
  if (qword_1005478A8 != -1)
    swift_once(&qword_1005478A8, sub_10006F20C);
  v12 = type metadata accessor for WidgetMusicRecommendation(0);
  v13 = sub_10000D78C(v12, (uint64_t)qword_100561390);
  v14 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  v15 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  Date.init()(v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v11, v3, v0);
  sub_10000D964(v13, v11 + v10[5], type metadata accessor for WidgetMusicRecommendation);
  *(_BYTE *)(v11 + v10[6]) = 3;
  sub_100011530((uint64_t)v9, v11 + v10[7], &qword_100548310);
  result = sub_100011530((uint64_t)v6, v11 + v10[8], &qword_1005482D8);
  *(_QWORD *)(v11 + v10[9]) = 0;
  v18 = (_QWORD *)(v11 + v10[10]);
  *v18 = 0;
  v18[1] = 0;
  return result;
}

uint64_t sub_10001A068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

unint64_t sub_10001A0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005484A8;
  if (!qword_1005484A8)
  {
    v1 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(255);
    result = swift_getWitnessTable(")J\r", v1);
    atomic_store(result, (unint64_t *)&qword_1005484A8);
  }
  return result;
}

unint64_t sub_10001A0F4()
{
  unint64_t result;

  result = qword_1005484B0[0];
  if (!qword_1005484B0[0])
  {
    result = swift_getWitnessTable(&unk_100427B88, &type metadata for RecommendationsWidgetConfigurationIntent);
    atomic_store(result, qword_1005484B0);
  }
  return result;
}

uint64_t sub_10001A138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v6);
  v3[9] = swift_task_alloc(v6);
  v3[10] = swift_task_alloc(v6);
  v3[11] = swift_task_alloc(v6);
  v3[12] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date(0);
  v3[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[14] = v8;
  v3[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_1005482D8);
  v3[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100548310);
  v3[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_1005484E8);
  v3[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetMusicRecommendation(0);
  v3[19] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[20] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[21] = swift_task_alloc(v14);
  v3[22] = swift_task_alloc(v14);
  return swift_task_switch(sub_10001A29C, 0, 0);
}

uint64_t sub_10001A29C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  if ((sub_1000A7F94() & 1) == 0)
  {
    v8 = (char *)&loc_10001A3B0 + *((int *)qword_10001AAC0 + sub_1000AA740());
    __asm { BR              X10 }
  }
  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Can't use widget: privacyAcknowledgementRequired", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (qword_100547808 != -1)
    swift_once(&qword_100547808, sub_10003433C);
  v10 = qword_1005612D8;
  v9 = unk_1005612E0;
  v11 = qword_1005478A8;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once(&qword_1005478A8, sub_10006F20C);
  v12 = *(_QWORD *)(v0 + 24);
  v13 = sub_10000D78C(*(_QWORD *)(v0 + 152), (uint64_t)qword_100561390);
  v14 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  sub_10000D964(v13, v12 + v14[5], type metadata accessor for WidgetMusicRecommendation);
  v15 = v12 + v14[7];
  v16 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v12 + v14[8];
  v18 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  Date.init()(v19);
  *(_BYTE *)(v12 + v14[6]) = 3;
  *(_QWORD *)(v12 + v14[9]) = 0;
  v20 = (uint64_t *)(v12 + v14[10]);
  *v20 = v10;
  v20[1] = v9;
  v21 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001AAD0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 184));
  return swift_task_switch(sub_10001AB24, 0, 0);
}

uint64_t sub_10001AB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 48))(v2, 1, v1) == 1)
  {
    sub_100011694(v2, &qword_1005484E8);
    v3 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    v4 = swift_retain_n(v3, 2);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.error.getter();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 32);
    if (v7)
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v77 = v13;
      *(_DWORD *)v12 = 136315138;
      IntentParameter.wrappedValue.getter();
      v14 = sub_10000B4C8(&qword_1005484F0);
      v15 = String.init<A>(describing:)(v0 + 193, v14);
      v17 = v16;
      *(_QWORD *)(v0 + 16) = sub_1000759E0(v15, v16, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
      swift_bridgeObjectRelease(v17);
      swift_release_n(v11, 2);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Can't fetch recommendation of kind %s.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {
      swift_release_n(*(_QWORD *)(v0 + 32), 2);

    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    if (qword_1005478A8 != -1)
      swift_once(&qword_1005478A8, sub_10006F20C);
    v26 = *(_QWORD *)(v0 + 24);
    v32 = sub_10000D78C(*(_QWORD *)(v0 + 152), (uint64_t)qword_100561390);
    v33 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    sub_10000D964(v32, v26 + v33[5], type metadata accessor for WidgetMusicRecommendation);
    v34 = v26 + v33[7];
    v35 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
    v36 = v26 + v33[8];
    v37 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
    Date.init()(v38);
    *(_BYTE *)(v26 + v33[6]) = 3;
    *(_QWORD *)(v26 + v33[9]) = 0;
    v31 = v33[10];
    goto LABEL_10;
  }
  v18 = *(_QWORD *)(v0 + 176);
  sub_10000DB44(v2, v18, type metadata accessor for WidgetMusicRecommendation);
  if (*(_QWORD *)(*(_QWORD *)(v18 + *(int *)(v1 + 32)) + 16))
  {
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 128);
    v22 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 112);
    v23 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 24);
    sub_10000D964(v20, v19, type metadata accessor for WidgetMusicRecommendation);
    v27 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 1, 1, v27);
    v28 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v21, 1, 1, v28);
    Date.init()(v29);
    sub_10000E750(v20, type metadata accessor for WidgetMusicRecommendation);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v26, v23, v25);
    v30 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    sub_10000DB44(v19, v26 + v30[5], type metadata accessor for WidgetMusicRecommendation);
    *(_BYTE *)(v26 + v30[6]) = 3;
    sub_100011530(v22, v26 + v30[7], &qword_100548310);
    sub_100011530(v21, v26 + v30[8], &qword_1005482D8);
    *(_QWORD *)(v26 + v30[9]) = 0;
    v31 = v30[10];
LABEL_10:
    v39 = (_QWORD *)(v26 + v31);
    *v39 = 0;
    v39[1] = 0;
    goto LABEL_11;
  }
  v50 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Server returned no recommenation items. New subscriber.", v53, 2u);
    swift_slowDealloc(v53, -1, -1);
  }
  v55 = *(_QWORD *)(v0 + 168);
  v54 = *(_QWORD *)(v0 + 176);
  v57 = *(_QWORD *)(v0 + 128);
  v56 = *(_QWORD *)(v0 + 136);
  v58 = *(_QWORD *)(v0 + 96);
  v59 = *(_QWORD *)(v0 + 48);
  v60 = *(_QWORD *)(v0 + 56);

  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
  sub_10000D964(v54, v55, type metadata accessor for WidgetMusicRecommendation);
  v61 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v56, 1, 1, v61);
  v62 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v57, 1, 1, v62);
  if (qword_100547828 != -1)
    swift_once(&qword_100547828, sub_1000346CC);
  v64 = *(_QWORD *)(v0 + 168);
  v63 = *(_QWORD *)(v0 + 176);
  v65 = *(_QWORD *)(v0 + 136);
  v66 = *(_QWORD *)(v0 + 112);
  v67 = *(_QWORD *)(v0 + 120);
  v68 = *(_QWORD *)(v0 + 104);
  v69 = *(_QWORD *)(v0 + 24);
  v70 = unk_100561320;
  v74 = *(_QWORD *)(v0 + 128);
  v76 = qword_100561318;
  v71 = swift_bridgeObjectRetain();
  Date.init()(v71);
  sub_10000E750(v63, type metadata accessor for WidgetMusicRecommendation);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v69, v67, v68);
  v72 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  sub_10000DB44(v64, v69 + v72[5], type metadata accessor for WidgetMusicRecommendation);
  *(_BYTE *)(v69 + v72[6]) = 3;
  sub_100011530(v65, v69 + v72[7], &qword_100548310);
  sub_100011530(v74, v69 + v72[8], &qword_1005482D8);
  *(_QWORD *)(v69 + v72[9]) = 0;
  v73 = (uint64_t *)(v69 + v72[10]);
  *v73 = v76;
  v73[1] = v70;
LABEL_11:
  v40 = *(_QWORD *)(v0 + 168);
  v42 = *(_QWORD *)(v0 + 136);
  v41 = *(_QWORD *)(v0 + 144);
  v44 = *(_QWORD *)(v0 + 120);
  v43 = *(_QWORD *)(v0 + 128);
  v46 = *(_QWORD *)(v0 + 88);
  v45 = *(_QWORD *)(v0 + 96);
  v48 = *(_QWORD *)(v0 + 72);
  v47 = *(_QWORD *)(v0 + 80);
  v75 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001B1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for Date(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[7] = swift_task_alloc(v6);
  v3[8] = swift_task_alloc(v6);
  v3[9] = swift_task_alloc(v6);
  v3[10] = swift_task_alloc(v6);
  v7 = type metadata accessor for TimelineReloadPolicy(0);
  v3[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[12] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v9);
  v3[14] = swift_task_alloc(v9);
  v10 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v3[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[16] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v12);
  v3[18] = swift_task_alloc(v12);
  v3[19] = swift_task_alloc(v12);
  v3[20] = swift_task_alloc(v12);
  v3[21] = swift_task_alloc(v12);
  v13 = sub_10000B4C8(&qword_1005482D0);
  v3[22] = v13;
  v3[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v3[24] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[25] = v15;
  v3[26] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_1005482C0);
  v3[27] = v16;
  v3[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_100548310);
  v3[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001B360, 0, 0);
}

uint64_t sub_10001B360()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_100547790 != -1)
    swift_once(&qword_100547790, sub_1000134D8);
  v1 = qword_1005611E0;
  *(_QWORD *)(v0 + 240) = qword_1005611E0;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 248) = v2;
  *v2 = v0;
  v2[1] = sub_10001B420;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 296, 0, 0, 0x7453726579616C70, 0xEB00000000657461, sub_100016D2C, v1, &type metadata for NowPlayingDataProvider.PlayerState);
}

uint64_t sub_10001B420()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 248));
  return swift_task_switch(sub_10001B474, 0, 0);
}

uint64_t sub_10001B474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  *(_BYTE *)(v0 + 297) = *(_BYTE *)(v0 + 296);
  sub_100011370(*(_QWORD *)(v1 + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentContainer, v3, &qword_1005482C0);
  sub_100069BDC(*(_QWORD *)(v3 + *(int *)(v4 + 44)), *(_QWORD *)(v3 + *(int *)(v4 + 44) + 8), v2);
  sub_100011694(v3, &qword_1005482C0);
  v5 = (_QWORD *)swift_task_alloc(dword_100547F34);
  *(_QWORD *)(v0 + 256) = v5;
  *v5 = v0;
  v5[1] = sub_10001B524;
  return sub_100014178(*(_QWORD *)(v0 + 208));
}

uint64_t sub_10001B524()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  return swift_task_switch(sub_10001B578, 0, 0);
}

uint64_t sub_10001B578()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;

  if (*(_BYTE *)(v0 + 297))
  {
    if (*(_BYTE *)(v0 + 297) != 1)
    {
      swift_bridgeObjectRelease(0xE700000000000000);
      v6 = 0;
      goto LABEL_10;
    }
    v1 = 0x646573756170;
    v2 = 0xE600000000000000;
  }
  else
  {
    v1 = 0x676E6979616C70;
    v2 = 0xE700000000000000;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0x646570706F7473, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v2);
  if ((v3 & 1) != 0
    || (v5 = *(_QWORD *)(v0 + 176),
        v4 = *(_QWORD *)(v0 + 184),
        sub_100011370(*(_QWORD *)(*(_QWORD *)(v0 + 240) + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentContainerBackground, v4, &qword_1005482D0), v6 = (void *)sub_100069C08(*(_QWORD *)(v4 + *(int *)(v5 + 44)), *(_QWORD *)(v4 + *(int *)(v5 + 44) + 8)), sub_100011694(v4, &qword_1005482D0), v6 == (void *)1))
  {
    v6 = 0;
  }
  else
  {
    v7 = v6;
    sub_100017318(v6);
  }
LABEL_10:
  *(_QWORD *)(v0 + 264) = v6;
  v8 = (_QWORD *)swift_task_alloc(dword_1005484E4);
  *(_QWORD *)(v0 + 272) = v8;
  *v8 = v0;
  v8[1] = sub_10001B6B8;
  return sub_10001A138(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10001B6B8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 272));
  return swift_task_switch(sub_10001B70C, 0, 0);
}

uint64_t sub_10001B70C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(v1 + 297);
  Date.init()(a1);
  if (!v2)
  {
    v7 = (_QWORD *)swift_task_alloc(dword_100547F2C);
    *(_QWORD *)(v1 + 280) = v7;
    *v7 = v1;
    v7[1] = sub_10001BEA0;
    return sub_100013E68();
  }
  if (v2 != 1)
  {
    v9 = *(_QWORD *)(v1 + 168) + *(int *)(*(_QWORD *)(v1 + 120) + 20);
    if (qword_1005478A8 != -1)
      swift_once(&qword_1005478A8, sub_10006F20C);
    v10 = type metadata accessor for WidgetMusicRecommendation(0);
    v11 = sub_10000D78C(v10, (uint64_t)qword_100561390);
    if ((sub_100079F04(v9, v11) & 1) != 0)
    {
      v13 = 0x4072C00000000000;
    }
    else
    {
      if (qword_1005478C8 != -1)
        swift_once(&qword_1005478C8, sub_10009EFC4);
      if (qword_1005613B0)
      {
        v12.n128_u64[0] = sub_10009EE0C();
        if ((v15 & 1) != 0)
          v12.n128_f64[0] = 28800.0;
        goto LABEL_32;
      }
      v13 = 0x40DC200000000000;
    }
    v12.n128_u64[0] = v13;
LABEL_32:
    v44 = *(_QWORD *)(v1 + 200);
    v85 = *(_QWORD *)(v1 + 192);
    v45 = *(_QWORD *)(v1 + 168);
    v89 = *(_QWORD *)(v1 + 160);
    v46 = *(int **)(v1 + 120);
    v47 = *(_QWORD *)(v1 + 72);
    v49 = *(_QWORD *)(v1 + 40);
    v48 = *(_QWORD *)(v1 + 48);
    Date.addingTimeInterval(_:)(v12);
    static TimelineReloadPolicy.after(_:)(v47);
    v90 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v90(v47, v49);
    *(_BYTE *)(v45 + v46[6]) = 2;
    v50 = v45 + v46[7];
    sub_100011694(v50, &qword_100548310);
    v51 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
    v52 = v45 + v46[8];
    sub_100011694(v52, &qword_1005482D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v52, 1, 1, v85);
    v53 = v46[9];

    *(_QWORD *)(v45 + v53) = 0;
    sub_10000D964(v45, v89, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
    v27 = sub_1000753D4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v55 = *(_QWORD *)(v27 + 16);
    v54 = *(_QWORD *)(v27 + 24);
    if (v55 >= v54 >> 1)
      v27 = sub_1000753D4(v54 > 1, v55 + 1, 1, v27);
    v88 = *(void **)(v1 + 264);
    v42 = *(_QWORD *)(v1 + 160);
    v56 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v27 + 16) = v55 + 1;
    v43 = v27
        + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))
        + *(_QWORD *)(v56 + 72) * v55;
    goto LABEL_35;
  }
  v3 = *(_QWORD *)(v1 + 168) + *(int *)(*(_QWORD *)(v1 + 120) + 20);
  if (qword_1005478A8 != -1)
    swift_once(&qword_1005478A8, sub_10006F20C);
  v4 = type metadata accessor for WidgetMusicRecommendation(0);
  v5 = sub_10000D78C(v4, (uint64_t)qword_100561390);
  if ((sub_100079F04(v3, v5) & 1) != 0)
  {
    v6.n128_u64[0] = 0x4072C00000000000;
  }
  else
  {
    if (qword_1005478C8 != -1)
      swift_once(&qword_1005478C8, sub_10009EFC4);
    if (qword_1005613B0)
    {
      v6.n128_u64[0] = sub_10009EE0C();
      if ((v14 & 1) != 0)
        v6.n128_f64[0] = 28800.0;
    }
    else
    {
      v6.n128_u64[0] = 0x40DC200000000000;
    }
  }
  v16 = *(void **)(v1 + 264);
  v17 = *(_QWORD *)(v1 + 232);
  v78 = *(_QWORD *)(v1 + 208);
  v81 = *(_QWORD *)(v1 + 200);
  v87 = *(_QWORD *)(v1 + 192);
  v18 = *(_QWORD *)(v1 + 168);
  v73 = *(_QWORD *)(v1 + 144);
  v19 = *(int **)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 48);
  v21 = *(_QWORD *)(v1 + 56);
  v22 = *(_QWORD *)(v1 + 40);
  Date.addingTimeInterval(_:)(v6);
  static TimelineReloadPolicy.after(_:)(v21);
  v90 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v90(v21, v22);
  *(_BYTE *)(v18 + v19[6]) = 1;
  v84 = v18 + v19[7];
  sub_10001C424(v17, v84);
  v23 = v18 + v19[8];
  sub_100011694(v23, &qword_1005482D8);
  sub_10000D964(v78, v23, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  v76 = v23;
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
  v82(v23, 0, 1, v87);
  v24 = v19[9];
  v25 = *(void **)(v18 + v24);
  v26 = v16;

  v79 = v24;
  *(_QWORD *)(v18 + v24) = v16;
  sub_10000D964(v18, v73, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v27 = sub_1000753D4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v29 = *(_QWORD *)(v27 + 16);
  v28 = *(_QWORD *)(v27 + 24);
  v88 = v26;
  if (v29 >= v28 >> 1)
    v27 = sub_1000753D4(v28 > 1, v29 + 1, 1, v27);
  v30 = *(_QWORD *)(v1 + 168);
  v31 = *(_QWORD *)(v1 + 144);
  v71 = *(_QWORD *)(v1 + 192);
  v74 = *(_QWORD *)(v1 + 136);
  v32 = *(_QWORD *)(v1 + 128);
  v33 = *(_QWORD *)(v1 + 64);
  v34 = *(_QWORD *)(v1 + 40);
  v35 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v27 + 16) = v29 + 1;
  v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v37 = *(_QWORD *)(v32 + 72);
  sub_10000DB44(v31, v27 + v36 + v37 * v29, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v38.n128_u64[0] = 0x407E000000000000;
  Date.addingTimeInterval(_:)(v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 40))(v30, v33, v34);
  sub_100011694(v84, &qword_100548310);
  v39 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v84, 1, 1, v39);
  sub_100011694(v76, &qword_1005482D8);
  v82(v76, 1, 1, v71);

  *(_QWORD *)(v18 + v79) = 0;
  sub_10000D964(v30, v74, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v41 = *(_QWORD *)(v27 + 16);
  v40 = *(_QWORD *)(v27 + 24);
  if (v41 >= v40 >> 1)
    v27 = sub_1000753D4(v40 > 1, v41 + 1, 1, v27);
  v42 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v27 + 16) = v41 + 1;
  v43 = v27 + v36 + v41 * v37;
LABEL_35:
  sub_10000DB44(v42, v43, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v65 = *(_QWORD *)(v1 + 208);
  v66 = *(_QWORD *)(v1 + 232);
  v68 = *(_QWORD *)(v1 + 224);
  v69 = *(_QWORD *)(v1 + 184);
  v67 = *(_QWORD *)(v1 + 168);
  v70 = *(_QWORD *)(v1 + 160);
  v72 = *(_QWORD *)(v1 + 152);
  v75 = *(_QWORD *)(v1 + 144);
  v77 = *(_QWORD *)(v1 + 136);
  v57 = *(_QWORD *)(v1 + 112);
  v58 = *(_QWORD *)(v1 + 120);
  v59 = *(_QWORD *)(v1 + 96);
  v60 = *(_QWORD *)(v1 + 104);
  v62 = *(_QWORD *)(v1 + 80);
  v61 = *(_QWORD *)(v1 + 88);
  v80 = *(_QWORD *)(v1 + 72);
  v83 = *(_QWORD *)(v1 + 64);
  v86 = *(_QWORD *)(v1 + 56);
  v63 = *(_QWORD *)(v1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v60, v57, v61);
  v64 = sub_10001A0A8();
  Timeline.init(entries:policy:)(v27, v60, v58, v64);

  v90(v62, v63);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v61);
  sub_10000E750(v65, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  sub_100011694(v66, &qword_100548310);
  sub_10000E750(v67, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v65);
  swift_task_dealloc(v69);
  swift_task_dealloc(v67);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v75);
  swift_task_dealloc(v77);
  swift_task_dealloc(v57);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v80);
  swift_task_dealloc(v83);
  swift_task_dealloc(v86);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10001BEA0(double a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  *(double *)(*(_QWORD *)v1 + 288) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10001BEF4, 0, 0);
}

uint64_t sub_10001BEF4(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);

  a1.n128_u64[0] = *(_QWORD *)(v1 + 288);
  v2 = *(void **)(v1 + 264);
  v3 = *(_QWORD *)(v1 + 232);
  v35 = *(_QWORD *)(v1 + 208);
  v37 = *(_QWORD *)(v1 + 200);
  v39 = *(_QWORD *)(v1 + 192);
  v4 = *(_QWORD *)(v1 + 168);
  v41 = *(_QWORD *)(v1 + 152);
  v5 = *(int **)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  Date.addingTimeInterval(_:)(a1);
  static TimelineReloadPolicy.after(_:)(v6);
  v43 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v43(v6, v8);
  *(_BYTE *)(v4 + v5[6]) = 0;
  sub_10001C424(v3, v4 + v5[7]);
  v9 = v4 + v5[8];
  sub_100011694(v9, &qword_1005482D8);
  sub_10000D964(v35, v9, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v9, 0, 1, v39);
  v10 = v5[9];
  v11 = *(void **)(v4 + v10);
  v40 = v2;

  *(_QWORD *)(v4 + v10) = v2;
  sub_10000D964(v4, v41, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v12 = sub_1000753D4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (v14 >= v13 >> 1)
    v12 = sub_1000753D4(v13 > 1, v14 + 1, 1, v12);
  v15 = *(_QWORD *)(v1 + 152);
  v16 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v12 + 16) = v14 + 1;
  sub_10000DB44(v15, v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v14, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v26 = *(_QWORD *)(v1 + 208);
  v27 = *(_QWORD *)(v1 + 232);
  v29 = *(_QWORD *)(v1 + 224);
  v30 = *(_QWORD *)(v1 + 184);
  v28 = *(_QWORD *)(v1 + 168);
  v31 = *(_QWORD *)(v1 + 160);
  v32 = *(_QWORD *)(v1 + 152);
  v33 = *(_QWORD *)(v1 + 144);
  v34 = *(_QWORD *)(v1 + 136);
  v18 = *(_QWORD *)(v1 + 112);
  v17 = *(_QWORD *)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 104);
  v21 = *(_QWORD *)(v1 + 80);
  v22 = *(_QWORD *)(v1 + 88);
  v36 = *(_QWORD *)(v1 + 72);
  v38 = *(_QWORD *)(v1 + 64);
  v42 = *(_QWORD *)(v1 + 56);
  v23 = *(_QWORD *)(v1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v18, v22);
  v24 = sub_10001A0A8();
  Timeline.init(entries:policy:)(v12, v19, v17, v24);

  v43(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v22);
  sub_10000E750(v26, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  sub_100011694(v27, &qword_100548310);
  sub_10000E750(v28, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v26);
  swift_task_dealloc(v30);
  swift_task_dealloc(v28);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10001C218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005477A0 != -1)
    swift_once(&qword_1005477A0, sub_100019E48);
  v2 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100561200);
  return sub_10000D964(v3, a1, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
}

uint64_t sub_10001C284(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc(dword_1005484E4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return sub_10001A138(a1, v4);
}

uint64_t sub_10001C2E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc(dword_1005484DC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return sub_10001B1A4(a1, v4);
}

uint64_t sub_10001C34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to AppIntentTimelineProvider.relevances()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000DC64;
  return AppIntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10001C3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to AppIntentTimelineProvider.relevance()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100012D1C;
  return AppIntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10001C424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100548310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10001C46C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v23);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    v10 = *(int *)(a3 + 32);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 48) = v9;
    v13 = type metadata accessor for Text.Measurements(0);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain(v9);
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 36);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      v24 = *v17;
      *v16 = *v17;
      swift_retain(v24);
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return v4;
}

double sub_10001C5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 36));
  v7 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_10001C664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for Text.Measurements(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain(v8);
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 36);
  v15 = (uint64_t *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v17 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  return a1;
}

_QWORD *sub_10001C778(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v7 = a1[6];
  v8 = a2[6];
  a1[6] = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(int *)(a3 + 32);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 36);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    sub_100011694((uint64_t)a1 + v13, &qword_100547EE0);
    v16 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      v19 = *v15;
      *v14 = *v15;
      swift_retain(v19);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
  }
  return a1;
}

uint64_t sub_10001C8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 36);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001C9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 36);
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    sub_100011694(a1 + v14, &qword_100547EE0);
    v17 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload(v15, v17, 1);
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10001CAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001CADC);
}

uint64_t sub_10001CADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Text.Measurements(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_1005484F8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10001CB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001CB8C);
}

uint64_t sub_10001CB8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Text.Measurements(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_1005484F8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ErrorMessageModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_100548558;
  if (!qword_100548558)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ErrorMessageModifier);
  return result;
}

void sub_10001CC68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_1004250C8;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[3] = &unk_1004250E0;
  v2 = type metadata accessor for Text.Measurements(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_10001CD10(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

void sub_10001CD10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100548568)
  {
    v2 = type metadata accessor for WidgetFamily(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100548568);
  }
}

uint64_t sub_10001CD64(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048206C, 1);
}

uint64_t sub_10001CD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v68)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (**v74)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;

  v82 = a2;
  v4 = type metadata accessor for ErrorMessageModifier(0);
  v81 = *(_QWORD *)(v4 - 8);
  v79 = *(_QWORD *)(v81 + 64);
  __chkstk_darwin(v4);
  v80 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_1005485A8);
  __chkstk_darwin(v6);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10000B4C8(&qword_1005485B0);
  v9 = __chkstk_darwin(v78);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Alignment.center.getter(v9);
  v77 = v13;
  sub_10001D150();
  v15 = v14;
  v16 = sub_10000B4C8(&qword_1005485B8);
  v17 = swift_allocObject(v16, 96, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100424BC0;
  v18 = static Color.black.getter();
  *(_QWORD *)(v17 + 32) = Gradient.Stop.init(color:location:)(v18, 0.0);
  *(_QWORD *)(v17 + 40) = v19;
  v20 = static Color.black.getter();
  v21 = v15 + -0.3;
  if (v15 + -0.3 < 0.0)
    v21 = 0.0;
  *(_QWORD *)(v17 + 48) = Gradient.Stop.init(color:location:)(v20, v21);
  *(_QWORD *)(v17 + 56) = v22;
  v23 = static Color.black.getter();
  v24 = Color.opacity(_:)(0.1);
  swift_release(v23);
  v25 = Gradient.Stop.init(color:location:)(v24, v15);
  *(_QWORD *)(v17 + 64) = v25;
  *(_QWORD *)(v17 + 72) = v26;
  v27 = static Color.clear.getter(v25);
  *(_QWORD *)(v17 + 80) = Gradient.Stop.init(color:location:)(v27, 1.0);
  *(_QWORD *)(v17 + 88) = v28;
  v29 = static UnitPoint.top.getter();
  v31 = v30;
  v32 = static UnitPoint.bottom.getter();
  v34 = v33;
  Gradient.init(stops:)(v17);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v85, v29, v31, v32, v34);
  v35 = v85;
  v76 = v86;
  v36 = v87;
  v37 = v88;
  v38 = sub_10000B4C8(&qword_1005485C0);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v8, a1, v38);
  v40 = &v8[*(int *)(v6 + 36)];
  v41 = v77;
  *(_QWORD *)v40 = v12;
  *((_QWORD *)v40 + 1) = v41;
  *((_QWORD *)v40 + 2) = v35;
  *(_OWORD *)(v40 + 24) = v76;
  *((_QWORD *)v40 + 5) = v36;
  *((_QWORD *)v40 + 6) = v37;
  v42 = static Alignment.bottom.getter(v39);
  v44 = v43;
  v45 = *(_QWORD *)v2;
  v46 = *(_QWORD *)(v2 + 8);
  v47 = swift_bridgeObjectRetain();
  v48 = static Edge.Set.horizontal.getter(v47);
  v49 = EdgeInsets.init(_all:)(*(double *)(v2 + 24));
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = static Edge.Set.bottom.getter();
  v57 = EdgeInsets.init(_all:)(*(double *)(v2 + 16));
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v84 = 0;
  v83 = 0;
  sub_100011370((uint64_t)v8, (uint64_t)v11, &qword_1005485A8);
  v64 = &v11[*(int *)(v78 + 36)];
  *(_QWORD *)v64 = v45;
  *((_QWORD *)v64 + 1) = v46;
  v64[16] = 1;
  v64[24] = v48;
  *((double *)v64 + 4) = v49;
  *((_QWORD *)v64 + 5) = v51;
  *((_QWORD *)v64 + 6) = v53;
  *((_QWORD *)v64 + 7) = v55;
  v64[64] = v84;
  v64[72] = v56;
  *((double *)v64 + 10) = v57;
  *((_QWORD *)v64 + 11) = v59;
  *((_QWORD *)v64 + 12) = v61;
  *((_QWORD *)v64 + 13) = v63;
  v64[112] = v83;
  *((_QWORD *)v64 + 15) = v42;
  *((_QWORD *)v64 + 16) = v44;
  v65 = sub_100011694((uint64_t)v8, &qword_1005485A8);
  v66 = static Alignment.center.getter(v65);
  v68 = v67;
  v69 = v80;
  sub_10001D688(v2, v80);
  v70 = *(unsigned __int8 *)(v81 + 80);
  v71 = (v70 + 16) & ~v70;
  v72 = swift_allocObject(&unk_1004F9AA0, v71 + v79, v70 | 7);
  sub_10001D7B0(v69, v72 + v71);
  v73 = v82;
  sub_100011370((uint64_t)v11, v82, &qword_1005485B0);
  v74 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(v73 + *(int *)(sub_10000B4C8(&qword_1005485C8) + 36));
  *v74 = sub_10001D7F4;
  v74[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v72;
  v74[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v66;
  v74[3] = v68;
  return sub_100011694((uint64_t)v11, &qword_1005485B0);
}

_QWORD *sub_10001D150()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  double v59;
  double v60;

  v1 = v0;
  v2 = sub_10000B4C8(&qword_1005485D8);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetFamily(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v52 - v10;
  v12 = type metadata accessor for ErrorMessageModifier(0);
  sub_10003E98C((uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for WidgetFamily.systemLarge(_:), v5);
  v13 = static WidgetFamily.< infix(_:_:)(v11, v9);
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  result = (_QWORD *)((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) != 0)
  {
    v16 = v1[4];
    v17 = v1[5];
    v18 = v1[6];
    *(_QWORD *)&v57 = v16;
    *((_QWORD *)&v57 + 1) = v17;
    v58 = v18;
    v19 = sub_10000B4C8(&qword_1005485D0);
    result = State.wrappedValue.getter(&v59);
    if (v59 != 0.0 || v60 != 0.0)
    {
      v56 = (char *)v1 + *(int *)(v12 + 32);
      v20 = v1[1];
      *(_QWORD *)&v57 = *v1;
      *((_QWORD *)&v57 + 1) = v20;
      v21 = sub_10001D9DC();
      swift_bridgeObjectRetain();
      v22 = Text.init<A>(_:)(&v57, &type metadata for String, v21);
      v24 = v23;
      v26 = v25;
      v55 = v4;
      v28 = v27 & 1;
      v29 = static Font.subheadline.getter();
      v30 = Text.font(_:)(v29, v22, v24, v28, v26);
      v32 = v31;
      v53 = v18;
      v54 = v19;
      v34 = v33;
      v36 = v35;
      swift_release(v29);
      v37 = v34 & 1;
      sub_10001DA20(v22, v24, v28);
      v38 = swift_bridgeObjectRelease(v26);
      v39 = static Font.Weight.semibold.getter(v38);
      v40 = Text.fontWeight(_:)(*(_QWORD *)&v39, 0, v30, v32, v37, v36);
      v42 = v41;
      v44 = v43;
      v46 = v45 & 1;
      sub_10001DA20(v30, v32, v37);
      swift_bridgeObjectRelease(v36);
      *(_QWORD *)&v57 = v16;
      *((_QWORD *)&v57 + 1) = v17;
      v58 = v53;
      State.wrappedValue.getter(&v59);
      v47 = v59;
      v48 = v60;
      v49 = type metadata accessor for Text.WritingMode(0);
      v50 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v55, 1, 1, v49);
      Text.Measurements.size(of:in:writingMode:)(v40, v42, v46, v44, v50, v47, v48);
      sub_10001DA20(v40, v42, v46);
      swift_bridgeObjectRelease(v44);
      sub_100011694(v50, &qword_1005485D8);
      v51 = v1[6];
      v57 = *((_OWORD *)v1 + 2);
      v58 = v51;
      return State.wrappedValue.getter(&v59);
    }
  }
  return result;
}

uint64_t sub_10001D4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v5 = type metadata accessor for GeometryProxy(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for ErrorMessageModifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static Color.clear.getter(v11);
  sub_10001D688(a2, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v5);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v10 + v16 + v15) & ~v16;
  v18 = swift_allocObject(&unk_1004F9AC8, v17 + v7, v14 | v16 | 7);
  sub_10001D7B0((uint64_t)v12, v18 + v15);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *a3 = v13;
  a3[1] = (uint64_t)sub_10001D97C;
  a3[3] = 0;
  a3[4] = 0;
  a3[2] = v18;
  return result;
}

uint64_t sub_10001D5F0(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;
  uint64_t v11;

  v2 = GeometryProxy.size.getter();
  v4 = CGSize.inset(by:)(0.0, *(double *)(a1 + 24), *(double *)(a1 + 16), *(double *)(a1 + 24), v2, v3);
  v5 = *(_QWORD *)(a1 + 48);
  v10 = *(_OWORD *)(a1 + 32);
  v11 = v5;
  *(double *)v9 = v4;
  v9[1] = v6;
  v7 = sub_10000B4C8(&qword_1005485D0);
  return State.wrappedValue.setter(v9, v7);
}

uint64_t sub_10001D66C()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_10001D688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ErrorMessageModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001D6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for ErrorMessageModifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  v6 = v0 + v4 + *(int *)(v1 + 32);
  v7 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 36));
  v9 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10001D7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ErrorMessageModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001D7F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ErrorMessageModifier(0) - 8) + 80);
  return sub_10001D4A4(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_10001D840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = type metadata accessor for ErrorMessageModifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v18 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for GeometryProxy(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  v9 = v0 + v4 + *(int *)(v1 + 32);
  v10 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 36));
  v12 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    v14 = swift_release(*v11);
  }
  v15 = (v4 + v18 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v15, v5, v14);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10001D97C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for ErrorMessageModifier(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  type metadata accessor for GeometryProxy(0);
  return sub_10001D5F0(v0 + v2);
}

unint64_t sub_10001D9DC()
{
  unint64_t result;

  result = qword_1005485E0;
  if (!qword_1005485E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005485E0);
  }
  return result;
}

uint64_t sub_10001DA20(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

unint64_t sub_10001DA34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005485E8;
  if (!qword_1005485E8)
  {
    v1 = sub_100011650(&qword_1005485C8);
    v2[0] = sub_10001DAB8();
    v2[1] = sub_100012324(&qword_100548628, &qword_100548630, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005485E8);
  }
  return result;
}

unint64_t sub_10001DAB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005485F0;
  if (!qword_1005485F0)
  {
    v1 = sub_100011650(&qword_1005485B0);
    v2[0] = sub_10001DB3C();
    v2[1] = sub_100012324(&qword_100548618, &qword_100548620, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005485F0);
  }
  return result;
}

unint64_t sub_10001DB3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005485F8;
  if (!qword_1005485F8)
  {
    v1 = sub_100011650(&qword_1005485A8);
    v2[0] = sub_100012324(&qword_100548600, &qword_1005485C0, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[1] = sub_100012324(&qword_100548608, &qword_100548610, (const char *)&protocol conformance descriptor for _MaskAlignmentEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005485F8);
  }
  return result;
}

char *sub_10001DBD8(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD *, uint64_t, int *);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void (*v72)(_QWORD *, _QWORD, uint64_t, int *);
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  id v90;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *__dsta;
  char *__dst;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);

  v4 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v32);
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for Date(0);
    v101 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    v8(a1, a2, v7);
    v9 = v6[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v99 = v7;
    v102 = v8;
    v8(&a1[v9], &a2[v9], v7);
    v12 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v10[v12[7]] = v11[v12[7]];
    *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
    a1[v6[6]] = a2[v6[6]];
    v21 = v6[7];
    v22 = &a1[v21];
    v100 = a2;
    v23 = &a2[v21];
    v24 = (int *)type metadata accessor for WidgetMusicItem(0);
    v25 = *((_QWORD *)v24 - 1);
    v26 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      v27 = sub_10000B4C8(&qword_100548310);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      v29 = v99;
      v28 = v100;
      v31 = v101;
      v30 = v102;
    }
    else
    {
      v96 = v25;
      v33 = *((_QWORD *)v23 + 1);
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v33;
      v34 = *((_QWORD *)v23 + 3);
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 3) = v34;
      v35 = *((_QWORD *)v23 + 5);
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      *((_QWORD *)v22 + 5) = v35;
      v36 = v24[7];
      v37 = &v22[v36];
      __dsta = &v23[v36];
      v38 = type metadata accessor for URL(0);
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v93(v37, __dsta, v38);
      v39 = v24[8];
      v40 = &v22[v39];
      v41 = &v23[v39];
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v24[9];
      v44 = &v22[v43];
      v45 = &v23[v43];
      v94 = v45[1];
      *v44 = *v45;
      v44[1] = v94;
      v46 = v24[10];
      v47 = &v22[v46];
      v48 = &v23[v46];
      v92 = v48[1];
      *v47 = *v48;
      v47[1] = v92;
      v49 = v24[11];
      v50 = &v22[v49];
      v51 = &v23[v49];
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      v53 = v24[12];
      v54 = &v22[v53];
      v55 = &v23[v53];
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = v24[13];
      v58 = &v22[v57];
      v59 = &v23[v57];
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      *(_QWORD *)&v22[v24[14]] = *(_QWORD *)&v23[v24[14]];
      v22[v24[15]] = v23[v24[15]];
      v61 = v24[16];
      __dst = &v22[v61];
      v62 = &v23[v61];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63 = sub_10000B4C8(&qword_100547B50);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = v62;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 10, v63))
      {
        v66 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        v29 = v99;
        v28 = v100;
        v30 = v102;
      }
      else
      {
        v67 = type metadata accessor for Playlist.Variant(0);
        v95 = *(_QWORD *)(v67 - 8);
        v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48))(v62, 1, v67);
        v28 = v100;
        if (v68)
        {
          v69 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v95 + 16))(__dst, v65, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dst, 0, 1, v67);
        }
        v29 = v99;
        v30 = v102;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 10, v63);
      }
      *(_QWORD *)&v22[v24[17]] = *(_QWORD *)&v23[v24[17]];
      v70 = v24[18];
      v71 = *(void **)&v23[v70];
      *(_QWORD *)&v22[v70] = v71;
      *(_QWORD *)&v22[v24[19]] = *(_QWORD *)&v23[v24[19]];
      v72 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v96 + 56);
      v73 = v71;
      swift_bridgeObjectRetain();
      v72(v22, 0, 1, v24);
      v31 = v101;
    }
    v74 = v6[8];
    v75 = &a1[v74];
    v76 = (char *)v28 + v74;
    v77 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v78 = *(_QWORD *)(v77 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
    {
      v79 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v30(v75, v76, v29);
      v30(&v75[*(int *)(v77 + 20)], &v76[*(int *)(v77 + 20)], v29);
      v80 = *(int *)(v77 + 24);
      v81 = &v75[v80];
      v82 = &v76[v80];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v82, 1, v29))
      {
        v83 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v102(v81, v82, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v81, 0, 1, v29);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
    }
    v84 = v6[9];
    v85 = *(void **)((char *)v28 + v84);
    *(_QWORD *)&a1[v84] = v85;
    v86 = v6[10];
    v87 = &a1[v86];
    v88 = (_QWORD *)((char *)v28 + v86);
    v89 = v88[1];
    *(_QWORD *)v87 = *v88;
    *((_QWORD *)v87 + 1) = v89;
    v90 = v85;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10001E154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(a1, v2);
  v5 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v6 = a1 + v5[5];
  v4(v6, v2);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  v8 = (_QWORD *)(a1 + v5[7]);
  v9 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease(v8[1]);
    swift_bridgeObjectRelease(v8[3]);
    swift_bridgeObjectRelease(v8[5]);
    v10 = (char *)v8 + v9[7];
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[14]));
    v12 = (char *)v8 + v9[16];
    v13 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 10, v13))
    {
      v14 = type metadata accessor for Playlist.Variant(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
        (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v8 + v9[19]));
  }
  v16 = a1 + v5[8];
  v17 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v4(v16, v2);
    v4(v16 + *(int *)(v17 + 20), v2);
    v18 = v16 + *(int *)(v17 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v18, 1, v2))
      v4(v18, v2);
  }

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[10] + 8));
}

uint64_t sub_10001E3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, int *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void (*v72)(_QWORD *, _QWORD, uint64_t, int *);
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  id v90;
  char *__dst;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  v97 = *(_QWORD *)(v4 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
  v5(a1, a2, v4);
  v6 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v98 = v4;
  v99 = v5;
  v5(a1 + v7, a2 + v7, v4);
  v10 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v11 = v10[5];
  v12 = (_QWORD *)(v8 + v11);
  v13 = (_QWORD *)(v9 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v10[6];
  v16 = (_QWORD *)(v8 + v15);
  v17 = (_QWORD *)(v9 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_QWORD *)(v8 + v10[8]) = *(_QWORD *)(v9 + v10[8]);
  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v19 = v6[7];
  v96 = a1;
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = (int *)type metadata accessor for WidgetMusicItem(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24(v21, 1, v22))
  {
    v25 = sub_10000B4C8(&qword_100548310);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    v27 = v97;
    v26 = v98;
    v28 = (void (*)(char *, char *, uint64_t))v99;
  }
  else
  {
    v93 = v23;
    v94 = v6;
    v95 = a2;
    v29 = v21[1];
    *v20 = *v21;
    v20[1] = v29;
    v30 = v21[3];
    v20[2] = v21[2];
    v20[3] = v30;
    v31 = v21[5];
    v20[4] = v21[4];
    v20[5] = v31;
    v32 = v22[7];
    v33 = (char *)v20 + v32;
    v34 = (char *)v21 + v32;
    v35 = type metadata accessor for URL(0);
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
    v37 = v22[8];
    v38 = (_QWORD *)((char *)v20 + v37);
    v39 = (_QWORD *)((char *)v21 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = v22[9];
    v42 = (_QWORD *)((char *)v20 + v41);
    v43 = (_QWORD *)((char *)v21 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = v22[10];
    v46 = (_QWORD *)((char *)v20 + v45);
    v47 = (_QWORD *)((char *)v21 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = v22[11];
    v50 = (_QWORD *)((char *)v20 + v49);
    v51 = (_QWORD *)((char *)v21 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = v22[12];
    v54 = (_QWORD *)((char *)v20 + v53);
    v55 = (_QWORD *)((char *)v21 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = v22[13];
    v58 = (_QWORD *)((char *)v20 + v57);
    v59 = (_QWORD *)((char *)v21 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    *(_QWORD *)((char *)v20 + v22[14]) = *(_QWORD *)((char *)v21 + v22[14]);
    *((_BYTE *)v20 + v22[15]) = *((_BYTE *)v21 + v22[15]);
    v61 = v22[16];
    __dst = (char *)v20 + v61;
    v62 = (char *)v21 + v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = sub_10000B4C8(&qword_100547B50);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 10, v63))
    {
      v65 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      v66 = v93;
      v6 = v94;
      v26 = v98;
      v28 = (void (*)(char *, char *, uint64_t))v99;
    }
    else
    {
      v67 = type metadata accessor for Playlist.Variant(0);
      v68 = *(_QWORD *)(v67 - 8);
      v26 = v98;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v62, 1, v67))
      {
        v69 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(__dst, v62, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v67);
      }
      v28 = (void (*)(char *, char *, uint64_t))v99;
      v66 = v93;
      v6 = v94;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 10, v63);
    }
    *(_QWORD *)((char *)v20 + v22[17]) = *(_QWORD *)((char *)v21 + v22[17]);
    v70 = v22[18];
    v71 = *(void **)((char *)v21 + v70);
    *(_QWORD *)((char *)v20 + v70) = v71;
    *(_QWORD *)((char *)v20 + v22[19]) = *(_QWORD *)((char *)v21 + v22[19]);
    v72 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v66 + 56);
    v73 = v71;
    swift_bridgeObjectRetain();
    v72(v20, 0, 1, v22);
    a2 = v95;
    v27 = v97;
  }
  v74 = v6[8];
  v75 = (char *)(v96 + v74);
  v76 = (char *)(a2 + v74);
  v77 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v78 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
  {
    v79 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v28(v75, v76, v26);
    v28(&v75[*(int *)(v77 + 20)], &v76[*(int *)(v77 + 20)], v26);
    v80 = *(int *)(v77 + 24);
    v81 = &v75[v80];
    v82 = &v76[v80];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v82, 1, v26))
    {
      v83 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v99((uint64_t)v81, (uint64_t)v82, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v81, 0, 1, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  v84 = v6[9];
  v85 = *(void **)(a2 + v84);
  *(_QWORD *)(v96 + v84) = v85;
  v86 = v6[10];
  v87 = (_QWORD *)(v96 + v86);
  v88 = (_QWORD *)(a2 + v86);
  v89 = v88[1];
  *v87 = *v88;
  v87[1] = v89;
  v90 = v85;
  swift_bridgeObjectRetain();
  return v96;
}

uint64_t sub_10001E918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t (*v26)(_QWORD *, uint64_t, int *);
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  void *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void (*v107)(_QWORD *, _QWORD, uint64_t, int *);
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(void *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  void *v115;
  void *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, uint64_t, uint64_t);
  int v127;
  int v128;
  void (*v129)(uint64_t, char *, uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  size_t v133;
  void *v134;
  char *v135;
  uint64_t v136;
  void *v137;
  char *v138;
  uint64_t (*v139)(void *, uint64_t, uint64_t);
  int v140;
  int v141;
  uint64_t v142;
  void *v143;
  void *v144;
  id v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  char *__dst;
  uint64_t v152;
  int *v153;
  int *v154;
  uint64_t v155;
  void (*v156)(uint64_t, char *, uint64_t);
  _QWORD *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;

  v4 = type metadata accessor for Date(0);
  v159 = *(_QWORD *)(v4 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 24);
  v5(a1, a2, v4);
  v6 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v5(a1 + v7, a2 + v7, v4);
  v10 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v11 = v10[5];
  v12 = (_QWORD *)(v8 + v11);
  v13 = (_QWORD *)(v9 + v11);
  *v12 = *v13;
  v14 = v12[1];
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  v15 = v10[6];
  v16 = (_QWORD *)(v8 + v15);
  v17 = (_QWORD *)(v9 + v15);
  *v16 = *v17;
  v18 = v16[1];
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v18);
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  v19 = v10[8];
  v20 = *(_QWORD *)(v9 + v19);
  v21 = *(_QWORD *)(v8 + v19);
  *(_QWORD *)(v8 + v19) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v21);
  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v22 = v6[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = (int *)type metadata accessor for WidgetMusicItem(0);
  v157 = (_QWORD *)*((_QWORD *)v25 - 1);
  v26 = (uint64_t (*)(_QWORD *, uint64_t, int *))v157[6];
  LODWORD(v18) = v26(v23, 1, v25);
  v27 = v26(v24, 1, v25);
  v160 = v4;
  v156 = (void (*)(uint64_t, char *, uint64_t))v5;
  if (!(_DWORD)v18)
  {
    if (v27)
    {
      sub_10000E750((uint64_t)v23, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v154 = v6;
    v155 = a2;
    *v23 = *v24;
    v57 = v23[1];
    v23[1] = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v57);
    v23[2] = v24[2];
    v58 = v23[3];
    v23[3] = v24[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v23[4] = v24[4];
    v59 = v23[5];
    v23[5] = v24[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v59);
    v60 = v25[7];
    v61 = (char *)v23 + v60;
    v62 = (char *)v24 + v60;
    v63 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
    v64 = v25[8];
    v65 = (_QWORD *)((char *)v23 + v64);
    v66 = (_QWORD *)((char *)v24 + v64);
    *v65 = *v66;
    v67 = v65[1];
    v65[1] = v66[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v67);
    v68 = v25[9];
    v69 = (_QWORD *)((char *)v23 + v68);
    v70 = (_QWORD *)((char *)v24 + v68);
    *v69 = *v70;
    v71 = v69[1];
    v69[1] = v70[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v71);
    v72 = v25[10];
    v73 = (_QWORD *)((char *)v23 + v72);
    v74 = (_QWORD *)((char *)v24 + v72);
    *v73 = *v74;
    v75 = v73[1];
    v73[1] = v74[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v75);
    v76 = v25[11];
    v77 = (_QWORD *)((char *)v23 + v76);
    v78 = (_QWORD *)((char *)v24 + v76);
    *v77 = *v78;
    v79 = v77[1];
    v77[1] = v78[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v79);
    v80 = v25[12];
    v81 = (_QWORD *)((char *)v23 + v80);
    v82 = (_QWORD *)((char *)v24 + v80);
    *v81 = *v82;
    v83 = v81[1];
    v81[1] = v82[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v83);
    v84 = v25[13];
    v85 = (_QWORD *)((char *)v23 + v84);
    v86 = (_QWORD *)((char *)v24 + v84);
    *v85 = *v86;
    v87 = v85[1];
    v85[1] = v86[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v87);
    v88 = v25[14];
    v89 = *(_QWORD *)((char *)v23 + v88);
    *(_QWORD *)((char *)v23 + v88) = *(_QWORD *)((char *)v24 + v88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v89);
    *((_BYTE *)v23 + v25[15]) = *((_BYTE *)v24 + v25[15]);
    v90 = v25[16];
    v91 = (char *)v23 + v90;
    v92 = (char *)v24 + v90;
    v93 = sub_10000B4C8(&qword_100547B50);
    v94 = *(_QWORD *)(v93 - 8);
    v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
    v96 = v91;
    LODWORD(v91) = v95(v91, 10, v93);
    v97 = v95(v92, 10, v93);
    if ((_DWORD)v91)
    {
      if (!v97)
      {
        v98 = type metadata accessor for Playlist.Variant(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v92, 1, v98))
        {
          v100 = sub_10000B4C8(&qword_100548358);
          memcpy(v96, v92, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v99 + 16))(v96, v92, v98);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v96, 0, 10, v93);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v97)
      {
        v109 = type metadata accessor for Playlist.Variant(0);
        v110 = *(_QWORD *)(v109 - 8);
        v111 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v110 + 48);
        v112 = v111(v96, 1, v109);
        v113 = v111(v92, 1, v109);
        if (v112)
        {
          if (!v113)
          {
            (*(void (**)(void *, char *, uint64_t))(v110 + 16))(v96, v92, v109);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v96, 0, 1, v109);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v113)
          {
            (*(void (**)(void *, char *, uint64_t))(v110 + 24))(v96, v92, v109);
            goto LABEL_26;
          }
          (*(void (**)(void *, uint64_t))(v110 + 8))(v96, v109);
        }
        v104 = sub_10000B4C8(&qword_100548358);
LABEL_17:
        memcpy(v96, v92, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
LABEL_26:
        v6 = v154;
        a2 = v155;
        *(_QWORD *)((char *)v23 + v25[17]) = *(_QWORD *)((char *)v24 + v25[17]);
        v114 = v25[18];
        v115 = *(void **)((char *)v23 + v114);
        v116 = *(void **)((char *)v24 + v114);
        *(_QWORD *)((char *)v23 + v114) = v116;
        v117 = v116;

        v118 = v25[19];
        v119 = *(_QWORD *)((char *)v24 + v118);
        v120 = *(_QWORD *)((char *)v23 + v118);
        *(_QWORD *)((char *)v23 + v118) = v119;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v120);
        goto LABEL_27;
      }
      sub_100011694((uint64_t)v96, &qword_100547B50);
    }
    v104 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_17;
  }
  if (v27)
  {
LABEL_7:
    v56 = sub_10000B4C8(&qword_100548310);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_27;
  }
  v153 = v6;
  v152 = a1;
  *v23 = *v24;
  v23[1] = v24[1];
  v23[2] = v24[2];
  v23[3] = v24[3];
  v23[4] = v24[4];
  v23[5] = v24[5];
  v28 = v25[7];
  v29 = (char *)v23 + v28;
  v30 = (char *)v24 + v28;
  v31 = type metadata accessor for URL(0);
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(v29, v30, v31);
  v33 = v25[8];
  v34 = (_QWORD *)((char *)v23 + v33);
  v35 = (_QWORD *)((char *)v24 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  v36 = v25[9];
  v37 = (_QWORD *)((char *)v23 + v36);
  v38 = (_QWORD *)((char *)v24 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  v39 = v25[10];
  v40 = (_QWORD *)((char *)v23 + v39);
  v41 = (_QWORD *)((char *)v24 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  v42 = v25[11];
  v43 = (_QWORD *)((char *)v23 + v42);
  v44 = (_QWORD *)((char *)v24 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  v45 = v25[12];
  v46 = (_QWORD *)((char *)v23 + v45);
  v47 = (_QWORD *)((char *)v24 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  v48 = v25[13];
  v49 = (_QWORD *)((char *)v23 + v48);
  v50 = (_QWORD *)((char *)v24 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  *(_QWORD *)((char *)v23 + v25[14]) = *(_QWORD *)((char *)v24 + v25[14]);
  *((_BYTE *)v23 + v25[15]) = *((_BYTE *)v24 + v25[15]);
  v51 = v25[16];
  __dst = (char *)v23 + v51;
  v52 = (char *)v24 + v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = sub_10000B4C8(&qword_100547B50);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 10, v53))
  {
    v55 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    a1 = v152;
  }
  else
  {
    v101 = type metadata accessor for Playlist.Variant(0);
    v102 = *(_QWORD *)(v101 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v52, 1, v101))
    {
      v103 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(__dst, v52, v101);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(__dst, 0, 1, v101);
    }
    a1 = v152;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 10, v53);
  }
  v6 = v153;
  *(_QWORD *)((char *)v23 + v25[17]) = *(_QWORD *)((char *)v24 + v25[17]);
  v105 = v25[18];
  v106 = *(void **)((char *)v24 + v105);
  *(_QWORD *)((char *)v23 + v105) = v106;
  *(_QWORD *)((char *)v23 + v25[19]) = *(_QWORD *)((char *)v24 + v25[19]);
  v107 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))v157[7];
  v108 = v106;
  swift_bridgeObjectRetain();
  v107(v23, 0, 1, v25);
LABEL_27:
  v121 = v6[8];
  v122 = a1 + v121;
  v123 = (char *)(a2 + v121);
  v124 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v125 = *(_QWORD *)(v124 - 8);
  v126 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  v127 = v126(v122, 1, v124);
  v128 = v126((uint64_t)v123, 1, v124);
  if (!v127)
  {
    if (!v128)
    {
      v156(v122, v123, v160);
      v156(v122 + *(int *)(v124 + 20), &v123[*(int *)(v124 + 20)], v160);
      v136 = *(int *)(v124 + 24);
      v137 = (void *)(v122 + v136);
      v138 = &v123[v136];
      v139 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v159 + 48);
      v140 = v139(v137, 1, v160);
      v141 = v139(v138, 1, v160);
      if (v140)
      {
        if (!v141)
        {
          (*(void (**)(void *, char *, uint64_t))(v159 + 16))(v137, v138, v160);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v137, 0, 1, v160);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v141)
        {
          v156((uint64_t)v137, v138, v160);
          goto LABEL_40;
        }
        (*(void (**)(void *, uint64_t))(v159 + 8))(v137, v160);
      }
      v133 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005481F0) - 8) + 64);
      v134 = v137;
      v135 = v138;
      goto LABEL_34;
    }
    sub_10000E750(v122, type metadata accessor for NowPlayingDataProvider.ItemProgress);
LABEL_33:
    v133 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005482D8) - 8) + 64);
    v134 = (void *)v122;
    v135 = v123;
LABEL_34:
    memcpy(v134, v135, v133);
    goto LABEL_40;
  }
  if (v128)
    goto LABEL_33;
  v129 = *(void (**)(uint64_t, char *, uint64_t))(v159 + 16);
  v129(v122, v123, v160);
  v129(v122 + *(int *)(v124 + 20), &v123[*(int *)(v124 + 20)], v160);
  v130 = *(int *)(v124 + 24);
  v158 = (void *)(v122 + v130);
  v131 = &v123[v130];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v131, 1, v160))
  {
    v132 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v158, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    v129((uint64_t)v158, v131, v160);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v158, 0, 1, v160);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
LABEL_40:
  v142 = v6[9];
  v143 = *(void **)(a1 + v142);
  v144 = *(void **)(a2 + v142);
  *(_QWORD *)(a1 + v142) = v144;
  v145 = v144;

  v146 = v6[10];
  v147 = (_QWORD *)(a1 + v146);
  v148 = (_QWORD *)(a2 + v146);
  *v147 = *v148;
  v149 = v147[1];
  v147[1] = v148[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v149);
  return a1;
}

uint64_t sub_10001F3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *__dst;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  void (*v51)(char *, char *, uint64_t);

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, v4);
  v7 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v4);
  v11 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  *(_OWORD *)(v9 + v11[5]) = *(_OWORD *)(v10 + v11[5]);
  *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v12 = v7[7];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for WidgetMusicItem(0);
  v16 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_10000B4C8(&qword_100548310);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v48 = v16;
    v49 = v5;
    v50 = v6;
    v18 = v14[1];
    *v13 = *v14;
    v13[1] = v18;
    v13[2] = v14[2];
    v19 = v15[7];
    v20 = (char *)v13 + v19;
    v21 = (char *)v14 + v19;
    v22 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    *(_OWORD *)((char *)v13 + v15[8]) = *(_OWORD *)((char *)v14 + v15[8]);
    *(_OWORD *)((char *)v13 + v15[9]) = *(_OWORD *)((char *)v14 + v15[9]);
    *(_OWORD *)((char *)v13 + v15[10]) = *(_OWORD *)((char *)v14 + v15[10]);
    *(_OWORD *)((char *)v13 + v15[11]) = *(_OWORD *)((char *)v14 + v15[11]);
    *(_OWORD *)((char *)v13 + v15[12]) = *(_OWORD *)((char *)v14 + v15[12]);
    *(_OWORD *)((char *)v13 + v15[13]) = *(_OWORD *)((char *)v14 + v15[13]);
    *(_QWORD *)((char *)v13 + v15[14]) = *(_QWORD *)((char *)v14 + v15[14]);
    *((_BYTE *)v13 + v15[15]) = *((_BYTE *)v14 + v15[15]);
    v23 = v15[16];
    __dst = (char *)v13 + v23;
    v24 = (char *)v14 + v23;
    v25 = sub_10000B4C8(&qword_100547B50);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
    {
      v27 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      v5 = v49;
      v6 = v50;
    }
    else
    {
      v45 = v25;
      v46 = v26;
      v28 = type metadata accessor for Playlist.Variant(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
      {
        v30 = sub_10000B4C8(&qword_100548358);
        v31 = __dst;
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v32 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v44 = v29;
        v31 = __dst;
        v32(__dst, v24, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v28);
      }
      v6 = v50;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v31, 0, 10, v45);
      v5 = v49;
    }
    *(_QWORD *)((char *)v13 + v15[17]) = *(_QWORD *)((char *)v14 + v15[17]);
    *(_QWORD *)((char *)v13 + v15[18]) = *(_QWORD *)((char *)v14 + v15[18]);
    *(_QWORD *)((char *)v13 + v15[19]) = *(_QWORD *)((char *)v14 + v15[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v48 + 56))(v13, 0, 1, v15);
  }
  v33 = v7[8];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v34, (uint64_t)v35, v4);
    v6((uint64_t)&v34[*(int *)(v36 + 20)], (uint64_t)&v35[*(int *)(v36 + 20)], v4);
    v39 = *(int *)(v36 + 24);
    v51 = (void (*)(char *, char *, uint64_t))v6;
    v40 = &v34[v39];
    v41 = &v35[v39];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v41, 1, v4))
    {
      v42 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v51(v40, v41, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v40, 0, 1, v4);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  return a1;
}

uint64_t sub_10001F80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t, int *);
  int v31;
  int v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t, uint64_t);
  int v98;
  uint64_t v99;
  size_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(void *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(char *, uint64_t, uint64_t);
  int v126;
  int v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t (*v137)(char *, uint64_t, uint64_t);
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v150)(void *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *__dst;
  void *__dsta;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(char *, char *, uint64_t);
  uint64_t v162;

  v4 = type metadata accessor for Date(0);
  v162 = *(_QWORD *)(v4 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 40);
  v5(a1, a2, v4);
  v6 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v161 = (void (*)(char *, char *, uint64_t))v5;
  v5(a1 + v7, a2 + v7, v4);
  v10 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v11 = v10[5];
  v12 = (_QWORD *)(v8 + v11);
  v13 = (uint64_t *)(v9 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = v10[6];
  v18 = (_QWORD *)(v8 + v17);
  v19 = (uint64_t *)(v9 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  v23 = v10[8];
  v24 = *(_QWORD *)(v8 + v23);
  *(_QWORD *)(v8 + v23) = *(_QWORD *)(v9 + v23);
  swift_bridgeObjectRelease(v24);
  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v25 = v6[7];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = (int *)type metadata accessor for WidgetMusicItem(0);
  v29 = *((_QWORD *)v28 - 1);
  v30 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_10000E750((uint64_t)v26, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v160 = v4;
    v45 = v27[1];
    v46 = v26[1];
    *v26 = *v27;
    v26[1] = v45;
    swift_bridgeObjectRelease(v46);
    v47 = v27[3];
    v48 = v26[3];
    v26[2] = v27[2];
    v26[3] = v47;
    swift_bridgeObjectRelease(v48);
    v49 = v27[5];
    v50 = v26[5];
    v26[4] = v27[4];
    v26[5] = v49;
    swift_bridgeObjectRelease(v50);
    v51 = v28[7];
    v52 = (char *)v26 + v51;
    v53 = (char *)v27 + v51;
    v54 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
    v55 = v28[8];
    v56 = (_QWORD *)((char *)v26 + v55);
    v57 = (_QWORD *)((char *)v27 + v55);
    v59 = *v57;
    v58 = v57[1];
    v60 = v56[1];
    *v56 = v59;
    v56[1] = v58;
    swift_bridgeObjectRelease(v60);
    v61 = v28[9];
    v62 = (_QWORD *)((char *)v26 + v61);
    v63 = (_QWORD *)((char *)v27 + v61);
    v65 = *v63;
    v64 = v63[1];
    v66 = v62[1];
    *v62 = v65;
    v62[1] = v64;
    swift_bridgeObjectRelease(v66);
    v67 = v28[10];
    v68 = (_QWORD *)((char *)v26 + v67);
    v69 = (_QWORD *)((char *)v27 + v67);
    v71 = *v69;
    v70 = v69[1];
    v72 = v68[1];
    *v68 = v71;
    v68[1] = v70;
    swift_bridgeObjectRelease(v72);
    v73 = v28[11];
    v74 = (_QWORD *)((char *)v26 + v73);
    v75 = (_QWORD *)((char *)v27 + v73);
    v77 = *v75;
    v76 = v75[1];
    v78 = v74[1];
    *v74 = v77;
    v74[1] = v76;
    swift_bridgeObjectRelease(v78);
    v79 = v28[12];
    v80 = (_QWORD *)((char *)v26 + v79);
    v81 = (_QWORD *)((char *)v27 + v79);
    v83 = *v81;
    v82 = v81[1];
    v84 = v80[1];
    *v80 = v83;
    v80[1] = v82;
    swift_bridgeObjectRelease(v84);
    v85 = v28[13];
    v86 = (_QWORD *)((char *)v26 + v85);
    v87 = (_QWORD *)((char *)v27 + v85);
    v89 = *v87;
    v88 = v87[1];
    v90 = v86[1];
    *v86 = v89;
    v86[1] = v88;
    swift_bridgeObjectRelease(v90);
    v91 = v28[14];
    v92 = *(_QWORD *)((char *)v26 + v91);
    *(_QWORD *)((char *)v26 + v91) = *(_QWORD *)((char *)v27 + v91);
    swift_bridgeObjectRelease(v92);
    *((_BYTE *)v26 + v28[15]) = *((_BYTE *)v27 + v28[15]);
    v93 = v28[16];
    v94 = (char *)v26 + v93;
    v95 = (char *)v27 + v93;
    v96 = sub_10000B4C8(&qword_100547B50);
    v153 = *(_QWORD *)(v96 - 8);
    v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v153 + 48);
    v158 = v94;
    LODWORD(v94) = v97(v94, 10, v96);
    __dst = v95;
    v98 = v97(v95, 10, v96);
    if ((_DWORD)v94)
    {
      if (!v98)
      {
        v108 = type metadata accessor for Playlist.Variant(0);
        v109 = *(_QWORD *)(v108 - 8);
        v152 = v108;
        if ((*(unsigned int (**)(char *, uint64_t))(v109 + 48))(v95, 1))
        {
          v110 = sub_10000B4C8(&qword_100548358);
          memcpy(v158, v95, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v109 + 32))(v158, v95, v152);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v158, 0, 1, v152);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v158, 0, 10, v96);
        goto LABEL_28;
      }
      v99 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_11:
      v100 = *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64);
      v101 = v158;
LABEL_17:
      memcpy(v101, __dst, v100);
LABEL_28:
      v4 = v160;
      *(_QWORD *)((char *)v26 + v28[17]) = *(_QWORD *)((char *)v27 + v28[17]);
      v116 = v28[18];
      v117 = *(void **)((char *)v26 + v116);
      *(_QWORD *)((char *)v26 + v116) = *(_QWORD *)((char *)v27 + v116);

      v118 = v28[19];
      v119 = *(_QWORD *)((char *)v26 + v118);
      *(_QWORD *)((char *)v26 + v118) = *(_QWORD *)((char *)v27 + v118);
      swift_bridgeObjectRelease(v119);
      goto LABEL_29;
    }
    if (v98)
    {
      v106 = v158;
      sub_100011694((uint64_t)v158, &qword_100547B50);
      v107 = type metadata accessor for ArtworkImage.Placeholder(0);
    }
    else
    {
      v111 = type metadata accessor for Playlist.Variant(0);
      v112 = *(_QWORD *)(v111 - 8);
      v113 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v112 + 48);
      v114 = v113(v158, 1, v111);
      v115 = v113(__dst, 1, v111);
      if (v114)
      {
        if (!v115)
        {
          (*(void (**)(void *, char *, uint64_t))(v112 + 32))(v158, __dst, v111);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v158, 0, 1, v111);
          goto LABEL_28;
        }
        v99 = sub_10000B4C8(&qword_100548358);
        goto LABEL_11;
      }
      if (!v115)
      {
        (*(void (**)(void *, char *, uint64_t))(v112 + 40))(v158, __dst, v111);
        goto LABEL_28;
      }
      v150 = *(void (**)(void *, uint64_t))(v112 + 8);
      v106 = v158;
      v150(v158, v111);
      v107 = sub_10000B4C8(&qword_100548358);
    }
    v100 = *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64);
    v101 = v106;
    goto LABEL_17;
  }
  if (v32)
  {
LABEL_7:
    v44 = sub_10000B4C8(&qword_100548310);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_29;
  }
  v157 = a2;
  v159 = v4;
  v33 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v33;
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  v34 = v28[7];
  v35 = (char *)v26 + v34;
  v36 = (char *)v27 + v34;
  v37 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  *(_OWORD *)((char *)v26 + v28[8]) = *(_OWORD *)((char *)v27 + v28[8]);
  *(_OWORD *)((char *)v26 + v28[9]) = *(_OWORD *)((char *)v27 + v28[9]);
  *(_OWORD *)((char *)v26 + v28[10]) = *(_OWORD *)((char *)v27 + v28[10]);
  *(_OWORD *)((char *)v26 + v28[11]) = *(_OWORD *)((char *)v27 + v28[11]);
  *(_OWORD *)((char *)v26 + v28[12]) = *(_OWORD *)((char *)v27 + v28[12]);
  *(_OWORD *)((char *)v26 + v28[13]) = *(_OWORD *)((char *)v27 + v28[13]);
  *(_QWORD *)((char *)v26 + v28[14]) = *(_QWORD *)((char *)v27 + v28[14]);
  *((_BYTE *)v26 + v28[15]) = *((_BYTE *)v27 + v28[15]);
  v38 = v28[16];
  v39 = (char *)v26 + v38;
  v40 = (char *)v27 + v38;
  v41 = sub_10000B4C8(&qword_100547B50);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
  {
    v43 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v151 = v42;
    v154 = v41;
    __dsta = v39;
    v102 = type metadata accessor for Playlist.Variant(0);
    v103 = *(_QWORD *)(v102 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v40, 1, v102))
    {
      v104 = sub_10000B4C8(&qword_100548358);
      v105 = __dsta;
      memcpy(__dsta, v40, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      v105 = __dsta;
      (*(void (**)(void *, char *, uint64_t))(v103 + 32))(__dsta, v40, v102);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v103 + 56))(__dsta, 0, 1, v102);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v105, 0, 10, v154);
  }
  a2 = v157;
  v4 = v159;
  *(_QWORD *)((char *)v26 + v28[17]) = *(_QWORD *)((char *)v27 + v28[17]);
  *(_QWORD *)((char *)v26 + v28[18]) = *(_QWORD *)((char *)v27 + v28[18]);
  *(_QWORD *)((char *)v26 + v28[19]) = *(_QWORD *)((char *)v27 + v28[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
LABEL_29:
  v120 = v6[8];
  v121 = (char *)(a1 + v120);
  v122 = (char *)(a2 + v120);
  v123 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v124 = *(_QWORD *)(v123 - 8);
  v125 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
  v126 = v125(v121, 1, v123);
  v127 = v125(v122, 1, v123);
  if (!v126)
  {
    if (!v127)
    {
      v161(v121, v122, v4);
      v161(&v121[*(int *)(v123 + 20)], &v122[*(int *)(v123 + 20)], v4);
      v134 = *(int *)(v123 + 24);
      v135 = &v121[v134];
      v136 = &v122[v134];
      v137 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v162 + 48);
      v138 = v137(v135, 1, v4);
      v139 = v137(v136, 1, v4);
      if (v138)
      {
        if (!v139)
        {
          (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v135, v136, v4);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v135, 0, 1, v4);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v139)
        {
          v161(v135, v136, v4);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v162 + 8))(v135, v4);
      }
      v140 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      goto LABEL_44;
    }
    sub_10000E750((uint64_t)v121, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    goto LABEL_35;
  }
  if (v127)
  {
LABEL_35:
    v133 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    goto LABEL_44;
  }
  v128 = *(void (**)(char *, char *, uint64_t))(v162 + 32);
  v128(v121, v122, v4);
  v128(&v121[*(int *)(v123 + 20)], &v122[*(int *)(v123 + 20)], v4);
  v129 = *(int *)(v123 + 24);
  v130 = &v121[v129];
  v131 = &v122[v129];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v131, 1, v4))
  {
    v132 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    v128(v130, v131, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v130, 0, 1, v4);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
LABEL_44:
  v141 = v6[9];
  v142 = *(void **)(a1 + v141);
  *(_QWORD *)(a1 + v141) = *(_QWORD *)(a2 + v141);

  v143 = v6[10];
  v144 = (_QWORD *)(a1 + v143);
  v145 = (uint64_t *)(a2 + v143);
  v147 = *v145;
  v146 = v145[1];
  v148 = v144[1];
  *v144 = v147;
  v144[1] = v146;
  swift_bridgeObjectRelease(v148);
  return a1;
}

uint64_t sub_100020138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100020144);
}

uint64_t sub_100020144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100020180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002018C);
}

uint64_t sub_10002018C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecommendationsWidgetView(uint64_t a1)
{
  return sub_10001133C(a1, qword_1005486A8, (uint64_t)&nominal type descriptor for RecommendationsWidgetView);
}

uint64_t sub_1000201E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100020248(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048211C, 1);
}

uint64_t sub_100020258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v2 = v1;
  v46 = a1;
  v3 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for RedactionReasons(0);
  v45 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecommendationsWidgetContentView(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char **)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (char *)&v44 - v11;
  v13 = sub_10000B4C8(&qword_1005486E0);
  v48 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10000B4C8(&qword_1005486E8);
  __chkstk_darwin(v47);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = swift_getKeyPath(&unk_100425200);
  v18 = sub_10000B4C8(&qword_1005486F0);
  swift_storeEnumTagMultiPayload(v10, v18, 0);
  v19 = (_QWORD *)((char *)v10 + *(int *)(v7 + 20));
  *v19 = swift_getKeyPath(&unk_100425228);
  v20 = sub_10000B4C8(&qword_100547EE0);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  v21 = (_QWORD *)((char *)v10 + *(int *)(v7 + 24));
  *v21 = swift_getKeyPath(&unk_100425258);
  v22 = sub_10000B4C8(&qword_1005486F8);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  sub_10000DB44((uint64_t)v10, (uint64_t)v12, type metadata accessor for RecommendationsWidgetContentView);
  v23 = v2 + *(int *)(v3 + 20);
  if (qword_1005478A8 != -1)
    swift_once(&qword_1005478A8, sub_10006F20C);
  v24 = type metadata accessor for WidgetMusicRecommendation(0);
  v25 = sub_10000D78C(v24, (uint64_t)qword_100561390);
  v26 = sub_100079F04(v23, v25);
  v27 = v2;
  sub_10000D964(v2, (uint64_t)v5, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  if ((v26 & 1) != 0)
  {
    v28 = sub_10000E750((uint64_t)v5, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
    v29 = v2;
    v30 = v50;
  }
  else
  {
    v31 = *(_QWORD *)&v5[*(int *)(v3 + 40) + 8];
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v5, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
    v30 = v50;
    if (!v31)
    {
      v51 = _swiftEmptyArrayStorage;
      v40 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
      v41 = sub_10000B4C8(&qword_100548708);
      v42 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
      v43 = v44;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v41, v42, v30, v40);
      v32 = v43;
      v33 = v46;
      v29 = v27;
      goto LABEL_8;
    }
    v28 = swift_bridgeObjectRelease(v31);
    v29 = v27;
  }
  v32 = v44;
  static RedactionReasons.placeholder.getter(v28);
  v33 = v46;
LABEL_8:
  v34 = v45;
  v35 = sub_10001254C(&qword_100548718, type metadata accessor for RecommendationsWidgetContentView, (uint64_t)&unk_10042530C);
  View.redacted(reason:)(v32, v7, v35);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v30);
  sub_10000E750((uint64_t)v12, type metadata accessor for RecommendationsWidgetContentView);
  KeyPath = swift_getKeyPath(&unk_100425200);
  v37 = (uint64_t *)&v17[*(int *)(v47 + 36)];
  v38 = sub_10000B4C8(&qword_100548720);
  sub_10000D964(v29, (uint64_t)v37 + *(int *)(v38 + 28), type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  *v37 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v17, v15, v49);
  return sub_100011530((uint64_t)v17, v33, &qword_1005486E8);
}

uint64_t sub_1000206BC()
{
  unint64_t v0;

  v0 = sub_1000276AC();
  return EnvironmentValues.subscript.getter(&_s28RecommendationWidgetEntryKeyVN, &_s28RecommendationWidgetEntryKeyVN, v0);
}

uint64_t sub_1000206F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v10 - v6;
  sub_10000D964(a1, (uint64_t)&v10 - v6, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  sub_10000D964((uint64_t)v7, (uint64_t)v5, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v8 = sub_1000276AC();
  EnvironmentValues.subscript.setter(v5, &_s28RecommendationWidgetEntryKeyVN, &_s28RecommendationWidgetEntryKeyVN, v8);
  return sub_10000E750((uint64_t)v7, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
}

uint64_t type metadata accessor for RecommendationsWidgetContentView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100548798, (uint64_t)&nominal type descriptor for RecommendationsWidgetContentView);
}

uint64_t sub_1000207E4()
{
  unint64_t v0;

  v0 = sub_1000276AC();
  return EnvironmentValues.subscript.getter(&_s28RecommendationWidgetEntryKeyVN, &_s28RecommendationWidgetEntryKeyVN, v0);
}

uint64_t sub_100020828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v69 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v67 = *(_QWORD *)(v2 - 8);
  v68 = v2;
  __chkstk_darwin(v2);
  v66 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContainerBackgroundPlacement(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_1005487F8);
  __chkstk_darwin(v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100548800);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_100548808);
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  __chkstk_darwin(v13);
  v70 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10000B4C8(&qword_100548810);
  __chkstk_darwin(v61);
  v60 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WidgetFamily(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v59 = type metadata accessor for RecommendationsWidgetContentView(0);
  v23 = v1;
  sub_10003E98C((uint64_t)v22);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v24 == enum case for WidgetFamily.systemMedium(_:))
  {
    v25 = 8.0;
    v26 = 10.0;
    v27 = 2;
    v28 = 1;
  }
  else if (v24 == enum case for WidgetFamily.systemLarge(_:))
  {
    v25 = 16.0;
    v26 = 14.0;
    v28 = 1;
    v27 = 4;
  }
  else if (v24 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    v25 = 12.0;
    v26 = 20.0;
    v28 = 2;
    v27 = 4;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v27 = 0;
    v28 = 0;
    v26 = 0.0;
    v25 = 0.0;
  }
  v29 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v29);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v30 = sub_10000B4C8(&qword_100548818);
  v31 = sub_100020D3C(v23, v27, v28, (uint64_t)&v9[*(int *)(v30 + 44)], v26, v25);
  v32 = static Edge.Set.all.getter(v31);
  sub_100011370((uint64_t)v9, (uint64_t)v12, &qword_1005487F8);
  v33 = &v12[*(int *)(v10 + 36)];
  *v33 = v32;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v33 + 8) = _Q0;
  *(_OWORD *)(v33 + 24) = xmmword_100425150;
  v33[40] = 0;
  v39 = sub_100011694((uint64_t)v9, &qword_1005487F8);
  v40 = static ContainerBackgroundPlacement.widget.getter(v39);
  v41 = __chkstk_darwin(v40);
  v42 = static Alignment.center.getter(v41);
  v44 = v43;
  v45 = sub_10000B4C8(&qword_100548820);
  v46 = sub_100029DA8();
  v47 = sub_100029E2C();
  View.containerBackground<A>(for:alignment:content:)(v6, v42, v44, sub_100029DA0, &v59 - 4, v10, v45, v46, v47);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v6, v63);
  sub_100011694((uint64_t)v12, &qword_100548800);
  if ((sub_100021F88() & 1) != 0)
  {
    v49 = v66;
    v48 = v67;
    v50 = v68;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v67 + 104))(v66, enum case for ColorScheme.light(_:), v68);
  }
  else
  {
    v49 = v66;
    sub_10003E9D0(v66);
    v48 = v67;
    v50 = v68;
  }
  KeyPath = swift_getKeyPath(&unk_100425360);
  v52 = (uint64_t)v60;
  v53 = (uint64_t *)&v60[*(int *)(v61 + 36)];
  v54 = sub_10000B4C8(&qword_100548860);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))((char *)v53 + *(int *)(v54 + 28), v49, v50);
  *v53 = KeyPath;
  v56 = v64;
  v55 = v65;
  v57 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v52, v70, v65);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
  return sub_100011530(v52, v69, &qword_100548810);
}

uint64_t sub_100020D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];

  v94 = a3;
  v110 = a2;
  v105 = a4;
  v92 = type metadata accessor for WidgetFamily(0);
  v109 = *(_QWORD *)(v92 - 8);
  v9 = __chkstk_darwin(v92);
  v108 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v107 = (uint64_t)&v87 - v11;
  v98 = type metadata accessor for AccessibilityChildBehavior(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for RecommendationsWidgetContentView(0);
  v13 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v89 = v14;
  v93 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10000B4C8(&qword_100548878);
  __chkstk_darwin(v95);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_100548880);
  v102 = *(_QWORD *)(v17 - 8);
  v103 = v17;
  __chkstk_darwin(v17);
  v101 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000B4C8(&qword_100548888);
  v20 = __chkstk_darwin(v19);
  v106 = (uint64_t)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v100 = (uint64_t)&v87 - v23;
  __chkstk_darwin(v22);
  v104 = (uint64_t)&v87 - v24;
  v25 = type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v29 = __chkstk_darwin(v28);
  v90 = (uint64_t)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v32 = (char *)&v87 - v31;
  v33 = a1;
  sub_10003E9BC((uint64_t)&v87 - v31);
  v91 = v28;
  sub_10000D964((uint64_t)&v32[*(int *)(v28 + 20)], (uint64_t)v27, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750((uint64_t)v32, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v34 = (uint64_t *)&v27[*(int *)(v25 + 24)];
  v36 = *v34;
  v35 = v34[1];
  swift_bridgeObjectRetain();
  v37 = sub_10000E750((uint64_t)v27, type metadata accessor for WidgetMusicRecommendation);
  if (v35)
    goto LABEL_4;
  if (qword_100547880 != -1)
    goto LABEL_9;
  while (1)
  {
    v36 = qword_100561368;
    v35 = unk_100561370;
    v37 = swift_bridgeObjectRetain();
LABEL_4:
    v38 = v110;
    v39 = static Edge.Set.bottom.getter(v37);
    v40 = EdgeInsets.init(_all:)(a5);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    *(_QWORD *)v16 = static Alignment.center.getter(v47);
    *((_QWORD *)v16 + 1) = v48;
    *((_QWORD *)v16 + 2) = 0x4042000000000000;
    v16[24] = 0;
    *((double *)v16 + 4) = a6;
    v16[40] = 0;
    if ((v38 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_9:
    swift_once(&qword_100547880, sub_100060E3C);
  }
  v87 = &v16[*(int *)(sub_10000B4C8(&qword_100548890) + 44)];
  v112[0] = 0;
  v112[1] = v38;
  KeyPath = swift_getKeyPath(&unk_100425398);
  v110 = v35;
  v50 = KeyPath;
  v88 = v36;
  v51 = v33;
  v52 = v93;
  sub_10000D964(v51, v93, type metadata accessor for RecommendationsWidgetContentView);
  v53 = *(unsigned __int8 *)(v13 + 80);
  v54 = (v53 + 48) & ~v53;
  v55 = swift_allocObject(&unk_1004F9B50, v54 + v89, v53 | 7);
  LODWORD(v89) = v39;
  v56 = v55;
  v57 = v94;
  *(_QWORD *)(v55 + 16) = v38;
  *(_QWORD *)(v55 + 24) = v57;
  *(double *)(v55 + 32) = a5;
  *(double *)(v55 + 40) = a6;
  sub_10000DB44(v52, v55 + v54, type metadata accessor for RecommendationsWidgetContentView);
  v58 = sub_10000B4C8(&qword_100548898);
  v59 = sub_10000B4C8(&qword_1005488A0);
  v60 = sub_10002A3A4();
  v61 = v105;
  v62 = v92;
  v63 = v60;
  v64 = sub_100012324(&qword_1005488B8, &qword_1005488A0, (const char *)&protocol conformance descriptor for GridRow<A>);
  v65 = ForEach<>.init(_:id:content:)(v112, v50, sub_10002A350, v56, v58, v59, v63, &protocol witness table for Int, v64);
  v66 = v96;
  static AccessibilityChildBehavior.contain.getter(v65);
  v67 = sub_100012324(&qword_1005488C0, &qword_100548878, (const char *)&protocol conformance descriptor for Grid<A>);
  v68 = v101;
  View.accessibilityElement(children:)(v66, v95, v67);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v66, v98);
  sub_100011694((uint64_t)v16, &qword_100548878);
  v69 = v90;
  sub_10003E9BC(v90);
  v70 = (uint64_t *)(v69 + *(int *)(v91 + 40));
  v72 = *v70;
  v71 = v70[1];
  swift_bridgeObjectRetain();
  sub_10000E750(v69, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v73 = v107;
  sub_10003E98C(v107);
  v75 = v108;
  v74 = v109;
  (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v108, enum case for WidgetFamily.systemMedium(_:), v62);
  v76 = sub_10001254C(&qword_1005488C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  dispatch thunk of RawRepresentable.rawValue.getter(v112, v62, v76);
  dispatch thunk of RawRepresentable.rawValue.getter(&v111, v62, v76);
  v78 = v111;
  v77 = v112[0];
  v79 = *(void (**)(char *, uint64_t))(v74 + 8);
  v79(v75, v62);
  v79((char *)v73, v62);
  v80 = 16.0;
  if (v77 == v78)
    v80 = 0.0;
  v81 = v100;
  sub_10003D184(v72, v71, v100, v80, 16.0);
  swift_bridgeObjectRelease(v71);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v68, v103);
  v82 = v104;
  sub_100011530(v81, v104, &qword_100548888);
  v83 = v106;
  sub_100011370(v82, v106, &qword_100548888);
  v84 = v110;
  *(_QWORD *)v61 = v88;
  *(_QWORD *)(v61 + 8) = v84;
  *(_BYTE *)(v61 + 16) = v89;
  *(double *)(v61 + 24) = v40;
  *(_QWORD *)(v61 + 32) = v42;
  *(_QWORD *)(v61 + 40) = v44;
  *(_QWORD *)(v61 + 48) = v46;
  *(_BYTE *)(v61 + 56) = 0;
  v85 = sub_10000B4C8(&qword_1005488D0);
  sub_100011370(v83, v61 + *(int *)(v85 + 48), &qword_100548888);
  swift_bridgeObjectRetain();
  sub_100011694(v82, &qword_100548888);
  sub_100011694(v83, &qword_100548888);
  return swift_bridgeObjectRelease(v84);
}

uint64_t sub_1000214A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];

  v14 = type metadata accessor for RecommendationsWidgetContentView(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  result = __chkstk_darwin(v14);
  v18 = *a1;
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = 1;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10000B4C8(&qword_1005488A0);
    v27[0] = 0;
    v27[1] = a3;
    KeyPath = swift_getKeyPath(&unk_100425398);
    sub_10000D964(a4, (uint64_t)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecommendationsWidgetContentView);
    v20 = *(unsigned __int8 *)(v15 + 80);
    v21 = (v20 + 56) & ~v20;
    v22 = swift_allocObject(&unk_1004F9B78, v21 + v16, v20 | 7);
    *(_QWORD *)(v22 + 16) = v18;
    *(_QWORD *)(v22 + 24) = a2;
    *(_QWORD *)(v22 + 32) = a3;
    *(double *)(v22 + 40) = a6;
    *(double *)(v22 + 48) = a7;
    sub_10000DB44((uint64_t)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for RecommendationsWidgetContentView);
    v23 = sub_10000B4C8(&qword_100548898);
    v24 = sub_10000B4C8(&qword_1005488D8);
    v25 = sub_10002A3A4();
    v26 = sub_10002A894();
    return ForEach<>.init(_:id:content:)(v27, KeyPath, sub_10002A83C, v22, v23, v24, v25, &protocol witness table for Int, v26);
  }
  return result;
}

uint64_t sub_100021634@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t result;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  char *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;

  v58 = a5;
  v59 = a4;
  v62 = a2;
  v7 = sub_10000B4C8(&qword_100547A38);
  v8 = __chkstk_darwin(v7);
  v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v61 = (char *)&v51 - v10;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v52 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_1005488F0);
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  __chkstk_darwin(v14);
  v55 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_1005488D8);
  v17 = __chkstk_darwin(v16);
  v54 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v53 = (uint64_t)&v51 - v19;
  v20 = type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10000B4C8(&qword_100548310);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v27);
  v32 = (char *)&v51 - v31;
  v33 = a3 * *a1;
  if ((unsigned __int128)(a3 * (__int128)*a1) >> 64 != v33 >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  v34 = v62 + v33;
  if (__OFADD__(v62, v33))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(8, v34))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v62 = 8 - v34;
  sub_10003E9BC((uint64_t)v25);
  sub_10000D964((uint64_t)&v25[*(int *)(v23 + 20)], (uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750((uint64_t)v25, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v35 = *(_QWORD *)&v22[*(int *)(v20 + 32)];
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
  v36 = type metadata accessor for WidgetMusicItem(0);
  Array.subscript.getter(v34, v35, v36, (uint64_t)v32);
  swift_bridgeObjectRelease(v35);
  sub_100011370((uint64_t)v32, (uint64_t)v29, &qword_100548310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v29, 1, v36) == 1)
  {
    sub_100011694((uint64_t)v29, &qword_100548310);
    v37 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v61, 1, 1, v11);
    v38 = v60;
  }
  else
  {
    v39 = &v29[*(int *)(v36 + 28)];
    v37 = (uint64_t)v61;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v61, v39, v11);
    sub_10000E750((uint64_t)v29, type metadata accessor for WidgetMusicItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v37, 1, v11);
    v38 = v60;
    if (v40 != 1)
    {
      v41 = v52;
      v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(v52, v37, v11);
      goto LABEL_10;
    }
  }
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v38, 1, v11);
  if ((_DWORD)result != 1)
  {
    v41 = v52;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v52, v38, v11);
    v42 = sub_100011694(v37, &qword_100547A38);
LABEL_10:
    v43 = (double)v62;
    __chkstk_darwin(v42);
    *(&v51 - 2) = (uint64_t)v32;
    v44 = type metadata accessor for SongCellView(0);
    v45 = sub_10001254C(&qword_1005488F8, type metadata accessor for SongCellView, (uint64_t)&unk_100425478);
    v46 = v55;
    Link.init(destination:label:)(v41, sub_10002A930, &v51 - 4, v44, v45);
    v47 = sub_100012324(&qword_1005488E8, &qword_1005488F0, (const char *)&protocol conformance descriptor for Link<A>);
    v48 = (uint64_t)v54;
    v49 = v57;
    View.accessibility(sortPriority:)(v57, v47, v43);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v49);
    v50 = v53;
    sub_100011530(v48, v53, &qword_1005488D8);
    sub_100011530(v50, v58, &qword_1005488D8);
    return sub_100011694((uint64_t)v32, &qword_100548310);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_100021B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  sub_100011370(a1, a2, &qword_100548310);
  v3 = (int *)type metadata accessor for SongCellView(0);
  v4 = (_QWORD *)(a2 + v3[5]);
  *v4 = swift_getKeyPath(&unk_100425200);
  v5 = sub_10000B4C8(&qword_1005486F0);
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  v6 = (_QWORD *)(a2 + v3[6]);
  *v6 = swift_getKeyPath(&unk_100425228);
  v7 = sub_10000B4C8(&qword_100547EE0);
  swift_storeEnumTagMultiPayload(v6, v7, 0);
  v8 = (_QWORD *)(a2 + v3[7]);
  *v8 = swift_getKeyPath(&unk_1004253B0);
  v9 = sub_10000B4C8(&qword_100548900);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  v10 = (_QWORD *)(a2 + v3[8]);
  *v10 = swift_getKeyPath(&unk_1004253E0);
  v11 = sub_10000B4C8(&qword_100548908);
  return swift_storeEnumTagMultiPayload(v10, v11, 0);
}

uint64_t sub_100021C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[2];

  v25[0] = a1;
  v1 = sub_10000B4C8(&qword_100548870);
  __chkstk_darwin(v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100548848);
  __chkstk_darwin(v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100021F88() & 1) != 0
    && (sub_10003E9BC((uint64_t)v13),
        v14 = *(void **)&v13[*(int *)(v11 + 36)],
        v15 = v14,
        sub_10000E750((uint64_t)v13, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry),
        v14))
  {
    v16 = v15;
    v17 = Image.init(uiImage:)(v16);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    v18 = Image.resizable(capInsets:resizingMode:)(v7, v17, 0.0, 0.0, 0.0, 0.0);
    v19 = swift_release(v17);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v19);
    v25[1] = v18;
    View.accessibility(hidden:)(1, &type metadata for Image, &protocol witness table for Image);
    swift_release(v18);
    sub_100011370((uint64_t)v10, (uint64_t)v3, &qword_100548848);
    swift_storeEnumTagMultiPayload(v3, v1, 0);
    v20 = sub_100029E98();
    v21 = sub_100029F1C();
    _ConditionalContent<>.init(storage:)(v3, v8, &type metadata for LinearGradient, v20, v21);

    return sub_100011694((uint64_t)v10, &qword_100548848);
  }
  else
  {
    if (qword_1005477F0 != -1)
      swift_once(&qword_1005477F0, sub_100033E68);
    *(_QWORD *)v3 = xmmword_100561280;
    *(_OWORD *)(v3 + 8) = *(__int128 *)((char *)&xmmword_100561280 + 8);
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&algn_100561290[8];
    swift_storeEnumTagMultiPayload(v3, v1, 1);
    v23 = sub_100029E98();
    v24 = sub_100029F1C();
    swift_bridgeObjectRetain();
    return _ConditionalContent<>.init(storage:)(v3, v8, &type metadata for LinearGradient, v23, v24);
  }
}

uint64_t sub_100021F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v1 = type metadata accessor for EnvironmentValues(0);
  v71 = *(_QWORD *)(v1 - 8);
  v72 = v1;
  __chkstk_darwin(v1);
  v70 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v80);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_10000B4C8(&qword_1005486F0);
  __chkstk_darwin(v79);
  v74 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100548310);
  v7 = __chkstk_darwin(v6);
  v73 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v82 = (uint64_t)&v66 - v10;
  __chkstk_darwin(v9);
  v84 = (uint64_t)&v66 - v11;
  v83 = type metadata accessor for WidgetMusicItem(0);
  v86 = *(_QWORD *)(v83 - 8);
  v12 = __chkstk_darwin(v83);
  v69 = (uint64_t)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v85 = (uint64_t)&v66 - v14;
  v15 = type metadata accessor for WidgetFamily(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v66 - v20;
  v22 = type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v26 = __chkstk_darwin(v25);
  v76 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v29 = (char *)&v66 - v28;
  sub_10003E9BC((uint64_t)&v66 - v28);
  v78 = v25;
  sub_10000D964((uint64_t)&v29[*(int *)(v25 + 20)], (uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750((uint64_t)v29, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  v30 = *(_QWORD *)&v24[*(int *)(v22 + 32)];
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
  type metadata accessor for RecommendationsWidgetContentView(0);
  v81 = v0;
  sub_10003E98C((uint64_t)v21);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v31 == enum case for WidgetFamily.systemMedium(_:))
  {
    v32 = 2;
    v33 = v73;
    v34 = (uint64_t *)v74;
  }
  else
  {
    v35 = v19;
    v33 = v73;
    v34 = (uint64_t *)v74;
    if (v31 == enum case for WidgetFamily.systemLarge(_:))
    {
      v32 = 4;
    }
    else if (v31 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      v32 = 8;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v15);
      v32 = 0;
    }
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  result = sub_10006BA48(v32, v30);
  v77 = v40;
  v41 = v38 >> 1;
  if (v37 != v38 >> 1)
  {
    v43 = v37;
    v66 = result;
    *(_QWORD *)&v39 = 136315138;
    v68 = v39;
    v67 = (char *)&type metadata for Any + 8;
    v45 = v82;
    v44 = v83;
    v75 = v38 >> 1;
    while (1)
    {
      if (v43 >= v41)
      {
        __break(1u);
        return result;
      }
      v46 = v4;
      v48 = v85;
      v47 = v86;
      sub_10000D964(v77 + *(_QWORD *)(v86 + 72) * v43, v85, type metadata accessor for WidgetMusicItem);
      v49 = v84;
      sub_10000D964(v48, v84, type metadata accessor for WidgetMusicItem);
      v50 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56);
      v51 = v49;
      v50(v49, 0, 1, v44);
      sub_100011370(v81, (uint64_t)v34, &qword_1005486F0);
      if (swift_getEnumCaseMultiPayload(v34, v79) == 1)
      {
        v52 = (uint64_t)v33;
        v53 = v76;
        sub_10000DB44((uint64_t)v34, v76, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
        v4 = v46;
      }
      else
      {
        v54 = *v34;
        v55 = static os_log_type_t.fault.getter();
        v56 = static Log.runtimeIssuesLog.getter();
        if (os_log_type_enabled(v56, v55))
        {
          v57 = swift_slowAlloc(12, -1);
          v58 = swift_slowAlloc(32, -1);
          v87 = v58;
          *(_DWORD *)v57 = v68;
          *(_QWORD *)(v57 + 4) = sub_1000759E0(0x7972746E45, 0xE500000000000000, &v87);
          _os_log_impl((void *)&_mh_execute_header, v56, v55, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v57, 0xCu);
          swift_arrayDestroy(v58, 1, v67);
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v57, -1, -1);
        }

        v53 = v76;
        v4 = v46;
        v59 = v70;
        EnvironmentValues.init()();
        swift_getAtKeyPath(v59, v54);
        v60 = swift_release(v54);
        (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v59, v72, v60);
        v52 = (uint64_t)v73;
        v34 = (uint64_t *)v74;
        v45 = v82;
        v51 = v84;
      }
      sub_100011370(v53 + *(int *)(v78 + 28), v45, &qword_100548310);
      sub_10000E750(v53, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
      v61 = (uint64_t)&v4[*(int *)(v80 + 48)];
      sub_100011370(v51, (uint64_t)v4, &qword_100548310);
      sub_100011370(v45, v61, &qword_100548310);
      v62 = v51;
      v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
      v44 = v83;
      if (v63((uint64_t)v4, 1, v83) == 1)
      {
        sub_100011694(v45, &qword_100548310);
        sub_100011694(v62, &qword_100548310);
        v33 = (char *)v52;
        if (v63(v61, 1, v44) == 1)
        {
          sub_100011694((uint64_t)v4, &qword_100548310);
          sub_10000E750(v85, type metadata accessor for WidgetMusicItem);
LABEL_27:
          v42 = 1;
LABEL_28:
          result = v66;
          goto LABEL_29;
        }
      }
      else
      {
        v33 = (char *)v52;
        sub_100011370((uint64_t)v4, v52, &qword_100548310);
        if (v63(v61, 1, v44) != 1)
        {
          v64 = v69;
          sub_10000DB44(v61, v69, type metadata accessor for WidgetMusicItem);
          v65 = sub_100038B84(v52, v64);
          sub_10000E750(v64, type metadata accessor for WidgetMusicItem);
          v45 = v82;
          sub_100011694(v82, &qword_100548310);
          sub_100011694(v84, &qword_100548310);
          sub_10000E750(v52, type metadata accessor for WidgetMusicItem);
          sub_100011694((uint64_t)v4, &qword_100548310);
          result = sub_10000E750(v85, type metadata accessor for WidgetMusicItem);
          v44 = v83;
          if ((v65 & 1) != 0)
            goto LABEL_27;
          goto LABEL_13;
        }
        v45 = v82;
        sub_100011694(v82, &qword_100548310);
        sub_100011694(v84, &qword_100548310);
        sub_10000E750(v52, type metadata accessor for WidgetMusicItem);
        v44 = v83;
      }
      sub_100011694((uint64_t)v4, &qword_100548868);
      result = sub_10000E750(v85, type metadata accessor for WidgetMusicItem);
LABEL_13:
      ++v43;
      v41 = v75;
      if (v75 == v43)
      {
        v42 = 0;
        goto LABEL_28;
      }
    }
  }
  v42 = 0;
LABEL_29:
  swift_unknownObjectRelease(result);
  return v42;
}

uint64_t sub_100022788@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, char *);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(uint64_t, char *);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  void *v74;
  void *v75;
  char v76;
  char *v77;

  v68 = a3;
  v66 = sub_10000B4C8(&qword_100548BD0);
  v5 = __chkstk_darwin(v66);
  v69 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v67 = (uint64_t)&v59 - v7;
  v61 = sub_10000B4C8(&qword_100548A30);
  __chkstk_darwin(v61);
  v73 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_10000B4C8(&qword_100548BD8);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100548BE0);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  __chkstk_darwin(v11);
  v71 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10000B4C8(&qword_100548BE8);
  v63 = *(_QWORD *)(v65 - 8);
  v13 = __chkstk_darwin(v65);
  v64 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v62 = (char *)&v59 - v15;
  v74 = a1;
  v75 = a2;
  v16 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v17 = Text.init<A>(_:)(&v74, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v24 = static Font.headline.getter();
  v25 = Text.font(_:)(v24, v17, v19, v23, v21);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  swift_release(v24);
  sub_10001DA20(v17, v19, v23);
  swift_bridgeObjectRelease(v21);
  if (qword_1005477C0 != -1)
    swift_once(&qword_1005477C0, sub_100033964);
  v32 = v29 & 1;
  v33 = Text.foregroundColor(_:)(qword_100561230, v25, v27, v29 & 1, v31);
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  sub_10001DA20(v25, v27, v32);
  swift_bridgeObjectRelease(v31);
  v74 = (void *)v33;
  v75 = (void *)v35;
  v76 = v39;
  v77 = v37;
  View.widgetAccentable(_:)(1, &type metadata for Text, &protocol witness table for Text);
  sub_10001DA20(v33, v35, v39);
  swift_bridgeObjectRelease(v37);
  v74 = &type metadata for Text;
  v75 = &protocol witness table for Text;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v74, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  v42 = v71;
  v41 = (void *)v72;
  View.unredacted()(v72, OpaqueTypeConformance2);
  (*(void (**)(char *, void *))(v70 + 8))(v10, v41);
  v43 = enum case for DynamicTypeSize.xLarge(_:);
  v44 = type metadata accessor for DynamicTypeSize(0);
  v45 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v73, v43, v44);
  v46 = sub_10001254C(&qword_100548AA8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v45, v45, v44, v46) & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v74 = v41;
  v75 = (void *)OpaqueTypeConformance2;
  LOBYTE(OpaqueTypeConformance2) = 1;
  v47 = swift_getOpaqueTypeConformance2(&v74, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
  v48 = sub_100012324(&qword_100548B10, &qword_100548A30, (const char *)&protocol conformance descriptor for PartialRangeThrough<A>);
  v37 = v64;
  v49 = v60;
  View.dynamicTypeSize<A>(_:)(v45, v60, v61, v47, v48);
  sub_100011694(v45, &qword_100548A30);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v49);
  v24 = (uint64_t)v62;
  v39 = v63;
  v42 = (char *)v65;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v37, v65);
  if (qword_100547800 != -1)
LABEL_7:
    swift_once(&qword_100547800, sub_100034248);
  v50 = sub_10000D78C(v66, (uint64_t)qword_1005612C0);
  v51 = v67;
  sub_100011370(v50, v67, &qword_100548BD0);
  v52 = *(void (**)(char *, uint64_t, char *))(v39 + 16);
  v52(v37, v24, v42);
  v53 = v69;
  sub_100011370(v51, v69, &qword_100548BD0);
  v54 = v68;
  v52(v68, (uint64_t)v37, v42);
  v55 = sub_10000B4C8(&qword_100548BF0);
  v56 = &v54[*(int *)(v55 + 48)];
  *(_QWORD *)v56 = 0;
  v56[8] = OpaqueTypeConformance2;
  sub_100011370(v53, (uint64_t)&v54[*(int *)(v55 + 64)], &qword_100548BD0);
  sub_100011694(v51, &qword_100548BD0);
  v57 = *(void (**)(uint64_t, char *))(v39 + 8);
  v57(v24, v42);
  sub_100011694(v53, &qword_100548BD0);
  return ((uint64_t (*)(char *, char *))v57)(v37, v42);
}

uint64_t sub_100022CE0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100022CF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_10000B4C8(&qword_100548BC0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v1;
  v7 = *(void **)(v1 + 8);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v9 = sub_10000B4C8(&qword_100548BC8);
  v10 = sub_100022788(v8, v7, &v6[*(int *)(v9 + 44)]);
  v11 = static Alignment.center.getter(v10);
  sub_10003F0BC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, a1, 0.0, 1, 14.0, 0, v11, v12);
  return sub_100011694((uint64_t)v6, &qword_100548BC0);
}

uint64_t sub_100022DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t *v76;
  char v77;
  char *v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  Swift::Int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t KeyPath;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  id v125;
  double v126;
  double v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  unint64_t v151;
  int v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  double v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t *v214;
  unint64_t v215;
  uint64_t v216;
  Swift::Int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unsigned int (*v244)(uint64_t, uint64_t, uint64_t);
  char v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unsigned int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  ValueMetadata *v260;
  unint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  char *v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  char v278;
  double v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v308;
  unsigned int (*v309)(uint64_t, uint64_t, uint64_t);
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  _BOOL4 v331;
  uint64_t v332;
  char *v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t *v343;
  _BYTE *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t *v354;
  uint64_t *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  _QWORD *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  uint64_t v379;
  _QWORD v380[5];
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  BOOL v387;

  v367 = a2;
  v366 = sub_10000B4C8(&qword_1005489F8);
  __chkstk_darwin(v366);
  v349 = (uint64_t)&v308 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = type metadata accessor for PlaybackButton(0);
  v327 = *(_QWORD *)(v328 - 8);
  __chkstk_darwin(v328);
  v325 = (char *)&v308 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v338 = sub_10000B4C8(&qword_100548A00);
  v337 = *(_QWORD *)(v338 - 8);
  __chkstk_darwin(v338);
  v326 = (char *)&v308 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v335 = type metadata accessor for PlaybackButton.State(0);
  v324 = *(_QWORD *)(v335 - 8);
  v6 = __chkstk_darwin(v335);
  v323 = (char *)&v308 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v334 = (char *)&v308 - v8;
  v9 = sub_10000B4C8(&qword_100548350);
  v10 = __chkstk_darwin(v9);
  v322 = (uint64_t)&v308 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v333 = (char *)&v308 - v12;
  v13 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v13);
  v321 = (uint64_t)&v308 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v320 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v319 = *(_QWORD *)(v320 - 8);
  __chkstk_darwin(v320);
  v332 = (uint64_t)&v308 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v315);
  v316 = (uint64_t)&v308 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v317 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v17 = __chkstk_darwin(v317);
  v318 = (uint64_t)&v308 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v314 = (uint64_t)&v308 - v19;
  v20 = sub_10000B4C8(&qword_100548A08);
  v21 = __chkstk_darwin(v20);
  v348 = (uint64_t)&v308 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v336 = (uint64_t)&v308 - v23;
  v24 = sub_10000B4C8(&qword_100548A10);
  v25 = __chkstk_darwin(v24);
  v347 = (uint64_t)&v308 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v344 = (char *)&v308 - v28;
  __chkstk_darwin(v27);
  v360 = (uint64_t)&v308 - v29;
  v30 = sub_10000B4C8(&qword_100548A18);
  __chkstk_darwin(v30);
  v342 = (uint64_t)&v308 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v340 = sub_10000B4C8(&qword_100548A20);
  __chkstk_darwin(v340);
  v343 = (uint64_t *)((char *)&v308 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v341 = sub_10000B4C8(&qword_100548A28);
  __chkstk_darwin(v341);
  v359 = (uint64_t)&v308 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v339 = sub_10000B4C8(&qword_100548A30);
  __chkstk_darwin(v339);
  v378 = (uint64_t *)((char *)&v308 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_10000B4C8(&qword_100548A38);
  __chkstk_darwin(v35);
  v329 = (char *)&v308 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v373 = type metadata accessor for WidgetFamily(0);
  v372 = *(_QWORD *)(v373 - 8);
  v37 = __chkstk_darwin(v373);
  v357 = (uint64_t)&v308 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v356 = (uint64_t)&v308 - v39;
  v351 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v351);
  v354 = (uint64_t *)((char *)&v308 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v41);
  v353 = (char *)&v308 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_10000B4C8(&qword_100548A50);
  __chkstk_darwin(v350);
  v355 = (uint64_t *)((char *)&v308 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v352 = sub_10000B4C8(&qword_100548A58);
  __chkstk_darwin(v352);
  v379 = (uint64_t)&v308 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = sub_10000B4C8(&qword_100548A60);
  __chkstk_darwin(v374);
  v375 = (char *)&v308 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v376 = sub_10000B4C8(&qword_100548A68);
  __chkstk_darwin(v376);
  v377 = (uint64_t)&v308 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = sub_10000B4C8(&qword_100548A70);
  v345 = *(_QWORD *)(v346 - 8);
  __chkstk_darwin(v346);
  v370 = (uint64_t)&v308 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v361 = sub_10000B4C8(&qword_100548A78);
  __chkstk_darwin(v361);
  v364 = (uint64_t *)((char *)&v308 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = sub_10000B4C8(&qword_100548310);
  v50 = __chkstk_darwin(v49);
  v311 = (uint64_t)&v308 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __chkstk_darwin(v50);
  v313 = (uint64_t)&v308 - v53;
  v54 = __chkstk_darwin(v52);
  v330 = (uint64_t)&v308 - v55;
  __chkstk_darwin(v54);
  v57 = (char *)&v308 - v56;
  v58 = type metadata accessor for WidgetMusicItem(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = __chkstk_darwin(v58);
  v310 = (uint64_t)&v308 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v371 = (uint64_t *)((char *)&v308 - v62);
  v63 = sub_10000B4C8(&qword_100548A80);
  v64 = __chkstk_darwin(v63);
  v365 = (uint64_t)&v308 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  v368 = (char *)&v308 - v66;
  v67 = type metadata accessor for ArtworkView(0);
  __chkstk_darwin(v67);
  v69 = (char *)&v308 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_10000B4C8(&qword_100548A88);
  v71 = __chkstk_darwin(v70);
  v73 = (char *)&v308 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  v75 = (char *)&v308 - v74;
  sub_100011370(a1, (uint64_t)v69, &qword_100548310);
  v76 = Corner.small.unsafeMutableAddressor();
  v77 = *((_BYTE *)v76 + 16);
  v78 = &v69[*(int *)(v67 + 20)];
  *(_OWORD *)v78 = *(_OWORD *)v76;
  v78[16] = v77;
  LOBYTE(v67) = static Edge.Set.trailing.getter();
  v79 = EdgeInsets.init(_all:)(12.0);
  v81 = v80;
  v83 = v82;
  v85 = v84;
  sub_10000D964((uint64_t)v69, (uint64_t)v73, type metadata accessor for ArtworkView);
  v86 = &v73[*(int *)(v70 + 36)];
  *v86 = v67;
  *((double *)v86 + 1) = v79;
  *((_QWORD *)v86 + 2) = v81;
  *((_QWORD *)v86 + 3) = v83;
  *((_QWORD *)v86 + 4) = v85;
  v86[40] = 0;
  sub_10000E750((uint64_t)v69, type metadata accessor for ArtworkView);
  v363 = v73;
  v362 = v75;
  sub_100011530((uint64_t)v73, (uint64_t)v75, &qword_100548A88);
  v369 = a1;
  sub_100011370(a1, (uint64_t)v57, &qword_100548310);
  v312 = v59;
  v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v358 = v58;
  if (v87(v57, 1, v58) == 1)
  {
    sub_100011694((uint64_t)v57, &qword_100548310);
    v88 = v364;
    *v364 = 0;
    *((_BYTE *)v88 + 8) = 1;
    swift_storeEnumTagMultiPayload(v88, v361, 1);
    v89 = sub_100012324(&qword_100548A90, &qword_1005489F8, (const char *)&protocol conformance descriptor for TupleView<A>);
    v90 = (uint64_t)v368;
    _ConditionalContent<>.init(storage:)(v88, v366, &type metadata for Spacer, v89, &protocol witness table for Spacer);
    goto LABEL_44;
  }
  v91 = v371;
  sub_10000DB44((uint64_t)v57, (uint64_t)v371, type metadata accessor for WidgetMusicItem);
  v92 = v91[5];
  v93 = v91;
  v309 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v87;
  if (v92)
  {
    if ((v92 & 0x2000000000000000) != 0)
      v94 = HIBYTE(v92) & 0xF;
    else
      v94 = v91[4] & 0xFFFFFFFFFFFFLL;
    v331 = v94 != 0;
  }
  else
  {
    v331 = 0;
  }
  v95 = *v91;
  v96 = v93[1];
  v97 = sub_10004F9D0((uint64_t)&off_1004F8D30);
  swift_bridgeObjectRetain();
  v98 = Text.init(optional:options:)(v95, v96, v97);
  v100 = v99;
  v102 = v101;
  v104 = v103;
  v105 = enum case for Text.Case.uppercase(_:);
  v106 = type metadata accessor for Text.Case(0);
  v107 = *(_QWORD *)(v106 - 8);
  v108 = (uint64_t)v353;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v353, v105, v106);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v108, 0, 1, v106);
  KeyPath = swift_getKeyPath(&unk_1004254C8);
  v110 = v354;
  sub_100011370(v108, (uint64_t)v354 + *(int *)(v351 + 28), &qword_100548A48);
  *v110 = KeyPath;
  v111 = v355;
  sub_100011370((uint64_t)v110, (uint64_t)v355 + *(int *)(v350 + 36), &qword_100548A40);
  *v111 = v98;
  v111[1] = v100;
  v111[2] = v102;
  v111[3] = v104;
  sub_10002EB70(v98, v100, v102, v104);
  sub_100011694((uint64_t)v110, &qword_100548A40);
  sub_100011694(v108, &qword_100548A48);
  sub_10002EBB0(v98, v100, v102, v104);
  v112 = swift_getKeyPath(&unk_1004254F8);
  v113 = v379;
  sub_100011370((uint64_t)v111, v379, &qword_100548A50);
  v114 = v113 + *(int *)(v352 + 36);
  *(_QWORD *)v114 = v112;
  *(_QWORD *)(v114 + 8) = 1;
  *(_BYTE *)(v114 + 16) = 0;
  sub_100011694((uint64_t)v111, &qword_100548A50);
  v115 = type metadata accessor for SongCellView(0);
  v116 = v356;
  sub_10003E98C(v356);
  v117 = v372;
  v118 = v357;
  v119 = v373;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v372 + 104))(v357, enum case for WidgetFamily.systemMedium(_:), v373);
  v120 = sub_10001254C(&qword_1005488C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  dispatch thunk of RawRepresentable.rawValue.getter(&v381, v119, v120);
  dispatch thunk of RawRepresentable.rawValue.getter(v380, v119, v120);
  v121 = v381;
  v122 = v380[0];
  v123 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
  v123(v118, v119);
  v124 = ((uint64_t (*)(uint64_t, uint64_t))v123)(v116, v119);
  if (v121 == v122)
  {
    v125 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleCaption2);
    objc_msgSend(v125, "scaledValueForValue:", 10.0);
    v127 = v126;

    v129 = static Font.Weight.semibold.getter(v128);
    v130 = type metadata accessor for Font.Design(0);
    v131 = (uint64_t)v329;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v329, 1, 1, v130);
    v132 = static Font.system(size:weight:design:)(*(_QWORD *)&v129, 0, v131, v127);
    sub_100011694(v131, &qword_100548A38);
  }
  else
  {
    v133 = static Font.caption2.getter(v124);
    v132 = Font.bold()();
    swift_release(v133);
  }
  v134 = (uint64_t)v378;
  v135 = v377;
  v136 = v376;
  v137 = (uint64_t)v375;
  v138 = swift_getKeyPath(&unk_100425528);
  v139 = v379;
  sub_100011370(v379, v137, &qword_100548A58);
  v140 = (uint64_t *)(v137 + *(int *)(v374 + 36));
  *v140 = v138;
  v140[1] = v132;
  sub_100011694(v139, &qword_100548A58);
  if (qword_1005477D8 != -1)
    swift_once(&qword_1005477D8, sub_100033C14);
  v141 = sub_10000B4C8(&qword_100548AA0);
  v142 = sub_10000D78C(v141, (uint64_t)qword_100561258);
  sub_100011370(v142, v135 + *(int *)(v136 + 36), &qword_100548AA0);
  sub_100011530(v137, v135, &qword_100548A60);
  v143 = enum case for DynamicTypeSize.xLarge(_:);
  v144 = type metadata accessor for DynamicTypeSize(0);
  v145 = &type metadata accessor for DynamicTypeSize;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 104))(v134, v143, v144);
  v146 = sub_10001254C(&qword_100548AA8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v134, v134, v144, v146) & 1) != 0)
  {
    v147 = sub_10002EBF0();
    v148 = sub_100012324(&qword_100548B10, &qword_100548A30, (const char *)&protocol conformance descriptor for PartialRangeThrough<A>);
    View.dynamicTypeSize<A>(_:)(v134, v136, v339, v147, v148);
    sub_100011694(v134, &qword_100548A30);
    sub_100011694(v135, &qword_100548A68);
    v149 = v371;
    v150 = v371[3];
    v381 = v371[2];
    v382 = v150;
    v151 = sub_10001D9DC();
    swift_bridgeObjectRetain();
    v356 = Text.init<A>(_:)(&v381, &type metadata for String, v151);
    v355 = (uint64_t *)v154;
    v155 = v153;
    v156 = *(uint64_t *)((char *)v149 + *(int *)(v358 + 56));
    v157 = *(_QWORD *)(v156 + 16);
    v354 = (uint64_t *)v115;
    v357 = v142;
    if (v157)
    {
      LODWORD(v352) = v152;
      v353 = v153;
      v158 = qword_100547850;
      swift_bridgeObjectRetain_n(v156, 2);
      if (v158 != -1)
        swift_once(&qword_100547850, sub_100038244);
      v159 = 0;
      v160 = 0;
      LODWORD(v379) = 0;
      v161 = 0xE000000000000000;
      v162 = _swiftEmptyArrayStorage;
      v373 = v156;
      v372 = v157;
      do
      {
        v377 = v161;
        v376 = v160;
        v378 = v162;
        v163 = v156 + v159++;
        TextBadge.view(favoriteBadgeConfiguration:)(qword_100549010, *(_BYTE *)(v163 + 32));
        v165 = v164;
        v167 = v166;
        v169 = v168;
        v171 = v170 & 1;
        v172 = static Font.subheadline.getter(v164);
        v173 = static Font.Weight.semibold.getter(v172);
        v174 = Font.weight(_:)(v172, v173);
        swift_release(v172);
        v175 = Text.font(_:)(v174, v165, v167, v171, v169);
        v177 = v176;
        v179 = v178;
        v181 = v180;
        swift_release(v174);
        v182 = v179 & 1;
        sub_10001DA20(v165, v167, v171);
        swift_bridgeObjectRelease(v169);
        LOBYTE(v171) = v379 & 1;
        v183 = v376;
        v184 = v377;
        v185 = (uint64_t)v378;
        v375 = (char *)static Text.+ infix(_:_:)(v376, v377, v379 & 1, v378, v175, v177, v182, v181);
        v374 = v186;
        v162 = v187;
        LODWORD(v379) = v188 & 1;
        v189 = v175;
        v190 = v372;
        v191 = v182;
        v156 = v373;
        sub_10001DA20(v189, v177, v191);
        swift_bridgeObjectRelease(v181);
        v192 = v183;
        v193 = v184;
        v160 = (uint64_t)v375;
        v161 = v374;
        sub_10001DA20(v192, v193, v171);
        swift_bridgeObjectRelease(v185);
      }
      while (v190 != v159);
      swift_bridgeObjectRelease_n(v156, 2);
      v155 = v353;
      LOBYTE(v152) = v352;
    }
    else
    {
      v160 = 0;
      LODWORD(v379) = 0;
      v162 = _swiftEmptyArrayStorage;
      v161 = 0xE000000000000000;
    }
    v194 = v152 & 1;
    v115 = v356;
    v195 = (uint64_t)v355;
    v196 = v379;
    v197 = static Text.+ infix(_:_:)(v356, v355, v152 & 1, v155, v160, v161, v379, v162);
    v198 = v196;
    v200 = v199;
    v378 = (_QWORD *)v201;
    v203 = v202 & 1;
    sub_10001DA20(v160, v161, v198);
    swift_bridgeObjectRelease(v162);
    sub_10001DA20(v115, v195, v194);
    swift_bridgeObjectRelease(v155);
    v204 = sub_100024D70();
    static Font.Weight.medium.getter();
    v206 = Font.weight(_:)(v204, v205);
    swift_release(v204);
    v207 = (uint64_t)v378;
    v145 = (void *)Text.font(_:)(v206, v197, v200, v203, v378);
    v108 = v208;
    LOBYTE(v115) = v209;
    v142 = v210;
    swift_release(v206);
    sub_10001DA20(v197, v200, v203);
    swift_bridgeObjectRelease(v207);
    if (qword_1005477D0 == -1)
      goto LABEL_23;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1005477D0, sub_100033BF8);
LABEL_23:
  v378 = (_QWORD *)Text.foregroundColor(_:)(qword_100561250, v145, v108, v115 & 1, v142);
  v377 = v211;
  LODWORD(v376) = v212;
  v379 = v213;
  sub_10001DA20((uint64_t)v145, v108, v115 & 1);
  swift_bridgeObjectRelease(v142);
  v374 = v331;
  v375 = (char *)swift_getKeyPath(&unk_1004254F8);
  v214 = v371;
  v216 = v371[4];
  v215 = v371[5];
  v217 = sub_10004F9D0((uint64_t)&off_1004F8D58);
  swift_bridgeObjectRetain();
  v218 = Text.init(optional:options:)(v216, v215, v217);
  v220 = v219;
  v222 = v221;
  v373 = v223;
  v224 = sub_100024D70();
  v225 = swift_getKeyPath(&unk_100425528);
  v226 = v342;
  sub_100011370(v357, v342, &qword_100548AA0);
  v227 = v343;
  sub_100011370(v226, (uint64_t)v343 + *(int *)(v340 + 36), &qword_100548A18);
  *v227 = v218;
  v227[1] = v220;
  v228 = v373;
  v227[2] = v222;
  v227[3] = v228;
  v227[4] = v225;
  v227[5] = v224;
  sub_100011694(v226, &qword_100548A18);
  v229 = swift_getKeyPath(&unk_1004254F8);
  v230 = v359;
  sub_100011370((uint64_t)v227, v359, &qword_100548A20);
  v231 = v230 + *(int *)(v341 + 36);
  *(_QWORD *)v231 = v229;
  *(_QWORD *)(v231 + 8) = 1;
  *(_BYTE *)(v231 + 16) = 0;
  v232 = sub_100011694((uint64_t)v227, &qword_100548A20);
  v233 = static Axis.Set.vertical.getter(v232);
  v381 = (uint64_t)v378;
  v382 = v377;
  v383 = v376 & 1;
  v384 = v379;
  v385 = v375;
  v386 = v374;
  v387 = !v331;
  v234 = (uint64_t)v344;
  *v344 = v233;
  v235 = sub_10000B4C8(&qword_100548B18);
  sub_100025168((uint64_t)v214, v370, (uint64_t)&v381, v230, v234 + *(int *)(v235 + 44));
  sub_100011530(v234, v360, &qword_100548A10);
  v236 = v358;
  if ((*((_BYTE *)v214 + *(int *)(v358 + 60)) & 1) != 0)
  {
    v237 = v330;
    sub_10000D964((uint64_t)v214, v330, type metadata accessor for WidgetMusicItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v312 + 56))(v237, 0, 1, v236);
    v238 = v314;
    sub_10003E9BC(v314);
    v239 = v317;
    v240 = &qword_100548310;
    v241 = v313;
    sub_100011370(v238 + *(int *)(v317 + 28), v313, &qword_100548310);
    sub_10000E750(v238, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
    v242 = v316;
    v243 = v316 + *(int *)(v315 + 48);
    sub_100011370(v237, v316, &qword_100548310);
    sub_100011370(v241, v243, &qword_100548310);
    v244 = v309;
    if (v309(v242, 1, v236) == 1)
    {
      sub_100011694(v241, &qword_100548310);
      sub_100011694(v237, &qword_100548310);
      if (v244(v243, 1, v236) == 1)
      {
        v245 = -1;
      }
      else
      {
        v240 = &qword_100548868;
        v245 = 0;
      }
      v246 = v335;
      v247 = v334;
      v248 = v320;
    }
    else
    {
      v250 = v311;
      sub_100011370(v242, v311, &qword_100548310);
      v251 = v244(v243, 1, v236);
      v247 = v334;
      if (v251 == 1)
      {
        sub_100011694(v241, &qword_100548310);
        sub_100011694(v237, &qword_100548310);
        sub_10000E750(v250, type metadata accessor for WidgetMusicItem);
        v245 = 0;
        v240 = &qword_100548868;
      }
      else
      {
        v252 = v310;
        sub_10000DB44(v243, v310, type metadata accessor for WidgetMusicItem);
        v245 = sub_100038B84(v250, v252);
        sub_10000E750(v252, type metadata accessor for WidgetMusicItem);
        v253 = v241;
        v254 = v250;
        v240 = &qword_100548310;
        sub_100011694(v253, &qword_100548310);
        sub_100011694(v330, &qword_100548310);
        sub_10000E750(v254, type metadata accessor for WidgetMusicItem);
      }
      v248 = v320;
      v246 = v335;
    }
    sub_100011694(v242, v240);
    v255 = v318;
    sub_10003E9BC(v318);
    v256 = v321;
    sub_100011370(v255 + *(int *)(v239 + 32), v321, &qword_1005482D8);
    sub_10000E750(v255, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v319 + 48))(v256, 1, v248) == 1)
    {
      v257 = v332;
      v258 = v324;
      if (qword_100547798 != -1)
        swift_once(&qword_100547798, sub_100014474);
      v259 = sub_10000D78C(v248, (uint64_t)qword_1005611E8);
      sub_10000D964(v259, v257, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      sub_100011694(v256, &qword_1005482D8);
    }
    else
    {
      sub_10000DB44(v256, v332, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      v258 = v324;
    }
    sub_1000145C8(v333);
    if ((v245 & 1) != 0)
    {
      sub_100026074();
      v260 = &type metadata for TogglePlaybackAppIntent;
      v261 = sub_10002EEA0();
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v258 + 104))(v247, enum case for PlaybackButton.State.unplayed(_:), v246);
      v262 = (uint64_t *)((char *)v214 + *(int *)(v236 + 40));
      v263 = *v262;
      v264 = v262[1];
      swift_bridgeObjectRetain();
      v265 = sub_100030084(v263, v264, 0, 0);
      v267 = v266;
      v261 = sub_10002EE5C();
      v380[0] = v265;
      v380[1] = v267;
      v260 = &type metadata for StartPlaybackAppIntent;
    }
    v380[3] = v260;
    v380[4] = v261;
    v268 = sub_10000D900(v380, (uint64_t)v260);
    v269 = v333;
    v270 = v322;
    sub_100011370((uint64_t)v333, v322, &qword_100548350);
    v271 = v323;
    v272 = (*(uint64_t (**)(char *, char *, uint64_t))(v258 + 16))(v323, v247, v246);
    __chkstk_darwin(v272);
    v274 = (char *)&v308 - ((v273 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, ValueMetadata *))(v275 + 16))(v274, v268, v260);
    v276 = v325;
    v277 = PlaybackButton.init<A>(interval:state:intent:playSystemImage:pauseSystemImage:)(v270, v271, v274, 0, 0, 0, 0, v260, v261);
    v278 = static Edge.Set.leading.getter(v277);
    v279 = EdgeInsets.init(_all:)(12.0);
    v281 = v280;
    v283 = v282;
    v285 = v284;
    v286 = v327;
    v287 = v326;
    v288 = v328;
    (*(void (**)(char *, char *, uint64_t))(v327 + 16))(v326, v276, v328);
    v289 = v338;
    v290 = &v287[*(int *)(v338 + 36)];
    *v290 = v278;
    *((double *)v290 + 1) = v279;
    *((_QWORD *)v290 + 2) = v281;
    *((_QWORD *)v290 + 3) = v283;
    *((_QWORD *)v290 + 4) = v285;
    v290[40] = 0;
    (*(void (**)(char *, uint64_t))(v286 + 8))(v276, v288);
    (*(void (**)(char *, uint64_t))(v258 + 8))(v334, v335);
    sub_100011694((uint64_t)v269, &qword_100548350);
    sub_10000E750(v332, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    v291 = (uint64_t)v287;
    v249 = v336;
    sub_100011530(v291, v336, &qword_100548A00);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v337 + 56))(v249, 0, 1, v289);
    sub_100011758(v380);
  }
  else
  {
    v249 = v336;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v337 + 56))(v336, 1, 1, v338);
  }
  v292 = v366;
  v293 = (uint64_t)v364;
  v294 = v361;
  v295 = v360;
  v296 = v347;
  sub_100011370(v360, v347, &qword_100548A10);
  v297 = v348;
  sub_100011370(v249, v348, &qword_100548A08);
  v298 = v349;
  sub_100011370(v296, v349, &qword_100548A10);
  v299 = sub_10000B4C8(&qword_100548B20);
  v300 = v298 + *(int *)(v299 + 48);
  *(_QWORD *)v300 = 0;
  *(_BYTE *)(v300 + 8) = 0;
  sub_100011370(v297, v298 + *(int *)(v299 + 64), &qword_100548A08);
  sub_100011694(v297, &qword_100548A08);
  sub_100011694(v296, &qword_100548A10);
  sub_100011370(v298, v293, &qword_1005489F8);
  swift_storeEnumTagMultiPayload(v293, v294, 0);
  v301 = sub_100012324(&qword_100548A90, &qword_1005489F8, (const char *)&protocol conformance descriptor for TupleView<A>);
  v90 = (uint64_t)v368;
  _ConditionalContent<>.init(storage:)(v293, v292, &type metadata for Spacer, v301, &protocol witness table for Spacer);
  sub_10001DA20((uint64_t)v378, v377, v376 & 1);
  swift_release(v375);
  swift_bridgeObjectRelease(v379);
  sub_100011694(v298, &qword_1005489F8);
  sub_100011694(v249, &qword_100548A08);
  sub_100011694(v295, &qword_100548A10);
  sub_100011694(v359, &qword_100548A28);
  (*(void (**)(uint64_t, uint64_t))(v345 + 8))(v370, v346);
  sub_10000E750((uint64_t)v371, type metadata accessor for WidgetMusicItem);
LABEL_44:
  v302 = (uint64_t)v362;
  v303 = (uint64_t)v363;
  sub_100011370((uint64_t)v362, (uint64_t)v363, &qword_100548A88);
  v304 = v365;
  sub_100011370(v90, v365, &qword_100548A80);
  v305 = v367;
  sub_100011370(v303, v367, &qword_100548A88);
  v306 = sub_10000B4C8(&qword_100548A98);
  sub_100011370(v304, v305 + *(int *)(v306 + 48), &qword_100548A80);
  sub_100011694(v90, &qword_100548A80);
  sub_100011694(v302, &qword_100548A88);
  sub_100011694(v304, &qword_100548A80);
  return sub_100011694(v303, &qword_100548A88);
}

uint64_t sub_100024D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _BOOL4 v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v42 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v41 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v40 = (uint64_t)&v40 - v5;
  v6 = type metadata accessor for Font.Leading(0);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WidgetFamily(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100548310);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v40 - v16;
  sub_100011370(v1, (uint64_t)&v40 - v16, &qword_100548310);
  v18 = type metadata accessor for WidgetMusicItem(0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  if (v19(v17, 1, v18) == 1)
  {
    sub_100011694((uint64_t)v17, &qword_100548310);
    LODWORD(v20) = 0;
  }
  else
  {
    v20 = *((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v17, type metadata accessor for WidgetMusicItem);
    if (v20)
    {
      swift_bridgeObjectRelease(v20);
      LODWORD(v20) = 1;
    }
  }
  sub_100011370(v1, (uint64_t)v15, &qword_100548310);
  if (v19(v15, 1, v18) == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100548310);
    v21 = 0;
  }
  else
  {
    v22 = sub_10003638C();
    sub_10000E750((uint64_t)v15, type metadata accessor for WidgetMusicItem);
    v23 = v22[2];
    swift_bridgeObjectRelease(v22);
    v21 = v23 != 0;
  }
  type metadata accessor for SongCellView(0);
  sub_10003E98C((uint64_t)v11);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if ((_DWORD)v24 != enum case for WidgetFamily.systemMedium(_:))
  {
    if ((_DWORD)v24 == enum case for WidgetFamily.systemLarge(_:))
    {
      v26 = v40;
      sub_10003EC38(v40);
      v28 = v41;
      v27 = v42;
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, enum case for DynamicTypeSize.xLarge(_:), v2);
      v29 = sub_10001254C(&qword_100548BB8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
      v30 = dispatch thunk of static Comparable.< infix(_:_:)(v28, v26, v2, v29);
      v31 = *(void (**)(char *, uint64_t))(v27 + 8);
      v31(v28, v2);
      v24 = ((uint64_t (*)(uint64_t, uint64_t))v31)(v26, v2);
      if ((v30 & 1) == 0 || !(v20 | v21))
        return static Font.subheadline.getter(v24);
    }
    else
    {
      if ((_DWORD)v24 != enum case for WidgetFamily.systemExtraLarge(_:))
      {
        v36 = ((uint64_t (*)(void))static Font.subheadline.getter)();
        (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v38);
        return v36;
      }
      if ((v20 | v21) != 1)
        return static Font.subheadline.getter(v24);
    }
    v25 = static Font.footnote.getter(v24);
    goto LABEL_15;
  }
  if ((v20 | v21) != 1)
    return static Font.subheadline.getter(v24);
  v25 = static Font.caption.getter();
LABEL_15:
  v32 = v25;
  v34 = v43;
  v33 = v44;
  v35 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for Font.Leading.tight(_:), v45);
  v36 = Font.leading(_:)(v34, v32);
  v37 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v34, v35, v37);
  return v36;
}

uint64_t sub_100025168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v9 = sub_10000B4C8(&qword_100548B38);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v35 - v13;
  v15 = sub_10000B4C8(&qword_100548B40);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v35 - v19;
  v21 = sub_10000B4C8(&qword_100548B48);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v35 - v26;
  *(_QWORD *)v27 = static HorizontalAlignment.leading.getter(v25);
  *((_QWORD *)v27 + 1) = 0;
  v27[16] = 0;
  v28 = sub_10000B4C8(&qword_100548B50);
  v29 = sub_100025428(a1, v36, a3, a4, (uint64_t)&v27[*(int *)(v28 + 44)]);
  *(_QWORD *)v20 = static HorizontalAlignment.leading.getter(v29);
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  v30 = sub_10000B4C8(&qword_100548B58);
  v31 = sub_100025AAC(a1, a3, a4, (uint64_t)&v20[*(int *)(v30 + 44)]);
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v31);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v32 = sub_10000B4C8(&qword_100548B60);
  sub_100025E34(a3, (uint64_t)&v14[*(int *)(v32 + 44)]);
  sub_100011370((uint64_t)v27, (uint64_t)v24, &qword_100548B48);
  sub_100011370((uint64_t)v20, (uint64_t)v18, &qword_100548B40);
  sub_100011370((uint64_t)v14, (uint64_t)v12, &qword_100548B38);
  sub_100011370((uint64_t)v24, a5, &qword_100548B48);
  v33 = sub_10000B4C8(&qword_100548B68);
  sub_100011370((uint64_t)v18, a5 + *(int *)(v33 + 48), &qword_100548B40);
  sub_100011370((uint64_t)v12, a5 + *(int *)(v33 + 64), &qword_100548B38);
  sub_100011694((uint64_t)v14, &qword_100548B38);
  sub_100011694((uint64_t)v20, &qword_100548B40);
  sub_100011694((uint64_t)v27, &qword_100548B48);
  sub_100011694((uint64_t)v12, &qword_100548B38);
  sub_100011694((uint64_t)v18, &qword_100548B40);
  return sub_100011694((uint64_t)v24, &qword_100548B48);
}

uint64_t sub_100025428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v71 = a4;
  v72 = a2;
  v75 = a3;
  v78 = a5;
  v6 = sub_10000B4C8(&qword_100548B80);
  v7 = __chkstk_darwin(v6);
  v79 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v77 = (uint64_t)&v70 - v9;
  v74 = type metadata accessor for FriendsBadgesView(0);
  v10 = __chkstk_darwin(v74);
  v12 = (uint64_t *)((char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v14 = (char *)&v70 - v13;
  v15 = sub_10000B4C8(&qword_100548B90);
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100548A70);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000B4C8(&qword_100548B98);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v27 = (char *)&v70 - v26;
  v28 = *(_QWORD *)(a1 + 8);
  v76 = a1;
  if (v28)
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v29(v21, v72, v18);
    v29(v17, (uint64_t)v21, v18);
    swift_storeEnumTagMultiPayload(v17, v15, 0);
    v30 = sub_100011650(&qword_100548A68);
    v31 = sub_100011650(&qword_100548A30);
    v32 = sub_10002EBF0();
    v33 = sub_100012324(&qword_100548B10, &qword_100548A30, (const char *)&protocol conformance descriptor for PartialRangeThrough<A>);
    v80 = v30;
    v81 = v31;
    v82 = v32;
    v83 = v33;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v35 = sub_10001254C(&qword_100548BA0, type metadata accessor for FriendsBadgesView, (uint64_t)&unk_100425574);
    _ConditionalContent<>.init(storage:)(v17, v18, v74, OpaqueTypeConformance2, v35);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v36 = sub_10000B4C8(&qword_100548BA8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v25, 0, 1, v36);
    sub_100011530((uint64_t)v25, (uint64_t)v27, &qword_100548B98);
    v37 = (uint64_t)v27;
  }
  else
  {
    v38 = (uint64_t)v14;
    v72 = v18;
    v39 = v74;
    v40 = sub_10003638C();
    v41 = v40[2];
    swift_bridgeObjectRelease(v40);
    if (v41)
    {
      *v12 = sub_10003638C();
      v42 = (_QWORD *)((char *)v12 + *(int *)(v39 + 20));
      *v42 = swift_getKeyPath(&unk_100425228);
      v43 = sub_10000B4C8(&qword_100547EE0);
      swift_storeEnumTagMultiPayload(v42, v43, 0);
      v44 = v38;
      sub_10000DB44((uint64_t)v12, v38, type metadata accessor for FriendsBadgesView);
      sub_10000D964(v38, (uint64_t)v17, type metadata accessor for FriendsBadgesView);
      swift_storeEnumTagMultiPayload(v17, v15, 1);
      v45 = sub_100011650(&qword_100548A68);
      v46 = sub_100011650(&qword_100548A30);
      v47 = sub_10002EBF0();
      v48 = sub_100012324(&qword_100548B10, &qword_100548A30, (const char *)&protocol conformance descriptor for PartialRangeThrough<A>);
      v80 = v45;
      v81 = v46;
      v82 = v47;
      v83 = v48;
      v49 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
      v50 = sub_10001254C(&qword_100548BA0, type metadata accessor for FriendsBadgesView, (uint64_t)&unk_100425574);
      _ConditionalContent<>.init(storage:)(v17, v72, v39, v49, v50);
      sub_10000E750(v44, type metadata accessor for FriendsBadgesView);
      v51 = sub_10000B4C8(&qword_100548BA8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v25, 0, 1, v51);
      v37 = (uint64_t)v27;
      sub_100011530((uint64_t)v25, (uint64_t)v27, &qword_100548B98);
    }
    else
    {
      v52 = sub_10000B4C8(&qword_100548BA8);
      v37 = (uint64_t)v27;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v27, 1, 1, v52);
    }
  }
  v53 = *(_QWORD *)v75;
  v54 = *(_QWORD *)(v75 + 8);
  v55 = *(_BYTE *)(v75 + 16);
  v56 = *(_QWORD *)(v75 + 24);
  v57 = *(_QWORD *)(v75 + 32);
  v74 = *(_QWORD *)(v75 + 40);
  LODWORD(v75) = *(unsigned __int8 *)(v75 + 48);
  v58 = v77;
  v59 = *(_QWORD *)(v76 + 40);
  if (v59
    && ((v59 & 0x2000000000000000) != 0 ? (v60 = HIBYTE(v59) & 0xF) : (v60 = *(_QWORD *)(v76 + 32) & 0xFFFFFFFFFFFFLL),
        v60))
  {
    sub_100011370(v71, v77, &qword_100548A28);
    v61 = sub_10000B4C8(&qword_100548A28);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v58, 0, 1, v61);
  }
  else
  {
    v62 = sub_10000B4C8(&qword_100548A28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v58, 1, 1, v62);
  }
  sub_100011370(v37, (uint64_t)v25, &qword_100548B98);
  v63 = v25;
  v73 = v25;
  v77 = v37;
  v64 = v79;
  sub_100011370(v58, v79, &qword_100548B80);
  v65 = (uint64_t)v63;
  v66 = v78;
  sub_100011370(v65, v78, &qword_100548B98);
  v67 = sub_10000B4C8(&qword_100548BB0);
  v68 = v66 + *(int *)(v67 + 48);
  *(_QWORD *)v68 = v53;
  *(_QWORD *)(v68 + 8) = v54;
  *(_BYTE *)(v68 + 16) = v55;
  *(_QWORD *)(v68 + 24) = v56;
  *(_QWORD *)(v68 + 32) = v57;
  *(_QWORD *)(v68 + 40) = v74;
  *(_BYTE *)(v68 + 48) = v75;
  sub_100011370(v64, v66 + *(int *)(v67 + 64), &qword_100548B80);
  sub_10002EBA0(v53, v54, v55);
  swift_bridgeObjectRetain();
  swift_retain(v57);
  sub_10002EBA0(v53, v54, v55);
  swift_bridgeObjectRetain();
  swift_retain(v57);
  sub_100011694(v58, &qword_100548B80);
  sub_100011694(v77, &qword_100548B98);
  sub_100011694(v64, &qword_100548B80);
  sub_10001DA20(v53, v54, v55);
  swift_release(v57);
  swift_bridgeObjectRelease(v56);
  return sub_100011694((uint64_t)v73, &qword_100548B98);
}

uint64_t sub_100025AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = (char *)a3;
  v46 = a4;
  v6 = sub_10000B4C8(&qword_100548B80);
  v7 = __chkstk_darwin(v6);
  v47 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - v9;
  v11 = type metadata accessor for FriendsBadgesView(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_10000B4C8(&qword_100548B70);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v42 - v19;
  v21 = sub_10003638C();
  v22 = v21[2];
  swift_bridgeObjectRelease(v21);
  if (v22)
  {
    *v14 = sub_10003638C();
    v23 = (_QWORD *)((char *)v14 + *(int *)(v11 + 20));
    *v23 = swift_getKeyPath(&unk_100425228);
    v24 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v23, v24, 0);
    sub_10000DB44((uint64_t)v14, (uint64_t)v20, type metadata accessor for FriendsBadgesView);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, v25, 1, v11);
  v27 = *(_QWORD *)a2;
  v26 = *(_QWORD *)(a2 + 8);
  v28 = *(_BYTE *)(a2 + 16);
  v29 = *(_QWORD *)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 32);
  v31 = *(unsigned __int8 *)(a2 + 48);
  v32 = *(_QWORD *)(a1 + 40);
  v45 = *(_QWORD *)(a2 + 40);
  v44 = v31;
  if (v32
    && ((v32 & 0x2000000000000000) != 0 ? (v33 = HIBYTE(v32) & 0xF) : (v33 = *(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFLL),
        v33))
  {
    v34 = (uint64_t)v10;
    sub_100011370((uint64_t)v43, (uint64_t)v10, &qword_100548A28);
    v35 = sub_10000B4C8(&qword_100548A28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v10, 0, 1, v35);
  }
  else
  {
    v36 = sub_10000B4C8(&qword_100548A28);
    v34 = (uint64_t)v10;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v10, 1, 1, v36);
  }
  sub_100011370((uint64_t)v20, (uint64_t)v18, &qword_100548B70);
  v37 = v47;
  sub_100011370(v34, v47, &qword_100548B80);
  v43 = v20;
  v38 = v46;
  sub_100011370((uint64_t)v18, v46, &qword_100548B70);
  v39 = sub_10000B4C8(&qword_100548B88);
  v40 = v38 + *(int *)(v39 + 48);
  *(_QWORD *)v40 = v27;
  *(_QWORD *)(v40 + 8) = v26;
  *(_BYTE *)(v40 + 16) = v28;
  *(_QWORD *)(v40 + 24) = v29;
  *(_QWORD *)(v40 + 32) = v30;
  *(_QWORD *)(v40 + 40) = v45;
  *(_BYTE *)(v40 + 48) = v44;
  sub_100011370(v37, v38 + *(int *)(v39 + 64), &qword_100548B80);
  sub_10002EBA0(v27, v26, v28);
  swift_bridgeObjectRetain();
  swift_retain(v30);
  sub_10002EBA0(v27, v26, v28);
  swift_bridgeObjectRetain();
  swift_retain(v30);
  sub_100011694(v34, &qword_100548B80);
  sub_100011694((uint64_t)v43, &qword_100548B70);
  sub_100011694(v37, &qword_100548B80);
  sub_10001DA20(v27, v26, v28);
  swift_release(v30);
  swift_bridgeObjectRelease(v29);
  return sub_100011694((uint64_t)v18, &qword_100548B70);
}

uint64_t sub_100025E34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;

  v29 = a2;
  v3 = type metadata accessor for FriendsBadgesView(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char **)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10000B4C8(&qword_100548B70);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v28 - v11;
  v13 = sub_10003638C();
  v14 = v13[2];
  swift_bridgeObjectRelease(v13);
  if (v14)
  {
    *v6 = sub_10003638C();
    v15 = (_QWORD *)((char *)v6 + *(int *)(v3 + 20));
    *v15 = swift_getKeyPath(&unk_100425228);
    v16 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v15, v16, 0);
    sub_10000DB44((uint64_t)v6, (uint64_t)v12, type metadata accessor for FriendsBadgesView);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, v17, 1, v3);
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD *)(a1 + 8);
  v20 = *(_BYTE *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 40);
  v24 = *(_BYTE *)(a1 + 48);
  v28 = v10;
  sub_100011370((uint64_t)v12, (uint64_t)v10, &qword_100548B70);
  v25 = v29;
  sub_100011370((uint64_t)v10, v29, &qword_100548B70);
  v26 = v25 + *(int *)(sub_10000B4C8(&qword_100548B78) + 48);
  *(_QWORD *)v26 = v18;
  *(_QWORD *)(v26 + 8) = v19;
  *(_BYTE *)(v26 + 16) = v20;
  *(_QWORD *)(v26 + 24) = v21;
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v23;
  *(_BYTE *)(v26 + 48) = v24;
  sub_10002EBA0(v18, v19, v20);
  swift_bridgeObjectRetain();
  swift_retain(v22);
  sub_10002EBA0(v18, v19, v20);
  swift_bridgeObjectRetain();
  swift_retain(v22);
  sub_100011694((uint64_t)v12, &qword_100548B70);
  sub_10001DA20(v18, v19, v20);
  swift_release(v22);
  swift_bridgeObjectRelease(v21);
  return sub_100011694((uint64_t)v28, &qword_100548B70);
}

void sub_100026074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v0);
  v1 = sub_10000B4C8(&qword_1005481F0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - v4;
  type metadata accessor for SongCellView(0);
  sub_10003E9BC((uint64_t)v5);
  v6 = v5[*(int *)(v2 + 24)];
  sub_10000E750((uint64_t)v5, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
  __asm { BR              X9 }
}

uint64_t sub_1000261A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for PlaybackButton.State.unplayed(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for PlaybackButton.State)(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_100026320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_1005489E0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = sub_10000B4C8(&qword_1005489E8);
  v10 = sub_100022DF4(v0, (uint64_t)&v8[*(int *)(v9 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v10);
  v11 = sub_100012324(&qword_1005489F0, &qword_1005489E0, (const char *)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v4, v5, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100011694((uint64_t)v8, &qword_1005489E0);
}

uint64_t sub_100026454@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  int v39;
  int v40;
  int v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v65[2];
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = (uint64_t)v1;
  v73 = a1;
  v68 = type metadata accessor for WidgetFamily(0);
  v74 = *(_QWORD *)(v68 - 8);
  v3 = __chkstk_darwin(v68);
  v72 = (uint64_t)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v66 = (char *)v65 - v5;
  v67 = type metadata accessor for FriendsBadgesView(0);
  v6 = *(_QWORD *)(v67 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v67);
  v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100548CA0);
  __chkstk_darwin(v9);
  v11 = (_QWORD *)((char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_10000B4C8(&qword_100548CA8);
  __chkstk_darwin(v69);
  v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_10000B4C8(&qword_100548CB0);
  v14 = __chkstk_darwin(v70);
  v71 = (uint64_t)v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v11 = static Alignment.leading.getter(v14);
  v11[1] = v16;
  v65[1] = (char *)v11 + *(int *)(sub_10000B4C8(&qword_100548CB8) + 44);
  v17 = *v1;
  v18 = swift_bridgeObjectRetain();
  sub_100027524(v18);
  v20 = v19;
  swift_bridgeObjectRelease(v17);
  v75 = v20;
  KeyPath = swift_getKeyPath(&unk_1004255C8);
  sub_10000D964(v2, (uint64_t)v8, type metadata accessor for FriendsBadgesView);
  v22 = *(unsigned __int8 *)(v6 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_1004F9C20, v23 + v7, v22 | 7);
  sub_10000DB44((uint64_t)v8, v24 + v23, type metadata accessor for FriendsBadgesView);
  v25 = swift_allocObject(&unk_1004F9C48, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_10002F684;
  *(_QWORD *)(v25 + 24) = v24;
  v26 = sub_10000B4C8(&qword_100548CC0);
  v27 = sub_10000B4C8(&qword_100548CC8);
  v28 = sub_100012324(&qword_100548CD0, &qword_100548CC0, (const char *)&protocol conformance descriptor for [A]);
  v29 = sub_10002F724();
  v30 = sub_10002F800(&qword_100548CF8, &qword_100548CC8, sub_10002F7DC, (uint64_t)&protocol witness table for _OffsetEffect);
  v31 = v25;
  v32 = v2;
  v33 = (uint64_t)v66;
  v34 = v29;
  v35 = v68;
  v36 = ForEach<>.init(_:id:content:)(&v75, KeyPath, sub_10002F6FC, v31, v26, v27, v28, v34, v30);
  v37 = static Edge.Set.leading.getter(v36);
  sub_10003E98C(v33);
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 88);
  v39 = v38(v33, v35);
  v40 = enum case for WidgetFamily.systemMedium(_:);
  v41 = enum case for WidgetFamily.systemLarge(_:);
  if (v39 != enum case for WidgetFamily.systemMedium(_:) && v39 != enum case for WidgetFamily.systemLarge(_:))
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v33, v35);
  v42 = EdgeInsets.init(_all:)((double)(*(_QWORD *)(*(_QWORD *)v32 + 16) - 1) * 10.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  sub_100011370((uint64_t)v11, (uint64_t)v13, &qword_100548CA0);
  v49 = &v13[*(int *)(v69 + 36)];
  *v49 = v37;
  *((double *)v49 + 1) = v42;
  *((_QWORD *)v49 + 2) = v44;
  *((_QWORD *)v49 + 3) = v46;
  *((_QWORD *)v49 + 4) = v48;
  v49[40] = 0;
  v50 = sub_100011694((uint64_t)v11, &qword_100548CA0);
  v51 = static Edge.Set.bottom.getter(v50);
  v52 = v72;
  sub_10003E98C(v72);
  v53 = v38(v52, v35);
  v54 = 1.0;
  if (v53 != v40)
  {
    v54 = 3.0;
    if (v53 != v41)
    {
      (*(void (**)(uint64_t, uint64_t, double))(v74 + 8))(v52, v35, 3.0);
      v54 = 2.0;
    }
  }
  v55 = EdgeInsets.init(_all:)(v54);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v62 = v71;
  sub_100011370((uint64_t)v13, v71, &qword_100548CA8);
  v63 = v62 + *(int *)(v70 + 36);
  *(_BYTE *)v63 = v51;
  *(double *)(v63 + 8) = v55;
  *(_QWORD *)(v63 + 16) = v57;
  *(_QWORD *)(v63 + 24) = v59;
  *(_QWORD *)(v63 + 32) = v61;
  *(_BYTE *)(v63 + 40) = 0;
  sub_100011694((uint64_t)v13, &qword_100548CA8);
  return sub_100011530(v62, v73, &qword_100548CB0);
}

uint64_t sub_1000268F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  CFRange v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  uint64_t v55;
  int v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[3];

  v67 = a3;
  v74 = a1;
  v75 = a4;
  v5 = type metadata accessor for WidgetFamily(0);
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  v6 = __chkstk_darwin(v5);
  v73 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v71 = (uint64_t)&v61 - v9;
  __chkstk_darwin(v8);
  v66 = (char *)&v61 - v10;
  v11 = sub_10000B4C8(&qword_100548D28);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_100548D20);
  v63 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_100548D58);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10000B4C8(&qword_100548D18);
  __chkstk_darwin(v62);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10000B4C8(&qword_100548D08);
  __chkstk_darwin(v68);
  v72 = (uint64_t)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_10000B4C8(&qword_100548CC8);
  __chkstk_darwin(v69);
  v70 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100026E3C(a2, (uint64_t)v13);
  v25 = sub_10002F92C();
  View.corner(_:)(0, 0, 1, v11, v25);
  sub_100011694((uint64_t)v13, &qword_100548D28);
  v27 = static Color.white.getter(v26);
  v28 = CFRange.init(_:)((__C::_NSRange)(unint64_t)v27);
  v30 = v29;
  *(_QWORD *)&v76[0] = v11;
  *((_QWORD *)&v76[0] + 1) = v25;
  v31 = v64;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v76, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  View.border(_:corner:)(v28.location, v28.length, 0, 0, 1, v14, OpaqueTypeConformance2, v30);
  v33 = v65;
  v34 = swift_release(v28.location);
  v35 = (*(uint64_t (**)(char *, uint64_t, __n128))(v63 + 8))(v16, v14, v34);
  v36 = static Color.black.getter(v35);
  v37 = Color.opacity(_:)(0.35);
  v38 = swift_release(v36);
  (*(void (**)(char *, char *, uint64_t, __n128))(v18 + 16))(v22, v20, v17, v38);
  v39 = &v22[*(int *)(v62 + 36)];
  *(_QWORD *)v39 = v37;
  *(_OWORD *)(v39 + 8) = xmmword_100425160;
  *((_QWORD *)v39 + 3) = 0x3FF0000000000000;
  v40 = v20;
  v41 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v40, v17);
  type metadata accessor for FriendsBadgesView(0);
  sub_10003E98C(v41);
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 88);
  v43 = v42(v41, v33);
  v44 = enum case for WidgetFamily.systemMedium(_:);
  v45 = enum case for WidgetFamily.systemLarge(_:);
  if (v43 == enum case for WidgetFamily.systemMedium(_:))
  {
    v46 = 0x402C000000000000;
  }
  else if (v43 == enum case for WidgetFamily.systemLarge(_:))
  {
    v46 = 0x4032000000000000;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v41, v33);
    v46 = 0x4030000000000000;
  }
  v47 = v71;
  sub_10003E98C(v71);
  v48 = v42(v47, v33);
  if ((_DWORD)v48 == v44)
  {
    v49 = 0x402C000000000000;
  }
  else if ((_DWORD)v48 == v45)
  {
    v49 = 0x4032000000000000;
  }
  else
  {
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v47, v33);
    v49 = 0x4030000000000000;
  }
  v50 = static Alignment.center.getter(v48);
  _FrameLayout.init(width:height:alignment:)(v76, v46, 0, v49, 0, v50, v51);
  v52 = v72;
  sub_100011370((uint64_t)v22, v72, &qword_100548D18);
  v53 = (_OWORD *)(v52 + *(int *)(v68 + 36));
  v54 = v76[1];
  *v53 = v76[0];
  v53[1] = v54;
  v53[2] = v76[2];
  sub_100011694((uint64_t)v22, &qword_100548D18);
  v55 = v73;
  sub_10003E98C(v73);
  v56 = v42(v55, v33);
  if (v56 != v44 && v56 != v45)
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v55, v33);
  v57 = (double)v74 * -10.0;
  v58 = v70;
  sub_100011370(v52, v70, &qword_100548D08);
  v59 = v58 + *(int *)(v69 + 36);
  *(double *)v59 = v57;
  *(_QWORD *)(v59 + 8) = 0;
  sub_100011694(v52, &qword_100548D08);
  return sub_100011530(v58, v75, &qword_100548CC8);
}

uint64_t sub_100026E3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)@<X0>(uint64_t@<X8>);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v3 = sub_10000B4C8(&qword_100548D60);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Image.ResizingMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10000B4C8(&qword_100548D68);
  v10 = *(_QWORD *)(v36 - 8);
  v11 = __chkstk_darwin(v36);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v34 - v14;
  v16 = sub_10000B4C8(&qword_100548D70);
  __chkstk_darwin(v16);
  v18 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v35 = a1;
    v19 = Image.init(uiImage:)(v35);
    v34 = v10;
    v20 = v19;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v6);
    v21 = Image.resizable(capInsets:resizingMode:)(v9, v20, 0.0, 0.0, 0.0, 0.0);
    v22 = swift_release(v20);
    v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v22);
    static WidgetAccentedRenderingMode.fullColor.getter(v23);
    v24 = type metadata accessor for WidgetAccentedRenderingMode(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 0, 1, v24);
    Image.widgetAccentedRenderingMode(_:)(v5, v21);
    swift_release(v21);
    sub_100011694((uint64_t)v5, &qword_100548D60);
    v25 = v34;
    v26 = v36;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v15, v13, v36);
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), char *, uint64_t))(v25 + 16))(v18, v15, v26);
    swift_storeEnumTagMultiPayload(v18, v16, 0);
    v27 = sub_10000B4C8(&qword_100548D50);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v27, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
    v29 = sub_100012324(&qword_100548D48, &qword_100548D50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    _ConditionalContent<>.init(storage:)(v18, v26, v27, OpaqueTypeConformance2, v29);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v15, v26);
  }
  else
  {
    *v18 = sub_10002717C;
    v18[1] = 0;
    swift_storeEnumTagMultiPayload(v18, v16, 1);
    v31 = sub_10000B4C8(&qword_100548D50);
    v32 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
    v33 = sub_100012324(&qword_100548D48, &qword_100548D50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    return _ConditionalContent<>.init(storage:)(v18, v36, v31, v32, v33);
  }
}

uint64_t sub_10002717C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v1 = type metadata accessor for BlendMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100548D78);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100548D80);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_100548D88);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100547B50);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 7, 10, v18);
  v20 = GeometryProxy.size.getter(v19);
  ArtworkImage.Placeholder.view(availableSize:)((uint64_t)v14, v20, v21);
  sub_10000E750((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder);
  v22 = ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor();
  sub_10000D964(v22, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  v23 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 0, 1, v23);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v24, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.view(availableSize:)>>, 1);
  View.placeholderStyle(_:)((uint64_t)v7, v11, OpaqueTypeConformance2);
  sub_100011694((uint64_t)v7, &qword_100548D78);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for BlendMode.plusLighter(_:), v1);
  v26 = sub_10000B4C8(&qword_100548D90);
  v27 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v30 + *(int *)(v26 + 36), v4, v1);
  sub_100011370((uint64_t)v17, v27, &qword_100548D88);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100011694((uint64_t)v17, &qword_100548D88);
}

uint64_t sub_100027420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  sub_10000D924(v0, qword_100548638);
  v1 = sub_10000D78C(v0, (uint64_t)qword_100548638);
  if (qword_1005477A0 != -1)
    swift_once(&qword_1005477A0, sub_100019E48);
  v2 = sub_10000D78C(v0, (uint64_t)qword_100561200);
  return sub_10000D964(v2, v1, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
}

uint64_t sub_1000274AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005477A8 != -1)
    swift_once(&qword_1005477A8, sub_100027420);
  v2 = type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100548638);
  return sub_10000D964(v3, a1, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
}

void sub_100027524(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      v7 = *(void **)(a1 + 8 * v5 + 32);
      if (v4)
      {
        v8 = v7;
        v9 = __OFSUB__(v4--, 1);
        if (v9)
          goto LABEL_30;
      }
      else
      {
        v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_31;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        v13 = sub_10000B4C8(&qword_100548D98);
        v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
        v15 = j__malloc_size(v14);
        v16 = v15 - 32;
        if (v15 < 32)
          v16 = v15 - 17;
        v17 = v16 >> 4;
        v14[2] = v12;
        v14[3] = 2 * (v16 >> 4);
        v18 = v14 + 4;
        v19 = v2[3] >> 1;
        v6 = &v14[2 * v19 + 4];
        v20 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        if (v2[2])
        {
          v21 = v14 < v2 || v18 >= &v2[2 * v19 + 4];
          if (v21 || v14 != v2)
            memmove(v18, v2 + 4, 16 * v19);
          v22 = v7;
          v2[2] = 0;
        }
        else
        {
          v23 = v7;
        }
        swift_release(v2);
        v2 = v14;
        v9 = __OFSUB__(v20, 1);
        v4 = v20 - 1;
        if (v9)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return;
        }
      }
      *v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        swift_bridgeObjectRelease(a1);
        goto LABEL_26;
      }
    }
  }
  v4 = 0;
LABEL_26:
  v24 = v2[3];
  if (v24 >= 2)
  {
    v25 = v24 >> 1;
    v9 = __OFSUB__(v25, v4);
    v26 = v25 - v4;
    if (v9)
      goto LABEL_32;
    v2[2] = v26;
  }
}

unint64_t sub_1000276AC()
{
  unint64_t result;

  result = qword_100548728;
  if (!qword_100548728)
  {
    result = swift_getWitnessTable(&unk_1004252D4, &_s28RecommendationWidgetEntryKeyVN);
    atomic_store(result, (unint64_t *)&qword_100548728);
  }
  return result;
}

ValueMetadata *_s28RecommendationWidgetEntryKeyVMa()
{
  return &_s28RecommendationWidgetEntryKeyVN;
}

_QWORD *sub_100027700(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int *v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void (*v75)(_QWORD *, _QWORD, uint64_t, int *);
  id v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *__dst;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *__srca;
  void *__srcb;
  char *__src;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  char *v124;
  void (*v125)(_QWORD *, _QWORD *, uint64_t);
  int *v126;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v32);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_1005486F0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v121 = v6;
      v123 = (void *)v7;
      v8 = type metadata accessor for Date(0);
      v120 = *(_QWORD *)(v8 - 8);
      v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v120 + 16);
      v9(a1, a2, v8);
      v10 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v122 = v8;
      v125 = v9;
      v9((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)a2 + v11), v8);
      v14 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
      v15 = v14[5];
      v16 = &v12[v15];
      v17 = &v13[v15];
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v19 = v14[6];
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v12[v14[7]] = v13[v14[7]];
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v126 = v10;
      v23 = v10[7];
      v24 = (_QWORD *)((char *)a1 + v23);
      v25 = (_QWORD *)((char *)a2 + v23);
      v26 = (int *)type metadata accessor for WidgetMusicItem(0);
      v27 = *((_QWORD *)v26 - 1);
      v28 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
      {
        v29 = sub_10000B4C8(&qword_100548310);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        v30 = v122;
        v7 = (uint64_t)v123;
        v31 = v126;
        v6 = v121;
      }
      else
      {
        v113 = v27;
        v35 = v25[1];
        *v24 = *v25;
        v24[1] = v35;
        v36 = v25[3];
        v24[2] = v25[2];
        v24[3] = v36;
        v37 = v25[5];
        v24[4] = v25[4];
        v24[5] = v37;
        v38 = v26[7];
        v39 = (char *)v24 + v38;
        __srca = (char *)v25 + v38;
        v40 = type metadata accessor for URL(0);
        v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v114(v39, __srca, v40);
        v41 = v26[8];
        v42 = (_QWORD *)((char *)v24 + v41);
        v43 = (_QWORD *)((char *)v25 + v41);
        v44 = v43[1];
        *v42 = *v43;
        v42[1] = v44;
        v45 = v26[9];
        v46 = (_QWORD *)((char *)v24 + v45);
        v47 = (_QWORD *)((char *)v25 + v45);
        __srcb = (void *)v47[1];
        *v46 = *v47;
        v46[1] = __srcb;
        v48 = v26[10];
        v49 = (_QWORD *)((char *)v24 + v48);
        v50 = (_QWORD *)((char *)v25 + v48);
        v115 = v50[1];
        *v49 = *v50;
        v49[1] = v115;
        v51 = v26[11];
        v52 = (_QWORD *)((char *)v24 + v51);
        v53 = (_QWORD *)((char *)v25 + v51);
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        v55 = v26[12];
        v56 = (_QWORD *)((char *)v24 + v55);
        v57 = (_QWORD *)((char *)v25 + v55);
        v58 = v57[1];
        *v56 = *v57;
        v56[1] = v58;
        v59 = v26[13];
        v60 = (_QWORD *)((char *)v24 + v59);
        v61 = (_QWORD *)((char *)v25 + v59);
        v62 = v61[1];
        *v60 = *v61;
        v60[1] = v62;
        *(_QWORD *)((char *)v24 + v26[14]) = *(_QWORD *)((char *)v25 + v26[14]);
        *((_BYTE *)v24 + v26[15]) = *((_BYTE *)v25 + v26[15]);
        v63 = v26[16];
        __dst = (char *)v24 + v63;
        v64 = (char *)v25 + v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65 = sub_10000B4C8(&qword_100547B50);
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 10, v65))
        {
          v67 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
          v9 = v125;
          v68 = v113;
        }
        else
        {
          v69 = type metadata accessor for Playlist.Variant(0);
          v70 = *(_QWORD *)(v69 - 8);
          v116 = v69;
          __src = v64;
          v71 = (*(uint64_t (**)(char *, uint64_t))(v70 + 48))(v64, 1);
          v9 = v125;
          if (v71)
          {
            v72 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dst, __src, v116);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(__dst, 0, 1, v116);
          }
          v68 = v113;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 10, v65);
        }
        *(_QWORD *)((char *)v24 + v26[17]) = *(_QWORD *)((char *)v25 + v26[17]);
        v73 = v26[18];
        v74 = *(void **)((char *)v25 + v73);
        *(_QWORD *)((char *)v24 + v73) = v74;
        *(_QWORD *)((char *)v24 + v26[19]) = *(_QWORD *)((char *)v25 + v26[19]);
        v75 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v68 + 56);
        v76 = v74;
        swift_bridgeObjectRetain();
        v75(v24, 0, 1, v26);
        v30 = v122;
        v7 = (uint64_t)v123;
        v6 = v121;
        v31 = v126;
      }
      v77 = v31[8];
      v78 = (char *)a1 + v77;
      v79 = (char *)a2 + v77;
      v80 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v81 = *(_QWORD *)(v80 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
      {
        v82 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        v9(v78, v79, v30);
        v9(&v78[*(int *)(v80 + 20)], &v79[*(int *)(v80 + 20)], v30);
        v83 = *(int *)(v80 + 24);
        v124 = &v78[v83];
        v84 = &v79[v83];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v84, 1, v30))
        {
          v85 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v124, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          v125(v124, v84, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v124, 0, 1, v30);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
      }
      v86 = v126[9];
      v87 = *(void **)((char *)a2 + v86);
      *(_QWORD *)((char *)a1 + v86) = v87;
      v88 = v126[10];
      v89 = (_QWORD *)((char *)a1 + v88);
      v90 = (_QWORD *)((char *)a2 + v88);
      v91 = v90[1];
      *v89 = *v90;
      v89[1] = v91;
      v92 = v87;
      swift_bridgeObjectRetain();
      v34 = 1;
    }
    else
    {
      v33 = *a2;
      *a1 = *a2;
      swift_retain(v33);
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v34);
    v93 = *(int *)(v6 + 20);
    v94 = (_QWORD *)((char *)a1 + v93);
    v95 = (_QWORD *)((char *)a2 + v93);
    v96 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v95, v96) == 1)
    {
      v97 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v94, v95, v97);
      v98 = v94;
      v99 = v96;
      v100 = 1;
    }
    else
    {
      v101 = *v95;
      *v94 = *v95;
      swift_retain(v101);
      v98 = v94;
      v99 = v96;
      v100 = 0;
    }
    swift_storeEnumTagMultiPayload(v98, v99, v100);
    v102 = *(int *)(v6 + 24);
    v103 = (_QWORD *)((char *)a1 + v102);
    v104 = (_QWORD *)((char *)a2 + v102);
    v105 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v104, v105) == 1)
    {
      v106 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v103, v104, v106);
      v107 = v103;
      v108 = v105;
      v109 = 1;
    }
    else
    {
      v110 = *v104;
      *v103 = *v104;
      swift_retain(v110);
      v107 = v103;
      v108 = v105;
      v109 = 0;
    }
    swift_storeEnumTagMultiPayload(v107, v108, v109);
  }
  return a1;
}

double sub_100027DB4(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  int *v8;
  char *v9;
  int *v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;

  v4 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(char *, uint64_t))(v6 + 8);
    v7(a1, v5);
    v8 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v9 = &a1[v8[5]];
    v7(v9, v5);
    v10 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[8]]);
    v11 = &a1[v8[7]];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 5));
      v13 = &v11[v12[7]];
      v14 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[9] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[10] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[11] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[12] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[13] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[14]]);
      v15 = &v11[v12[16]];
      v16 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 10, v16))
      {
        v17 = type metadata accessor for Playlist.Variant(0);
        v28 = *(_QWORD *)(v17 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v17))
          (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v17);
      }

      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[19]]);
    }
    v18 = &a1[v8[8]];
    v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      v7(v18, v5);
      v7(&v18[*(int *)(v19 + 20)], v5);
      v20 = &v18[*(int *)(v19 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
        v7(v20, v5);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&a1[v8[10] + 8]);
  }
  else
  {
    swift_release(*(_QWORD *)a1);
  }
  v21 = &a1[*(int *)(a2 + 20)];
  v22 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release(*(_QWORD *)v21);
  }
  v24 = &a1[*(int *)(a2 + 24)];
  v25 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*(_QWORD *)v24).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100028148(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, void *);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  unsigned int (*v27)(_QWORD *, uint64_t, int *);
  uint64_t v28;
  void *v29;
  int *v30;
  void (*v31)(char *, char *, void *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, _QWORD, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  void *v76;
  void (*v77)(_QWORD *, _QWORD, uint64_t, int *);
  id v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  char *__srca;
  void *__srcb;
  void *__src;
  uint64_t v119;
  char *__dsta;
  char *__dst;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  char *v126;
  void (*v127)(char *, char *, void *);
  int *v128;

  v6 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v123 = v6;
    v124 = a3;
    v7 = type metadata accessor for Date(0);
    v122 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v122 + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v125 = (void *)v7;
    v127 = (void (*)(char *, char *, void *))v8;
    v8((_QWORD *)((char *)a1 + v10), (_QWORD *)((char *)a2 + v10), v7);
    v13 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v13[6];
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v11[v13[7]] = v12[v13[7]];
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v128 = v9;
    v22 = v9[7];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = (int *)type metadata accessor for WidgetMusicItem(0);
    v26 = *((_QWORD *)v25 - 1);
    v27 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_10000B4C8(&qword_100548310);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      a3 = v124;
      v29 = v125;
      v31 = v127;
      v30 = v128;
      v6 = v123;
    }
    else
    {
      v34 = v24[1];
      *v23 = *v24;
      v23[1] = v34;
      v35 = v24[3];
      v23[2] = v24[2];
      v23[3] = v35;
      v36 = v24[5];
      v23[4] = v24[4];
      v23[5] = v36;
      v37 = v25[7];
      v119 = v26;
      __dsta = (char *)v23 + v37;
      __srca = (char *)v24 + v37;
      v38 = type metadata accessor for URL(0);
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(__dsta, __srca, v38);
      v40 = v25[8];
      v41 = (_QWORD *)((char *)v23 + v40);
      v42 = (_QWORD *)((char *)v24 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      v44 = v25[9];
      v45 = (_QWORD *)((char *)v23 + v44);
      v46 = (_QWORD *)((char *)v24 + v44);
      __srcb = (void *)v46[1];
      *v45 = *v46;
      v45[1] = __srcb;
      v47 = v25[10];
      v48 = (_QWORD *)((char *)v23 + v47);
      v49 = (_QWORD *)((char *)v24 + v47);
      v114 = v49[1];
      *v48 = *v49;
      v48[1] = v114;
      v50 = v25[11];
      v51 = (_QWORD *)((char *)v23 + v50);
      v52 = (_QWORD *)((char *)v24 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v25[12];
      v55 = (_QWORD *)((char *)v23 + v54);
      v56 = (_QWORD *)((char *)v24 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = v25[13];
      v59 = (_QWORD *)((char *)v23 + v58);
      v60 = (_QWORD *)((char *)v24 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      *(_QWORD *)((char *)v23 + v25[14]) = *(_QWORD *)((char *)v24 + v25[14]);
      *((_BYTE *)v23 + v25[15]) = *((_BYTE *)v24 + v25[15]);
      v62 = v25[16];
      __dst = (char *)v23 + v62;
      v63 = (char *)v24 + v62;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v64 = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65 = sub_10000B4C8(&qword_100547B50);
      v66 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48))(v64, 10, v65))
      {
        v67 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        v6 = v123;
        a3 = v124;
        v31 = v127;
      }
      else
      {
        v68 = type metadata accessor for Playlist.Variant(0);
        v69 = *(_QWORD *)(v68 - 8);
        v115 = v68;
        __src = (void *)v64;
        v70 = (*(uint64_t (**)(const void *, uint64_t))(v69 + 48))(v64, 1);
        a3 = v124;
        v31 = v127;
        if (v70)
        {
          v71 = sub_10000B4C8(&qword_100548358);
          v72 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v69 + 16))(__dst, __src, v115);
          v73 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56);
          v72 = __dst;
          v73(__dst, 0, 1, v115);
        }
        v74 = v72;
        v6 = v123;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v74, 0, 10, v65);
      }
      *(_QWORD *)((char *)v23 + v25[17]) = *(_QWORD *)((char *)v24 + v25[17]);
      v75 = v25[18];
      v76 = *(void **)((char *)v24 + v75);
      *(_QWORD *)((char *)v23 + v75) = v76;
      *(_QWORD *)((char *)v23 + v25[19]) = *(_QWORD *)((char *)v24 + v25[19]);
      v77 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v119 + 56);
      v78 = v76;
      swift_bridgeObjectRetain();
      v77(v23, 0, 1, v25);
      v29 = v125;
      v30 = v128;
    }
    v79 = v30[8];
    v80 = (char *)a1 + v79;
    v81 = (char *)a2 + v79;
    v82 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      v84 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      v31(v80, v81, v29);
      v31(&v80[*(int *)(v82 + 20)], &v81[*(int *)(v82 + 20)], v29);
      v85 = *(int *)(v82 + 24);
      v126 = &v80[v85];
      v86 = &v81[v85];
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v122 + 48))(v86, 1, v29))
      {
        v87 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v126, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        v127(v126, v86, v29);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v122 + 56))(v126, 0, 1, v29);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v88 = v128[9];
    v89 = *(void **)((char *)a2 + v88);
    *(_QWORD *)((char *)a1 + v88) = v89;
    v90 = v128[10];
    v91 = (_QWORD *)((char *)a1 + v90);
    v92 = (_QWORD *)((char *)a2 + v90);
    v93 = v92[1];
    *v91 = *v92;
    v91[1] = v93;
    v94 = v89;
    swift_bridgeObjectRetain();
    v33 = 1;
  }
  else
  {
    v32 = *a2;
    *a1 = *a2;
    swift_retain(v32);
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v33);
  v95 = *(int *)(a3 + 20);
  v96 = (_QWORD *)((char *)a1 + v95);
  v97 = (_QWORD *)((char *)a2 + v95);
  v98 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v97, v98) == 1)
  {
    v99 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v96, v97, v99);
    v100 = v96;
    v101 = v98;
    v102 = 1;
  }
  else
  {
    v103 = *v97;
    *v96 = *v97;
    swift_retain(v103);
    v100 = v96;
    v101 = v98;
    v102 = 0;
  }
  swift_storeEnumTagMultiPayload(v100, v101, v102);
  v104 = *(int *)(a3 + 24);
  v105 = (_QWORD *)((char *)a1 + v104);
  v106 = (_QWORD *)((char *)a2 + v104);
  v107 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v106, v107) == 1)
  {
    v108 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v105, v106, v108);
    v109 = v105;
    v110 = v107;
    v111 = 1;
  }
  else
  {
    v112 = *v106;
    *v105 = *v106;
    swift_retain(v112);
    v109 = v105;
    v110 = v107;
    v111 = 0;
  }
  swift_storeEnumTagMultiPayload(v109, v110, v111);
  return a1;
}

_QWORD *sub_1000287D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, int *);
  uint64_t v26;
  int *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void (*v65)(_QWORD *, _QWORD, uint64_t, int *);
  id v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  id v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v101;
  char *__srca;
  char *__src;
  uint64_t v104;
  char *__dsta;
  char *__dst;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  void *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005486F0);
    v6 = sub_10000B4C8(&qword_1005486F0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v110 = (void *)v6;
      v112 = a3;
      v7 = type metadata accessor for Date(0);
      v107 = *(_QWORD *)(v7 - 8);
      v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v107 + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v108 = v7;
      v113 = (void (*)(char *, char *, uint64_t))v8;
      v8((_QWORD *)((char *)a1 + v10), (_QWORD *)((char *)a2 + v10), v7);
      v13 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
      v14 = v13[5];
      v15 = &v11[v14];
      v16 = &v12[v14];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v17 = v13[6];
      v18 = &v11[v17];
      v19 = &v12[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      v11[v13[7]] = v12[v13[7]];
      *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v109 = v9;
      v20 = v9[7];
      v21 = (_QWORD *)((char *)a1 + v20);
      v22 = (_QWORD *)((char *)a2 + v20);
      v23 = (int *)type metadata accessor for WidgetMusicItem(0);
      v24 = *((_QWORD *)v23 - 1);
      v25 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        v26 = sub_10000B4C8(&qword_100548310);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v28 = v7;
        v27 = v109;
        v29 = v113;
        v6 = (uint64_t)v110;
      }
      else
      {
        *v21 = *v22;
        v21[1] = v22[1];
        v21[2] = v22[2];
        v21[3] = v22[3];
        v21[4] = v22[4];
        v21[5] = v22[5];
        v32 = v23[7];
        v104 = v24;
        __dsta = (char *)v21 + v32;
        __srca = (char *)v22 + v32;
        v33 = type metadata accessor for URL(0);
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(__dsta, __srca, v33);
        v35 = v23[8];
        v36 = (_QWORD *)((char *)v21 + v35);
        v37 = (_QWORD *)((char *)v22 + v35);
        *v36 = *v37;
        v36[1] = v37[1];
        v38 = v23[9];
        v39 = (_QWORD *)((char *)v21 + v38);
        v40 = (_QWORD *)((char *)v22 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        v41 = v23[10];
        v42 = (_QWORD *)((char *)v21 + v41);
        v43 = (_QWORD *)((char *)v22 + v41);
        *v42 = *v43;
        v42[1] = v43[1];
        v44 = v23[11];
        v45 = (_QWORD *)((char *)v21 + v44);
        v46 = (_QWORD *)((char *)v22 + v44);
        *v45 = *v46;
        v45[1] = v46[1];
        v47 = v23[12];
        v48 = (_QWORD *)((char *)v21 + v47);
        v49 = (_QWORD *)((char *)v22 + v47);
        *v48 = *v49;
        v48[1] = v49[1];
        v50 = v23[13];
        v51 = (_QWORD *)((char *)v21 + v50);
        v52 = (_QWORD *)((char *)v22 + v50);
        *v51 = *v52;
        v51[1] = v52[1];
        *(_QWORD *)((char *)v21 + v23[14]) = *(_QWORD *)((char *)v22 + v23[14]);
        *((_BYTE *)v21 + v23[15]) = *((_BYTE *)v22 + v23[15]);
        v53 = v23[16];
        __dst = (char *)v21 + v53;
        v54 = (char *)v22 + v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = sub_10000B4C8(&qword_100547B50);
        v56 = *(_QWORD *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 10, v55))
        {
          v57 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          v6 = (uint64_t)v110;
          v28 = v108;
          v29 = (void (*)(char *, char *, uint64_t))v8;
          v58 = v104;
        }
        else
        {
          v59 = type metadata accessor for Playlist.Variant(0);
          v60 = *(_QWORD *)(v59 - 8);
          v101 = v59;
          __src = v54;
          v61 = (*(uint64_t (**)(char *, uint64_t))(v60 + 48))(v54, 1);
          v29 = v113;
          if (v61)
          {
            v62 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dst, __src, v101);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(__dst, 0, 1, v101);
          }
          v6 = (uint64_t)v110;
          v58 = v104;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 10, v55);
          v28 = v108;
        }
        *(_QWORD *)((char *)v21 + v23[17]) = *(_QWORD *)((char *)v22 + v23[17]);
        v63 = v23[18];
        v64 = *(void **)((char *)v22 + v63);
        *(_QWORD *)((char *)v21 + v63) = v64;
        *(_QWORD *)((char *)v21 + v23[19]) = *(_QWORD *)((char *)v22 + v23[19]);
        v65 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v58 + 56);
        v66 = v64;
        swift_bridgeObjectRetain();
        v65(v21, 0, 1, v23);
        v27 = v109;
      }
      v67 = v27[8];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      v70 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        v72 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        v29(v68, v69, v28);
        v29(&v68[*(int *)(v70 + 20)], &v69[*(int *)(v70 + 20)], v28);
        v73 = *(int *)(v70 + 24);
        v111 = &v68[v73];
        v74 = &v69[v73];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v74, 1, v28))
        {
          v75 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v111, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          v113(v111, v74, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v111, 0, 1, v28);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      a3 = v112;
      v76 = v27[9];
      v77 = *(void **)((char *)a2 + v76);
      *(_QWORD *)((char *)a1 + v76) = v77;
      v78 = v27[10];
      v79 = (_QWORD *)((char *)a1 + v78);
      v80 = (_QWORD *)((char *)a2 + v78);
      *v79 = *v80;
      v79[1] = v80[1];
      v81 = v77;
      swift_bridgeObjectRetain();
      v31 = 1;
    }
    else
    {
      v30 = *a2;
      *a1 = *a2;
      swift_retain(v30);
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v31);
    v82 = *(int *)(a3 + 20);
    v83 = (_QWORD *)((char *)a1 + v82);
    v84 = (_QWORD *)((char *)a2 + v82);
    sub_100011694((uint64_t)a1 + v82, &qword_100547EE0);
    v85 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v84, v85) == 1)
    {
      v86 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v83, v84, v86);
      v87 = v83;
      v88 = v85;
      v89 = 1;
    }
    else
    {
      v90 = *v84;
      *v83 = *v84;
      swift_retain(v90);
      v87 = v83;
      v88 = v85;
      v89 = 0;
    }
    swift_storeEnumTagMultiPayload(v87, v88, v89);
    v91 = *(int *)(a3 + 24);
    v92 = (_QWORD *)((char *)a1 + v91);
    v93 = (_QWORD *)((char *)a2 + v91);
    sub_100011694((uint64_t)a1 + v91, &qword_1005486F8);
    v94 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v93, v94) == 1)
    {
      v95 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v92, v93, v95);
      v96 = v92;
      v97 = v94;
      v98 = 1;
    }
    else
    {
      v99 = *v93;
      *v92 = *v93;
      swift_retain(v99);
      v96 = v92;
      v97 = v94;
      v98 = 0;
    }
    swift_storeEnumTagMultiPayload(v96, v97, v98);
  }
  return a1;
}

char *sub_100028EF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *__dst;
  uint64_t v61;
  uint64_t v62;
  char *__src;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);

  v6 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    v64 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v66 = v8;
    v8(&a1[v10], &a2[v10], v7);
    v13 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
    *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
    v11[v13[7]] = v12[v13[7]];
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    a1[v9[6]] = a2[v9[6]];
    v14 = v9[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = (int *)type metadata accessor for WidgetMusicItem(0);
    v18 = *((_QWORD *)v17 - 1);
    v65 = a3;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_10000B4C8(&qword_100548310);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v61 = v7;
      v62 = v18;
      v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      v21 = v17[7];
      v22 = &v15[v21];
      v23 = &v16[v21];
      v24 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      *(_OWORD *)&v15[v17[8]] = *(_OWORD *)&v16[v17[8]];
      *(_OWORD *)&v15[v17[9]] = *(_OWORD *)&v16[v17[9]];
      *(_OWORD *)&v15[v17[10]] = *(_OWORD *)&v16[v17[10]];
      *(_OWORD *)&v15[v17[11]] = *(_OWORD *)&v16[v17[11]];
      *(_OWORD *)&v15[v17[12]] = *(_OWORD *)&v16[v17[12]];
      *(_OWORD *)&v15[v17[13]] = *(_OWORD *)&v16[v17[13]];
      *(_QWORD *)&v15[v17[14]] = *(_QWORD *)&v16[v17[14]];
      v15[v17[15]] = v16[v17[15]];
      v25 = v17[16];
      __dst = &v15[v25];
      v26 = &v16[v25];
      v27 = sub_10000B4C8(&qword_100547B50);
      v28 = *(_QWORD *)(v27 - 8);
      __src = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 10, v27))
      {
        v29 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        v7 = v61;
        v30 = v62;
      }
      else
      {
        v58 = v28;
        v59 = v27;
        v31 = type metadata accessor for Playlist.Variant(0);
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(__src, 1, v31))
        {
          v33 = sub_10000B4C8(&qword_100548358);
          v34 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v57 = v32;
          v35 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
          v34 = __dst;
          v35(__dst, __src, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v31);
        }
        v7 = v61;
        v30 = v62;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v34, 0, 10, v59);
      }
      *(_QWORD *)&v15[v17[17]] = *(_QWORD *)&v16[v17[17]];
      *(_QWORD *)&v15[v17[18]] = *(_QWORD *)&v16[v17[18]];
      *(_QWORD *)&v15[v17[19]] = *(_QWORD *)&v16[v17[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v30 + 56))(v15, 0, 1, v17);
    }
    v36 = v9[8];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v66(v37, v38, v7);
      v66(&v37[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v7);
      v42 = *(int *)(v39 + 24);
      v43 = &v37[v42];
      v44 = &v38[v42];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v44, 1, v7))
      {
        v45 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v66(v43, v44, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v43, 0, 1, v7);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    a3 = v65;
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v46 = *(int *)(a3 + 20);
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload(v47, v49, 1);
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  v51 = *(int *)(a3 + 24);
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
  {
    v55 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v52, v53, v55);
    swift_storeEnumTagMultiPayload(v52, v54, 1);
  }
  else
  {
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  return a1;
}

char *sub_100029494(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, void *);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *__dst;
  void (*v60)(char *, char *, void *);
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_1005486F0);
    v6 = sub_10000B4C8(&qword_1005486F0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(char *, char *, void *))(v8 + 32);
      v9(a1, a2, (void *)v7);
      v10 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v63 = (void *)v7;
      v60 = v9;
      v9(&a1[v11], &a2[v11], (void *)v7);
      v14 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
      *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
      *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
      v12[v14[7]] = v13[v14[7]];
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      a1[v10[6]] = a2[v10[6]];
      v15 = v10[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = (int *)type metadata accessor for WidgetMusicItem(0);
      v19 = *((_QWORD *)v18 - 1);
      v61 = v8;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_10000B4C8(&qword_100548310);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v21 = v63;
      }
      else
      {
        v58 = v19;
        v62 = a3;
        v22 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v22;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        v23 = v18[7];
        v24 = &v16[v23];
        v25 = &v17[v23];
        v26 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
        *(_OWORD *)&v16[v18[9]] = *(_OWORD *)&v17[v18[9]];
        *(_OWORD *)&v16[v18[10]] = *(_OWORD *)&v17[v18[10]];
        *(_OWORD *)&v16[v18[11]] = *(_OWORD *)&v17[v18[11]];
        *(_OWORD *)&v16[v18[12]] = *(_OWORD *)&v17[v18[12]];
        *(_OWORD *)&v16[v18[13]] = *(_OWORD *)&v17[v18[13]];
        *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
        v16[v18[15]] = v17[v18[15]];
        v27 = v18[16];
        __dst = &v16[v27];
        v28 = &v17[v27];
        v29 = sub_10000B4C8(&qword_100547B50);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 10, v29))
        {
          v31 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          a3 = v62;
          v21 = v63;
        }
        else
        {
          v56 = v30;
          v57 = v29;
          v32 = type metadata accessor for Playlist.Variant(0);
          v55 = *(_QWORD *)(v32 - 8);
          v21 = v63;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v28, 1, v32))
          {
            v33 = sub_10000B4C8(&qword_100548358);
            v34 = __dst;
            memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 32))(__dst, v28, v32);
            v34 = __dst;
            (*(void (**)(void))(v55 + 56))();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v34, 0, 10, v57);
          a3 = v62;
        }
        *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
        *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
        *(_QWORD *)&v16[v18[19]] = *(_QWORD *)&v17[v18[19]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v58 + 56))(v16, 0, 1, v18);
      }
      v35 = v10[8];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v60(v36, v37, v21);
        v60(&v36[*(int *)(v38 + 20)], &v37[*(int *)(v38 + 20)], v21);
        v41 = *(int *)(v38 + 24);
        v64 = &v36[v41];
        v42 = &v37[v41];
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v61 + 48))(v42, 1, v21))
        {
          v43 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v64, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v60(v64, v42, v21);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v61 + 56))(v64, 0, 1, v21);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
      *(_OWORD *)&a1[v10[10]] = *(_OWORD *)&a2[v10[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v44 = *(int *)(a3 + 20);
    v45 = &a1[v44];
    v46 = &a2[v44];
    sub_100011694((uint64_t)&a1[v44], &qword_100547EE0);
    v47 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v45, v46, v48);
      swift_storeEnumTagMultiPayload(v45, v47, 1);
    }
    else
    {
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    v49 = *(int *)(a3 + 24);
    v50 = &a1[v49];
    v51 = &a2[v49];
    sub_100011694((uint64_t)&a1[v49], &qword_1005486F8);
    v52 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v51, v52) == 1)
    {
      v53 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload(v50, v52, 1);
    }
    else
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100029A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100029A88);
}

uint64_t sub_100029A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_10000B4C8(&qword_100548730);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10000B4C8(&qword_1005484F8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_10000B4C8(&qword_100548738);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100029B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100029B38);
}

uint64_t sub_100029B38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_10000B4C8(&qword_100548730);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_1005484F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_100548738);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100029BE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_10002E8E4(319, &qword_1005487A8, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_1005487B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

unint64_t sub_100029CD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_1005487E8;
  if (!qword_1005487E8)
  {
    v1 = sub_100011650(&qword_1005486E8);
    v3[0] = type metadata accessor for RecommendationsWidgetContentView(255);
    v3[1] = sub_10001254C(&qword_100548718, type metadata accessor for RecommendationsWidgetContentView, (uint64_t)&unk_10042530C);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    v2[1] = sub_100012324(&qword_1005487F0, &qword_100548720, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005487E8);
  }
  return result;
}

uint64_t sub_100029D90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482198, 1);
}

uint64_t sub_100029DA0@<X0>(uint64_t a1@<X8>)
{
  return sub_100021C9C(a1);
}

unint64_t sub_100029DA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548828;
  if (!qword_100548828)
  {
    v1 = sub_100011650(&qword_100548800);
    v2[0] = sub_100012324(&qword_100548830, &qword_1005487F8, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548828);
  }
  return result;
}

unint64_t sub_100029E2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548838;
  if (!qword_100548838)
  {
    v1 = sub_100011650(&qword_100548820);
    v2[0] = sub_100029E98();
    v2[1] = sub_100029F1C();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548838);
  }
  return result;
}

unint64_t sub_100029E98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548840;
  if (!qword_100548840)
  {
    v1 = sub_100011650(&qword_100548848);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_10001254C((unint64_t *)&qword_100548850, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548840);
  }
  return result;
}

unint64_t sub_100029F1C()
{
  unint64_t result;

  result = qword_100548858;
  if (!qword_100548858)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LinearGradient, &type metadata for LinearGradient);
    atomic_store(result, (unint64_t *)&qword_100548858);
  }
  return result;
}

uint64_t sub_100029F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;
  char *v11;
  int *v12;
  _QWORD *v13;
  int *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);

  v1 = type metadata accessor for RecommendationsWidgetContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for Date(0);
    v33 = *(_QWORD *)(v8 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v9(v0 + v4, v8);
    v10 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v11 = (char *)v6 + v10[5];
    v34 = (void (*)(char *, uint64_t))v9;
    v9((uint64_t)v11, v8);
    v12 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[8]]);
    v13 = (_QWORD *)((char *)v6 + v10[7]);
    v14 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      v32 = v5;
      swift_bridgeObjectRelease(v13[1]);
      swift_bridgeObjectRelease(v13[3]);
      swift_bridgeObjectRelease(v13[5]);
      v15 = (char *)v13 + v14[7];
      v16 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[14]));
      v17 = (char *)v13 + v14[16];
      v18 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 10, v18))
      {
        v19 = type metadata accessor for Playlist.Variant(0);
        v30 = *(_QWORD *)(v19 - 8);
        v31 = v19;
        if (!(*(unsigned int (**)(char *, uint64_t))(v30 + 48))(v17, 1))
          (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[19]));
      v5 = v32;
    }
    v20 = (char *)v6 + v10[8];
    v21 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
    {
      v34(v20, v8);
      v34(&v20[*(int *)(v21 + 20)], v8);
      v22 = &v20[*(int *)(v21 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v22, 1, v8))
        v34(v22, v8);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v10[10] + 8));
  }
  else
  {
    swift_release(*v6);
  }
  v23 = (_QWORD *)((char *)v6 + *(int *)(v1 + 20));
  v24 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  }
  else
  {
    swift_release(*v23);
  }
  v26 = (_QWORD *)((char *)v6 + *(int *)(v1 + 24));
  v27 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
  }
  else
  {
    swift_release(*v26);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10002A350@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RecommendationsWidgetContentView(0) - 8) + 80);
  return sub_1000214A0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 48) & ~v5), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

unint64_t sub_10002A3A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005488A8;
  if (!qword_1005488A8)
  {
    v1 = sub_100011650(&qword_100548898);
    v2[0] = &protocol witness table for Int;
    v2[1] = sub_10002A410();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> Range<A>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005488A8);
  }
  return result;
}

unint64_t sub_10002A410()
{
  unint64_t result;

  result = qword_1005488B0;
  if (!qword_1005488B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1005488B0);
  }
  return result;
}

uint64_t sub_10002A454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;
  char *v11;
  int *v12;
  _QWORD *v13;
  int *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);

  v1 = type metadata accessor for RecommendationsWidgetContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for Date(0);
    v33 = *(_QWORD *)(v8 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v9(v0 + v4, v8);
    v10 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v11 = (char *)v6 + v10[5];
    v34 = (void (*)(char *, uint64_t))v9;
    v9((uint64_t)v11, v8);
    v12 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[8]]);
    v13 = (_QWORD *)((char *)v6 + v10[7]);
    v14 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      v32 = v5;
      swift_bridgeObjectRelease(v13[1]);
      swift_bridgeObjectRelease(v13[3]);
      swift_bridgeObjectRelease(v13[5]);
      v15 = (char *)v13 + v14[7];
      v16 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[14]));
      v17 = (char *)v13 + v14[16];
      v18 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 10, v18))
      {
        v19 = type metadata accessor for Playlist.Variant(0);
        v30 = *(_QWORD *)(v19 - 8);
        v31 = v19;
        if (!(*(unsigned int (**)(char *, uint64_t))(v30 + 48))(v17, 1))
          (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v13 + v14[19]));
      v5 = v32;
    }
    v20 = (char *)v6 + v10[8];
    v21 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
    {
      v34(v20, v8);
      v34(&v20[*(int *)(v21 + 20)], v8);
      v22 = &v20[*(int *)(v21 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v22, 1, v8))
        v34(v22, v8);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v10[10] + 8));
  }
  else
  {
    swift_release(*v6);
  }
  v23 = (_QWORD *)((char *)v6 + *(int *)(v1 + 20));
  v24 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  }
  else
  {
    swift_release(*v23);
  }
  v26 = (_QWORD *)((char *)v6 + *(int *)(v1 + 24));
  v27 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
  }
  else
  {
    swift_release(*v26);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10002A83C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RecommendationsWidgetContentView(0) - 8) + 80);
  return sub_100021634(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 56) & ~v5), a2);
}

unint64_t sub_10002A894()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005488E0;
  if (!qword_1005488E0)
  {
    v1 = sub_100011650(&qword_1005488D8);
    v2[0] = sub_100012324(&qword_1005488E8, &qword_1005488F0, (const char *)&protocol conformance descriptor for Link<A>);
    v2[1] = sub_10001254C((unint64_t *)&qword_100548850, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005488E0);
  }
  return result;
}

uint64_t sub_10002A930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100021B90(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for SongCellView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100548978, (uint64_t)&nominal type descriptor for SongCellView);
}

uint64_t *sub_10002A95C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void (*v53)(uint64_t *, _QWORD, uint64_t, int *);
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v118;
  void *v119;
  void (*v120)(_QWORD *, _QWORD, uint64_t, int *);
  id v121;
  int *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  uint64_t v170;
  char *__srca;
  void *__srcb;
  char *__src;
  _QWORD *v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *__dst;
  int *__dsta;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v183)(uint64_t *, uint64_t, int *);
  char *v184;
  char *v185;
  int *v186;
  int *v187;
  char *v188;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for WidgetMusicItem(0);
    v8 = *((_QWORD *)v7 - 1);
    v183 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48);
    if (v183(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100548310);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v181 = v8;
      v186 = v6;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      v14 = v7[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for URL(0);
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      v19 = v7[8];
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      v23 = v7[9];
      v24 = (uint64_t *)((char *)a1 + v23);
      v25 = (uint64_t *)((char *)a2 + v23);
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      v27 = v7[10];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = v7[11];
      v32 = (uint64_t *)((char *)a1 + v31);
      v33 = (uint64_t *)((char *)a2 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      v35 = v7[12];
      v36 = (uint64_t *)((char *)a1 + v35);
      v37 = (uint64_t *)((char *)a2 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v39 = v7[13];
      v40 = (uint64_t *)((char *)a1 + v39);
      v41 = (uint64_t *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
      v43 = v7[16];
      __dst = (char *)a1 + v43;
      v44 = (char *)a2 + v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 10, v45))
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v6 = v186;
        v8 = v181;
      }
      else
      {
        v48 = type metadata accessor for Playlist.Variant(0);
        v49 = *(_QWORD *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v44, 1, v48))
        {
          v50 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 16))(__dst, v44, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
        }
        v6 = v186;
        v8 = v181;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 10, v45);
      }
      *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
      v51 = v7[18];
      v52 = *(void **)((char *)a2 + v51);
      *(uint64_t *)((char *)a1 + v51) = (uint64_t)v52;
      *(uint64_t *)((char *)a1 + v7[19]) = *(uint64_t *)((char *)a2 + v7[19]);
      v53 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      v54 = v52;
      swift_bridgeObjectRetain();
      v53(a1, 0, 1, v7);
    }
    v55 = v6[5];
    v56 = (uint64_t *)((char *)a1 + v55);
    v57 = (uint64_t *)((char *)a2 + v55);
    v58 = sub_10000B4C8(&qword_1005486F0);
    if (swift_getEnumCaseMultiPayload((char *)v57, v58) == 1)
    {
      v178 = v58;
      v182 = v8;
      v187 = v6;
      v59 = type metadata accessor for Date(0);
      v177 = *(_QWORD *)(v59 - 8);
      v60 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
      v60((char *)v56, (char *)v57, v59);
      v61 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
      v62 = v61[5];
      v63 = (char *)v56 + v62;
      v64 = (char *)v57 + v62;
      v175 = v60;
      v176 = v59;
      v60((char *)v56 + v62, (char *)v57 + v62, v59);
      v65 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
      v66 = v65[5];
      v67 = &v63[v66];
      v68 = &v64[v66];
      v70 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      *(_QWORD *)v67 = v70;
      *((_QWORD *)v67 + 1) = v69;
      v71 = v65[6];
      v72 = &v63[v71];
      v73 = &v64[v71];
      v74 = *((_QWORD *)v73 + 1);
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *((_QWORD *)v72 + 1) = v74;
      v63[v65[7]] = v64[v65[7]];
      *(_QWORD *)&v63[v65[8]] = *(_QWORD *)&v64[v65[8]];
      *((_BYTE *)v56 + v61[6]) = *((_BYTE *)v57 + v61[6]);
      __dsta = v61;
      v75 = v61[7];
      v76 = (_QWORD *)((char *)v56 + v75);
      v77 = (_QWORD *)((char *)v57 + v75);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v183(v77, 1, v7))
      {
        v78 = sub_10000B4C8(&qword_100548310);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        v6 = v187;
      }
      else
      {
        v81 = v77[1];
        *v76 = *v77;
        v76[1] = v81;
        v82 = v77[3];
        v76[2] = v77[2];
        v76[3] = v82;
        v83 = v77[5];
        v76[4] = v77[4];
        v76[5] = v83;
        v84 = v7[7];
        v184 = (char *)v76 + v84;
        __srca = (char *)v77 + v84;
        v174 = v56;
        v85 = type metadata accessor for URL(0);
        v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v168(v184, __srca, v85);
        v86 = v7[8];
        v87 = (_QWORD *)((char *)v76 + v86);
        v88 = (_QWORD *)((char *)v77 + v86);
        v89 = v88[1];
        *v87 = *v88;
        v87[1] = v89;
        v90 = v7[9];
        v91 = (_QWORD *)((char *)v76 + v90);
        v92 = (_QWORD *)((char *)v77 + v90);
        __srcb = (void *)v92[1];
        *v91 = *v92;
        v91[1] = __srcb;
        v93 = v7[10];
        v94 = (_QWORD *)((char *)v76 + v93);
        v95 = (_QWORD *)((char *)v77 + v93);
        v169 = v95[1];
        *v94 = *v95;
        v94[1] = v169;
        v96 = v7[11];
        v97 = (_QWORD *)((char *)v76 + v96);
        v98 = (_QWORD *)((char *)v77 + v96);
        v167 = v98[1];
        *v97 = *v98;
        v97[1] = v167;
        v99 = v7[12];
        v100 = (_QWORD *)((char *)v76 + v99);
        v101 = (_QWORD *)((char *)v77 + v99);
        v102 = v101[1];
        *v100 = *v101;
        v100[1] = v102;
        v103 = v7[13];
        v104 = (_QWORD *)((char *)v76 + v103);
        v105 = (_QWORD *)((char *)v77 + v103);
        v106 = v105[1];
        *v104 = *v105;
        v104[1] = v106;
        *(_QWORD *)((char *)v76 + v7[14]) = *(_QWORD *)((char *)v77 + v7[14]);
        *((_BYTE *)v76 + v7[15]) = *((_BYTE *)v77 + v7[15]);
        v107 = v7[16];
        v185 = (char *)v76 + v107;
        v108 = (char *)v77 + v107;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v109 = sub_10000B4C8(&qword_100547B50);
        v110 = *(_QWORD *)(v109 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 10, v109))
        {
          v111 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(v185, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          v6 = v187;
        }
        else
        {
          v112 = type metadata accessor for Playlist.Variant(0);
          v113 = *(_QWORD *)(v112 - 8);
          v170 = v112;
          __src = v108;
          v114 = (*(uint64_t (**)(char *, uint64_t))(v113 + 48))(v108, 1);
          v6 = v187;
          if (v114)
          {
            v115 = sub_10000B4C8(&qword_100548358);
            v116 = v185;
            memcpy(v185, __src, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v185, __src, v170);
            v117 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56);
            v116 = v185;
            v117(v185, 0, 1, v170);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v116, 0, 10, v109);
        }
        *(_QWORD *)((char *)v76 + v7[17]) = *(_QWORD *)((char *)v77 + v7[17]);
        v118 = v7[18];
        v119 = *(void **)((char *)v77 + v118);
        *(_QWORD *)((char *)v76 + v118) = v119;
        *(_QWORD *)((char *)v76 + v7[19]) = *(_QWORD *)((char *)v77 + v7[19]);
        v120 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v182 + 56);
        v121 = v119;
        swift_bridgeObjectRetain();
        v120(v76, 0, 1, v7);
        v56 = v174;
      }
      v122 = __dsta;
      v123 = __dsta[8];
      v124 = (char *)v56 + v123;
      v125 = (char *)v57 + v123;
      v126 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v127 = *(_QWORD *)(v126 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
      {
        v128 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        v58 = v178;
      }
      else
      {
        v175(v124, v125, v176);
        v175(&v124[*(int *)(v126 + 20)], &v125[*(int *)(v126 + 20)], v176);
        v129 = *(int *)(v126 + 24);
        v188 = &v124[v129];
        v130 = &v125[v129];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v130, 1, v176))
        {
          v131 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v188, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          v175(v188, v130, v176);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v188, 0, 1, v176);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
        v58 = v178;
        v122 = __dsta;
      }
      v132 = v122[9];
      v133 = *(void **)((char *)v57 + v132);
      *(_QWORD *)((char *)v56 + v132) = v133;
      v134 = v122[10];
      v135 = (_QWORD *)((char *)v56 + v134);
      v136 = (_QWORD *)((char *)v57 + v134);
      v137 = v136[1];
      *v135 = *v136;
      v135[1] = v137;
      v138 = v133;
      swift_bridgeObjectRetain();
      v80 = 1;
    }
    else
    {
      v79 = *v57;
      *v56 = *v57;
      swift_retain(v79);
      v80 = 0;
    }
    swift_storeEnumTagMultiPayload((char *)v56, v58, v80);
    v139 = v6[6];
    v140 = (uint64_t *)((char *)a1 + v139);
    v141 = (uint64_t *)((char *)a2 + v139);
    v142 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v141, v142) == 1)
    {
      v143 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v140, v141, v143);
      v144 = v140;
      v145 = v142;
      v146 = 1;
    }
    else
    {
      v147 = *v141;
      *v140 = *v141;
      swift_retain(v147);
      v144 = v140;
      v145 = v142;
      v146 = 0;
    }
    swift_storeEnumTagMultiPayload(v144, v145, v146);
    v148 = v6[7];
    v149 = (uint64_t *)((char *)a1 + v148);
    v150 = (uint64_t *)((char *)a2 + v148);
    v151 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v150, v151) == 1)
    {
      v152 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v149, v150, v152);
      v153 = v149;
      v154 = v151;
      v155 = 1;
    }
    else
    {
      v156 = *v150;
      *v149 = *v150;
      swift_retain(v156);
      v153 = v149;
      v154 = v151;
      v155 = 0;
    }
    swift_storeEnumTagMultiPayload(v153, v154, v155);
    v157 = v6[8];
    v158 = (uint64_t *)((char *)a1 + v157);
    v159 = (uint64_t *)((char *)a2 + v157);
    v160 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v159, v160) == 1)
    {
      v161 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v158, v159, v161);
      v162 = v158;
      v163 = v160;
      v164 = 1;
    }
    else
    {
      v165 = *v159;
      *v158 = *v159;
      swift_retain(v165);
      v162 = v158;
      v163 = v160;
      v164 = 0;
    }
    swift_storeEnumTagMultiPayload(v162, v163, v164);
  }
  return a1;
}

double sub_10002B358(char *a1, int *a2)
{
  int *v4;
  unsigned int (*v5)(char *, uint64_t, int *);
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  int *v16;
  char *v17;
  int *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  double result;
  uint64_t v38;
  uint64_t v39;

  v4 = (int *)type metadata accessor for WidgetMusicItem(0);
  v5 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48);
  if (!v5(a1, 1, v4))
  {
    swift_bridgeObjectRelease(*((_QWORD *)a1 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)a1 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)a1 + 5));
    v6 = &a1[v4[7]];
    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[8] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[9] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[10] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[11] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[12] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[13] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[14]]);
    v8 = &a1[v4[16]];
    v9 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 10, v9))
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
        (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[19]]);
  }
  v12 = &a1[a2[5]];
  v13 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for Date(0);
    v39 = *(_QWORD *)(v14 - 8);
    v15 = *(void (**)(char *, uint64_t))(v39 + 8);
    v15(v12, v14);
    v16 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v17 = &v12[v16[5]];
    v15(v17, v14);
    v18 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[8]]);
    v19 = &v12[v16[7]];
    if (!v5(v19, 1, v4))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 5));
      v20 = &v19[v4[7]];
      v21 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[9] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[10] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[11] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[12] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[13] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[14]]);
      v22 = &v19[v4[16]];
      v23 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 10, v23))
      {
        v24 = type metadata accessor for Playlist.Variant(0);
        v38 = *(_QWORD *)(v24 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v22, 1, v24))
          (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v24);
      }

      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[19]]);
    }
    v25 = &v12[v16[8]];
    v26 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
    {
      v15(v25, v14);
      v15(&v25[*(int *)(v26 + 20)], v14);
      v27 = &v25[*(int *)(v26 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v27, 1, v14))
        v15(v27, v14);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&v12[v16[10] + 8]);
  }
  else
  {
    swift_release(*(_QWORD *)v12);
  }
  v28 = &a1[a2[6]];
  v29 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload((char *)v28, v29) == 1)
  {
    v30 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))((char *)v28, v30);
  }
  else
  {
    swift_release(*v28);
  }
  v31 = &a1[a2[7]];
  v32 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload((char *)v31, v32) == 1)
  {
    v33 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))((char *)v31, v33);
  }
  else
  {
    swift_release(*v31);
  }
  v34 = &a1[a2[8]];
  v35 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload((char *)v34, v35) == 1)
  {
    v36 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))((char *)v34, v36);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v34).n128_u64[0];
  }
  return result;
}

_QWORD *sub_10002B888(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void (*v51)(_QWORD *, _QWORD, uint64_t, int *);
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  void (*v115)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v116;
  void *v117;
  void (*v118)(char *, _QWORD, uint64_t, int *);
  id v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  char *__dst;
  char *__dsta;
  uint64_t v179;
  uint64_t v180;
  unsigned int (*__src)(char *, uint64_t, int *);
  char *__srcb;
  char *__srca;
  int *v184;
  int *v185;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  __src = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (__src((char *)a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v179 = v7;
    v184 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = v6[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = v6[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[9];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v6[10];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v6[11];
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v6[12];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v6[13];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v41 = v6[16];
    __dst = (char *)a1 + v41;
    v42 = (char *)a2 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_10000B4C8(&qword_100547B50);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 10, v43))
    {
      v45 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      a3 = v184;
      v7 = v179;
    }
    else
    {
      v46 = type metadata accessor for Playlist.Variant(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v42, 1, v46))
      {
        v48 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v42, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      a3 = v184;
      v7 = v179;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 10, v43);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v49 = v6[18];
    v50 = *(void **)((char *)a2 + v49);
    *(_QWORD *)((char *)a1 + v49) = v50;
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    v51 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56);
    v52 = v50;
    swift_bridgeObjectRetain();
    v51(a1, 0, 1, v6);
  }
  v53 = a3[5];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
  {
    v185 = a3;
    v175 = v56;
    v180 = v7;
    v57 = type metadata accessor for Date(0);
    v174 = *(_QWORD *)(v57 - 8);
    v58 = *(void (**)(char *, char *, uint64_t))(v174 + 16);
    v58(v54, v55, v57);
    v59 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v60 = v59[5];
    v61 = &v54[v60];
    v62 = &v55[v60];
    v172 = v58;
    v173 = v57;
    v58(&v54[v60], &v55[v60], v57);
    v63 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v64 = v63[5];
    v65 = &v61[v64];
    v66 = &v62[v64];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = v68;
    *((_QWORD *)v65 + 1) = v67;
    v69 = v63[6];
    v70 = &v61[v69];
    v71 = &v62[v69];
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    v61[v63[7]] = v62[v63[7]];
    *(_QWORD *)&v61[v63[8]] = *(_QWORD *)&v62[v63[8]];
    v54[v59[6]] = v55[v59[6]];
    v176 = v59;
    v73 = v59[7];
    v74 = &v54[v73];
    v75 = &v55[v73];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dsta = v54;
    if (__src(v75, 1, v6))
    {
      v76 = sub_10000B4C8(&qword_100548310);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      v79 = *((_QWORD *)v75 + 1);
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v79;
      v80 = *((_QWORD *)v75 + 3);
      *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
      *((_QWORD *)v74 + 3) = v80;
      v81 = *((_QWORD *)v75 + 5);
      *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
      *((_QWORD *)v74 + 5) = v81;
      v82 = v6[7];
      __srcb = &v74[v82];
      v170 = &v75[v82];
      v83 = type metadata accessor for URL(0);
      v167 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v167(__srcb, v170, v83);
      v84 = v6[8];
      v85 = &v74[v84];
      v86 = &v75[v84];
      v87 = *((_QWORD *)v86 + 1);
      *(_QWORD *)v85 = *(_QWORD *)v86;
      *((_QWORD *)v85 + 1) = v87;
      v88 = v6[9];
      v89 = &v74[v88];
      v90 = &v75[v88];
      v168 = *((_QWORD *)v90 + 1);
      *(_QWORD *)v89 = *(_QWORD *)v90;
      *((_QWORD *)v89 + 1) = v168;
      v91 = v6[10];
      v92 = &v74[v91];
      v93 = &v75[v91];
      v166 = *((_QWORD *)v93 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v166;
      v94 = v6[11];
      v95 = &v74[v94];
      v96 = &v75[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v6[12];
      v99 = &v74[v98];
      v100 = &v75[v98];
      v101 = *((_QWORD *)v100 + 1);
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *((_QWORD *)v99 + 1) = v101;
      v102 = v6[13];
      v103 = &v74[v102];
      v104 = &v75[v102];
      v105 = *((_QWORD *)v104 + 1);
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = v105;
      *(_QWORD *)&v74[v6[14]] = *(_QWORD *)&v75[v6[14]];
      v74[v6[15]] = v75[v6[15]];
      v106 = v6[16];
      v171 = &v74[v106];
      __srca = &v75[v106];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v107 = sub_10000B4C8(&qword_100547B50);
      v108 = *(_QWORD *)(v107 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(__srca, 10, v107))
      {
        v109 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v171, __srca, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        v110 = v180;
      }
      else
      {
        v111 = type metadata accessor for Playlist.Variant(0);
        v112 = *(_QWORD *)(v111 - 8);
        v169 = v111;
        v110 = v180;
        if ((*(unsigned int (**)(char *, uint64_t))(v112 + 48))(__srca, 1))
        {
          v113 = sub_10000B4C8(&qword_100548358);
          v114 = v171;
          memcpy(v171, __srca, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v171, __srca, v169);
          v115 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56);
          v114 = v171;
          v115(v171, 0, 1, v169);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v114, 0, 10, v107);
      }
      *(_QWORD *)&v74[v6[17]] = *(_QWORD *)&v75[v6[17]];
      v116 = v6[18];
      v117 = *(void **)&v75[v116];
      *(_QWORD *)&v74[v116] = v117;
      *(_QWORD *)&v74[v6[19]] = *(_QWORD *)&v75[v6[19]];
      v118 = *(void (**)(char *, _QWORD, uint64_t, int *))(v110 + 56);
      v119 = v117;
      swift_bridgeObjectRetain();
      v118(v74, 0, 1, v6);
      v54 = __dsta;
    }
    v120 = v176;
    v121 = v176[8];
    v122 = &v54[v121];
    v123 = &v55[v121];
    v124 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v125 = *(_QWORD *)(v124 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
    {
      v126 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      v54 = __dsta;
      v56 = v175;
      a3 = v185;
    }
    else
    {
      v172(v122, v123, v173);
      v172(&v122[*(int *)(v124 + 20)], &v123[*(int *)(v124 + 20)], v173);
      v127 = *(int *)(v124 + 24);
      v128 = &v122[v127];
      v129 = &v123[v127];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v129, 1, v173))
      {
        v130 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      else
      {
        v172(v128, v129, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v128, 0, 1, v173);
      }
      a3 = v185;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
      v120 = v176;
      v54 = __dsta;
      v56 = v175;
    }
    v131 = v120[9];
    v132 = *(void **)&v55[v131];
    *(_QWORD *)&v54[v131] = v132;
    v133 = v120[10];
    v134 = &v54[v133];
    v135 = &v55[v133];
    v136 = *((_QWORD *)v135 + 1);
    *(_QWORD *)v134 = *(_QWORD *)v135;
    *((_QWORD *)v134 + 1) = v136;
    v137 = v132;
    swift_bridgeObjectRetain();
    v78 = 1;
  }
  else
  {
    v77 = *(_QWORD *)v55;
    *(_QWORD *)v54 = *(_QWORD *)v55;
    swift_retain(v77);
    v78 = 0;
  }
  swift_storeEnumTagMultiPayload(v54, v56, v78);
  v138 = a3[6];
  v139 = (_QWORD *)((char *)a1 + v138);
  v140 = (_QWORD *)((char *)a2 + v138);
  v141 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v140, v141) == 1)
  {
    v142 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v139, v140, v142);
    v143 = v139;
    v144 = v141;
    v145 = 1;
  }
  else
  {
    v146 = *v140;
    *v139 = *v140;
    swift_retain(v146);
    v143 = v139;
    v144 = v141;
    v145 = 0;
  }
  swift_storeEnumTagMultiPayload(v143, v144, v145);
  v147 = a3[7];
  v148 = (_QWORD *)((char *)a1 + v147);
  v149 = (_QWORD *)((char *)a2 + v147);
  v150 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v149, v150) == 1)
  {
    v151 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v148, v149, v151);
    v152 = v148;
    v153 = v150;
    v154 = 1;
  }
  else
  {
    v155 = *v149;
    *v148 = *v149;
    swift_retain(v155);
    v152 = v148;
    v153 = v150;
    v154 = 0;
  }
  swift_storeEnumTagMultiPayload(v152, v153, v154);
  v156 = a3[8];
  v157 = (_QWORD *)((char *)a1 + v156);
  v158 = (_QWORD *)((char *)a2 + v156);
  v159 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v158, v159) == 1)
  {
    v160 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v157, v158, v160);
    v161 = v157;
    v162 = v159;
    v163 = 1;
  }
  else
  {
    v164 = *v158;
    *v157 = *v158;
    swift_retain(v164);
    v161 = v157;
    v162 = v159;
    v163 = 0;
  }
  swift_storeEnumTagMultiPayload(v161, v162, v163);
  return a1;
}

_QWORD *sub_10002C258(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD *, uint64_t, int *);
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, int *);
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  void *v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  int *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void (*v157)(_QWORD *, _QWORD, uint64_t, int *);
  id v158;
  int *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  id v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v203;
  void (*v204)(char *, char *, uint64_t);
  char *v205;
  uint64_t v206;
  void (*v207)(char *, char *, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *__dst;
  int *__dsta;
  uint64_t v213;
  uint64_t v214;
  unsigned int (*v215)(_QWORD *, uint64_t, int *);
  char *v216;
  char *v217;
  int *v218;
  int *v219;
  int *v220;
  char *v221;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v215 = v8;
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v213 = v7;
      v218 = a3;
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      v11 = v6[7];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for URL(0);
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      v16 = v6[8];
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (_QWORD *)((char *)a2 + v16);
      *v17 = *v18;
      v17[1] = v18[1];
      v19 = v6[9];
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      *v20 = *v21;
      v20[1] = v21[1];
      v22 = v6[10];
      v23 = (_QWORD *)((char *)a1 + v22);
      v24 = (_QWORD *)((char *)a2 + v22);
      *v23 = *v24;
      v23[1] = v24[1];
      v25 = v6[11];
      v26 = (_QWORD *)((char *)a1 + v25);
      v27 = (_QWORD *)((char *)a2 + v25);
      *v26 = *v27;
      v26[1] = v27[1];
      v28 = v6[12];
      v29 = (_QWORD *)((char *)a1 + v28);
      v30 = (_QWORD *)((char *)a2 + v28);
      *v29 = *v30;
      v29[1] = v30[1];
      v31 = v6[13];
      v32 = (_QWORD *)((char *)a1 + v31);
      v33 = (_QWORD *)((char *)a2 + v31);
      *v32 = *v33;
      v32[1] = v33[1];
      *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
      *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
      v34 = v6[16];
      __dst = (char *)a1 + v34;
      v35 = (char *)a2 + v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = sub_10000B4C8(&qword_100547B50);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
      {
        v38 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        a3 = v218;
        v7 = v213;
      }
      else
      {
        v84 = type metadata accessor for Playlist.Variant(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v35, 1, v84))
        {
          v86 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dst, v35, v84);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
        }
        a3 = v218;
        v7 = v213;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 10, v36);
      }
      *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
      v88 = v6[18];
      v89 = *(void **)((char *)a2 + v88);
      *(_QWORD *)((char *)a1 + v88) = v89;
      *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
      v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56);
      v91 = v89;
      swift_bridgeObjectRetain();
      v90(a1, 0, 1, v6);
      if (a1 == a2)
        return a1;
      goto LABEL_29;
    }
    goto LABEL_7;
  }
  if (!v10)
  {
    v219 = a3;
    *a1 = *a2;
    v40 = a1[1];
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    a1[2] = a2[2];
    v41 = a1[3];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v41);
    a1[4] = a2[4];
    v42 = a1[5];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v42);
    v43 = v6[7];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
    v47 = v6[8];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (_QWORD *)((char *)a2 + v47);
    *v48 = *v49;
    v50 = v48[1];
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v50);
    v51 = v6[9];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    *v52 = *v53;
    v54 = v52[1];
    v52[1] = v53[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v54);
    v55 = v6[10];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)a2 + v55);
    *v56 = *v57;
    v58 = v56[1];
    v56[1] = v57[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v59 = v6[11];
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    *v60 = *v61;
    v62 = v60[1];
    v60[1] = v61[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v62);
    v63 = v6[12];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    *v64 = *v65;
    v66 = v64[1];
    v64[1] = v65[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v66);
    v67 = v6[13];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    *v68 = *v69;
    v70 = v68[1];
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v70);
    v71 = v6[14];
    v72 = *(_QWORD *)((char *)a1 + v71);
    *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v73 = v6[16];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = sub_10000B4C8(&qword_100547B50);
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    v79 = v78(v74, 10, v76);
    v80 = v78(v75, 10, v76);
    if (v79)
    {
      if (!v80)
      {
        v81 = type metadata accessor for Playlist.Variant(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81))
        {
          v83 = sub_10000B4C8(&qword_100548358);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v74, v75, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v74, 0, 1, v81);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 10, v76);
LABEL_28:
        a3 = v219;
        *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
        v97 = v6[18];
        v98 = *(void **)((char *)a1 + v97);
        v99 = *(void **)((char *)a2 + v97);
        *(_QWORD *)((char *)a1 + v97) = v99;
        v100 = v99;

        v101 = v6[19];
        v102 = *(_QWORD *)((char *)a1 + v101);
        *(_QWORD *)((char *)a1 + v101) = *(_QWORD *)((char *)a2 + v101);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v102);
        if (a1 == a2)
          return a1;
        goto LABEL_29;
      }
    }
    else
    {
      if (!v80)
      {
        v92 = type metadata accessor for Playlist.Variant(0);
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
        v95 = v94(v74, 1, v92);
        v96 = v94(v75, 1, v92);
        if (v95)
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v74, v75, v92);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v74, 0, 1, v92);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v74, v75, v92);
            goto LABEL_28;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v92);
        }
        v87 = sub_10000B4C8(&qword_100548358);
LABEL_18:
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        goto LABEL_28;
      }
      sub_100011694((uint64_t)v74, &qword_100547B50);
    }
    v87 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_18;
  }
  sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
LABEL_7:
  v39 = sub_10000B4C8(&qword_100548310);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  if (a1 == a2)
    return a1;
LABEL_29:
  v103 = a3[5];
  v104 = (_QWORD *)((char *)a1 + v103);
  v105 = (_QWORD *)((char *)a2 + v103);
  sub_100011694((uint64_t)a1 + v103, &qword_1005486F0);
  v106 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload((char *)v105, v106) == 1)
  {
    v214 = v7;
    v220 = a3;
    v210 = v106;
    v107 = type metadata accessor for Date(0);
    v209 = *(_QWORD *)(v107 - 8);
    v108 = v104;
    v109 = *(void (**)(char *, char *, uint64_t))(v209 + 16);
    v109((char *)v108, (char *)v105, v107);
    v110 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v111 = v110[5];
    v112 = (char *)v108 + v111;
    v113 = (char *)v105 + v111;
    v207 = v109;
    v208 = v107;
    v109((char *)v108 + v111, (char *)v105 + v111, v107);
    v104 = v108;
    v114 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v115 = v114[5];
    v116 = &v112[v115];
    v117 = &v113[v115];
    *(_QWORD *)v116 = *(_QWORD *)v117;
    *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
    v118 = v114[6];
    v119 = &v112[v118];
    v120 = &v113[v118];
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
    v112[v114[7]] = v113[v114[7]];
    *(_QWORD *)&v112[v114[8]] = *(_QWORD *)&v113[v114[8]];
    *((_BYTE *)v108 + v110[6]) = *((_BYTE *)v105 + v110[6]);
    __dsta = v110;
    v121 = v110[7];
    v122 = (_QWORD *)((char *)v108 + v121);
    v123 = (_QWORD *)((char *)v105 + v121);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v215(v123, 1, v6))
    {
      v124 = sub_10000B4C8(&qword_100548310);
      memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      a3 = v220;
    }
    else
    {
      *v122 = *v123;
      v122[1] = v123[1];
      v122[2] = v123[2];
      v122[3] = v123[3];
      v122[4] = v123[4];
      v122[5] = v123[5];
      v127 = v6[7];
      v216 = (char *)v122 + v127;
      v205 = (char *)v123 + v127;
      v128 = type metadata accessor for URL(0);
      v204 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v204(v216, v205, v128);
      v129 = v6[8];
      v130 = (_QWORD *)((char *)v122 + v129);
      v131 = (_QWORD *)((char *)v123 + v129);
      *v130 = *v131;
      v130[1] = v131[1];
      v132 = v6[9];
      v133 = (_QWORD *)((char *)v122 + v132);
      v134 = (_QWORD *)((char *)v123 + v132);
      *v133 = *v134;
      v133[1] = v134[1];
      v135 = v6[10];
      v136 = (_QWORD *)((char *)v122 + v135);
      v137 = (_QWORD *)((char *)v123 + v135);
      *v136 = *v137;
      v136[1] = v137[1];
      v138 = v6[11];
      v139 = (_QWORD *)((char *)v122 + v138);
      v140 = (_QWORD *)((char *)v123 + v138);
      *v139 = *v140;
      v139[1] = v140[1];
      v141 = v6[12];
      v142 = (_QWORD *)((char *)v122 + v141);
      v143 = (_QWORD *)((char *)v123 + v141);
      *v142 = *v143;
      v142[1] = v143[1];
      v144 = v6[13];
      v145 = (_QWORD *)((char *)v122 + v144);
      v146 = (_QWORD *)((char *)v123 + v144);
      *v145 = *v146;
      v145[1] = v146[1];
      *(_QWORD *)((char *)v122 + v6[14]) = *(_QWORD *)((char *)v123 + v6[14]);
      *((_BYTE *)v122 + v6[15]) = *((_BYTE *)v123 + v6[15]);
      v147 = v6[16];
      v217 = (char *)v122 + v147;
      v203 = (char *)v123 + v147;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v148 = sub_10000B4C8(&qword_100547B50);
      v149 = *(_QWORD *)(v148 - 8);
      if ((*(unsigned int (**)(void))(v149 + 48))())
      {
        v150 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v217, v203, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
        a3 = v220;
        v151 = v214;
      }
      else
      {
        v152 = type metadata accessor for Playlist.Variant(0);
        v153 = *(_QWORD *)(v152 - 8);
        v206 = v152;
        if ((*(unsigned int (**)(char *, uint64_t))(v153 + 48))(v203, 1))
        {
          v154 = sub_10000B4C8(&qword_100548358);
          memcpy(v217, v203, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v217, v203, v206);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v217, 0, 1, v206);
        }
        a3 = v220;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v217, 0, 10, v148);
        v151 = v214;
      }
      *(_QWORD *)((char *)v122 + v6[17]) = *(_QWORD *)((char *)v123 + v6[17]);
      v155 = v6[18];
      v156 = *(void **)((char *)v123 + v155);
      *(_QWORD *)((char *)v122 + v155) = v156;
      *(_QWORD *)((char *)v122 + v6[19]) = *(_QWORD *)((char *)v123 + v6[19]);
      v157 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v151 + 56);
      v158 = v156;
      swift_bridgeObjectRetain();
      v157(v122, 0, 1, v6);
    }
    v159 = __dsta;
    v160 = __dsta[8];
    v161 = (char *)v104 + v160;
    v162 = (char *)v105 + v160;
    v163 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v164 = *(_QWORD *)(v163 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163))
    {
      v165 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
      v106 = v210;
    }
    else
    {
      v207(v161, v162, v208);
      v207(&v161[*(int *)(v163 + 20)], &v162[*(int *)(v163 + 20)], v208);
      v166 = *(int *)(v163 + 24);
      v221 = &v161[v166];
      v167 = &v162[v166];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v167, 1, v208))
      {
        v168 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v221, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        v207(v221, v167, v208);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v221, 0, 1, v208);
      }
      v106 = v210;
      v159 = __dsta;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
    }
    v169 = v159[9];
    v170 = *(void **)((char *)v105 + v169);
    *(_QWORD *)((char *)v104 + v169) = v170;
    v171 = v159[10];
    v172 = (_QWORD *)((char *)v104 + v171);
    v173 = (_QWORD *)((char *)v105 + v171);
    *v172 = *v173;
    v172[1] = v173[1];
    v174 = v170;
    swift_bridgeObjectRetain();
    v126 = 1;
  }
  else
  {
    v125 = *v105;
    *v104 = *v105;
    swift_retain(v125);
    v126 = 0;
  }
  swift_storeEnumTagMultiPayload(v104, v106, v126);
  v175 = a3[6];
  v176 = (_QWORD *)((char *)a1 + v175);
  v177 = (_QWORD *)((char *)a2 + v175);
  sub_100011694((uint64_t)a1 + v175, &qword_100547EE0);
  v178 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v177, v178) == 1)
  {
    v179 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v176, v177, v179);
    v180 = v176;
    v181 = v178;
    v182 = 1;
  }
  else
  {
    v183 = *v177;
    *v176 = *v177;
    swift_retain(v183);
    v180 = v176;
    v181 = v178;
    v182 = 0;
  }
  swift_storeEnumTagMultiPayload(v180, v181, v182);
  v184 = a3[7];
  v185 = (_QWORD *)((char *)a1 + v184);
  v186 = (_QWORD *)((char *)a2 + v184);
  sub_100011694((uint64_t)a1 + v184, &qword_100548900);
  v187 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v186, v187) == 1)
  {
    v188 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v185, v186, v188);
    v189 = v185;
    v190 = v187;
    v191 = 1;
  }
  else
  {
    v192 = *v186;
    *v185 = *v186;
    swift_retain(v192);
    v189 = v185;
    v190 = v187;
    v191 = 0;
  }
  swift_storeEnumTagMultiPayload(v189, v190, v191);
  v193 = a3[8];
  v194 = (_QWORD *)((char *)a1 + v193);
  v195 = (_QWORD *)((char *)a2 + v193);
  sub_100011694((uint64_t)a1 + v193, &qword_100548908);
  v196 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v195, v196) == 1)
  {
    v197 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v194, v195, v197);
    v198 = v194;
    v199 = v196;
    v200 = 1;
  }
  else
  {
    v201 = *v195;
    *v194 = *v195;
    swift_retain(v201);
    v198 = v194;
    v199 = v196;
    v200 = 0;
  }
  swift_storeEnumTagMultiPayload(v198, v199, v200);
  return a1;
}

_OWORD *sub_10002D128(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  char *__src;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unsigned int (*__dstb)(char *, uint64_t, int *);
  void *__dst;
  char *__dsta;
  uint64_t v92;
  int *v93;
  int *v94;
  int *v95;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    a1[2] = a2[2];
    v11 = v6[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v15 = v6[16];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_10000B4C8(&qword_100547B50);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 10, v18))
    {
      v20 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v85 = v7;
      v94 = a3;
      v21 = type metadata accessor for Playlist.Variant(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      {
        v23 = sub_10000B4C8(&qword_100548358);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
      }
      a3 = v94;
      v7 = v85;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 10, v18);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v24 = a3[5];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v88 = v27;
    v86 = v7;
    v95 = a3;
    v28 = type metadata accessor for Date(0);
    v84 = *(_QWORD *)(v28 - 8);
    __dstb = (unsigned int (*)(char *, uint64_t, int *))v8;
    v29 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
    v29(v25, v26, v28);
    v30 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v31 = v30[5];
    v32 = &v25[v31];
    v33 = &v26[v31];
    v92 = v28;
    v83 = v29;
    v29(&v25[v31], &v26[v31], v28);
    v34 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    *(_OWORD *)&v32[v34[5]] = *(_OWORD *)&v33[v34[5]];
    *(_OWORD *)&v32[v34[6]] = *(_OWORD *)&v33[v34[6]];
    v32[v34[7]] = v33[v34[7]];
    *(_QWORD *)&v32[v34[8]] = *(_QWORD *)&v33[v34[8]];
    v25[v30[6]] = v26[v30[6]];
    v93 = v30;
    v35 = v30[7];
    v87 = v25;
    v36 = &v25[v35];
    v37 = &v26[v35];
    if (__dstb(&v26[v35], 1, v6))
    {
      v38 = sub_10000B4C8(&qword_100548310);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      v39 = v92;
    }
    else
    {
      v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      v41 = v6[7];
      v42 = &v36[v41];
      v43 = &v37[v41];
      v44 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      *(_OWORD *)&v36[v6[8]] = *(_OWORD *)&v37[v6[8]];
      *(_OWORD *)&v36[v6[9]] = *(_OWORD *)&v37[v6[9]];
      *(_OWORD *)&v36[v6[10]] = *(_OWORD *)&v37[v6[10]];
      *(_OWORD *)&v36[v6[11]] = *(_OWORD *)&v37[v6[11]];
      *(_OWORD *)&v36[v6[12]] = *(_OWORD *)&v37[v6[12]];
      *(_OWORD *)&v36[v6[13]] = *(_OWORD *)&v37[v6[13]];
      *(_QWORD *)&v36[v6[14]] = *(_QWORD *)&v37[v6[14]];
      v36[v6[15]] = v37[v6[15]];
      v45 = v6[16];
      v46 = &v36[v45];
      v47 = &v37[v45];
      v48 = sub_10000B4C8(&qword_100547B50);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 10, v48))
      {
        v50 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v39 = v92;
        v30 = v93;
        v25 = v87;
      }
      else
      {
        v82 = v48;
        __dst = v46;
        v51 = type metadata accessor for Playlist.Variant(0);
        v80 = *(_QWORD *)(v51 - 8);
        __src = v47;
        v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48))(v47, 1, v51);
        v25 = v87;
        v30 = v93;
        if (v52)
        {
          v53 = sub_10000B4C8(&qword_100548358);
          v54 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v80 + 32))(__dst, __src, v51);
          v54 = __dst;
          (*(void (**)(void))(v80 + 56))();
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v54, 0, 10, v82);
        v39 = v92;
      }
      *(_QWORD *)&v36[v6[17]] = *(_QWORD *)&v37[v6[17]];
      *(_QWORD *)&v36[v6[18]] = *(_QWORD *)&v37[v6[18]];
      *(_QWORD *)&v36[v6[19]] = *(_QWORD *)&v37[v6[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v86 + 56))(v36, 0, 1, v6);
    }
    v55 = v30[8];
    v56 = &v25[v55];
    v57 = &v26[v55];
    v58 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      a3 = v95;
    }
    else
    {
      v83(v56, v57, v39);
      v83(&v56[*(int *)(v58 + 20)], &v57[*(int *)(v58 + 20)], v39);
      v61 = *(int *)(v58 + 24);
      __dsta = &v56[v61];
      v62 = &v57[v61];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v62, 1, v39))
      {
        v63 = sub_10000B4C8(&qword_1005481F0);
        memcpy(__dsta, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v83(__dsta, v62, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dsta, 0, 1, v92);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      v30 = v93;
      a3 = v95;
    }
    *(_QWORD *)&v25[v30[9]] = *(_QWORD *)&v26[v30[9]];
    *(_OWORD *)&v25[v30[10]] = *(_OWORD *)&v26[v30[10]];
    swift_storeEnumTagMultiPayload(v25, v88, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v64 = a3[6];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
  {
    v68 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v65, v66, v68);
    swift_storeEnumTagMultiPayload(v65, v67, 1);
  }
  else
  {
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  v69 = a3[7];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  v72 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
  {
    v73 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v70, v71, v73);
    swift_storeEnumTagMultiPayload(v70, v72, 1);
  }
  else
  {
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  v74 = a3[8];
  v75 = (char *)a1 + v74;
  v76 = (char *)a2 + v74;
  v77 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v76, v77) == 1)
  {
    v78 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v75, v76, v78);
    swift_storeEnumTagMultiPayload(v75, v77, 1);
  }
  else
  {
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10002D97C(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  _QWORD *v7;
  unsigned int (*v8)(_BYTE *, uint64_t, int *);
  unsigned int v9;
  unsigned int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v150;
  uint64_t v151;
  char *__dst;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  unsigned int (*__src)(_BYTE *, uint64_t, int *);
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  void (**v160)(char *, _QWORD, uint64_t, int *);
  char *v161;
  int *v162;
  int *v163;
  int *v164;
  int *v165;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = (_QWORD *)*((_QWORD *)v6 - 1);
  v8 = (unsigned int (*)(_BYTE *, uint64_t, int *))v7[6];
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      v12 = v6[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
      *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
      *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
      *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
      *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
      *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
      *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
      *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
      v16 = v6[16];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_10000B4C8(&qword_100547B50);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
      {
        v21 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v159 = v7;
        v164 = a3;
        v82 = type metadata accessor for Playlist.Variant(0);
        v83 = *(_QWORD *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v18, 1, v82))
        {
          v84 = sub_10000B4C8(&qword_100548358);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v17, v18, v82);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v17, 0, 1, v82);
        }
        v7 = v159;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
        a3 = v164;
      }
      *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
      *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
      *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
      ((void (*)(_OWORD *, _QWORD, uint64_t, int *))v7[7])(a1, 0, 1, v6);
      if (a1 == a2)
        return a1;
      goto LABEL_32;
    }
    goto LABEL_7;
  }
  if (!v10)
  {
    v158 = v7;
    v163 = a3;
    v23 = *((_QWORD *)a2 + 1);
    v24 = *((_QWORD *)a1 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v23;
    swift_bridgeObjectRelease(v24);
    v25 = *((_QWORD *)a2 + 3);
    v26 = *((_QWORD *)a1 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v25;
    swift_bridgeObjectRelease(v26);
    v27 = *((_QWORD *)a2 + 5);
    v28 = *((_QWORD *)a1 + 5);
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 5) = v27;
    swift_bridgeObjectRelease(v28);
    v29 = v6[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
    v33 = v6[8];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v37 = *v35;
    v36 = v35[1];
    v38 = v34[1];
    *v34 = v37;
    v34[1] = v36;
    swift_bridgeObjectRelease(v38);
    v39 = v6[9];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    v43 = *v41;
    v42 = v41[1];
    v44 = v40[1];
    *v40 = v43;
    v40[1] = v42;
    swift_bridgeObjectRelease(v44);
    v45 = v6[10];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (uint64_t *)((char *)a2 + v45);
    v49 = *v47;
    v48 = v47[1];
    v50 = v46[1];
    *v46 = v49;
    v46[1] = v48;
    swift_bridgeObjectRelease(v50);
    v51 = v6[11];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (uint64_t *)((char *)a2 + v51);
    v55 = *v53;
    v54 = v53[1];
    v56 = v52[1];
    *v52 = v55;
    v52[1] = v54;
    swift_bridgeObjectRelease(v56);
    v57 = v6[12];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (uint64_t *)((char *)a2 + v57);
    v61 = *v59;
    v60 = v59[1];
    v62 = v58[1];
    *v58 = v61;
    v58[1] = v60;
    swift_bridgeObjectRelease(v62);
    v63 = v6[13];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (uint64_t *)((char *)a2 + v63);
    v67 = *v65;
    v66 = v65[1];
    v68 = v64[1];
    *v64 = v67;
    v64[1] = v66;
    swift_bridgeObjectRelease(v68);
    v69 = v6[14];
    v70 = *(_QWORD *)((char *)a1 + v69);
    *(_QWORD *)((char *)a1 + v69) = *(_QWORD *)((char *)a2 + v69);
    swift_bridgeObjectRelease(v70);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v71 = v6[16];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = sub_10000B4C8(&qword_100547B50);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v76(v72, 10, v74);
    v78 = v76(v73, 10, v74);
    if (v77)
    {
      if (!v78)
      {
        v79 = type metadata accessor for Playlist.Variant(0);
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
        {
          v81 = sub_10000B4C8(&qword_100548358);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v72, v73, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
        }
        a3 = v163;
        v7 = v158;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 10, v74);
LABEL_31:
        *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
        v92 = v6[18];
        v93 = *(void **)((char *)a1 + v92);
        *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)((char *)a2 + v92);

        v94 = v6[19];
        v95 = *(_QWORD *)((char *)a1 + v94);
        *(_QWORD *)((char *)a1 + v94) = *(_QWORD *)((char *)a2 + v94);
        swift_bridgeObjectRelease(v95);
        if (a1 == a2)
          return a1;
        goto LABEL_32;
      }
    }
    else
    {
      if (!v78)
      {
        v86 = type metadata accessor for Playlist.Variant(0);
        v87 = *(_QWORD *)(v86 - 8);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
        v89 = v88(v72, 1, v86);
        v90 = v88(v73, 1, v86);
        if (v89)
        {
          a3 = v163;
          v7 = v158;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v72, v73, v86);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v72, 0, 1, v86);
            goto LABEL_31;
          }
        }
        else
        {
          a3 = v163;
          v7 = v158;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v72, v73, v86);
            goto LABEL_31;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v86);
        }
        v91 = sub_10000B4C8(&qword_100548358);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        goto LABEL_31;
      }
      sub_100011694((uint64_t)v72, &qword_100547B50);
    }
    v85 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    a3 = v163;
    v7 = v158;
    goto LABEL_31;
  }
  sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
LABEL_7:
  v22 = sub_10000B4C8(&qword_100548310);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  if (a1 == a2)
    return a1;
LABEL_32:
  v96 = a3[5];
  v97 = (char *)a1 + v96;
  v98 = (char *)a2 + v96;
  sub_100011694((uint64_t)a1 + v96, &qword_1005486F0);
  v99 = sub_10000B4C8(&qword_1005486F0);
  if (swift_getEnumCaseMultiPayload(v98, v99) == 1)
  {
    v156 = v99;
    v160 = v7;
    v165 = a3;
    v100 = type metadata accessor for Date(0);
    v154 = *(_QWORD *)(v100 - 8);
    __src = v8;
    v101 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
    v101(v97, v98, v100);
    v102 = (int *)type metadata accessor for RecommendationsWidgetTimelineProvider.Entry(0);
    v103 = v102[5];
    v104 = &v97[v103];
    v105 = &v98[v103];
    v157 = v100;
    v153 = v101;
    v101(&v97[v103], &v98[v103], v100);
    v106 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    *(_OWORD *)&v104[v106[5]] = *(_OWORD *)&v105[v106[5]];
    *(_OWORD *)&v104[v106[6]] = *(_OWORD *)&v105[v106[6]];
    v104[v106[7]] = v105[v106[7]];
    *(_QWORD *)&v104[v106[8]] = *(_QWORD *)&v105[v106[8]];
    v97[v102[6]] = v98[v102[6]];
    v162 = v102;
    v107 = v102[7];
    v108 = &v97[v107];
    v109 = &v98[v107];
    if (__src(&v98[v107], 1, v6))
    {
      v110 = sub_10000B4C8(&qword_100548310);
      memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      v111 = v157;
    }
    else
    {
      v112 = *((_OWORD *)v109 + 1);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v112;
      *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
      v113 = v6[7];
      v114 = &v108[v113];
      v115 = &v109[v113];
      v116 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      *(_OWORD *)&v108[v6[8]] = *(_OWORD *)&v109[v6[8]];
      *(_OWORD *)&v108[v6[9]] = *(_OWORD *)&v109[v6[9]];
      *(_OWORD *)&v108[v6[10]] = *(_OWORD *)&v109[v6[10]];
      *(_OWORD *)&v108[v6[11]] = *(_OWORD *)&v109[v6[11]];
      *(_OWORD *)&v108[v6[12]] = *(_OWORD *)&v109[v6[12]];
      *(_OWORD *)&v108[v6[13]] = *(_OWORD *)&v109[v6[13]];
      *(_QWORD *)&v108[v6[14]] = *(_QWORD *)&v109[v6[14]];
      v108[v6[15]] = v109[v6[15]];
      v117 = v6[16];
      __dst = &v108[v117];
      v118 = &v109[v117];
      v119 = sub_10000B4C8(&qword_100547B50);
      v120 = *(_QWORD *)(v119 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 10, v119))
      {
        v121 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        v111 = v157;
      }
      else
      {
        v150 = v119;
        v151 = v120;
        v122 = type metadata accessor for Playlist.Variant(0);
        v123 = *(_QWORD *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v118, 1, v122))
        {
          v124 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v118, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))(__dst, v118, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dst, 0, 1, v122);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v151 + 56))(__dst, 0, 10, v150);
        v111 = v157;
      }
      *(_QWORD *)&v108[v6[17]] = *(_QWORD *)&v109[v6[17]];
      *(_QWORD *)&v108[v6[18]] = *(_QWORD *)&v109[v6[18]];
      *(_QWORD *)&v108[v6[19]] = *(_QWORD *)&v109[v6[19]];
      (*((void (**)(char *, _QWORD, uint64_t, int *))v160 + 7))(v108, 0, 1, v6);
    }
    v125 = v162[8];
    v126 = &v97[v125];
    v127 = &v98[v125];
    v128 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v129 = *(_QWORD *)(v128 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
    {
      v130 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      a3 = v165;
    }
    else
    {
      v153(v126, v127, v111);
      v153(&v126[*(int *)(v128 + 20)], &v127[*(int *)(v128 + 20)], v111);
      v131 = *(int *)(v128 + 24);
      v161 = &v126[v131];
      v132 = &v127[v131];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v132, 1, v111))
      {
        v133 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v161, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        v153(v161, v132, v157);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v161, 0, 1, v157);
      }
      a3 = v165;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
    }
    *(_QWORD *)&v97[v162[9]] = *(_QWORD *)&v98[v162[9]];
    *(_OWORD *)&v97[v162[10]] = *(_OWORD *)&v98[v162[10]];
    swift_storeEnumTagMultiPayload(v97, v156, 1);
  }
  else
  {
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  v134 = a3[6];
  v135 = (char *)a1 + v134;
  v136 = (char *)a2 + v134;
  sub_100011694((uint64_t)a1 + v134, &qword_100547EE0);
  v137 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v136, v137) == 1)
  {
    v138 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v135, v136, v138);
    swift_storeEnumTagMultiPayload(v135, v137, 1);
  }
  else
  {
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
  }
  v139 = a3[7];
  v140 = (char *)a1 + v139;
  v141 = (char *)a2 + v139;
  sub_100011694((uint64_t)a1 + v139, &qword_100548900);
  v142 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v141, v142) == 1)
  {
    v143 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v140, v141, v143);
    swift_storeEnumTagMultiPayload(v140, v142, 1);
  }
  else
  {
    memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
  }
  v144 = a3[8];
  v145 = (char *)a1 + v144;
  v146 = (char *)a2 + v144;
  sub_100011694((uint64_t)a1 + v144, &qword_100548908);
  v147 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v146, v147) == 1)
  {
    v148 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v145, v146, v148);
    swift_storeEnumTagMultiPayload(v145, v147, 1);
  }
  else
  {
    memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10002E58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002E598);
}

uint64_t sub_10002E598(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_10000B4C8(&qword_100548310);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10000B4C8(&qword_100548730);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_10000B4C8(&qword_1005484F8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v15 = sub_10000B4C8(&qword_100548910);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          v8 = sub_10000B4C8(&qword_100548918);
          v12 = *(_QWORD *)(v8 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10002E68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002E698);
}

uint64_t sub_10002E698(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_10000B4C8(&qword_100548310);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_100548730);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_10000B4C8(&qword_1005484F8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v17 = sub_10000B4C8(&qword_100548910);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          v10 = sub_10000B4C8(&qword_100548918);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10002E794(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[5];

  sub_10002E8E4(319, (unint64_t *)&qword_1005483C8, type metadata accessor for WidgetMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, &qword_1005487A8, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10002E8E4(319, &qword_100548988, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v12[3] = *(_QWORD *)(v8 - 8) + 64;
          sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v11 <= 0x3F)
          {
            v12[4] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 5, v12, a1 + 16);
          }
        }
      }
    }
  }
}

void sub_10002E8E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for HeaderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for HeaderView(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for HeaderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for HeaderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeaderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeaderView()
{
  return &type metadata for HeaderView;
}

unint64_t sub_10002EA78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[4];

  result = qword_1005489D0;
  if (!qword_1005489D0)
  {
    v1 = sub_100011650(&qword_100548810);
    v3[0] = sub_100011650(&qword_100548800);
    v3[1] = sub_100011650(&qword_100548820);
    v3[2] = sub_100029DA8();
    v3[3] = sub_100029E2C();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
    v2[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005489D0);
  }
  return result;
}

uint64_t sub_10002EB48(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482218, 1);
}

uint64_t sub_10002EB58(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004821F0, 1);
}

uint64_t sub_10002EB70(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10002EBA0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10002EBA0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_10002EBB0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001DA20(result, a2, a3 & 1);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

unint64_t sub_10002EBF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548AB0;
  if (!qword_100548AB0)
  {
    v1 = sub_100011650(&qword_100548A68);
    v2[0] = sub_10002EC74();
    v2[1] = sub_100012324(&qword_100548B08, &qword_100548A18, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548AB0);
  }
  return result;
}

unint64_t sub_10002EC74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548AB8;
  if (!qword_100548AB8)
  {
    v1 = sub_100011650(&qword_100548A60);
    v2[0] = sub_10002ECF8();
    v2[1] = sub_100012324(&qword_100548AF8, &qword_100548B00, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548AB8);
  }
  return result;
}

unint64_t sub_10002ECF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548AC0;
  if (!qword_100548AC0)
  {
    v1 = sub_100011650(&qword_100548A58);
    v2[0] = sub_10002ED7C();
    v2[1] = sub_100012324(&qword_100548AE8, &qword_100548AF0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548AC0);
  }
  return result;
}

unint64_t sub_10002ED7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548AC8;
  if (!qword_100548AC8)
  {
    v1 = sub_100011650(&qword_100548A50);
    v2[0] = sub_10002EE00();
    v2[1] = sub_100012324(&qword_100548AE0, &qword_100548A40, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548AC8);
  }
  return result;
}

unint64_t sub_10002EE00()
{
  unint64_t result;
  uint64_t v1;
  void *v2;

  result = qword_100548AD0;
  if (!qword_100548AD0)
  {
    v1 = sub_100011650(&qword_100548AD8);
    v2 = &protocol witness table for Text;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_100548AD0);
  }
  return result;
}

unint64_t sub_10002EE5C()
{
  unint64_t result;

  result = qword_100548B28;
  if (!qword_100548B28)
  {
    result = swift_getWitnessTable(&unk_100425640, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_100548B28);
  }
  return result;
}

unint64_t sub_10002EEA0()
{
  unint64_t result;

  result = qword_100548B30;
  if (!qword_100548B30)
  {
    result = swift_getWitnessTable(&unk_100427840, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_100548B30);
  }
  return result;
}

uint64_t type metadata accessor for FriendsBadgesView(uint64_t a1)
{
  return sub_10001133C(a1, qword_100548C50, (uint64_t)&nominal type descriptor for FriendsBadgesView);
}

uint64_t *sub_10002EEF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    v9 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      v14 = *v8;
      *v7 = *v8;
      swift_retain(v14);
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

double sub_10002EFCC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

_QWORD *sub_10002F044(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  v7 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
    v9 = 1;
  }
  else
  {
    v10 = *v6;
    *v5 = *v6;
    swift_retain(v10);
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v9);
  return a1;
}

uint64_t *sub_10002F0EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    sub_100011694((uint64_t)a1 + v7, &qword_100547EE0);
    v10 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      v13 = *v9;
      *v8 = *v9;
      swift_retain(v13);
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
  }
  return a1;
}

_QWORD *sub_10002F1C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_10002F268(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100011694((uint64_t)a1 + v7, &qword_100547EE0);
    v10 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10002F338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002F344);
}

uint64_t sub_10002F344(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000B4C8(&qword_1005484F8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_10002F3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002F3D0);
}

char *sub_10002F3D0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10000B4C8(&qword_1005484F8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10002F448(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_10002F4D8()
{
  _QWORD v1[2];

  v1[0] = sub_100011650(&qword_1005489E0);
  v1[1] = sub_100012324(&qword_1005489F0, &qword_1005489E0, (const char *)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

unint64_t sub_10002F540()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548C88;
  if (!qword_100548C88)
  {
    v1 = sub_100011650(&qword_100548C90);
    v2[0] = sub_100012324(&qword_100548C98, &qword_100548BC0, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548C88);
  }
  return result;
}

uint64_t sub_10002F5C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482240, 1);
}

uint64_t sub_10002F5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for FriendsBadgesView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10002F684@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FriendsBadgesView(0) - 8) + 80);
  return sub_1000268F4(a1, a2, v3 + ((v7 + 16) & ~v7), a3);
}

uint64_t sub_10002F6D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002F6FC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

unint64_t sub_10002F724()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_100548CD8;
  if (!qword_100548CD8)
  {
    v1 = sub_100011650(&qword_100548CE0);
    v2 = sub_10001254C(&qword_100548CE8, (uint64_t (*)(uint64_t))sub_10002F7A0, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_100548CD8);
  }
  return result;
}

unint64_t sub_10002F7A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548CF0;
  if (!qword_100548CF0)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100548CF0);
  }
  return result;
}

uint64_t sub_10002F7DC()
{
  return sub_10002F800(&qword_100548D00, &qword_100548D08, (uint64_t (*)(void))sub_10002F868, (uint64_t)&protocol witness table for _FrameLayout);
}

uint64_t sub_10002F800(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002F868()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  _QWORD v4[2];
  uint64_t v5;
  unint64_t v6;

  result = qword_100548D10;
  if (!qword_100548D10)
  {
    v1 = sub_100011650(&qword_100548D18);
    v2 = sub_100011650(&qword_100548D20);
    v5 = sub_100011650(&qword_100548D28);
    v6 = sub_10002F92C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v5 = v2;
    v6 = OpaqueTypeConformance2;
    v4[0] = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    v4[1] = &protocol witness table for _ShadowEffect;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_100548D10);
  }
  return result;
}

unint64_t sub_10002F92C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_100548D30;
  if (!qword_100548D30)
  {
    v1 = sub_100011650(&qword_100548D28);
    v2 = sub_10002F990();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> Group<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_100548D30);
  }
  return result;
}

unint64_t sub_10002F990()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548D38;
  if (!qword_100548D38)
  {
    v1 = sub_100011650(&qword_100548D40);
    v2[0] = swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
    v2[1] = sub_100012324(&qword_100548D48, &qword_100548D50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548D38);
  }
  return result;
}

uint64_t sub_10002FA24()
{
  return sub_10002F800(&qword_100548DA0, &qword_100548CB0, (uint64_t (*)(void))sub_10002FA58, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_10002FA58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548DA8;
  if (!qword_100548DA8)
  {
    v1 = sub_100011650(&qword_100548CA8);
    v2[0] = sub_100012324(&qword_100548DB0, &qword_100548CA0, (const char *)&protocol conformance descriptor for ZStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548DA8);
  }
  return result;
}

unint64_t sub_10002FAE8()
{
  unint64_t result;

  result = qword_100548DD0;
  if (!qword_100548DD0)
  {
    result = swift_getWitnessTable(&unk_100425618, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_100548DD0);
  }
  return result;
}

unint64_t sub_10002FB34()
{
  unint64_t result;

  result = qword_100548DD8;
  if (!qword_100548DD8)
  {
    result = swift_getWitnessTable(&unk_1004256D0, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_100548DD8);
  }
  return result;
}

unint64_t sub_10002FB7C()
{
  unint64_t result;

  result = qword_100548DE0;
  if (!qword_100548DE0)
  {
    result = swift_getWitnessTable(&unk_1004256F8, &type metadata for StartPlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_100548DE0);
  }
  return result;
}

uint64_t sub_10002FBC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482284, 1);
}

uint64_t sub_10002FBD0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10002EE5C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10002FC10()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10000D924(v0, qword_100561218);
  sub_10000D78C(v0, (uint64_t)qword_100561218);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000003CLL);
}

uint64_t sub_10002FC70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005477B0 != -1)
    swift_once(&qword_1005477B0, sub_10002FC10);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100561218);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t variable initialization expression of Library.Context.useDownloadedContentOnly()
{
  return 0;
}

uint64_t sub_10002FCF8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10002FD10, 0, 0);
}

uint64_t sub_10002FD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_1005477B8 != -1)
    swift_once(&qword_1005477B8, sub_100030024);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10000D78C(v1, (uint64_t)qword_100548DB8);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "MusicWidgets process should not be performing StartPlaybackAppIntent.", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  static IntentResult.result<>()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002FDFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100030404();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002FE20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002EE5C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for StartPlaybackAppIntent(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s12MusicWidgets22StartPlaybackAppIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for StartPlaybackAppIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for StartPlaybackAppIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartPlaybackAppIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartPlaybackAppIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartPlaybackAppIntent()
{
  return &type metadata for StartPlaybackAppIntent;
}

unint64_t sub_10002FFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548DF0;
  if (!qword_100548DF0)
  {
    v1 = sub_100011650(&qword_100548DF8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_100548DF0);
  }
  return result;
}

uint64_t sub_100030024()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_100548DB8);
  sub_10000D78C(v0, (uint64_t)qword_100548DB8);
  return static Logger.music(_:)(0xD000000000000016, 0x8000000100425710);
}

uint64_t sub_100030084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a3;
  v37 = a4;
  v34 = a1;
  v35 = a2;
  v38 = type metadata accessor for InputConnectionBehavior(0);
  v4 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v33 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100548E00);
  __chkstk_darwin(v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100548E08);
  __chkstk_darwin(v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100548E10);
  __chkstk_darwin(v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  v31 = v15;
  __chkstk_darwin(v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_100548E18);
  v32 = 0x8000000100444850;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v30(v14, 1, 1, v15);
  v19 = type metadata accessor for String.IntentInputOptions(0);
  v39 = 0;
  v40 = 0;
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v29(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v28(v8, 1, 1, v20);
  v21 = enum case for InputConnectionBehavior.default(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v22 = v33;
  v27(v33, enum case for InputConnectionBehavior.default(_:), v38);
  v23 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v18, v14, &v39, v11, v8, v22);
  v26[1] = sub_10000B4C8(&qword_100548E20);
  swift_retain(v23);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL);
  v30(v14, 1, 1, v31);
  v39 = 0;
  v40 = 0;
  v29(v11, 1, 1, v19);
  v28(v8, 1, 1, v20);
  v27(v22, v21, v38);
  v24 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v18, v14, &v39, v11, v8, v22);
  v39 = v34;
  v40 = v35;
  swift_retain(v23);
  swift_retain(v24);
  IntentParameter.wrappedValue.setter(&v39);
  swift_release(v23);
  v39 = v36;
  v40 = v37;
  swift_retain(v23);
  swift_retain(v24);
  IntentParameter.wrappedValue.setter(&v39);
  swift_release_n(v24, 2);
  swift_release_n(v23, 2);
  return v23;
}

uint64_t sub_100030404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v27 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10000B4C8(&qword_100548E00);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100548E08);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100548E10);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_100548E18);
  v26 = 0x8000000100444850;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 1, 1, v11);
  v15 = type metadata accessor for String.IntentInputOptions(0);
  v29 = 0;
  v30 = 0;
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v22(v7, 1, 1, v15);
  v16 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v21(v4, 1, 1, v16);
  v17 = enum case for InputConnectionBehavior.default(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v19 = v27;
  v18(v27, enum case for InputConnectionBehavior.default(_:), v28);
  v23 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v14, v10, &v29, v7, v4, v19);
  sub_10000B4C8(&qword_100548E20);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL);
  v24(v10, 1, 1, v25);
  v29 = 0;
  v30 = 0;
  v22(v7, 1, 1, v15);
  v21(v4, 1, 1, v16);
  v18(v19, v17, v28);
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v14, v10, &v29, v7, v4, v19);
  return v23;
}

uint64_t *sub_1000306FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void (*v54)(uint64_t *, _QWORD, uint64_t, int *);
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v60;
  uint64_t v61;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for WidgetMusicItem(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100548310);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v60 = v8;
      v61 = v6;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      v14 = v7[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for URL(0);
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      v19 = v7[8];
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      v23 = v7[9];
      v24 = (uint64_t *)((char *)a1 + v23);
      v25 = (uint64_t *)((char *)a2 + v23);
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      v27 = v7[10];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = v7[11];
      v32 = (uint64_t *)((char *)a1 + v31);
      v33 = (uint64_t *)((char *)a2 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      v35 = v7[12];
      v36 = (uint64_t *)((char *)a1 + v35);
      v37 = (uint64_t *)((char *)a2 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v39 = v7[13];
      v40 = (uint64_t *)((char *)a1 + v39);
      v41 = (uint64_t *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
      v43 = v7[16];
      __dst = (char *)a1 + v43;
      v44 = (char *)a2 + v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 10, v45))
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v60;
        v6 = v61;
      }
      else
      {
        v49 = type metadata accessor for Playlist.Variant(0);
        v50 = *(_QWORD *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v44, 1, v49))
        {
          v51 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v44, v49);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
        }
        v48 = v60;
        v6 = v61;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 10, v45);
      }
      *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
      v52 = v7[18];
      v53 = *(void **)((char *)a2 + v52);
      *(uint64_t *)((char *)a1 + v52) = (uint64_t)v53;
      *(uint64_t *)((char *)a1 + v7[19]) = *(uint64_t *)((char *)a2 + v7[19]);
      v54 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v48 + 56);
      v55 = v53;
      swift_bridgeObjectRetain();
      v54(a1, 0, 1, v7);
    }
    v56 = *(int *)(v6 + 20);
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    *(_OWORD *)v57 = *(_OWORD *)v58;
    v57[16] = v58[16];
  }
  return a1;
}

uint64_t sub_100030A48(_QWORD *a1)
{
  int *v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (int *)type metadata accessor for WidgetMusicItem(0);
  result = (*(uint64_t (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[5]);
    v4 = (char *)a1 + v2[7];
    v5 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[14]));
    v6 = (char *)a1 + v2[16];
    v7 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 10, v7))
    {
      v8 = type metadata accessor for Playlist.Variant(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    }

    return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[19]));
  }
  return result;
}

_QWORD *sub_100030BD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void (*v52)(_QWORD *, _QWORD, uint64_t, int *);
  id v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *__dst;
  uint64_t v59;
  uint64_t v60;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v59 = v7;
    v60 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = v6[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = v6[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[9];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v6[10];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v6[11];
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v6[12];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v6[13];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v41 = v6[16];
    __dst = (char *)a1 + v41;
    v42 = (char *)a2 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_10000B4C8(&qword_100547B50);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 10, v43))
    {
      v45 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      v46 = v59;
    }
    else
    {
      v47 = type metadata accessor for Playlist.Variant(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v42, 1, v47))
      {
        v49 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(__dst, v42, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
      }
      v46 = v59;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 10, v43);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v50 = v6[18];
    v51 = *(void **)((char *)a2 + v50);
    *(_QWORD *)((char *)a1 + v50) = v51;
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    v52 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v46 + 56);
    v53 = v51;
    swift_bridgeObjectRetain();
    v52(a1, 0, 1, v6);
    a3 = v60;
  }
  v54 = *(int *)(a3 + 20);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *(_OWORD *)v55 = *(_OWORD *)v56;
  v55[16] = v56[16];
  return a1;
}

_QWORD *sub_100030EF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, int *);
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  void *v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  char *__dst;
  uint64_t v109;
  uint64_t v110;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    *a1 = *a2;
    v40 = a1[1];
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    a1[2] = a2[2];
    v41 = a1[3];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v41);
    a1[4] = a2[4];
    v42 = a1[5];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v42);
    v43 = v6[7];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
    v47 = v6[8];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (_QWORD *)((char *)a2 + v47);
    *v48 = *v49;
    v50 = v48[1];
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v50);
    v51 = v6[9];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    *v52 = *v53;
    v54 = v52[1];
    v52[1] = v53[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v54);
    v55 = v6[10];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)a2 + v55);
    *v56 = *v57;
    v58 = v56[1];
    v56[1] = v57[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v59 = v6[11];
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    *v60 = *v61;
    v62 = v60[1];
    v60[1] = v61[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v62);
    v63 = v6[12];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    *v64 = *v65;
    v66 = v64[1];
    v64[1] = v65[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v66);
    v67 = v6[13];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    *v68 = *v69;
    v70 = v68[1];
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v70);
    v71 = v6[14];
    v72 = *(_QWORD *)((char *)a1 + v71);
    *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v73 = v6[16];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = sub_10000B4C8(&qword_100547B50);
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    v79 = v78(v74, 10, v76);
    v80 = v78(v75, 10, v76);
    if (v79)
    {
      if (!v80)
      {
        v81 = type metadata accessor for Playlist.Variant(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81))
        {
          v83 = sub_10000B4C8(&qword_100548358);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v74, v75, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v74, 0, 1, v81);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 10, v76);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v80)
      {
        v92 = type metadata accessor for Playlist.Variant(0);
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
        v95 = v94(v74, 1, v92);
        v96 = v94(v75, 1, v92);
        if (v95)
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v74, v75, v92);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v74, 0, 1, v92);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v74, v75, v92);
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v92);
        }
        v87 = sub_10000B4C8(&qword_100548358);
LABEL_17:
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
LABEL_26:
        *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
        v97 = v6[18];
        v98 = *(void **)((char *)a1 + v97);
        v99 = *(void **)((char *)a2 + v97);
        *(_QWORD *)((char *)a1 + v97) = v99;
        v100 = v99;

        v101 = v6[19];
        v102 = *(_QWORD *)((char *)a1 + v101);
        *(_QWORD *)((char *)a1 + v101) = *(_QWORD *)((char *)a2 + v101);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v102);
        goto LABEL_27;
      }
      sub_100011694((uint64_t)v74, &qword_100547B50);
    }
    v87 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_17;
  }
  if (v10)
  {
LABEL_7:
    v39 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_27;
  }
  v109 = v7;
  v110 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for URL(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = v6[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v19 = v6[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = v6[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = v6[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = v6[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = v6[13];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  v34 = v6[16];
  __dst = (char *)a1 + v34;
  v35 = (char *)a2 + v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = sub_10000B4C8(&qword_100547B50);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
  {
    v38 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    a3 = v110;
  }
  else
  {
    v84 = type metadata accessor for Playlist.Variant(0);
    v85 = *(_QWORD *)(v84 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v35, 1, v84))
    {
      v86 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dst, v35, v84);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
    }
    a3 = v110;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 10, v36);
  }
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v88 = v6[18];
  v89 = *(void **)((char *)a2 + v88);
  *(_QWORD *)((char *)a1 + v88) = v89;
  *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
  v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v109 + 56);
  v91 = v89;
  swift_bridgeObjectRetain();
  v90(a1, 0, 1, v6);
LABEL_27:
  v103 = *(int *)(a3 + 20);
  v104 = (char *)a1 + v103;
  v105 = (char *)a2 + v103;
  v106 = *(_OWORD *)v105;
  v104[16] = v105[16];
  *(_OWORD *)v104 = v106;
  return a1;
}

_OWORD *sub_100031648(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void (*v24)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  void *__dst;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v14 = v6[16];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_10000B4C8(&qword_100547B50);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 10, v17))
    {
      v19 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      __dst = v15;
      v20 = type metadata accessor for Playlist.Variant(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20))
      {
        v22 = sub_10000B4C8(&qword_100548358);
        v23 = __dst;
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v21 + 32))(__dst, v16, v20);
        v24 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56);
        v23 = __dst;
        v24(__dst, 0, 1, v20);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, 0, 10, v17);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v25 = *(int *)(a3 + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  return a1;
}

_QWORD *sub_1000318CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v100;
  uint64_t v101;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v100 = a3;
    v23 = a2[1];
    v24 = a1[1];
    *a1 = *a2;
    a1[1] = v23;
    swift_bridgeObjectRelease(v24);
    v25 = a2[3];
    v26 = a1[3];
    a1[2] = a2[2];
    a1[3] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = a2[5];
    v28 = a1[5];
    a1[4] = a2[4];
    a1[5] = v27;
    swift_bridgeObjectRelease(v28);
    v29 = v6[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
    v33 = v6[8];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v37 = *v35;
    v36 = v35[1];
    v38 = v34[1];
    *v34 = v37;
    v34[1] = v36;
    swift_bridgeObjectRelease(v38);
    v39 = v6[9];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v43 = *v41;
    v42 = v41[1];
    v44 = v40[1];
    *v40 = v43;
    v40[1] = v42;
    swift_bridgeObjectRelease(v44);
    v45 = v6[10];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v49 = *v47;
    v48 = v47[1];
    v50 = v46[1];
    *v46 = v49;
    v46[1] = v48;
    swift_bridgeObjectRelease(v50);
    v51 = v6[11];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v55 = *v53;
    v54 = v53[1];
    v56 = v52[1];
    *v52 = v55;
    v52[1] = v54;
    swift_bridgeObjectRelease(v56);
    v57 = v6[12];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v61 = *v59;
    v60 = v59[1];
    v62 = v58[1];
    *v58 = v61;
    v58[1] = v60;
    swift_bridgeObjectRelease(v62);
    v63 = v6[13];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v67 = *v65;
    v66 = v65[1];
    v68 = v64[1];
    *v64 = v67;
    v64[1] = v66;
    swift_bridgeObjectRelease(v68);
    v69 = v6[14];
    v70 = *(_QWORD *)((char *)a1 + v69);
    *(_QWORD *)((char *)a1 + v69) = *(_QWORD *)((char *)a2 + v69);
    swift_bridgeObjectRelease(v70);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v71 = v6[16];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = sub_10000B4C8(&qword_100547B50);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v76(v72, 10, v74);
    v78 = v76(v73, 10, v74);
    if (v77)
    {
      if (!v78)
      {
        v79 = type metadata accessor for Playlist.Variant(0);
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
        {
          v81 = sub_10000B4C8(&qword_100548358);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v72, v73, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
        }
        a3 = v100;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 10, v74);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v78)
      {
        v86 = type metadata accessor for Playlist.Variant(0);
        v87 = *(_QWORD *)(v86 - 8);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
        v89 = v88(v72, 1, v86);
        v90 = v88(v73, 1, v86);
        if (v89)
        {
          a3 = v100;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v72, v73, v86);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v72, 0, 1, v86);
            goto LABEL_29;
          }
        }
        else
        {
          a3 = v100;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v72, v73, v86);
            goto LABEL_29;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v86);
        }
        v91 = sub_10000B4C8(&qword_100548358);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        goto LABEL_29;
      }
      sub_100011694((uint64_t)v72, &qword_100547B50);
    }
    v85 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    a3 = v100;
LABEL_29:
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v92 = v6[18];
    v93 = *(void **)((char *)a1 + v92);
    *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)((char *)a2 + v92);

    v94 = v6[19];
    v95 = *(_QWORD *)((char *)a1 + v94);
    *(_QWORD *)((char *)a1 + v94) = *(_QWORD *)((char *)a2 + v94);
    swift_bridgeObjectRelease(v95);
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v22 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_30;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  v16 = v6[16];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_10000B4C8(&qword_100547B50);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v101 = a3;
    v82 = type metadata accessor for Playlist.Variant(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v18, 1, v82))
    {
      v84 = sub_10000B4C8(&qword_100548358);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v17, v18, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v17, 0, 1, v82);
    }
    a3 = v101;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
  *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_30:
  v96 = *(int *)(a3 + 20);
  v97 = (char *)a1 + v96;
  v98 = (char *)a2 + v96;
  *(_OWORD *)v97 = *(_OWORD *)v98;
  v97[16] = v98[16];
  return a1;
}

uint64_t sub_100031EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100031EC0);
}

uint64_t sub_100031EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100548310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100031F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100031F0C);
}

uint64_t sub_100031F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100548310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ArtworkView(uint64_t a1)
{
  uint64_t result;

  result = qword_100548E80;
  if (!qword_100548E80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArtworkView);
  return result;
}

void sub_100031F8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100031FFC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100425790;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_100031FFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005483C8)
  {
    v2 = type metadata accessor for WidgetMusicItem(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005483C8);
  }
}

uint64_t sub_100032050(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004822D4, 1);
}

uint64_t sub_100032060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  CFRange v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];

  v2 = v1;
  v57 = a1;
  v3 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100548EB8);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100548EC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100548EC8);
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_10000B4C8(&qword_100548ED0);
  v54 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_10000B4C8(&qword_100548ED8);
  __chkstk_darwin(v55);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000B4C8(&qword_100548EE0);
  __chkstk_darwin(v19);
  v53 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000324C0(v2, (uint64_t)v8);
  sub_100011370(v2, (uint64_t)v5, &qword_100548310);
  v21 = type metadata accessor for WidgetMusicItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v5, 1, v21) == 1)
  {
    sub_100011694((uint64_t)v5, &qword_100548310);
    v22 = 0x3FF0000000000000;
  }
  else
  {
    v22 = *(_QWORD *)&v5[*(int *)(v21 + 68)];
    sub_10000E750((uint64_t)v5, type metadata accessor for WidgetMusicItem);
  }
  sub_100011370((uint64_t)v8, (uint64_t)v11, &qword_100548EB8);
  v23 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v23 = v22;
  *((_WORD *)v23 + 4) = 0;
  sub_100011694((uint64_t)v8, &qword_100548EB8);
  v24 = v2 + *(int *)(type metadata accessor for ArtworkView(0) + 20);
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_BYTE *)(v24 + 16);
  v28 = sub_100033154();
  View.corner(_:)(v25, v26, v27, v9, v28);
  sub_100011694((uint64_t)v11, &qword_100548EC0);
  v30 = static Color.white.getter(v29);
  v31 = Color.opacity(_:)(0.12);
  swift_release(v30);
  v32 = CFRange.init(_:)((__C::_NSRange)(unint64_t)v31);
  v34 = v33;
  v35 = *(_QWORD *)v24;
  v36 = *(_QWORD *)(v24 + 8);
  LOBYTE(v24) = *(_BYTE *)(v24 + 16);
  v58[0] = v9;
  v58[1] = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v58, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v38 = v35;
  v39 = v52;
  View.border(_:corner:)(v32.location, v32.length, v38, v36, v24, v52, OpaqueTypeConformance2, v34);
  v40 = swift_release(v32.location);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v14, v39, v40);
  if (qword_1005477E8 != -1)
    swift_once(&qword_1005477E8, sub_100033E24);
  v41 = qword_100561278;
  v42 = v54;
  v43 = v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v18, v16, v56);
  v44 = v55;
  v45 = &v18[*(int *)(v55 + 36)];
  *(_QWORD *)v45 = v41;
  *(_OWORD *)(v45 + 8) = xmmword_100425760;
  *((_QWORD *)v45 + 3) = 0x4000000000000000;
  v46 = *(void (**)(char *, uint64_t))(v42 + 8);
  swift_retain(v41);
  v46(v16, v43);
  v47 = sub_1000334A4();
  v48 = (uint64_t)v53;
  View.accessibility(hidden:)(1, v44, v47);
  sub_100011694((uint64_t)v18, &qword_100548ED8);
  return sub_100011530(v48, v57, &qword_100548EE0);
}

uint64_t sub_1000324C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t OpaqueTypeConformance2;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  double v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (**v77)@<X0>(uint64_t@<X8>);
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (**v86)@<X0>(uint64_t@<X8>);
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (**v106)@<X0>(uint64_t@<X8>);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;

  v120 = (char *)a1;
  v116 = a2;
  v2 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v2);
  v111 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BlendMode(0);
  v110 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_10000B4C8(&qword_100548F48);
  __chkstk_darwin(v114);
  v8 = (uint64_t *)((char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v115 = sub_10000B4C8(&qword_100548F60);
  v113 = *(_QWORD *)(v115 - 8);
  v9 = __chkstk_darwin(v115);
  v109 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v112 = (char *)&v94 - v11;
  v118 = sub_10000B4C8(&qword_100548F68);
  __chkstk_darwin(v118);
  v119 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_100548D60);
  __chkstk_darwin(v13);
  v99 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Image.ResizingMode(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_10000B4C8(&qword_100548D68);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v98 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_10000B4C8(&qword_100548F30);
  __chkstk_darwin(v97);
  v103 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_10000B4C8(&qword_100548F20);
  v18 = __chkstk_darwin(v107);
  v102 = (uint64_t)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v104 = (uint64_t)&v94 - v20;
  v105 = sub_10000B4C8(&qword_100548F70);
  __chkstk_darwin(v105);
  v106 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v117 = sub_10000B4C8(&qword_100548F10);
  __chkstk_darwin(v117);
  v108 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v23);
  v25 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for WidgetMusicItem(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  v29 = __chkstk_darwin(v26);
  v30 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v32 = (char *)&v94 - v31;
  sub_100011370((uint64_t)v120, (uint64_t)v25, &qword_100548310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_100011694((uint64_t)v25, &qword_100548310);
LABEL_7:
    v34 = v115;
    v35 = v114;
    if (qword_1005477D0 != -1)
      swift_once(&qword_1005477D0, sub_100033BF8);
    v36 = Color.opacity(_:)(0.08);
    v37 = v110;
    (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v6, enum case for BlendMode.plusLighter(_:), v4);
    v38 = (uint64_t)v111;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v111, v6, v4);
    sub_10000D964(v38, (uint64_t)v8 + *(int *)(v35 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    *v8 = v36;
    swift_retain(v36);
    sub_10000E750(v38, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
    swift_release(v36);
    v39 = sub_100033440();
    v40 = v109;
    View.unredacted()(v35, v39);
    sub_100011694((uint64_t)v8, &qword_100548F48);
    v42 = v112;
    v41 = v113;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v40, v34);
    v43 = v119;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v119, v42, v34);
    swift_storeEnumTagMultiPayload(v43, v118, 1);
    v44 = sub_1000332C0();
    v121 = v35;
    v122 = v39;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v121, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    _ConditionalContent<>.init(storage:)(v43, v117, v34, v44, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v34);
  }
  sub_100033568((uint64_t)v25, (uint64_t)v32);
  if (qword_100547848 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v33 = sub_10000D78C(v26, (uint64_t)qword_100561330);
  if ((sub_100038B84((uint64_t)v32, v33) & 1) != 0)
  {
    sub_10000E750((uint64_t)v32, type metadata accessor for WidgetMusicItem);
    goto LABEL_7;
  }
  v47 = *(void **)&v32[*(int *)(v26 + 72)];
  if (v47)
  {
    v120 = v32;
    v48 = v47;
    v49 = Image.init(uiImage:)(v48);
    v50 = v95;
    v51 = v94;
    v52 = v96;
    (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, enum case for Image.ResizingMode.stretch(_:), v96);
    v53 = Image.resizable(capInsets:resizingMode:)(v51, v49, 0.0, 0.0, 0.0, 0.0);
    v54 = swift_release(v49);
    v55 = (*(uint64_t (**)(char *, uint64_t, __n128))(v50 + 8))(v51, v52, v54);
    v56 = (uint64_t)v99;
    static WidgetAccentedRenderingMode.fullColor.getter(v55);
    v57 = type metadata accessor for WidgetAccentedRenderingMode(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
    v58 = v98;
    Image.widgetAccentedRenderingMode(_:)(v56, v53);
    swift_release(v53);
    sub_100011694(v56, &qword_100548D60);
    objc_msgSend(v48, "size");
    v60 = v59;
    objc_msgSend(v48, "size");
    v61 = v100;
    v63 = v60 / v62;
    v64 = (uint64_t)v103;
    v65 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v103, v58, v101);
    v66 = v64 + *(int *)(v97 + 36);
    *(double *)v66 = v63;
    *(_WORD *)(v66 + 8) = 0;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v65);
    v67 = v114;
    v68 = (uint64_t)v108;
    if (qword_1005477E0 != -1)
      swift_once(&qword_1005477E0, sub_100033D88);
    v69 = qword_100561270;
    v70 = swift_retain(qword_100561270);
    v71 = static Edge.Set.all.getter(v70);
    v72 = v102;
    sub_100011370(v64, v102, &qword_100548F30);
    v73 = v107;
    v74 = v72 + *(int *)(v107 + 36);
    *(_QWORD *)v74 = v69;
    *(_BYTE *)(v74 + 8) = v71;
    sub_100011694(v64, &qword_100548F30);
    v75 = v72;
    v76 = v104;
    sub_100011530(v75, v104, &qword_100548F20);
    v77 = v106;
    sub_100011370(v76, (uint64_t)v106, &qword_100548F20);
    swift_storeEnumTagMultiPayload(v77, v105, 0);
    v78 = sub_10000B4C8(&qword_100548D50);
    v79 = sub_100033344();
    v80 = sub_100012324(&qword_100548D48, &qword_100548D50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    _ConditionalContent<>.init(storage:)(v77, v73, v78, v79, v80);

    sub_100011694(v76, &qword_100548F20);
    v32 = v120;
    v81 = v115;
  }
  else
  {
    sub_10000D964((uint64_t)v32, (uint64_t)v30, type metadata accessor for WidgetMusicItem);
    v82 = *(unsigned __int8 *)(v27 + 80);
    v83 = (v82 + 16) & ~v82;
    v84 = swift_allocObject(&unk_1004F9E38, v83 + v28, v82 | 7);
    sub_100033568((uint64_t)v30, v84 + v83);
    v85 = v105;
    v86 = v106;
    *v106 = sub_100033744;
    v86[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v84;
    swift_storeEnumTagMultiPayload(v86, v85, 1);
    v87 = sub_10000B4C8(&qword_100548D50);
    v88 = sub_100033344();
    v89 = sub_100012324(&qword_100548D48, &qword_100548D50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    v68 = (uint64_t)v108;
    _ConditionalContent<>.init(storage:)(v86, v107, v87, v88, v89);
    v81 = v115;
    v67 = v114;
  }
  v90 = v119;
  sub_100011370(v68, v119, &qword_100548F10);
  swift_storeEnumTagMultiPayload(v90, v118, 0);
  v91 = sub_1000332C0();
  v92 = sub_100033440();
  v121 = v67;
  v122 = v92;
  v93 = swift_getOpaqueTypeConformance2(&v121, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
  _ConditionalContent<>.init(storage:)(v90, v117, v81, v91, v93);
  sub_100011694(v68, &qword_100548F10);
  return sub_10000E750((uint64_t)v32, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_100032F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v1 = type metadata accessor for BlendMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100548D78);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100548D80);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100548D88);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WidgetMusicItem(0);
  v16 = GeometryProxy.size.getter(v15);
  ArtworkImage.Placeholder.view(availableSize:)((uint64_t)v11, v16, v17);
  v18 = ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor();
  sub_10000D964(v18, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  v19 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 0, 1, v19);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v20, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.view(availableSize:)>>, 1);
  View.placeholderStyle(_:)((uint64_t)v7, v8, OpaqueTypeConformance2);
  sub_100011694((uint64_t)v7, &qword_100548D78);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for BlendMode.plusLighter(_:), v1);
  v22 = sub_10000B4C8(&qword_100548D90);
  v23 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v26 + *(int *)(v22 + 36), v4, v1);
  sub_100011370((uint64_t)v14, v23, &qword_100548D88);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100011694((uint64_t)v14, &qword_100548D88);
}

unint64_t sub_100033154()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548EE8;
  if (!qword_100548EE8)
  {
    v1 = sub_100011650(&qword_100548EC0);
    v2[0] = sub_1000331C0();
    v2[1] = &protocol witness table for _AspectRatioLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548EE8);
  }
  return result;
}

unint64_t sub_1000331C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_100548EF0;
  if (!qword_100548EF0)
  {
    v1 = sub_100011650(&qword_100548EB8);
    v2 = sub_100033224();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> Group<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_100548EF0);
  }
  return result;
}

unint64_t sub_100033224()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];
  _QWORD v4[2];

  result = qword_100548EF8;
  if (!qword_100548EF8)
  {
    v1 = sub_100011650(&qword_100548F00);
    v2 = sub_1000332C0();
    v4[0] = sub_100011650(&qword_100548F48);
    v4[1] = sub_100033440();
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v3);
    atomic_store(result, (unint64_t *)&qword_100548EF8);
  }
  return result;
}

unint64_t sub_1000332C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548F08;
  if (!qword_100548F08)
  {
    v1 = sub_100011650(&qword_100548F10);
    v2[0] = sub_100033344();
    v2[1] = sub_100012324(&qword_100548D48, &qword_100548D50, (const char *)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548F08);
  }
  return result;
}

unint64_t sub_100033344()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548F18;
  if (!qword_100548F18)
  {
    v1 = sub_100011650(&qword_100548F20);
    v2[0] = sub_1000333C8();
    v2[1] = sub_100012324(&qword_100548F38, &qword_100548F40, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548F18);
  }
  return result;
}

unint64_t sub_1000333C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548F28;
  if (!qword_100548F28)
  {
    v1 = sub_100011650(&qword_100548F30);
    v2[0] = swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
    v2[1] = &protocol witness table for _AspectRatioLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548F28);
  }
  return result;
}

unint64_t sub_100033440()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548F50;
  if (!qword_100548F50)
  {
    v1 = sub_100011650(&qword_100548F48);
    v2[0] = &protocol witness table for Color;
    v2[1] = &protocol witness table for _BlendModeEffect;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548F50);
  }
  return result;
}

unint64_t sub_1000334A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  _QWORD v4[2];
  uint64_t v5;
  unint64_t v6;

  result = qword_100548F58;
  if (!qword_100548F58)
  {
    v1 = sub_100011650(&qword_100548ED8);
    v2 = sub_100011650(&qword_100548EC8);
    v5 = sub_100011650(&qword_100548EC0);
    v6 = sub_100033154();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v5 = v2;
    v6 = OpaqueTypeConformance2;
    v4[0] = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    v4[1] = &protocol witness table for _ShadowEffect;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_100548F58);
  }
  return result;
}

uint64_t sub_100033568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000335AC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for WidgetMusicItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 40));
  v7 = v0 + v4 + v1[7];
  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[14]));
  v9 = v0 + v4 + v1[16];
  v10 = sub_10000B4C8(&qword_100547B50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }

  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[19]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100033744@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WidgetMusicItem(0);
  return sub_100032F08(a1);
}

unint64_t sub_100033794()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548F78;
  if (!qword_100548F78)
  {
    v1 = sub_100011650(&qword_100548EE0);
    v2[0] = sub_1000334A4();
    v2[1] = sub_100033800();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548F78);
  }
  return result;
}

unint64_t sub_100033800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548850;
  if (!qword_100548850)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, (unint64_t *)&qword_100548850);
  }
  return result;
}

uint64_t sub_100033848()
{
  uint64_t v0;

  v0 = sub_10000B4C8(&qword_100548F88);
  return TupleWidget.init(_:)(v0, v0);
}

int main(int argc, const char **argv, const char **envp)
{
  sub_1000338B0();
  static WidgetBundle.main()();
  return 0;
}

unint64_t sub_1000338B0()
{
  unint64_t result;

  result = qword_100548F80;
  if (!qword_100548F80)
  {
    result = swift_getWitnessTable("UF\r", &type metadata for MusicWidgetBundle);
    atomic_store(result, (unint64_t *)&qword_100548F80);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicWidgetBundle()
{
  return &type metadata for MusicWidgetBundle;
}

uint64_t sub_100033904(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482378, 1);
}

unint64_t sub_100033918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548F90;
  if (!qword_100548F90)
  {
    v1 = sub_100011650(&qword_100548F98);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for TupleWidget<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100548F90);
  }
  return result;
}

uint64_t sub_100033964(uint64_t a1)
{
  return sub_1000347DC(a1, (uint64_t)sub_100033980, (uint64_t)&unk_1004F9ED8, &qword_100561230);
}

id sub_100033980(void *a1)
{
  if (objc_msgSend(a1, "userInterfaceStyle") == (id)2)
    return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.980392157, 0.176470588, 0.282352941, 1.0);
  else
    return objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
}

double sub_1000339F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  double result;
  _QWORD aBlock[5];
  uint64_t v13;

  v0 = type metadata accessor for BlendMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100548AA0);
  sub_10000D924(v4, qword_100561238);
  v5 = (char *)sub_10000D78C(v4, (uint64_t)qword_100561238);
  v6 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100033B74;
  v13 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100034978;
  aBlock[3] = &unk_1004F9F00;
  v7 = _Block_copy(aBlock);
  v8 = objc_msgSend(v6, "initWithDynamicProvider:", v7);
  _Block_release(v7);
  swift_release(v13);
  v9 = Color.init(_:)(v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for BlendMode.plusLighter(_:), v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v5[*(int *)(v4 + 36)], v3, v0);
  *(_QWORD *)v5 = v9;
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_retain(v9);
  v10(v3, v0);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

id sub_100033B74(void *a1)
{
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = objc_allocWithZone((Class)UIColor);
  if (v1 == (id)2)
  {
    v3 = 0.980392157;
    v4 = 0.176470588;
    v5 = 0.282352941;
    v6 = 1.0;
  }
  else
  {
    v3 = 0.921568627;
    v5 = 0.960784314;
    v6 = 0.6;
    v4 = 0.921568627;
  }
  return objc_msgSend(v2, "initWithRed:green:blue:alpha:", v3, v4, v5, v6);
}

uint64_t sub_100033BF8()
{
  uint64_t result;

  result = static Color.white.getter();
  qword_100561250 = result;
  return result;
}

double sub_100033C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  double result;
  uint64_t v13;

  v0 = type metadata accessor for BlendMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Color.RGBColorSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100548AA0);
  sub_10000D924(v8, qword_100561258);
  v9 = (char *)sub_10000D78C(v8, (uint64_t)qword_100561258);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
  v10 = Color.init(_:red:green:blue:opacity:)(v7, 0.921568627, 0.921568627, 0.960784314, 0.6);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for BlendMode.plusLighter(_:), v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v9[*(int *)(v8 + 36)], v3, v0);
  *(_QWORD *)v9 = v10;
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_retain(v10);
  v11(v3, v0);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_100033D88()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin();
  v1 = (char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v2 + 104))(v1, enum case for Color.RGBColorSpace.sRGB(_:));
  result = Color.init(_:red:green:blue:opacity:)(v1, 0.780392157, 0.776470588, 0.803921569, 0.2);
  qword_100561270 = result;
  return result;
}

uint64_t sub_100033E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = static Color.black.getter();
  v1 = Color.opacity(_:)(0.15);
  result = swift_release(v0);
  qword_100561278 = v1;
  return result;
}

double sub_100033E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double result;
  _OWORD v12[2];
  uint64_t v13;

  v0 = sub_10000B4C8(&qword_100549008);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100424BA0;
  if (qword_100547838 != -1)
    swift_once(&qword_100547838, sub_1000347C0);
  v2 = qword_100548FA0;
  *(_QWORD *)(v1 + 32) = qword_100548FA0;
  v3 = qword_100547840;
  v4 = swift_retain(v2);
  if (v3 != -1)
    v4 = swift_once(&qword_100547840, sub_100034938);
  v5 = qword_100548FA8;
  *(_QWORD *)(v1 + 40) = qword_100548FA8;
  *(_QWORD *)&v12[0] = v1;
  specialized Array._endMutation()(v4);
  swift_retain(v5);
  Gradient.init(colors:)(v1);
  v6 = static UnitPoint.top.getter();
  v8 = v7;
  v9 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v12, v6, v8, v9, v10);
  result = *(double *)v12;
  xmmword_100561280 = v12[0];
  *(_OWORD *)algn_100561290 = v12[1];
  qword_1005612A0 = v13;
  return result;
}

uint64_t sub_100033F98()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  unint64_t v18;
  uint64_t OpaqueTypeConformance2;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v0 = sub_10000B4C8(&qword_100548FC8);
  __chkstk_darwin(v0);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_100548FD0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_100548FD8);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100548FC0);
  sub_10000D924(v9, qword_1005612A8);
  v22[1] = sub_10000D78C(v9, (uint64_t)qword_1005612A8);
  v10 = Image.init(_:bundle:)(1702129486, 0xE400000000000000, 0);
  v11 = enum case for Image.TemplateRenderingMode.template(_:);
  v12 = type metadata accessor for Image.TemplateRenderingMode(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v2, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v2, 0, 1, v12);
  v14 = Image.renderingMode(_:)(v2, v10);
  swift_release(v10);
  sub_100011694((uint64_t)v2, &qword_100548FC8);
  if (qword_1005477C0 != -1)
    swift_once(&qword_1005477C0, sub_100033964);
  v15 = qword_100561230;
  KeyPath = swift_getKeyPath(&unk_100425908);
  v24 = v14;
  v25 = KeyPath;
  v26 = v15;
  swift_retain(v15);
  v17 = sub_10000B4C8(&qword_100548FE0);
  v18 = sub_100034D88();
  View.widgetAccentable(_:)(1, v17, v18);
  swift_release(v15);
  swift_release(KeyPath);
  swift_release(v14);
  v24 = v17;
  v25 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  View.accessibility(hidden:)(1, v3, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  v20 = sub_100034E40();
  View.unredacted()(v6, v20);
  return sub_100011694((uint64_t)v8, &qword_100548FD8);
}

double sub_100034248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  double result;
  _OWORD v9[2];
  __int128 v10;

  v0 = sub_10000B4C8(&qword_100548BD0);
  sub_10000D924(v0, qword_1005612C0);
  v1 = sub_10000D78C(v0, (uint64_t)qword_1005612C0);
  if (qword_1005477F8 != -1)
    swift_once(&qword_1005477F8, sub_100033F98);
  v2 = sub_10000B4C8(&qword_100548FC0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_1005612A8);
  v4 = static Alignment.center.getter(v3);
  _FrameLayout.init(width:height:alignment:)(v9, 0x403C000000000000, 0, 0x403C000000000000, 0, v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
  v6 = (_OWORD *)(v1 + *(int *)(v0 + 36));
  v7 = v9[1];
  *v6 = v9[0];
  v6[1] = v7;
  result = *(double *)&v10;
  v6[2] = v10;
  return result;
}

uint64_t sub_10003433C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001004448B0);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "Privacy Acknowledgement Error Message (space constraint)", 56, 2);
  qword_1005612D8 = result;
  unk_1005612E0 = v6;
  return result;
}

uint64_t sub_100034420()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x8000000100444910);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "No Subscription Error Message (space constraint)", 48, 2);
  qword_1005612E8 = result;
  unk_1005612F0 = v6;
  return result;
}

uint64_t sub_100034504()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100444980);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "Offline Error Message (space constraint)", 40, 2);
  qword_1005612F8 = result;
  unk_100561300 = v6;
  return result;
}

uint64_t sub_1000345E8()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100444A40);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "No Listening History Message (space constraint)", 47, 2);
  qword_100561308 = result;
  unk_100561310 = v6;
  return result;
}

uint64_t sub_1000346CC()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000001004449D0);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "New Subscriber With No Recommendations", 38, 2);
  qword_100561318 = result;
  unk_100561320 = v6;
  return result;
}

void sub_1000347B0()
{
  qword_100561328 = 0x4036000000000000;
}

uint64_t sub_1000347C0(uint64_t a1)
{
  return sub_1000347DC(a1, (uint64_t)sub_100034888, (uint64_t)&unk_1004F9F50, &qword_100548FA0);
}

uint64_t sub_1000347DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v7;
  void *v8;
  id v9;
  uint64_t result;
  _QWORD v11[5];
  uint64_t v12;

  v7 = objc_allocWithZone((Class)UIColor);
  v11[4] = a2;
  v12 = 0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100034978;
  v11[3] = a3;
  v8 = _Block_copy(v11);
  v9 = objc_msgSend(v7, "initWithDynamicProvider:", v8);
  _Block_release(v8);
  swift_release(v12);
  result = Color.init(_:)(v9);
  *a4 = result;
  return result;
}

id sub_100034888(void *a1)
{
  return sub_1000348B4(a1, 0.188235294, 0.984313725, 0.360784314, 0.454901961);
}

id sub_1000348B4(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;

  v9 = objc_msgSend(a1, "userInterfaceStyle");
  v10 = objc_allocWithZone((Class)UIColor);
  if (v9 == (id)2)
  {
    v11 = a2;
    v12 = a2;
    v13 = a2;
  }
  else
  {
    v11 = a3;
    v12 = a4;
    v13 = a5;
  }
  return objc_msgSend(v10, "initWithRed:green:blue:alpha:", v11, v12, v13, 1.0);
}

uint64_t sub_100034938(uint64_t a1)
{
  return sub_1000347DC(a1, (uint64_t)sub_100034954, (uint64_t)&unk_1004F9F28, &qword_100548FA8);
}

id sub_100034954(void *a1)
{
  return sub_1000348B4(a1, 0.0784313725, 0.980392157, 0.137254902, 0.231372549);
}

id sub_100034978(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

uint64_t sub_1000349C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000349F0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

double sub_100034A18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  double result;
  char v15;
  uint64_t v16;

  v2 = type metadata accessor for WidgetLocation(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - v7, a1, v2);
  static WidgetLocation.lockScreen.getter(v9);
  v10 = sub_10001254C(&qword_100548FB8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetLocation, (uint64_t)&protocol conformance descriptor for WidgetLocation);
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v10);
  v12 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v13 = v12(v6, v2);
  if ((v11 & 1) != 0)
  {
    v12(v8, v2);
    return 0.0;
  }
  else
  {
    static WidgetLocation.standBy.getter(v13);
    v15 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v10);
    v12(v6, v2);
    v12(v8, v2);
    result = 16.0;
    if ((v15 & 1) != 0)
      return 7.0;
  }
  return result;
}

double sub_100034B64(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for WidgetLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100548FB0);
  v9 = __chkstk_darwin(v8);
  v11 = (unsigned __int8 *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 48)];
  *v11 = a1;
  v13 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 16))(v12, a2, v4);
  static WidgetLocation.lockScreen.getter(v13);
  v14 = sub_10001254C(&qword_100548FB8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetLocation, (uint64_t)&protocol conformance descriptor for WidgetLocation);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v12, v4, v14);
  v16 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v17 = v16(v7, v4);
  if ((v15 & 1) != 0)
  {
    v16((char *)v12, v4);
    return 0.0;
  }
  else
  {
    static WidgetLocation.standBy.getter(v17);
    v19 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v12, v4, v14);
    v20 = v16(v7, v4);
    if ((v19 & 1) != 0)
    {
      v16((char *)v12, v4);
      return 7.0;
    }
    else
    {
      v21 = static Edge.Set.trailing.getter(v20);
      if (v21 == a1
        || (v22 = static Edge.Set.leading.getter(v21), v22 == a1)
        || static Edge.Set.horizontal.getter(v22) == a1)
      {
        v16((char *)v12, v4);
        return 10.0;
      }
      else
      {
        sub_100011694((uint64_t)v11, &qword_100548FB0);
        return 12.0;
      }
    }
  }
}

uint64_t sub_100034D38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100034D60(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_100034D88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100548FE8;
  if (!qword_100548FE8)
  {
    v1 = sub_100011650(&qword_100548FE0);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_100034DF4();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100548FE8);
  }
  return result;
}

unint64_t sub_100034DF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548FF0;
  if (!qword_100548FF0)
  {
    v1 = sub_100011650(&qword_100548FF8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100548FF0);
  }
  return result;
}

unint64_t sub_100034E40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_100549000;
  if (!qword_100549000)
  {
    v1 = sub_100011650(&qword_100548FD8);
    v3[0] = sub_100011650(&qword_100548FE0);
    v3[1] = sub_100034D88();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    v2[1] = sub_10001254C((unint64_t *)&qword_100548850, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549000);
  }
  return result;
}

uint64_t sub_100034EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100034EFC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_100034F1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v45);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v13 = type metadata accessor for URL(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[8];
    v16 = a3[9];
    v17 = (_QWORD *)((char *)v4 + v15);
    v18 = (_QWORD *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)((char *)v4 + v16);
    v21 = (_QWORD *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[10];
    v24 = a3[11];
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)((char *)v4 + v24);
    v29 = (_QWORD *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[12];
    v32 = a3[13];
    v33 = (_QWORD *)((char *)v4 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (_QWORD *)((char *)v4 + v32);
    v37 = (_QWORD *)((char *)a2 + v32);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = a3[15];
    *(_QWORD *)((char *)v4 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    *((_BYTE *)v4 + v39) = *((_BYTE *)a2 + v39);
    v40 = a3[16];
    __dst = (char *)v4 + v40;
    v41 = (char *)a2 + v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = sub_10000B4C8(&qword_100547B50);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 10, v42))
    {
      v44 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v46 = type metadata accessor for Playlist.Variant(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v41, 1, v46))
      {
        v48 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v41, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 10, v42);
    }
    v49 = a3[18];
    *(_QWORD *)((char *)v4 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
    v50 = *(void **)((char *)a2 + v49);
    *(_QWORD *)((char *)v4 + v49) = v50;
    *(_QWORD *)((char *)v4 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
    v51 = v50;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000351C8(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  v4 = (char *)a1 + a2[7];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[14]));
  v6 = (char *)a1 + a2[16];
  v7 = sub_10000B4C8(&qword_100547B50);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 10, v7))
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }

  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[19]));
}

_QWORD *sub_10003531C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = type metadata accessor for URL(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[8];
  v15 = a3[9];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)((char *)a1 + v23);
  v28 = (_QWORD *)((char *)a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[12];
  v31 = a3[13];
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (_QWORD *)((char *)a1 + v31);
  v36 = (_QWORD *)((char *)a2 + v31);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
  v39 = a3[16];
  __dst = (char *)a1 + v39;
  v40 = (char *)a2 + v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = sub_10000B4C8(&qword_100547B50);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
  {
    v43 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = type metadata accessor for Playlist.Variant(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
    {
      v46 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v40, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 10, v41);
  }
  v47 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v48 = *(void **)((char *)a2 + v47);
  *(_QWORD *)((char *)a1 + v47) = v48;
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  v49 = v48;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_10003559C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v16 = v14[1];
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v18[1];
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = a3[10];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v22[1];
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = a3[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v28 = v26[1];
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v28);
  v29 = a3[12];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  *v30 = *v31;
  v32 = v30[1];
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v32);
  v33 = a3[13];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  *v34 = *v35;
  v36 = v34[1];
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v36);
  v37 = a3[14];
  v38 = *(_QWORD *)((char *)a1 + v37);
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v38);
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v39 = a3[16];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_10000B4C8(&qword_100547B50);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 10, v42);
  v46 = v44(v41, 10, v42);
  if (!v45)
  {
    if (!v46)
    {
      v51 = type metadata accessor for Playlist.Variant(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
      v54 = v53(v40, 1, v51);
      v55 = v53(v41, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v40, v41, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v40, 0, 1, v51);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v55)
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 24))(v40, v41, v51);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v51);
      }
      v50 = sub_10000B4C8(&qword_100548358);
      goto LABEL_8;
    }
    sub_100035990((uint64_t)v40);
LABEL_7:
    v50 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_8:
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_14;
  }
  if (v46)
    goto LABEL_7;
  v47 = type metadata accessor for Playlist.Variant(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v41, 1, v47))
  {
    v49 = sub_10000B4C8(&qword_100548358);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v40, v41, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v40, 0, 1, v47);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 10, v42);
LABEL_14:
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v56 = a3[18];
  v57 = *(void **)((char *)a1 + v56);
  v58 = *(void **)((char *)a2 + v56);
  *(_QWORD *)((char *)a1 + v56) = v58;
  v59 = v58;

  v60 = a3[19];
  v61 = *(_QWORD *)((char *)a2 + v60);
  v62 = *(_QWORD *)((char *)a1 + v60);
  *(_QWORD *)((char *)a1 + v60) = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v62);
  return a1;
}

uint64_t sub_100035990(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_100547B50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1000359D0(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[16];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_10000B4C8(&qword_100547B50);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 10, v18))
  {
    v20 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for Playlist.Variant(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
    {
      v23 = sub_10000B4C8(&qword_100548358);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 10, v18);
  }
  v24 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  return a1;
}

_QWORD *sub_100035BAC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = v23[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease(v27);
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  v33 = v29[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease(v33);
  v34 = a3[11];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  v39 = v35[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease(v39);
  v40 = a3[12];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  v45 = v41[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease(v45);
  v46 = a3[13];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  v51 = v47[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease(v51);
  v52 = a3[14];
  v53 = *(_QWORD *)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = *(_QWORD *)((char *)a2 + v52);
  swift_bridgeObjectRelease(v53);
  v54 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_10000B4C8(&qword_100547B50);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 10, v57);
  v61 = v59(v56, 10, v57);
  if (!v60)
  {
    if (!v61)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v69 = v68(v55, 1, v66);
      v70 = v68(v56, 1, v66);
      if (v69)
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v55, v56, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v66);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v55, v56, v66);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v66);
      }
      v65 = sub_10000B4C8(&qword_100548358);
      goto LABEL_8;
    }
    sub_100035990((uint64_t)v55);
LABEL_7:
    v65 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_8:
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_14;
  }
  if (v61)
    goto LABEL_7;
  v62 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v56, 1, v62))
  {
    v64 = sub_10000B4C8(&qword_100548358);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v55, v56, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v55, 0, 1, v62);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 10, v57);
LABEL_14:
  v71 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v72 = *(void **)((char *)a1 + v71);
  *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);

  v73 = a3[19];
  v74 = *(_QWORD *)((char *)a1 + v73);
  *(_QWORD *)((char *)a1 + v73) = *(_QWORD *)((char *)a2 + v73);
  swift_bridgeObjectRelease(v74);
  return a1;
}

uint64_t sub_100035EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100035F00);
}

uint64_t sub_100035F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 64);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100035FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100035FAC);
}

uint64_t sub_100035FAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 64);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for WidgetMusicItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1005490C8;
  if (!qword_1005490C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WidgetMusicItem);
  return result;
}

uint64_t sub_100036084(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[16];

  v5[0] = &unk_100425970;
  v5[1] = &unk_100425988;
  v5[2] = &unk_100425970;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5[3] = *(_QWORD *)(result - 8) + 64;
    v5[4] = &unk_100425988;
    v5[5] = &unk_100425970;
    v5[6] = &unk_100425988;
    v5[7] = &unk_100425970;
    v5[8] = &unk_100425970;
    v5[9] = &unk_100425970;
    v5[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[11] = &unk_1004259A0;
    result = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v4 <= 0x3F)
    {
      v5[12] = *(_QWORD *)(result - 8) + 64;
      v5[13] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[14] = &unk_1004259B8;
      v5[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 16, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100036164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  int *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;

  v34 = (int *)type metadata accessor for WidgetMusicItem(0);
  v35 = v34[18];
  *(_QWORD *)((char *)a9 + v35) = 0;
  *(_QWORD *)((char *)a9 + v34[19]) = _swiftEmptyArrayStorage;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  v36 = (char *)a9 + v34[7];
  v37 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v36, a7, v37);
  sub_10000D964(a11, (uint64_t)a9 + v34[16], type metadata accessor for ArtworkImage.Placeholder);
  *(double *)((char *)a9 + v34[17]) = a10;
  v39 = (_QWORD *)((char *)a9 + v34[8]);
  *v39 = a12;
  v39[1] = a13;
  v40 = (_QWORD *)((char *)a9 + v34[9]);
  *v40 = a14;
  v40[1] = a15;
  v41 = (_QWORD *)((char *)a9 + v34[10]);
  *v41 = a16;
  v41[1] = a17;
  v42 = (_QWORD *)((char *)a9 + v34[11]);
  *v42 = a18;
  v42[1] = a19;
  v43 = (_QWORD *)((char *)a9 + v34[12]);
  *v43 = a20;
  v43[1] = a21;
  v44 = (_QWORD *)((char *)a9 + v34[13]);
  *v44 = a22;
  v44[1] = a23;
  *(_QWORD *)((char *)a9 + v34[14]) = a25;
  *((_BYTE *)a9 + v34[15]) = a26;
  sub_10003645C(a24);
  *(_QWORD *)((char *)a9 + v35) = a8;
  sub_10000E750(a11, type metadata accessor for ArtworkImage.Placeholder);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(a7, v37);
}

_QWORD *sub_10003638C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 76));
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v3 = 0;
    do
    {
      v4 = v1 + 8 * v3;
      v5 = *(void **)(v4 + 32);
      if (v5 == (void *)1)
        v6 = 0;
      else
        v6 = *(_QWORD *)(v4 + 32);
      ++v3;
      v7 = sub_100039984(v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
      specialized ContiguousArray._endMutation()(v9);
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10003645C(uint64_t a1)
{
  uint64_t v1;
  int64_t v3;
  uint64_t i;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1000383D0(0, v3, 0);
    for (i = 0; i != v3; ++i)
    {
      v5 = *(void **)(a1 + 8 * i + 32);
      v6 = _swiftEmptyArrayStorage[2];
      v7 = _swiftEmptyArrayStorage[3];
      v8 = v5;
      if (v6 >= v7 >> 1)
        sub_1000383D0(v7 > 1, v6 + 1, 1);
      _swiftEmptyArrayStorage[2] = v6 + 1;
      _swiftEmptyArrayStorage[v6 + 4] = v5;
    }
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }
  v9 = *(int *)(type metadata accessor for WidgetMusicItem(0) + 76);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v9));
  *(_QWORD *)(v1 + v9) = _swiftEmptyArrayStorage;
  return result;
}

unint64_t sub_100036564()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  void *object;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  Swift::String v31;
  void *v32;
  Swift::String v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void *v39;
  Swift::String v40;
  void *v41;
  uint64_t *v42;
  void *v43;
  uint64_t v44;
  Swift::String v45;
  void *v46;
  Swift::String v47;
  void *v48;
  uint64_t *v49;
  uint64_t v50;
  void *v51;
  Swift::String v52;
  Swift::String v53;
  void *v54;
  uint64_t *v55;
  void *v56;
  Swift::String v57;
  void *v58;
  Swift::String v59;
  void *v60;
  uint64_t *v61;
  void *v62;
  Swift::String v63;
  void *v64;
  Swift::String v65;
  void *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  Swift::String v73;
  Swift::String v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  Swift::String v78;
  void *v79;
  Swift::String v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  void *v85;
  Swift::String v86;
  Swift::String v88;
  BOOL v89;
  Swift::String v90;
  unint64_t v91;
  unint64_t v92;

  v1 = v0;
  v91 = 0xD000000000000010;
  v92 = 0x8000000100444AC0;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)&v88, "supertitle: \"");
  HIWORD(v88._object) = -4864;
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  v4 = Optional<A>.description.getter(v2, v3);
  v6 = v5;
  swift_bridgeObjectRelease(v3);
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 2108450;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v88._object);
  strcpy((char *)&v88, "title: \"");
  BYTE1(v88._object) = 0;
  WORD1(v88._object) = 0;
  HIDWORD(v88._object) = -402653184;
  v9 = v1[2];
  v10 = (void *)v1[3];
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 2108450;
  v12._object = (void *)0xE300000000000000;
  String.append(_:)(v12);
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v88._object);
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)&v88, "subtitle: \"");
  HIDWORD(v88._object) = -352321536;
  v13 = v1[4];
  v14 = v1[5];
  swift_bridgeObjectRetain();
  v15 = Optional<A>.description.getter(v13, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v14);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 2108450;
  v19._object = (void *)0xE300000000000000;
  String.append(_:)(v19);
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v88._object);
  v20 = (int *)type metadata accessor for WidgetMusicItem(0);
  v21 = type metadata accessor for URL(0);
  v22 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v21, v22);
  object = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(object);
  v25._countAndFlagsBits = 2108450;
  v25._object = (void *)0xE300000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x22203A6C7275;
  v26._object = (void *)0xE600000000000000;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(0xE600000000000000);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)&v90, "artworkImage: ");
  HIBYTE(v90._object) = -18;
  v27 = *(void **)((char *)v1 + v20[18]);
  if (v27)
  {
    objc_msgSend(v27, "size");
  }
  else
  {
    v28 = 0;
    v29 = 0;
  }
  v88._countAndFlagsBits = v28;
  v88._object = v29;
  v89 = v27 == 0;
  v30 = sub_10000B4C8(&qword_1005491E0);
  v31._countAndFlagsBits = String.init<A>(describing:)(&v88, v30);
  v32 = v31._object;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(v32);
  v33._countAndFlagsBits = 8236;
  v33._object = (void *)0xE200000000000000;
  String.append(_:)(v33);
  v34 = v90._object;
  String.append(_:)(v90);
  swift_bridgeObjectRelease(v34);
  strcpy((char *)&v88, "itemID: \"");
  WORD1(v88._object) = 0;
  HIDWORD(v88._object) = -385875968;
  v35 = (_QWORD *)((char *)v1 + v20[8]);
  v36 = *v35;
  v37 = v35[1];
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = MusicItemID.description.getter(v36, v37);
  v39 = v38._object;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v39);
  v40._countAndFlagsBits = 2108450;
  v40._object = (void *)0xE300000000000000;
  String.append(_:)(v40);
  v41 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v41);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v88._object);
  strcpy((char *)&v88, "catalogID: \"");
  BYTE5(v88._object) = 0;
  HIWORD(v88._object) = -5120;
  v42 = (_QWORD *)((char *)v1 + v20[9]);
  v43 = (void *)v42[1];
  v90._countAndFlagsBits = *v42;
  v90._object = v43;
  swift_bridgeObjectRetain();
  v44 = sub_10000B4C8(&qword_1005491E8);
  v45._countAndFlagsBits = String.init<A>(describing:)(&v90, v44);
  v46 = v45._object;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v46);
  v47._countAndFlagsBits = 2108450;
  v47._object = (void *)0xE300000000000000;
  String.append(_:)(v47);
  v48 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v48);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v88._object);
  strcpy((char *)&v88, "siriRepID: \"");
  BYTE5(v88._object) = 0;
  HIWORD(v88._object) = -5120;
  v49 = (_QWORD *)((char *)v1 + v20[10]);
  v50 = *v49;
  v51 = (void *)v49[1];
  swift_bridgeObjectRetain();
  v52._countAndFlagsBits = v50;
  v52._object = v51;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v51);
  v53._countAndFlagsBits = 2108450;
  v53._object = (void *)0xE300000000000000;
  String.append(_:)(v53);
  v54 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v54);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v88._object);
  v88._countAndFlagsBits = 0xD000000000000012;
  v88._object = (void *)0x8000000100444AE0;
  v55 = (_QWORD *)((char *)v1 + v20[11]);
  v56 = (void *)v55[1];
  v90._countAndFlagsBits = *v55;
  v90._object = v56;
  swift_bridgeObjectRetain();
  v57._countAndFlagsBits = String.init<A>(describing:)(&v90, v44);
  v58 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v58);
  v59._countAndFlagsBits = 2108450;
  v59._object = (void *)0xE300000000000000;
  String.append(_:)(v59);
  v60 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v60);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v88._object);
  v88._countAndFlagsBits = 0xD000000000000015;
  v88._object = (void *)0x8000000100444B00;
  v61 = (_QWORD *)((char *)v1 + v20[12]);
  v62 = (void *)v61[1];
  v90._countAndFlagsBits = *v61;
  v90._object = v62;
  swift_bridgeObjectRetain();
  v63._countAndFlagsBits = String.init<A>(describing:)(&v90, v44);
  v64 = v63._object;
  String.append(_:)(v63);
  swift_bridgeObjectRelease(v64);
  v65._countAndFlagsBits = 2108450;
  v65._object = (void *)0xE300000000000000;
  String.append(_:)(v65);
  v66 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v66);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v88._object);
  v88._countAndFlagsBits = 0xD000000000000015;
  v88._object = (void *)0x8000000100444B20;
  v67 = (_QWORD *)((char *)v1 + v20[13]);
  v68 = *v67;
  v69 = v67[1];
  swift_bridgeObjectRetain();
  v70 = Optional<A>.description.getter(v68, v69);
  v72 = v71;
  swift_bridgeObjectRelease(v69);
  v73._countAndFlagsBits = v70;
  v73._object = v72;
  String.append(_:)(v73);
  swift_bridgeObjectRelease(v72);
  v74._countAndFlagsBits = 2108450;
  v74._object = (void *)0xE300000000000000;
  String.append(_:)(v74);
  v75 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v75);
  strcpy((char *)&v88, "badges: \"");
  WORD1(v88._object) = 0;
  HIDWORD(v88._object) = -385875968;
  v76 = *(_QWORD *)((char *)v1 + v20[14]);
  v77 = swift_bridgeObjectRetain();
  v78._countAndFlagsBits = Array.description.getter(v77, &type metadata for TextBadge);
  v79 = v78._object;
  String.append(_:)(v78);
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v79);
  v80._countAndFlagsBits = 2108450;
  v80._object = (void *)0xE300000000000000;
  String.append(_:)(v80);
  v81 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v81);
  strcpy((char *)&v88, "isPlayable: ");
  BYTE5(v88._object) = 0;
  HIWORD(v88._object) = -5120;
  if (*((_BYTE *)v1 + v20[15]))
    v82 = 1702195828;
  else
    v82 = 0x65736C6166;
  if (*((_BYTE *)v1 + v20[15]))
    v83 = 0xE400000000000000;
  else
    v83 = 0xE500000000000000;
  v84 = v83;
  String.append(_:)(*(Swift::String *)&v82);
  swift_bridgeObjectRelease(v83);
  v85 = v88._object;
  String.append(_:)(v88);
  swift_bridgeObjectRelease(v85);
  v86._countAndFlagsBits = 41;
  v86._object = (void *)0xE100000000000000;
  String.append(_:)(v86);
  return v91;
}

uint64_t sub_100036D58()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_100547A38);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetMusicItem(0);
  sub_10000D924(v10, qword_100561330);
  v11 = (_QWORD *)sub_10000D78C(v10, (uint64_t)qword_100561330);
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v13 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v14 = sub_10000B4C8(&qword_100547B50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 10, v14);
    v15 = MusicItemID.init(stringLiteral:)(0, 0xE000000000000000);
    return sub_100036164(0x5F5F5F5F5F5F5F5FLL, 0xEC0000005F5F5F5FLL, 0xD000000000000018, 0x8000000100444B40, 0xD000000000000010, 0x8000000100444B60, (uint64_t)v9, (uint64_t)v13, v11, 1.0, (uint64_t)v2, v15, v16, 0, 0, 0, 0xE000000000000000, 0, 0,
             0,
             0,
             0,
             0,
             (uint64_t)_swiftEmptyArrayStorage,
             (uint64_t)_swiftEmptyArrayStorage,
             0);
  }
  return result;
}

uint64_t sub_100036F94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100036FCC + 4 * byte_100425938[a1]))(0x7469747265707573, 0xEA0000000000656CLL);
}

uint64_t sub_100036FCC()
{
  return 0x656C746974;
}

uint64_t sub_100036FE0()
{
  return 0x656C746974627573;
}

uint64_t sub_100036FF8()
{
  return 7107189;
}

uint64_t sub_100037008()
{
  return 0x44496D657469;
}

uint64_t sub_10003701C()
{
  return 0x49676F6C61746163;
}

uint64_t sub_10003704C()
{
  return 0x656E6961746E6F63;
}

unint64_t sub_100037070()
{
  return 0xD000000000000012;
}

unint64_t sub_1000370CC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100037128(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char v44;
  __int128 v45;

  v3 = v1;
  v5 = sub_10000B4C8(&qword_100549198);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_100038044();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WidgetMusicItem.CodingKeys, &type metadata for WidgetMusicItem.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v45) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v45, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    LOBYTE(v45) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v45, v5);
    v16 = v3[4];
    v17 = v3[5];
    LOBYTE(v45) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v45, v5);
    v18 = (int *)type metadata accessor for WidgetMusicItem(0);
    v19 = (char *)v3 + v18[7];
    LOBYTE(v45) = 3;
    v20 = type metadata accessor for URL(0);
    v21 = sub_10001254C(&qword_1005491A0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v45, v5, v20, v21);
    v22 = (uint64_t *)((char *)v3 + v18[8]);
    v24 = *v22;
    v23 = v22[1];
    *(_QWORD *)&v45 = v24;
    *((_QWORD *)&v45 + 1) = v23;
    v44 = 4;
    v25 = sub_100011714();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v45 = *(_OWORD *)((char *)v3 + v18[9]);
    v44 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v26 = (uint64_t *)((char *)v3 + v18[10]);
    v27 = *v26;
    v28 = v26[1];
    LOBYTE(v45) = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v27, v28, &v45, v5);
    v45 = *(_OWORD *)((char *)v3 + v18[11]);
    v44 = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v45 = *(_OWORD *)((char *)v3 + v18[12]);
    v44 = 8;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v29 = (uint64_t *)((char *)v3 + v18[13]);
    v30 = *v29;
    v31 = v29[1];
    LOBYTE(v45) = 9;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v30, v31, &v45, v5);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[14]);
    v44 = 10;
    v32 = sub_10000B4C8(&qword_100549150);
    v33 = sub_100038110(&qword_1005491A8, &qword_100549150, (uint64_t (*)(void))sub_100038198, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, v32, v33);
    v34 = *((unsigned __int8 *)v3 + v18[15]);
    LOBYTE(v45) = 11;
    KeyedEncodingContainer.encode(_:forKey:)(v34, &v45, v5);
    v35 = (char *)v3 + v18[16];
    LOBYTE(v45) = 12;
    v36 = type metadata accessor for ArtworkImage.Placeholder(0);
    v37 = sub_10001254C(&qword_1005491B8, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v35, &v45, v5, v36, v37);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[17]);
    v44 = 13;
    v38 = sub_1000381DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, &type metadata for CGFloat, v38);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[18]);
    v44 = 14;
    v39 = sub_100015980();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, &type metadata for CodableImage, v39);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[19]);
    v44 = 15;
    v40 = sub_10000B4C8(&qword_100549178);
    v41 = sub_100038110(&qword_1005491C8, &qword_100549178, sub_100038220, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, v40, v41);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100037630@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t *v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t *v69;
  __int128 v70;
  char v71;

  v60 = a2;
  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for URL(0);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10000B4C8(&qword_100549138);
  v10 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetMusicItem(0);
  v14 = __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = *(int *)(v14 + 72);
  v68 = (int *)v14;
  *(uint64_t *)((char *)v16 + v67) = 0;
  v17 = *(int *)(v14 + 76);
  v65 = a1;
  v66 = v17;
  v69 = v16;
  *(uint64_t *)((char *)v16 + v17) = (uint64_t)_swiftEmptyArrayStorage;
  v18 = a1[3];
  v19 = a1[4];
  sub_10000D900(a1, v18);
  v20 = sub_100038044();
  v61 = v12;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WidgetMusicItem.CodingKeys, &type metadata for WidgetMusicItem.CodingKeys, v20, v18, v19);
  if (v2)
  {
    v21 = v66;
    v26 = v69;
    sub_100011758(v65);

    return swift_bridgeObjectRelease(*(uint64_t *)((char *)v26 + v21));
  }
  else
  {
    v22 = v9;
    v57 = v4;
    v58 = v6;
    v59 = v10;
    LOBYTE(v70) = 0;
    v23 = v62;
    v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v70, v62);
    v25 = v68;
    v28 = (char *)v69;
    *v69 = v24;
    *((_QWORD *)v28 + 1) = v29;
    LOBYTE(v70) = 1;
    *((_QWORD *)v28 + 2) = KeyedDecodingContainer.decode(_:forKey:)(&v70, v23);
    *((_QWORD *)v28 + 3) = v30;
    LOBYTE(v70) = 2;
    *((_QWORD *)v28 + 4) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v70, v23);
    *((_QWORD *)v28 + 5) = v31;
    LOBYTE(v70) = 3;
    v32 = sub_10001254C(&qword_100549148, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v33 = v22;
    v34 = v22;
    v35 = v64;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v34, v64, &v70, v23, v64, v32);
    (*(void (**)(char *, _QWORD *, uint64_t))(v63 + 32))(&v28[v25[7]], v33, v35);
    v71 = 4;
    v36 = sub_100011778();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v70, &type metadata for MusicItemID, &v71, v23, &type metadata for MusicItemID, v36);
    v37 = *((_QWORD *)&v70 + 1);
    v38 = &v28[v25[8]];
    *(_QWORD *)v38 = v70;
    *((_QWORD *)v38 + 1) = v37;
    v71 = 5;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for MusicItemID, &v71, v23, &type metadata for MusicItemID, v36);
    *(_OWORD *)&v28[v25[9]] = v70;
    LOBYTE(v70) = 6;
    v39 = KeyedDecodingContainer.decode(_:forKey:)(&v70, v23);
    v40 = (uint64_t *)&v28[v25[10]];
    *v40 = v39;
    v40[1] = v41;
    v71 = 7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for MusicItemID, &v71, v23, &type metadata for MusicItemID, v36);
    *(_OWORD *)&v28[v25[11]] = v70;
    v71 = 8;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for MusicItemID, &v71, v23, &type metadata for MusicItemID, v36);
    *(_OWORD *)&v28[v25[12]] = v70;
    LOBYTE(v70) = 9;
    v42 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v70, v23);
    v43 = (uint64_t *)((char *)v69 + v68[13]);
    *v43 = v42;
    v43[1] = v44;
    v45 = sub_10000B4C8(&qword_100549150);
    v71 = 10;
    v46 = sub_100038110(&qword_100549158, &qword_100549150, (uint64_t (*)(void))sub_100038088, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v70, v45, &v71, v62, v45, v46);
    *(uint64_t *)((char *)v69 + v68[14]) = v70;
    LOBYTE(v70) = 11;
    v47 = KeyedDecodingContainer.decode(_:forKey:)(&v70, v62);
    *((_BYTE *)v69 + v68[15]) = v47 & 1;
    LOBYTE(v70) = 12;
    v48 = sub_10001254C(&qword_100549168, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v58, v57, &v70, v62, v57, v48);
    sub_10000DB44((uint64_t)v58, (uint64_t)v69 + v68[16], type metadata accessor for ArtworkImage.Placeholder);
    v71 = 13;
    v49 = sub_1000380CC();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v70, &type metadata for CGFloat, &v71, v62, &type metadata for CGFloat, v49);
    *(uint64_t *)((char *)v69 + v68[17]) = v70;
    v71 = 14;
    v50 = sub_10001593C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v70, &type metadata for CodableImage, &v71, v62, &type metadata for CodableImage, v50);
    *(uint64_t *)((char *)v69 + v67) = v70;
    v51 = sub_10000B4C8(&qword_100549178);
    v71 = 15;
    v52 = sub_100038110(&qword_100549180, &qword_100549178, sub_100038174, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v70, v51, &v71, v62, v51, v52);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v62);
    v53 = (uint64_t)v69;
    v54 = v70;
    v55 = v66;
    swift_bridgeObjectRelease(*(uint64_t *)((char *)v69 + v66));
    *(_QWORD *)(v53 + v55) = v54;
    sub_10000D964(v53, v60, type metadata accessor for WidgetMusicItem);
    sub_100011758(v65);
    return sub_10000E750(v53, type metadata accessor for WidgetMusicItem);
  }
}

uint64_t sub_100037F8C()
{
  unsigned __int8 *v0;

  return sub_100036F94(*v0);
}

uint64_t sub_100037F94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100039320(a1, a2);
  *a3 = result;
  return result;
}

void sub_100037FB8(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_100037FC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100038044();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100037FEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100038044();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100038014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100037630(a1, a2);
}

uint64_t sub_100038028(_QWORD *a1)
{
  return sub_100037128(a1);
}

unint64_t sub_100038044()
{
  unint64_t result;

  result = qword_100549140;
  if (!qword_100549140)
  {
    result = swift_getWitnessTable(&unk_100425B34, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100549140);
  }
  return result;
}

unint64_t sub_100038088()
{
  unint64_t result;

  result = qword_100549160;
  if (!qword_100549160)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TextBadge, &type metadata for TextBadge);
    atomic_store(result, (unint64_t *)&qword_100549160);
  }
  return result;
}

unint64_t sub_1000380CC()
{
  unint64_t result;

  result = qword_100549170;
  if (!qword_100549170)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100549170);
  }
  return result;
}

uint64_t sub_100038110(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), const char *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9 = a3();
    result = swift_getWitnessTable(a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100038174()
{
  return sub_100038110(&qword_100549188, &qword_100549190, (uint64_t (*)(void))sub_10001593C, (const char *)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_100038198()
{
  unint64_t result;

  result = qword_1005491B0;
  if (!qword_1005491B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TextBadge, &type metadata for TextBadge);
    atomic_store(result, (unint64_t *)&qword_1005491B0);
  }
  return result;
}

unint64_t sub_1000381DC()
{
  unint64_t result;

  result = qword_1005491C0;
  if (!qword_1005491C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1005491C0);
  }
  return result;
}

uint64_t sub_100038220()
{
  return sub_100038110(&qword_1005491D0, &qword_100549190, (uint64_t (*)(void))sub_100015980, (const char *)&protocol conformance descriptor for <A> A?);
}

id sub_100038244()
{
  id result;
  void *v1;
  id v2;
  __int128 v3;
  void *v4;
  void *v5;

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleFootnote, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 1);

    v4 = &type metadata for HierarchicalShapeStyle;
    v5 = &protocol witness table for HierarchicalShapeStyle;
    LODWORD(v3) = static HierarchicalShapeStyle.secondary.getter();
    return (id)FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)((uint64_t)v2, &v3, qword_100549010);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10003830C()
{
  id result;
  void *v1;
  id v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  void *v6;

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleCaption2, UIContentSizeCategoryExtraExtraExtraLarge);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 1);

    v5 = &type metadata for HierarchicalShapeStyle;
    v6 = &protocol witness table for HierarchicalShapeStyle;
    LODWORD(v4) = static HierarchicalShapeStyle.secondary.getter(v3);
    return (id)FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)((uint64_t)v2, &v4, qword_100549040);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000383D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000384B8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000383EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000387C4(a1, a2, a3, (_QWORD *)*v3, &qword_1005491F8, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
  *v3 = result;
  return result;
}

uint64_t sub_100038418(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100038640(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100038434(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000387C4(a1, a2, a3, (_QWORD *)*v3, &qword_100549200, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
  *v3 = result;
  return result;
}

uint64_t sub_100038460(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000389A4(a1, a2, a3, (_QWORD *)*v3, &qword_100549218, &qword_100549220);
  *v3 = result;
  return result;
}

uint64_t sub_10003848C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000389A4(a1, a2, a3, (_QWORD *)*v3, &qword_100549208, &qword_100549210);
  *v3 = result;
  return result;
}

uint64_t sub_1000384B8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_1005491F0);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    sub_10000B4C8(&qword_100549190);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100038640(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_100547C28);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v8])
      memmove(v13, v14, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v8] || v13 >= &v14[48 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000387C4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000B4C8(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v21 + 72) * v11;
  v26 = &v23[v25];
  v27 = (unint64_t)&v24[v25];
  if (v24 >= v26 || (unint64_t)v23 >= v27)
  {
    swift_arrayInitWithCopy(v23);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000389A4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000B4C8(a5);
  v14 = *(_QWORD *)(sub_10000B4C8(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(sub_10000B4C8(a6) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v21 + 72) * v11;
  v26 = &v23[v25];
  v27 = (unint64_t)&v24[v25];
  if (v24 >= v26 || (unint64_t)v23 >= v27)
  {
    swift_arrayInitWithCopy(v23);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100038B84(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v53;
  char *v55;
  char *v56;

  v4 = (int *)type metadata accessor for WidgetMusicItem(0);
  v5 = __chkstk_darwin(v4);
  v55 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v56 = (char *)&v55 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v55 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v55 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v55 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v55 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v55 - v22;
  v24 = *(int *)(v21 + 32);
  v25 = *(_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24 + 8);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  if (v25 == *v27 && v26 == v28)
  {
    sub_10000D964(a1, (uint64_t)&v55 - v22, type metadata accessor for WidgetMusicItem);
    sub_10000D964(a2, (uint64_t)v20, type metadata accessor for WidgetMusicItem);
    goto LABEL_15;
  }
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, *v27, v28, 0);
  sub_10000D964(a1, (uint64_t)v23, type metadata accessor for WidgetMusicItem);
  sub_10000D964(a2, (uint64_t)v20, type metadata accessor for WidgetMusicItem);
  if ((v30 & 1) != 0)
  {
LABEL_15:
    sub_10000E750((uint64_t)v20, type metadata accessor for WidgetMusicItem);
    sub_10000E750((uint64_t)v23, type metadata accessor for WidgetMusicItem);
    sub_10000D964(a1, (uint64_t)v14, type metadata accessor for WidgetMusicItem);
    sub_10000D964(a2, (uint64_t)v11, type metadata accessor for WidgetMusicItem);
    goto LABEL_16;
  }
  v31 = v4[9];
  v32 = &v23[v31];
  v33 = *(_QWORD *)&v23[v31 + 8];
  v34 = &v20[v31];
  v35 = *((_QWORD *)v34 + 1);
  if (!v33)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v20, type metadata accessor for WidgetMusicItem);
    if (!v35)
    {
LABEL_46:
      sub_10000DB44((uint64_t)v23, (uint64_t)v17, type metadata accessor for WidgetMusicItem);
      goto LABEL_47;
    }
    swift_bridgeObjectRelease(v35);
LABEL_43:
    sub_10000DB44((uint64_t)v23, (uint64_t)v17, type metadata accessor for WidgetMusicItem);
    goto LABEL_44;
  }
  if (!v35)
  {
    sub_10000E750((uint64_t)v20, type metadata accessor for WidgetMusicItem);
    goto LABEL_43;
  }
  if (*(_QWORD *)v32 == *(_QWORD *)v34 && v33 == v35)
  {
    sub_10000E750((uint64_t)v20, type metadata accessor for WidgetMusicItem);
    goto LABEL_46;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v32, v33, *(_QWORD *)v34, *((_QWORD *)v34 + 1), 0);
  sub_10000E750((uint64_t)v20, type metadata accessor for WidgetMusicItem);
  sub_10000DB44((uint64_t)v23, (uint64_t)v17, type metadata accessor for WidgetMusicItem);
  if ((v37 & 1) == 0)
  {
LABEL_44:
    sub_10000E750((uint64_t)v17, type metadata accessor for WidgetMusicItem);
    sub_10000D964(a1, (uint64_t)v14, type metadata accessor for WidgetMusicItem);
    sub_10000D964(a2, (uint64_t)v11, type metadata accessor for WidgetMusicItem);
LABEL_48:
    sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicItem);
    sub_10000E750((uint64_t)v14, type metadata accessor for WidgetMusicItem);
    goto LABEL_49;
  }
LABEL_47:
  v53 = *(_QWORD *)&v17[v4[9] + 8];
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v17, type metadata accessor for WidgetMusicItem);
  swift_bridgeObjectRelease(v53);
  sub_10000D964(a1, (uint64_t)v14, type metadata accessor for WidgetMusicItem);
  sub_10000D964(a2, (uint64_t)v11, type metadata accessor for WidgetMusicItem);
  if (!v53)
    goto LABEL_48;
LABEL_16:
  v38 = v4[11];
  v39 = &v14[v38];
  v40 = *(_QWORD *)&v14[v38 + 8];
  v41 = &v11[v38];
  v42 = *((_QWORD *)v41 + 1);
  if (!v40)
  {
    v44 = (uint64_t)v55;
    v43 = (uint64_t)v56;
    if (!v42)
    {
LABEL_33:
      sub_10000D964((uint64_t)v14, v43, type metadata accessor for WidgetMusicItem);
      sub_10000D964((uint64_t)v11, v44, type metadata accessor for WidgetMusicItem);
LABEL_34:
      sub_10000E750(v44, type metadata accessor for WidgetMusicItem);
      sub_10000E750(v43, type metadata accessor for WidgetMusicItem);
      sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicItem);
      sub_10000E750((uint64_t)v14, type metadata accessor for WidgetMusicItem);
      LOBYTE(v51) = 1;
      return v51 & 1;
    }
LABEL_25:
    sub_10000D964((uint64_t)v14, v43, type metadata accessor for WidgetMusicItem);
    sub_10000D964((uint64_t)v11, v44, type metadata accessor for WidgetMusicItem);
    goto LABEL_26;
  }
  v44 = (uint64_t)v55;
  v43 = (uint64_t)v56;
  if (!v42)
    goto LABEL_25;
  if (*(_QWORD *)v39 == *(_QWORD *)v41 && v40 == v42)
    goto LABEL_33;
  v46 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v39, v40, *(_QWORD *)v41, v42, 0);
  sub_10000D964((uint64_t)v14, v43, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v11, v44, type metadata accessor for WidgetMusicItem);
  if ((v46 & 1) != 0)
    goto LABEL_34;
LABEL_26:
  v47 = v4[12];
  v48 = (_QWORD *)(v43 + v47);
  v49 = *(_QWORD *)(v43 + v47 + 8);
  v50 = (_QWORD *)(v44 + v47);
  v51 = v50[1];
  if (v49)
  {
    if (v51)
    {
      if (*v48 == *v50 && v49 == v51)
        LOBYTE(v51) = 1;
      else
        LOBYTE(v51) = _stringCompareWithSmolCheck(_:_:expecting:)(*v48, v49, *v50, v50[1], 0);
    }
    swift_bridgeObjectRetain();
    sub_10000E750(v44, type metadata accessor for WidgetMusicItem);
    sub_10000E750(v43, type metadata accessor for WidgetMusicItem);
    sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicItem);
    sub_10000E750((uint64_t)v14, type metadata accessor for WidgetMusicItem);
    swift_bridgeObjectRelease(v49);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10000E750(v44, type metadata accessor for WidgetMusicItem);
    sub_10000E750(v43, type metadata accessor for WidgetMusicItem);
    sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicItem);
    sub_10000E750((uint64_t)v14, type metadata accessor for WidgetMusicItem);
    if (v51)
    {
      swift_bridgeObjectRelease(v51);
LABEL_49:
      LOBYTE(v51) = 0;
      return v51 & 1;
    }
    LOBYTE(v51) = 1;
  }
  return v51 & 1;
}

uint64_t getEnumTagSinglePayload for WidgetMusicItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetMusicItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1000391C8 + 4 * byte_10042594D[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1000391FC + 4 * byte_100425948[v4]))();
}

uint64_t sub_1000391FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100039204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10003920CLL);
  return result;
}

uint64_t sub_100039218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100039220);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_100039224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003922C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicItem.CodingKeys()
{
  return &type metadata for WidgetMusicItem.CodingKeys;
}

unint64_t sub_10003924C()
{
  unint64_t result;

  result = qword_100549228;
  if (!qword_100549228)
  {
    result = swift_getWitnessTable(&unk_100425B0C, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100549228);
  }
  return result;
}

unint64_t sub_100039294()
{
  unint64_t result;

  result = qword_100549230;
  if (!qword_100549230)
  {
    result = swift_getWitnessTable(&unk_100425A7C, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100549230);
  }
  return result;
}

unint64_t sub_1000392DC()
{
  unint64_t result;

  result = qword_100549238;
  if (!qword_100549238)
  {
    result = swift_getWitnessTable(&unk_100425AA4, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100549238);
  }
  return result;
}

uint64_t sub_100039320(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;

  if (a1 == 0x7469747265707573 && a2 == 0xEA0000000000656CLL)
  {
    v5 = 0xEA0000000000656CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7469747265707573, 0xEA0000000000656CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v9 = 0xE300000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x44496D657469 && a2 == 0xE600000000000000)
  {
    v10 = 0xE600000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x44496D657469, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x49676F6C61746163 && a2 == 0xE900000000000044)
  {
    v11 = 0xE900000000000044;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49676F6C61746163, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x4970655269726973 && a2 == 0xE900000000000044)
  {
    v12 = 0xE900000000000044;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4970655269726973, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x656E6961746E6F63 && a2 == 0xEF44496D65744972)
  {
    v13 = 0xEF44496D65744972;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xEF44496D65744972, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0xD000000000000012)
  {
    v14 = 0x8000000100444B80;
    if (a2 == 0x8000000100444B80)
      goto LABEL_55;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100444B80, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_55:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if (a1 == 0xD000000000000012)
  {
    v15 = 0x8000000100444BA0;
    if (a2 == 0x8000000100444BA0)
      goto LABEL_60;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100444BA0, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_60:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if (a1 == 0x736567646162 && a2 == 0xE600000000000000)
  {
    v16 = 0xE600000000000000;
LABEL_66:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736567646162, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_66;
  }
  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    v17 = 0xEA0000000000656CLL;
LABEL_72:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x626179616C507369, 0xEA0000000000656CLL, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_72;
  }
  if (a1 == 0xD000000000000012)
  {
    v18 = 0x8000000100444BC0;
    if (a2 == 0x8000000100444BC0)
      goto LABEL_77;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100444BC0, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_77:
    swift_bridgeObjectRelease(v18);
    return 12;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100444BE0)
  {
    v19 = 0x8000000100444BE0;
LABEL_83:
    swift_bridgeObjectRelease(v19);
    return 13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100444BE0, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_83;
  }
  if (a1 == 0x49656C6261646F63 && a2 == 0xEC0000006567616DLL)
  {
    v20 = 0xEC0000006567616DLL;
LABEL_89:
    swift_bridgeObjectRelease(v20);
    return 14;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49656C6261646F63, 0xEC0000006567616DLL, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_89;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x8000000100444C00)
  {
    swift_bridgeObjectRelease(0x8000000100444C00);
    return 15;
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x8000000100444C00, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v21 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

id sub_100039984(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_100039994(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for Artwork(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artwork.ImageFormat(0);
  v2[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[13] = v6;
  v2[14] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.CropStyle(0);
  v2[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[16] = v8;
  v2[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100547A38);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v2[19] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[20] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v12);
  v2[22] = swift_task_alloc(v12);
  v2[23] = swift_task_alloc(v12);
  return swift_task_switch(sub_100039AAC, 0, 0);
}

uint64_t sub_100039AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 144);
  v55 = *(_QWORD *)(v1 + 160);
  v56 = *(_QWORD *)(v1 + 152);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  v6 = *(_QWORD *)(v1 + 112);
  v54 = *(_QWORD *)(v1 + 120);
  v8 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  static Artwork.CropStyle.squareCenterCrop.getter(a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, enum case for Artwork.ImageFormat.heic(_:), v8);
  Artwork.url(width:height:cropStyle:format:)(v2, v2, v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v54);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v3, 1, v56) == 1)
  {
    sub_10003A544(*(_QWORD *)(v1 + 144));
    if (qword_100547860 != -1)
      swift_once(&qword_100547860, sub_10003A584);
    v10 = *(_QWORD *)(v1 + 80);
    v9 = *(_QWORD *)(v1 + 88);
    v12 = *(_QWORD *)(v1 + 64);
    v11 = *(_QWORD *)(v1 + 72);
    v13 = type metadata accessor for Logger(0);
    sub_10000D78C(v13, (uint64_t)qword_100549240);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    v17 = os_log_type_enabled(v15, v16);
    v19 = *(_QWORD *)(v1 + 80);
    v18 = *(_QWORD *)(v1 + 88);
    v20 = *(_QWORD *)(v1 + 72);
    if (v17)
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v58 = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = sub_10001254C(&qword_100549260, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v20, v23);
      v26 = v25;
      *(_QWORD *)(v1 + 16) = sub_1000759E0(v24, v25, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
      swift_bridgeObjectRelease(v26);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No artwork url for %{public}s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v19 + 8))(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 72));
    }

    v46 = *(_QWORD *)(v1 + 176);
    v47 = *(_QWORD *)(v1 + 168);
    v49 = *(_QWORD *)(v1 + 136);
    v48 = *(_QWORD *)(v1 + 144);
    v50 = *(_QWORD *)(v1 + 112);
    v51 = *(_QWORD *)(v1 + 88);
    swift_task_dealloc(*(_QWORD *)(v1 + 184));
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 160) + 32))(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
    if (qword_100547860 != -1)
      swift_once(&qword_100547860, sub_10003A584);
    v28 = *(_QWORD *)(v1 + 176);
    v27 = *(_QWORD *)(v1 + 184);
    v29 = *(_QWORD *)(v1 + 152);
    v30 = *(_QWORD *)(v1 + 160);
    v31 = type metadata accessor for Logger(0);
    *(_QWORD *)(v1 + 192) = sub_10000D78C(v31, (uint64_t)qword_100549240);
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    *(_QWORD *)(v1 + 200) = v32;
    v33 = v32(v28, v27, v29);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    v36 = os_log_type_enabled(v34, v35);
    v37 = *(_QWORD *)(v1 + 176);
    v38 = *(_QWORD *)(v1 + 152);
    v39 = *(_QWORD *)(v1 + 160);
    if (v36)
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v57 = swift_slowAlloc(32, -1);
      v58 = v57;
      *(_DWORD *)v40 = 136446210;
      v41 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v42 = dispatch thunk of CustomStringConvertible.description.getter(v38, v41);
      v44 = v43;
      *(_QWORD *)(v1 + 48) = sub_1000759E0(v42, v43, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56);
      swift_bridgeObjectRelease(v44);
      v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v45(v37, v38);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Fetching image from artwork url: %{public}s", v40, 0xCu);
      swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v45(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 152));
    }

    *(_QWORD *)(v1 + 208) = v45;
    *(_QWORD *)(v1 + 216) = objc_msgSend((id)objc_opt_self(NSURLSession), "sharedSession");
    v53 = (_QWORD *)swift_task_alloc(async function pointer to NSURLSession.data(from:delegate:)[1]);
    *(_QWORD *)(v1 + 224) = v53;
    *v53 = v1;
    v53[1] = sub_100039FCC;
    return NSURLSession.data(from:delegate:)(*(_QWORD *)(v1 + 184), 0);
  }
}

uint64_t sub_100039FCC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 224);
  v6[29] = a1;
  v6[30] = a2;
  v6[31] = v3;
  swift_task_dealloc(v7);
  if (v3)
  {
    v8 = sub_10003A308;
  }
  else
  {
    v9 = (void *)v6[27];

    v8 = sub_10003A054;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10003A054()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  Class isa;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = objc_allocWithZone((Class)UIImage);
  sub_10003A5E4(v2, v1);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithData:", isa);
  sub_10003A628(v2, v1);

  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 240);
    (*(void (**)(_QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
    sub_10003A628(v7, v6);
  }
  else
  {
    v8 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 240);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v15 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 152);
    if (v11)
    {
      v31 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
      v32 = *(_QWORD *)(v0 + 184);
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v33 = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v21 = dispatch thunk of CustomStringConvertible.description.getter(v17, v20);
      v23 = v22;
      *(_QWORD *)(v0 + 40) = sub_1000759E0(v21, v22, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease(v23);
      v31(v16, v17);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to create image from artwork url: %{public}s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      sub_10003A628(v13, v12);
      v31(v32, v17);
    }
    else
    {

      v14(v16, v17);
      sub_10003A628(v13, v12);
      v14(v15, v17);
    }
    v5 = 0;
  }
  v24 = *(_QWORD *)(v0 + 176);
  v25 = *(_QWORD *)(v0 + 168);
  v27 = *(_QWORD *)(v0 + 136);
  v26 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(id))(v0 + 8))(v5);
}

uint64_t sub_10003A308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 248);

  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 184);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v6 = *(_QWORD *)(v0 + 152);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136446210;
    v26 = v8;
    *(_QWORD *)(v0 + 24) = v5;
    swift_errorRetain(v5);
    v9 = sub_10000B4C8(&qword_100549268);
    v10 = String.init<A>(describing:)(v0 + 24, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 32) = sub_1000759E0(v10, v11, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to retrieve data from artwork url with error: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v5);
    v25(v24, v6);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 248);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v15 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 152);

    swift_errorRelease(v13);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    v14(v15, v16);
  }
  v17 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10003A544(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000B4C8(&qword_100547A38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003A584()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_100549240);
  sub_10000D78C(v0, (uint64_t)qword_100549240);
  return static Logger.music(_:)(0xD000000000000014, 0x8000000100444C20);
}

uint64_t sub_10003A5E4(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10003A628(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

char *sub_10003A66C(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(_QWORD *, uint64_t, int *);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void *v80;
  void (*v81)(_QWORD *, _QWORD, uint64_t, int *);
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *__dsta;
  char *__dst;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  int *v119;
  void (*v121)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v35);
  }
  else
  {
    v6 = type metadata accessor for Date(0);
    v116 = *(_QWORD *)(v6 - 8);
    v7 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
    v7((char *)a1, (char *)a2, v6);
    v8 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v117 = v6;
    v121 = v7;
    v7((char *)a1 + v9, (char *)a2 + v9, v6);
    v12 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v12[7];
    v22 = &v10[v21];
    v23 = &v11[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
    *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
    v118 = a2;
    v119 = v8;
    v25 = v8[7];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = (int *)type metadata accessor for WidgetMusicItem(0);
    v29 = *((_QWORD *)v28 - 1);
    v30 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      v31 = sub_10000B4C8(&qword_100548310);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v32 = v119;
      v34 = v116;
      v33 = v117;
    }
    else
    {
      v111 = v29;
      v36 = v27[1];
      *v26 = *v27;
      v26[1] = v36;
      v37 = v27[3];
      v26[2] = v27[2];
      v26[3] = v37;
      v38 = v27[5];
      v26[4] = v27[4];
      v26[5] = v38;
      v39 = v28[7];
      v40 = (char *)v26 + v39;
      __dsta = (char *)v27 + v39;
      v41 = type metadata accessor for URL(0);
      v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v40, __dsta, v41);
      v43 = v28[8];
      v44 = (_QWORD *)((char *)v26 + v43);
      v45 = (_QWORD *)((char *)v27 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      v47 = v28[9];
      v48 = (_QWORD *)((char *)v26 + v47);
      v49 = (_QWORD *)((char *)v27 + v47);
      v112 = v49[1];
      *v48 = *v49;
      v48[1] = v112;
      v50 = v28[10];
      v51 = (_QWORD *)((char *)v26 + v50);
      v52 = (_QWORD *)((char *)v27 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v28[11];
      v55 = (_QWORD *)((char *)v26 + v54);
      v56 = (_QWORD *)((char *)v27 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = v28[12];
      v59 = (_QWORD *)((char *)v26 + v58);
      v60 = (_QWORD *)((char *)v27 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      v62 = v28[13];
      v63 = (_QWORD *)((char *)v26 + v62);
      v64 = (_QWORD *)((char *)v27 + v62);
      v65 = v64[1];
      *v63 = *v64;
      v63[1] = v65;
      *(_QWORD *)((char *)v26 + v28[14]) = *(_QWORD *)((char *)v27 + v28[14]);
      *((_BYTE *)v26 + v28[15]) = *((_BYTE *)v27 + v28[15]);
      v66 = v28[16];
      __dst = (char *)v26 + v66;
      v67 = (char *)v27 + v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = sub_10000B4C8(&qword_100547B50);
      v69 = *(_QWORD *)(v68 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 10, v68))
      {
        v70 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        v34 = v116;
        v33 = v117;
        v71 = v111;
      }
      else
      {
        v72 = type metadata accessor for Playlist.Variant(0);
        v73 = *(_QWORD *)(v72 - 8);
        v113 = v67;
        v74 = v72;
        v75 = (*(uint64_t (**)(char *, uint64_t))(v73 + 48))(v67, 1);
        v34 = v116;
        v33 = v117;
        if (v75)
        {
          v76 = sub_10000B4C8(&qword_100548358);
          v77 = __dst;
          memcpy(__dst, v113, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          v110 = v74;
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dst, v113, v74);
          v77 = __dst;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v110);
        }
        v78 = v77;
        v71 = v111;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v78, 0, 10, v68);
      }
      *(_QWORD *)((char *)v26 + v28[17]) = *(_QWORD *)((char *)v27 + v28[17]);
      v79 = v28[18];
      v80 = *(void **)((char *)v27 + v79);
      *(_QWORD *)((char *)v26 + v79) = v80;
      *(_QWORD *)((char *)v26 + v28[19]) = *(_QWORD *)((char *)v27 + v28[19]);
      v81 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v71 + 56);
      v82 = v80;
      swift_bridgeObjectRetain();
      v81(v26, 0, 1, v28);
      v32 = v119;
    }
    v83 = v32[8];
    v84 = (char *)a1 + v83;
    v85 = (char *)v118 + v83;
    v86 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
    {
      v88 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      v121(v84, v85, v33);
      v121(&v84[*(int *)(v86 + 20)], &v85[*(int *)(v86 + 20)], v33);
      v89 = *(int *)(v86 + 24);
      v90 = &v84[v89];
      v91 = &v85[v89];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v91, 1, v33))
      {
        v92 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        v121(v90, v91, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v90, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    v93 = v32[9];
    v94 = *(void **)((char *)v118 + v93);
    *(_QWORD *)((char *)a1 + v93) = v94;
    v95 = v32[10];
    v96 = (_QWORD *)((char *)a1 + v95);
    v97 = (_QWORD *)((char *)v118 + v95);
    v98 = v97[1];
    *v96 = *v97;
    v96[1] = v98;
    v99 = *(int *)(a3 + 20);
    v100 = (_QWORD *)((char *)a1 + v99);
    v101 = (_QWORD *)((char *)v118 + v99);
    v102 = v94;
    swift_bridgeObjectRetain();
    v103 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v101, v103) == 1)
    {
      v104 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v100, v101, v104);
      v105 = v100;
      v106 = v103;
      v107 = 1;
    }
    else
    {
      v108 = *v101;
      *v100 = *v101;
      swift_retain(v108);
      v105 = v100;
      v106 = v103;
      v107 = 0;
    }
    swift_storeEnumTagMultiPayload(v105, v106, v107);
  }
  return (char *)a1;
}

double sub_10003AC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v8 = a1 + v7[5];
  v6(v8, v4);
  v9 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8]));
  v10 = (_QWORD *)(a1 + v7[7]);
  v11 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v25 = a2;
    swift_bridgeObjectRelease(v10[1]);
    swift_bridgeObjectRelease(v10[3]);
    swift_bridgeObjectRelease(v10[5]);
    v12 = (char *)v10 + v11[7];
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[14]));
    v14 = (char *)v10 + v11[16];
    v15 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
    {
      v16 = type metadata accessor for Playlist.Variant(0);
      v17 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
        (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v11[19]));
    a2 = v25;
  }
  v18 = a1 + v7[8];
  v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    v6(v18, v4);
    v6(v18 + *(int *)(v19 + 20), v4);
    v20 = v18 + *(int *)(v19 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4))
      v6(v20, v4);
  }

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[10] + 8));
  v21 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v22 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v21).n128_u64[0];
  }
  return result;
}

uint64_t sub_10003AF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD *, uint64_t, int *);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  void *v80;
  void (*v81)(_QWORD *, _QWORD, uint64_t, int *);
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  char *__dsta;
  char *__dst;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  void (*v118)(uint64_t, uint64_t, uint64_t);

  v5 = type metadata accessor for Date(0);
  v114 = *(_QWORD *)(v5 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16);
  v6(a1, a2, v5);
  v7 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v115 = v5;
  v118 = v6;
  v6(a1 + v8, a2 + v8, v5);
  v11 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v11[6];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v11[7];
  v21 = (_QWORD *)(v9 + v20);
  v22 = (_QWORD *)(v10 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v116 = v7;
  v24 = v7[7];
  v113 = a1;
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = (int *)type metadata accessor for WidgetMusicItem(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = sub_10000B4C8(&qword_100548310);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    v32 = v5;
    v31 = v116;
    v33 = v113;
    v34 = v114;
    v35 = (void (*)(char *, char *, uint64_t))v118;
  }
  else
  {
    v112 = v28;
    v36 = v26[1];
    *v25 = *v26;
    v25[1] = v36;
    v37 = v26[3];
    v25[2] = v26[2];
    v25[3] = v37;
    v38 = v26[5];
    v25[4] = v26[4];
    v25[5] = v38;
    v39 = v27[7];
    v40 = (char *)v25 + v39;
    __dsta = (char *)v26 + v39;
    v41 = type metadata accessor for URL(0);
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v40, __dsta, v41);
    v43 = v27[8];
    v44 = (_QWORD *)((char *)v25 + v43);
    v45 = (_QWORD *)((char *)v26 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = v27[9];
    v48 = (_QWORD *)((char *)v25 + v47);
    v49 = (_QWORD *)((char *)v26 + v47);
    v108 = v49[1];
    *v48 = *v49;
    v48[1] = v108;
    v50 = v27[10];
    v51 = (_QWORD *)((char *)v25 + v50);
    v52 = (_QWORD *)((char *)v26 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = v27[11];
    v55 = (_QWORD *)((char *)v25 + v54);
    v56 = (_QWORD *)((char *)v26 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    v58 = v27[12];
    v59 = (_QWORD *)((char *)v25 + v58);
    v60 = (_QWORD *)((char *)v26 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = v27[13];
    v63 = (_QWORD *)((char *)v25 + v62);
    v64 = (_QWORD *)((char *)v26 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    *(_QWORD *)((char *)v25 + v27[14]) = *(_QWORD *)((char *)v26 + v27[14]);
    *((_BYTE *)v25 + v27[15]) = *((_BYTE *)v26 + v27[15]);
    v66 = v27[16];
    __dst = (char *)v25 + v66;
    v67 = (char *)v26 + v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v68 = sub_10000B4C8(&qword_100547B50);
    v69 = *(_QWORD *)(v68 - 8);
    v70 = v67;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 10, v68))
    {
      v71 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      v32 = v115;
      v31 = v116;
      v72 = v112;
      v33 = v113;
    }
    else
    {
      v73 = type metadata accessor for Playlist.Variant(0);
      v74 = *(_QWORD *)(v73 - 8);
      v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48))(v67, 1, v73);
      v33 = v113;
      if (v75)
      {
        v76 = sub_10000B4C8(&qword_100548358);
        v77 = __dst;
        memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v109 = v74;
        v78 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
        v77 = __dst;
        v78(__dst, v70, v73);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(__dst, 0, 1, v73);
      }
      v32 = v115;
      v31 = v116;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v77, 0, 10, v68);
      v72 = v112;
    }
    *(_QWORD *)((char *)v25 + v27[17]) = *(_QWORD *)((char *)v26 + v27[17]);
    v79 = v27[18];
    v80 = *(void **)((char *)v26 + v79);
    *(_QWORD *)((char *)v25 + v79) = v80;
    *(_QWORD *)((char *)v25 + v27[19]) = *(_QWORD *)((char *)v26 + v27[19]);
    v81 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v72 + 56);
    v82 = v80;
    swift_bridgeObjectRetain();
    v81(v25, 0, 1, v27);
    v35 = (void (*)(char *, char *, uint64_t))v118;
    v34 = v114;
  }
  v83 = v31[8];
  v84 = (char *)(v33 + v83);
  v85 = (char *)(a2 + v83);
  v86 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v87 = *(_QWORD *)(v86 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
  {
    v88 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    v35(v84, v85, v32);
    v35(&v84[*(int *)(v86 + 20)], &v85[*(int *)(v86 + 20)], v32);
    v89 = *(int *)(v86 + 24);
    v90 = &v84[v89];
    v91 = &v85[v89];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v91, 1, v32))
    {
      v92 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      v118((uint64_t)v90, (uint64_t)v91, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v90, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
  }
  v93 = v31[9];
  v94 = *(void **)(a2 + v93);
  *(_QWORD *)(v33 + v93) = v94;
  v95 = v31[10];
  v96 = (_QWORD *)(v33 + v95);
  v97 = (_QWORD *)(a2 + v95);
  v98 = v97[1];
  *v96 = *v97;
  v96[1] = v98;
  v99 = *(int *)(a3 + 20);
  v100 = (uint64_t *)(v33 + v99);
  v101 = (uint64_t *)(a2 + v99);
  v102 = v94;
  swift_bridgeObjectRetain();
  v103 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v101, v103) == 1)
  {
    v104 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v100, v101, v104);
    v105 = 1;
  }
  else
  {
    v106 = *v101;
    *v100 = *v101;
    swift_retain(v106);
    v105 = 0;
  }
  swift_storeEnumTagMultiPayload(v100, v103, v105);
  return v33;
}

uint64_t sub_10003B558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD *, uint64_t, int *);
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, uint64_t);
  void *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void (*v115)(_QWORD *, _QWORD, uint64_t, int *);
  id v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  int v123;
  int v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t (*v134)(char *, uint64_t, uint64_t);
  int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  id v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(void *, uint64_t, uint64_t);
  int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  void *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  char *__dst;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int *v176;

  v5 = type metadata accessor for Date(0);
  v173 = *(_QWORD *)(v5 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 24);
  v6(a1, a2, v5);
  v7 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  v11 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = v11[6];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  *v17 = *v18;
  v19 = v17[1];
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = v11[7];
  v21 = (_QWORD *)(v9 + v20);
  v22 = (_QWORD *)(v10 + v20);
  *v21 = *v22;
  v23 = v21[1];
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = v11[8];
  v25 = *(_QWORD *)(v10 + v24);
  v26 = *(_QWORD *)(v9 + v24);
  *(_QWORD *)(v9 + v24) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v26);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v176 = v7;
  v27 = v7[7];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = (int *)type metadata accessor for WidgetMusicItem(0);
  v31 = *((_QWORD *)v30 - 1);
  v32 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v31 + 48);
  LODWORD(v9) = v32(v28, 1, v30);
  v33 = v32(v29, 1, v30);
  v174 = v5;
  if (!(_DWORD)v9)
  {
    if (v33)
    {
      sub_10000E750((uint64_t)v28, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v170 = v6;
    v172 = a2;
    *v28 = *v29;
    v65 = v28[1];
    v28[1] = v29[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v65);
    v28[2] = v29[2];
    v66 = v28[3];
    v28[3] = v29[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v66);
    v28[4] = v29[4];
    v67 = v28[5];
    v28[5] = v29[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v67);
    v68 = v30[7];
    v69 = (char *)v28 + v68;
    v70 = (char *)v29 + v68;
    v71 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v69, v70, v71);
    v72 = v30[8];
    v73 = (_QWORD *)((char *)v28 + v72);
    v74 = (_QWORD *)((char *)v29 + v72);
    *v73 = *v74;
    v75 = v73[1];
    v73[1] = v74[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v75);
    v76 = v30[9];
    v77 = (_QWORD *)((char *)v28 + v76);
    v78 = (_QWORD *)((char *)v29 + v76);
    *v77 = *v78;
    v79 = v77[1];
    v77[1] = v78[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v79);
    v80 = v30[10];
    v81 = (_QWORD *)((char *)v28 + v80);
    v82 = (_QWORD *)((char *)v29 + v80);
    *v81 = *v82;
    v83 = v81[1];
    v81[1] = v82[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v83);
    v84 = v30[11];
    v85 = (_QWORD *)((char *)v28 + v84);
    v86 = (_QWORD *)((char *)v29 + v84);
    *v85 = *v86;
    v87 = v85[1];
    v85[1] = v86[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v87);
    v88 = v30[12];
    v89 = (_QWORD *)((char *)v28 + v88);
    v90 = (_QWORD *)((char *)v29 + v88);
    *v89 = *v90;
    v91 = v89[1];
    v89[1] = v90[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v91);
    v92 = v30[13];
    v93 = (_QWORD *)((char *)v28 + v92);
    v94 = (_QWORD *)((char *)v29 + v92);
    *v93 = *v94;
    v95 = v93[1];
    v93[1] = v94[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v95);
    v96 = v30[14];
    v97 = *(_QWORD *)((char *)v28 + v96);
    *(_QWORD *)((char *)v28 + v96) = *(_QWORD *)((char *)v29 + v96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v97);
    *((_BYTE *)v28 + v30[15]) = *((_BYTE *)v29 + v30[15]);
    v98 = v30[16];
    v99 = (char *)v28 + v98;
    v100 = (char *)v29 + v98;
    v101 = sub_10000B4C8(&qword_100547B50);
    v102 = *(_QWORD *)(v101 - 8);
    v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
    v104 = v99;
    LODWORD(v99) = v103(v99, 10, v101);
    v105 = v103(v100, 10, v101);
    if ((_DWORD)v99)
    {
      if (!v105)
      {
        v106 = type metadata accessor for Playlist.Variant(0);
        v107 = *(_QWORD *)(v106 - 8);
        v169 = v106;
        a2 = v172;
        if ((*(unsigned int (**)(char *, uint64_t))(v107 + 48))(v100, 1))
        {
          v108 = sub_10000B4C8(&qword_100548358);
          memcpy(v104, v100, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v107 + 16))(v104, v100, v169);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v169);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v104, 0, 10, v101);
        goto LABEL_53;
      }
    }
    else
    {
      if (!v105)
      {
        v154 = type metadata accessor for Playlist.Variant(0);
        v155 = *(_QWORD *)(v154 - 8);
        v156 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v155 + 48);
        v157 = v156(v104, 1, v154);
        v158 = v156(v100, 1, v154);
        if (v157)
        {
          a2 = v172;
          if (!v158)
          {
            (*(void (**)(void *, char *, uint64_t))(v155 + 16))(v104, v100, v154);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v104, 0, 1, v154);
            goto LABEL_53;
          }
        }
        else
        {
          a2 = v172;
          if (!v158)
          {
            (*(void (**)(void *, char *, uint64_t))(v155 + 24))(v104, v100, v154);
            goto LABEL_53;
          }
          (*(void (**)(void *, uint64_t))(v155 + 8))(v104, v154);
        }
        v159 = sub_10000B4C8(&qword_100548358);
        memcpy(v104, v100, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        goto LABEL_53;
      }
      sub_100011694((uint64_t)v104, &qword_100547B50);
    }
    v112 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v104, v100, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    a2 = v172;
LABEL_53:
    v6 = v170;
    *(_QWORD *)((char *)v28 + v30[17]) = *(_QWORD *)((char *)v29 + v30[17]);
    v160 = v30[18];
    v161 = *(void **)((char *)v28 + v160);
    v162 = *(void **)((char *)v29 + v160);
    *(_QWORD *)((char *)v28 + v160) = v162;
    v163 = v162;

    v164 = v30[19];
    v165 = *(_QWORD *)((char *)v28 + v164);
    *(_QWORD *)((char *)v28 + v164) = *(_QWORD *)((char *)v29 + v164);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v165);
    goto LABEL_8;
  }
  if (v33)
  {
LABEL_7:
    v64 = sub_10000B4C8(&qword_100548310);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
LABEL_8:
    v62 = v176;
    goto LABEL_21;
  }
  v167 = v31;
  v168 = a1;
  v171 = a2;
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v28[4] = v29[4];
  v28[5] = v29[5];
  v34 = v30[7];
  v35 = (char *)v28 + v34;
  v36 = (char *)v29 + v34;
  v37 = type metadata accessor for URL(0);
  v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v35, v36, v37);
  v39 = v30[8];
  v40 = (_QWORD *)((char *)v28 + v39);
  v41 = (_QWORD *)((char *)v29 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  v42 = v30[9];
  v43 = (_QWORD *)((char *)v28 + v42);
  v44 = (_QWORD *)((char *)v29 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  v45 = v30[10];
  v46 = (_QWORD *)((char *)v28 + v45);
  v47 = (_QWORD *)((char *)v29 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  v48 = v30[11];
  v49 = (_QWORD *)((char *)v28 + v48);
  v50 = (_QWORD *)((char *)v29 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  v51 = v30[12];
  v52 = (_QWORD *)((char *)v28 + v51);
  v53 = (_QWORD *)((char *)v29 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  v54 = v30[13];
  v55 = (_QWORD *)((char *)v28 + v54);
  v56 = (_QWORD *)((char *)v29 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  *(_QWORD *)((char *)v28 + v30[14]) = *(_QWORD *)((char *)v29 + v30[14]);
  *((_BYTE *)v28 + v30[15]) = *((_BYTE *)v29 + v30[15]);
  v57 = v30[16];
  __dst = (char *)v28 + v57;
  v58 = (char *)v29 + v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59 = sub_10000B4C8(&qword_100547B50);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 10, v59))
  {
    v61 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    a1 = v168;
    v62 = v176;
    v63 = v167;
  }
  else
  {
    v109 = type metadata accessor for Playlist.Variant(0);
    v110 = *(_QWORD *)(v109 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v58, 1, v109))
    {
      v111 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(__dst, v58, v109);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(__dst, 0, 1, v109);
    }
    a1 = v168;
    a2 = v171;
    v63 = v167;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(__dst, 0, 10, v59);
    v62 = v176;
  }
  *(_QWORD *)((char *)v28 + v30[17]) = *(_QWORD *)((char *)v29 + v30[17]);
  v113 = v30[18];
  v114 = *(void **)((char *)v29 + v113);
  *(_QWORD *)((char *)v28 + v113) = v114;
  *(_QWORD *)((char *)v28 + v30[19]) = *(_QWORD *)((char *)v29 + v30[19]);
  v115 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v63 + 56);
  v116 = v114;
  swift_bridgeObjectRetain();
  v115(v28, 0, 1, v30);
LABEL_21:
  v117 = v62[8];
  v118 = (char *)(a1 + v117);
  v119 = (char *)(a2 + v117);
  v120 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v121 = *(_QWORD *)(v120 - 8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48);
  v123 = v122(v118, 1, v120);
  v124 = v122(v119, 1, v120);
  if (!v123)
  {
    if (v124)
    {
      sub_10000E750((uint64_t)v118, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      goto LABEL_27;
    }
    v6((uint64_t)v118, (uint64_t)v119, v174);
    v6((uint64_t)&v118[*(int *)(v120 + 20)], (uint64_t)&v119[*(int *)(v120 + 20)], v174);
    v131 = *(int *)(v120 + 24);
    v132 = &v118[v131];
    v133 = &v119[v131];
    v134 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v173 + 48);
    v135 = v134(v132, 1, v174);
    v136 = v134(v133, 1, v174);
    if (v135)
    {
      if (!v136)
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v132, v133, v174);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v132, 0, 1, v174);
LABEL_36:
        v62 = v176;
        goto LABEL_37;
      }
    }
    else
    {
      if (!v136)
      {
        v6((uint64_t)v132, (uint64_t)v133, v174);
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v173 + 8))(v132, v174);
    }
    v137 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    goto LABEL_36;
  }
  if (v124)
  {
LABEL_27:
    v130 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    goto LABEL_37;
  }
  v125 = *(void (**)(char *, char *, uint64_t))(v173 + 16);
  v125(v118, v119, v174);
  v125(&v118[*(int *)(v120 + 20)], &v119[*(int *)(v120 + 20)], v174);
  v126 = *(int *)(v120 + 24);
  v127 = &v118[v126];
  v128 = &v119[v126];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v128, 1, v174))
  {
    v129 = sub_10000B4C8(&qword_1005481F0);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    v125(v127, v128, v174);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v127, 0, 1, v174);
  }
  v62 = v176;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
LABEL_37:
  v138 = v62[9];
  v139 = *(void **)(a1 + v138);
  v140 = *(void **)(a2 + v138);
  *(_QWORD *)(a1 + v138) = v140;
  v141 = v140;

  v142 = v62[10];
  v143 = (_QWORD *)(a1 + v142);
  v144 = (_QWORD *)(a2 + v142);
  *v143 = *v144;
  v145 = v143[1];
  v143[1] = v144[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v145);
  if (a1 != a2)
  {
    v146 = *(int *)(a3 + 20);
    v147 = (uint64_t *)(a1 + v146);
    v148 = (uint64_t *)(a2 + v146);
    sub_100011694(a1 + v146, &qword_100547EE0);
    v149 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v148, v149) == 1)
    {
      v150 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v147, v148, v150);
      v151 = 1;
    }
    else
    {
      v152 = *v148;
      *v147 = *v148;
      swift_retain(v152);
      v151 = 0;
    }
    swift_storeEnumTagMultiPayload(v147, v149, v151);
  }
  return a1;
}

uint64_t sub_10003C0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v54 = v6;
  v8(a1 + v10, a2 + v10, v6);
  v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  *(_OWORD *)(v11 + v13[5]) = *(_OWORD *)(v12 + v13[5]);
  *(_OWORD *)(v11 + v13[6]) = *(_OWORD *)(v12 + v13[6]);
  *(_OWORD *)(v11 + v13[7]) = *(_OWORD *)(v12 + v13[7]);
  *(_QWORD *)(v11 + v13[8]) = *(_QWORD *)(v12 + v13[8]);
  *(_BYTE *)(a1 + v9[6]) = *(_BYTE *)(a2 + v9[6]);
  v14 = v9[7];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = (int *)type metadata accessor for WidgetMusicItem(0);
  v18 = *((_QWORD *)v17 - 1);
  v55 = a3;
  v53 = v7;
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_10000B4C8(&qword_100548310);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v51 = v18;
    v52 = v8;
    v20 = v16[1];
    *v15 = *v16;
    v15[1] = v20;
    v15[2] = v16[2];
    v21 = v17[7];
    v22 = (char *)v15 + v21;
    v23 = (char *)v16 + v21;
    v24 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    *(_OWORD *)((char *)v15 + v17[8]) = *(_OWORD *)((char *)v16 + v17[8]);
    *(_OWORD *)((char *)v15 + v17[9]) = *(_OWORD *)((char *)v16 + v17[9]);
    *(_OWORD *)((char *)v15 + v17[10]) = *(_OWORD *)((char *)v16 + v17[10]);
    *(_OWORD *)((char *)v15 + v17[11]) = *(_OWORD *)((char *)v16 + v17[11]);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *(_OWORD *)((char *)v15 + v17[13]) = *(_OWORD *)((char *)v16 + v17[13]);
    *(_QWORD *)((char *)v15 + v17[14]) = *(_QWORD *)((char *)v16 + v17[14]);
    *((_BYTE *)v15 + v17[15]) = *((_BYTE *)v16 + v17[15]);
    v25 = v17[16];
    v26 = (char *)v15 + v25;
    v27 = (char *)v16 + v25;
    v28 = sub_10000B4C8(&qword_100547B50);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 10, v28))
    {
      v30 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v50 = v29;
      v31 = type metadata accessor for Playlist.Variant(0);
      v49 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v27, 1, v31))
      {
        v32 = sub_10000B4C8(&qword_100548358);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v26, v27, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v26, 0, 1, v31);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v26, 0, 10, v28);
    }
    *(_QWORD *)((char *)v15 + v17[17]) = *(_QWORD *)((char *)v16 + v17[17]);
    *(_QWORD *)((char *)v15 + v17[18]) = *(_QWORD *)((char *)v16 + v17[18]);
    *(_QWORD *)((char *)v15 + v17[19]) = *(_QWORD *)((char *)v16 + v17[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v51 + 56))(v15, 0, 1, v17);
    v8 = v52;
  }
  v33 = v9[8];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_10000B4C8(&qword_1005482D8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v34, (uint64_t)v35, v54);
    v8((uint64_t)&v34[*(int *)(v36 + 20)], (uint64_t)&v35[*(int *)(v36 + 20)], v54);
    v39 = *(int *)(v36 + 24);
    v40 = &v34[v39];
    v41 = &v35[v39];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v41, 1, v54))
    {
      v42 = sub_10000B4C8(&qword_1005481F0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v8((uint64_t)v40, (uint64_t)v41, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v40, 0, 1, v54);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  *(_QWORD *)(a1 + v9[9]) = *(_QWORD *)(a2 + v9[9]);
  *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
  v43 = *(int *)(v55 + 20);
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  v46 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
  {
    v47 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
    swift_storeEnumTagMultiPayload(v44, v46, 1);
  }
  else
  {
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10003C5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int *v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD *, uint64_t, int *);
  int v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  size_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(void *, uint64_t, uint64_t);
  int v119;
  int v120;
  size_t v121;
  void *v122;
  void (*v123)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t, uint64_t, uint64_t);
  int v134;
  int v135;
  void (*v136)(uint64_t, char *, uint64_t);
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  size_t v141;
  void *v142;
  char *v143;
  uint64_t v144;
  void *v145;
  char *v146;
  uint64_t (*v147)(void *, uint64_t, uint64_t);
  int v148;
  int v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  const void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v164;
  uint64_t v165;
  char *__src;
  void *__srca;
  void *__dst;
  void *__dsta;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(uint64_t, char *, uint64_t);
  uint64_t v173;
  int *v175;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v172 = (void (*)(uint64_t, char *, uint64_t))v7;
  v173 = v5;
  v7(a1 + v9, a2 + v9, v5);
  v12 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v13 = v12[5];
  v14 = (_QWORD *)(v10 + v13);
  v15 = (uint64_t *)(v11 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = (_QWORD *)(v10 + v19);
  v21 = (uint64_t *)(v11 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = (_QWORD *)(v10 + v25);
  v27 = (uint64_t *)(v11 + v25);
  v29 = *v27;
  v28 = v27[1];
  v30 = v26[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease(v30);
  v31 = v12[8];
  v32 = *(_QWORD *)(v10 + v31);
  *(_QWORD *)(v10 + v31) = *(_QWORD *)(v11 + v31);
  swift_bridgeObjectRelease(v32);
  *(_BYTE *)(a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
  v175 = v8;
  v33 = v8[7];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = (int *)type metadata accessor for WidgetMusicItem(0);
  v37 = *((_QWORD *)v36 - 1);
  v38 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v37 + 48);
  LODWORD(v10) = v38(v34, 1, v36);
  v39 = v38(v35, 1, v36);
  if (!(_DWORD)v10)
  {
    if (v39)
    {
      sub_10000E750((uint64_t)v34, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v171 = v6;
    v52 = v35[1];
    v53 = v34[1];
    *v34 = *v35;
    v34[1] = v52;
    swift_bridgeObjectRelease(v53);
    v54 = v35[3];
    v55 = v34[3];
    v34[2] = v35[2];
    v34[3] = v54;
    swift_bridgeObjectRelease(v55);
    v56 = v35[5];
    v57 = v34[5];
    v34[4] = v35[4];
    v34[5] = v56;
    swift_bridgeObjectRelease(v57);
    v58 = v36[7];
    v59 = (char *)v34 + v58;
    v60 = (char *)v35 + v58;
    v61 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v59, v60, v61);
    v62 = v36[8];
    v63 = (_QWORD *)((char *)v34 + v62);
    v64 = (_QWORD *)((char *)v35 + v62);
    v66 = *v64;
    v65 = v64[1];
    v67 = v63[1];
    *v63 = v66;
    v63[1] = v65;
    swift_bridgeObjectRelease(v67);
    v68 = v36[9];
    v69 = (_QWORD *)((char *)v34 + v68);
    v70 = (_QWORD *)((char *)v35 + v68);
    v72 = *v70;
    v71 = v70[1];
    v73 = v69[1];
    *v69 = v72;
    v69[1] = v71;
    swift_bridgeObjectRelease(v73);
    v74 = v36[10];
    v75 = (_QWORD *)((char *)v34 + v74);
    v76 = (_QWORD *)((char *)v35 + v74);
    v78 = *v76;
    v77 = v76[1];
    v79 = v75[1];
    *v75 = v78;
    v75[1] = v77;
    swift_bridgeObjectRelease(v79);
    v80 = v36[11];
    v81 = (_QWORD *)((char *)v34 + v80);
    v82 = (_QWORD *)((char *)v35 + v80);
    v84 = *v82;
    v83 = v82[1];
    v85 = v81[1];
    *v81 = v84;
    v81[1] = v83;
    swift_bridgeObjectRelease(v85);
    v86 = v36[12];
    v87 = (_QWORD *)((char *)v34 + v86);
    v88 = (_QWORD *)((char *)v35 + v86);
    v90 = *v88;
    v89 = v88[1];
    v91 = v87[1];
    *v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease(v91);
    v92 = v36[13];
    v93 = (_QWORD *)((char *)v34 + v92);
    v94 = (_QWORD *)((char *)v35 + v92);
    v96 = *v94;
    v95 = v94[1];
    v97 = v93[1];
    *v93 = v96;
    v93[1] = v95;
    swift_bridgeObjectRelease(v97);
    v98 = v36[14];
    v99 = *(_QWORD *)((char *)v34 + v98);
    *(_QWORD *)((char *)v34 + v98) = *(_QWORD *)((char *)v35 + v98);
    swift_bridgeObjectRelease(v99);
    *((_BYTE *)v34 + v36[15]) = *((_BYTE *)v35 + v36[15]);
    v100 = v36[16];
    v101 = (char *)v34 + v100;
    v102 = (char *)v35 + v100;
    v103 = sub_10000B4C8(&qword_100547B50);
    v164 = *(_QWORD *)(v103 - 8);
    v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48);
    __dst = v101;
    LODWORD(v101) = v104(v101, 10, v103);
    __src = v102;
    v105 = v104(v102, 10, v103);
    if ((_DWORD)v101)
    {
      if (!v105)
      {
        v112 = type metadata accessor for Playlist.Variant(0);
        v113 = *(_QWORD *)(v112 - 8);
        v6 = v171;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v102, 1, v112))
        {
          v114 = sub_10000B4C8(&qword_100548358);
          v115 = __dst;
          memcpy(__dst, v102, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v113 + 32))(__dst, v102, v112);
          v123 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56);
          v115 = __dst;
          v123(__dst, 0, 1, v112);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v115, 0, 10, v103);
        goto LABEL_30;
      }
      v106 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 64);
      v107 = __dst;
    }
    else
    {
      if (!v105)
      {
        v116 = type metadata accessor for Playlist.Variant(0);
        v117 = *(_QWORD *)(v116 - 8);
        v118 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v117 + 48);
        v119 = v118(__dst, 1, v116);
        v120 = v118(__src, 1, v116);
        if (v119)
        {
          v6 = v171;
          if (!v120)
          {
            (*(void (**)(void *, char *, uint64_t))(v117 + 32))(__dst, __src, v116);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dst, 0, 1, v116);
            goto LABEL_30;
          }
          v121 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100548358) - 8) + 64);
          v122 = __dst;
        }
        else
        {
          v6 = v171;
          if (!v120)
          {
            (*(void (**)(void *, char *, uint64_t))(v117 + 40))(__dst, __src, v116);
            goto LABEL_30;
          }
          (*(void (**)(void *, uint64_t))(v117 + 8))(__dst, v116);
          v121 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100548358) - 8) + 64);
          v122 = __dst;
        }
        memcpy(v122, __src, v121);
LABEL_30:
        *(_QWORD *)((char *)v34 + v36[17]) = *(_QWORD *)((char *)v35 + v36[17]);
        v124 = v36[18];
        v125 = *(void **)((char *)v34 + v124);
        *(_QWORD *)((char *)v34 + v124) = *(_QWORD *)((char *)v35 + v124);

        v126 = v36[19];
        v127 = *(_QWORD *)((char *)v34 + v126);
        *(_QWORD *)((char *)v34 + v126) = *(_QWORD *)((char *)v35 + v126);
        swift_bridgeObjectRelease(v127);
        goto LABEL_31;
      }
      sub_100011694((uint64_t)__dst, &qword_100547B50);
      v106 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 64);
      v107 = __dst;
    }
    memcpy(v107, v102, v106);
    v6 = v171;
    goto LABEL_30;
  }
  if (v39)
  {
LABEL_7:
    v51 = sub_10000B4C8(&qword_100548310);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  v170 = v6;
  v40 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v40;
  *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
  v41 = v36[7];
  v42 = (char *)v34 + v41;
  v43 = (char *)v35 + v41;
  v44 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  *(_OWORD *)((char *)v34 + v36[8]) = *(_OWORD *)((char *)v35 + v36[8]);
  *(_OWORD *)((char *)v34 + v36[9]) = *(_OWORD *)((char *)v35 + v36[9]);
  *(_OWORD *)((char *)v34 + v36[10]) = *(_OWORD *)((char *)v35 + v36[10]);
  *(_OWORD *)((char *)v34 + v36[11]) = *(_OWORD *)((char *)v35 + v36[11]);
  *(_OWORD *)((char *)v34 + v36[12]) = *(_OWORD *)((char *)v35 + v36[12]);
  *(_OWORD *)((char *)v34 + v36[13]) = *(_OWORD *)((char *)v35 + v36[13]);
  *(_QWORD *)((char *)v34 + v36[14]) = *(_QWORD *)((char *)v35 + v36[14]);
  *((_BYTE *)v34 + v36[15]) = *((_BYTE *)v35 + v36[15]);
  v45 = v36[16];
  v46 = (char *)v34 + v45;
  v47 = (char *)v35 + v45;
  v48 = sub_10000B4C8(&qword_100547B50);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 10, v48))
  {
    v50 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v165 = v49;
    __srca = (void *)v48;
    __dsta = v46;
    v108 = type metadata accessor for Playlist.Variant(0);
    v109 = *(_QWORD *)(v108 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v47, 1, v108))
    {
      v110 = sub_10000B4C8(&qword_100548358);
      v111 = __dsta;
      memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    }
    else
    {
      v111 = __dsta;
      (*(void (**)(void *, char *, uint64_t))(v109 + 32))(__dsta, v47, v108);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(__dsta, 0, 1, v108);
    }
    (*(void (**)(void *, _QWORD, uint64_t, void *))(v165 + 56))(v111, 0, 10, __srca);
  }
  v6 = v170;
  *(_QWORD *)((char *)v34 + v36[17]) = *(_QWORD *)((char *)v35 + v36[17]);
  *(_QWORD *)((char *)v34 + v36[18]) = *(_QWORD *)((char *)v35 + v36[18]);
  *(_QWORD *)((char *)v34 + v36[19]) = *(_QWORD *)((char *)v35 + v36[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
LABEL_31:
  v128 = v175[8];
  v129 = a1 + v128;
  v130 = (char *)(a2 + v128);
  v131 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v132 = *(_QWORD *)(v131 - 8);
  v133 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 48);
  v134 = v133(v129, 1, v131);
  v135 = v133((uint64_t)v130, 1, v131);
  if (v134)
  {
    if (!v135)
    {
      v136 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
      v136(v129, v130, v173);
      v136(v129 + *(int *)(v131 + 20), &v130[*(int *)(v131 + 20)], v173);
      v137 = *(int *)(v131 + 24);
      v138 = (void *)(v129 + v137);
      v139 = &v130[v137];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v139, 1, v173))
      {
        v140 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        v136((uint64_t)v138, v139, v173);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v138, 0, 1, v173);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
      goto LABEL_44;
    }
    goto LABEL_37;
  }
  if (v135)
  {
    sub_10000E750(v129, type metadata accessor for NowPlayingDataProvider.ItemProgress);
LABEL_37:
    v141 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005482D8) - 8) + 64);
    v142 = (void *)v129;
    v143 = v130;
LABEL_38:
    memcpy(v142, v143, v141);
    goto LABEL_44;
  }
  v172(v129, v130, v173);
  v172(v129 + *(int *)(v131 + 20), &v130[*(int *)(v131 + 20)], v173);
  v144 = *(int *)(v131 + 24);
  v145 = (void *)(v129 + v144);
  v146 = &v130[v144];
  v147 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v148 = v147(v145, 1, v173);
  v149 = v147(v146, 1, v173);
  if (v148)
  {
    if (!v149)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 32))(v145, v146, v173);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v145, 0, 1, v173);
      goto LABEL_44;
    }
LABEL_51:
    v141 = *(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005481F0) - 8) + 64);
    v142 = v145;
    v143 = v146;
    goto LABEL_38;
  }
  if (v149)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v145, v173);
    goto LABEL_51;
  }
  v172((uint64_t)v145, v146, v173);
LABEL_44:
  v150 = v175[9];
  v151 = *(void **)(a1 + v150);
  *(_QWORD *)(a1 + v150) = *(_QWORD *)(a2 + v150);

  v152 = v175[10];
  v153 = (_QWORD *)(a1 + v152);
  v154 = (uint64_t *)(a2 + v152);
  v156 = *v154;
  v155 = v154[1];
  v157 = v153[1];
  *v153 = v156;
  v153[1] = v155;
  swift_bridgeObjectRelease(v157);
  if (a1 != a2)
  {
    v158 = *(int *)(a3 + 20);
    v159 = (void *)(a1 + v158);
    v160 = (const void *)(a2 + v158);
    sub_100011694(a1 + v158, &qword_100547EE0);
    v161 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v160, v161) == 1)
    {
      v162 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v159, v160, v162);
      swift_storeEnumTagMultiPayload(v159, v161, 1);
    }
    else
    {
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003CFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003CFC0);
}

uint64_t sub_10003CFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10000B4C8(&qword_1005484F8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10003D038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003D044);
}

uint64_t sub_10003D044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10000B4C8(&qword_1005484F8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TopChartsWidgetView(uint64_t a1)
{
  return sub_10001133C(a1, qword_1005492E0, (uint64_t)&nominal type descriptor for TopChartsWidgetView);
}

void sub_10003D0D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_10003D174(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482498, 1);
}

uint64_t sub_10003D184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;

  v41 = a3;
  v9 = sub_10000B4C8(&qword_100548880);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549748);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100549750);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v42[0] = 0;
    v42[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v43, v42, v22);
    v24 = v44;
    *((_OWORD *)v17 + 2) = v43;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v20, v39, v9);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_100549750);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v27 = sub_100050044(&qword_100549758, &qword_100549750, &qword_100548878, &qword_1005488C0);
    v28 = sub_100011650(&qword_100548878);
    v29 = sub_100012324(&qword_1005488C0, &qword_100548878, (const char *)&protocol conformance descriptor for Grid<A>);
    *(_QWORD *)&v43 = v28;
    *((_QWORD *)&v43 + 1) = v29;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v27, OpaqueTypeConformance2);
    return sub_100011694((uint64_t)v20, &qword_100549750);
  }
  else
  {
    v32 = v40;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
    v33(v11, v39, v9);
    v33(v14, (uint64_t)v11, v9);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v34 = sub_100050044(&qword_100549758, &qword_100549750, &qword_100548878, &qword_1005488C0);
    v35 = sub_100011650(&qword_100548878);
    v36 = sub_100012324(&qword_1005488C0, &qword_100548878, (const char *)&protocol conformance descriptor for Grid<A>);
    *(_QWORD *)&v43 = v35;
    *((_QWORD *)&v43 + 1) = v36;
    v37 = swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v34, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  }
}

uint64_t sub_10003D504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34[2];
  _QWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v34[1] = a3;
  v9 = sub_10000B4C8(&qword_1005495B8);
  __chkstk_darwin(v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549650);
  __chkstk_darwin(v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100549618);
  __chkstk_darwin(v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v35[0] = 0;
    v35[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v36, v35, v22);
    v24 = v37;
    *((_OWORD *)v17 + 2) = v36;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    sub_100011370(v34[0], (uint64_t)v20, &qword_1005495B8);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    v27 = &qword_100549618;
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_100549618);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v28 = sub_10004FC10();
    v29 = sub_10004FC94();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v28, v29);
    v30 = (uint64_t)v20;
  }
  else
  {
    v27 = &qword_1005495B8;
    sub_100011370(v34[0], (uint64_t)v11, &qword_1005495B8);
    sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_1005495B8);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v31 = sub_10004FC10();
    v32 = sub_10004FC94();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v31, v32);
    v30 = (uint64_t)v11;
  }
  return sub_100011694(v30, v27);
}

uint64_t sub_10003D7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;

  v41 = a3;
  v9 = sub_10000B4C8(&qword_100549530);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549568);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100549570);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v42[0] = 0;
    v42[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v43, v42, v22);
    v24 = v44;
    *((_OWORD *)v17 + 2) = v43;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v20, v39, v9);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_100549570);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v27 = sub_100050044(&qword_100549578, &qword_100549570, &qword_100549528, &qword_100549558);
    v28 = sub_100011650(&qword_100549528);
    v29 = sub_100012324(&qword_100549558, &qword_100549528, (const char *)&protocol conformance descriptor for Grid<A>);
    *(_QWORD *)&v43 = v28;
    *((_QWORD *)&v43 + 1) = v29;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v27, OpaqueTypeConformance2);
    return sub_100011694((uint64_t)v20, &qword_100549570);
  }
  else
  {
    v32 = v40;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
    v33(v11, v39, v9);
    v33(v14, (uint64_t)v11, v9);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v34 = sub_100050044(&qword_100549578, &qword_100549570, &qword_100549528, &qword_100549558);
    v35 = sub_100011650(&qword_100549528);
    v36 = sub_100012324(&qword_100549558, &qword_100549528, (const char *)&protocol conformance descriptor for Grid<A>);
    *(_QWORD *)&v43 = v35;
    *((_QWORD *)&v43 + 1) = v36;
    v37 = swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v34, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  }
}

uint64_t sub_10003DB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34[2];
  _QWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v34[1] = a3;
  v9 = sub_10000B4C8(&qword_100549998);
  __chkstk_darwin(v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_1005499A0);
  __chkstk_darwin(v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_1005499A8);
  __chkstk_darwin(v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v35[0] = 0;
    v35[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v36, v35, v22);
    v24 = v37;
    *((_OWORD *)v17 + 2) = v36;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    sub_100011370(v34[0], (uint64_t)v20, &qword_100549998);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    v27 = &qword_1005499A8;
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_1005499A8);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v28 = sub_1000560D8();
    v29 = sub_10005615C();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v28, v29);
    v30 = (uint64_t)v20;
  }
  else
  {
    v27 = &qword_100549998;
    sub_100011370(v34[0], (uint64_t)v11, &qword_100549998);
    sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_100549998);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v31 = sub_1000560D8();
    v32 = sub_10005615C();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v31, v32);
    v30 = (uint64_t)v11;
  }
  return sub_100011694(v30, v27);
}

uint64_t sub_10003DDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34[2];
  _QWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v34[1] = a3;
  v9 = sub_10000B4C8(&qword_1005499E8);
  __chkstk_darwin(v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_1005499F0);
  __chkstk_darwin(v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_1005499F8);
  __chkstk_darwin(v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v35[0] = 0;
    v35[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v36, v35, v22);
    v24 = v37;
    *((_OWORD *)v17 + 2) = v36;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    sub_100011370(v34[0], (uint64_t)v20, &qword_1005499E8);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    v27 = &qword_1005499F8;
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_1005499F8);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v28 = sub_1000561E0();
    v29 = sub_100056264();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v28, v29);
    v30 = (uint64_t)v20;
  }
  else
  {
    v27 = &qword_1005499E8;
    sub_100011370(v34[0], (uint64_t)v11, &qword_1005499E8);
    sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_1005499E8);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v31 = sub_1000561E0();
    v32 = sub_100056264();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v31, v32);
    v30 = (uint64_t)v11;
  }
  return sub_100011694(v30, v27);
}

uint64_t sub_10003E0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34[2];
  _QWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v34[1] = a3;
  v9 = sub_10000B4C8(&qword_100549A20);
  __chkstk_darwin(v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549A28);
  __chkstk_darwin(v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100549A30);
  __chkstk_darwin(v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v35[0] = 0;
    v35[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v36, v35, v22);
    v24 = v37;
    *((_OWORD *)v17 + 2) = v36;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    sub_100011370(v34[0], (uint64_t)v20, &qword_100549A20);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_100549A30);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v27 = sub_1000562E8();
    v28 = sub_10005638C(&qword_100549A40, &qword_100549A20, &qword_100549A58, &qword_100549A60);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v27, v28);
    v29 = (uint64_t)v20;
    v30 = &qword_100549A30;
  }
  else
  {
    sub_100011370(v34[0], (uint64_t)v11, &qword_100549A20);
    sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_100549A20);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v31 = sub_1000562E8();
    v32 = sub_10005638C(&qword_100549A40, &qword_100549A20, &qword_100549A58, &qword_100549A60);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v31, v32);
    v29 = (uint64_t)v11;
    v30 = &qword_100549A20;
  }
  return sub_100011694(v29, v30);
}

uint64_t sub_10003E3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34[2];
  _QWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v34[1] = a3;
  v9 = sub_10000B4C8(&qword_100549A88);
  __chkstk_darwin(v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549A90);
  __chkstk_darwin(v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100549A98);
  __chkstk_darwin(v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v35[0] = 0;
    v35[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v36, v35, v22);
    v24 = v37;
    *((_OWORD *)v17 + 2) = v36;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    sub_100011370(v34[0], (uint64_t)v20, &qword_100549A88);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    v27 = &qword_100549A98;
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_100549A98);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v28 = sub_1000564E8();
    v29 = sub_10005656C();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v28, v29);
    v30 = (uint64_t)v20;
  }
  else
  {
    v27 = &qword_100549A88;
    sub_100011370(v34[0], (uint64_t)v11, &qword_100549A88);
    sub_100011370((uint64_t)v11, (uint64_t)v14, &qword_100549A88);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v31 = sub_1000564E8();
    v32 = sub_10005656C();
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v31, v32);
    v30 = (uint64_t)v11;
  }
  return sub_100011694(v30, v27);
}

uint64_t sub_10003E670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;

  v41 = a3;
  v9 = sub_10000B4C8(&qword_100549AD0);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549AD8);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ErrorMessageModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000B4C8(&qword_100549AE0);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    *((double *)v17 + 2) = a4;
    *((double *)v17 + 3) = a5;
    v42[0] = 0;
    v42[1] = 0;
    type metadata accessor for CGSize();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = State.init(wrappedValue:)(&v43, v42, v22);
    v24 = v44;
    *((_OWORD *)v17 + 2) = v43;
    *((_QWORD *)v17 + 6) = v24;
    Text.Measurements.init()(v23);
    v25 = &v17[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_100425C40);
    v26 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v20, v39, v9);
    sub_10000DB44((uint64_t)v17, (uint64_t)&v20[*(int *)(v18 + 36)], type metadata accessor for ErrorMessageModifier);
    sub_100011370((uint64_t)v20, (uint64_t)v14, &qword_100549AE0);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v27 = sub_1000565F8();
    v28 = sub_100011650(&qword_100549AF0);
    v29 = sub_1000566A4();
    *(_QWORD *)&v43 = v28;
    *((_QWORD *)&v43 + 1) = v29;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v27, OpaqueTypeConformance2);
    return sub_100011694((uint64_t)v20, &qword_100549AE0);
  }
  else
  {
    v32 = v40;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
    v33(v11, v39, v9);
    v33(v14, (uint64_t)v11, v9);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v34 = sub_1000565F8();
    v35 = sub_100011650(&qword_100549AF0);
    v36 = sub_1000566A4();
    *(_QWORD *)&v43 = v35;
    *((_QWORD *)&v43 + 1) = v36;
    v37 = swift_getOpaqueTypeConformance2(&v43, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v14, v18, v9, v34, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  }
}

uint64_t sub_10003E98C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_10003E9BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EE90(&qword_1005486F0, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry, a1);
}

uint64_t sub_10003E9D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA00(&qword_1005486F8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_10003EA00@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100011370(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v28 = a4;
      v23 = swift_slowAlloc(12, -1);
      v29 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v32 = v25;
      *(_DWORD *)v24 = 136315138;
      v31 = sub_1000759E0(v30, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    v26 = swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

uint64_t sub_10003EC38@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA00(&qword_100548900, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_10003EC6C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA00(&qword_100549378, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x8000000100444C40, a1);
}

uint64_t sub_10003EC98(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_1000759E0(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_10004CAC0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_10003EE50@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EA00(&qword_100548908, (uint64_t (*)(_QWORD))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x8000000100444C90, a1);
}

uint64_t sub_10003EE7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EE90(&qword_1005499E0, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry, a1);
}

uint64_t sub_10003EE90@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v16;
  os_log_type_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = v3;
  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(a1);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100011370(v6, (uint64_t)v14, a1);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
    return sub_10000DB44((uint64_t)v14, a3, a2);
  v16 = *v14;
  v17 = static os_log_type_t.fault.getter();
  v18 = static Log.runtimeIssuesLog.getter();
  v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v26 = v21;
    v24 = v16;
    *(_DWORD *)v20 = 136315138;
    v25 = sub_1000759E0(0x7972746E45, 0xE500000000000000, &v26);
    v16 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v11, v16);
  v22 = swift_release(v16);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v22);
}

double sub_10003F0BC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100548BC0, &qword_100548C90).n128_u64[0];
  return result;
}

uint64_t sub_10003F114@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter();
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 120) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 136) = v45[4];
  *(_OWORD *)(a9 + 152) = v37;
  *(_OWORD *)(a9 + 168) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 72) = v45[0];
  *(_OWORD *)(a9 + 88) = v38;
  *(_BYTE *)(a9 + 64) = *(_BYTE *)(v15 + 64);
  *(_OWORD *)(a9 + 104) = v36;
  return sub_10005001C(v15);
}

uint64_t sub_10003F2CC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_10002EBA0(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_10003F4AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1005499D0, &qword_1005499D8).n128_u64[0];
  return result;
}

__n128 sub_10003F504@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_100011370(v18, v19, a16);
  v41 = v19 + *(int *)(sub_10000B4C8(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_10003F6D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100549A68, &qword_100549A70).n128_u64[0];
  return result;
}

_QWORD *sub_10003F728@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[7];
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v41;
    v19 = a10;
    a1 = v42;
    a3 = v43;
    v18 = a12;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v49 = *v15;
  v50 = v34;
  sub_10005642C((uint64_t)&v49, (uint64_t)v52);
  v51 = *((_QWORD *)&v50 + 1);
  v47 = *((_QWORD *)v15 + 4);
  v48 = *((_BYTE *)v15 + 40);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v15 + 25);
  v36 = v46[6];
  v37 = v46[4];
  a9[8] = v46[5];
  a9[9] = v36;
  v38 = v46[1];
  a9[3] = v46[0];
  a9[4] = v38;
  v39 = v46[2];
  a9[6] = v46[3];
  a9[7] = v37;
  a9[5] = v39;
  sub_100056468((uint64_t)v52);
  sub_100056498(&v51);
  return sub_1000564C0(&v47);
}

double sub_10003F900@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100549A78, &qword_100549A80).n128_u64[0];
  return result;
}

double sub_10003F958@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100549AB8, &qword_100549A88).n128_u64[0];
  return result;
}

double sub_10003F9B0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100549B50, &qword_100549B58).n128_u64[0];
  return result;
}

double sub_10003FA08@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10003F504(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100549B28, &qword_100549B18).n128_u64[0];
  return result;
}

uint64_t sub_10003FA60()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_10003FA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_10003FA94()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_10003FAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_10003FAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t (*v33)(char *, uint64_t);
  int v34;
  int v35;
  uint64_t KeyPath;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[2];

  v129 = a1;
  v2 = (int *)type metadata accessor for TopChartsWidgetContentView(0);
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v111 = (uint64_t)&v108 - v6;
  v7 = sub_10000B4C8(&qword_100549318);
  v121 = *(_QWORD *)(v7 - 8);
  v122 = v7;
  __chkstk_darwin(v7);
  v110 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10000B4C8(&qword_100549320);
  v9 = __chkstk_darwin(v128);
  v120 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v123 = (uint64_t)&v108 - v11;
  v126 = sub_10000B4C8(&qword_100549328);
  __chkstk_darwin(v126);
  v127 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v13 = __chkstk_darwin(v130);
  v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v112 = (uint64_t)&v108 - v16;
  v17 = type metadata accessor for RedactionReasons(0);
  v132 = *(_QWORD *)(v17 - 8);
  v133 = v17;
  v18 = __chkstk_darwin(v17);
  v124 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v109 = (char *)&v108 - v20;
  v21 = (int *)type metadata accessor for SmallTopChartsWidgetView(0);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = sub_10000B4C8(&qword_100549330);
  v117 = *(_QWORD *)(v24 - 8);
  v118 = v24;
  __chkstk_darwin(v24);
  v116 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10000B4C8(&qword_100549338);
  v26 = __chkstk_darwin(v125);
  v115 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v119 = (uint64_t)&v108 - v28;
  v29 = type metadata accessor for WidgetFamily(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TopChartsWidgetView(0);
  v131 = v1;
  sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v32);
  v113 = v30;
  v33 = *(uint64_t (**)(char *, uint64_t))(v30 + 88);
  v114 = v29;
  v34 = v33(v32, v29);
  v35 = enum case for WidgetFamily.systemSmall(_:);
  KeyPath = swift_getKeyPath(&unk_100425C18);
  if (v34 == v35)
  {
    *v23 = KeyPath;
    v37 = sub_10000B4C8(&qword_100549340);
    swift_storeEnumTagMultiPayload(v23, v37, 0);
    v38 = (uint64_t *)((char *)v23 + v21[5]);
    *v38 = swift_getKeyPath(&unk_100425C40);
    v39 = sub_10000B4C8(&qword_100547EE0);
    swift_storeEnumTagMultiPayload(v38, v39, 0);
    v40 = (uint64_t *)((char *)v23 + v21[6]);
    *v40 = swift_getKeyPath(&unk_100425CD0);
    v41 = sub_10000B4C8(&qword_100548908);
    swift_storeEnumTagMultiPayload(v40, v41, 0);
    v42 = (uint64_t *)((char *)v23 + v21[7]);
    *v42 = swift_getKeyPath(&unk_100425C70);
    v43 = sub_10000B4C8(&qword_100548900);
    swift_storeEnumTagMultiPayload(v42, v43, 0);
    v44 = (char *)v23 + v21[8];
    *(_QWORD *)v44 = swift_getKeyPath(&unk_100425D00);
    v44[8] = 0;
    v45 = (uint64_t *)((char *)v23 + v21[9]);
    *v45 = swift_getKeyPath(&unk_100425D28);
    v46 = sub_10000B4C8(&qword_100549378);
    swift_storeEnumTagMultiPayload(v45, v46, 0);
    v47 = (uint64_t *)((char *)v23 + v21[10]);
    *v47 = swift_getKeyPath(&unk_100425CA0);
    v48 = sub_10000B4C8(&qword_1005486F8);
    swift_storeEnumTagMultiPayload(v47, v48, 0);
    v49 = v130;
    v50 = v131;
    v51 = v131 + *(int *)(v130 + 20);
    if (qword_100547760 != -1)
      swift_once(&qword_100547760, sub_1000067CC);
    v52 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v53 = sub_10000D78C(v52, (uint64_t)qword_1005611C0);
    v54 = sub_10000E1D4(v51, v53);
    v55 = v112;
    sub_10000D964(v50, v112, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    v56 = v128;
    if ((v54 & 1) != 0)
    {
      v57 = sub_10000E750(v55, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    }
    else
    {
      v74 = *(_QWORD *)(v55 + *(int *)(v49 + 40) + 8);
      swift_bridgeObjectRetain();
      sub_10000E750(v55, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
      if (!v74)
      {
        v134[0] = _swiftEmptyArrayStorage;
        v101 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
        v102 = sub_10000B4C8(&qword_100548708);
        v103 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
        v104 = v109;
        dispatch thunk of SetAlgebra.init<A>(_:)(v134, v102, v103, v133, v101);
        v77 = v104;
        v76 = v125;
        v75 = v126;
        goto LABEL_13;
      }
      v57 = swift_bridgeObjectRelease(v74);
    }
    v76 = v125;
    v75 = v126;
    v77 = v109;
    static RedactionReasons.placeholder.getter(v57);
LABEL_13:
    v78 = sub_10001254C(&qword_100549360, type metadata accessor for SmallTopChartsWidgetView, (uint64_t)&unk_100425E10);
    v79 = v116;
    View.redacted(reason:)(v77, v21, v78);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v77, v133);
    sub_10000E750((uint64_t)v23, type metadata accessor for SmallTopChartsWidgetView);
    v80 = swift_getKeyPath(&unk_100425C18);
    v81 = (uint64_t)v115;
    v82 = (uint64_t *)&v115[*(int *)(v76 + 36)];
    v83 = sub_10000B4C8(&qword_100549350);
    sub_10000D964(v50, (uint64_t)v82 + *(int *)(v83 + 28), type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    *v82 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v117 + 32))(v81, v79, v118);
    v84 = v119;
    sub_100011530(v81, v119, &qword_100549338);
    v85 = v127;
    sub_100011370(v84, v127, &qword_100549338);
    swift_storeEnumTagMultiPayload(v85, v75, 0);
    v86 = sub_1000491AC();
    v87 = sub_10004926C();
    _ConditionalContent<>.init(storage:)(v85, v76, v56, v86, v87);
    return sub_100011694(v84, &qword_100549338);
  }
  *v5 = KeyPath;
  v58 = sub_10000B4C8(&qword_100549340);
  swift_storeEnumTagMultiPayload(v5, v58, 0);
  v59 = (uint64_t *)((char *)v5 + v2[5]);
  *v59 = swift_getKeyPath(&unk_100425C40);
  v60 = sub_10000B4C8(&qword_100547EE0);
  swift_storeEnumTagMultiPayload(v59, v60, 0);
  v61 = (uint64_t *)((char *)v5 + v2[6]);
  *v61 = swift_getKeyPath(&unk_100425C70);
  v62 = sub_10000B4C8(&qword_100548900);
  swift_storeEnumTagMultiPayload(v61, v62, 0);
  v63 = (uint64_t *)((char *)v5 + v2[7]);
  *v63 = swift_getKeyPath(&unk_100425CA0);
  v64 = sub_10000B4C8(&qword_1005486F8);
  swift_storeEnumTagMultiPayload(v63, v64, 0);
  v65 = v111;
  sub_10000DB44((uint64_t)v5, v111, type metadata accessor for TopChartsWidgetContentView);
  v66 = v130;
  v67 = v131;
  v68 = v131 + *(int *)(v130 + 20);
  if (qword_100547760 != -1)
    swift_once(&qword_100547760, sub_1000067CC);
  v69 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v70 = sub_10000D78C(v69, (uint64_t)qword_1005611C0);
  v71 = sub_10000E1D4(v68, v70);
  sub_10000D964(v67, (uint64_t)v15, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v72 = v124;
  if ((v71 & 1) != 0)
  {
    v73 = sub_10000E750((uint64_t)v15, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  }
  else
  {
    v89 = *(_QWORD *)&v15[*(int *)(v66 + 40) + 8];
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v15, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    if (!v89)
    {
      v134[0] = _swiftEmptyArrayStorage;
      v105 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
      v106 = sub_10000B4C8(&qword_100548708);
      v107 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(v134, v106, v107, v133, v105);
      v72 = v124;
      v90 = v128;
      v91 = v127;
      v92 = v110;
      goto LABEL_17;
    }
    v73 = swift_bridgeObjectRelease(v89);
  }
  v90 = v128;
  v91 = v127;
  v92 = v110;
  static RedactionReasons.placeholder.getter(v73);
LABEL_17:
  v93 = sub_10001254C(&qword_100549348, type metadata accessor for TopChartsWidgetContentView, (uint64_t)&unk_100425E60);
  View.redacted(reason:)(v72, v2, v93);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v72, v133);
  sub_10000E750(v65, type metadata accessor for TopChartsWidgetContentView);
  v94 = swift_getKeyPath(&unk_100425C18);
  v95 = (uint64_t)v120;
  v96 = (uint64_t *)&v120[*(int *)(v90 + 36)];
  v97 = sub_10000B4C8(&qword_100549350);
  sub_10000D964(v67, (uint64_t)v96 + *(int *)(v97 + 28), type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  *v96 = v94;
  (*(void (**)(uint64_t, char *, uint64_t))(v121 + 32))(v95, v92, v122);
  v98 = v123;
  sub_100011530(v95, v123, &qword_100549320);
  sub_100011370(v98, v91, &qword_100549320);
  swift_storeEnumTagMultiPayload(v91, v126, 1);
  v99 = sub_1000491AC();
  v100 = sub_10004926C();
  _ConditionalContent<>.init(storage:)(v91, v125, v90, v99, v100);
  sub_100011694(v98, &qword_100549320);
  return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v32, v114);
}

uint64_t sub_1000405E0()
{
  unint64_t v0;

  v0 = sub_1000493B8();
  return EnvironmentValues.subscript.getter(&_s23TopChartsWidgetEntryKeyVN, &_s23TopChartsWidgetEntryKeyVN, v0);
}

uint64_t sub_100040614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v10 - v6;
  sub_10000D964(a1, (uint64_t)&v10 - v6, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  sub_10000D964((uint64_t)v7, (uint64_t)v5, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v8 = sub_1000493B8();
  EnvironmentValues.subscript.setter(v5, &_s23TopChartsWidgetEntryKeyVN, &_s23TopChartsWidgetEntryKeyVN, v8);
  return sub_10000E750((uint64_t)v7, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
}

uint64_t type metadata accessor for TopChartsWidgetContentView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_1005493F0, (uint64_t)&nominal type descriptor for TopChartsWidgetContentView);
}

uint64_t type metadata accessor for SmallTopChartsWidgetView(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100549498, (uint64_t)&nominal type descriptor for SmallTopChartsWidgetView);
}

uint64_t sub_100040714()
{
  unint64_t v0;

  v0 = sub_1000493B8();
  return EnvironmentValues.subscript.getter(&_s23TopChartsWidgetEntryKeyVN, &_s23TopChartsWidgetEntryKeyVN, v0);
}

uint64_t sub_100040758()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100040778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_10004079C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char *v103;
  uint64_t v104;
  uint64_t result;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  unsigned int (*v117)(uint64_t, uint64_t, uint64_t);
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int *v181;
  char *v182;
  uint64_t v183;
  unsigned int (*v184)(uint64_t, uint64_t, uint64_t);
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v157 = a1;
  v187 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v187);
  v185 = (uint64_t)&v147 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for WidgetMusicItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v188 = v3;
  v189 = v4;
  v5 = __chkstk_darwin(v3);
  v178 = (uint64_t)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v191 = (uint64_t)&v147 - v7;
  v8 = type metadata accessor for WidgetFamily(0);
  v176 = *(_QWORD *)(v8 - 8);
  v177 = v8;
  v9 = __chkstk_darwin(v8);
  v182 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v174 = (uint64_t)&v147 - v11;
  v156 = type metadata accessor for ColorScheme(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_100547A38);
  v14 = __chkstk_darwin(v13);
  v148 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v172 = (char *)&v147 - v17;
  __chkstk_darwin(v16);
  v159 = (char *)&v147 - v18;
  v169 = type metadata accessor for BackgroundModifier(0);
  __chkstk_darwin(v169);
  v184 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v166 = type metadata accessor for WidgetLocation(0);
  v162 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000B4C8(&qword_1005495B0);
  __chkstk_darwin(v21);
  v23 = (char *)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_10000B4C8(&qword_1005495B8);
  __chkstk_darwin(v161);
  v160 = (uint64_t)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000B4C8(&qword_1005495C0);
  __chkstk_darwin(v25);
  v167 = (uint64_t)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_10000B4C8(&qword_1005495C8);
  __chkstk_darwin(v165);
  v168 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_10000B4C8(&qword_1005495D0);
  __chkstk_darwin(v170);
  v171 = (char *)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_10000B4C8(&qword_1005495D8);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v173 = (char *)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_10000B4C8(&qword_1005495E0);
  v30 = __chkstk_darwin(v149);
  v151 = (char *)&v147 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v150 = (uint64_t)&v147 - v32;
  v33 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  __chkstk_darwin(v33);
  v35 = (char *)&v147 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v37 = __chkstk_darwin(v36);
  v179 = (uint64_t)&v147 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v41 = (char *)&v147 - v40;
  __chkstk_darwin(v39);
  v43 = (char *)&v147 - v42;
  v44 = sub_10000B4C8(&qword_100548310);
  v45 = __chkstk_darwin(v44);
  v183 = (uint64_t)&v147 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __chkstk_darwin(v45);
  v190 = (uint64_t)&v147 - v48;
  v49 = __chkstk_darwin(v47);
  v163 = (uint64_t)&v147 - v50;
  __chkstk_darwin(v49);
  v52 = (char *)&v147 - v51;
  v180 = v1;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)v43);
  v181 = (int *)v36;
  sub_10000D964((uint64_t)&v43[*(int *)(v36 + 20)], (uint64_t)v35, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750((uint64_t)v43, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v158 = v33;
  v53 = *(_QWORD *)&v35[*(int *)(v33 + 32)];
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v35, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  if (*(_QWORD *)(v53 + 16))
  {
    v54 = v189;
    sub_10000D964(v53 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80)), (uint64_t)v52, type metadata accessor for WidgetMusicItem);
    v55 = 0;
    v56 = (uint64_t)v52;
    v57 = v54;
  }
  else
  {
    v55 = 1;
    v56 = (uint64_t)v52;
    v57 = v189;
  }
  v175 = v56;
  v58 = v188;
  v186 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
  v186(v56, v55, 1, v188);
  v59 = swift_bridgeObjectRelease(v53);
  *(_QWORD *)v23 = static HorizontalAlignment.leading.getter(v59);
  *((_QWORD *)v23 + 1) = 0x4014000000000000;
  v23[16] = 0;
  v60 = sub_10000B4C8(&qword_1005495E8);
  v61 = v180;
  sub_1000418B0(v180, v56, (uint64_t)&v23[*(int *)(v60 + 44)]);
  v62 = (uint64_t)v164;
  sub_100042B2C();
  v63 = sub_100034A18(v62);
  v64 = *(uint64_t (**)(uint64_t, uint64_t))(v162 + 8);
  v65 = v166;
  v66 = v64(v62, v166);
  v67 = static Edge.Set.all.getter(v66);
  v68 = EdgeInsets.init(_all:)(v63);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v160;
  sub_100011370((uint64_t)v23, v160, &qword_1005495B0);
  v76 = v75 + *(int *)(v161 + 36);
  *(_BYTE *)v76 = v67;
  *(double *)(v76 + 8) = v68;
  *(_QWORD *)(v76 + 16) = v70;
  *(_QWORD *)(v76 + 24) = v72;
  *(_QWORD *)(v76 + 32) = v74;
  *(_BYTE *)(v76 + 40) = 0;
  sub_100011694((uint64_t)v23, &qword_1005495B0);
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)v41);
  v77 = (uint64_t *)&v41[v181[10]];
  v78 = v77[1];
  v162 = *v77;
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v41, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  sub_100042B2C();
  v79 = sub_100034A18(v62);
  v64(v62, v65);
  sub_100042B2C();
  v80 = sub_100034A18(v62);
  v64(v62, v65);
  v81 = v167;
  sub_10003D504(v162, v78, v167, v79, v80);
  swift_bridgeObjectRelease(v78);
  sub_100011694(v75, &qword_1005495B8);
  KeyPath = swift_getKeyPath(&unk_100425C18);
  v83 = (uint64_t)v184;
  *(_QWORD *)v184 = KeyPath;
  v84 = sub_10000B4C8(&qword_100549340);
  swift_storeEnumTagMultiPayload(v83, v84, 0);
  v85 = (_QWORD *)(v83 + *(int *)(v169 + 20));
  *v85 = swift_getKeyPath(&unk_100425C40);
  v86 = sub_10000B4C8(&qword_100547EE0);
  swift_storeEnumTagMultiPayload(v85, v86, 0);
  v87 = (uint64_t)v168;
  sub_10000DB44(v83, (uint64_t)&v168[*(int *)(v165 + 36)], type metadata accessor for BackgroundModifier);
  v88 = sub_100011530(v81, v87, &qword_1005495C0);
  v89 = static Alignment.topTrailing.getter(v88);
  v91 = v90;
  v92 = v170;
  v93 = (uint64_t)v171;
  v94 = (uint64_t)&v171[*(int *)(v170 + 36)];
  sub_100043C98(v61, v94);
  v95 = (uint64_t *)(v94 + *(int *)(sub_10000B4C8(&qword_1005495F0) + 36));
  *v95 = v89;
  v95[1] = v91;
  sub_100011530(v87, v93, &qword_1005495C8);
  v96 = v163;
  sub_100011370(v175, v163, &qword_100548310);
  v184 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48);
  if (v184(v96, 1, v58) == 1)
  {
    sub_100011694(v96, &qword_100548310);
    v97 = type metadata accessor for URL(0);
    v98 = (uint64_t)v172;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v172, 1, 1, v97);
    v99 = v182;
LABEL_7:
    v103 = v148;
    URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
    type metadata accessor for URL(0);
    v104 = *(_QWORD *)(v97 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48))(v103, 1, v97);
    if ((_DWORD)result == 1)
      goto LABEL_35;
    v106 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
    v107 = (uint64_t)v159;
    v106(v159, v103, v97);
    sub_100011694(v98, &qword_100547A38);
    goto LABEL_10;
  }
  v100 = v96 + *(int *)(v58 + 28);
  v97 = type metadata accessor for URL(0);
  v101 = *(_QWORD *)(v97 - 8);
  v98 = (uint64_t)v172;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v172, v100, v97);
  sub_10000E750(v96, type metadata accessor for WidgetMusicItem);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v97);
  v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v98, 1, v97);
  v99 = v182;
  if (v102 == 1)
    goto LABEL_7;
  v107 = (uint64_t)v159;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v159, v98, v97);
LABEL_10:
  type metadata accessor for URL(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v107, 0, 1, v97);
  v108 = sub_10004FAE8();
  View.widgetURL(_:)(v107, v92, v108);
  sub_100011694(v107, &qword_100547A38);
  sub_100011694(v93, &qword_1005495D0);
  v109 = v179;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, v179);
  v110 = type metadata accessor for SmallTopChartsWidgetView(0);
  v111 = v174;
  sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v174);
  v112 = *(_QWORD *)(v109 + v181[5] + *(int *)(v158 + 32));
  v114 = v176;
  v113 = v177;
  (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v99, v111, v177);
  v115 = (*(uint64_t (**)(char *, uint64_t))(v114 + 88))(v99, v113);
  v171 = (char *)v110;
  if (v115 == enum case for WidgetFamily.systemSmall(_:))
  {
    swift_bridgeObjectRetain();
    v116 = 1;
    v117 = v184;
  }
  else
  {
    v117 = v184;
    if (v115 == enum case for WidgetFamily.systemMedium(_:))
    {
      swift_bridgeObjectRetain();
      v116 = 2;
    }
    else if (v115 == enum case for WidgetFamily.systemLarge(_:))
    {
      swift_bridgeObjectRetain();
      v116 = 5;
    }
    else if (v115 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      swift_bridgeObjectRetain();
      v116 = 10;
    }
    else
    {
      v118 = *(void (**)(char *, uint64_t))(v176 + 8);
      swift_bridgeObjectRetain();
      v118(v99, v177);
      v116 = 0;
    }
  }
  result = sub_10006BA48(v116, v112);
  v172 = (char *)result;
  v122 = (char *)(v121 >> 1);
  v123 = v185;
  if (v120 == v121 >> 1)
  {
LABEL_20:
    swift_unknownObjectRelease(v172);
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v174, v177);
    sub_10000E750(v179, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    v124 = v154;
    sub_10003EA00(&qword_1005486F8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, v154);
    v125 = v156;
    v126 = v155;
LABEL_33:
    v139 = swift_getKeyPath(&unk_100425EB0);
    v140 = (uint64_t)v151;
    v141 = (uint64_t *)&v151[*(int *)(v149 + 36)];
    v142 = sub_10000B4C8(&qword_100548860);
    (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))((char *)v141 + *(int *)(v142 + 28), v124, v125);
    *v141 = v139;
    v143 = v152;
    v144 = v173;
    v145 = v153;
    (*(void (**)(uint64_t, char *, uint64_t))(v152 + 16))(v140, v173, v153);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v124, v125);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v145);
    v146 = v150;
    sub_100011530(v140, v150, &qword_1005495E0);
    sub_100011530(v146, v157, &qword_1005495E0);
    return sub_100011694(v175, &qword_100548310);
  }
  v127 = v119;
  v128 = v120;
  v129 = v179 + v181[7];
  v181 = (int *)v129;
  v182 = (char *)(v121 >> 1);
  while (v128 < (uint64_t)v122)
  {
    v130 = v191;
    sub_10000D964(v127 + *(_QWORD *)(v189 + 72) * v128, v191, type metadata accessor for WidgetMusicItem);
    v131 = v190;
    sub_10000D964(v130, v190, type metadata accessor for WidgetMusicItem);
    v132 = v188;
    v186(v131, 0, 1, v188);
    v133 = v123 + *(int *)(v187 + 48);
    sub_100011370(v131, v123, &qword_100548310);
    sub_100011370(v129, v133, &qword_100548310);
    if (v117(v123, 1, v132) == 1)
    {
      sub_100011694(v190, &qword_100548310);
      if (v117(v133, 1, v132) == 1)
      {
        sub_100011694(v185, &qword_100548310);
        sub_10000E750(v191, type metadata accessor for WidgetMusicItem);
LABEL_32:
        swift_unknownObjectRelease(v172);
        (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v174, v177);
        sub_10000E750(v179, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
        v126 = v155;
        v124 = v154;
        v125 = v156;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v155 + 104))(v154, enum case for ColorScheme.light(_:), v156);
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    v134 = v127;
    v135 = v190;
    v136 = v183;
    sub_100011370(v123, v183, &qword_100548310);
    if (v117(v133, 1, v132) == 1)
    {
      sub_100011694(v135, &qword_100548310);
      sub_10000E750(v136, type metadata accessor for WidgetMusicItem);
      v117 = v184;
      v127 = v134;
      v129 = (uint64_t)v181;
      v122 = v182;
LABEL_23:
      v123 = v185;
      sub_100011694(v185, &qword_100548868);
      result = sub_10000E750(v191, type metadata accessor for WidgetMusicItem);
      goto LABEL_24;
    }
    v137 = v178;
    sub_10000DB44(v133, v178, type metadata accessor for WidgetMusicItem);
    v138 = sub_100038B84(v136, v137);
    sub_10000E750(v137, type metadata accessor for WidgetMusicItem);
    sub_100011694(v135, &qword_100548310);
    sub_10000E750(v136, type metadata accessor for WidgetMusicItem);
    sub_100011694(v123, &qword_100548310);
    result = sub_10000E750(v191, type metadata accessor for WidgetMusicItem);
    v117 = v184;
    v127 = v134;
    v129 = (uint64_t)v181;
    v122 = v182;
    if ((v138 & 1) != 0)
      goto LABEL_32;
LABEL_24:
    if (v122 == (char *)++v128)
      goto LABEL_20;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000418B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t OpaqueTypeConformance2;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char v78;
  void (*v79)(char *, uint64_t);
  uint64_t *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  char *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  void (*v123)(char *, uint64_t);
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char v140;
  char *v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  uint64_t KeyPath;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v170[4];
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, uint64_t);
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  char v233;
  double v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238;

  v198 = a2;
  v208 = a3;
  v206 = sub_10000B4C8(&qword_100549658);
  __chkstk_darwin(v206);
  v190 = (char *)v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100549660);
  v6 = __chkstk_darwin(v5);
  v189 = (char *)v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v193 = (char *)v170 - v8;
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v186 = *(_QWORD *)(v9 - 8);
  v187 = v9;
  __chkstk_darwin(v9);
  v185 = (char *)v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100549668);
  __chkstk_darwin(v11);
  v182 = (uint64_t *)((char *)v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v183 = sub_10000B4C8(&qword_100549670);
  __chkstk_darwin(v183);
  v184 = (uint64_t)v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_10000B4C8(&qword_100549678);
  v200 = *(_QWORD *)(v202 - 8);
  v14 = __chkstk_darwin(v202);
  v188 = (char *)v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v181 = (char *)v170 - v17;
  __chkstk_darwin(v16);
  v214 = (char *)v170 - v18;
  v19 = type metadata accessor for RedactionReasons(0);
  v179 = *(_QWORD *)(v19 - 8);
  v180 = v19;
  v20 = __chkstk_darwin(v19);
  v178 = (char *)v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v177 = (uint64_t)v170 - v22;
  v203 = sub_10000B4C8(&qword_100549680);
  __chkstk_darwin(v203);
  v204 = (char *)v170 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  __chkstk_darwin(v176);
  v175 = (uint64_t)v170 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v25 = __chkstk_darwin(v192);
  v170[3] = (uint64_t)v170 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v191 = (uint64_t)v170 - v27;
  v209 = type metadata accessor for WidgetMusicItem(0);
  v199 = *(_QWORD *)(v209 - 8);
  v28 = __chkstk_darwin(v209);
  v170[2] = (uint64_t)v170 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v216 = (uint64_t)v170 - v30;
  v31 = sub_10000B4C8(&qword_100549688);
  v32 = __chkstk_darwin(v31);
  v205 = (uint64_t)v170 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v215 = (char *)v170 - v34;
  v35 = type metadata accessor for DynamicTypeSize(0);
  v172 = *(_QWORD *)(v35 - 8);
  v173 = v35;
  v36 = __chkstk_darwin(v35);
  v171 = (char *)v170 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v39 = (char *)v170 - v38;
  v40 = sub_10000B4C8(&qword_100548310);
  v41 = __chkstk_darwin(v40);
  v170[1] = (uint64_t)v170 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v197 = (uint64_t)v170 - v44;
  __chkstk_darwin(v43);
  v46 = (char *)v170 - v45;
  v196 = type metadata accessor for ArtworkView(0);
  v47 = __chkstk_darwin(v196);
  v49 = (char *)v170 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v174 = (uint64_t)v170 - v50;
  v195 = sub_10000B4C8(&qword_100549690);
  __chkstk_darwin(v195);
  v194 = (uint64_t)v170 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for WidgetLocation(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = __chkstk_darwin(v52);
  v56 = (char *)v170 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  v58 = (char *)v170 - v57;
  v59 = sub_10000B4C8(&qword_100549698);
  v60 = __chkstk_darwin(v59);
  v201 = (uint64_t)v170 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v217 = (uint64_t)v170 - v62;
  v63 = a1;
  v64 = sub_100042B2C();
  static WidgetLocation.lockScreen.getter(v64);
  LOBYTE(a1) = static WidgetLocation.== infix(_:_:)(v58, v56);
  v65 = *(void (**)(char *, uint64_t))(v53 + 8);
  v212 = v56;
  v65(v56, v52);
  v210 = v65;
  v211 = v58;
  v213 = v52;
  v65(v58, v52);
  v207 = v63;
  if ((a1 & 1) != 0)
  {
    v66 = v198;
    if (qword_1005477F8 != -1)
      swift_once(&qword_1005477F8, sub_100033F98);
    v67 = sub_10000B4C8(&qword_100548FC0);
    v68 = sub_10000D78C(v67, (uint64_t)qword_1005612A8);
    v69 = v194;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v194, v68, v67);
    swift_storeEnumTagMultiPayload(v69, v195, 0);
    v70 = sub_100011650(&qword_100548FD8);
    v71 = sub_100034E40();
    *(_QWORD *)&v218 = v70;
    *((_QWORD *)&v218 + 1) = v71;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v218, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    v73 = sub_10001254C(&qword_1005496A0, type metadata accessor for ArtworkView, (uint64_t)&unk_1004257A8);
    _ConditionalContent<>.init(storage:)(v69, v67, v196, OpaqueTypeConformance2, v73);
    v74 = v215;
  }
  else
  {
    v66 = v198;
    v170[0] = (uint64_t)v46;
    sub_100011370(v198, (uint64_t)v46, &qword_100548310);
    type metadata accessor for SmallTopChartsWidgetView(0);
    sub_10003EA00(&qword_100548900, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v39);
    v76 = v171;
    v75 = v172;
    v77 = v173;
    (*(void (**)(char *, _QWORD, uint64_t))(v172 + 104))(v171, enum case for DynamicTypeSize.xxLarge(_:), v173);
    v78 = static DynamicTypeSize.< infix(_:_:)(v39, v76);
    v79 = *(void (**)(char *, uint64_t))(v75 + 8);
    v79(v76, v77);
    v79(v39, v77);
    if ((v78 & 1) != 0)
      v80 = Corner.small.unsafeMutableAddressor();
    else
      v80 = Corner.extraSmall.unsafeMutableAddressor();
    v74 = v215;
    v81 = *((_BYTE *)v80 + 16);
    v83 = *v80;
    v82 = v80[1];
    sub_100011530(v170[0], (uint64_t)v49, &qword_100548310);
    v84 = v196;
    v85 = &v49[*(int *)(v196 + 20)];
    *(_QWORD *)v85 = v83;
    *((_QWORD *)v85 + 1) = v82;
    v85[16] = v81;
    v86 = v174;
    sub_10000DB44((uint64_t)v49, v174, type metadata accessor for ArtworkView);
    v87 = v194;
    sub_10000D964(v86, v194, type metadata accessor for ArtworkView);
    swift_storeEnumTagMultiPayload(v87, v195, 1);
    v88 = sub_10000B4C8(&qword_100548FC0);
    v89 = sub_100011650(&qword_100548FD8);
    v90 = sub_100034E40();
    *(_QWORD *)&v218 = v89;
    *((_QWORD *)&v218 + 1) = v90;
    v91 = swift_getOpaqueTypeConformance2(&v218, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    v92 = sub_10001254C(&qword_1005496A0, type metadata accessor for ArtworkView, (uint64_t)&unk_1004257A8);
    _ConditionalContent<>.init(storage:)(v87, v88, v84, v91, v92);
    sub_10000E750(v86, type metadata accessor for ArtworkView);
    v63 = v207;
  }
  v93 = v197;
  sub_100011370(v66, v197, &qword_100548310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v93, 1, v209) != 1)
  {
    sub_10000DB44(v93, v216, type metadata accessor for WidgetMusicItem);
    type metadata accessor for SmallTopChartsWidgetView(0);
    v117 = v177;
    v118 = sub_10003EA00(&qword_100548908, (uint64_t (*)(_QWORD))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x8000000100444C90, v177);
    v119 = v178;
    static RedactionReasons.placeholder.getter(v118);
    v120 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v121 = v180;
    v122 = dispatch thunk of SetAlgebra.isSuperset(of:)(v119, v180, v120);
    v123 = *(void (**)(char *, uint64_t))(v179 + 8);
    v123(v119, v121);
    v124 = (_QWORD *)((uint64_t (*)(uint64_t, uint64_t))v123)(v117, v121);
    v125 = 0;
    v126 = 0;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    if ((v122 & 1) != 0)
    {
      v132 = static Alignment.center.getter(v124);
      v125 = 1;
      v124 = _FrameLayout.init(width:height:alignment:)(&v218, 0, 1, 0x4034000000000000, 0, v132, v133);
      v126 = v218;
      v127 = BYTE8(v218);
      v128 = v219;
      v129 = BYTE8(v219);
      v131 = *((_QWORD *)&v220 + 1);
      v130 = v220;
    }
    v194 = v130;
    v195 = v129;
    v196 = v128;
    v197 = v127;
    v198 = v126;
    v199 = v125;
    LODWORD(v180) = v122 ^ 1;
    v134 = static HorizontalAlignment.leading.getter(v124);
    v135 = (uint64_t)v182;
    *v182 = v134;
    *(_QWORD *)(v135 + 8) = 0;
    *(_BYTE *)(v135 + 16) = 0;
    v136 = sub_10000B4C8(&qword_1005496E0);
    sub_100042D38(v63, v216, v135 + *(int *)(v136 + 44));
    v137 = v211;
    v138 = sub_100042B2C();
    v139 = v212;
    static WidgetLocation.lockScreen.getter(v138);
    v140 = static WidgetLocation.== infix(_:_:)(v137, v139);
    v141 = v139;
    v142 = v213;
    v143 = v210;
    v210(v141, v213);
    v143(v137, v142);
    if ((v140 & 1) != 0)
      v144 = 2;
    else
      v144 = 1;
    KeyPath = swift_getKeyPath(&unk_100425F00);
    v146 = v184;
    sub_100011370(v135, v184, &qword_100549668);
    v147 = v183;
    v148 = v146 + *(int *)(v183 + 36);
    *(_QWORD *)v148 = KeyPath;
    *(_QWORD *)(v148 + 8) = v144;
    *(_BYTE *)(v148 + 16) = 0;
    v149 = sub_100011694(v135, &qword_100549668);
    v150 = v185;
    static AccessibilityChildBehavior.combine.getter(v149);
    v151 = sub_10004FDDC();
    v152 = v181;
    View.accessibilityElement(children:)(v150, v147, v151);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v150, v187);
    sub_100011694(v146, &qword_100549670);
    v153 = (*(uint64_t (**)(char *, char *, uint64_t))(v200 + 32))(v214, v152, v202);
    v154 = (char *)&loc_100042684 + 4 * byte_100425B90[sub_1000AA740(v153)];
    v179 = v131;
    __asm { BR              X10 }
  }
  sub_100011694(v93, &qword_100548310);
  v94 = v191;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, v191);
  v95 = v175;
  sub_10000D964(v94 + *(int *)(v192 + 20), v175, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750(v94, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v96 = (uint64_t *)(v95 + *(int *)(v176 + 28));
  v98 = *v96;
  v97 = v96[1];
  swift_bridgeObjectRetain();
  v99 = sub_10000E750(v95, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v100 = static Edge.Set.top.getter(v99);
  v101 = EdgeInsets.init(_all:)(16.0);
  v230 = v98;
  v231 = v97;
  v232 = 0;
  v233 = v100;
  v234 = v101;
  v235 = v102;
  v236 = v103;
  v237 = v104;
  v238 = 0;
  v106 = static Alignment.leading.getter(v105);
  sub_10003F114(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v218, 0.0, 1, 0.0, 1, v106, v107);
  swift_bridgeObjectRelease(v97);
  v108 = v227;
  v109 = v204;
  *((_OWORD *)v204 + 8) = v226;
  *((_OWORD *)v109 + 9) = v108;
  *((_OWORD *)v109 + 10) = v228;
  *((_QWORD *)v109 + 22) = v229;
  v110 = v223;
  *((_OWORD *)v109 + 4) = v222;
  *((_OWORD *)v109 + 5) = v110;
  v111 = v225;
  *((_OWORD *)v109 + 6) = v224;
  *((_OWORD *)v109 + 7) = v111;
  v112 = v219;
  *(_OWORD *)v109 = v218;
  *((_OWORD *)v109 + 1) = v112;
  v113 = v221;
  *((_OWORD *)v109 + 2) = v220;
  *((_OWORD *)v109 + 3) = v113;
  swift_storeEnumTagMultiPayload(v109, v203, 1);
  v114 = sub_10000B4C8(&qword_1005496A8);
  v115 = sub_100012324(&qword_1005496B0, &qword_100549658, (const char *)&protocol conformance descriptor for TupleView<A>);
  v116 = sub_10002F800(&qword_1005496B8, &qword_1005496A8, sub_10004FD18, (uint64_t)&protocol witness table for _FlexFrameLayout);
  _ConditionalContent<>.init(storage:)(v109, v206, v114, v115, v116);
  v155 = v211;
  v156 = sub_100042B2C();
  v157 = v212;
  static WidgetLocation.lockScreen.getter(v156);
  LOBYTE(v114) = static WidgetLocation.== infix(_:_:)(v155, v157);
  v158 = v157;
  v159 = v213;
  v160 = v210;
  v210(v158, v213);
  v160(v155, v159);
  v161 = v217;
  v162 = v201;
  sub_100011370(v217, v201, &qword_100549698);
  v163 = (uint64_t)v74;
  v164 = (uint64_t)v74;
  v165 = v205;
  sub_100011370(v164, v205, &qword_100549688);
  v166 = v208;
  sub_100011370(v162, v208, &qword_100549698);
  v167 = sub_10000B4C8(&qword_1005496D8);
  sub_100011370(v165, v166 + *(int *)(v167 + 48), &qword_100549688);
  v168 = v166 + *(int *)(v167 + 64);
  *(_QWORD *)v168 = 0;
  *(_BYTE *)(v168 + 8) = v114 & 1;
  *(_BYTE *)(v168 + 9) = (v114 & 1) == 0;
  sub_100011694(v163, &qword_100549688);
  sub_100011694(v161, &qword_100549698);
  sub_100011694(v165, &qword_100549688);
  return sub_100011694(v162, &qword_100549698);
}

uint64_t sub_100042B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for SmallTopChartsWidgetView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetRenderingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v27 - v10;
  v13 = sub_10003EA00(&qword_100549378, v12, 0xD000000000000013, 0x8000000100444C40, (uint64_t)&v27 - v10);
  static WidgetRenderingMode.vibrant.getter(v13);
  v14 = static WidgetRenderingMode.== infix(_:_:)(v11, v9);
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  v15(v11, v5);
  sub_10000D964(v1, (uint64_t)v4, type metadata accessor for SmallTopChartsWidgetView);
  if ((v14 & 1) != 0)
  {
    v16 = &v4[*(int *)(v2 + 32)];
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    sub_10004C60C(*(_QWORD *)v16, v18);
    v19 = sub_10003EC98(v17, v18);
    sub_10004CAC0(v17, v18);
    v20 = sub_10000E750((uint64_t)v4, type metadata accessor for SmallTopChartsWidgetView);
    if ((v19 & 1) == 0)
      return static WidgetLocation.lockScreen.getter(v20);
  }
  else
  {
    sub_10000E750((uint64_t)v4, type metadata accessor for SmallTopChartsWidgetView);
  }
  v22 = v1 + *(int *)(v2 + 32);
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_10004C60C(*(_QWORD *)v22, v24);
  v25 = sub_10003EC98(v23, v24);
  v26 = sub_10004CAC0(v23, v24);
  if ((v25 & 1) != 0)
    return static WidgetLocation.homeScreen.getter(v26);
  else
    return static WidgetLocation.standBy.getter(v26);
}

uint64_t sub_100042D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  double v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  char v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  void *v113;
  Swift::String v114;
  void *v115;
  uint64_t v116;
  Swift::String v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  _QWORD *v158;
  char v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  _OWORD *v235;
  uint64_t *v236;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  _QWORD *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  _QWORD *v260;
  uint64_t v261;
  _OWORD v262[9];
  _OWORD v263[12];
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  _OWORD v273[10];

  v250 = a2;
  v247 = a3;
  v4 = type metadata accessor for DynamicTypeSize(0);
  v260 = *(_QWORD **)(v4 - 8);
  v261 = v4;
  v5 = __chkstk_darwin(v4);
  v259 = (char *)&v238 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v258 = (uint64_t)&v238 - v7;
  v244 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v244);
  v242 = (uint64_t *)((char *)&v238 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v9);
  v241 = (char *)&v238 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = type metadata accessor for Font.TextStyle(0);
  v11 = *(_QWORD *)(v238 - 8);
  __chkstk_darwin(v238);
  v13 = (char *)&v238 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v238 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v238 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = sub_10000B4C8(&qword_100549700);
  __chkstk_darwin(v240);
  v239 = (char *)&v238 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = sub_10000B4C8(&qword_100549708);
  __chkstk_darwin(v248);
  v245 = (char *)&v238 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000B4C8(&qword_100549710);
  v252 = *(_QWORD *)(v22 - 8);
  v253 = (_QWORD *)v22;
  __chkstk_darwin(v22);
  v251 = (char *)&v238 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = sub_10000B4C8(&qword_100549718);
  __chkstk_darwin(v243);
  v254 = (char *)&v238 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_10000B4C8(&qword_100549720);
  v25 = __chkstk_darwin(v256);
  v246 = (uint64_t)&v238 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v255 = (uint64_t)&v238 - v28;
  __chkstk_darwin(v27);
  v249 = (uint64_t)&v238 - v29;
  v257 = a1;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)v19);
  sub_10000D964((uint64_t)&v19[*(int *)(v17 + 20)], (uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750((uint64_t)v19, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v30 = &v16[*(int *)(v14 + 28)];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v16, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  *(_QWORD *)&v273[0] = v32;
  *((_QWORD *)&v273[0] + 1) = v31;
  v33 = sub_10001D9DC();
  v34 = Text.init<A>(_:)(v273, &type metadata for String, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39 & 1;
  v41 = 0.0;
  v42 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 0.0);
  v43 = objc_msgSend(v42, "fontName");

  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v46 = v45;

  v47 = v13;
  v48 = v13;
  v49 = v238;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v48, enum case for Font.TextStyle.caption2(_:), v238);
  v50 = v44;
  v51 = v47;
  v52 = static Font.custom(_:size:relativeTo:)(v50, v46, v47, 9.0);
  swift_bridgeObjectRelease(v46);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v51, v49);
  v53 = Text.font(_:)(v52, v34, v36, v40, v38);
  v55 = v54;
  LOBYTE(v11) = v56;
  v58 = v57;
  swift_release(v52);
  LOBYTE(v52) = v11 & 1;
  sub_10001DA20(v34, v36, v40);
  v59 = swift_bridgeObjectRelease(v38);
  v60 = static Font.Weight.semibold.getter(v59);
  v61 = Text.fontWeight(_:)(*(_QWORD *)&v60, 0, v53, v55, v11 & 1, v58);
  v63 = v62;
  v65 = v64;
  LOBYTE(v11) = v66 & 1;
  v67 = v55;
  v68 = (uint64_t)v239;
  sub_10001DA20(v53, v67, v52);
  swift_bridgeObjectRelease(v58);
  v69 = enum case for Text.Case.uppercase(_:);
  v70 = type metadata accessor for Text.Case(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = (uint64_t)v241;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v241, v69, v70);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v72, 0, 1, v70);
  KeyPath = swift_getKeyPath(&unk_100425F30);
  v74 = v242;
  sub_100011370(v72, (uint64_t)v242 + *(int *)(v244 + 28), &qword_100548A48);
  *v74 = KeyPath;
  sub_100011370((uint64_t)v74, v68 + *(int *)(v240 + 36), &qword_100548A40);
  *(_QWORD *)v68 = v61;
  *(_QWORD *)(v68 + 8) = v63;
  *(_BYTE *)(v68 + 16) = v11;
  *(_QWORD *)(v68 + 24) = v65;
  sub_10002EBA0(v61, v63, v11);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v74, &qword_100548A40);
  sub_100011694(v72, &qword_100548A48);
  sub_10001DA20(v61, v63, v11);
  swift_bridgeObjectRelease(v65);
  if (qword_1005477C8 != -1)
    swift_once(&qword_1005477C8, sub_1000339F4);
  v242 = (uint64_t *)sub_10000B4C8(&qword_100548AA0);
  v75 = sub_10000D78C((uint64_t)v242, (uint64_t)qword_100561238);
  v76 = v248;
  v77 = (uint64_t)v245;
  sub_100011370(v75, (uint64_t)&v245[*(int *)(v248 + 36)], &qword_100548AA0);
  sub_100011530(v68, v77, &qword_100549700);
  v78 = sub_10004FE9C();
  v79 = v251;
  View.widgetAccentable(_:)(1, v76, v78);
  v80 = sub_100011694(v77, &qword_100549708);
  v81 = static Edge.Set.bottom.getter(v80);
  v82 = EdgeInsets.init(_all:)(1.0);
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v252;
  v89 = v253;
  v91 = (uint64_t)v254;
  (*(void (**)(char *, char *, _QWORD *))(v252 + 16))(v254, v79, v253);
  v92 = v91 + *(int *)(v243 + 36);
  *(_BYTE *)v92 = v81;
  *(double *)(v92 + 8) = v82;
  *(_QWORD *)(v92 + 16) = v84;
  *(_QWORD *)(v92 + 24) = v86;
  *(_QWORD *)(v92 + 32) = v88;
  *(_BYTE *)(v92 + 40) = 0;
  v93 = (*(uint64_t (**)(char *, _QWORD *))(v90 + 8))(v79, v89);
  v94 = static Edge.Set.trailing.getter(v93);
  type metadata accessor for SmallTopChartsWidgetView(0);
  v95 = v258;
  sub_10003EA00(&qword_100548900, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, v258);
  v97 = v259;
  v96 = v260;
  v98 = v261;
  ((void (*)(char *, _QWORD, uint64_t))v260[13])(v259, enum case for DynamicTypeSize.xxxLarge(_:), v261);
  v99 = static DynamicTypeSize.< infix(_:_:)(v95, v97);
  v100 = (void (*)(char *, uint64_t))v96[1];
  v100(v97, v98);
  v100((char *)v95, v98);
  v101 = v250;
  if ((v99 & 1) == 0)
  {
    if (qword_100547830 != -1)
      swift_once(&qword_100547830, sub_1000347B0);
    v41 = *(double *)&qword_100561328;
  }
  v102 = EdgeInsets.init(_all:)(v41);
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v109 = v255;
  sub_100011370(v91, v255, &qword_100549718);
  v110 = v109 + *(int *)(v256 + 36);
  *(_BYTE *)v110 = v94;
  *(double *)(v110 + 8) = v102;
  *(_QWORD *)(v110 + 16) = v104;
  *(_QWORD *)(v110 + 24) = v106;
  *(_QWORD *)(v110 + 32) = v108;
  *(_BYTE *)(v110 + 40) = 0;
  sub_100011694(v91, &qword_100549718);
  sub_100011530(v109, v249, &qword_100549720);
  *(_QWORD *)&v273[0] = 49;
  *((_QWORD *)&v273[0] + 1) = 0xE100000000000000;
  v111 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
  v112 = *v111;
  v113 = (void *)v111[1];
  swift_bridgeObjectRetain();
  v114._countAndFlagsBits = v112;
  v114._object = v113;
  String.append(_:)(v114);
  swift_bridgeObjectRelease(v113);
  v116 = *v111;
  v115 = (void *)v111[1];
  swift_bridgeObjectRetain();
  v117._countAndFlagsBits = v116;
  v117._object = v115;
  String.append(_:)(v117);
  swift_bridgeObjectRelease(v115);
  v118 = v273[0];
  v119 = *(_QWORD *)(v101 + 16);
  v120 = *(_QWORD *)(v101 + 24);
  swift_bridgeObjectRetain();
  v121 = _swiftEmptyArrayStorage;
  v122 = static Text.+ infix(_:_:)(v118, *((_QWORD *)&v118 + 1), 0, _swiftEmptyArrayStorage, v119, v120, 0, _swiftEmptyArrayStorage);
  v124 = v123;
  v126 = v125;
  v248 = v127;
  swift_bridgeObjectRelease(*((_QWORD *)&v118 + 1));
  swift_bridgeObjectRelease(v120);
  v128 = *(_QWORD *)(v101 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 56));
  v129 = *(char **)(v128 + 16);
  v244 = v124;
  v245 = (char *)v122;
  if (v129)
  {
    v130 = v129;
    LODWORD(v243) = v126;
    v131 = qword_100547858;
    swift_bridgeObjectRetain_n(v128, 2);
    if (v131 != -1)
      swift_once(&qword_100547858, sub_10003830C);
    v132 = 0;
    v133 = 0;
    LODWORD(v261) = 0;
    v134 = 0xE000000000000000;
    v121 = _swiftEmptyArrayStorage;
    v251 = v130;
    v252 = v128;
    do
    {
      v258 = v133;
      v259 = (char *)v134;
      v260 = v121;
      v135 = &(v132++)[v128];
      TextBadge.view(favoriteBadgeConfiguration:)(qword_100549040, v135[32]);
      v137 = v136;
      v139 = v138;
      v141 = v140;
      v143 = v142 & 1;
      v144 = ((uint64_t (*)(void))static Font.caption.getter)();
      v145 = Text.font(_:)(v144, v137, v139, v143, v141);
      v256 = v147;
      v257 = v146;
      v149 = v148;
      swift_release(v144);
      v150 = v149 & 1;
      sub_10001DA20(v137, v139, v143);
      swift_bridgeObjectRelease(v141);
      LOBYTE(v144) = v261 & 1;
      v152 = v258;
      v151 = v259;
      v153 = v260;
      v154 = v256;
      v155 = v257;
      v156 = static Text.+ infix(_:_:)(v258, v259, v261 & 1, v260, v145, v257, v150, v256);
      v254 = v157;
      v255 = v156;
      v253 = v158;
      LODWORD(v261) = v159 & 1;
      v160 = v145;
      v161 = v251;
      sub_10001DA20(v160, v155, v150);
      swift_bridgeObjectRelease(v154);
      v162 = v152;
      v163 = (uint64_t)v151;
      v121 = v253;
      v134 = (uint64_t)v254;
      v133 = v255;
      v164 = v144;
      v128 = v252;
      sub_10001DA20(v162, v163, v164);
      swift_bridgeObjectRelease(v153);
    }
    while (v161 != v132);
    swift_bridgeObjectRelease_n(v128, 2);
    LOBYTE(v126) = v243;
    v165 = v261;
  }
  else
  {
    v133 = 0;
    v165 = 0;
    v134 = 0xE000000000000000;
  }
  v166 = v126 & 1;
  v167 = v244;
  v168 = (uint64_t)v245;
  v169 = v126 & 1;
  v170 = v248;
  v171 = static Text.+ infix(_:_:)(v245, v244, v169, v248, v133, v134, v165, v121);
  v259 = v172;
  v260 = (_QWORD *)v171;
  v261 = v173;
  v175 = v174 & 1;
  sub_10001DA20(v133, v134, v165);
  swift_bridgeObjectRelease(v121);
  sub_10001DA20(v168, v167, v166);
  v176 = swift_bridgeObjectRelease(v170);
  v177 = static Font.caption.getter(v176);
  v178 = Font.bold()();
  swift_release(v177);
  v180 = (uint64_t)v259;
  v179 = (uint64_t)v260;
  v181 = v261;
  v182 = Text.font(_:)(v178, v260, v259, v175, v261);
  v184 = v183;
  v186 = v185;
  v188 = v187;
  swift_release(v178);
  sub_10001DA20(v179, v180, v175);
  swift_bridgeObjectRelease(v181);
  if (qword_1005477D0 != -1)
    swift_once(&qword_1005477D0, sub_100033BF8);
  v189 = v186 & 1;
  v190 = Text.foregroundColor(_:)(qword_100561250, v182, v184, v186 & 1, v188);
  v192 = v191;
  v194 = v193;
  v196 = v195 & 1;
  sub_10001DA20(v182, v184, v189);
  v197 = swift_bridgeObjectRelease(v188);
  v198 = static Alignment.leading.getter(v197);
  sub_10003F2CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v273, 0.0, 1, 0.0, 1, v198, v199, v190, v192, v196, v194);
  sub_10001DA20(v190, v192, v196);
  swift_bridgeObjectRelease(v194);
  v270 = v273[6];
  v271 = v273[7];
  v272 = v273[8];
  v266 = v273[2];
  v267 = v273[3];
  v268 = v273[4];
  v269 = v273[5];
  v264 = v273[0];
  v265 = v273[1];
  v200 = *(_QWORD *)(v250 + 40);
  if (!v200)
  {
    v216 = 0;
LABEL_25:
    v221 = 0;
    v219 = 0;
    goto LABEL_26;
  }
  v201 = *(_QWORD *)(v250 + 32);
  v202 = HIBYTE(v200) & 0xF;
  if ((v200 & 0x2000000000000000) == 0)
    v202 = v201 & 0xFFFFFFFFFFFFLL;
  if (!v202)
  {
    v216 = 0;
    v200 = 0;
    goto LABEL_25;
  }
  v203 = swift_bridgeObjectRetain();
  v204 = static Font.caption.getter(v203);
  v205 = Text.font(_:)(v204, v201, v200, 0, _swiftEmptyArrayStorage);
  v207 = v206;
  v209 = v208;
  v211 = v210;
  swift_bridgeObjectRelease(v200);
  swift_release(v204);
  if (qword_1005477D8 != -1)
    swift_once(&qword_1005477D8, sub_100033C14);
  v212 = (uint64_t)v242;
  v213 = sub_10000D78C((uint64_t)v242, (uint64_t)qword_100561258);
  v214 = sub_100012324(&qword_100549740, &qword_100548AA0, (const char *)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v215 = v209 & 1;
  v216 = Text.foregroundStyle<A>(_:)(v213, v205, v207, v209 & 1, v211, v212, v214);
  v200 = v217;
  v219 = v218;
  v221 = v220 & 1;
  sub_10001DA20(v205, v207, v215);
  swift_bridgeObjectRelease(v211);
LABEL_26:
  v222 = v249;
  v223 = v246;
  sub_100011370(v249, v246, &qword_100549720);
  v224 = v247;
  sub_100011370(v223, v247, &qword_100549720);
  v225 = sub_10000B4C8(&qword_100549738);
  v226 = *(int *)(v225 + 48);
  v227 = v271;
  v262[6] = v270;
  v262[7] = v271;
  v228 = v272;
  v262[8] = v272;
  v230 = v268;
  v229 = v269;
  v262[4] = v268;
  v262[5] = v269;
  v231 = v266;
  v232 = v267;
  v262[2] = v266;
  v262[3] = v267;
  v234 = v264;
  v233 = v265;
  v262[0] = v264;
  v262[1] = v265;
  v235 = (_OWORD *)(v224 + v226);
  v235[6] = v270;
  v235[7] = v227;
  v235[8] = v228;
  v235[2] = v231;
  v235[3] = v232;
  v235[4] = v230;
  v235[5] = v229;
  *v235 = v234;
  v235[1] = v233;
  v236 = (uint64_t *)(v224 + *(int *)(v225 + 64));
  *v236 = v216;
  v236[1] = v200;
  v236[2] = v221;
  v236[3] = v219;
  sub_10004FFA4((uint64_t)v262);
  sub_10002EB70(v216, v200, v221, v219);
  sub_100011694(v222, &qword_100549720);
  sub_10002EBB0(v216, v200, v221, v219);
  v263[6] = v270;
  v263[7] = v271;
  v263[8] = v272;
  v263[2] = v266;
  v263[3] = v267;
  v263[4] = v268;
  v263[5] = v269;
  v263[0] = v264;
  v263[1] = v265;
  sub_10004FFE0((uint64_t)v263);
  return sub_100011694(v223, &qword_100549720);
}

uint64_t sub_100043C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned __int8 v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unsigned __int8 v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a2;
  v3 = sub_10000B4C8(&qword_100548BD0);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10000B4C8(&qword_100549640);
  __chkstk_darwin(v53);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100549648);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v52 - v16;
  v54 = a1;
  v18 = sub_100042B2C();
  static WidgetLocation.lockScreen.getter(v18);
  v19 = sub_10001254C(&qword_100548FB8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetLocation, (uint64_t)&protocol conformance descriptor for WidgetLocation);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v17, v15, v11, v19);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  v20(v17, v11);
  if ((a1 & 1) != 0)
  {
    v21 = 1;
    v23 = v56;
    v22 = v57;
  }
  else
  {
    if (qword_100547800 != -1)
      swift_once(&qword_100547800, sub_100034248);
    v24 = sub_10000D78C(v3, (uint64_t)qword_1005612C0);
    v25 = sub_100011370(v24, (uint64_t)v5, &qword_100548BD0);
    v26 = static Edge.Set.trailing.getter(v25);
    v27 = v26;
    v28 = static Edge.Set.trailing.getter(v26);
    sub_100042B2C();
    v29 = sub_100034B64(v28, (uint64_t)v17);
    v20(v17, v11);
    v30 = EdgeInsets.init(_all:)(v29);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    sub_100011370((uint64_t)v5, (uint64_t)v7, &qword_100548BD0);
    v37 = &v7[*(int *)(v53 + 36)];
    *v37 = v27;
    *((double *)v37 + 1) = v30;
    *((_QWORD *)v37 + 2) = v32;
    *((_QWORD *)v37 + 3) = v34;
    *((_QWORD *)v37 + 4) = v36;
    v37[40] = 0;
    v38 = sub_100011694((uint64_t)v5, &qword_100548BD0);
    v39 = static Edge.Set.top.getter(v38);
    v40 = v39;
    v41 = static Edge.Set.top.getter(v39);
    sub_100042B2C();
    v42 = sub_100034B64(v41, (uint64_t)v17);
    v20(v17, v11);
    v43 = EdgeInsets.init(_all:)(v42);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    sub_100011370((uint64_t)v7, (uint64_t)v10, &qword_100549640);
    v23 = v56;
    v50 = &v10[*(int *)(v56 + 36)];
    *v50 = v40;
    *((double *)v50 + 1) = v43;
    *((_QWORD *)v50 + 2) = v45;
    *((_QWORD *)v50 + 3) = v47;
    *((_QWORD *)v50 + 4) = v49;
    v50[40] = 0;
    sub_100011694((uint64_t)v7, &qword_100549640);
    v22 = v57;
    sub_100011530((uint64_t)v10, v57, &qword_100549648);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v22, v21, 1, v23);
}

uint64_t sub_10004400C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t (*v35)(_BYTE *, uint64_t);
  int v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t result;
  uint64_t v72;
  _BYTE *v73;
  unint64_t v74;
  int64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  unsigned int (*v85)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE v93[12];
  int v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t (*v104)(_BYTE *, uint64_t);
  void (*v105)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t (*v110)(_BYTE *, uint64_t);
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  double v123[5];

  v101 = a1;
  v120 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v120);
  v3 = &v93[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10000B4C8(&qword_100548310);
  v5 = __chkstk_darwin(v4);
  v7 = &v93[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v93[-v8];
  v121 = type metadata accessor for WidgetMusicItem(0);
  v119 = *(_QWORD *)(v121 - 8);
  v10 = __chkstk_darwin(v121);
  v115 = &v93[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v122 = &v93[-v12];
  v117 = (_BYTE *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v117);
  v116 = &v93[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v100 = type metadata accessor for ColorScheme(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = &v93[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = type metadata accessor for BackgroundModifier(0);
  __chkstk_darwin(v109);
  v108 = (uint64_t *)&v93[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_10000B4C8(&qword_100549500);
  __chkstk_darwin(v16);
  v18 = &v93[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v106 = sub_10000B4C8(&qword_100549508);
  __chkstk_darwin(v106);
  v102 = &v93[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v107 = sub_10000B4C8(&qword_100549510);
  __chkstk_darwin(v107);
  v113 = &v93[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = sub_10000B4C8(&qword_100549518);
  __chkstk_darwin(v96);
  v97 = &v93[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = type metadata accessor for WidgetFamily(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v118 = &v93[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = __chkstk_darwin(v24);
  v112 = &v93[-v27];
  v28 = __chkstk_darwin(v26);
  v30 = &v93[-v29];
  __chkstk_darwin(v28);
  v32 = &v93[-v31];
  v95 = type metadata accessor for TopChartsWidgetContentView(0);
  v33 = *(int *)(v95 + 20);
  v111 = v1;
  v103 = v1 + v33;
  sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v32);
  v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 16);
  v34(v30, v32, v22);
  v35 = *(uint64_t (**)(_BYTE *, uint64_t))(v23 + 88);
  v114 = v22;
  v104 = v35;
  v36 = v35(v30, v22);
  v105 = v34;
  v94 = enum case for WidgetFamily.systemMedium(_:);
  if (v36 == enum case for WidgetFamily.systemMedium(_:))
  {
    v37 = 8.0;
    v38 = 6.0;
    v39 = 10.0;
    v40 = 2;
    v41 = 1;
  }
  else
  {
    v37 = 12.0;
    v38 = 8.0;
    v39 = 14.0;
    if (v36 == enum case for WidgetFamily.systemLarge(_:))
    {
      v41 = 1;
      v40 = 5;
    }
    else if (v36 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      v41 = 2;
      v40 = 5;
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v30, v114);
      v40 = 0;
      v41 = 0;
      v39 = 0.0;
      v38 = 0.0;
      v37 = 0.0;
    }
  }
  v42 = v114;
  v110 = *(uint64_t (**)(_BYTE *, uint64_t))(v23 + 8);
  v43 = v110(v32, v114);
  *(_QWORD *)v18 = static HorizontalAlignment.center.getter(v43);
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v44 = &v18[*(int *)(sub_10000B4C8(&qword_100549520) + 44)];
  *(_QWORD *)&v123[0] = v40;
  *(_QWORD *)&v123[1] = v41;
  v123[2] = v39;
  v123[3] = v38;
  v123[4] = v37;
  v45 = sub_100044B64(v111, v123, v44);
  v46 = static Edge.Set.all.getter(v45);
  v47 = v102;
  sub_100011370((uint64_t)v18, (uint64_t)v102, &qword_100549500);
  v48 = &v47[*(int *)(v106 + 36)];
  *v48 = v46;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v48 + 8) = _Q0;
  *(_OWORD *)(v48 + 24) = xmmword_100425150;
  v48[40] = 0;
  sub_100011694((uint64_t)v18, &qword_100549500);
  KeyPath = swift_getKeyPath(&unk_100425C18);
  v55 = (uint64_t)v108;
  *v108 = KeyPath;
  v56 = sub_10000B4C8(&qword_100549340);
  swift_storeEnumTagMultiPayload(v55, v56, 0);
  v57 = (_QWORD *)(v55 + *(int *)(v109 + 20));
  *v57 = swift_getKeyPath(&unk_100425C40);
  v58 = sub_10000B4C8(&qword_100547EE0);
  swift_storeEnumTagMultiPayload(v57, v58, 0);
  v59 = v113;
  sub_10000DB44(v55, (uint64_t)&v113[*(int *)(v107 + 36)], type metadata accessor for BackgroundModifier);
  sub_100011530((uint64_t)v47, (uint64_t)v59, &qword_100549508);
  v60 = v116;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)v116);
  v61 = v112;
  sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v112);
  v62 = (uint64_t)v117;
  v63 = &v60[*((int *)v117 + 5)];
  v64 = *(_QWORD *)&v63[*(int *)(type metadata accessor for TopChartsWidgetDataProvider.Chart(0) + 32)];
  v65 = v118;
  v105(v118, v61, v42);
  v66 = v104(v65, v42);
  if (v66 == enum case for WidgetFamily.systemSmall(_:))
  {
    swift_bridgeObjectRetain();
    v67 = 1;
    v68 = v121;
  }
  else
  {
    v69 = v66;
    v68 = v121;
    if (v66 == v94)
    {
      swift_bridgeObjectRetain();
      v67 = 2;
    }
    else if (v66 == enum case for WidgetFamily.systemLarge(_:))
    {
      swift_bridgeObjectRetain();
      v67 = 5;
    }
    else
    {
      v70 = enum case for WidgetFamily.systemExtraLarge(_:);
      swift_bridgeObjectRetain();
      if (v69 == v70)
      {
        v67 = 10;
      }
      else
      {
        v110(v118, v114);
        v67 = 0;
      }
    }
  }
  result = sub_10006BA48(v67, v64);
  v109 = result;
  v118 = v73;
  v75 = v74 >> 1;
  if (v72 != v74 >> 1)
  {
    v79 = v72;
    v117 = &v116[*(int *)(v62 + 28)];
    while (1)
    {
      if (v79 >= v75)
      {
        __break(1u);
        return result;
      }
      v81 = (uint64_t)v7;
      v82 = v119;
      v83 = v122;
      sub_10000D964((uint64_t)&v118[*(_QWORD *)(v119 + 72) * v79], (uint64_t)v122, type metadata accessor for WidgetMusicItem);
      sub_10000D964((uint64_t)v83, (uint64_t)v9, type metadata accessor for WidgetMusicItem);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v9, 0, 1, v68);
      v84 = (uint64_t)&v3[*(int *)(v120 + 48)];
      sub_100011370((uint64_t)v9, (uint64_t)v3, &qword_100548310);
      sub_100011370((uint64_t)v117, v84, &qword_100548310);
      v85 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v82 + 48);
      if (v85(v3, 1, v68) == 1)
        break;
      sub_100011370((uint64_t)v3, v81, &qword_100548310);
      if (v85((_BYTE *)v84, 1, v68) == 1)
      {
        sub_100011694((uint64_t)v9, &qword_100548310);
        sub_10000E750(v81, type metadata accessor for WidgetMusicItem);
        v7 = (_BYTE *)v81;
LABEL_21:
        sub_100011694((uint64_t)v3, &qword_100548868);
        result = sub_10000E750((uint64_t)v122, type metadata accessor for WidgetMusicItem);
        goto LABEL_22;
      }
      v86 = v115;
      sub_10000DB44(v84, (uint64_t)v115, type metadata accessor for WidgetMusicItem);
      v87 = sub_100038B84(v81, (uint64_t)v86);
      sub_10000E750((uint64_t)v86, type metadata accessor for WidgetMusicItem);
      sub_100011694((uint64_t)v9, &qword_100548310);
      sub_10000E750(v81, type metadata accessor for WidgetMusicItem);
      sub_100011694((uint64_t)v3, &qword_100548310);
      result = sub_10000E750((uint64_t)v122, type metadata accessor for WidgetMusicItem);
      v7 = (_BYTE *)v81;
      if ((v87 & 1) != 0)
        goto LABEL_30;
LABEL_22:
      ++v79;
      v68 = v121;
      if (v75 == v79)
        goto LABEL_18;
    }
    sub_100011694((uint64_t)v9, &qword_100548310);
    v80 = v85((_BYTE *)v84, 1, v68);
    v7 = (_BYTE *)v81;
    if (v80 == 1)
    {
      sub_100011694((uint64_t)v3, &qword_100548310);
      sub_10000E750((uint64_t)v122, type metadata accessor for WidgetMusicItem);
LABEL_30:
      swift_unknownObjectRelease(v109);
      v110(v112, v114);
      sub_10000E750((uint64_t)v116, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
      v78 = v99;
      v76 = v98;
      v77 = v100;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v99 + 104))(v98, enum case for ColorScheme.light(_:), v100);
      goto LABEL_31;
    }
    goto LABEL_21;
  }
LABEL_18:
  swift_unknownObjectRelease(v109);
  v110(v112, v114);
  sub_10000E750((uint64_t)v116, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v76 = v98;
  sub_10003EA00(&qword_1005486F8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v98);
  v77 = v100;
  v78 = v99;
LABEL_31:
  v88 = swift_getKeyPath(&unk_100425EB0);
  v89 = (uint64_t)v97;
  v90 = (uint64_t *)&v97[*(int *)(v96 + 36)];
  v91 = sub_10000B4C8(&qword_100548860);
  (*(void (**)(char *, _BYTE *, uint64_t))(v78 + 16))((char *)v90 + *(int *)(v91 + 28), v76, v77);
  *v90 = v88;
  v92 = v113;
  sub_100011370((uint64_t)v113, v89, &qword_100549510);
  (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v76, v77);
  sub_100011694((uint64_t)v92, &qword_100549510);
  return sub_100011530(v89, v101, &qword_100549518);
}

uint64_t sub_100044B64@<X0>(uint64_t a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[3];

  v112 = a3;
  v114 = *a2;
  v97 = *((_QWORD *)a2 + 1);
  v4 = a2[2];
  v5 = a2[3];
  v6 = *((_QWORD *)a2 + 4);
  v7 = type metadata accessor for WidgetFamily(0);
  v110 = *(_QWORD *)(v7 - 8);
  v111 = v7;
  v8 = __chkstk_darwin(v7);
  v109 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v108 = (uint64_t)&v90 - v10;
  v101 = type metadata accessor for AccessibilityChildBehavior(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for TopChartsWidgetContentView(0);
  v94 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v95 = v12;
  v96 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_10000B4C8(&qword_100549528);
  __chkstk_darwin(v98);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_10000B4C8(&qword_100549530);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_100549538);
  v17 = __chkstk_darwin(v16);
  v107 = (uint64_t)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v102 = (uint64_t)&v90 - v20;
  __chkstk_darwin(v19);
  v106 = (uint64_t)&v90 - v21;
  v22 = type metadata accessor for DynamicTypeSize(0);
  v113 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v27 = (char *)&v90 - v26;
  v28 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v32 = __chkstk_darwin(v31);
  v92 = (uint64_t)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v35 = (char *)&v90 - v34;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)&v90 - v34);
  v93 = v31;
  sub_10000D964((uint64_t)&v35[*(int *)(v31 + 20)], (uint64_t)v30, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750((uint64_t)v35, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v36 = &v30[*(int *)(v28 + 28)];
  v37 = *((_QWORD *)v36 + 1);
  v91 = *(_QWORD *)v36;
  swift_bridgeObjectRetain();
  v38 = sub_10000E750((uint64_t)v30, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v39 = static Edge.Set.bottom.getter(v38);
  v40 = a1;
  sub_10003EA00(&qword_100548900, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v27);
  v41 = v113;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v25, enum case for DynamicTypeSize.xxxLarge(_:), v22);
  LOBYTE(a1) = static DynamicTypeSize.< infix(_:_:)(v27, v25);
  v42 = *(void (**)(char *, uint64_t))(v41 + 8);
  v42(v25, v22);
  v43 = v27;
  v44 = v114;
  v42(v43, v22);
  if ((a1 & 1) != 0)
    v45 = v4;
  else
    v45 = v5;
  v46 = EdgeInsets.init(_all:)(v45);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  result = static Alignment.center.getter(v53);
  *(_QWORD *)v14 = result;
  *((_QWORD *)v14 + 1) = v55;
  *((_QWORD *)v14 + 2) = 0x4042000000000000;
  v14[24] = 0;
  *((_QWORD *)v14 + 4) = v6;
  v14[40] = 0;
  if ((*(_QWORD *)&v44 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_10000B4C8(&qword_100549540);
    v117[0] = 0;
    *(double *)&v117[1] = v44;
    KeyPath = swift_getKeyPath(&unk_100425EE8);
    v113 = v37;
    v57 = v40;
    v90 = v40;
    v58 = v96;
    sub_10000D964(v57, v96, type metadata accessor for TopChartsWidgetContentView);
    v59 = *(unsigned __int8 *)(v94 + 80);
    v60 = (v59 + 56) & ~v59;
    v61 = swift_allocObject(&unk_1004FA0F0, v60 + v95, v59 | 7);
    v62 = v97;
    *(double *)(v61 + 16) = v44;
    *(_QWORD *)(v61 + 24) = v62;
    *(double *)(v61 + 32) = v4;
    *(double *)(v61 + 40) = v5;
    *(_QWORD *)(v61 + 48) = v6;
    sub_10000DB44(v58, v61 + v60, type metadata accessor for TopChartsWidgetContentView);
    v63 = sub_10000B4C8(&qword_100548898);
    v64 = sub_10000B4C8(&qword_100549548);
    v65 = sub_10002A3A4();
    v66 = sub_100012324(&qword_100549550, &qword_100549548, (const char *)&protocol conformance descriptor for GridRow<A>);
    v67 = ForEach<>.init(_:id:content:)(v117, KeyPath, sub_10004F41C, v61, v63, v64, v65, &protocol witness table for Int, v66);
    v68 = v99;
    static AccessibilityChildBehavior.contain.getter(v67);
    v69 = sub_100012324(&qword_100549558, &qword_100549528, (const char *)&protocol conformance descriptor for Grid<A>);
    LODWORD(v114) = v39;
    v70 = v103;
    View.accessibilityElement(children:)(v68, v98, v69);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v68, v101);
    sub_100011694((uint64_t)v14, &qword_100549528);
    v71 = v92;
    sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, v92);
    v72 = (uint64_t *)(v71 + *(int *)(v93 + 40));
    v74 = *v72;
    v73 = v72[1];
    swift_bridgeObjectRetain();
    sub_10000E750(v71, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
    v75 = v108;
    sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v108);
    v77 = v109;
    v76 = v110;
    v78 = v111;
    (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v109, enum case for WidgetFamily.systemMedium(_:), v111);
    v79 = sub_10001254C(&qword_1005488C8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
    dispatch thunk of RawRepresentable.rawValue.getter(v117, v78, v79);
    dispatch thunk of RawRepresentable.rawValue.getter(&v116, v78, v79);
    v81 = v116;
    v80 = v117[0];
    v82 = *(void (**)(char *, uint64_t))(v76 + 8);
    v82(v77, v78);
    v82((char *)v75, v78);
    v83 = 16.0;
    if (v80 == v81)
      v83 = 0.0;
    v84 = v102;
    sub_10003D7C0(v74, v73, v102, v83, 16.0);
    swift_bridgeObjectRelease(v73);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v70, v105);
    v85 = v106;
    sub_100011530(v84, v106, &qword_100549538);
    v86 = v107;
    sub_100011370(v85, v107, &qword_100549538);
    v87 = v112;
    v88 = v113;
    *v112 = v91;
    v87[1] = v88;
    *((_BYTE *)v87 + 16) = LOBYTE(v114);
    *((double *)v87 + 3) = v46;
    v87[4] = v48;
    v87[5] = v50;
    v87[6] = v52;
    *((_BYTE *)v87 + 56) = 0;
    v89 = sub_10000B4C8(&qword_100549560);
    sub_100011370(v86, (uint64_t)v87 + *(int *)(v89 + 48), &qword_100549538);
    swift_bridgeObjectRetain();
    sub_100011694(v85, &qword_100549538);
    sub_100011694(v86, &qword_100549538);
    return swift_bridgeObjectRelease(v88);
  }
  return result;
}

uint64_t sub_1000453EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[2];

  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  v12 = type metadata accessor for TopChartsWidgetContentView(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  result = __chkstk_darwin(v12);
  v16 = *a1;
  *(_QWORD *)a4 = 0;
  *(_BYTE *)(a4 + 8) = 1;
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10000B4C8(&qword_100549548);
    v25[0] = 0;
    v25[1] = v7;
    KeyPath = swift_getKeyPath(&unk_100425EE8);
    sub_10000D964(a3, (uint64_t)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TopChartsWidgetContentView);
    v18 = *(unsigned __int8 *)(v13 + 80);
    v19 = (v18 + 64) & ~v18;
    v20 = (_QWORD *)swift_allocObject(&unk_1004FA118, v19 + v14, v18 | 7);
    v20[2] = v16;
    v20[3] = v8;
    v20[4] = v7;
    v20[5] = v9;
    v20[6] = v10;
    v20[7] = v11;
    sub_10000DB44((uint64_t)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v20 + v19, type metadata accessor for TopChartsWidgetContentView);
    v21 = sub_10000B4C8(&qword_100548898);
    v22 = sub_10000B4C8(&qword_100549588);
    v23 = sub_10002A3A4();
    v24 = sub_10004F918();
    return ForEach<>.init(_:id:content:)(v25, KeyPath, sub_10004F8A4, v20, v21, v22, v23, &protocol witness table for Int, v24);
  }
  return result;
}

uint64_t sub_100045588@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t result;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  char *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;

  v59 = a5;
  v60 = a4;
  v63 = a2;
  v6 = *a3;
  v7 = sub_10000B4C8(&qword_100547A38);
  v8 = __chkstk_darwin(v7);
  v52 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v61 = (char *)&v52 - v10;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v62 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_1005495A0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v56 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10000B4C8(&qword_100549588);
  v17 = __chkstk_darwin(v16);
  v55 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (uint64_t)&v52 - v19;
  v20 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10000B4C8(&qword_100548310);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v27);
  v32 = (char *)&v52 - v31;
  v33 = v6 * *a1;
  if ((unsigned __int128)(v6 * (__int128)*a1) >> 64 != v33 >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  v34 = v63 + v33;
  if (__OFADD__(v63, v33))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(10, v34))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v53 = 10 - v34;
  v63 = v11;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)v25);
  sub_10000D964((uint64_t)&v25[*(int *)(v23 + 20)], (uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  sub_10000E750((uint64_t)v25, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v35 = *(_QWORD *)&v22[*(int *)(v20 + 32)];
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v22, type metadata accessor for TopChartsWidgetDataProvider.Chart);
  v36 = type metadata accessor for WidgetMusicItem(0);
  Array.subscript.getter(v34, v35, v36, (uint64_t)v32);
  swift_bridgeObjectRelease(v35);
  sub_100011370((uint64_t)v32, (uint64_t)v29, &qword_100548310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v29, 1, v36) == 1)
  {
    sub_100011694((uint64_t)v29, &qword_100548310);
    v37 = (uint64_t)v61;
    v38 = v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v61, 1, 1, v63);
    v39 = v62;
  }
  else
  {
    v40 = &v29[*(int *)(v36 + 28)];
    v37 = (uint64_t)v61;
    v38 = v63;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v61, v40, v63);
    sub_10000E750((uint64_t)v29, type metadata accessor for WidgetMusicItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v38);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v37, 1, v38);
    v39 = v62;
    if (v41 != 1)
    {
      v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(v62, v37, v38);
      goto LABEL_10;
    }
  }
  v42 = v52;
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v42, 1, v38);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v42, v38);
    v43 = sub_100011694(v37, &qword_100547A38);
LABEL_10:
    v44 = (double)v53;
    __chkstk_darwin(v43);
    *(&v52 - 2) = v32;
    *(&v52 - 1) = (char *)v34;
    v45 = _s12MusicWidgets12SongCellViewVMa_0(0);
    v46 = sub_10001254C(&qword_1005495A8, _s12MusicWidgets12SongCellViewVMa_0, (uint64_t)&unk_100426034);
    v47 = v56;
    Link.init(destination:label:)(v39, sub_10004F9B4, &v52 - 4, v45, v46);
    v48 = sub_100012324(&qword_100549598, &qword_1005495A0, (const char *)&protocol conformance descriptor for Link<A>);
    v49 = (uint64_t)v55;
    v50 = v58;
    View.accessibility(sortPriority:)(v58, v48, v44);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v50);
    v51 = v54;
    sub_100011530(v49, v54, &qword_100549588);
    sub_100011530(v51, v59, &qword_100549588);
    return sub_100011694((uint64_t)v32, &qword_100548310);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_100045AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  result = sub_100011370(a1, a3, &qword_100548310);
  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = (int *)_s12MusicWidgets12SongCellViewVMa_0(0);
    *(_QWORD *)(a3 + v7[5]) = v6;
    v8 = (_QWORD *)(a3 + v7[6]);
    *v8 = swift_getKeyPath(&unk_100425C18);
    v9 = sub_10000B4C8(&qword_100549340);
    swift_storeEnumTagMultiPayload(v8, v9, 0);
    v10 = (_QWORD *)(a3 + v7[7]);
    *v10 = swift_getKeyPath(&unk_100425CD0);
    v11 = sub_10000B4C8(&qword_100548908);
    return swift_storeEnumTagMultiPayload(v10, v11, 0);
  }
  return result;
}

uint64_t sub_100045BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_10000B4C8(&qword_100548BC0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v1;
  v7 = *(void **)(v1 + 8);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v9 = sub_10000B4C8(&qword_100548BC8);
  v10 = sub_100022788(v8, v7, &v6[*(int *)(v9 + 44)]);
  v11 = static Alignment.center.getter(v10);
  sub_10003F504(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, a1, 0.0, 1, 14.0, 0, v11, v12, &qword_100548BC0, &qword_100548C90);
  return sub_100011694((uint64_t)v6, &qword_100548BC0);
}

uint64_t sub_100045CC4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  char v76;
  _BYTE *v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double *v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(_QWORD, _QWORD, _QWORD);
  _QWORD *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  _BYTE *v165;
  uint64_t v166;
  unint64_t v167;
  Swift::Int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t KeyPath;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  uint64_t *v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  void (*v189)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v190;
  _BYTE *v191;
  uint64_t v192;
  _BYTE *v193;
  uint64_t v194;
  _BYTE *v195;
  _BYTE *v196;
  uint64_t v197;
  void (*v198)(_BYTE *, uint64_t);
  _BYTE v200[12];
  int v201;
  unsigned int (*v202)(_QWORD, _QWORD, _QWORD);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  _BYTE *v208;
  uint64_t v209;
  _BYTE *v210;
  uint64_t v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  _BYTE *v216;
  _BYTE *v217;
  uint64_t v218;
  _BYTE *v219;
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  uint64_t v223;
  _BYTE *v224;
  _BYTE *v225;
  _BYTE *v226;
  _BYTE *v227;
  _BYTE *v228;
  uint64_t v229;
  uint64_t v230;
  _BYTE *v231;
  _BYTE *v232;
  _BYTE *v233;
  _BYTE *v234;
  _BYTE *v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE *v238;
  uint64_t *v239;
  _BYTE *v240;
  _BYTE *v241;
  uint64_t v242;
  _BYTE *v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  _BYTE *v247;
  _BYTE *v248;
  uint64_t v249;
  _BYTE *v250;
  uint64_t v251;
  _BYTE *v252;
  _BYTE *v253;
  uint64_t v254;
  _BYTE *v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  _QWORD v264[2];

  v250 = a2;
  v249 = sub_10000B4C8(&qword_1005498C8);
  __chkstk_darwin(v249);
  v238 = &v200[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v222 = type metadata accessor for PlaybackButton(0);
  v220 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v219 = &v200[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v237 = sub_10000B4C8(&qword_100548A00);
  v236 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v221 = &v200[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v229 = type metadata accessor for PlaybackButton.State(0);
  v218 = *(_QWORD *)(v229 - 8);
  v6 = __chkstk_darwin(v229);
  v217 = &v200[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v228 = &v200[-v8];
  v9 = sub_10000B4C8(&qword_100548350);
  v10 = __chkstk_darwin(v9);
  v216 = &v200[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v227 = &v200[-v12];
  v13 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v13);
  v215 = &v200[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v214 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v213 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v226 = &v200[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v209 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v209);
  v210 = &v200[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v211 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v17 = __chkstk_darwin(v211);
  v212 = &v200[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v208 = &v200[-v19];
  v20 = sub_10000B4C8(&qword_100548A08);
  v21 = __chkstk_darwin(v20);
  v234 = &v200[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v235 = &v200[-v23];
  v24 = sub_10000B4C8(&qword_1005498D0);
  v25 = __chkstk_darwin(v24);
  v233 = &v200[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __chkstk_darwin(v25);
  v232 = &v200[-v28];
  __chkstk_darwin(v27);
  v240 = &v200[-v29];
  v30 = sub_10000B4C8(&qword_100548A18);
  __chkstk_darwin(v30);
  v231 = &v200[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v230 = sub_10000B4C8(&qword_100548A20);
  __chkstk_darwin(v230);
  v239 = (uint64_t *)&v200[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v245 = sub_10000B4C8(&qword_1005498D8);
  __chkstk_darwin(v245);
  v246 = &v200[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = sub_10000B4C8(&qword_100548310);
  v35 = __chkstk_darwin(v34);
  v207 = &v200[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v37 = __chkstk_darwin(v35);
  v224 = &v200[-v38];
  v39 = __chkstk_darwin(v37);
  v225 = &v200[-v40];
  __chkstk_darwin(v39);
  v263 = (uint64_t)&v200[-v41];
  v254 = type metadata accessor for WidgetMusicItem(0);
  v251 = *(_QWORD *)(v254 - 8);
  v42 = __chkstk_darwin(v254);
  v206 = &v200[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v42);
  v253 = &v200[-v44];
  v45 = sub_10000B4C8(&qword_1005498E0);
  v46 = __chkstk_darwin(v45);
  v248 = &v200[-((v47 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v46);
  v252 = &v200[-v48];
  v261 = type metadata accessor for ArtworkView(0);
  __chkstk_darwin(v261);
  v50 = &v200[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v262 = (_QWORD *)sub_10000B4C8(&qword_100548A88);
  v51 = __chkstk_darwin(v262);
  v53 = &v200[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v51);
  v255 = &v200[-v54];
  v55 = sub_10000B4C8(&qword_1005498E8);
  __chkstk_darwin(v55);
  v57 = &v200[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v58 = sub_10000B4C8(&qword_1005498F0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = __chkstk_darwin(v58);
  v243 = &v200[-((v61 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v62 = __chkstk_darwin(v60);
  v64 = &v200[-v63];
  v65 = __chkstk_darwin(v62);
  v67 = &v200[-v66];
  *v57 = static Alignment.center.getter(v65);
  v57[1] = v68;
  v69 = sub_10000B4C8(&qword_1005498F8);
  sub_100047588(a1, (_QWORD *)((char *)v57 + *(int *)(v69 + 44)));
  v70 = sub_100012324(&qword_100549900, &qword_1005498E8, (const char *)&protocol conformance descriptor for ZStack<A>);
  View.unredacted()(v55, v70);
  sub_100011694((uint64_t)v57, &qword_1005498E8);
  v242 = v59;
  v71 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v59 + 32);
  v241 = v67;
  v72 = v67;
  v244 = v58;
  v73 = v254;
  v71(v72, v64, v58);
  v74 = a1;
  sub_100011370(a1, (uint64_t)v50, &qword_100548310);
  v75 = Corner.small.unsafeMutableAddressor();
  v76 = *((_BYTE *)v75 + 16);
  v77 = &v50[*(int *)(v261 + 20)];
  *(_OWORD *)v77 = *(_OWORD *)v75;
  v77[16] = v76;
  LOBYTE(a1) = static Edge.Set.trailing.getter(v75);
  v78 = EdgeInsets.init(_all:)(12.0);
  v80 = v79;
  v82 = v81;
  v84 = v83;
  sub_10000D964((uint64_t)v50, (uint64_t)v53, type metadata accessor for ArtworkView);
  v85 = (double *)&v53[*((int *)v262 + 9)];
  *(_BYTE *)v85 = a1;
  v85[1] = v78;
  *((_QWORD *)v85 + 2) = v80;
  *((_QWORD *)v85 + 3) = v82;
  *((_QWORD *)v85 + 4) = v84;
  *((_BYTE *)v85 + 40) = 0;
  sub_10000E750((uint64_t)v50, type metadata accessor for ArtworkView);
  v247 = v53;
  sub_100011530((uint64_t)v53, (uint64_t)v255, &qword_100548A88);
  v86 = v74;
  v87 = v263;
  v223 = v86;
  sub_100011370(v86, v263, &qword_100548310);
  v88 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v251 + 48);
  if (v88(v87, 1, v73) != 1)
  {
    v93 = v253;
    sub_10000DB44(v87, (uint64_t)v253, type metadata accessor for WidgetMusicItem);
    v94 = *((_QWORD *)v93 + 3);
    v264[0] = *((_QWORD *)v93 + 2);
    v264[1] = v94;
    v95 = sub_10001D9DC();
    swift_bridgeObjectRetain();
    v204 = Text.init<A>(_:)(v264, &type metadata for String, v95);
    v203 = v97;
    v205 = v98;
    v99 = *(_QWORD *)&v93[*(int *)(v73 + 56)];
    v100 = *(_QWORD *)(v99 + 16);
    v202 = v88;
    if (v100)
    {
      v201 = v96;
      v101 = qword_100547850;
      swift_bridgeObjectRetain_n(v99, 2);
      if (v101 != -1)
        swift_once(&qword_100547850, sub_100038244);
      v102 = 0;
      v103 = 0;
      LODWORD(v263) = 0;
      v104 = 0xE000000000000000;
      v105 = _swiftEmptyArrayStorage;
      v257 = v99;
      v256 = v100;
      do
      {
        v260 = v103;
        v261 = v104;
        v262 = v105;
        v106 = v99 + v102++;
        TextBadge.view(favoriteBadgeConfiguration:)(qword_100549010, *(_BYTE *)(v106 + 32));
        v108 = v107;
        v110 = v109;
        v112 = v111;
        v114 = v113 & 1;
        v115 = static Font.subheadline.getter(v107);
        v116 = static Font.Weight.semibold.getter(v115);
        v117 = Font.weight(_:)(v115, v116);
        swift_release(v115);
        v118 = Text.font(_:)(v117, v108, v110, v114, v112);
        v120 = v119;
        v122 = v121;
        v124 = v123;
        swift_release(v117);
        v125 = v122 & 1;
        sub_10001DA20(v108, v110, v114);
        swift_bridgeObjectRelease(v112);
        v126 = v263 & 1;
        v128 = v260;
        v127 = v261;
        v129 = (uint64_t)v262;
        v259 = static Text.+ infix(_:_:)(v260, v261, v263 & 1, v262, v118, v120, v125, v124);
        v131 = v130;
        v258 = v132;
        LODWORD(v263) = v133 & 1;
        v134 = v118;
        v135 = v256;
        sub_10001DA20(v134, v120, v125);
        v136 = v124;
        v99 = v257;
        swift_bridgeObjectRelease(v136);
        v137 = v127;
        v104 = v131;
        sub_10001DA20(v128, v137, v126);
        v138 = v129;
        v103 = v259;
        v105 = v258;
        swift_bridgeObjectRelease(v138);
      }
      while (v135 != v102);
      swift_bridgeObjectRelease_n(v99, 2);
      LOBYTE(v96) = v201;
      v100 = v263;
    }
    else
    {
      v103 = 0;
      v105 = _swiftEmptyArrayStorage;
      v104 = 0xE000000000000000;
    }
    v139 = v96 & 1;
    v140 = v204;
    v141 = v203;
    v142 = v205;
    v262 = (_QWORD *)static Text.+ infix(_:_:)(v204, v203, v96 & 1, v205, v103, v104, v100, v105);
    v263 = v143;
    v145 = v144;
    v147 = v146 & 1;
    sub_10001DA20(v103, v104, v100);
    swift_bridgeObjectRelease(v105);
    sub_10001DA20(v140, v141, v139);
    v148 = swift_bridgeObjectRelease(v142);
    v149 = static Font.subheadline.getter(v148);
    v150 = static Font.Weight.medium.getter();
    v151 = Font.weight(_:)(v149, v150);
    swift_release(v149);
    v153 = (uint64_t)v262;
    v152 = v263;
    v154 = Text.font(_:)(v151, v262, v145, v147, v263);
    v156 = v155;
    v158 = v157;
    v160 = v159;
    swift_release(v151);
    sub_10001DA20(v153, v145, v147);
    swift_bridgeObjectRelease(v152);
    if (qword_1005477D0 != -1)
      swift_once(&qword_1005477D0, sub_100033BF8);
    v161 = Text.foregroundColor(_:)(qword_100561250, v154, v156, v158 & 1, v160);
    v261 = v162;
    v262 = (_QWORD *)v161;
    LODWORD(v260) = v163;
    v263 = v164;
    sub_10001DA20(v154, v156, v158 & 1);
    swift_bridgeObjectRelease(v160);
    v165 = v253;
    v166 = *((_QWORD *)v253 + 4);
    v167 = *((_QWORD *)v253 + 5);
    v168 = sub_10004F9D0((uint64_t)&off_1004F8D80);
    swift_bridgeObjectRetain();
    v169 = Text.init(optional:options:)(v166, v167, v168);
    v171 = v170;
    v173 = v172;
    v175 = v174;
    v176 = static Font.subheadline.getter(v169);
    KeyPath = swift_getKeyPath(&unk_100426088);
    if (qword_1005477D8 != -1)
      swift_once(&qword_1005477D8, sub_100033C14);
    v178 = sub_10000B4C8(&qword_100548AA0);
    v179 = sub_10000D78C(v178, (uint64_t)qword_100561258);
    v180 = v231;
    sub_100011370(v179, (uint64_t)v231, &qword_100548AA0);
    v181 = v239;
    sub_100011370((uint64_t)v180, (uint64_t)v239 + *(int *)(v230 + 36), &qword_100548A18);
    *v181 = v169;
    v181[1] = v171;
    v181[2] = v173;
    v181[3] = v175;
    v181[4] = KeyPath;
    v181[5] = v176;
    v182 = sub_100011694((uint64_t)v180, &qword_100548A18);
    v183 = static Axis.Set.vertical.getter(v182);
    v184 = (uint64_t)v232;
    *v232 = v183;
    v185 = sub_10000B4C8(&qword_100549918);
    sub_1000478D4((uint64_t)v262, v261, v260 & 1, v263, (uint64_t)v165, (uint64_t)v181, v184 + *(int *)(v185 + 44));
    v186 = sub_100011530(v184, (uint64_t)v240, &qword_1005498D0);
    v187 = (char *)&loc_100046B90 + 4 * byte_100425B94[sub_1000AA740(v186)];
    __asm { BR              X10 }
  }
  sub_100011694(v87, &qword_100548310);
  v89 = v246;
  *v246 = 0;
  *((_BYTE *)v89 + 8) = 1;
  swift_storeEnumTagMultiPayload(v89, v245, 1);
  v90 = sub_100012324(&qword_100549908, &qword_1005498C8, (const char *)&protocol conformance descriptor for TupleView<A>);
  v91 = v252;
  _ConditionalContent<>.init(storage:)(v89, v249, &type metadata for Spacer, v90, &protocol witness table for Spacer);
  v92 = (uint64_t)v91;
  v188 = v242;
  v189 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v242 + 16);
  v190 = v243;
  v191 = v241;
  v192 = v244;
  v189(v243, v241, v244);
  v193 = v255;
  v194 = (uint64_t)v247;
  sub_100011370((uint64_t)v255, (uint64_t)v247, &qword_100548A88);
  v195 = v248;
  sub_100011370(v92, (uint64_t)v248, &qword_1005498E0);
  v196 = v250;
  v189(v250, v190, v192);
  v197 = sub_10000B4C8(&qword_100549910);
  sub_100011370(v194, (uint64_t)&v196[*(int *)(v197 + 48)], &qword_100548A88);
  sub_100011370((uint64_t)v195, (uint64_t)&v196[*(int *)(v197 + 64)], &qword_1005498E0);
  sub_100011694(v92, &qword_1005498E0);
  sub_100011694((uint64_t)v193, &qword_100548A88);
  v198 = *(void (**)(_BYTE *, uint64_t))(v188 + 8);
  v198(v191, v192);
  sub_100011694((uint64_t)v195, &qword_1005498E0);
  sub_100011694(v194, &qword_100548A88);
  return ((uint64_t (*)(_BYTE *, uint64_t))v198)(v190, v192);
}

uint64_t sub_100047588@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  Swift::String v63;
  char v64;
  uint64_t v65;

  v61 = a2;
  v3 = sub_10000B4C8(&qword_100549970);
  v4 = __chkstk_darwin(v3);
  v62 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v60 = (char *)&v57 - v6;
  v63._countAndFlagsBits = *(_QWORD *)(a1 + *(int *)(_s12MusicWidgets12SongCellViewVMa_0(0) + 20));
  sub_10005601C();
  v63 = BinaryInteger.formatted()();
  v7 = sub_10001D9DC();
  v8 = Text.init<A>(_:)(&v63, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v15 = static Font.subheadline.getter(v8);
  v16 = Font.bold()();
  swift_release(v15);
  v17 = Text.font(_:)(v16, v8, v10, v14, v12);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release(v16);
  sub_10001DA20(v8, v10, v14);
  swift_bridgeObjectRelease(v12);
  if (qword_1005477D0 != -1)
    swift_once(&qword_1005477D0, sub_100033BF8);
  v24 = Text.foregroundColor(_:)(qword_100561250, v17, v19, v21 & 1, v23);
  v58 = v25;
  v59 = v24;
  v57 = v26;
  v28 = v27 & 1;
  sub_10001DA20(v17, v19, v21 & 1);
  v29 = swift_bridgeObjectRelease(v23);
  v30 = static Font.subheadline.getter(v29);
  v31 = Font.bold()();
  swift_release(v30);
  v32 = Text.font(_:)(v31, 12337, 0xE200000000000000, 0, _swiftEmptyArrayStorage);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  swift_release(v31);
  v39 = v36 & 1;
  v41 = static Color.clear.getter(v40);
  v42 = Text.foregroundColor(_:)(v41, v32, v34, v39, v38);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  swift_release(v41);
  v46 &= 1u;
  sub_10001DA20(v32, v34, v39);
  swift_bridgeObjectRelease(v38);
  v63._countAndFlagsBits = v42;
  v63._object = v44;
  v64 = v46;
  v65 = v48;
  v49 = (uint64_t)v60;
  View.accessibility(hidden:)(1, &type metadata for Text, &protocol witness table for Text);
  sub_10001DA20(v42, (uint64_t)v44, v46);
  swift_bridgeObjectRelease(v48);
  v50 = v62;
  sub_100011370(v49, v62, &qword_100549970);
  v51 = v61;
  v52 = v58;
  v53 = v59;
  v54 = v57;
  *v61 = v59;
  v51[1] = v54;
  *((_BYTE *)v51 + 16) = v28;
  v51[3] = v52;
  v55 = sub_10000B4C8(&qword_100549980);
  sub_100011370(v50, (uint64_t)v51 + *(int *)(v55 + 48), &qword_100549970);
  sub_10002EBA0(v53, v54, v28);
  swift_bridgeObjectRetain();
  sub_100011694(v49, &qword_100549970);
  sub_100011694(v50, &qword_100549970);
  sub_10001DA20(v53, v54, v28);
  return swift_bridgeObjectRelease(v52);
}

uint64_t sub_1000478D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a7;
  v13 = sub_10000B4C8(&qword_100549928);
  v14 = __chkstk_darwin(v13);
  v39 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - v16;
  v18 = sub_10000B4C8(&qword_100549930);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v37 - v23;
  *(_QWORD *)v24 = static HorizontalAlignment.leading.getter(v22);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v25 = (uint64_t)&v24[*(int *)(sub_10000B4C8(&qword_100549938) + 44)];
  a3 &= 1u;
  v37 = a4;
  v26 = sub_100047B88(a1, a2, a3, a4, a5, a6, v25);
  *(_QWORD *)v17 = static HorizontalAlignment.leading.getter(v26);
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v27 = sub_10000B4C8(&qword_100549940);
  v28 = sub_100047D5C(a1, a2, a3, a4, a5, a6, (uint64_t)&v17[*(int *)(v27 + 44)]);
  v29 = static HorizontalAlignment.leading.getter(v28);
  v38 = v21;
  sub_100011370((uint64_t)v24, (uint64_t)v21, &qword_100549930);
  v30 = v39;
  sub_100011370((uint64_t)v17, v39, &qword_100549928);
  v31 = (uint64_t)v21;
  v32 = v40;
  sub_100011370(v31, v40, &qword_100549930);
  v33 = sub_10000B4C8(&qword_100549948);
  sub_100011370(v30, v32 + *(int *)(v33 + 48), &qword_100549928);
  v34 = v32 + *(int *)(v33 + 64);
  *(_QWORD *)v34 = v29;
  *(_QWORD *)(v34 + 8) = 0;
  *(_BYTE *)(v34 + 16) = 1;
  *(_QWORD *)(v34 + 24) = a1;
  *(_QWORD *)(v34 + 32) = a2;
  *(_BYTE *)(v34 + 40) = a3;
  v35 = v37;
  *(_QWORD *)(v34 + 48) = v37;
  sub_10002EBA0(a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_10002EBA0(a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v17, &qword_100549928);
  sub_100011694((uint64_t)v24, &qword_100549930);
  sub_10001DA20(a1, a2, a3);
  swift_bridgeObjectRelease(v35);
  sub_100011694(v30, &qword_100549928);
  return sub_100011694((uint64_t)v38, &qword_100549930);
}

uint64_t sub_100047B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v27;

  v14 = sub_10000B4C8(&qword_100549958);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  v20 = *(_QWORD *)(a5 + 40);
  if (v20
    && ((v20 & 0x2000000000000000) != 0 ? (v21 = HIBYTE(v20) & 0xF) : (v21 = *(_QWORD *)(a5 + 32) & 0xFFFFFFFFFFFFLL),
        v21))
  {
    sub_100011370(a6, (uint64_t)&v27 - v18, &qword_100548A20);
    v22 = sub_10000B4C8(&qword_100548A20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 0, 1, v22);
  }
  else
  {
    v23 = sub_10000B4C8(&qword_100548A20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  }
  sub_100011370((uint64_t)v19, (uint64_t)v17, &qword_100549958);
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  v24 = a3 & 1;
  *(_BYTE *)(a7 + 16) = v24;
  *(_QWORD *)(a7 + 24) = a4;
  v25 = sub_10000B4C8(&qword_100549960);
  sub_100011370((uint64_t)v17, a7 + *(int *)(v25 + 48), &qword_100549958);
  sub_10002EBA0(a1, a2, v24);
  swift_bridgeObjectRetain();
  sub_10002EBA0(a1, a2, v24);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v19, &qword_100549958);
  sub_100011694((uint64_t)v17, &qword_100549958);
  sub_10001DA20(a1, a2, v24);
  return swift_bridgeObjectRelease(a4);
}

uint64_t sub_100047D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v30;

  v14 = sub_10000B4C8(&qword_100548B80);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v30 - v18;
  KeyPath = swift_getKeyPath(&unk_100425F00);
  v21 = *(_QWORD *)(a5 + 40);
  if (v21
    && ((v21 & 0x2000000000000000) != 0 ? (v22 = HIBYTE(v21) & 0xF) : (v22 = *(_QWORD *)(a5 + 32) & 0xFFFFFFFFFFFFLL),
        v22))
  {
    v23 = swift_getKeyPath(&unk_100425F00);
    sub_100011370(a6, (uint64_t)v19, &qword_100548A20);
    v24 = sub_10000B4C8(&qword_100548A28);
    v25 = &v19[*(int *)(v24 + 36)];
    *(_QWORD *)v25 = v23;
    *((_QWORD *)v25 + 1) = 1;
    v25[16] = 0;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v19, 0, 1, v24);
  }
  else
  {
    v26 = sub_10000B4C8(&qword_100548A28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v19, 1, 1, v26);
  }
  sub_100011370((uint64_t)v19, (uint64_t)v17, &qword_100548B80);
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  v27 = a3 & 1;
  *(_BYTE *)(a7 + 16) = v27;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = KeyPath;
  *(_QWORD *)(a7 + 40) = 1;
  *(_BYTE *)(a7 + 48) = 0;
  v28 = sub_10000B4C8(&qword_100549950);
  sub_100011370((uint64_t)v17, a7 + *(int *)(v28 + 48), &qword_100548B80);
  sub_10002EBA0(a1, a2, v27);
  swift_bridgeObjectRetain_n(a4, 2);
  swift_retain(KeyPath);
  sub_10002EBA0(a1, a2, v27);
  sub_100011694((uint64_t)v19, &qword_100548B80);
  sub_100011694((uint64_t)v17, &qword_100548B80);
  sub_10001DA20(a1, a2, v27);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(a4);
}

void sub_100047F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_10000B4C8(&qword_1005482D8);
  __chkstk_darwin(v0);
  v1 = sub_10000B4C8(&qword_1005481F0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - v4;
  _s12MusicWidgets12SongCellViewVMa_0(0);
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t)v5);
  v6 = v5[*(int *)(v2 + 24)];
  sub_10000E750((uint64_t)v5, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  __asm { BR              X9 }
}

uint64_t sub_1000480B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for PlaybackButton.State.unplayed(_:);
  v2 = type metadata accessor for PlaybackButton.State(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_10004823C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_1005498B0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = sub_10000B4C8(&qword_1005498B8);
  v10 = sub_100045CC4(v0, &v8[*(int *)(v9 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v10);
  v11 = sub_100012324(&qword_1005498C0, &qword_1005498B0, (const char *)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v4, v5, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100011694((uint64_t)v8, &qword_1005498B0);
}

uint64_t sub_100048370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v80 = a2;
  v77 = sub_10000B4C8(&qword_100548870);
  __chkstk_darwin(v77);
  v79 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Image.ResizingMode(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10000B4C8(&qword_100548848);
  __chkstk_darwin(v78);
  v71 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v92);
  v89 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100548310);
  v8 = __chkstk_darwin(v7);
  v86 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v67 - v10;
  v87 = type metadata accessor for WidgetMusicItem(0);
  v12 = *(_QWORD *)(v87 - 8);
  v13 = __chkstk_darwin(v87);
  v84 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v88 = (uint64_t)&v67 - v15;
  v16 = type metadata accessor for WidgetFamily(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v67 - v21;
  v23 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v24 = __chkstk_darwin(v23);
  v72 = (uint64_t)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v27 = (char *)&v67 - v26;
  sub_10003EE90(&qword_100549340, v28, (uint64_t)&v67 - v26);
  type metadata accessor for BackgroundModifier(0);
  v73 = a1;
  sub_10003EA00(&qword_100547EE0, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v22);
  v74 = v23;
  v29 = *(int *)(v23 + 20);
  v83 = v27;
  v30 = *(_QWORD *)&v27[v29 + *(int *)(type metadata accessor for TopChartsWidgetDataProvider.Chart(0) + 32)];
  v31 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v76 = v22;
  v31(v20, v22, v16);
  v81 = v17;
  v82 = v16;
  v32 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v32 == enum case for WidgetFamily.systemSmall(_:))
  {
    swift_bridgeObjectRetain();
    v33 = 1;
  }
  else
  {
    if (v32 != enum case for WidgetFamily.systemMedium(_:))
    {
      v34 = v87;
      v35 = v89;
      if (v32 == enum case for WidgetFamily.systemLarge(_:))
      {
        swift_bridgeObjectRetain();
        v33 = 5;
      }
      else if (v32 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        swift_bridgeObjectRetain();
        v33 = 10;
      }
      else
      {
        v66 = *(void (**)(char *, uint64_t))(v81 + 8);
        swift_bridgeObjectRetain();
        v66(v20, v82);
        v33 = 0;
      }
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    v33 = 2;
  }
  v34 = v87;
  v35 = v89;
LABEL_6:
  v75 = sub_10006BA48(v33, v30);
  v91 = v37;
  v39 = v38 >> 1;
  v40 = v88;
  if (v36 == v38 >> 1)
  {
LABEL_7:
    swift_unknownObjectRelease(v75);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v76, v82);
    sub_10000E750((uint64_t)v83, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
LABEL_8:
    v12 = v79;
    v11 = (char *)v78;
    if (qword_1005477F0 != -1)
LABEL_29:
      swift_once(&qword_1005477F0, sub_100033E68);
    *(_QWORD *)v12 = xmmword_100561280;
    *(_OWORD *)(v12 + 8) = *(__int128 *)((char *)&xmmword_100561280 + 8);
    *(_OWORD *)(v12 + 24) = *(_OWORD *)&algn_100561290[8];
    swift_storeEnumTagMultiPayload(v12, v77, 1);
    v41 = sub_100029E98();
    v42 = sub_100029F1C();
    swift_bridgeObjectRetain();
    return _ConditionalContent<>.init(storage:)(v12, v11, &type metadata for LinearGradient, v41, v42);
  }
  v44 = v36;
  v90 = &v83[*(int *)(v74 + 28)];
  while (1)
  {
    if (v44 >= v39)
    {
      __break(1u);
      goto LABEL_29;
    }
    sub_10000D964(v91 + *(_QWORD *)(v12 + 72) * v44, v40, type metadata accessor for WidgetMusicItem);
    sub_10000D964(v40, (uint64_t)v11, type metadata accessor for WidgetMusicItem);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v34);
    v45 = v35 + *(int *)(v92 + 48);
    sub_100011370((uint64_t)v11, v35, &qword_100548310);
    sub_100011370((uint64_t)v90, v45, &qword_100548310);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (v46(v35, 1, v34) == 1)
      break;
    v47 = v12;
    v48 = v86;
    sub_100011370(v35, v86, &qword_100548310);
    if (v46(v45, 1, v34) == 1)
    {
      sub_100011694((uint64_t)v11, &qword_100548310);
      sub_10000E750(v48, type metadata accessor for WidgetMusicItem);
      v12 = v47;
      v34 = v87;
      v40 = v88;
      goto LABEL_12;
    }
    v49 = v84;
    sub_10000DB44(v45, v84, type metadata accessor for WidgetMusicItem);
    v85 = sub_100038B84(v48, v49);
    sub_10000E750(v49, type metadata accessor for WidgetMusicItem);
    v50 = v11;
    sub_100011694((uint64_t)v11, &qword_100548310);
    sub_10000E750(v48, type metadata accessor for WidgetMusicItem);
    sub_100011694(v35, &qword_100548310);
    v51 = v88;
    sub_10000E750(v88, type metadata accessor for WidgetMusicItem);
    v34 = v87;
    v12 = v47;
    v40 = v51;
    v11 = v50;
    if ((v85 & 1) != 0)
      goto LABEL_23;
LABEL_13:
    if (v39 == ++v44)
      goto LABEL_7;
  }
  sub_100011694((uint64_t)v11, &qword_100548310);
  if (v46(v45, 1, v34) != 1)
  {
LABEL_12:
    v35 = v89;
    sub_100011694(v89, &qword_100548868);
    sub_10000E750(v40, type metadata accessor for WidgetMusicItem);
    goto LABEL_13;
  }
  sub_100011694(v89, &qword_100548310);
  sub_10000E750(v40, type metadata accessor for WidgetMusicItem);
LABEL_23:
  swift_unknownObjectRelease(v75);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v76, v82);
  sub_10000E750((uint64_t)v83, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  v52 = v72;
  sub_10003EE90(&qword_100549340, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, v72);
  v53 = *(void **)(v52 + *(int *)(v74 + 36));
  v54 = v53;
  sub_10000E750(v52, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
  if (!v53)
    goto LABEL_8;
  v55 = v54;
  v56 = Image.init(uiImage:)(v55);
  v57 = v69;
  v58 = v68;
  v59 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, enum case for Image.ResizingMode.stretch(_:), v70);
  v60 = Image.resizable(capInsets:resizingMode:)(v58, v56, 0.0, 0.0, 0.0, 0.0);
  v61 = swift_release(v56);
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v58, v59, v61);
  v93 = v60;
  v62 = (uint64_t)v71;
  View.accessibility(hidden:)(1, &type metadata for Image, &protocol witness table for Image);
  swift_release(v60);
  v63 = v79;
  sub_100011370(v62, v79, &qword_100548848);
  swift_storeEnumTagMultiPayload(v63, v77, 0);
  v64 = sub_100029E98();
  v65 = sub_100029F1C();
  _ConditionalContent<>.init(storage:)(v63, v78, &type metadata for LinearGradient, v64, v65);

  return sub_100011694(v62, &qword_100548848);
}

uint64_t sub_100048C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  _BYTE v17[16];
  uint64_t v18;

  v16[1] = a1;
  v2 = type metadata accessor for ContainerBackgroundPlacement(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static ContainerBackgroundPlacement.widget.getter(v4);
  v18 = v1;
  v8 = static Alignment.center.getter(v7);
  v10 = v9;
  v11 = sub_10000B4C8(&qword_100549988);
  v12 = sub_10000B4C8(&qword_100548820);
  v13 = sub_100012324(&qword_100549990, &qword_100549988, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v14 = sub_100056068((unint64_t *)&qword_100548838, &qword_100548820, (uint64_t (*)(void))sub_100029E98, (uint64_t (*)(void))sub_100029F1C);
  View.containerBackground<A>(for:alignment:content:)(v6, v8, v10, sub_100056060, v17, v11, v12, v13, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_100048D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  sub_10000D924(v0, qword_100549270);
  v1 = sub_10000D78C(v0, (uint64_t)qword_100549270);
  if (qword_100547908 != -1)
    swift_once(&qword_100547908, sub_1000A8158);
  v2 = sub_10000D78C(v0, (uint64_t)qword_100561430);
  return sub_10000D964(v2, v1, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
}

uint64_t sub_100048DF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100547868 != -1)
    swift_once(&qword_100547868, sub_100048D6C);
  v2 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100549270);
  return sub_10000D964(v3, a1, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
}

uint64_t sub_100048E64()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100048E84()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100048EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100048EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100048EDC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v0 = type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey(0);
  v1 = sub_10001254C(&qword_100549380, (uint64_t (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey, (uint64_t)&protocol conformance descriptor for EnvironmentValues.ShowsWidgetBackgroundKey);
  EnvironmentValues.subscript.getter(v0, v0, v1);
  return v3;
}

uint64_t sub_100048F3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;

  v2 = type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey(0);
  v3 = sub_10001254C(&qword_100549380, (uint64_t (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey, (uint64_t)&protocol conformance descriptor for EnvironmentValues.ShowsWidgetBackgroundKey);
  result = EnvironmentValues.subscript.getter(v2, v2, v3);
  *a1 = v5;
  return result;
}

uint64_t sub_100048FB0()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100048FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100048FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  __chkstk_darwin();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100049060()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100049080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a1, (uint64_t)v4, &qword_100548A48);
  return EnvironmentValues.textCase.setter(v4);
}

uint64_t sub_100049100@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100049130(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_10004915C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100049184(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_1000491AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_100549358;
  if (!qword_100549358)
  {
    v1 = sub_100011650(&qword_100549338);
    v3[0] = type metadata accessor for SmallTopChartsWidgetView(255);
    v3[1] = sub_10001254C(&qword_100549360, type metadata accessor for SmallTopChartsWidgetView, (uint64_t)&unk_100425E10);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    v2[1] = sub_100012324(&qword_100549368, &qword_100549350, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549358);
  }
  return result;
}

unint64_t sub_10004926C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_100549370;
  if (!qword_100549370)
  {
    v1 = sub_100011650(&qword_100549320);
    v3[0] = type metadata accessor for TopChartsWidgetContentView(255);
    v3[1] = sub_10001254C(&qword_100549348, type metadata accessor for TopChartsWidgetContentView, (uint64_t)&unk_100425E60);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    v2[1] = sub_100012324(&qword_100549368, &qword_100549350, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549370);
  }
  return result;
}

uint64_t sub_10004932C()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_10004934C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100049374()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100049394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

unint64_t sub_1000493B8()
{
  unint64_t result;

  result = qword_100549388;
  if (!qword_100549388)
  {
    result = swift_getWitnessTable(&unk_100425DD8, &_s23TopChartsWidgetEntryKeyVN);
    atomic_store(result, (unint64_t *)&qword_100549388);
  }
  return result;
}

ValueMetadata *_s23TopChartsWidgetEntryKeyVMa()
{
  return &_s23TopChartsWidgetEntryKeyVN;
}

_QWORD *sub_10004940C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD *, uint64_t, int *);
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void (*v81)(_QWORD *, _QWORD, uint64_t, int *);
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  char *__dst;
  uint64_t v129;
  char *__srca;
  void *__srcb;
  char *__src;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  char *v138;
  void (*v139)(char *, char *, uint64_t);
  int *v140;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v37);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v3, v7) == 1)
    {
      v136 = v7;
      v137 = v6;
      v8 = type metadata accessor for Date(0);
      v133 = *(_QWORD *)(v8 - 8);
      v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v133 + 16);
      v9(a1, v3, v8);
      v10 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)v3 + v11;
      v135 = v8;
      v139 = (void (*)(char *, char *, uint64_t))v9;
      v9((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)v3 + v11), v8);
      v14 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v15 = v14[5];
      v16 = &v12[v15];
      v17 = &v13[v15];
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v19 = v14[6];
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = v14[7];
      v24 = &v12[v23];
      v25 = &v13[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)v3 + v10[6]);
      v140 = v10;
      v27 = v10[7];
      v28 = v3;
      v29 = (_QWORD *)((char *)a1 + v27);
      v134 = v28;
      v30 = (_QWORD *)((char *)v28 + v27);
      v31 = (int *)type metadata accessor for WidgetMusicItem(0);
      v32 = *((_QWORD *)v31 - 1);
      v33 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        v34 = sub_10000B4C8(&qword_100548310);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v7 = v136;
        v6 = v137;
        v35 = v139;
        v36 = v140;
      }
      else
      {
        v129 = v32;
        v40 = v30[1];
        *v29 = *v30;
        v29[1] = v40;
        v41 = v30[3];
        v29[2] = v30[2];
        v29[3] = v41;
        v42 = v30[5];
        v29[4] = v30[4];
        v29[5] = v42;
        v43 = v31[7];
        v44 = (char *)v29 + v43;
        __srca = (char *)v30 + v43;
        v45 = type metadata accessor for URL(0);
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v44, __srca, v45);
        v47 = v31[8];
        v48 = (_QWORD *)((char *)v29 + v47);
        v49 = (_QWORD *)((char *)v30 + v47);
        v50 = v49[1];
        *v48 = *v49;
        v48[1] = v50;
        v51 = v31[9];
        v52 = (_QWORD *)((char *)v29 + v51);
        v53 = (_QWORD *)((char *)v30 + v51);
        __srcb = (void *)v53[1];
        *v52 = *v53;
        v52[1] = __srcb;
        v54 = v31[10];
        v55 = (_QWORD *)((char *)v29 + v54);
        v56 = (_QWORD *)((char *)v30 + v54);
        v57 = v56[1];
        *v55 = *v56;
        v55[1] = v57;
        v58 = v31[11];
        v59 = (_QWORD *)((char *)v29 + v58);
        v60 = (_QWORD *)((char *)v30 + v58);
        v61 = v60[1];
        *v59 = *v60;
        v59[1] = v61;
        v62 = v31[12];
        v63 = (_QWORD *)((char *)v29 + v62);
        v64 = (_QWORD *)((char *)v30 + v62);
        v65 = v64[1];
        *v63 = *v64;
        v63[1] = v65;
        v66 = v31[13];
        v67 = (_QWORD *)((char *)v29 + v66);
        v68 = (_QWORD *)((char *)v30 + v66);
        v69 = v68[1];
        *v67 = *v68;
        v67[1] = v69;
        *(_QWORD *)((char *)v29 + v31[14]) = *(_QWORD *)((char *)v30 + v31[14]);
        *((_BYTE *)v29 + v31[15]) = *((_BYTE *)v30 + v31[15]);
        v70 = v31[16];
        __dst = (char *)v29 + v70;
        v71 = (char *)v30 + v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72 = sub_10000B4C8(&qword_100547B50);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 10, v72))
        {
          v74 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          v7 = v136;
          v35 = v139;
          v36 = v140;
        }
        else
        {
          v75 = type metadata accessor for Playlist.Variant(0);
          v76 = *(_QWORD *)(v75 - 8);
          __src = v71;
          v127 = v75;
          v77 = (*(uint64_t (**)(char *, uint64_t))(v76 + 48))(v71, 1);
          v35 = v139;
          v36 = v140;
          if (v77)
          {
            v78 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, __src, v127);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v127);
          }
          v7 = v136;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 10, v72);
        }
        *(_QWORD *)((char *)v29 + v31[17]) = *(_QWORD *)((char *)v30 + v31[17]);
        v79 = v31[18];
        v80 = *(void **)((char *)v30 + v79);
        *(_QWORD *)((char *)v29 + v79) = v80;
        *(_QWORD *)((char *)v29 + v31[19]) = *(_QWORD *)((char *)v30 + v31[19]);
        v81 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v129 + 56);
        v82 = v80;
        swift_bridgeObjectRetain();
        v81(v29, 0, 1, v31);
        v6 = v137;
      }
      v3 = v134;
      v83 = v36[8];
      v84 = (char *)a1 + v83;
      v85 = (char *)v134 + v83;
      v86 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        v88 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        v35(v84, v85, v135);
        v35(&v84[*(int *)(v86 + 20)], &v85[*(int *)(v86 + 20)], v135);
        v89 = *(int *)(v86 + 24);
        v138 = &v84[v89];
        v90 = &v85[v89];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v90, 1, v135))
        {
          v91 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v138, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          v139(v138, v90, v135);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v138, 0, 1, v135);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      v92 = v140[9];
      v93 = *(void **)((char *)v134 + v92);
      *(_QWORD *)((char *)a1 + v92) = v93;
      v94 = v140[10];
      v95 = (_QWORD *)((char *)a1 + v94);
      v96 = (_QWORD *)((char *)v134 + v94);
      v97 = v96[1];
      *v95 = *v96;
      v95[1] = v97;
      v98 = v93;
      swift_bridgeObjectRetain();
      v39 = 1;
    }
    else
    {
      v38 = *v3;
      *a1 = *v3;
      swift_retain(v38);
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v39);
    v99 = v6[5];
    v100 = (_QWORD *)((char *)a1 + v99);
    v101 = (_QWORD *)((char *)v3 + v99);
    v102 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
    {
      v103 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
      v104 = v100;
      v105 = v102;
      v106 = 1;
    }
    else
    {
      v107 = *v101;
      *v100 = *v101;
      swift_retain(v107);
      v104 = v100;
      v105 = v102;
      v106 = 0;
    }
    swift_storeEnumTagMultiPayload(v104, v105, v106);
    v108 = v6[6];
    v109 = (_QWORD *)((char *)a1 + v108);
    v110 = (_QWORD *)((char *)v3 + v108);
    v111 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v110, v111) == 1)
    {
      v112 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v109, v110, v112);
      v113 = v109;
      v114 = v111;
      v115 = 1;
    }
    else
    {
      v116 = *v110;
      *v109 = *v110;
      swift_retain(v116);
      v113 = v109;
      v114 = v111;
      v115 = 0;
    }
    swift_storeEnumTagMultiPayload(v113, v114, v115);
    v117 = v6[7];
    v118 = (_QWORD *)((char *)a1 + v117);
    v119 = (_QWORD *)((char *)v3 + v117);
    v120 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v119, v120) == 1)
    {
      v121 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v118, v119, v121);
      v122 = v118;
      v123 = v120;
      v124 = 1;
    }
    else
    {
      v125 = *v119;
      *v118 = *v119;
      swift_retain(v125);
      v122 = v118;
      v123 = v120;
      v124 = 0;
    }
    swift_storeEnumTagMultiPayload(v122, v123, v124);
  }
  return a1;
}

double sub_100049B50(char *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  int *v8;
  char *v9;
  int *v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;

  v4 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(char *, uint64_t))(v6 + 8);
    v7(a1, v5);
    v8 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v9 = &a1[v8[5]];
    v7(v9, v5);
    v10 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[7] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[8]]);
    v11 = &a1[v8[7]];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 5));
      v13 = &v11[v12[7]];
      v14 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[9] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[10] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[11] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[12] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[13] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[14]]);
      v15 = &v11[v12[16]];
      v16 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 10, v16))
      {
        v17 = type metadata accessor for Playlist.Variant(0);
        v31 = *(_QWORD *)(v17 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v15, 1, v17))
          (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v17);
      }

      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[19]]);
    }
    v18 = &a1[v8[8]];
    v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      v7(v18, v5);
      v7(&v18[*(int *)(v19 + 20)], v5);
      v20 = &v18[*(int *)(v19 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
        v7(v20, v5);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&a1[v8[10] + 8]);
  }
  else
  {
    swift_release(*(_QWORD *)a1);
  }
  v21 = &a1[a2[5]];
  v22 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release(*(_QWORD *)v21);
  }
  v24 = &a1[a2[6]];
  v25 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  }
  else
  {
    swift_release(*(_QWORD *)v24);
  }
  v27 = &a1[a2[7]];
  v28 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*(_QWORD *)v27).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100049F44(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  unsigned int (*v31)(_QWORD *, uint64_t, int *);
  uint64_t v32;
  int *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void *v82;
  void (*v83)(_QWORD *, _QWORD, uint64_t, int *);
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *__dsta;
  char *__dst;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  _QWORD *v138;
  void *v139;
  char *v140;
  int *v141;
  void (*v142)(char *, char *, uint64_t);

  v6 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v139 = (void *)v6;
    v141 = a3;
    v7 = type metadata accessor for Date(0);
    v135 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v135 + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v136 = v7;
    v142 = (void (*)(char *, char *, uint64_t))v8;
    v8((_QWORD *)((char *)a1 + v10), (_QWORD *)((char *)a2 + v10), v7);
    v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v13[6];
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v13[7];
    v23 = &v11[v22];
    v24 = &v12[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v137 = v9;
    v138 = a2;
    v26 = v9[7];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = (int *)type metadata accessor for WidgetMusicItem(0);
    v30 = *((_QWORD *)v29 - 1);
    v31 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      v32 = sub_10000B4C8(&qword_100548310);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      v6 = (uint64_t)v139;
      v34 = v136;
      v33 = v137;
      v35 = v142;
    }
    else
    {
      v130 = v30;
      v38 = v28[1];
      *v27 = *v28;
      v27[1] = v38;
      v39 = v28[3];
      v27[2] = v28[2];
      v27[3] = v39;
      v40 = v28[5];
      v27[4] = v28[4];
      v27[5] = v40;
      v41 = v29[7];
      v42 = (char *)v27 + v41;
      __dsta = (char *)v28 + v41;
      v43 = type metadata accessor for URL(0);
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v42, __dsta, v43);
      v45 = v29[8];
      v46 = (_QWORD *)((char *)v27 + v45);
      v47 = (_QWORD *)((char *)v28 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = v29[9];
      v50 = (_QWORD *)((char *)v27 + v49);
      v51 = (_QWORD *)((char *)v28 + v49);
      v131 = v51[1];
      *v50 = *v51;
      v50[1] = v131;
      v52 = v29[10];
      v53 = (_QWORD *)((char *)v27 + v52);
      v54 = (_QWORD *)((char *)v28 + v52);
      v55 = v54[1];
      *v53 = *v54;
      v53[1] = v55;
      v56 = v29[11];
      v57 = (_QWORD *)((char *)v27 + v56);
      v58 = (_QWORD *)((char *)v28 + v56);
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      v60 = v29[12];
      v61 = (_QWORD *)((char *)v27 + v60);
      v62 = (_QWORD *)((char *)v28 + v60);
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      v64 = v29[13];
      v65 = (_QWORD *)((char *)v27 + v64);
      v66 = (_QWORD *)((char *)v28 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      *(_QWORD *)((char *)v27 + v29[14]) = *(_QWORD *)((char *)v28 + v29[14]);
      *((_BYTE *)v27 + v29[15]) = *((_BYTE *)v28 + v29[15]);
      v68 = v29[16];
      __dst = (char *)v27 + v68;
      v69 = (char *)v28 + v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70 = sub_10000B4C8(&qword_100547B50);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 10, v70))
      {
        v72 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        v34 = v136;
        v33 = v137;
        v35 = v142;
        v73 = v130;
      }
      else
      {
        v74 = type metadata accessor for Playlist.Variant(0);
        v75 = *(_QWORD *)(v74 - 8);
        v132 = v69;
        v76 = v74;
        v77 = (*(uint64_t (**)(char *, uint64_t))(v75 + 48))(v69, 1);
        v33 = v137;
        v35 = v142;
        if (v77)
        {
          v78 = sub_10000B4C8(&qword_100548358);
          v79 = __dst;
          memcpy(__dst, v132, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          v129 = v76;
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v132, v76);
          v79 = __dst;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v129);
        }
        v80 = v79;
        v73 = v130;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v80, 0, 10, v70);
        v34 = v136;
      }
      *(_QWORD *)((char *)v27 + v29[17]) = *(_QWORD *)((char *)v28 + v29[17]);
      v81 = v29[18];
      v82 = *(void **)((char *)v28 + v81);
      *(_QWORD *)((char *)v27 + v81) = v82;
      *(_QWORD *)((char *)v27 + v29[19]) = *(_QWORD *)((char *)v28 + v29[19]);
      v83 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56);
      v84 = v82;
      swift_bridgeObjectRetain();
      v83(v27, 0, 1, v29);
      v6 = (uint64_t)v139;
    }
    a2 = v138;
    v85 = v33[8];
    v86 = (char *)a1 + v85;
    v87 = (char *)v138 + v85;
    v88 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v89 = *(_QWORD *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
    {
      v90 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      v35(v86, v87, v34);
      v35(&v86[*(int *)(v88 + 20)], &v87[*(int *)(v88 + 20)], v34);
      v91 = *(int *)(v88 + 24);
      v140 = &v86[v91];
      v92 = &v87[v91];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v92, 1, v34))
      {
        v93 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v140, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        v142(v140, v92, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v140, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
    }
    a3 = v141;
    v94 = v33[9];
    v95 = *(void **)((char *)v138 + v94);
    *(_QWORD *)((char *)a1 + v94) = v95;
    v96 = v33[10];
    v97 = (_QWORD *)((char *)a1 + v96);
    v98 = (_QWORD *)((char *)v138 + v96);
    v99 = v98[1];
    *v97 = *v98;
    v97[1] = v99;
    v100 = v95;
    swift_bridgeObjectRetain();
    v37 = 1;
  }
  else
  {
    v36 = *a2;
    *a1 = *a2;
    swift_retain(v36);
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v37);
  v101 = a3[5];
  v102 = (_QWORD *)((char *)a1 + v101);
  v103 = (_QWORD *)((char *)a2 + v101);
  v104 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v103, v104) == 1)
  {
    v105 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v102, v103, v105);
    v106 = v102;
    v107 = v104;
    v108 = 1;
  }
  else
  {
    v109 = *v103;
    *v102 = *v103;
    swift_retain(v109);
    v106 = v102;
    v107 = v104;
    v108 = 0;
  }
  swift_storeEnumTagMultiPayload(v106, v107, v108);
  v110 = a3[6];
  v111 = (_QWORD *)((char *)a1 + v110);
  v112 = (_QWORD *)((char *)a2 + v110);
  v113 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v112, v113) == 1)
  {
    v114 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v111, v112, v114);
    v115 = v111;
    v116 = v113;
    v117 = 1;
  }
  else
  {
    v118 = *v112;
    *v111 = *v112;
    swift_retain(v118);
    v115 = v111;
    v116 = v113;
    v117 = 0;
  }
  swift_storeEnumTagMultiPayload(v115, v116, v117);
  v119 = a3[7];
  v120 = (_QWORD *)((char *)a1 + v119);
  v121 = (_QWORD *)((char *)a2 + v119);
  v122 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v121, v122) == 1)
  {
    v123 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v120, v121, v123);
    v124 = v120;
    v125 = v122;
    v126 = 1;
  }
  else
  {
    v127 = *v121;
    *v120 = *v121;
    swift_retain(v127);
    v124 = v120;
    v125 = v122;
    v126 = 0;
  }
  swift_storeEnumTagMultiPayload(v124, v125, v126);
  return a1;
}

_QWORD *sub_10004A660(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD *, uint64_t, int *);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void (*v70)(_QWORD *, _QWORD, uint64_t, int *);
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  id v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  char *__src;
  char *__dsta;
  char *__dst;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  int *v123;
  void *v124;
  char *v125;
  int *v126;
  void (*v127)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    v5 = a2;
    sub_100011694((uint64_t)a1, &qword_100549340);
    v6 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
    {
      v124 = (void *)v6;
      v126 = a3;
      v7 = type metadata accessor for Date(0);
      v120 = *(_QWORD *)(v7 - 8);
      v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v120 + 16);
      v8(a1, v5, v7);
      v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)v5 + v10;
      v122 = v7;
      v127 = (void (*)(char *, char *, uint64_t))v8;
      v8((_QWORD *)((char *)a1 + v10), (_QWORD *)((char *)v5 + v10), v7);
      v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v14 = v13[5];
      v15 = &v11[v14];
      v16 = &v12[v14];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v17 = v13[6];
      v18 = &v11[v17];
      v19 = &v12[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      v20 = v13[7];
      v21 = &v11[v20];
      v22 = &v12[v20];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)v5 + v9[6]);
      v123 = v9;
      v23 = v9[7];
      v24 = v5;
      v25 = (_QWORD *)((char *)a1 + v23);
      v121 = v24;
      v26 = (_QWORD *)((char *)v24 + v23);
      v27 = (int *)type metadata accessor for WidgetMusicItem(0);
      v28 = *((_QWORD *)v27 - 1);
      v29 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        v30 = sub_10000B4C8(&qword_100548310);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = v123;
        v6 = (uint64_t)v124;
        v32 = v7;
        v33 = v127;
      }
      else
      {
        v119 = v28;
        *v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        v25[4] = v26[4];
        v25[5] = v26[5];
        v36 = v27[7];
        v37 = (char *)v25 + v36;
        __dsta = (char *)v26 + v36;
        v38 = type metadata accessor for URL(0);
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39(v37, __dsta, v38);
        v40 = v27[8];
        v41 = (_QWORD *)((char *)v25 + v40);
        v42 = (_QWORD *)((char *)v26 + v40);
        *v41 = *v42;
        v41[1] = v42[1];
        v43 = v27[9];
        v44 = (_QWORD *)((char *)v25 + v43);
        v45 = (_QWORD *)((char *)v26 + v43);
        *v44 = *v45;
        v44[1] = v45[1];
        v46 = v27[10];
        v47 = (_QWORD *)((char *)v25 + v46);
        v48 = (_QWORD *)((char *)v26 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        v49 = v27[11];
        v50 = (_QWORD *)((char *)v25 + v49);
        v51 = (_QWORD *)((char *)v26 + v49);
        *v50 = *v51;
        v50[1] = v51[1];
        v52 = v27[12];
        v53 = (_QWORD *)((char *)v25 + v52);
        v54 = (_QWORD *)((char *)v26 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        v55 = v27[13];
        v56 = (_QWORD *)((char *)v25 + v55);
        v57 = (_QWORD *)((char *)v26 + v55);
        *v56 = *v57;
        v56[1] = v57[1];
        *(_QWORD *)((char *)v25 + v27[14]) = *(_QWORD *)((char *)v26 + v27[14]);
        *((_BYTE *)v25 + v27[15]) = *((_BYTE *)v26 + v27[15]);
        v58 = v27[16];
        __dst = (char *)v25 + v58;
        v59 = (char *)v26 + v58;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = sub_10000B4C8(&qword_100547B50);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 10, v60))
        {
          v62 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          v32 = v122;
          v31 = v123;
          v33 = (void (*)(char *, char *, uint64_t))v8;
          v63 = v119;
        }
        else
        {
          v64 = type metadata accessor for Playlist.Variant(0);
          v65 = *(_QWORD *)(v64 - 8);
          v115 = v64;
          __src = v59;
          v66 = (*(uint64_t (**)(char *, uint64_t))(v65 + 48))(v59, 1);
          v31 = v123;
          v33 = v127;
          if (v66)
          {
            v67 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v65 + 16))(__dst, __src, v115);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(__dst, 0, 1, v115);
          }
          v63 = v119;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 10, v60);
          v32 = v122;
        }
        *(_QWORD *)((char *)v25 + v27[17]) = *(_QWORD *)((char *)v26 + v27[17]);
        v68 = v27[18];
        v69 = *(void **)((char *)v26 + v68);
        *(_QWORD *)((char *)v25 + v68) = v69;
        *(_QWORD *)((char *)v25 + v27[19]) = *(_QWORD *)((char *)v26 + v27[19]);
        v70 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v63 + 56);
        v71 = v69;
        swift_bridgeObjectRetain();
        v70(v25, 0, 1, v27);
        v6 = (uint64_t)v124;
      }
      v5 = v121;
      v72 = v31[8];
      v73 = (char *)a1 + v72;
      v74 = (char *)v121 + v72;
      v75 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        v77 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        v33(v73, v74, v32);
        v33(&v73[*(int *)(v75 + 20)], &v74[*(int *)(v75 + 20)], v32);
        v78 = *(int *)(v75 + 24);
        v125 = &v73[v78];
        v79 = &v74[v78];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v79, 1, v32))
        {
          v80 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v125, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          v127(v125, v79, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v125, 0, 1, v32);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      a3 = v126;
      v81 = v31[9];
      v82 = *(void **)((char *)v121 + v81);
      *(_QWORD *)((char *)a1 + v81) = v82;
      v83 = v31[10];
      v84 = (_QWORD *)((char *)a1 + v83);
      v85 = (_QWORD *)((char *)v121 + v83);
      *v84 = *v85;
      v84[1] = v85[1];
      v86 = v82;
      swift_bridgeObjectRetain();
      v35 = 1;
    }
    else
    {
      v34 = *v5;
      *a1 = *v5;
      swift_retain(v34);
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v35);
    v87 = a3[5];
    v88 = (_QWORD *)((char *)a1 + v87);
    v89 = (_QWORD *)((char *)v5 + v87);
    sub_100011694((uint64_t)a1 + v87, &qword_100547EE0);
    v90 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v89, v90) == 1)
    {
      v91 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v88, v89, v91);
      v92 = v88;
      v93 = v90;
      v94 = 1;
    }
    else
    {
      v95 = *v89;
      *v88 = *v89;
      swift_retain(v95);
      v92 = v88;
      v93 = v90;
      v94 = 0;
    }
    swift_storeEnumTagMultiPayload(v92, v93, v94);
    v96 = a3[6];
    v97 = (_QWORD *)((char *)a1 + v96);
    v98 = (_QWORD *)((char *)v5 + v96);
    sub_100011694((uint64_t)a1 + v96, &qword_100548900);
    v99 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v98, v99) == 1)
    {
      v100 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v97, v98, v100);
      v101 = v97;
      v102 = v99;
      v103 = 1;
    }
    else
    {
      v104 = *v98;
      *v97 = *v98;
      swift_retain(v104);
      v101 = v97;
      v102 = v99;
      v103 = 0;
    }
    swift_storeEnumTagMultiPayload(v101, v102, v103);
    v105 = a3[7];
    v106 = (_QWORD *)((char *)a1 + v105);
    v107 = (_QWORD *)((char *)v5 + v105);
    sub_100011694((uint64_t)a1 + v105, &qword_1005486F8);
    v108 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v107, v108) == 1)
    {
      v109 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v106, v107, v109);
      v110 = v106;
      v111 = v108;
      v112 = 1;
    }
    else
    {
      v113 = *v107;
      *v106 = *v107;
      swift_retain(v113);
      v110 = v106;
      v111 = v108;
      v112 = 0;
    }
    swift_storeEnumTagMultiPayload(v110, v111, v112);
  }
  return a1;
}

char *sub_10004AE2C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, void *);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *__dst;
  uint64_t v66;
  void (*v67)(char *, char *, void *);
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;

  v6 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, void *))(v8 + 32);
    v9(a1, a2, (void *)v7);
    v10 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v11 = v10[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v70 = (void *)v7;
    v67 = v9;
    v9(&a1[v11], &a2[v11], (void *)v7);
    v14 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
    *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
    *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
    *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
    a1[v10[6]] = a2[v10[6]];
    v15 = v10[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = (int *)type metadata accessor for WidgetMusicItem(0);
    v19 = *((_QWORD *)v18 - 1);
    v68 = v8;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_10000B4C8(&qword_100548310);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = v70;
    }
    else
    {
      v66 = v19;
      v69 = v6;
      v22 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v22;
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      v23 = v18[7];
      v24 = &v16[v23];
      v25 = &v17[v23];
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
      *(_OWORD *)&v16[v18[9]] = *(_OWORD *)&v17[v18[9]];
      *(_OWORD *)&v16[v18[10]] = *(_OWORD *)&v17[v18[10]];
      *(_OWORD *)&v16[v18[11]] = *(_OWORD *)&v17[v18[11]];
      *(_OWORD *)&v16[v18[12]] = *(_OWORD *)&v17[v18[12]];
      *(_OWORD *)&v16[v18[13]] = *(_OWORD *)&v17[v18[13]];
      *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
      v16[v18[15]] = v17[v18[15]];
      v27 = v18[16];
      __dst = &v16[v27];
      v28 = &v17[v27];
      v29 = sub_10000B4C8(&qword_100547B50);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 10, v29))
      {
        v31 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v6 = v69;
        v21 = v70;
      }
      else
      {
        v63 = v29;
        v64 = v30;
        v32 = type metadata accessor for Playlist.Variant(0);
        v62 = *(_QWORD *)(v32 - 8);
        v33 = v32;
        v21 = v70;
        if ((*(unsigned int (**)(char *, uint64_t))(v62 + 48))(v28, 1))
        {
          v34 = sub_10000B4C8(&qword_100548358);
          v35 = __dst;
          memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          v36 = v33;
          v35 = __dst;
          (*(void (**)(void))(v62 + 32))();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dst, 0, 1, v36);
        }
        v6 = v69;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v35, 0, 10, v63);
      }
      *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
      *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
      *(_QWORD *)&v16[v18[19]] = *(_QWORD *)&v17[v18[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v66 + 56))(v16, 0, 1, v18);
    }
    v37 = v10[8];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v40 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v67(v38, v39, v21);
      v67(&v38[*(int *)(v40 + 20)], &v39[*(int *)(v40 + 20)], v21);
      v43 = *(int *)(v40 + 24);
      v71 = &v38[v43];
      v44 = &v39[v43];
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v68 + 48))(v44, 1, v21))
      {
        v45 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v71, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v67(v71, v44, v21);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v68 + 56))(v71, 0, 1, v21);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
    *(_OWORD *)&a1[v10[10]] = *(_OWORD *)&a2[v10[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v46 = a3[5];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload(v47, v49, 1);
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  v51 = a3[6];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
  {
    v55 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v52, v53, v55);
    swift_storeEnumTagMultiPayload(v52, v54, 1);
  }
  else
  {
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  v56 = a3[7];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
  {
    v60 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v57, v58, v60);
    swift_storeEnumTagMultiPayload(v57, v59, 1);
  }
  else
  {
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  return a1;
}

char *sub_10004B458(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, void *);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void (*v38)(void *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *__dst;
  uint64_t v68;
  void (*v69)(char *, char *, void *);
  uint64_t v70;
  uint64_t v71;
  int *v72;
  void *v73;
  char *v74;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_100549340);
    v6 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v72 = a3;
      v7 = type metadata accessor for Date(0);
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(char *, char *, void *))(v8 + 32);
      v9(a1, a2, (void *)v7);
      v10 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v73 = (void *)v7;
      v69 = v9;
      v9(&a1[v11], &a2[v11], (void *)v7);
      v14 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
      *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
      *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      a1[v10[6]] = a2[v10[6]];
      v15 = v10[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = (int *)type metadata accessor for WidgetMusicItem(0);
      v19 = *((_QWORD *)v18 - 1);
      v70 = v8;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_10000B4C8(&qword_100548310);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v21 = v73;
      }
      else
      {
        v68 = v19;
        v71 = v6;
        v22 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v22;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        v23 = v18[7];
        v24 = &v16[v23];
        v25 = &v17[v23];
        v26 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
        *(_OWORD *)&v16[v18[9]] = *(_OWORD *)&v17[v18[9]];
        *(_OWORD *)&v16[v18[10]] = *(_OWORD *)&v17[v18[10]];
        *(_OWORD *)&v16[v18[11]] = *(_OWORD *)&v17[v18[11]];
        *(_OWORD *)&v16[v18[12]] = *(_OWORD *)&v17[v18[12]];
        *(_OWORD *)&v16[v18[13]] = *(_OWORD *)&v17[v18[13]];
        *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
        v16[v18[15]] = v17[v18[15]];
        v27 = v18[16];
        v28 = &v16[v27];
        v29 = &v17[v27];
        v30 = sub_10000B4C8(&qword_100547B50);
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 10, v30))
        {
          v32 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          v6 = v71;
          v21 = v73;
          v33 = v68;
        }
        else
        {
          v65 = v31;
          v66 = v30;
          __dst = v28;
          v34 = type metadata accessor for Playlist.Variant(0);
          v35 = *(_QWORD *)(v34 - 8);
          v21 = v73;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v29, 1, v34))
          {
            v36 = sub_10000B4C8(&qword_100548358);
            v37 = __dst;
            memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            v38 = *(void (**)(void *, char *, uint64_t))(v35 + 32);
            v64 = v35;
            v37 = __dst;
            v38(__dst, v29, v34);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 1, v34);
          }
          v33 = v68;
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v37, 0, 10, v66);
          v6 = v71;
        }
        *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
        *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
        *(_QWORD *)&v16[v18[19]] = *(_QWORD *)&v17[v18[19]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v16, 0, 1, v18);
      }
      v39 = v10[8];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v42 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v69(v40, v41, v21);
        v69(&v40[*(int *)(v42 + 20)], &v41[*(int *)(v42 + 20)], v21);
        v45 = *(int *)(v42 + 24);
        v74 = &v40[v45];
        v46 = &v41[v45];
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v70 + 48))(v46, 1, v21))
        {
          v47 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v74, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v69(v74, v46, v21);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v70 + 56))(v74, 0, 1, v21);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      a3 = v72;
      *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
      *(_OWORD *)&a1[v10[10]] = *(_OWORD *)&a2[v10[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v48 = a3[5];
    v49 = &a1[v48];
    v50 = &a2[v48];
    sub_100011694((uint64_t)&a1[v48], &qword_100547EE0);
    v51 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
    {
      v52 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v49, v50, v52);
      swift_storeEnumTagMultiPayload(v49, v51, 1);
    }
    else
    {
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    v53 = a3[6];
    v54 = &a1[v53];
    v55 = &a2[v53];
    sub_100011694((uint64_t)&a1[v53], &qword_100548900);
    v56 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
    {
      v57 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v54, v55, v57);
      swift_storeEnumTagMultiPayload(v54, v56, 1);
    }
    else
    {
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    v58 = a3[7];
    v59 = &a1[v58];
    v60 = &a2[v58];
    sub_100011694((uint64_t)&a1[v58], &qword_1005486F8);
    v61 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v60, v61) == 1)
    {
      v62 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v59, v60, v62);
      swift_storeEnumTagMultiPayload(v59, v61, 1);
    }
    else
    {
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004BAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004BADC);
}

uint64_t sub_10004BADC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_10000B4C8(&qword_100549390);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10000B4C8(&qword_1005484F8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_10000B4C8(&qword_100548910);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = sub_10000B4C8(&qword_100548738);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10004BBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004BBB4);
}

uint64_t sub_10004BBB4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_10000B4C8(&qword_100549390);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_1005484F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_10000B4C8(&qword_100548910);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = sub_10000B4C8(&qword_100548738);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10004BC88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  sub_10002E8E4(319, (unint64_t *)&unk_100549400, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, &qword_100548988, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10002E8E4(319, (unint64_t *)&unk_1005487B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 4, v10, a1 + 16);
        }
      }
    }
  }
}

char *sub_10004BDA4(char *a1, char *a2, int *a3)
{
  char *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, int *);
  uint64_t v33;
  int *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void (*v81)(char *, _QWORD, uint64_t, int *);
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v148;
  char *__dst;
  uint64_t v150;
  char *__src;
  void *__srca;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  int *v156;
  void *v157;
  char *v158;
  int *v159;
  void (*v160)(char *, char *, uint64_t);

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v37);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v3, v7) == 1)
    {
      v157 = (void *)v7;
      v159 = v6;
      v8 = type metadata accessor for Date(0);
      v153 = *(_QWORD *)(v8 - 8);
      v9 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
      v9(a1, v3, v8);
      v10 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &v3[v11];
      v154 = v8;
      v160 = v9;
      v9(&a1[v11], &v3[v11], v8);
      v14 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v15 = v14[5];
      v16 = &v12[v15];
      v17 = &v13[v15];
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v19 = v14[6];
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = v14[7];
      v24 = &v12[v23];
      v25 = &v13[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      a1[v10[6]] = v3[v10[6]];
      v155 = v3;
      v156 = v10;
      v27 = v10[7];
      v28 = &a1[v27];
      v29 = &v3[v27];
      v30 = (int *)type metadata accessor for WidgetMusicItem(0);
      v31 = *((_QWORD *)v30 - 1);
      v32 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32(v29, 1, v30))
      {
        v33 = sub_10000B4C8(&qword_100548310);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = v156;
        v7 = (uint64_t)v157;
        v35 = v154;
        v36 = v160;
      }
      else
      {
        v150 = v31;
        v40 = *((_QWORD *)v29 + 1);
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v40;
        v41 = *((_QWORD *)v29 + 3);
        *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
        *((_QWORD *)v28 + 3) = v41;
        v42 = *((_QWORD *)v29 + 5);
        *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
        *((_QWORD *)v28 + 5) = v42;
        v43 = v30[7];
        v44 = &v28[v43];
        __src = &v29[v43];
        v45 = type metadata accessor for URL(0);
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v44, __src, v45);
        v47 = v30[8];
        v48 = &v28[v47];
        v49 = &v29[v47];
        v50 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v50;
        v51 = v30[9];
        v52 = &v28[v51];
        v53 = &v29[v51];
        __srca = (void *)*((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = __srca;
        v54 = v30[10];
        v55 = &v28[v54];
        v56 = &v29[v54];
        v57 = *((_QWORD *)v56 + 1);
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *((_QWORD *)v55 + 1) = v57;
        v58 = v30[11];
        v59 = &v28[v58];
        v60 = &v29[v58];
        v61 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = *(_QWORD *)v60;
        *((_QWORD *)v59 + 1) = v61;
        v62 = v30[12];
        v63 = &v28[v62];
        v64 = &v29[v62];
        v65 = *((_QWORD *)v64 + 1);
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = v65;
        v66 = v30[13];
        v67 = &v28[v66];
        v68 = &v29[v66];
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = *(_QWORD *)v68;
        *((_QWORD *)v67 + 1) = v69;
        *(_QWORD *)&v28[v30[14]] = *(_QWORD *)&v29[v30[14]];
        v28[v30[15]] = v29[v30[15]];
        v70 = v30[16];
        __dst = &v28[v70];
        v71 = &v29[v70];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72 = sub_10000B4C8(&qword_100547B50);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 10, v72))
        {
          v74 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          v34 = v156;
          v35 = v154;
          v36 = v160;
          v75 = v150;
        }
        else
        {
          v76 = type metadata accessor for Playlist.Variant(0);
          v77 = *(_QWORD *)(v76 - 8);
          v148 = v76;
          v36 = v160;
          v75 = v150;
          if ((*(unsigned int (**)(char *, uint64_t))(v77 + 48))(v71, 1))
          {
            v78 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(__dst, v71, v148);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v148);
          }
          v34 = v156;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 10, v72);
          v35 = v154;
        }
        *(_QWORD *)&v28[v30[17]] = *(_QWORD *)&v29[v30[17]];
        v79 = v30[18];
        v80 = *(void **)&v29[v79];
        *(_QWORD *)&v28[v79] = v80;
        *(_QWORD *)&v28[v30[19]] = *(_QWORD *)&v29[v30[19]];
        v81 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v75 + 56);
        v82 = v80;
        swift_bridgeObjectRetain();
        v81(v28, 0, 1, v30);
        v7 = (uint64_t)v157;
      }
      v3 = v155;
      v83 = v34[8];
      v84 = &a1[v83];
      v85 = &v155[v83];
      v86 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        v88 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        v36(v84, v85, v35);
        v36(&v84[*(int *)(v86 + 20)], &v85[*(int *)(v86 + 20)], v35);
        v89 = *(int *)(v86 + 24);
        v158 = &v84[v89];
        v90 = &v85[v89];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v90, 1, v35))
        {
          v91 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v158, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          v160(v158, v90, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v158, 0, 1, v35);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      v6 = v159;
      v92 = v34[9];
      v93 = *(void **)&v155[v92];
      *(_QWORD *)&a1[v92] = v93;
      v94 = v34[10];
      v95 = &a1[v94];
      v96 = &v155[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v93;
      swift_bridgeObjectRetain();
      v39 = 1;
    }
    else
    {
      v38 = *(_QWORD *)v3;
      *(_QWORD *)a1 = *(_QWORD *)v3;
      swift_retain(v38);
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v39);
    v99 = v6[5];
    v100 = (uint64_t *)&a1[v99];
    v101 = (uint64_t *)&v3[v99];
    v102 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
    {
      v103 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
      v104 = v100;
      v105 = v102;
      v106 = 1;
    }
    else
    {
      v107 = *v101;
      *v100 = *v101;
      swift_retain(v107);
      v104 = v100;
      v105 = v102;
      v106 = 0;
    }
    swift_storeEnumTagMultiPayload(v104, v105, v106);
    v108 = v6[6];
    v109 = (uint64_t *)&a1[v108];
    v110 = (uint64_t *)&v3[v108];
    v111 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v110, v111) == 1)
    {
      v112 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v109, v110, v112);
      v113 = v109;
      v114 = v111;
      v115 = 1;
    }
    else
    {
      v116 = *v110;
      *v109 = *v110;
      swift_retain(v116);
      v113 = v109;
      v114 = v111;
      v115 = 0;
    }
    swift_storeEnumTagMultiPayload(v113, v114, v115);
    v117 = v6[7];
    v118 = (uint64_t *)&a1[v117];
    v119 = (uint64_t *)&v3[v117];
    v120 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v119, v120) == 1)
    {
      v121 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v118, v119, v121);
      v122 = v118;
      v123 = v120;
      v124 = 1;
    }
    else
    {
      v125 = *v119;
      *v118 = *v119;
      swift_retain(v125);
      v122 = v118;
      v123 = v120;
      v124 = 0;
    }
    swift_storeEnumTagMultiPayload(v122, v123, v124);
    v126 = v6[8];
    v127 = &a1[v126];
    v128 = &v3[v126];
    v129 = *(_QWORD *)v128;
    v130 = v128[8];
    sub_10004C60C(*(_QWORD *)v128, v130);
    *(_QWORD *)v127 = v129;
    v127[8] = v130;
    v131 = v6[9];
    v132 = (uint64_t *)&a1[v131];
    v133 = (uint64_t *)&v3[v131];
    v134 = sub_10000B4C8(&qword_100549378);
    if (swift_getEnumCaseMultiPayload(v133, v134) == 1)
    {
      v135 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v132, v133, v135);
      v136 = 1;
    }
    else
    {
      v137 = *v133;
      *v132 = *v133;
      swift_retain(v137);
      v136 = 0;
    }
    swift_storeEnumTagMultiPayload(v132, v134, v136);
    v138 = v6[10];
    v139 = (uint64_t *)&a1[v138];
    v140 = (uint64_t *)&v3[v138];
    v141 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v140, v141) == 1)
    {
      v142 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v139, v140, v142);
      v143 = v139;
      v144 = v141;
      v145 = 1;
    }
    else
    {
      v146 = *v140;
      *v139 = *v140;
      swift_retain(v146);
      v143 = v139;
      v144 = v141;
      v145 = 0;
    }
    swift_storeEnumTagMultiPayload(v143, v144, v145);
  }
  return a1;
}

uint64_t sub_10004C60C(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

double sub_10004C618(char *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  int *v8;
  char *v9;
  int *v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;

  v4 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(char *, uint64_t))(v6 + 8);
    v7(a1, v5);
    v8 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v9 = &a1[v8[5]];
    v7(v9, v5);
    v10 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[7] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[8]]);
    v11 = &a1[v8[7]];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 5));
      v13 = &v11[v12[7]];
      v14 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[9] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[10] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[11] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[12] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[13] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[14]]);
      v15 = &v11[v12[16]];
      v16 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 10, v16))
      {
        v17 = type metadata accessor for Playlist.Variant(0);
        v37 = *(_QWORD *)(v17 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v17))
          (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v17);
      }

      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[19]]);
    }
    v18 = &a1[v8[8]];
    v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      v7(v18, v5);
      v7(&v18[*(int *)(v19 + 20)], v5);
      v20 = &v18[*(int *)(v19 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
        v7(v20, v5);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&a1[v8[10] + 8]);
  }
  else
  {
    swift_release(*(_QWORD *)a1);
  }
  v21 = &a1[a2[5]];
  v22 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release(*(_QWORD *)v21);
  }
  v24 = &a1[a2[6]];
  v25 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  }
  else
  {
    swift_release(*(_QWORD *)v24);
  }
  v27 = &a1[a2[7]];
  v28 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
  }
  else
  {
    swift_release(*(_QWORD *)v27);
  }
  sub_10004CAC0(*(_QWORD *)&a1[a2[8]], a1[a2[8] + 8]);
  v30 = &a1[a2[9]];
  v31 = sub_10000B4C8(&qword_100549378);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    swift_release(*(_QWORD *)v30);
  }
  v33 = &a1[a2[10]];
  v34 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v33, v35);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*(_QWORD *)v33).n128_u64[0];
  }
  return result;
}

uint64_t sub_10004CAC0(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

char *sub_10004CACC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD *, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  int *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void (*v80)(_QWORD *, _QWORD, uint64_t, int *);
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v147;
  char *__dst;
  uint64_t v149;
  char *__src;
  void *__srca;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  int *v156;
  char *v157;
  int *v158;
  void (*v159)(char *, char *, uint64_t);

  v6 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v153 = v6;
    v158 = a3;
    v7 = type metadata accessor for Date(0);
    v152 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v154 = v7;
    v159 = v8;
    v8(&a1[v10], &a2[v10], v7);
    v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v13[6];
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v13[7];
    v23 = &v11[v22];
    v24 = &v12[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    a1[v9[6]] = a2[v9[6]];
    v26 = v9[7];
    v27 = a2;
    v28 = &a1[v26];
    v155 = v27;
    v156 = v9;
    v29 = &v27[v26];
    v30 = (int *)type metadata accessor for WidgetMusicItem(0);
    v31 = *((_QWORD *)v30 - 1);
    v32 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32((char *)v29, 1, v30))
    {
      v33 = sub_10000B4C8(&qword_100548310);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      v6 = v153;
      v34 = v154;
      v35 = v156;
      v36 = v159;
    }
    else
    {
      v149 = v31;
      v39 = v29[1];
      *(_QWORD *)v28 = *v29;
      *((_QWORD *)v28 + 1) = v39;
      v40 = v29[3];
      *((_QWORD *)v28 + 2) = v29[2];
      *((_QWORD *)v28 + 3) = v40;
      v41 = v29[5];
      *((_QWORD *)v28 + 4) = v29[4];
      *((_QWORD *)v28 + 5) = v41;
      v42 = v30[7];
      v43 = &v28[v42];
      __src = (char *)v29 + v42;
      v44 = type metadata accessor for URL(0);
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v43, __src, v44);
      v46 = v30[8];
      v47 = &v28[v46];
      v48 = (_QWORD *)((char *)v29 + v46);
      v49 = v48[1];
      *(_QWORD *)v47 = *v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = v30[9];
      v51 = &v28[v50];
      v52 = (_QWORD *)((char *)v29 + v50);
      __srca = (void *)v52[1];
      *(_QWORD *)v51 = *v52;
      *((_QWORD *)v51 + 1) = __srca;
      v53 = v30[10];
      v54 = &v28[v53];
      v55 = (_QWORD *)((char *)v29 + v53);
      v56 = v55[1];
      *(_QWORD *)v54 = *v55;
      *((_QWORD *)v54 + 1) = v56;
      v57 = v30[11];
      v58 = &v28[v57];
      v59 = (_QWORD *)((char *)v29 + v57);
      v60 = v59[1];
      *(_QWORD *)v58 = *v59;
      *((_QWORD *)v58 + 1) = v60;
      v61 = v30[12];
      v62 = &v28[v61];
      v63 = (_QWORD *)((char *)v29 + v61);
      v64 = v63[1];
      *(_QWORD *)v62 = *v63;
      *((_QWORD *)v62 + 1) = v64;
      v65 = v30[13];
      v66 = &v28[v65];
      v67 = (_QWORD *)((char *)v29 + v65);
      v68 = v67[1];
      *(_QWORD *)v66 = *v67;
      *((_QWORD *)v66 + 1) = v68;
      *(_QWORD *)&v28[v30[14]] = *(_QWORD *)((char *)v29 + v30[14]);
      v28[v30[15]] = *((_BYTE *)v29 + v30[15]);
      v69 = v30[16];
      __dst = &v28[v69];
      v70 = (char *)v29 + v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71 = sub_10000B4C8(&qword_100547B50);
      v72 = *(_QWORD *)(v71 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 10, v71))
      {
        v73 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        v6 = v153;
        v34 = v154;
        v36 = v159;
        v74 = v149;
      }
      else
      {
        v75 = type metadata accessor for Playlist.Variant(0);
        v76 = *(_QWORD *)(v75 - 8);
        v147 = v75;
        v36 = v159;
        v74 = v149;
        if ((*(unsigned int (**)(char *, uint64_t))(v76 + 48))(v70, 1))
        {
          v77 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, v70, v147);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v147);
        }
        v6 = v153;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 10, v71);
        v34 = v154;
      }
      *(_QWORD *)&v28[v30[17]] = *(_QWORD *)((char *)v29 + v30[17]);
      v78 = v30[18];
      v79 = *(void **)((char *)v29 + v78);
      *(_QWORD *)&v28[v78] = v79;
      *(_QWORD *)&v28[v30[19]] = *(_QWORD *)((char *)v29 + v30[19]);
      v80 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v74 + 56);
      v81 = v79;
      swift_bridgeObjectRetain();
      v80(v28, 0, 1, v30);
      v35 = v156;
    }
    a2 = v155;
    v82 = v35[8];
    v83 = &a1[v82];
    v84 = &v155[v82];
    v85 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v86 = *(_QWORD *)(v85 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
    {
      v87 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v36(v83, v84, v34);
      v36(&v83[*(int *)(v85 + 20)], &v84[*(int *)(v85 + 20)], v34);
      v88 = *(int *)(v85 + 24);
      v157 = &v83[v88];
      v89 = &v84[v88];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v89, 1, v34))
      {
        v90 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v157, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        v159(v157, v89, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v157, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
    }
    a3 = v158;
    v91 = v35[9];
    v92 = *(void **)&v155[v91];
    *(_QWORD *)&a1[v91] = v92;
    v93 = v35[10];
    v94 = &a1[v93];
    v95 = &v155[v93];
    v96 = *((_QWORD *)v95 + 1);
    *(_QWORD *)v94 = *(_QWORD *)v95;
    *((_QWORD *)v94 + 1) = v96;
    v97 = v92;
    swift_bridgeObjectRetain();
    v38 = 1;
  }
  else
  {
    v37 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain(v37);
    v38 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v38);
  v98 = a3[5];
  v99 = (uint64_t *)&a1[v98];
  v100 = (uint64_t *)&a2[v98];
  v101 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
  {
    v102 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
    v103 = v99;
    v104 = v101;
    v105 = 1;
  }
  else
  {
    v106 = *v100;
    *v99 = *v100;
    swift_retain(v106);
    v103 = v99;
    v104 = v101;
    v105 = 0;
  }
  swift_storeEnumTagMultiPayload(v103, v104, v105);
  v107 = a3[6];
  v108 = (uint64_t *)&a1[v107];
  v109 = (uint64_t *)&a2[v107];
  v110 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v109, v110) == 1)
  {
    v111 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v108, v109, v111);
    v112 = v108;
    v113 = v110;
    v114 = 1;
  }
  else
  {
    v115 = *v109;
    *v108 = *v109;
    swift_retain(v115);
    v112 = v108;
    v113 = v110;
    v114 = 0;
  }
  swift_storeEnumTagMultiPayload(v112, v113, v114);
  v116 = a3[7];
  v117 = (uint64_t *)&a1[v116];
  v118 = (uint64_t *)&a2[v116];
  v119 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v118, v119) == 1)
  {
    v120 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v117, v118, v120);
    v121 = v117;
    v122 = v119;
    v123 = 1;
  }
  else
  {
    v124 = *v118;
    *v117 = *v118;
    swift_retain(v124);
    v121 = v117;
    v122 = v119;
    v123 = 0;
  }
  swift_storeEnumTagMultiPayload(v121, v122, v123);
  v125 = a3[8];
  v126 = &a1[v125];
  v127 = &a2[v125];
  v128 = *(_QWORD *)v127;
  v129 = v127[8];
  sub_10004C60C(*(_QWORD *)v127, v129);
  *(_QWORD *)v126 = v128;
  v126[8] = v129;
  v130 = a3[9];
  v131 = (uint64_t *)&a1[v130];
  v132 = (uint64_t *)&a2[v130];
  v133 = sub_10000B4C8(&qword_100549378);
  if (swift_getEnumCaseMultiPayload(v132, v133) == 1)
  {
    v134 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v131, v132, v134);
    v135 = 1;
  }
  else
  {
    v136 = *v132;
    *v131 = *v132;
    swift_retain(v136);
    v135 = 0;
  }
  swift_storeEnumTagMultiPayload(v131, v133, v135);
  v137 = a3[10];
  v138 = (uint64_t *)&a1[v137];
  v139 = (uint64_t *)&a2[v137];
  v140 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v139, v140) == 1)
  {
    v141 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v138, v139, v141);
    v142 = v138;
    v143 = v140;
    v144 = 1;
  }
  else
  {
    v145 = *v139;
    *v138 = *v139;
    swift_retain(v145);
    v142 = v138;
    v143 = v140;
    v144 = 0;
  }
  swift_storeEnumTagMultiPayload(v142, v143, v144);
  return a1;
}

_QWORD *sub_10004D30C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  unsigned int (*v27)(_QWORD *, uint64_t, int *);
  uint64_t v28;
  int *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void (*v66)(_QWORD *, _QWORD, uint64_t, int *);
  id v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  id v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v134;
  char *__srca;
  char *__src;
  char *v137;
  char *v138;
  uint64_t v139;
  _QWORD *__dst;
  uint64_t v141;
  int *v142;
  void *v143;
  char *v144;
  int *v145;
  void (*v146)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_100549340);
    v6 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v143 = (void *)v6;
      v145 = a3;
      v7 = type metadata accessor for Date(0);
      v139 = *(_QWORD *)(v7 - 8);
      v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v139 + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v141 = v7;
      v146 = (void (*)(char *, char *, uint64_t))v8;
      v8((_QWORD *)((char *)a1 + v10), (_QWORD *)((char *)a2 + v10), v7);
      v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v14 = v13[5];
      v15 = &v11[v14];
      v16 = &v12[v14];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v17 = v13[6];
      v18 = &v11[v17];
      v19 = &v12[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      v20 = v13[7];
      v21 = &v11[v20];
      v22 = &v12[v20];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v142 = v9;
      v23 = v9[7];
      __dst = (_QWORD *)((char *)a1 + v23);
      v24 = (_QWORD *)((char *)a2 + v23);
      v25 = (int *)type metadata accessor for WidgetMusicItem(0);
      v26 = *((_QWORD *)v25 - 1);
      v27 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v26 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27(v24, 1, v25))
      {
        v28 = sub_10000B4C8(&qword_100548310);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        v29 = v142;
        v6 = (uint64_t)v143;
        v30 = v7;
        v31 = v146;
      }
      else
      {
        *__dst = *v24;
        __dst[1] = v24[1];
        __dst[2] = v24[2];
        __dst[3] = v24[3];
        __dst[4] = v24[4];
        __dst[5] = v24[5];
        v34 = v25[7];
        __srca = (char *)v24 + v34;
        v137 = (char *)__dst + v34;
        v35 = type metadata accessor for URL(0);
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36(v137, __srca, v35);
        v37 = v25[8];
        v38 = (_QWORD *)((char *)__dst + v37);
        v39 = (_QWORD *)((char *)v24 + v37);
        *v38 = *v39;
        v38[1] = v39[1];
        v40 = v25[9];
        v41 = (_QWORD *)((char *)__dst + v40);
        v42 = (_QWORD *)((char *)v24 + v40);
        *v41 = *v42;
        v41[1] = v42[1];
        v43 = v25[10];
        v44 = (_QWORD *)((char *)__dst + v43);
        v45 = (_QWORD *)((char *)v24 + v43);
        *v44 = *v45;
        v44[1] = v45[1];
        v46 = v25[11];
        v47 = (_QWORD *)((char *)__dst + v46);
        v48 = (_QWORD *)((char *)v24 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        v49 = v25[12];
        v50 = (_QWORD *)((char *)__dst + v49);
        v51 = (_QWORD *)((char *)v24 + v49);
        *v50 = *v51;
        v50[1] = v51[1];
        v52 = v25[13];
        v53 = (_QWORD *)((char *)__dst + v52);
        v54 = (_QWORD *)((char *)v24 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        *(_QWORD *)((char *)__dst + v25[14]) = *(_QWORD *)((char *)v24 + v25[14]);
        *((_BYTE *)__dst + v25[15]) = *((_BYTE *)v24 + v25[15]);
        v55 = v25[16];
        v138 = (char *)__dst + v55;
        v56 = (char *)v24 + v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57 = sub_10000B4C8(&qword_100547B50);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 10, v57))
        {
          v59 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(v138, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          v30 = v141;
          v29 = v142;
          v31 = v146;
        }
        else
        {
          v60 = type metadata accessor for Playlist.Variant(0);
          v61 = *(_QWORD *)(v60 - 8);
          v134 = v60;
          __src = v56;
          v62 = (*(uint64_t (**)(char *, uint64_t))(v61 + 48))(v56, 1);
          v31 = v146;
          if (v62)
          {
            v63 = sub_10000B4C8(&qword_100548358);
            memcpy(v138, __src, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v138, __src, v134);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v138, 0, 1, v134);
          }
          v29 = v142;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v138, 0, 10, v57);
          v30 = v141;
        }
        *(_QWORD *)((char *)__dst + v25[17]) = *(_QWORD *)((char *)v24 + v25[17]);
        v64 = v25[18];
        v65 = *(void **)((char *)v24 + v64);
        *(_QWORD *)((char *)__dst + v64) = v65;
        *(_QWORD *)((char *)__dst + v25[19]) = *(_QWORD *)((char *)v24 + v25[19]);
        v66 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v26 + 56);
        v67 = v65;
        swift_bridgeObjectRetain();
        v66(__dst, 0, 1, v25);
        v6 = (uint64_t)v143;
      }
      v68 = v29[8];
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      v71 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v72 = *(_QWORD *)(v71 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
      {
        v73 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        v31(v69, v70, v30);
        v31(&v69[*(int *)(v71 + 20)], &v70[*(int *)(v71 + 20)], v30);
        v74 = *(int *)(v71 + 24);
        v144 = &v69[v74];
        v75 = &v70[v74];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v75, 1, v30))
        {
          v76 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v144, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          v146(v144, v75, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v144, 0, 1, v30);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
      }
      a3 = v145;
      v77 = v29[9];
      v78 = *(void **)((char *)a2 + v77);
      *(_QWORD *)((char *)a1 + v77) = v78;
      v79 = v29[10];
      v80 = (_QWORD *)((char *)a1 + v79);
      v81 = (_QWORD *)((char *)a2 + v79);
      *v80 = *v81;
      v80[1] = v81[1];
      v82 = v78;
      swift_bridgeObjectRetain();
      v33 = 1;
    }
    else
    {
      v32 = *a2;
      *a1 = *a2;
      swift_retain(v32);
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v33);
    v83 = a3[5];
    v84 = (_QWORD *)((char *)a1 + v83);
    v85 = (_QWORD *)((char *)a2 + v83);
    sub_100011694((uint64_t)a1 + v83, &qword_100547EE0);
    v86 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v85, v86) == 1)
    {
      v87 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v84, v85, v87);
      v88 = v84;
      v89 = v86;
      v90 = 1;
    }
    else
    {
      v91 = *v85;
      *v84 = *v85;
      swift_retain(v91);
      v88 = v84;
      v89 = v86;
      v90 = 0;
    }
    swift_storeEnumTagMultiPayload(v88, v89, v90);
    v92 = a3[6];
    v93 = (_QWORD *)((char *)a1 + v92);
    v94 = (_QWORD *)((char *)a2 + v92);
    sub_100011694((uint64_t)a1 + v92, &qword_100548908);
    v95 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v94, v95) == 1)
    {
      v96 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v93, v94, v96);
      v97 = v93;
      v98 = v95;
      v99 = 1;
    }
    else
    {
      v100 = *v94;
      *v93 = *v94;
      swift_retain(v100);
      v97 = v93;
      v98 = v95;
      v99 = 0;
    }
    swift_storeEnumTagMultiPayload(v97, v98, v99);
    v101 = a3[7];
    v102 = (_QWORD *)((char *)a1 + v101);
    v103 = (_QWORD *)((char *)a2 + v101);
    sub_100011694((uint64_t)a1 + v101, &qword_100548900);
    v104 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v103, v104) == 1)
    {
      v105 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v102, v103, v105);
      v106 = v102;
      v107 = v104;
      v108 = 1;
    }
    else
    {
      v109 = *v103;
      *v102 = *v103;
      swift_retain(v109);
      v106 = v102;
      v107 = v104;
      v108 = 0;
    }
    swift_storeEnumTagMultiPayload(v106, v107, v108);
  }
  v110 = a3[8];
  v111 = (char *)a1 + v110;
  v112 = (char *)a2 + v110;
  v113 = *(_QWORD *)v112;
  v114 = v112[8];
  sub_10004C60C(*(_QWORD *)v112, v114);
  v115 = *(_QWORD *)v111;
  v116 = v111[8];
  *(_QWORD *)v111 = v113;
  v111[8] = v114;
  sub_10004CAC0(v115, v116);
  if (a1 != a2)
  {
    v117 = a3[9];
    v118 = (_QWORD *)((char *)a1 + v117);
    v119 = (_QWORD *)((char *)a2 + v117);
    sub_100011694((uint64_t)a1 + v117, &qword_100549378);
    v120 = sub_10000B4C8(&qword_100549378);
    if (swift_getEnumCaseMultiPayload(v119, v120) == 1)
    {
      v121 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v118, v119, v121);
      v122 = 1;
    }
    else
    {
      v123 = *v119;
      *v118 = *v119;
      swift_retain(v123);
      v122 = 0;
    }
    swift_storeEnumTagMultiPayload(v118, v120, v122);
    v124 = a3[10];
    v125 = (_QWORD *)((char *)a1 + v124);
    v126 = (_QWORD *)((char *)a2 + v124);
    sub_100011694((uint64_t)a1 + v124, &qword_1005486F8);
    v127 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v126, v127) == 1)
    {
      v128 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v125, v126, v128);
      v129 = v125;
      v130 = v127;
      v131 = 1;
    }
    else
    {
      v132 = *v126;
      *v125 = *v126;
      swift_retain(v132);
      v129 = v125;
      v130 = v127;
      v131 = 0;
    }
    swift_storeEnumTagMultiPayload(v129, v130, v131);
  }
  return a1;
}

char *sub_10004DC24(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, void *);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *__dst;
  uint64_t v81;
  void (*v82)(char *, char *, void *);
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char *v86;

  v6 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, void *))(v8 + 32);
    v9(a1, a2, (void *)v7);
    v10 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v11 = *(int *)(v10 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v85 = (void *)v7;
    v14 = v7;
    v15 = (int *)v10;
    v82 = v9;
    v9(&a1[v11], &a2[v11], (void *)v14);
    v16 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    *(_OWORD *)&v12[v16[5]] = *(_OWORD *)&v13[v16[5]];
    *(_OWORD *)&v12[v16[6]] = *(_OWORD *)&v13[v16[6]];
    *(_OWORD *)&v12[v16[7]] = *(_OWORD *)&v13[v16[7]];
    *(_QWORD *)&v12[v16[8]] = *(_QWORD *)&v13[v16[8]];
    a1[v15[6]] = a2[v15[6]];
    v17 = v15[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = (int *)type metadata accessor for WidgetMusicItem(0);
    v21 = *((_QWORD *)v20 - 1);
    v83 = v8;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_10000B4C8(&qword_100548310);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v23 = v85;
    }
    else
    {
      v81 = v21;
      v84 = v6;
      v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      v25 = v20[7];
      v26 = &v18[v25];
      v27 = &v19[v25];
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
      *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
      *(_OWORD *)&v18[v20[10]] = *(_OWORD *)&v19[v20[10]];
      *(_OWORD *)&v18[v20[11]] = *(_OWORD *)&v19[v20[11]];
      *(_OWORD *)&v18[v20[12]] = *(_OWORD *)&v19[v20[12]];
      *(_OWORD *)&v18[v20[13]] = *(_OWORD *)&v19[v20[13]];
      *(_QWORD *)&v18[v20[14]] = *(_QWORD *)&v19[v20[14]];
      v18[v20[15]] = v19[v20[15]];
      v29 = v20[16];
      __dst = &v18[v29];
      v30 = &v19[v29];
      v31 = sub_10000B4C8(&qword_100547B50);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 10, v31))
      {
        v33 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v6 = v84;
        v23 = v85;
      }
      else
      {
        v78 = v31;
        v79 = v32;
        v34 = type metadata accessor for Playlist.Variant(0);
        v77 = *(_QWORD *)(v34 - 8);
        v35 = v34;
        v23 = v85;
        if ((*(unsigned int (**)(char *, uint64_t))(v77 + 48))(v30, 1))
        {
          v36 = sub_10000B4C8(&qword_100548358);
          v37 = __dst;
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v38 = v35;
          v37 = __dst;
          (*(void (**)(void))(v77 + 32))();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v38);
        }
        v6 = v84;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v37, 0, 10, v78);
      }
      *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
      *(_QWORD *)&v18[v20[18]] = *(_QWORD *)&v19[v20[18]];
      *(_QWORD *)&v18[v20[19]] = *(_QWORD *)&v19[v20[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v81 + 56))(v18, 0, 1, v20);
    }
    v39 = v15[8];
    v40 = &a1[v39];
    v41 = &a2[v39];
    v42 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v82(v40, v41, v23);
      v82(&v40[*(int *)(v42 + 20)], &v41[*(int *)(v42 + 20)], v23);
      v45 = *(int *)(v42 + 24);
      v86 = &v40[v45];
      v46 = &v41[v45];
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v83 + 48))(v46, 1, v23))
      {
        v47 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v86, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v82(v86, v46, v23);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v83 + 56))(v86, 0, 1, v23);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    *(_QWORD *)&a1[v15[9]] = *(_QWORD *)&a2[v15[9]];
    *(_OWORD *)&a1[v15[10]] = *(_OWORD *)&a2[v15[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v48 = a3[5];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
  {
    v52 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v49, v50, v52);
    swift_storeEnumTagMultiPayload(v49, v51, 1);
  }
  else
  {
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  v53 = a3[6];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
  {
    v57 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v54, v55, v57);
    swift_storeEnumTagMultiPayload(v54, v56, 1);
  }
  else
  {
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  v58 = a3[7];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v60, v61) == 1)
  {
    v62 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v59, v60, v62);
    swift_storeEnumTagMultiPayload(v59, v61, 1);
  }
  else
  {
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  v63 = a3[8];
  v64 = a3[9];
  v65 = &a1[v63];
  v66 = &a2[v63];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v65[8] = v66[8];
  v67 = &a1[v64];
  v68 = &a2[v64];
  v69 = sub_10000B4C8(&qword_100549378);
  if (swift_getEnumCaseMultiPayload(v68, v69) == 1)
  {
    v70 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v67, v68, v70);
    swift_storeEnumTagMultiPayload(v67, v69, 1);
  }
  else
  {
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  v71 = a3[10];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v73, v74) == 1)
  {
    v75 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v72, v73, v75);
    swift_storeEnumTagMultiPayload(v72, v74, 1);
  }
  else
  {
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  return a1;
}

char *sub_10004E360(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, void *);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *__dst;
  void (*v83)(char *, char *, void *);
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_100549340);
    v6 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(char *, char *, void *))(v8 + 32);
      v9(a1, a2, (void *)v7);
      v10 = type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v11 = *(int *)(v10 + 20);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v86 = (void *)v7;
      v14 = v7;
      v15 = (int *)v10;
      v83 = v9;
      v9(&a1[v11], &a2[v11], (void *)v14);
      v16 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      *(_OWORD *)&v12[v16[5]] = *(_OWORD *)&v13[v16[5]];
      *(_OWORD *)&v12[v16[6]] = *(_OWORD *)&v13[v16[6]];
      *(_OWORD *)&v12[v16[7]] = *(_OWORD *)&v13[v16[7]];
      *(_QWORD *)&v12[v16[8]] = *(_QWORD *)&v13[v16[8]];
      a1[v15[6]] = a2[v15[6]];
      v17 = v15[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = (int *)type metadata accessor for WidgetMusicItem(0);
      v21 = *((_QWORD *)v20 - 1);
      v84 = v8;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10000B4C8(&qword_100548310);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v23 = v86;
      }
      else
      {
        v81 = v21;
        v85 = v6;
        v24 = *((_OWORD *)v19 + 1);
        *(_OWORD *)v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v24;
        *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
        v25 = v20[7];
        v26 = &v18[v25];
        v27 = &v19[v25];
        v28 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
        *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
        *(_OWORD *)&v18[v20[10]] = *(_OWORD *)&v19[v20[10]];
        *(_OWORD *)&v18[v20[11]] = *(_OWORD *)&v19[v20[11]];
        *(_OWORD *)&v18[v20[12]] = *(_OWORD *)&v19[v20[12]];
        *(_OWORD *)&v18[v20[13]] = *(_OWORD *)&v19[v20[13]];
        *(_QWORD *)&v18[v20[14]] = *(_QWORD *)&v19[v20[14]];
        v18[v20[15]] = v19[v20[15]];
        v29 = v20[16];
        __dst = &v18[v29];
        v30 = &v19[v29];
        v31 = sub_10000B4C8(&qword_100547B50);
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 10, v31))
        {
          v33 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          v6 = v85;
          v23 = v86;
        }
        else
        {
          v79 = v32;
          v80 = v31;
          v34 = type metadata accessor for Playlist.Variant(0);
          v78 = *(_QWORD *)(v34 - 8);
          v23 = v86;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v30, 1, v34))
          {
            v35 = sub_10000B4C8(&qword_100548358);
            v36 = __dst;
            memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v78 + 32))(__dst, v30, v34);
            v36 = __dst;
            (*(void (**)(void))(v78 + 56))();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v36, 0, 10, v80);
          v6 = v85;
        }
        *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
        *(_QWORD *)&v18[v20[18]] = *(_QWORD *)&v19[v20[18]];
        *(_QWORD *)&v18[v20[19]] = *(_QWORD *)&v19[v20[19]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v81 + 56))(v18, 0, 1, v20);
      }
      v37 = v15[8];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v83(v38, v39, v23);
        v83(&v38[*(int *)(v40 + 20)], &v39[*(int *)(v40 + 20)], v23);
        v43 = *(int *)(v40 + 24);
        v87 = &v38[v43];
        v44 = &v39[v43];
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v84 + 48))(v44, 1, v23))
        {
          v45 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v87, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          v83(v87, v44, v23);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v84 + 56))(v87, 0, 1, v23);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      *(_QWORD *)&a1[v15[9]] = *(_QWORD *)&a2[v15[9]];
      *(_OWORD *)&a1[v15[10]] = *(_OWORD *)&a2[v15[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v46 = a3[5];
    v47 = &a1[v46];
    v48 = &a2[v46];
    sub_100011694((uint64_t)&a1[v46], &qword_100547EE0);
    v49 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
    {
      v50 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
      swift_storeEnumTagMultiPayload(v47, v49, 1);
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    v51 = a3[6];
    v52 = &a1[v51];
    v53 = &a2[v51];
    sub_100011694((uint64_t)&a1[v51], &qword_100548908);
    v54 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
    {
      v55 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v52, v53, v55);
      swift_storeEnumTagMultiPayload(v52, v54, 1);
    }
    else
    {
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    v56 = a3[7];
    v57 = &a1[v56];
    v58 = &a2[v56];
    sub_100011694((uint64_t)&a1[v56], &qword_100548900);
    v59 = sub_10000B4C8(&qword_100548900);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v57, v58, v60);
      swift_storeEnumTagMultiPayload(v57, v59, 1);
    }
    else
    {
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
  }
  v61 = a3[8];
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = *(_QWORD *)v63;
  LOBYTE(v63) = v63[8];
  v65 = *(_QWORD *)v62;
  v66 = v62[8];
  *(_QWORD *)v62 = v64;
  v62[8] = (char)v63;
  sub_10004CAC0(v65, v66);
  if (a1 != a2)
  {
    v67 = a3[9];
    v68 = &a1[v67];
    v69 = &a2[v67];
    sub_100011694((uint64_t)&a1[v67], &qword_100549378);
    v70 = sub_10000B4C8(&qword_100549378);
    if (swift_getEnumCaseMultiPayload(v69, v70) == 1)
    {
      v71 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v68, v69, v71);
      swift_storeEnumTagMultiPayload(v68, v70, 1);
    }
    else
    {
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    v72 = a3[10];
    v73 = &a1[v72];
    v74 = &a2[v72];
    sub_100011694((uint64_t)&a1[v72], &qword_1005486F8);
    v75 = sub_10000B4C8(&qword_1005486F8);
    if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
    {
      v76 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v73, v74, v76);
      swift_storeEnumTagMultiPayload(v73, v75, 1);
    }
    else
    {
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004EB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004EB24);
}

uint64_t sub_10004EB24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v6 = sub_10000B4C8(&qword_100549390);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_10000B4C8(&qword_1005484F8);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = sub_10000B4C8(&qword_100548918);
  v10 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v13;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v14 = sub_10000B4C8(&qword_100548910);
  v10 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v14;
    v12 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 254)
  {
    v16 = sub_10000B4C8(&qword_100549438);
    v10 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v16;
      v12 = a3[9];
    }
    else
    {
      v11 = sub_10000B4C8(&qword_100548738);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[10];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v15 = *(unsigned __int8 *)(a1 + a3[8] + 8);
  if (v15 > 1)
    return (v15 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_10004EC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004EC7C);
}

uint64_t sub_10004EC7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v8 = sub_10000B4C8(&qword_100549390);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_1005484F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_10000B4C8(&qword_100548918);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        result = sub_10000B4C8(&qword_100548910);
        v14 = *(_QWORD *)(result - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = result;
          v15 = a4[7];
        }
        else
        {
          if (a3 == 254)
          {
            *(_BYTE *)(a1 + a4[8] + 8) = -(char)a2;
            return result;
          }
          v18 = sub_10000B4C8(&qword_100549438);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[9];
          }
          else
          {
            v10 = sub_10000B4C8(&qword_100548738);
            v14 = *(_QWORD *)(v10 - 8);
            v15 = a4[10];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10004EDC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[7];

  sub_10002E8E4(319, (unint64_t *)&unk_100549400, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v14[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v14[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10002E8E4(319, &qword_100548988, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v14[3] = *(_QWORD *)(v8 - 8) + 64;
          v14[4] = "\t";
          sub_10002E8E4(319, (unint64_t *)&unk_1005494A8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v11 <= 0x3F)
          {
            v14[5] = *(_QWORD *)(v10 - 8) + 64;
            sub_10002E8E4(319, (unint64_t *)&unk_1005487B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
            if (v13 <= 0x3F)
            {
              v14[6] = *(_QWORD *)(v12 - 8) + 64;
              swift_initStructMetadata(a1, 256, 7, v14, a1 + 16);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10004EF54()
{
  return sub_100056068(&qword_1005494F0, &qword_1005494F8, (uint64_t (*)(void))sub_1000491AC, (uint64_t (*)(void))sub_10004926C);
}

uint64_t sub_10004EF88(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10048256C, 1);
}

uint64_t sub_10004EF98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482544, 1);
}

uint64_t type metadata accessor for BackgroundModifier(uint64_t a1)
{
  return sub_10001133C(a1, qword_100549850, (uint64_t)&nominal type descriptor for BackgroundModifier);
}

uint64_t sub_10004EFBC()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10004EFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048FE4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10004F000()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  int *v11;
  char *v12;
  int *v13;
  _QWORD *v14;
  int *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = (int *)type metadata accessor for TopChartsWidgetContentView(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 56) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (_QWORD *)(v1 + v5);
  v8 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(v1 + v5, v8) == 1)
  {
    v38 = v6;
    v9 = type metadata accessor for Date(0);
    v37 = *(_QWORD *)(v9 - 8);
    v10 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v10(v1 + v5, v9);
    v11 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v12 = (char *)v7 + v11[5];
    v10((uint64_t)v12, v9);
    v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[7] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[8]]);
    v14 = (_QWORD *)((char *)v7 + v11[7]);
    v15 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v14, 1, v15))
    {
      v36 = v1;
      swift_bridgeObjectRelease(v14[1]);
      swift_bridgeObjectRelease(v14[3]);
      swift_bridgeObjectRelease(v14[5]);
      v16 = (char *)v14 + v15[7];
      v17 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[14]));
      v18 = (char *)v14 + v15[16];
      v19 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 10, v19))
      {
        v20 = type metadata accessor for Playlist.Variant(0);
        v34 = *(_QWORD *)(v20 - 8);
        v35 = v20;
        if (!(*(unsigned int (**)(char *, uint64_t))(v34 + 48))(v18, 1))
          (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[19]));
      v1 = v36;
    }
    v21 = (char *)v7 + v11[8];
    v22 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
    {
      v10((uint64_t)v21, v9);
      v10((uint64_t)&v21[*(int *)(v22 + 20)], v9);
      v23 = &v21[*(int *)(v22 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v23, 1, v9))
        v10((uint64_t)v23, v9);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v11[10] + 8));
    v6 = v38;
  }
  else
  {
    swift_release(*v7);
  }
  v24 = (_QWORD *)((char *)v7 + v2[5]);
  v25 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  }
  else
  {
    swift_release(*v24);
  }
  v27 = (_QWORD *)((char *)v7 + v2[6]);
  v28 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
  }
  else
  {
    swift_release(*v27);
  }
  v30 = (_QWORD *)((char *)v7 + v2[7]);
  v31 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    swift_release(*v30);
  }
  return swift_deallocObject(v1, v5 + v6, v4 | 7);
}

uint64_t sub_10004F41C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v9[2];
  uint64_t v10;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TopChartsWidgetContentView(0) - 8) + 80);
  v6 = *(_QWORD *)(v2 + 48);
  v7 = *(_OWORD *)(v2 + 32);
  v9[0] = *(_OWORD *)(v2 + 16);
  v9[1] = v7;
  v10 = v6;
  return sub_1000453EC(a1, (uint64_t *)v9, v2 + ((v5 + 56) & ~v5), a2);
}

uint64_t sub_10004F488()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  int *v11;
  char *v12;
  int *v13;
  _QWORD *v14;
  int *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = (int *)type metadata accessor for TopChartsWidgetContentView(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 64) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (_QWORD *)(v1 + v5);
  v8 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(v1 + v5, v8) == 1)
  {
    v38 = v6;
    v9 = type metadata accessor for Date(0);
    v37 = *(_QWORD *)(v9 - 8);
    v10 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v10(v1 + v5, v9);
    v11 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v12 = (char *)v7 + v11[5];
    v10((uint64_t)v12, v9);
    v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[7] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[8]]);
    v14 = (_QWORD *)((char *)v7 + v11[7]);
    v15 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v14, 1, v15))
    {
      v36 = v1;
      swift_bridgeObjectRelease(v14[1]);
      swift_bridgeObjectRelease(v14[3]);
      swift_bridgeObjectRelease(v14[5]);
      v16 = (char *)v14 + v15[7];
      v17 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[12] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[13] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[14]));
      v18 = (char *)v14 + v15[16];
      v19 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 10, v19))
      {
        v20 = type metadata accessor for Playlist.Variant(0);
        v34 = *(_QWORD *)(v20 - 8);
        v35 = v20;
        if (!(*(unsigned int (**)(char *, uint64_t))(v34 + 48))(v18, 1))
          (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v14 + v15[19]));
      v1 = v36;
    }
    v21 = (char *)v7 + v11[8];
    v22 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
    {
      v10((uint64_t)v21, v9);
      v10((uint64_t)&v21[*(int *)(v22 + 20)], v9);
      v23 = &v21[*(int *)(v22 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v23, 1, v9))
        v10((uint64_t)v23, v9);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v11[10] + 8));
    v6 = v38;
  }
  else
  {
    swift_release(*v7);
  }
  v24 = (_QWORD *)((char *)v7 + v2[5]);
  v25 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  }
  else
  {
    swift_release(*v24);
  }
  v27 = (_QWORD *)((char *)v7 + v2[6]);
  v28 = sub_10000B4C8(&qword_100548900);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
  }
  else
  {
    swift_release(*v27);
  }
  v30 = (_QWORD *)((char *)v7 + v2[7]);
  v31 = sub_10000B4C8(&qword_1005486F8);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    swift_release(*v30);
  }
  return swift_deallocObject(v1, v5 + v6, v4 | 7);
}

uint64_t sub_10004F8A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD v10[2];
  uint64_t v11;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TopChartsWidgetContentView(0) - 8) + 80);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 56);
  v8 = *(_OWORD *)(v2 + 40);
  v10[0] = *(_OWORD *)(v2 + 24);
  v10[1] = v8;
  v11 = v7;
  return sub_100045588(a1, v6, (uint64_t *)v10, v2 + ((v5 + 64) & ~v5), a2);
}

unint64_t sub_10004F918()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549590;
  if (!qword_100549590)
  {
    v1 = sub_100011650(&qword_100549588);
    v2[0] = sub_100012324(&qword_100549598, &qword_1005495A0, (const char *)&protocol conformance descriptor for Link<A>);
    v2[1] = sub_10001254C((unint64_t *)&qword_100548850, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549590);
  }
  return result;
}

uint64_t sub_10004F9B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100045AFC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t _s12MusicWidgets12SongCellViewVMa_0(uint64_t a1)
{
  return sub_10001133C(a1, qword_1005497B8, (uint64_t)&_s12MusicWidgets12SongCellViewVMn_0);
}

Swift::Int sub_10004F9D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _QWORD v15[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000B4C8(&qword_100549968);
    v2 = static _SetStorage.allocate(capacity:)(v1);
    v3 = 0;
    v4 = v2 + 56;
    while (1)
    {
      Hasher.init(_seed:)(v15);
      NSFileManager.Failure.hash(into:)();
      result = Hasher._finalize()();
      v6 = -1 << *(_BYTE *)(v2 + 32);
      v7 = result & ~v6;
      v8 = v7 >> 6;
      v9 = *(_QWORD *)(v4 + 8 * (v7 >> 6));
      v10 = 1 << v7;
      if (((1 << v7) & v9) != 0)
      {
        result = static MPCPlayerCommandRequest.isAvailable(in:)();
        if ((result & 1) != 0)
          goto LABEL_3;
        v11 = ~v6;
        while (1)
        {
          v7 = (v7 + 1) & v11;
          v8 = v7 >> 6;
          v9 = *(_QWORD *)(v4 + 8 * (v7 >> 6));
          v10 = 1 << v7;
          if ((v9 & (1 << v7)) == 0)
            break;
          result = static MPCPlayerCommandRequest.isAvailable(in:)();
          if ((result & 1) != 0)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v4 + 8 * v8) = v10 | v9;
      v12 = *(_QWORD *)(v2 + 16);
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v2 + 16) = v14;
LABEL_3:
      if (++v3 == v1)
        return v2;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_10004FAE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005495F8;
  if (!qword_1005495F8)
  {
    v1 = sub_100011650(&qword_1005495D0);
    v2[0] = sub_10004FB6C();
    v2[1] = sub_100012324(&qword_100549638, &qword_1005495F0, (const char *)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005495F8);
  }
  return result;
}

unint64_t sub_10004FB6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549600;
  if (!qword_100549600)
  {
    v1 = sub_100011650(&qword_1005495C8);
    v2[0] = sub_100056068(&qword_100549608, &qword_1005495C0, (uint64_t (*)(void))sub_10004FC10, (uint64_t (*)(void))sub_10004FC94);
    v2[1] = sub_10001254C(&qword_100549630, type metadata accessor for BackgroundModifier, (uint64_t)&unk_100425FE4);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549600);
  }
  return result;
}

unint64_t sub_10004FC10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549610;
  if (!qword_100549610)
  {
    v1 = sub_100011650(&qword_100549618);
    v2[0] = sub_10004FC94();
    v2[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549610);
  }
  return result;
}

unint64_t sub_10004FC94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549620;
  if (!qword_100549620)
  {
    v1 = sub_100011650(&qword_1005495B8);
    v2[0] = sub_100012324(&qword_100549628, &qword_1005495B0, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549620);
  }
  return result;
}

uint64_t sub_10004FD18()
{
  return sub_10002F800(&qword_1005496C0, &qword_1005496C8, (uint64_t (*)(void))sub_10004FD3C, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_10004FD3C()
{
  unint64_t result;

  result = qword_1005496D0;
  if (!qword_1005496D0)
  {
    result = swift_getWitnessTable("-B\r", &type metadata for NoContentText);
    atomic_store(result, (unint64_t *)&qword_1005496D0);
  }
  return result;
}

uint64_t sub_10004FD80@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10004FDB0(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_10004FDDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005496E8;
  if (!qword_1005496E8)
  {
    v1 = sub_100011650(&qword_100549670);
    v2[0] = sub_100012324(&qword_1005496F0, &qword_100549668, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = sub_100012324(&qword_100548AE8, &qword_100548AF0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005496E8);
  }
  return result;
}

uint64_t sub_10004FE78()
{
  return EnvironmentValues.textCase.getter();
}

unint64_t sub_10004FE9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549728;
  if (!qword_100549728)
  {
    v1 = sub_100011650(&qword_100549708);
    v2[0] = sub_10004FF20();
    v2[1] = sub_100012324(&qword_100548B08, &qword_100548A18, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549728);
  }
  return result;
}

unint64_t sub_10004FF20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549730;
  if (!qword_100549730)
  {
    v1 = sub_100011650(&qword_100549700);
    v2[0] = &protocol witness table for Text;
    v2[1] = sub_100012324(&qword_100548AE0, &qword_100548A40, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549730);
  }
  return result;
}

uint64_t sub_10004FFA4(uint64_t a1)
{
  sub_10002EBA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004FFE0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_10001DA20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_10005001C(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100050044(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v10[0] = sub_100011650(a3);
    v10[1] = sub_100012324(a4, a3, (const char *)&protocol conformance descriptor for Grid<A>);
    v9[0] = swift_getOpaqueTypeConformance2(v10, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v9[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100050108(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void (*v53)(uint64_t *, _QWORD, uint64_t, int *);
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void (*v126)(_QWORD *, _QWORD, uint64_t, int *);
  id v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, char *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  unsigned int (*__src)(uint64_t *, uint64_t, int *);
  char *__srcc;
  void *__srcd;
  char *__srca;
  char *__srcb;
  int *v171;
  int *v172;
  char *__dst;
  _BYTE *__dsta;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for WidgetMusicItem(0);
    v8 = *((_QWORD *)v7 - 1);
    __src = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48);
    if (__src(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100548310);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v164 = v8;
      v171 = v6;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      v14 = v7[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for URL(0);
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      v19 = v7[8];
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      v23 = v7[9];
      v24 = (uint64_t *)((char *)a1 + v23);
      v25 = (uint64_t *)((char *)a2 + v23);
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      v27 = v7[10];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = v7[11];
      v32 = (uint64_t *)((char *)a1 + v31);
      v33 = (uint64_t *)((char *)a2 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      v35 = v7[12];
      v36 = (uint64_t *)((char *)a1 + v35);
      v37 = (uint64_t *)((char *)a2 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v39 = v7[13];
      v40 = (uint64_t *)((char *)a1 + v39);
      v41 = (uint64_t *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
      v43 = v7[16];
      __dst = (char *)a1 + v43;
      v44 = (char *)a2 + v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_10000B4C8(&qword_100547B50);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 10, v45))
      {
        v47 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v6 = v171;
        v8 = v164;
      }
      else
      {
        v48 = type metadata accessor for Playlist.Variant(0);
        v49 = *(_QWORD *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v44, 1, v48))
        {
          v50 = sub_10000B4C8(&qword_100548358);
          memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 16))(__dst, v44, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
        }
        v6 = v171;
        v8 = v164;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 10, v45);
      }
      *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
      v51 = v7[18];
      v52 = *(void **)((char *)a2 + v51);
      *(uint64_t *)((char *)a1 + v51) = (uint64_t)v52;
      *(uint64_t *)((char *)a1 + v7[19]) = *(uint64_t *)((char *)a2 + v7[19]);
      v53 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      v54 = v52;
      swift_bridgeObjectRetain();
      v53(a1, 0, 1, v7);
    }
    v55 = v6[6];
    *(uint64_t *)((char *)a1 + v6[5]) = *(uint64_t *)((char *)a2 + v6[5]);
    v56 = (uint64_t *)((char *)a1 + v55);
    v57 = (uint64_t *)((char *)a2 + v55);
    v58 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload((char *)v57, v58) == 1)
    {
      v162 = v58;
      v165 = v8;
      v172 = v6;
      v59 = type metadata accessor for Date(0);
      v159 = *(_QWORD *)(v59 - 8);
      v60 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
      v60((char *)v56, (char *)v57, v59);
      v61 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v62 = v61[5];
      __dsta = v57;
      v63 = (char *)v56 + v62;
      v64 = &__dsta[v62];
      v160 = v59;
      v158 = v60;
      v60((char *)v56 + v62, &__dsta[v62], v59);
      v65 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v66 = v65[5];
      v67 = &v63[v66];
      v68 = &v64[v66];
      v70 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      *(_QWORD *)v67 = v70;
      *((_QWORD *)v67 + 1) = v69;
      v71 = v65[6];
      v72 = &v63[v71];
      v73 = &v64[v71];
      v74 = *((_QWORD *)v73 + 1);
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *((_QWORD *)v72 + 1) = v74;
      v75 = v65[7];
      v76 = &v63[v75];
      v77 = &v64[v75];
      v78 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      *(_QWORD *)&v63[v65[8]] = *(_QWORD *)&v64[v65[8]];
      v79 = __dsta;
      *((_BYTE *)v56 + v61[6]) = __dsta[v61[6]];
      v161 = v61;
      v80 = v61[7];
      v163 = v56;
      v81 = (_QWORD *)((char *)v56 + v80);
      v82 = &__dsta[v80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__src(v82, 1, v7))
      {
        v83 = sub_10000B4C8(&qword_100548310);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        v58 = v162;
        v56 = v163;
      }
      else
      {
        v86 = v82[1];
        *v81 = *v82;
        v81[1] = v86;
        v87 = v82[3];
        v81[2] = v82[2];
        v81[3] = v87;
        v88 = v82[5];
        v81[4] = v82[4];
        v81[5] = v88;
        v89 = v7[7];
        v90 = (char *)v81 + v89;
        __srcc = (char *)v82 + v89;
        v91 = type metadata accessor for URL(0);
        v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v155(v90, __srcc, v91);
        v92 = v7[8];
        v93 = (_QWORD *)((char *)v81 + v92);
        v94 = (_QWORD *)((char *)v82 + v92);
        v95 = v94[1];
        *v93 = *v94;
        v93[1] = v95;
        v96 = v7[9];
        v97 = (_QWORD *)((char *)v81 + v96);
        v98 = (_QWORD *)((char *)v82 + v96);
        __srcd = (void *)v98[1];
        *v97 = *v98;
        v97[1] = __srcd;
        v99 = v7[10];
        v100 = (_QWORD *)((char *)v81 + v99);
        v101 = (_QWORD *)((char *)v82 + v99);
        v156 = v101[1];
        *v100 = *v101;
        v100[1] = v156;
        v102 = v7[11];
        v103 = (_QWORD *)((char *)v81 + v102);
        v104 = (_QWORD *)((char *)v82 + v102);
        v105 = v104[1];
        *v103 = *v104;
        v103[1] = v105;
        v106 = v7[12];
        v107 = (_QWORD *)((char *)v81 + v106);
        v108 = (_QWORD *)((char *)v82 + v106);
        v109 = v108[1];
        *v107 = *v108;
        v107[1] = v109;
        v110 = v7[13];
        v111 = (_QWORD *)((char *)v81 + v110);
        v112 = (_QWORD *)((char *)v82 + v110);
        v113 = v112[1];
        *v111 = *v112;
        v111[1] = v113;
        *(_QWORD *)((char *)v81 + v7[14]) = *(_QWORD *)((char *)v82 + v7[14]);
        *((_BYTE *)v81 + v7[15]) = *((_BYTE *)v82 + v7[15]);
        v114 = v7[16];
        v154 = (char *)v81 + v114;
        v115 = (char *)v82 + v114;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v116 = sub_10000B4C8(&qword_100547B50);
        v117 = *(_QWORD *)(v116 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 10, v116))
        {
          v118 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(v154, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
          v119 = v165;
        }
        else
        {
          v120 = type metadata accessor for Playlist.Variant(0);
          v121 = *(_QWORD *)(v120 - 8);
          __srca = v115;
          v157 = v120;
          v122 = (*(uint64_t (**)(char *, uint64_t))(v121 + 48))(v115, 1);
          v119 = v165;
          if (v122)
          {
            v123 = sub_10000B4C8(&qword_100548358);
            memcpy(v154, __srca, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v154, __srca, v157);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v154, 0, 1, v157);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v154, 0, 10, v116);
        }
        *(_QWORD *)((char *)v81 + v7[17]) = *(_QWORD *)((char *)v82 + v7[17]);
        v124 = v7[18];
        v125 = *(void **)((char *)v82 + v124);
        *(_QWORD *)((char *)v81 + v124) = v125;
        *(_QWORD *)((char *)v81 + v7[19]) = *(_QWORD *)((char *)v82 + v7[19]);
        v126 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v119 + 56);
        v127 = v125;
        swift_bridgeObjectRetain();
        v126(v81, 0, 1, v7);
        v58 = v162;
        v56 = v163;
        v61 = v161;
        v79 = __dsta;
      }
      v128 = v61[8];
      v129 = (char *)v56 + v128;
      v130 = &v79[v128];
      v131 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v132 = *(_QWORD *)(v131 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v130, 1, v131))
      {
        v133 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        v6 = v172;
      }
      else
      {
        v158(v129, v130, v160);
        v158(&v129[*(int *)(v131 + 20)], &v130[*(int *)(v131 + 20)], v160);
        v134 = *(int *)(v131 + 24);
        __srcb = &v129[v134];
        v135 = &v130[v134];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v135, 1, v160))
        {
          v136 = sub_10000B4C8(&qword_1005481F0);
          memcpy(__srcb, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
        }
        else
        {
          v158(__srcb, v135, v160);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(__srcb, 0, 1, v160);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
        v6 = v172;
        v56 = v163;
      }
      v137 = v61[9];
      v138 = *(void **)&__dsta[v137];
      *(_QWORD *)((char *)v56 + v137) = v138;
      v139 = v61[10];
      v140 = (_QWORD *)((char *)v56 + v139);
      v141 = &__dsta[v139];
      v142 = v141[1];
      *v140 = *v141;
      v140[1] = v142;
      v143 = v138;
      swift_bridgeObjectRetain();
      v85 = 1;
    }
    else
    {
      v84 = *v57;
      *v56 = *v57;
      swift_retain(v84);
      v85 = 0;
    }
    swift_storeEnumTagMultiPayload((char *)v56, v58, v85);
    v144 = v6[7];
    v145 = (uint64_t *)((char *)a1 + v144);
    v146 = (uint64_t *)((char *)a2 + v144);
    v147 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v146, v147) == 1)
    {
      v148 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v145, v146, v148);
      v149 = v145;
      v150 = v147;
      v151 = 1;
    }
    else
    {
      v152 = *v146;
      *v145 = *v146;
      swift_retain(v152);
      v149 = v145;
      v150 = v147;
      v151 = 0;
    }
    swift_storeEnumTagMultiPayload(v149, v150, v151);
  }
  return a1;
}

double sub_100050A40(char *a1, uint64_t a2)
{
  int *v4;
  unsigned int (*v5)(char *, uint64_t, int *);
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  int *v16;
  char *v17;
  int *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;

  v4 = (int *)type metadata accessor for WidgetMusicItem(0);
  v5 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48);
  if (!v5(a1, 1, v4))
  {
    swift_bridgeObjectRelease(*((_QWORD *)a1 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)a1 + 3));
    swift_bridgeObjectRelease(*((_QWORD *)a1 + 5));
    v6 = &a1[v4[7]];
    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[8] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[9] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[10] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[11] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[12] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[13] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[14]]);
    v8 = &a1[v4[16]];
    v9 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 10, v9))
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
        (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&a1[v4[19]]);
  }
  v12 = &a1[*(int *)(a2 + 24)];
  v13 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for Date(0);
    v33 = *(_QWORD *)(v14 - 8);
    v15 = *(void (**)(char *, uint64_t))(v33 + 8);
    v15(v12, v14);
    v16 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v17 = &v12[v16[5]];
    v15(v17, v14);
    v18 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[7] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v17[v18[8]]);
    v19 = &v12[v16[7]];
    if (!v5(v19, 1, v4))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 5));
      v20 = &v19[v4[7]];
      v21 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[9] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[10] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[11] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[12] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[13] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[14]]);
      v22 = &v19[v4[16]];
      v23 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 10, v23))
      {
        v24 = type metadata accessor for Playlist.Variant(0);
        v32 = *(_QWORD *)(v24 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v22, 1, v24))
          (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v24);
      }

      swift_bridgeObjectRelease(*(_QWORD *)&v19[v4[19]]);
    }
    v25 = &v12[v16[8]];
    v26 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
    {
      v15(v25, v14);
      v15(&v25[*(int *)(v26 + 20)], v14);
      v27 = &v25[*(int *)(v26 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v27, 1, v14))
        v15(v27, v14);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&v12[v16[10] + 8]);
  }
  else
  {
    swift_release(*(_QWORD *)v12);
  }
  v28 = &a1[*(int *)(a2 + 28)];
  v29 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload((char *)v28, v29) == 1)
  {
    v30 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))((char *)v28, v30);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v28).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100050EE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void (*v51)(_QWORD *, _QWORD, uint64_t, int *);
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, _QWORD, uint64_t, uint64_t);
  char *v120;
  uint64_t v121;
  void *v122;
  void (*v123)(_QWORD *, _QWORD, uint64_t, int *);
  id v124;
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  void (*v158)(char *, char *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  char *__dst;
  _QWORD *__dsta;
  uint64_t v165;
  uint64_t v166;
  unsigned int (*__src)(_QWORD *, uint64_t, int *);
  char *__srcb;
  char *__srca;
  int *v170;
  int *v171;
  char *v172;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  __src = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  if (__src(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v165 = v7;
    v170 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = v6[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = v6[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[9];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v6[10];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v6[11];
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v6[12];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v6[13];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v41 = v6[16];
    __dst = (char *)a1 + v41;
    v42 = (char *)a2 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_10000B4C8(&qword_100547B50);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 10, v43))
    {
      v45 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      a3 = v170;
      v7 = v165;
    }
    else
    {
      v46 = type metadata accessor for Playlist.Variant(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v42, 1, v46))
      {
        v48 = sub_10000B4C8(&qword_100548358);
        memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v42, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      a3 = v170;
      v7 = v165;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 10, v43);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v49 = v6[18];
    v50 = *(void **)((char *)a2 + v49);
    *(_QWORD *)((char *)a1 + v49) = v50;
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    v51 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56);
    v52 = v50;
    swift_bridgeObjectRetain();
    v51(a1, 0, 1, v6);
  }
  v53 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (_QWORD *)((char *)a2 + v53);
  v56 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload((char *)v55, v56) == 1)
  {
    v161 = v56;
    v166 = v7;
    v171 = a3;
    v57 = type metadata accessor for Date(0);
    v160 = *(_QWORD *)(v57 - 8);
    v58 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
    v58((char *)v54, (char *)v55, v57);
    v59 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v60 = v59[5];
    v61 = (char *)v54 + v60;
    v62 = (char *)v55 + v60;
    v158 = v58;
    v159 = v57;
    v58((char *)v54 + v60, (char *)v55 + v60, v57);
    v63 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v64 = v63[5];
    v65 = &v61[v64];
    v66 = &v62[v64];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = v68;
    *((_QWORD *)v65 + 1) = v67;
    v69 = v63[6];
    v70 = &v61[v69];
    v71 = &v62[v69];
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    v73 = v63[7];
    v74 = &v61[v73];
    v75 = &v62[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    *(_QWORD *)&v61[v63[8]] = *(_QWORD *)&v62[v63[8]];
    *((_BYTE *)v54 + v59[6]) = *((_BYTE *)v55 + v59[6]);
    v162 = v59;
    v77 = v59[7];
    v78 = (_QWORD *)((char *)v54 + v77);
    v79 = (_QWORD *)((char *)v55 + v77);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dsta = v54;
    if (__src(v79, 1, v6))
    {
      v80 = sub_10000B4C8(&qword_100548310);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      a3 = v171;
    }
    else
    {
      v83 = v79[1];
      *v78 = *v79;
      v78[1] = v83;
      v84 = v79[3];
      v78[2] = v79[2];
      v78[3] = v84;
      v85 = v79[5];
      v78[4] = v79[4];
      v78[5] = v85;
      v86 = v6[7];
      __srcb = (char *)v78 + v86;
      v156 = (char *)v79 + v86;
      v87 = type metadata accessor for URL(0);
      v153 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(__srcb, v156, v87);
      v88 = v6[8];
      v89 = (_QWORD *)((char *)v78 + v88);
      v90 = (_QWORD *)((char *)v79 + v88);
      v91 = v90[1];
      *v89 = *v90;
      v89[1] = v91;
      v92 = v6[9];
      v93 = (_QWORD *)((char *)v78 + v92);
      v94 = (_QWORD *)((char *)v79 + v92);
      v154 = v94[1];
      *v93 = *v94;
      v93[1] = v154;
      v95 = v6[10];
      v96 = (_QWORD *)((char *)v78 + v95);
      v97 = (_QWORD *)((char *)v79 + v95);
      v152 = v97[1];
      *v96 = *v97;
      v96[1] = v152;
      v98 = v6[11];
      v99 = (_QWORD *)((char *)v78 + v98);
      v100 = (_QWORD *)((char *)v79 + v98);
      v101 = v100[1];
      *v99 = *v100;
      v99[1] = v101;
      v102 = v6[12];
      v103 = (_QWORD *)((char *)v78 + v102);
      v104 = (_QWORD *)((char *)v79 + v102);
      v105 = v104[1];
      *v103 = *v104;
      v103[1] = v105;
      v106 = v6[13];
      v107 = (_QWORD *)((char *)v78 + v106);
      v108 = (_QWORD *)((char *)v79 + v106);
      v109 = v108[1];
      *v107 = *v108;
      v107[1] = v109;
      *(_QWORD *)((char *)v78 + v6[14]) = *(_QWORD *)((char *)v79 + v6[14]);
      *((_BYTE *)v78 + v6[15]) = *((_BYTE *)v79 + v6[15]);
      v110 = v6[16];
      v157 = (char *)v78 + v110;
      __srca = (char *)v79 + v110;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111 = sub_10000B4C8(&qword_100547B50);
      v112 = *(_QWORD *)(v111 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(__srca, 10, v111))
      {
        v113 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v157, __srca, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        a3 = v171;
        v114 = v166;
      }
      else
      {
        v115 = type metadata accessor for Playlist.Variant(0);
        v116 = *(_QWORD *)(v115 - 8);
        v155 = v115;
        v114 = v166;
        if ((*(unsigned int (**)(char *, uint64_t))(v116 + 48))(__srca, 1))
        {
          v117 = sub_10000B4C8(&qword_100548358);
          v118 = v157;
          memcpy(v157, __srca, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v157, __srca, v155);
          v119 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56);
          v118 = v157;
          v119(v157, 0, 1, v155);
        }
        v120 = v118;
        a3 = v171;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v120, 0, 10, v111);
      }
      *(_QWORD *)((char *)v78 + v6[17]) = *(_QWORD *)((char *)v79 + v6[17]);
      v121 = v6[18];
      v122 = *(void **)((char *)v79 + v121);
      *(_QWORD *)((char *)v78 + v121) = v122;
      *(_QWORD *)((char *)v78 + v6[19]) = *(_QWORD *)((char *)v79 + v6[19]);
      v123 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v114 + 56);
      v124 = v122;
      swift_bridgeObjectRetain();
      v123(v78, 0, 1, v6);
      v54 = __dsta;
    }
    v125 = v162;
    v126 = v162[8];
    v127 = (char *)v54 + v126;
    v128 = (char *)v55 + v126;
    v129 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v130 = *(_QWORD *)(v129 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
    {
      v131 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
      v54 = __dsta;
    }
    else
    {
      v158(v127, v128, v159);
      v158(&v127[*(int *)(v129 + 20)], &v128[*(int *)(v129 + 20)], v159);
      v132 = *(int *)(v129 + 24);
      v172 = &v127[v132];
      v133 = &v128[v132];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v133, 1, v159))
      {
        v134 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v172, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        v158(v172, v133, v159);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v172, 0, 1, v159);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
      v125 = v162;
      v54 = __dsta;
    }
    v56 = v161;
    v135 = v125[9];
    v136 = *(void **)((char *)v55 + v135);
    *(_QWORD *)((char *)v54 + v135) = v136;
    v137 = v125[10];
    v138 = (_QWORD *)((char *)v54 + v137);
    v139 = (_QWORD *)((char *)v55 + v137);
    v140 = v139[1];
    *v138 = *v139;
    v138[1] = v140;
    v141 = v136;
    swift_bridgeObjectRetain();
    v82 = 1;
  }
  else
  {
    v81 = *v55;
    *v54 = *v55;
    swift_retain(v81);
    v82 = 0;
  }
  swift_storeEnumTagMultiPayload((char *)v54, v56, v82);
  v142 = a3[7];
  v143 = (_QWORD *)((char *)a1 + v142);
  v144 = (_QWORD *)((char *)a2 + v142);
  v145 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v144, v145) == 1)
  {
    v146 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v143, v144, v146);
    v147 = v143;
    v148 = v145;
    v149 = 1;
  }
  else
  {
    v150 = *v144;
    *v143 = *v144;
    swift_retain(v150);
    v147 = v143;
    v148 = v145;
    v149 = 0;
  }
  swift_storeEnumTagMultiPayload(v147, v148, v149);
  return a1;
}

_QWORD *sub_1000517D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD *, uint64_t, int *);
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, int *);
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  void (*v110)(char *, char *, uint64_t);
  int *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;
  void (*v130)(char *, char *, uint64_t);
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  void (*v164)(_QWORD *, _QWORD, uint64_t, int *);
  id v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  id v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v191;
  void (*v192)(char *, char *, uint64_t);
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int *v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  char *__dst;
  char *__dsta;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  int *v206;
  unsigned int (*v207)(_QWORD *, uint64_t, int *);
  char *v208;
  char *v209;
  char *v210;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v207 = v8;
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v203 = v7;
    *a1 = *a2;
    v40 = a1[1];
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    a1[2] = a2[2];
    v41 = a1[3];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v41);
    a1[4] = a2[4];
    v42 = a1[5];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v42);
    v43 = v6[7];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
    v47 = v6[8];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (_QWORD *)((char *)a2 + v47);
    *v48 = *v49;
    v50 = v48[1];
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v50);
    v51 = v6[9];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    *v52 = *v53;
    v54 = v52[1];
    v52[1] = v53[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v54);
    v55 = v6[10];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)a2 + v55);
    *v56 = *v57;
    v58 = v56[1];
    v56[1] = v57[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v59 = v6[11];
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    *v60 = *v61;
    v62 = v60[1];
    v60[1] = v61[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v62);
    v63 = v6[12];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    *v64 = *v65;
    v66 = v64[1];
    v64[1] = v65[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v66);
    v67 = v6[13];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    *v68 = *v69;
    v70 = v68[1];
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v70);
    v71 = v6[14];
    v72 = *(_QWORD *)((char *)a1 + v71);
    *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v73 = v6[16];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = sub_10000B4C8(&qword_100547B50);
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    v79 = v78(v74, 10, v76);
    v80 = v78(v75, 10, v76);
    if (v79)
    {
      if (!v80)
      {
        v81 = type metadata accessor for Playlist.Variant(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81))
        {
          v83 = sub_10000B4C8(&qword_100548358);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v74, v75, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v74, 0, 1, v81);
        }
        v7 = v203;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 10, v76);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v80)
      {
        v92 = type metadata accessor for Playlist.Variant(0);
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
        v95 = v94(v74, 1, v92);
        v96 = v94(v75, 1, v92);
        if (v95)
        {
          v7 = v203;
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v74, v75, v92);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v74, 0, 1, v92);
            goto LABEL_29;
          }
        }
        else
        {
          v7 = v203;
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v74, v75, v92);
            goto LABEL_29;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v92);
        }
        v97 = sub_10000B4C8(&qword_100548358);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        goto LABEL_29;
      }
      sub_100011694((uint64_t)v74, &qword_100547B50);
    }
    v87 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    v7 = v203;
LABEL_29:
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v98 = v6[18];
    v99 = *(void **)((char *)a1 + v98);
    v100 = *(void **)((char *)a2 + v98);
    *(_QWORD *)((char *)a1 + v98) = v100;
    v101 = v100;

    v102 = v6[19];
    v103 = *(_QWORD *)((char *)a1 + v102);
    *(_QWORD *)((char *)a1 + v102) = *(_QWORD *)((char *)a2 + v102);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v103);
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v39 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_30;
  }
  v202 = v7;
  v205 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for URL(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = v6[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v19 = v6[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = v6[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = v6[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = v6[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = v6[13];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  v34 = v6[16];
  __dst = (char *)a1 + v34;
  v35 = (char *)a2 + v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = sub_10000B4C8(&qword_100547B50);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
  {
    v38 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    v7 = v202;
    a3 = v205;
  }
  else
  {
    v84 = type metadata accessor for Playlist.Variant(0);
    v85 = *(_QWORD *)(v84 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v35, 1, v84))
    {
      v86 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dst, v35, v84);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
    }
    v7 = v202;
    a3 = v205;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 10, v36);
  }
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v88 = v6[18];
  v89 = *(void **)((char *)a2 + v88);
  *(_QWORD *)((char *)a1 + v88) = v89;
  *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
  v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56);
  v91 = v89;
  swift_bridgeObjectRetain();
  v90(a1, 0, 1, v6);
LABEL_30:
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  if (a1 != a2)
  {
    v104 = a3[6];
    v105 = (_QWORD *)((char *)a1 + v104);
    v106 = (_QWORD *)((char *)a2 + v104);
    sub_100011694((uint64_t)a1 + v104, &qword_100549340);
    v107 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v106, v107) == 1)
    {
      v204 = v7;
      v206 = a3;
      v198 = v107;
      v108 = type metadata accessor for Date(0);
      v195 = *(_QWORD *)(v108 - 8);
      v109 = v105;
      v110 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v195 + 16);
      v110(v109, v106, v108);
      v111 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v112 = v111[5];
      v113 = (char *)v109 + v112;
      v114 = (char *)v106 + v112;
      v196 = v108;
      v199 = (void (*)(char *, char *, uint64_t))v110;
      v110((_QWORD *)((char *)v109 + v112), (_QWORD *)((char *)v106 + v112), v108);
      v105 = v109;
      v115 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v116 = v115[5];
      v117 = &v113[v116];
      v118 = &v114[v116];
      *(_QWORD *)v117 = *(_QWORD *)v118;
      *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
      v119 = v115[6];
      v120 = &v113[v119];
      v121 = &v114[v119];
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
      v122 = v115[7];
      v123 = &v113[v122];
      v124 = &v114[v122];
      *(_QWORD *)v123 = *(_QWORD *)v124;
      *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
      *(_QWORD *)&v113[v115[8]] = *(_QWORD *)&v114[v115[8]];
      *((_BYTE *)v109 + v111[6]) = *((_BYTE *)v106 + v111[6]);
      v197 = v111;
      v125 = v111[7];
      v126 = (_QWORD *)((char *)v109 + v125);
      __dsta = (char *)v106;
      v127 = (_QWORD *)((char *)v106 + v125);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v207(v127, 1, v6))
      {
        v128 = sub_10000B4C8(&qword_100548310);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        v130 = v199;
        v129 = __dsta;
        v131 = v197;
      }
      else
      {
        *v126 = *v127;
        v126[1] = v127[1];
        v126[2] = v127[2];
        v126[3] = v127[3];
        v126[4] = v127[4];
        v126[5] = v127[5];
        v134 = v6[7];
        v208 = (char *)v126 + v134;
        v193 = (char *)v127 + v134;
        v135 = type metadata accessor for URL(0);
        v192 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v192(v208, v193, v135);
        v136 = v6[8];
        v137 = (_QWORD *)((char *)v126 + v136);
        v138 = (_QWORD *)((char *)v127 + v136);
        *v137 = *v138;
        v137[1] = v138[1];
        v139 = v6[9];
        v140 = (_QWORD *)((char *)v126 + v139);
        v141 = (_QWORD *)((char *)v127 + v139);
        *v140 = *v141;
        v140[1] = v141[1];
        v142 = v6[10];
        v143 = (_QWORD *)((char *)v126 + v142);
        v144 = (_QWORD *)((char *)v127 + v142);
        *v143 = *v144;
        v143[1] = v144[1];
        v145 = v6[11];
        v146 = (_QWORD *)((char *)v126 + v145);
        v147 = (_QWORD *)((char *)v127 + v145);
        *v146 = *v147;
        v146[1] = v147[1];
        v148 = v6[12];
        v149 = (_QWORD *)((char *)v126 + v148);
        v150 = (_QWORD *)((char *)v127 + v148);
        *v149 = *v150;
        v149[1] = v150[1];
        v151 = v6[13];
        v152 = (_QWORD *)((char *)v126 + v151);
        v153 = (_QWORD *)((char *)v127 + v151);
        *v152 = *v153;
        v152[1] = v153[1];
        *(_QWORD *)((char *)v126 + v6[14]) = *(_QWORD *)((char *)v127 + v6[14]);
        *((_BYTE *)v126 + v6[15]) = *((_BYTE *)v127 + v6[15]);
        v154 = v6[16];
        v209 = (char *)v126 + v154;
        v191 = (char *)v127 + v154;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v155 = sub_10000B4C8(&qword_100547B50);
        v156 = *(_QWORD *)(v155 - 8);
        if ((*(unsigned int (**)(void))(v156 + 48))())
        {
          v157 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(v209, v191, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
          v129 = (char *)v106;
          v158 = v204;
          v131 = v197;
          v130 = v199;
        }
        else
        {
          v159 = type metadata accessor for Playlist.Variant(0);
          v160 = *(_QWORD *)(v159 - 8);
          v194 = v159;
          if ((*(unsigned int (**)(char *, uint64_t))(v160 + 48))(v191, 1))
          {
            v161 = sub_10000B4C8(&qword_100548358);
            memcpy(v209, v191, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v209, v191, v194);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v209, 0, 1, v194);
          }
          v131 = v197;
          v130 = v199;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v209, 0, 10, v155);
          v129 = __dsta;
          v158 = v204;
        }
        *(_QWORD *)((char *)v126 + v6[17]) = *(_QWORD *)((char *)v127 + v6[17]);
        v162 = v6[18];
        v163 = *(void **)((char *)v127 + v162);
        *(_QWORD *)((char *)v126 + v162) = v163;
        *(_QWORD *)((char *)v126 + v6[19]) = *(_QWORD *)((char *)v127 + v6[19]);
        v164 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v158 + 56);
        v165 = v163;
        swift_bridgeObjectRetain();
        v164(v126, 0, 1, v6);
      }
      v166 = v131[8];
      v167 = (char *)v105 + v166;
      v168 = &v129[v166];
      v169 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v170 = *(_QWORD *)(v169 - 8);
      a3 = v206;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
      {
        v171 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
        v107 = v198;
      }
      else
      {
        v130(v167, v168, v196);
        v130(&v167[*(int *)(v169 + 20)], &v168[*(int *)(v169 + 20)], v196);
        v172 = *(int *)(v169 + 24);
        v210 = &v167[v172];
        v173 = &v168[v172];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v173, 1, v196))
        {
          v174 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v210, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
        }
        else
        {
          v199(v210, v173, v196);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v210, 0, 1, v196);
        }
        a3 = v206;
        v107 = v198;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
      }
      v175 = v131[9];
      v176 = *(void **)&__dsta[v175];
      *(_QWORD *)((char *)v105 + v175) = v176;
      v177 = v131[10];
      v178 = (_QWORD *)((char *)v105 + v177);
      v179 = &__dsta[v177];
      *v178 = *(_QWORD *)v179;
      v178[1] = *((_QWORD *)v179 + 1);
      v180 = v176;
      swift_bridgeObjectRetain();
      v133 = 1;
    }
    else
    {
      v132 = *v106;
      *v105 = *v106;
      swift_retain(v132);
      v133 = 0;
    }
    swift_storeEnumTagMultiPayload(v105, v107, v133);
    v181 = a3[7];
    v182 = (_QWORD *)((char *)a1 + v181);
    v183 = (_QWORD *)((char *)a2 + v181);
    sub_100011694((uint64_t)a1 + v181, &qword_100548908);
    v184 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v183, v184) == 1)
    {
      v185 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v182, v183, v185);
      v186 = v182;
      v187 = v184;
      v188 = 1;
    }
    else
    {
      v189 = *v183;
      *v182 = *v183;
      swift_retain(v189);
      v186 = v182;
      v187 = v184;
      v188 = 0;
    }
    swift_storeEnumTagMultiPayload(v186, v187, v188);
  }
  return a1;
}

_OWORD *sub_1000525C0(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  char *__src;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unsigned int (*__dstb)(char *, uint64_t, int *);
  void *__dst;
  char *__dsta;
  uint64_t v82;
  int *v83;
  int *v84;
  int *v85;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    a1[2] = a2[2];
    v11 = v6[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
    *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v15 = v6[16];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_10000B4C8(&qword_100547B50);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 10, v18))
    {
      v20 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v75 = v7;
      v84 = a3;
      v21 = type metadata accessor for Playlist.Variant(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      {
        v23 = sub_10000B4C8(&qword_100548358);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
      }
      a3 = v84;
      v7 = v75;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 10, v18);
    }
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v24 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v78 = v27;
    v76 = v7;
    v85 = a3;
    v28 = type metadata accessor for Date(0);
    v74 = *(_QWORD *)(v28 - 8);
    __dstb = (unsigned int (*)(char *, uint64_t, int *))v8;
    v29 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v29(v25, v26, v28);
    v30 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v31 = v30[5];
    v32 = &v25[v31];
    v33 = &v26[v31];
    v82 = v28;
    v73 = v29;
    v29(&v25[v31], &v26[v31], v28);
    v34 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    *(_OWORD *)&v32[v34[5]] = *(_OWORD *)&v33[v34[5]];
    *(_OWORD *)&v32[v34[6]] = *(_OWORD *)&v33[v34[6]];
    *(_OWORD *)&v32[v34[7]] = *(_OWORD *)&v33[v34[7]];
    *(_QWORD *)&v32[v34[8]] = *(_QWORD *)&v33[v34[8]];
    v25[v30[6]] = v26[v30[6]];
    v83 = v30;
    v35 = v30[7];
    v77 = v25;
    v36 = &v25[v35];
    v37 = &v26[v35];
    if (__dstb(&v26[v35], 1, v6))
    {
      v38 = sub_10000B4C8(&qword_100548310);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      v39 = v82;
    }
    else
    {
      v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      v41 = v6[7];
      v42 = &v36[v41];
      v43 = &v37[v41];
      v44 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      *(_OWORD *)&v36[v6[8]] = *(_OWORD *)&v37[v6[8]];
      *(_OWORD *)&v36[v6[9]] = *(_OWORD *)&v37[v6[9]];
      *(_OWORD *)&v36[v6[10]] = *(_OWORD *)&v37[v6[10]];
      *(_OWORD *)&v36[v6[11]] = *(_OWORD *)&v37[v6[11]];
      *(_OWORD *)&v36[v6[12]] = *(_OWORD *)&v37[v6[12]];
      *(_OWORD *)&v36[v6[13]] = *(_OWORD *)&v37[v6[13]];
      *(_QWORD *)&v36[v6[14]] = *(_QWORD *)&v37[v6[14]];
      v36[v6[15]] = v37[v6[15]];
      v45 = v6[16];
      v46 = &v36[v45];
      v47 = &v37[v45];
      v48 = sub_10000B4C8(&qword_100547B50);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 10, v48))
      {
        v50 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v39 = v82;
        v30 = v83;
        v25 = v77;
      }
      else
      {
        v72 = v48;
        __dst = v46;
        v51 = type metadata accessor for Playlist.Variant(0);
        v70 = *(_QWORD *)(v51 - 8);
        __src = v47;
        v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48))(v47, 1, v51);
        v25 = v77;
        v30 = v83;
        if (v52)
        {
          v53 = sub_10000B4C8(&qword_100548358);
          v54 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 32))(__dst, __src, v51);
          v54 = __dst;
          (*(void (**)(void))(v70 + 56))();
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v54, 0, 10, v72);
        v39 = v82;
      }
      *(_QWORD *)&v36[v6[17]] = *(_QWORD *)&v37[v6[17]];
      *(_QWORD *)&v36[v6[18]] = *(_QWORD *)&v37[v6[18]];
      *(_QWORD *)&v36[v6[19]] = *(_QWORD *)&v37[v6[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v76 + 56))(v36, 0, 1, v6);
    }
    v55 = v30[8];
    v56 = &v25[v55];
    v57 = &v26[v55];
    v58 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      a3 = v85;
    }
    else
    {
      v73(v56, v57, v39);
      v73(&v56[*(int *)(v58 + 20)], &v57[*(int *)(v58 + 20)], v39);
      v61 = *(int *)(v58 + 24);
      __dsta = &v56[v61];
      v62 = &v57[v61];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v62, 1, v39))
      {
        v63 = sub_10000B4C8(&qword_1005481F0);
        memcpy(__dsta, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v73(__dsta, v62, v82);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dsta, 0, 1, v82);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      v30 = v83;
      a3 = v85;
    }
    *(_QWORD *)&v25[v30[9]] = *(_QWORD *)&v26[v30[9]];
    *(_OWORD *)&v25[v30[10]] = *(_OWORD *)&v26[v30[10]];
    swift_storeEnumTagMultiPayload(v25, v78, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v64 = a3[7];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = sub_10000B4C8(&qword_100548908);
  if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
  {
    v68 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v65, v66, v68);
    swift_storeEnumTagMultiPayload(v65, v67, 1);
  }
  else
  {
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100052D2C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  _QWORD *v7;
  unsigned int (*v8)(_BYTE *, uint64_t, int *);
  unsigned int v9;
  unsigned int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  uint64_t v141;
  char *__dst;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  unsigned int (*__src)(_BYTE *, uint64_t, int *);
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  void (**v150)(char *, _QWORD, uint64_t, int *);
  char *v151;
  int *v152;
  int *v153;
  int *v154;
  int *v155;

  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  v7 = (_QWORD *)*((_QWORD *)v6 - 1);
  v8 = (unsigned int (*)(_BYTE *, uint64_t, int *))v7[6];
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10000E750((uint64_t)a1, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v148 = v7;
    v153 = a3;
    v23 = a2[1];
    v24 = a1[1];
    *a1 = *a2;
    a1[1] = v23;
    swift_bridgeObjectRelease(v24);
    v25 = a2[3];
    v26 = a1[3];
    a1[2] = a2[2];
    a1[3] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = a2[5];
    v28 = a1[5];
    a1[4] = a2[4];
    a1[5] = v27;
    swift_bridgeObjectRelease(v28);
    v29 = v6[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
    v33 = v6[8];
    v34 = (_QWORD *)((char *)a1 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v37 = *v35;
    v36 = v35[1];
    v38 = v34[1];
    *v34 = v37;
    v34[1] = v36;
    swift_bridgeObjectRelease(v38);
    v39 = v6[9];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v43 = *v41;
    v42 = v41[1];
    v44 = v40[1];
    *v40 = v43;
    v40[1] = v42;
    swift_bridgeObjectRelease(v44);
    v45 = v6[10];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v49 = *v47;
    v48 = v47[1];
    v50 = v46[1];
    *v46 = v49;
    v46[1] = v48;
    swift_bridgeObjectRelease(v50);
    v51 = v6[11];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v55 = *v53;
    v54 = v53[1];
    v56 = v52[1];
    *v52 = v55;
    v52[1] = v54;
    swift_bridgeObjectRelease(v56);
    v57 = v6[12];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v61 = *v59;
    v60 = v59[1];
    v62 = v58[1];
    *v58 = v61;
    v58[1] = v60;
    swift_bridgeObjectRelease(v62);
    v63 = v6[13];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v67 = *v65;
    v66 = v65[1];
    v68 = v64[1];
    *v64 = v67;
    v64[1] = v66;
    swift_bridgeObjectRelease(v68);
    v69 = v6[14];
    v70 = *(_QWORD *)((char *)a1 + v69);
    *(_QWORD *)((char *)a1 + v69) = *(_QWORD *)((char *)a2 + v69);
    swift_bridgeObjectRelease(v70);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v71 = v6[16];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = sub_10000B4C8(&qword_100547B50);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v76(v72, 10, v74);
    v78 = v76(v73, 10, v74);
    if (v77)
    {
      if (!v78)
      {
        v79 = type metadata accessor for Playlist.Variant(0);
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
        {
          v81 = sub_10000B4C8(&qword_100548358);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v72, v73, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
        }
        a3 = v153;
        v7 = v148;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 10, v74);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v78)
      {
        v86 = type metadata accessor for Playlist.Variant(0);
        v87 = *(_QWORD *)(v86 - 8);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
        v89 = v88(v72, 1, v86);
        v90 = v88(v73, 1, v86);
        if (v89)
        {
          a3 = v153;
          v7 = v148;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v72, v73, v86);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v72, 0, 1, v86);
            goto LABEL_29;
          }
        }
        else
        {
          a3 = v153;
          v7 = v148;
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v72, v73, v86);
            goto LABEL_29;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v86);
        }
        v91 = sub_10000B4C8(&qword_100548358);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        goto LABEL_29;
      }
      sub_100011694((uint64_t)v72, &qword_100547B50);
    }
    v85 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    a3 = v153;
    v7 = v148;
LABEL_29:
    *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
    v92 = v6[18];
    v93 = *(void **)((char *)a1 + v92);
    *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)((char *)a2 + v92);

    v94 = v6[19];
    v95 = *(_QWORD *)((char *)a1 + v94);
    *(_QWORD *)((char *)a1 + v94) = *(_QWORD *)((char *)a2 + v94);
    swift_bridgeObjectRelease(v95);
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v22 = sub_10000B4C8(&qword_100548310);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_30;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  v16 = v6[16];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_10000B4C8(&qword_100547B50);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v149 = v7;
    v154 = a3;
    v82 = type metadata accessor for Playlist.Variant(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v18, 1, v82))
    {
      v84 = sub_10000B4C8(&qword_100548358);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v17, v18, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v17, 0, 1, v82);
    }
    a3 = v154;
    v7 = v149;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  *(_QWORD *)((char *)a1 + v6[18]) = *(_QWORD *)((char *)a2 + v6[18]);
  *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
  ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v7[7])(a1, 0, 1, v6);
LABEL_30:
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  if (a1 != a2)
  {
    v96 = a3[6];
    v97 = (char *)a1 + v96;
    v98 = (char *)a2 + v96;
    sub_100011694((uint64_t)a1 + v96, &qword_100549340);
    v99 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v98, v99) == 1)
    {
      v146 = v99;
      v150 = v7;
      v155 = a3;
      v100 = type metadata accessor for Date(0);
      v144 = *(_QWORD *)(v100 - 8);
      __src = v8;
      v101 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
      v101(v97, v98, v100);
      v102 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v103 = v102[5];
      v104 = &v97[v103];
      v105 = &v98[v103];
      v147 = v100;
      v143 = v101;
      v101(&v97[v103], &v98[v103], v100);
      v106 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      *(_OWORD *)&v104[v106[5]] = *(_OWORD *)&v105[v106[5]];
      *(_OWORD *)&v104[v106[6]] = *(_OWORD *)&v105[v106[6]];
      *(_OWORD *)&v104[v106[7]] = *(_OWORD *)&v105[v106[7]];
      *(_QWORD *)&v104[v106[8]] = *(_QWORD *)&v105[v106[8]];
      v97[v102[6]] = v98[v102[6]];
      v152 = v102;
      v107 = v102[7];
      v108 = &v97[v107];
      v109 = &v98[v107];
      if (__src(&v98[v107], 1, v6))
      {
        v110 = sub_10000B4C8(&qword_100548310);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        v111 = v147;
      }
      else
      {
        v112 = *((_OWORD *)v109 + 1);
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_OWORD *)v108 + 1) = v112;
        *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
        v113 = v6[7];
        v114 = &v108[v113];
        v115 = &v109[v113];
        v116 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
        *(_OWORD *)&v108[v6[8]] = *(_OWORD *)&v109[v6[8]];
        *(_OWORD *)&v108[v6[9]] = *(_OWORD *)&v109[v6[9]];
        *(_OWORD *)&v108[v6[10]] = *(_OWORD *)&v109[v6[10]];
        *(_OWORD *)&v108[v6[11]] = *(_OWORD *)&v109[v6[11]];
        *(_OWORD *)&v108[v6[12]] = *(_OWORD *)&v109[v6[12]];
        *(_OWORD *)&v108[v6[13]] = *(_OWORD *)&v109[v6[13]];
        *(_QWORD *)&v108[v6[14]] = *(_QWORD *)&v109[v6[14]];
        v108[v6[15]] = v109[v6[15]];
        v117 = v6[16];
        __dst = &v108[v117];
        v118 = &v109[v117];
        v119 = sub_10000B4C8(&qword_100547B50);
        v120 = *(_QWORD *)(v119 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 10, v119))
        {
          v121 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          v111 = v147;
        }
        else
        {
          v140 = v119;
          v141 = v120;
          v122 = type metadata accessor for Playlist.Variant(0);
          v123 = *(_QWORD *)(v122 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v118, 1, v122))
          {
            v124 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, v118, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v123 + 32))(__dst, v118, v122);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dst, 0, 1, v122);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(__dst, 0, 10, v140);
          v111 = v147;
        }
        *(_QWORD *)&v108[v6[17]] = *(_QWORD *)&v109[v6[17]];
        *(_QWORD *)&v108[v6[18]] = *(_QWORD *)&v109[v6[18]];
        *(_QWORD *)&v108[v6[19]] = *(_QWORD *)&v109[v6[19]];
        (*((void (**)(char *, _QWORD, uint64_t, int *))v150 + 7))(v108, 0, 1, v6);
      }
      v125 = v152[8];
      v126 = &v97[v125];
      v127 = &v98[v125];
      v128 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v129 = *(_QWORD *)(v128 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
      {
        v130 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        a3 = v155;
      }
      else
      {
        v143(v126, v127, v111);
        v143(&v126[*(int *)(v128 + 20)], &v127[*(int *)(v128 + 20)], v111);
        v131 = *(int *)(v128 + 24);
        v151 = &v126[v131];
        v132 = &v127[v131];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v132, 1, v111))
        {
          v133 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v151, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          v143(v151, v132, v147);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v151, 0, 1, v147);
        }
        a3 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
      }
      *(_QWORD *)&v97[v152[9]] = *(_QWORD *)&v98[v152[9]];
      *(_OWORD *)&v97[v152[10]] = *(_OWORD *)&v98[v152[10]];
      swift_storeEnumTagMultiPayload(v97, v146, 1);
    }
    else
    {
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    v134 = a3[7];
    v135 = (char *)a1 + v134;
    v136 = (char *)a2 + v134;
    sub_100011694((uint64_t)a1 + v134, &qword_100548908);
    v137 = sub_10000B4C8(&qword_100548908);
    if (swift_getEnumCaseMultiPayload(v136, v137) == 1)
    {
      v138 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v135, v136, v138);
      swift_storeEnumTagMultiPayload(v135, v137, 1);
    }
    else
    {
      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100053828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100053834);
}

uint64_t sub_100053834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_10000B4C8(&qword_100548310);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10000B4C8(&qword_100549390);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v8 = sub_10000B4C8(&qword_100548918);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 28);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1000538D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000538E4);
}

uint64_t sub_1000538E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_10000B4C8(&qword_100548310);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10000B4C8(&qword_100549390);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_10000B4C8(&qword_100548918);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 28);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100053990(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_10002E8E4(319, (unint64_t *)&qword_1005483C8, type metadata accessor for WidgetMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_10002E8E4(319, (unint64_t *)&unk_100549400, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002E8E4(319, (unint64_t *)&unk_100548990, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

ValueMetadata *_s12MusicWidgets10HeaderViewVMa_0()
{
  return &_s12MusicWidgets10HeaderViewVN_0;
}

_QWORD *sub_100053A94(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD *, uint64_t, int *);
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void (*v81)(_QWORD *, _QWORD, uint64_t, int *);
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v109;
  char *__dst;
  uint64_t v111;
  char *__srca;
  void *__srcb;
  char *__src;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  int *v122;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v37);
  }
  else
  {
    v6 = a3;
    v7 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v3, v7) == 1)
    {
      v118 = v7;
      v119 = v6;
      v8 = type metadata accessor for Date(0);
      v115 = *(_QWORD *)(v8 - 8);
      v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v115 + 16);
      v9(a1, v3, v8);
      v10 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)v3 + v11;
      v117 = v8;
      v121 = (void (*)(char *, char *, uint64_t))v9;
      v9((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)v3 + v11), v8);
      v14 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v15 = v14[5];
      v16 = &v12[v15];
      v17 = &v13[v15];
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v19 = v14[6];
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = v14[7];
      v24 = &v12[v23];
      v25 = &v13[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)v3 + v10[6]);
      v122 = v10;
      v27 = v10[7];
      v28 = v3;
      v29 = (_QWORD *)((char *)a1 + v27);
      v116 = v28;
      v30 = (_QWORD *)((char *)v28 + v27);
      v31 = (int *)type metadata accessor for WidgetMusicItem(0);
      v32 = *((_QWORD *)v31 - 1);
      v33 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        v34 = sub_10000B4C8(&qword_100548310);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v7 = v118;
        v6 = v119;
        v35 = v121;
        v36 = v122;
      }
      else
      {
        v111 = v32;
        v40 = v30[1];
        *v29 = *v30;
        v29[1] = v40;
        v41 = v30[3];
        v29[2] = v30[2];
        v29[3] = v41;
        v42 = v30[5];
        v29[4] = v30[4];
        v29[5] = v42;
        v43 = v31[7];
        v44 = (char *)v29 + v43;
        __srca = (char *)v30 + v43;
        v45 = type metadata accessor for URL(0);
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v44, __srca, v45);
        v47 = v31[8];
        v48 = (_QWORD *)((char *)v29 + v47);
        v49 = (_QWORD *)((char *)v30 + v47);
        v50 = v49[1];
        *v48 = *v49;
        v48[1] = v50;
        v51 = v31[9];
        v52 = (_QWORD *)((char *)v29 + v51);
        v53 = (_QWORD *)((char *)v30 + v51);
        __srcb = (void *)v53[1];
        *v52 = *v53;
        v52[1] = __srcb;
        v54 = v31[10];
        v55 = (_QWORD *)((char *)v29 + v54);
        v56 = (_QWORD *)((char *)v30 + v54);
        v57 = v56[1];
        *v55 = *v56;
        v55[1] = v57;
        v58 = v31[11];
        v59 = (_QWORD *)((char *)v29 + v58);
        v60 = (_QWORD *)((char *)v30 + v58);
        v61 = v60[1];
        *v59 = *v60;
        v59[1] = v61;
        v62 = v31[12];
        v63 = (_QWORD *)((char *)v29 + v62);
        v64 = (_QWORD *)((char *)v30 + v62);
        v65 = v64[1];
        *v63 = *v64;
        v63[1] = v65;
        v66 = v31[13];
        v67 = (_QWORD *)((char *)v29 + v66);
        v68 = (_QWORD *)((char *)v30 + v66);
        v69 = v68[1];
        *v67 = *v68;
        v67[1] = v69;
        *(_QWORD *)((char *)v29 + v31[14]) = *(_QWORD *)((char *)v30 + v31[14]);
        *((_BYTE *)v29 + v31[15]) = *((_BYTE *)v30 + v31[15]);
        v70 = v31[16];
        __dst = (char *)v29 + v70;
        v71 = (char *)v30 + v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72 = sub_10000B4C8(&qword_100547B50);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 10, v72))
        {
          v74 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          v7 = v118;
          v35 = v121;
          v36 = v122;
        }
        else
        {
          v75 = type metadata accessor for Playlist.Variant(0);
          v76 = *(_QWORD *)(v75 - 8);
          __src = v71;
          v109 = v75;
          v77 = (*(uint64_t (**)(char *, uint64_t))(v76 + 48))(v71, 1);
          v35 = v121;
          v36 = v122;
          if (v77)
          {
            v78 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, __src, v109);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v109);
          }
          v7 = v118;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 10, v72);
        }
        *(_QWORD *)((char *)v29 + v31[17]) = *(_QWORD *)((char *)v30 + v31[17]);
        v79 = v31[18];
        v80 = *(void **)((char *)v30 + v79);
        *(_QWORD *)((char *)v29 + v79) = v80;
        *(_QWORD *)((char *)v29 + v31[19]) = *(_QWORD *)((char *)v30 + v31[19]);
        v81 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v111 + 56);
        v82 = v80;
        swift_bridgeObjectRetain();
        v81(v29, 0, 1, v31);
        v6 = v119;
      }
      v3 = v116;
      v83 = v36[8];
      v84 = (char *)a1 + v83;
      v85 = (char *)v116 + v83;
      v86 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        v88 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        v35(v84, v85, v117);
        v35(&v84[*(int *)(v86 + 20)], &v85[*(int *)(v86 + 20)], v117);
        v89 = *(int *)(v86 + 24);
        v120 = &v84[v89];
        v90 = &v85[v89];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v90, 1, v117))
        {
          v91 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v120, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          v121(v120, v90, v117);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v120, 0, 1, v117);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      v92 = v122[9];
      v93 = *(void **)((char *)v116 + v92);
      *(_QWORD *)((char *)a1 + v92) = v93;
      v94 = v122[10];
      v95 = (_QWORD *)((char *)a1 + v94);
      v96 = (_QWORD *)((char *)v116 + v94);
      v97 = v96[1];
      *v95 = *v96;
      v95[1] = v97;
      v98 = v93;
      swift_bridgeObjectRetain();
      v39 = 1;
    }
    else
    {
      v38 = *v3;
      *a1 = *v3;
      swift_retain(v38);
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v39);
    v99 = v6[5];
    v100 = (_QWORD *)((char *)a1 + v99);
    v101 = (_QWORD *)((char *)v3 + v99);
    v102 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
    {
      v103 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
      v104 = v100;
      v105 = v102;
      v106 = 1;
    }
    else
    {
      v107 = *v101;
      *v100 = *v101;
      swift_retain(v107);
      v104 = v100;
      v105 = v102;
      v106 = 0;
    }
    swift_storeEnumTagMultiPayload(v104, v105, v106);
  }
  return a1;
}

double sub_1000540E0(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  int *v8;
  char *v9;
  int *v10;
  char *v11;
  int *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;

  v4 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Date(0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(char *, uint64_t))(v6 + 8);
    v7(a1, v5);
    v8 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v9 = &a1[v8[5]];
    v7(v9, v5);
    v10 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[5] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[7] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[8]]);
    v11 = &a1[v8[7]];
    v12 = (int *)type metadata accessor for WidgetMusicItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v11 + 5));
      v13 = &v11[v12[7]];
      v14 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[9] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[10] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[11] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[12] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[13] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[14]]);
      v15 = &v11[v12[16]];
      v16 = sub_10000B4C8(&qword_100547B50);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 10, v16))
      {
        v17 = type metadata accessor for Playlist.Variant(0);
        v25 = *(_QWORD *)(v17 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v17))
          (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v17);
      }

      swift_bridgeObjectRelease(*(_QWORD *)&v11[v12[19]]);
    }
    v18 = &a1[v8[8]];
    v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      v7(v18, v5);
      v7(&v18[*(int *)(v19 + 20)], v5);
      v20 = &v18[*(int *)(v19 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
        v7(v20, v5);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&a1[v8[10] + 8]);
  }
  else
  {
    swift_release(*(_QWORD *)a1);
  }
  v21 = &a1[*(int *)(a2 + 20)];
  v22 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*(_QWORD *)v21).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100054434(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, void *);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  unsigned int (*v31)(_QWORD *, uint64_t, int *);
  uint64_t v32;
  int *v33;
  void *v34;
  void (*v35)(char *, char *, void *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, _QWORD, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  void *v82;
  void (*v83)(_QWORD *, _QWORD, uint64_t, int *);
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *__dsta;
  char *__dst;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  int *v120;
  void *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, void *);

  v6 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v123 = v6;
    v118 = a3;
    v7 = type metadata accessor for Date(0);
    v117 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v117 + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v121 = (void *)v7;
    v124 = (void (*)(char *, char *, void *))v8;
    v8((_QWORD *)((char *)a1 + v10), (_QWORD *)((char *)a2 + v10), v7);
    v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v13[6];
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v13[7];
    v23 = &v11[v22];
    v24 = &v12[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v119 = a2;
    v120 = v9;
    v26 = v9[7];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = (int *)type metadata accessor for WidgetMusicItem(0);
    v30 = *((_QWORD *)v29 - 1);
    v31 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      v32 = sub_10000B4C8(&qword_100548310);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      a3 = v118;
      a2 = v119;
      v33 = v120;
      v34 = v121;
      v35 = v124;
    }
    else
    {
      v112 = v30;
      v38 = v28[1];
      *v27 = *v28;
      v27[1] = v38;
      v39 = v28[3];
      v27[2] = v28[2];
      v27[3] = v39;
      v40 = v28[5];
      v27[4] = v28[4];
      v27[5] = v40;
      v41 = v29[7];
      v42 = (char *)v27 + v41;
      __dsta = (char *)v28 + v41;
      v43 = type metadata accessor for URL(0);
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v42, __dsta, v43);
      v45 = v29[8];
      v46 = (_QWORD *)((char *)v27 + v45);
      v47 = (_QWORD *)((char *)v28 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = v29[9];
      v50 = (_QWORD *)((char *)v27 + v49);
      v51 = (_QWORD *)((char *)v28 + v49);
      v113 = v51[1];
      *v50 = *v51;
      v50[1] = v113;
      v52 = v29[10];
      v53 = (_QWORD *)((char *)v27 + v52);
      v54 = (_QWORD *)((char *)v28 + v52);
      v55 = v54[1];
      *v53 = *v54;
      v53[1] = v55;
      v56 = v29[11];
      v57 = (_QWORD *)((char *)v27 + v56);
      v58 = (_QWORD *)((char *)v28 + v56);
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      v60 = v29[12];
      v61 = (_QWORD *)((char *)v27 + v60);
      v62 = (_QWORD *)((char *)v28 + v60);
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      v64 = v29[13];
      v65 = (_QWORD *)((char *)v27 + v64);
      v66 = (_QWORD *)((char *)v28 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      *(_QWORD *)((char *)v27 + v29[14]) = *(_QWORD *)((char *)v28 + v29[14]);
      *((_BYTE *)v27 + v29[15]) = *((_BYTE *)v28 + v29[15]);
      v68 = v29[16];
      __dst = (char *)v27 + v68;
      v69 = (char *)v28 + v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70 = sub_10000B4C8(&qword_100547B50);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 10, v70))
      {
        v72 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        a3 = v118;
        a2 = v119;
        v33 = v120;
        v73 = v112;
      }
      else
      {
        v74 = type metadata accessor for Playlist.Variant(0);
        v75 = *(_QWORD *)(v74 - 8);
        v114 = v69;
        v111 = v74;
        v76 = (*(uint64_t (**)(char *, uint64_t))(v75 + 48))(v69, 1);
        a2 = v119;
        v33 = v120;
        v73 = v112;
        if (v76)
        {
          v77 = sub_10000B4C8(&qword_100548358);
          v78 = __dst;
          memcpy(__dst, v114, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v114, v111);
          v79 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56);
          v78 = __dst;
          v79(__dst, 0, 1, v111);
        }
        v80 = v78;
        a3 = v118;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v80, 0, 10, v70);
      }
      *(_QWORD *)((char *)v27 + v29[17]) = *(_QWORD *)((char *)v28 + v29[17]);
      v81 = v29[18];
      v82 = *(void **)((char *)v28 + v81);
      *(_QWORD *)((char *)v27 + v81) = v82;
      *(_QWORD *)((char *)v27 + v29[19]) = *(_QWORD *)((char *)v28 + v29[19]);
      v83 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56);
      v84 = v82;
      swift_bridgeObjectRetain();
      v83(v27, 0, 1, v29);
      v35 = v124;
      v34 = v121;
    }
    v85 = v33[8];
    v86 = (char *)a1 + v85;
    v87 = (char *)a2 + v85;
    v88 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v89 = *(_QWORD *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
    {
      v90 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      v35(v86, v87, v34);
      v35(&v86[*(int *)(v88 + 20)], &v87[*(int *)(v88 + 20)], v34);
      v91 = *(int *)(v88 + 24);
      v122 = &v86[v91];
      v92 = &v87[v91];
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v117 + 48))(v92, 1, v34))
      {
        v93 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v122, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        v124(v122, v92, v34);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v117 + 56))(v122, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
    }
    v6 = v123;
    v94 = v33[9];
    v95 = *(void **)((char *)a2 + v94);
    *(_QWORD *)((char *)a1 + v94) = v95;
    v96 = v33[10];
    v97 = (_QWORD *)((char *)a1 + v96);
    v98 = (_QWORD *)((char *)a2 + v96);
    v99 = v98[1];
    *v97 = *v98;
    v97[1] = v99;
    v100 = v95;
    swift_bridgeObjectRetain();
    v37 = 1;
  }
  else
  {
    v36 = *a2;
    *a1 = *a2;
    swift_retain(v36);
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v37);
  v101 = *(int *)(a3 + 20);
  v102 = (_QWORD *)((char *)a1 + v101);
  v103 = (_QWORD *)((char *)a2 + v101);
  v104 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v103, v104) == 1)
  {
    v105 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v102, v103, v105);
    v106 = v102;
    v107 = v104;
    v108 = 1;
  }
  else
  {
    v109 = *v103;
    *v102 = *v103;
    swift_retain(v109);
    v106 = v102;
    v107 = v104;
    v108 = 0;
  }
  swift_storeEnumTagMultiPayload(v106, v107, v108);
  return a1;
}

char *sub_100054A58(char *a1, char *a2, uint64_t a3)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD *, uint64_t, int *);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void (*v69)(_QWORD *, _QWORD, uint64_t, int *);
  id v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  char *__dsta;
  char *__dst;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  int *v103;
  void *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    v5 = a2;
    sub_100011694((uint64_t)a1, &qword_100549340);
    v6 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
    {
      v104 = (void *)v6;
      v106 = a3;
      v7 = type metadata accessor for Date(0);
      v100 = *(_QWORD *)(v7 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
      v8(a1, v5, v7);
      v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &v5[v10];
      v102 = v7;
      v107 = v8;
      v8(&a1[v10], &v5[v10], v7);
      v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      v14 = v13[5];
      v15 = &v11[v14];
      v16 = &v12[v14];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v17 = v13[6];
      v18 = &v11[v17];
      v19 = &v12[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      v20 = v13[7];
      v21 = &v11[v20];
      v22 = &v12[v20];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
      a1[v9[6]] = v5[v9[6]];
      v103 = v9;
      v23 = v9[7];
      v24 = v5;
      v25 = &a1[v23];
      v101 = v24;
      v26 = &v24[v23];
      v27 = (int *)type metadata accessor for WidgetMusicItem(0);
      v28 = *((_QWORD *)v27 - 1);
      v29 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29((char *)v26, 1, v27))
      {
        v30 = sub_10000B4C8(&qword_100548310);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = v103;
        v6 = (uint64_t)v104;
        v5 = v101;
        v32 = v7;
        v33 = v107;
      }
      else
      {
        v99 = v28;
        *(_QWORD *)v25 = *v26;
        *((_QWORD *)v25 + 1) = v26[1];
        *((_QWORD *)v25 + 2) = v26[2];
        *((_QWORD *)v25 + 3) = v26[3];
        *((_QWORD *)v25 + 4) = v26[4];
        *((_QWORD *)v25 + 5) = v26[5];
        v36 = v27[7];
        v37 = &v25[v36];
        __dsta = (char *)v26 + v36;
        v38 = type metadata accessor for URL(0);
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39(v37, __dsta, v38);
        v40 = v27[8];
        v41 = &v25[v40];
        v42 = (_QWORD *)((char *)v26 + v40);
        *(_QWORD *)v41 = *v42;
        *((_QWORD *)v41 + 1) = v42[1];
        v43 = v27[9];
        v44 = &v25[v43];
        v45 = (_QWORD *)((char *)v26 + v43);
        *(_QWORD *)v44 = *v45;
        *((_QWORD *)v44 + 1) = v45[1];
        v46 = v27[10];
        v47 = &v25[v46];
        v48 = (_QWORD *)((char *)v26 + v46);
        *(_QWORD *)v47 = *v48;
        *((_QWORD *)v47 + 1) = v48[1];
        v49 = v27[11];
        v50 = &v25[v49];
        v51 = (_QWORD *)((char *)v26 + v49);
        *(_QWORD *)v50 = *v51;
        *((_QWORD *)v50 + 1) = v51[1];
        v52 = v27[12];
        v53 = &v25[v52];
        v54 = (_QWORD *)((char *)v26 + v52);
        *(_QWORD *)v53 = *v54;
        *((_QWORD *)v53 + 1) = v54[1];
        v55 = v27[13];
        v56 = &v25[v55];
        v57 = (_QWORD *)((char *)v26 + v55);
        *(_QWORD *)v56 = *v57;
        *((_QWORD *)v56 + 1) = v57[1];
        *(_QWORD *)&v25[v27[14]] = *(_QWORD *)((char *)v26 + v27[14]);
        v25[v27[15]] = *((_BYTE *)v26 + v27[15]);
        v58 = v27[16];
        __dst = &v25[v58];
        v59 = (char *)v26 + v58;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = sub_10000B4C8(&qword_100547B50);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 10, v60))
        {
          v62 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          v31 = v103;
          v6 = (uint64_t)v104;
          v63 = v99;
        }
        else
        {
          v64 = type metadata accessor for Playlist.Variant(0);
          v65 = *(_QWORD *)(v64 - 8);
          v96 = v64;
          v31 = v103;
          v63 = v99;
          if ((*(unsigned int (**)(char *, uint64_t))(v65 + 48))(v59, 1))
          {
            v66 = sub_10000B4C8(&qword_100548358);
            memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v65 + 16))(__dst, v59, v96);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(__dst, 0, 1, v96);
          }
          v6 = (uint64_t)v104;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 10, v60);
        }
        *(_QWORD *)&v25[v27[17]] = *(_QWORD *)((char *)v26 + v27[17]);
        v67 = v27[18];
        v68 = *(void **)((char *)v26 + v67);
        *(_QWORD *)&v25[v67] = v68;
        *(_QWORD *)&v25[v27[19]] = *(_QWORD *)((char *)v26 + v27[19]);
        v69 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v63 + 56);
        v70 = v68;
        swift_bridgeObjectRetain();
        v69(v25, 0, 1, v27);
        v33 = v107;
        v5 = v101;
        v32 = v102;
      }
      v71 = v31[8];
      v72 = &a1[v71];
      v73 = &v5[v71];
      v74 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v75 = *(_QWORD *)(v74 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
      {
        v76 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v33(v72, v73, v32);
        v33(&v72[*(int *)(v74 + 20)], &v73[*(int *)(v74 + 20)], v32);
        v77 = *(int *)(v74 + 24);
        v105 = &v72[v77];
        v78 = &v73[v77];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v78, 1, v32))
        {
          v79 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v105, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          v107(v105, v78, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v105, 0, 1, v32);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      a3 = v106;
      v80 = v31[9];
      v81 = *(void **)&v5[v80];
      *(_QWORD *)&a1[v80] = v81;
      v82 = v31[10];
      v83 = &a1[v82];
      v84 = &v5[v82];
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v85 = v81;
      swift_bridgeObjectRetain();
      v35 = 1;
    }
    else
    {
      v34 = *(_QWORD *)v5;
      *(_QWORD *)a1 = *(_QWORD *)v5;
      swift_retain(v34);
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v35);
    v86 = *(int *)(a3 + 20);
    v87 = (uint64_t *)&a1[v86];
    v88 = (uint64_t *)&v5[v86];
    sub_100011694((uint64_t)&a1[v86], &qword_100547EE0);
    v89 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v88, v89) == 1)
    {
      v90 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v87, v88, v90);
      v91 = v87;
      v92 = v89;
      v93 = 1;
    }
    else
    {
      v94 = *v88;
      *v87 = *v88;
      swift_retain(v94);
      v91 = v87;
      v92 = v89;
      v93 = 0;
    }
    swift_storeEnumTagMultiPayload(v91, v92, v93);
  }
  return a1;
}

char *sub_10005510C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *__dst;
  uint64_t v56;
  uint64_t v57;
  char *__src;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);

  v6 = sub_10000B4C8(&qword_100549340);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Date(0);
    v59 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v61 = v8;
    v8(&a1[v10], &a2[v10], v7);
    v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
    *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
    *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
    *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    a1[v9[6]] = a2[v9[6]];
    v14 = v9[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = (int *)type metadata accessor for WidgetMusicItem(0);
    v18 = *((_QWORD *)v17 - 1);
    v60 = a3;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_10000B4C8(&qword_100548310);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v56 = v7;
      v57 = v18;
      v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      v21 = v17[7];
      v22 = &v15[v21];
      v23 = &v16[v21];
      v24 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      *(_OWORD *)&v15[v17[8]] = *(_OWORD *)&v16[v17[8]];
      *(_OWORD *)&v15[v17[9]] = *(_OWORD *)&v16[v17[9]];
      *(_OWORD *)&v15[v17[10]] = *(_OWORD *)&v16[v17[10]];
      *(_OWORD *)&v15[v17[11]] = *(_OWORD *)&v16[v17[11]];
      *(_OWORD *)&v15[v17[12]] = *(_OWORD *)&v16[v17[12]];
      *(_OWORD *)&v15[v17[13]] = *(_OWORD *)&v16[v17[13]];
      *(_QWORD *)&v15[v17[14]] = *(_QWORD *)&v16[v17[14]];
      v15[v17[15]] = v16[v17[15]];
      v25 = v17[16];
      __dst = &v15[v25];
      v26 = &v16[v25];
      v27 = sub_10000B4C8(&qword_100547B50);
      v28 = *(_QWORD *)(v27 - 8);
      __src = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 10, v27))
      {
        v29 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        v7 = v56;
        v30 = v57;
      }
      else
      {
        v53 = v28;
        v54 = v27;
        v31 = type metadata accessor for Playlist.Variant(0);
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(__src, 1, v31))
        {
          v33 = sub_10000B4C8(&qword_100548358);
          v34 = __dst;
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v52 = v32;
          v35 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
          v34 = __dst;
          v35(__dst, __src, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v31);
        }
        v7 = v56;
        v30 = v57;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v34, 0, 10, v54);
      }
      *(_QWORD *)&v15[v17[17]] = *(_QWORD *)&v16[v17[17]];
      *(_QWORD *)&v15[v17[18]] = *(_QWORD *)&v16[v17[18]];
      *(_QWORD *)&v15[v17[19]] = *(_QWORD *)&v16[v17[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v30 + 56))(v15, 0, 1, v17);
    }
    v36 = v9[8];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_10000B4C8(&qword_1005482D8);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v61(v37, v38, v7);
      v61(&v37[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v7);
      v42 = *(int *)(v39 + 24);
      v43 = &v37[v42];
      v44 = &v38[v42];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v44, 1, v7))
      {
        v45 = sub_10000B4C8(&qword_1005481F0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v61(v43, v44, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v43, 0, 1, v7);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    a3 = v60;
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v46 = *(int *)(a3 + 20);
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload(v47, v49, 1);
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  return a1;
}

char *sub_100055638(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *__dst;
  uint64_t v54;
  char *__src;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_100549340);
    v6 = sub_10000B4C8(&qword_100549340);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Date(0);
      v57 = *(_QWORD *)(v7 - 8);
      v8 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for TopChartsWidgetTimelineProvider.Entry(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v59 = v8;
      v8(&a1[v10], &a2[v10], v7);
      v13 = (int *)type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
      *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
      *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
      *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
      *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
      a1[v9[6]] = a2[v9[6]];
      v14 = v9[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = (int *)type metadata accessor for WidgetMusicItem(0);
      v18 = *((_QWORD *)v17 - 1);
      v58 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_10000B4C8(&qword_100548310);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v54 = v7;
        v56 = v18;
        v20 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v20;
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        v21 = v17[7];
        v22 = &v15[v21];
        v23 = &v16[v21];
        v24 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        *(_OWORD *)&v15[v17[8]] = *(_OWORD *)&v16[v17[8]];
        *(_OWORD *)&v15[v17[9]] = *(_OWORD *)&v16[v17[9]];
        *(_OWORD *)&v15[v17[10]] = *(_OWORD *)&v16[v17[10]];
        *(_OWORD *)&v15[v17[11]] = *(_OWORD *)&v16[v17[11]];
        *(_OWORD *)&v15[v17[12]] = *(_OWORD *)&v16[v17[12]];
        *(_OWORD *)&v15[v17[13]] = *(_OWORD *)&v16[v17[13]];
        *(_QWORD *)&v15[v17[14]] = *(_QWORD *)&v16[v17[14]];
        v15[v17[15]] = v16[v17[15]];
        v25 = v17[16];
        __dst = &v15[v25];
        v26 = &v16[v25];
        v27 = sub_10000B4C8(&qword_100547B50);
        v28 = *(_QWORD *)(v27 - 8);
        __src = v26;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 10, v27))
        {
          v29 = type metadata accessor for ArtworkImage.Placeholder(0);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          v30 = v56;
          v7 = v54;
        }
        else
        {
          v51 = v28;
          v52 = v27;
          v31 = type metadata accessor for Playlist.Variant(0);
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(__src, 1, v31))
          {
            v33 = sub_10000B4C8(&qword_100548358);
            v34 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            v34 = __dst;
            (*(void (**)(void))(v32 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
          }
          v7 = v54;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 10, v52);
          v30 = v56;
        }
        *(_QWORD *)&v15[v17[17]] = *(_QWORD *)&v16[v17[17]];
        *(_QWORD *)&v15[v17[18]] = *(_QWORD *)&v16[v17[18]];
        *(_QWORD *)&v15[v17[19]] = *(_QWORD *)&v16[v17[19]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v30 + 56))(v15, 0, 1, v17);
      }
      v35 = v9[8];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_10000B4C8(&qword_1005482D8);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v59(v36, v37, v7);
        v59(&v36[*(int *)(v38 + 20)], &v37[*(int *)(v38 + 20)], v7);
        v41 = *(int *)(v38 + 24);
        v42 = &v36[v41];
        v43 = &v37[v41];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v43, 1, v7))
        {
          v44 = sub_10000B4C8(&qword_1005481F0);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v59(v42, v43, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v42, 0, 1, v7);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      a3 = v58;
      *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
      *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v45 = *(int *)(a3 + 20);
    v46 = &a1[v45];
    v47 = &a2[v45];
    sub_100011694((uint64_t)&a1[v45], &qword_100547EE0);
    v48 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
    {
      v49 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v46, v47, v49);
      swift_storeEnumTagMultiPayload(v46, v48, 1);
    }
    else
    {
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100055B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055B9C);
}

uint64_t sub_100055B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_10000B4C8(&qword_100549390);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10000B4C8(&qword_1005484F8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100055C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100055C24);
}

uint64_t sub_100055C24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_10000B4C8(&qword_100549390);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10000B4C8(&qword_1005484F8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100055CA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_10002E8E4(319, (unint64_t *)&unk_100549400, type metadata accessor for TopChartsWidgetTimelineProvider.Entry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

unint64_t sub_100055D60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549888;
  if (!qword_100549888)
  {
    v1 = sub_100011650(&qword_100549518);
    v2[0] = sub_100055DE4();
    v2[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549888);
  }
  return result;
}

unint64_t sub_100055DE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549890;
  if (!qword_100549890)
  {
    v1 = sub_100011650(&qword_100549510);
    v2[0] = sub_100055E68();
    v2[1] = sub_10001254C(&qword_100549630, type metadata accessor for BackgroundModifier, (uint64_t)&unk_100425FE4);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549890);
  }
  return result;
}

unint64_t sub_100055E68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549898;
  if (!qword_100549898)
  {
    v1 = sub_100011650(&qword_100549508);
    v2[0] = sub_100012324(&qword_1005498A0, &qword_100549500, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549898);
  }
  return result;
}

unint64_t sub_100055EF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_1005498A8;
  if (!qword_1005498A8)
  {
    v1 = sub_100011650(&qword_1005495E0);
    v3[0] = sub_100011650(&qword_1005495D0);
    v3[1] = sub_10004FAE8();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    v2[1] = sub_100012324(&qword_1005489D8, &qword_100548860, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005498A8);
  }
  return result;
}

uint64_t sub_100055F9C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004825E4, 1);
}

uint64_t sub_100055FAC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004825BC, 1);
}

uint64_t sub_100055FBC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482594, 1);
}

uint64_t sub_100055FCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100055FF4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_10005601C()
{
  unint64_t result;

  result = qword_100549978;
  if (!qword_100549978)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100549978);
  }
  return result;
}

uint64_t sub_100056060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100048370(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100056068(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000560D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005499B0;
  if (!qword_1005499B0)
  {
    v1 = sub_100011650(&qword_1005499A8);
    v2[0] = sub_10005615C();
    v2[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005499B0);
  }
  return result;
}

unint64_t sub_10005615C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1005499B8;
  if (!qword_1005499B8)
  {
    v1 = sub_100011650(&qword_100549998);
    v2[0] = sub_100012324(&qword_1005499C0, &qword_1005499C8, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1005499B8);
  }
  return result;
}

unint64_t sub_1000561E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549A00;
  if (!qword_100549A00)
  {
    v1 = sub_100011650(&qword_1005499F8);
    v2[0] = sub_100056264();
    v2[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549A00);
  }
  return result;
}

unint64_t sub_100056264()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549A08;
  if (!qword_100549A08)
  {
    v1 = sub_100011650(&qword_1005499E8);
    v2[0] = sub_100012324(&qword_100549A10, &qword_100549A18, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549A08);
  }
  return result;
}

unint64_t sub_1000562E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549A38;
  if (!qword_100549A38)
  {
    v1 = sub_100011650(&qword_100549A30);
    v2[0] = sub_10005638C(&qword_100549A40, &qword_100549A20, &qword_100549A58, &qword_100549A60);
    v2[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549A38);
  }
  return result;
}

uint64_t sub_10005638C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100011650(a2);
    v9[0] = sub_100012324(&qword_100549A48, &qword_100549A50, (const char *)&protocol conformance descriptor for _LayoutRoot<A>);
    v9[1] = sub_100012324(a3, a4, (const char *)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005642C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_100056468(uint64_t a1)
{
  sub_10002EBA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

_QWORD *sub_100056498(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

_QWORD *sub_1000564C0(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

unint64_t sub_1000564E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549AA0;
  if (!qword_100549AA0)
  {
    v1 = sub_100011650(&qword_100549A98);
    v2[0] = sub_10005656C();
    v2[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549AA0);
  }
  return result;
}

unint64_t sub_10005656C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549AA8;
  if (!qword_100549AA8)
  {
    v1 = sub_100011650(&qword_100549A88);
    v2[0] = sub_10005638C(&qword_100549AB0, &qword_100549AB8, &qword_100549AC0, &qword_100549AC8);
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549AA8);
  }
  return result;
}

unint64_t sub_1000565F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_100549AE8;
  if (!qword_100549AE8)
  {
    v1 = sub_100011650(&qword_100549AE0);
    v3[0] = sub_100011650(&qword_100549AF0);
    v3[1] = sub_1000566A4();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    v2[1] = sub_10001254C(&qword_100549580, type metadata accessor for ErrorMessageModifier, (uint64_t)&unk_1004250F8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549AE8);
  }
  return result;
}

unint64_t sub_1000566A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549AF8;
  if (!qword_100549AF8)
  {
    v1 = sub_100011650(&qword_100549AF0);
    v2[0] = sub_100056728();
    v2[1] = sub_10001254C((unint64_t *)&qword_100548850, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549AF8);
  }
  return result;
}

unint64_t sub_100056728()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549B00;
  if (!qword_100549B00)
  {
    v1 = sub_100011650(&qword_100549B08);
    v2[0] = sub_10002F800((unint64_t *)&qword_100549B10, &qword_100549B18, (uint64_t (*)(void))sub_1000567CC, (uint64_t)&protocol witness table for _FlexFrameLayout);
    v2[1] = sub_100012324(&qword_100549B40, &qword_100549B48, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549B00);
  }
  return result;
}

unint64_t sub_1000567CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100549B20;
  if (!qword_100549B20)
  {
    v1 = sub_100011650(&qword_100549B28);
    v2[0] = sub_100012324(&qword_100549B30, &qword_100549B38, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549B20);
  }
  return result;
}

uint64_t sub_100056850()
{
  _QWORD v1[2];

  v1[0] = sub_100011650(&qword_1005498B0);
  v1[1] = sub_100012324(&qword_1005498C0, &qword_1005498B0, (const char *)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_1000568B4()
{
  _QWORD v1[4];

  v1[0] = sub_100011650(&qword_100549988);
  v1[1] = sub_100011650(&qword_100548820);
  v1[2] = sub_100012324(&qword_100549990, &qword_100549988, (const char *)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v1[3] = sub_100056068((unint64_t *)&qword_100548838, &qword_100548820, (uint64_t (*)(void))sub_100029E98, (uint64_t (*)(void))sub_100029F1C);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
}

uint64_t sub_100056964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for NoContentText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for NoContentText(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NoContentText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoContentText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoContentText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoContentText()
{
  return &type metadata for NoContentText;
}

uint64_t sub_100056AD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100482628, 1);
}

uint64_t sub_100056AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  v56 = a3;
  v55 = a4;
  v6 = sub_10000B4C8(&qword_100549B60);
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  v58 = a2;
  v9 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v10 = Text.init<A>(_:)(&v57, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = static Font.subheadline.getter(v10);
  v18 = Text.font(_:)(v17, v10, v12, v16, v14);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_release(v17);
  v25 = v22 & 1;
  sub_10001DA20(v10, v12, v16);
  v26 = swift_bridgeObjectRelease(v14);
  v27 = static Font.Weight.semibold.getter(v26);
  v28 = Text.fontWeight(_:)(*(_QWORD *)&v27, 0, v18, v20, v25, v24);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_10001DA20(v18, v20, v25);
  swift_bridgeObjectRelease(v24);
  if (qword_1005477D8 != -1)
    swift_once(&qword_1005477D8, sub_100033C14);
  v35 = v32 & 1;
  v36 = sub_10000B4C8(&qword_100548AA0);
  v37 = sub_10000D78C(v36, (uint64_t)qword_100561258);
  v38 = sub_100012324(&qword_100549740, &qword_100548AA0, (const char *)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v39 = Text.foregroundStyle<A>(_:)(v37, v28, v30, v35, v34, v36, v38);
  v41 = v40;
  v43 = v42;
  v45 = v44 & 1;
  sub_10001DA20(v28, v30, v35);
  swift_bridgeObjectRelease(v34);
  v57 = v39;
  v58 = v41;
  v59 = v45;
  v60 = v43;
  View.unredacted()(&type metadata for Text, &protocol witness table for Text);
  sub_10001DA20(v39, v41, v45);
  swift_bridgeObjectRelease(v43);
  KeyPath = swift_getKeyPath(&unk_100426128);
  v48 = v53;
  v47 = v54;
  v49 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v55, v8, v54);
  v50 = v49 + *(int *)(sub_10000B4C8(&qword_100549B68) + 36);
  *(_QWORD *)v50 = KeyPath;
  *(_BYTE *)(v50 + 8) = v56;
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v8, v47);
}

uint64_t sub_100056D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100056AE4(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_100056D98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100056DC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100056DE8(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100056E0C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

unint64_t sub_100056E34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_100549B70;
  if (!qword_100549B70)
  {
    v1 = sub_100011650(&qword_100549B68);
    v3[0] = &type metadata for Text;
    v3[1] = &protocol witness table for Text;
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    v2[1] = sub_100012324(&qword_100549B78, &qword_100549B80, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_100549B70);
  }
  return result;
}

id sub_100056EDC()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for RecentlyPlayedWidgetDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100057260();
  qword_100561348 = (uint64_t)result;
  return result;
}

uint64_t sub_100056F18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_10000B4C8(&qword_100548338);
  v1[3] = v2;
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100056F78, 0, 0);
}

uint64_t sub_100056F78(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint8_t *v15;
  _QWORD *v16;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "ITEMS", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 16);

  sub_10005E07C(*(_QWORD *)(v7 + 16)+ OBJC_IVAR____TtCC12MusicWidgets32RecentlyPlayedWidgetDataProviderP33_7972873AA1FE9FEE4C8EA581A865DD0F5Cache__items, v6);
  v8 = sub_10006AFD0(*(_QWORD *)(v6 + *(int *)(v5 + 44)), *(_QWORD *)(v6 + *(int *)(v5 + 44) + 8));
  v9 = sub_100011694(v6, &qword_100548338);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  if (v8)
  {
    if (v12)
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ITEMS cache hit", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    sub_10005CBC4(v8);
    swift_task_dealloc(*(_QWORD *)(v1 + 32));
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v8);
  }
  else
  {
    if (v12)
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ITEMS cache miss", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    v16 = (_QWORD *)swift_task_alloc(dword_100549BD4);
    *(_QWORD *)(v1 + 40) = v16;
    *v16 = v1;
    v16[1] = sub_100057194;
    return sub_1000575AC();
  }
}

uint64_t sub_100057194(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 40);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v4 + 32));
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 48) = a1;
    return swift_task_switch(sub_100057218, 0, 0);
  }
}

uint64_t sub_100057218()
{
  uint64_t v0;
  uint64_t v1;

  sub_10005CBC4(*(_QWORD *)(v0 + 48));
  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

id sub_100057260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id result;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RecentlyPlayedWidgetDataProvider.Cache(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  sub_100016794(0, 0x796C746E65636552, 0xEE00646579616C50, 0x736D657469, 0xE500000000000000, (char *)(v7+ OBJC_IVAR____TtCC12MusicWidgets32RecentlyPlayedWidgetDataProviderP33_7972873AA1FE9FEE4C8EA581A865DD0F5Cache__items));
  *(_QWORD *)(v1 + 16) = v7;
  static Logger.music(_:)(0xD000000000000020, 0x8000000100426160);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2);
  static MusicDataRequest.preferredExecutionMethod.setter(v5);
  v8 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v9 = objc_msgSend(v8, "processName");

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if (v10 == 0x646957636973754DLL && v12 == 0xEC00000073746567)
  {
    v13 = swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, 0x646957636973754DLL, 0xEC00000073746567, 0);
    v13 = swift_bridgeObjectRelease(v12);
    if ((v14 & 1) == 0)
      return (id)v1;
  }
  v15 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "running in widget process, disabling fallback cache", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v19 = objc_msgSend(v18, "artworkDataSource");
  if (v19)
  {
    v20 = v19;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v21 = (void *)swift_dynamicCastObjCClass(v20);
    if (v21)
      objc_msgSend(v21, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v20);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100057574()
{
  uint64_t v0;

  sub_100011694(v0+ OBJC_IVAR____TtCC12MusicWidgets32RecentlyPlayedWidgetDataProviderP33_7972873AA1FE9FEE4C8EA581A865DD0F5Cache__items, &qword_100548338);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000575AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[4] = v0;
  v2 = type metadata accessor for MusicSubscription.PrivacyAcknowledgementPolicy(0);
  v1[5] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[6] = v3;
  v1[7] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicSubscription(0);
  v1[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[9] = v5;
  v1[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100057634, 0, 0);
}

id sub_100057634()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v8;
  char v9;
  char v10;
  char v11;
  char v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v2 = objc_msgSend(v1, "processName");

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  if (v3 == 0x636973754DLL && v5 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    v7 = 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0x636973754DLL, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v5);
  }
  *(_BYTE *)(v0 + 160) = v7 & 1;
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (qword_1005613B0)
  {
    v8 = (id)qword_1005613B0;
    v9 = sub_10009ED54();
    v10 = (v9 == 2) | v9;
    v11 = sub_10009ED5C();

    v12 = v11 | v10;
    if (v11 == 2)
      v12 = v10;
  }
  else
  {
    v12 = 1;
  }
  *(_BYTE *)(v0 + 161) = v12 & 1;
  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v14 = result;
    v16 = *(_QWORD *)(v0 + 48);
    v15 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)(v0 + 162) = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, enum case for MusicSubscription.PrivacyAcknowledgementPolicy.promptProhibited(_:), v17);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to static MusicSubscription.current(privacyAcknowledgementPolicy:)[1]);
    *(_QWORD *)(v0 + 88) = v18;
    *v18 = v0;
    v18[1] = sub_100057824;
    return (id)static MusicSubscription.current(privacyAcknowledgementPolicy:)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100057824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_100057BC4;
  else
    v6 = sub_1000578A8;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1000578A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  int v13;
  int v14;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = MusicSubscription.canPlayCatalogContent.getter();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v14 = *(unsigned __int8 *)(v0 + 162);
    v13 = *(unsigned __int8 *)(v0 + 161);
    v8 = *(unsigned __int8 *)(v0 + 160);
    v9 = swift_slowAlloc(26, -1);
    *(_DWORD *)(v0 + 144) = v8;
    *(_DWORD *)v9 = 67240960;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 148);
    *(_WORD *)(v9 + 8) = 1026;
    *(_DWORD *)(v0 + 148) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 148, v0 + 152);
    *(_WORD *)(v9 + 14) = 1026;
    *(_DWORD *)(v0 + 152) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 156);
    *(_WORD *)(v9 + 20) = 1026;
    *(_DWORD *)(v0 + 156) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 156, v0 + 160);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FETCH ITEMS: isMusicProcess: %{BOOL,public}d, areRemoteQueriesEnabled: %{BOOL,public}d, canShowCloudMedia: %{BOOL,public}d, canPlayCatalogContent: %{BOOL,public}d", (uint8_t *)v9, 0x1Au);
    swift_slowDealloc(v9, -1, -1);
  }

  if (((*(_BYTE *)(v0 + 160) & *(_BYTE *)(v0 + 161) & *(_BYTE *)(v0 + 162)) & v4 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(dword_100549BDC);
    *(_QWORD *)(v0 + 104) = v10;
    *v10 = v0;
    v10[1] = sub_100057ABC;
    return sub_100057EA4();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_100549BE4);
    *(_QWORD *)(v0 + 112) = v12;
    *v12 = v0;
    v12[1] = sub_100057B58;
    return sub_100058EA0();
  }
}

uint64_t sub_100057ABC(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v5 = *v1;
  swift_task_dealloc(v4);
  if (a1)
  {
    v6 = v3[10];
    v7 = v3[7];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_100549BE4);
    v3[14] = v9;
    *v9 = v5;
    v9[1] = sub_100057B58;
    return sub_100058EA0();
  }
}

uint64_t sub_100057B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*v2 + 112);
  v5 = *v2;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 56);
  swift_task_dealloc(*(_QWORD *)(v5 + 80));
  v7 = swift_task_dealloc(v6);
  if (!v1)
    v7 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v7);
}

uint64_t sub_100057BC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = v0[12];
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v0[12];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v15 = v7;
    v0[2] = v5;
    swift_errorRetain(v5);
    v8 = sub_10000B4C8(&qword_100549268);
    v9 = String.init<A>(describing:)(v0 + 2, v8);
    v11 = v10;
    v0[3] = sub_1000759E0(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FETCH ITEMS: error checking subscription status %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v12 = v0[12];

    swift_errorRelease(v12);
    swift_errorRelease(v12);
  }
  v13 = (_QWORD *)swift_task_alloc(dword_100549BE4);
  v0[15] = v13;
  *v13 = v0;
  v13[1] = sub_100057D98;
  return sub_100058EA0();
}

uint64_t sub_100057D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100057E5C;
  }
  else
  {
    *(_QWORD *)(v4 + 136) = a1;
    v6 = sub_100057E0C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100057E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100057E5C()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100057EA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[4] = v0;
  v2 = sub_10000B4C8(&qword_100549DB0);
  v1[5] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[6] = v3;
  v1[7] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100549DB8);
  v1[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[9] = v5;
  v1[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicDataRequest.Source(0);
  v1[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[12] = v7;
  v1[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100549DC0);
  v1[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[15] = v9;
  v1[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100057F88, 0, 0);
}

uint64_t sub_100057F88(uint64_t a1)
{
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1[17] = OBJC_IVAR____TtC12MusicWidgets32RecentlyPlayedWidgetDataProvider_logger;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FETCH REMOTE ITEMS", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = v1[13];
  v5 = v1[14];
  v7 = v1[11];
  v8 = v1[12];

  v9 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v10 = sub_10001254C(&qword_100549DC8, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyPlayedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyPlayedMusicItem);
  MusicRecentlyPlayedRequest.init()(v9, &protocol witness table for RecentlyPlayedMusicItem, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, enum case for MusicDataRequest.Source.widgets(_:), v7);
  MusicRecentlyPlayedRequest.source.setter(v6, v5);
  MusicRecentlyPlayedRequest.limit.setter(5, 0, v5);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicRecentlyPlayedRequest.response()[1]);
  v1[18] = v11;
  *v11 = v1;
  v11[1] = sub_1000580F4;
  return MusicRecentlyPlayedRequest.response()(v1[10], v1[14]);
}

uint64_t sub_1000580F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000582FC;
  else
    v3 = sub_100058158;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100058158()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  MusicRecentlyPlayedResponse.items.getter(*(_QWORD *)(v0 + 64));
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10054A558 + dword_10054A558);
  v1 = (_QWORD *)swift_task_alloc(unk_10054A55C);
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_1000581D0;
  return v3((uint64_t)&unk_100549DD0, 0);
}

uint64_t sub_1000581D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_10005824C, 0, 0);
}

uint64_t sub_10005824C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  sub_10005CBC4(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1000582FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 152);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 128);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v23 = v7;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_10000B4C8(&qword_100549268);
    v9 = String.init<A>(describing:)(v0 + 16, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 24) = sub_1000759E0(v9, v10, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FETCH REMOTE ITEMS ERROR %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100058524(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100058584, 0, 0);
}

uint64_t sub_100058584()
{
  uint64_t *v0;
  uint64_t **v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16))(v0[6], v0[3], v0[4]);
  v1 = (uint64_t **)swift_task_alloc(dword_100549DDC);
  v0[7] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_1000585E4;
  return sub_100058638(v0[2], v0[6]);
}

uint64_t sub_1000585E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100058638(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2[8] = a1;
  v2[9] = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v6 = type metadata accessor for MusicSiriRepresentation(0);
  v2[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[15] = v7;
  v2[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100547B48);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Station(0);
  v2[20] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[21] = v12;
  v2[22] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Playlist(0);
  v2[23] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[24] = v14;
  v2[25] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v2[26] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[27] = v16;
  v2[28] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v2[29] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[30] = v18;
  v2[31] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000587D4, 0, 0);
}

uint64_t sub_1000587D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 72), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 96))(v5, *(_QWORD *)(v0 + 232));
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v10 = Album.id.getter(v9);
    v12 = v11;
    v13 = Album.catalogID.getter(v10);
  }
  else
  {
    if (v4 != enum case for RecentlyPlayedMusicItem.playlist(_:))
    {
      v22 = *(_QWORD *)(v0 + 240);
      v21 = *(_QWORD *)(v0 + 248);
      v23 = *(_QWORD *)(v0 + 232);
      if (v4 == enum case for RecentlyPlayedMusicItem.station(_:))
      {
        v25 = *(_QWORD *)(v0 + 168);
        v24 = *(_QWORD *)(v0 + 176);
        v26 = *(_QWORD *)(v0 + 160);
        (*(void (**)(_QWORD, _QWORD))(v22 + 96))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
        v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v21, v26);
        v10 = Station.id.getter(v27);
        v12 = v28;
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      }
      else
      {
        v10 = RecentlyPlayedMusicItem.id.getter();
        v12 = v29;
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      }
      v18 = 0;
      v19 = 0;
      goto LABEL_10;
    }
    v15 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 96))(v15, *(_QWORD *)(v0 + 232));
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v15, v7);
    v10 = Playlist.id.getter(v16);
    v12 = v17;
    v13 = Playlist.catalogID.getter(v10);
  }
  v18 = v13;
  v19 = v14;
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
LABEL_10:
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v12;
  *(_QWORD *)(v0 + 256) = v18;
  *(_QWORD *)(v0 + 264) = v19;
  v31 = *(_QWORD *)(v0 + 144);
  v30 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 32) = RecentlyPlayedMusicItem.title.getter(v20);
  *(_QWORD *)(v0 + 40) = v32;
  *(_QWORD *)(v0 + 48) = RecentlyPlayedMusicItem.subtitle.getter();
  *(_QWORD *)(v0 + 56) = v33;
  v34 = sub_10005CFC4(v30);
  RecentlyPlayedMusicItem.artwork.getter(v34);
  v35 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 272) = v35;
  v36 = *(_QWORD *)(v35 - 8);
  *(_QWORD *)(v0 + 280) = v36;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 144), &qword_100547B48);
    *(_QWORD *)(v0 + 304) = 0;
    v37 = *(_QWORD *)(v0 + 32);
    v38 = *(_QWORD *)(v0 + 40);
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 24);
    v42 = *(_QWORD *)(v0 + 128);
    v41 = *(_QWORD *)(v0 + 136);
    v43 = *(_QWORD *)(v0 + 112);
    v44 = *(_QWORD *)(v0 + 120);
    *(int8x16_t *)(v0 + 312) = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
    *(_QWORD *)(v0 + 328) = v38;
    *(_QWORD *)(v0 + 336) = v37;
    *(_QWORD *)(v0 + 344) = v40;
    *(_QWORD *)(v0 + 352) = v39;
    v45 = sub_10005D754(v41);
    v46 = RecentlyPlayedMusicItem.siriRepresentation.getter(v45);
    *(_QWORD *)(v0 + 360) = MusicSiriRepresentation.id.getter(v46);
    *(_QWORD *)(v0 + 368) = v47;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    *(_QWORD *)(v0 + 376) = sub_10005D930();
    v48 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 384) = static MainActor.shared.getter();
    v49 = dispatch thunk of Actor.unownedExecutor.getter(v48, &protocol witness table for MainActor);
    return swift_task_switch(sub_100058C6C, v49, v50);
  }
  else
  {
    if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
      v52 = 350;
    else
      v52 = 275;
    v53 = (_QWORD *)swift_task_alloc(dword_10054925C);
    *(_QWORD *)(v0 + 288) = v53;
    *v53 = v0;
    v53[1] = sub_100058B0C;
    return sub_100039994(v52);
  }
}

uint64_t sub_100058B0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_100058B88, 0, 0);
}

uint64_t sub_100058B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  *(int8x16_t *)(v0 + 312) = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  *(_QWORD *)(v0 + 328) = v2;
  *(_QWORD *)(v0 + 336) = v1;
  *(_QWORD *)(v0 + 344) = v4;
  *(_QWORD *)(v0 + 352) = v3;
  v9 = sub_10005D754(v5);
  v10 = RecentlyPlayedMusicItem.siriRepresentation.getter(v9);
  *(_QWORD *)(v0 + 360) = MusicSiriRepresentation.id.getter(v10);
  *(_QWORD *)(v0 + 368) = v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  *(_QWORD *)(v0 + 376) = sub_10005D930();
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 384) = static MainActor.shared.getter();
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_100058C6C, v13, v14);
}

uint64_t sub_100058C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = swift_release(*(_QWORD *)(v0 + 384));
  type metadata accessor for InternalMusicPlayer(0, v7);
  v8 = static InternalMusicPlayer.localDevice.getter();
  v9 = InternalMusicPlayer.state<A>(for:)(v6, v1, &protocol witness table for RecentlyPlayedMusicItem);
  v10 = swift_release(v8);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v5 + 104))(v3, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4, v11);
  *(_BYTE *)(v0 + 392) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v2, v3) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v12(v3, v4);
  v12(v2, v4);
  return swift_task_switch(sub_100058D64, 0, 0);
}

uint64_t sub_100058D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 72);
  sub_100036164(0, 0, *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 312), v7, *(_QWORD *)(v0 + 304), *(_QWORD **)(v0 + 64), 1.0, v8, *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), 0, 0,
    0,
    0,
    0,
    0,
    (uint64_t)_swiftEmptyArrayStorage,
    *(_QWORD *)(v0 + 376),
    *(_BYTE *)(v0 + 392));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v8);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100058EA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1[14] = v0;
  v2 = *(_QWORD *)(type metadata accessor for WidgetMusicItem(0) - 8);
  v1[15] = v2;
  v3 = (*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v3);
  v1[17] = swift_task_alloc(v3);
  v1[18] = swift_task_alloc(v3);
  v1[19] = swift_task_alloc(v3);
  v4 = type metadata accessor for Date(0);
  v1[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[21] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[22] = swift_task_alloc(v6);
  v1[23] = swift_task_alloc(v6);
  v7 = sub_10000B4C8(&qword_1005482B0);
  v1[24] = v7;
  v1[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_1005481F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v8);
  v1[27] = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist(0);
  v1[28] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[29] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v11);
  v1[31] = swift_task_alloc(v11);
  v1[32] = swift_task_alloc(v11);
  v12 = type metadata accessor for Album(0);
  v1[33] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[34] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[35] = swift_task_alloc(v14);
  v1[36] = swift_task_alloc(v14);
  v1[37] = swift_task_alloc(v14);
  v15 = sub_10000B4C8(&qword_100549D70);
  v1[38] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[39] = v16;
  v1[40] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000B4C8(&qword_100547AD8);
  v1[41] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v1[42] = v18;
  v1[43] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000B4C8(&qword_100549D78);
  v1[44] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v1[45] = v20;
  v1[46] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000B4C8(&qword_100549D80);
  v1[47] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v1[48] = v22;
  v1[49] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_100549D88);
  v1[50] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v1[51] = v24;
  v1[52] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10000B4C8(&qword_100549D90);
  v1[53] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v1[54] = v26;
  v1[55] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100059148, 0, 0);
}

uint64_t sub_100059148(uint64_t a1)
{
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  __n128 v8;
  _QWORD *v9;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FETCH LOCAL ITEMS", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = v1[53];
  v6 = v1[33];

  MusicLibraryRequest.init()(v6, &protocol witness table for Album);
  MusicLibraryRequest.wantsDetailedLibraryResponse.setter(1, v5);
  KeyPath = swift_getKeyPath(&unk_1004261A8);
  MusicLibraryRequest.sort<A>(by:ascending:)(KeyPath, 0, v5);
  v8 = swift_release(KeyPath);
  MusicLibraryRequest.limit.setter(5, v5, v8);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v1[56] = v9;
  *v9 = v1;
  v9[1] = sub_100059280;
  return MusicLibraryRequest.response()(v1[49], v1[53]);
}

uint64_t sub_100059280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 448);
  *(_QWORD *)(*(_QWORD *)v1 + 456) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10005B83C;
  else
    v3 = sub_1000592E4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000592E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  __n128 v7;
  _QWORD *v8;

  v2 = v0[48];
  v1 = v0[49];
  v3 = v0[47];
  v4 = v0[44];
  v5 = v0[28];
  MusicLibraryResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  MusicLibraryRequest.init()(v5, &protocol witness table for Playlist);
  MusicLibraryRequest.wantsDetailedLibraryResponse.setter(1, v4);
  KeyPath = swift_getKeyPath(&unk_1004261D0);
  MusicLibraryRequest.sort<A>(by:ascending:)(KeyPath, 0, v4);
  v7 = swift_release(KeyPath);
  MusicLibraryRequest.limit.setter(5, v4, v7);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v0[58] = v8;
  *v8 = v0;
  v8[1] = sub_1000593CC;
  return MusicLibraryRequest.response()(v0[40], v0[44]);
}

uint64_t sub_1000593CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10005B9AC;
  else
    v3 = sub_100059430;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100059430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, _QWORD);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 304);
  MusicLibraryResponse.items.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = sub_10005DE8C(&qword_100549D98, &qword_100549D88);
  v6 = dispatch thunk of Collection.count.getter(v1, v5);
  if (v6)
  {
    v7 = v6;
    v8 = v0 + 88;
    v9 = *(_QWORD *)(v0 + 400);
    sub_100038434(0, v6 & ~(v6 >> 63), 0);
    result = dispatch thunk of Collection.startIndex.getter(v9);
    if (v7 < 0)
    {
      __break(1u);
      goto LABEL_37;
    }
    v95 = v0 + 16;
    v11 = *(_QWORD *)(v0 + 272);
    do
    {
      v12 = *(_QWORD *)(v0 + 296);
      v13 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v95, v8, *(_QWORD *)(v0 + 400), v5);
      (*(void (**)(uint64_t))(v11 + 16))(v12);
      v13(v95, 0);
      v14 = v8;
      v15 = v5;
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_100038434(v16 > 1, v17 + 1, 1);
      v18 = *(_QWORD *)(v0 + 400);
      v19 = *(_QWORD *)(v0 + 296);
      v20 = *(_QWORD *)(v0 + 264);
      _swiftEmptyArrayStorage[2] = v17 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v17, v19, v20);
      dispatch thunk of Collection.formIndex(after:)(v14, v18, v15);
      --v7;
      v5 = v15;
      v8 = v14;
    }
    while (v7);
  }
  v21 = *(_QWORD *)(v0 + 328);
  *(_QWORD *)(v0 + 80) = _swiftEmptyArrayStorage;
  v22 = sub_10005DE8C(&qword_100547C18, &qword_100547AD8);
  v23 = dispatch thunk of Collection.count.getter(v21, v22);
  if (!v23)
    goto LABEL_13;
  v24 = v23;
  v25 = v0 + 104;
  v26 = *(_QWORD *)(v0 + 328);
  sub_1000383EC(0, v23 & ~(v23 >> 63), 0);
  result = dispatch thunk of Collection.startIndex.getter(v26);
  if (v24 < 0)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v96 = v0 + 48;
  v27 = *(_QWORD *)(v0 + 232);
  do
  {
    v28 = *(_QWORD *)(v0 + 256);
    v29 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v96, v25, *(_QWORD *)(v0 + 328), v22);
    (*(void (**)(uint64_t))(v27 + 16))(v28);
    v29(v96, 0);
    v30 = v25;
    v31 = v22;
    v33 = _swiftEmptyArrayStorage[2];
    v32 = _swiftEmptyArrayStorage[3];
    if (v33 >= v32 >> 1)
      sub_1000383EC(v32 > 1, v33 + 1, 1);
    v34 = *(_QWORD *)(v0 + 328);
    v35 = *(_QWORD *)(v0 + 256);
    v36 = *(_QWORD *)(v0 + 224);
    _swiftEmptyArrayStorage[2] = v33 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v33, v35, v36);
    dispatch thunk of Collection.formIndex(after:)(v30, v34, v31);
    --v24;
    v22 = v31;
    v25 = v30;
  }
  while (v24);
LABEL_13:
  v37 = *(_QWORD *)(v0 + 272);
  v38 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 96) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 480) = _swiftEmptyArrayStorage;
  v39 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v39 + 16))
  {
    if (_swiftEmptyArrayStorage[2] >= 6uLL)
    {
LABEL_25:
      swift_bridgeObjectRelease(v39);
      v58 = *(_QWORD *)(v0 + 440);
      v59 = *(_QWORD *)(v0 + 416);
      v77 = *(_QWORD *)(v0 + 432);
      v78 = *(_QWORD *)(v0 + 424);
      v75 = *(_QWORD *)(v0 + 408);
      v76 = *(_QWORD *)(v0 + 400);
      v61 = *(_QWORD *)(v0 + 360);
      v60 = *(_QWORD *)(v0 + 368);
      v62 = *(_QWORD *)(v0 + 344);
      v74 = *(_QWORD *)(v0 + 352);
      v63 = *(_QWORD *)(v0 + 328);
      v64 = *(_QWORD *)(v0 + 336);
      v79 = *(_QWORD *)(v0 + 392);
      v80 = *(_QWORD *)(v0 + 320);
      v81 = *(_QWORD *)(v0 + 296);
      v82 = *(_QWORD *)(v0 + 288);
      v83 = *(_QWORD *)(v0 + 280);
      v84 = *(_QWORD *)(v0 + 256);
      v85 = *(_QWORD *)(v0 + 248);
      v86 = *(_QWORD *)(v0 + 240);
      v87 = *(_QWORD *)(v0 + 216);
      v88 = *(_QWORD *)(v0 + 208);
      v89 = *(_QWORD *)(v0 + 200);
      v90 = *(_QWORD *)(v0 + 184);
      v91 = *(_QWORD *)(v0 + 176);
      v92 = *(_QWORD *)(v0 + 152);
      v93 = *(_QWORD *)(v0 + 144);
      v94 = *(_QWORD *)(v0 + 136);
      v97 = *(_QWORD *)(v0 + 128);
      v65 = swift_bridgeObjectRetain();
      sub_10005CBC4(v65);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v74);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v59, v76);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v58, v78);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v79);
      swift_task_dealloc(v60);
      swift_task_dealloc(v62);
      swift_task_dealloc(v80);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      swift_task_dealloc(v85);
      swift_task_dealloc(v86);
      swift_task_dealloc(v87);
      swift_task_dealloc(v88);
      swift_task_dealloc(v89);
      swift_task_dealloc(v90);
      swift_task_dealloc(v91);
      swift_task_dealloc(v92);
      swift_task_dealloc(v93);
      swift_task_dealloc(v94);
      swift_task_dealloc(v97);
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
    }
    v40 = *(_QWORD *)(v0 + 288);
    v41 = *(_QWORD *)(v0 + 264);
    v42 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v40, v39 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), v41);
    Album.lastPlayedDate.getter(v42);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v41);
  }
  else
  {
    if (!_swiftEmptyArrayStorage[2] || _swiftEmptyArrayStorage[2] > 5uLL)
      goto LABEL_25;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v38 + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = &_swiftEmptyArrayStorage[2];
  v43 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v43 + 16))
  {
    v44 = *(_QWORD *)(v0 + 248);
    v45 = *(_QWORD *)(v0 + 224);
    v46 = *(_QWORD *)(v0 + 232);
    v47 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v46 + 16))(v44, v43 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), v45);
    Playlist.lastPlayedDate.getter(v47);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v48 = (uint64_t *)(v0 + 80);
  v49 = v0 + 96;
  v51 = *(_QWORD *)(v0 + 208);
  v50 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v0 + 200);
  v53 = *(_QWORD *)(v0 + 160);
  v54 = *(_QWORD *)(v0 + 168);
  v55 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v55;
  v56 = v52 + v55;
  sub_1000161C0(v50, v52);
  sub_1000161C0(v51, v56);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  LODWORD(v51) = v57(v52, 1, v53);
  result = v57(v56, 1, v53);
  if ((_DWORD)v51 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v39 = *v48;
      goto LABEL_25;
    }
    if (*(_QWORD *)(*(_QWORD *)v49 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v49+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v67 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 520) = v67;
      *v67 = v0;
      v67[1] = sub_10005B178;
      return sub_10005BB44(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 240));
    }
    goto LABEL_39;
  }
  if ((_DWORD)result == 1)
  {
    if (*(_QWORD *)(*v48 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v48+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
      v66 = (_QWORD *)swift_task_alloc(dword_100549DAC);
      *(_QWORD *)(v0 + 512) = v66;
      *v66 = v0;
      v66[1] = sub_10005AAB4;
      return sub_10005C42C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 280));
    }
    goto LABEL_38;
  }
  v69 = *(_QWORD *)(v0 + 176);
  v68 = *(_QWORD *)(v0 + 184);
  v70 = *(_QWORD *)(v0 + 160);
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v71(v68, *(_QWORD *)(v0 + 200), v70);
  v71(v69, v56, v70);
  result = static Date.< infix(_:_:)(v68, v69);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v49 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v49+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v72 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 496) = v72;
      *v72 = v0;
      v72[1] = sub_100059D14;
      return sub_10005BB44(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 240));
    }
    goto LABEL_40;
  }
  if (*(_QWORD *)(*v48 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v48+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v73 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 504) = v73;
    *v73 = v0;
    v73[1] = sub_10005A3E4;
    return sub_10005C42C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 280));
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100059D14()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 496));
  return swift_task_switch(sub_100059D68, 0, 0);
}

uint64_t sub_100059D68()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_1000750AC(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_1000750AC(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v11 = (_QWORD *)(v1 + 16);
  sub_100033568(v9, v1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v3);
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v6, v7);
  v12(v5, v7);
  *(_QWORD *)(v0 + 480) = v1;
  v13 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v13 + 16))
  {
    if (*v11 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v13);
      v33 = *(_QWORD *)(v0 + 440);
      v34 = *(_QWORD *)(v0 + 416);
      v56 = *(_QWORD *)(v0 + 432);
      v57 = *(_QWORD *)(v0 + 424);
      v54 = *(_QWORD *)(v0 + 408);
      v55 = *(_QWORD *)(v0 + 400);
      v35 = *(_QWORD *)(v0 + 360);
      v36 = *(_QWORD *)(v0 + 368);
      v37 = *(_QWORD *)(v0 + 344);
      v53 = *(_QWORD *)(v0 + 352);
      v38 = *(_QWORD *)(v0 + 328);
      v39 = *(_QWORD *)(v0 + 336);
      v58 = *(_QWORD *)(v0 + 392);
      v59 = *(_QWORD *)(v0 + 320);
      v60 = *(_QWORD *)(v0 + 296);
      v61 = *(_QWORD *)(v0 + 288);
      v62 = *(_QWORD *)(v0 + 280);
      v63 = *(_QWORD *)(v0 + 256);
      v64 = *(_QWORD *)(v0 + 248);
      v65 = *(_QWORD *)(v0 + 240);
      v66 = *(_QWORD *)(v0 + 216);
      v67 = *(_QWORD *)(v0 + 208);
      v68 = *(_QWORD *)(v0 + 200);
      v69 = *(_QWORD *)(v0 + 184);
      v70 = *(_QWORD *)(v0 + 176);
      v71 = *(_QWORD *)(v0 + 152);
      v72 = *(_QWORD *)(v0 + 144);
      v73 = *(_QWORD *)(v0 + 136);
      v74 = *(_QWORD *)(v0 + 128);
      v40 = swift_bridgeObjectRetain();
      sub_10005CBC4(v40);
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v53);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v34, v55);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v33, v57);
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v58);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 272);
    v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v14, v13 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    Album.lastPlayedDate.getter(v17);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v11 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v11;
  v18 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 232);
    v22 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v19, v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
    Playlist.lastPlayedDate.getter(v22);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v23 = (uint64_t *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v29;
  v30 = v26 + v29;
  sub_1000161C0(v24, v26);
  sub_1000161C0(v25, v30);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v25) = v31(v26, 1, v27);
  result = v31(v30, 1, v27);
  if ((_DWORD)v25 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v13 = *v23;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v44 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 520) = v44;
      *v44 = v0;
      v44[1] = sub_10005B178;
      v45 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 128);
      return sub_10005BB44(v46, v45);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v23 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v41 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 512) = v41;
    *v41 = v0;
    v41[1] = sub_10005AAB4;
    v42 = *(_QWORD *)(v0 + 280);
    v43 = *(_QWORD *)(v0 + 136);
    return sub_10005C42C(v43, v42);
  }
  v48 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 184);
  v49 = *(_QWORD *)(v0 + 160);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v50(v47, *(_QWORD *)(v0 + 200), v49);
  v50(v48, v30, v49);
  result = static Date.< infix(_:_:)(v47, v48);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v51 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 496) = v51;
      *v51 = v0;
      v51[1] = sub_100059D14;
      v45 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 152);
      return sub_10005BB44(v46, v45);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v23 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v52 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 504) = v52;
    *v52 = v0;
    v52[1] = sub_10005A3E4;
    v42 = *(_QWORD *)(v0 + 280);
    v43 = *(_QWORD *)(v0 + 144);
    return sub_10005C42C(v43, v42);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10005A3E4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 504));
  return swift_task_switch(sub_10005A438, 0, 0);
}

uint64_t sub_10005A438()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_1000750AC(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_1000750AC(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v11 = (_QWORD *)(v1 + 16);
  sub_100033568(v9, v1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v3);
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v6, v7);
  v12(v5, v7);
  *(_QWORD *)(v0 + 480) = v1;
  v13 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v13 + 16))
  {
    if (*v11 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v13);
      v33 = *(_QWORD *)(v0 + 440);
      v34 = *(_QWORD *)(v0 + 416);
      v56 = *(_QWORD *)(v0 + 432);
      v57 = *(_QWORD *)(v0 + 424);
      v54 = *(_QWORD *)(v0 + 408);
      v55 = *(_QWORD *)(v0 + 400);
      v35 = *(_QWORD *)(v0 + 360);
      v36 = *(_QWORD *)(v0 + 368);
      v37 = *(_QWORD *)(v0 + 344);
      v53 = *(_QWORD *)(v0 + 352);
      v38 = *(_QWORD *)(v0 + 328);
      v39 = *(_QWORD *)(v0 + 336);
      v58 = *(_QWORD *)(v0 + 392);
      v59 = *(_QWORD *)(v0 + 320);
      v60 = *(_QWORD *)(v0 + 296);
      v61 = *(_QWORD *)(v0 + 288);
      v62 = *(_QWORD *)(v0 + 280);
      v63 = *(_QWORD *)(v0 + 256);
      v64 = *(_QWORD *)(v0 + 248);
      v65 = *(_QWORD *)(v0 + 240);
      v66 = *(_QWORD *)(v0 + 216);
      v67 = *(_QWORD *)(v0 + 208);
      v68 = *(_QWORD *)(v0 + 200);
      v69 = *(_QWORD *)(v0 + 184);
      v70 = *(_QWORD *)(v0 + 176);
      v71 = *(_QWORD *)(v0 + 152);
      v72 = *(_QWORD *)(v0 + 144);
      v73 = *(_QWORD *)(v0 + 136);
      v74 = *(_QWORD *)(v0 + 128);
      v40 = swift_bridgeObjectRetain();
      sub_10005CBC4(v40);
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v53);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v34, v55);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v33, v57);
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v58);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 272);
    v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v14, v13 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    Album.lastPlayedDate.getter(v17);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v11 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v11;
  v18 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 232);
    v22 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v19, v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
    Playlist.lastPlayedDate.getter(v22);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v23 = (uint64_t *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v29;
  v30 = v26 + v29;
  sub_1000161C0(v24, v26);
  sub_1000161C0(v25, v30);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v25) = v31(v26, 1, v27);
  result = v31(v30, 1, v27);
  if ((_DWORD)v25 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v13 = *v23;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v44 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 520) = v44;
      *v44 = v0;
      v44[1] = sub_10005B178;
      v45 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 128);
      return sub_10005BB44(v46, v45);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v23 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v41 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 512) = v41;
    *v41 = v0;
    v41[1] = sub_10005AAB4;
    v42 = *(_QWORD *)(v0 + 280);
    v43 = *(_QWORD *)(v0 + 136);
    return sub_10005C42C(v43, v42);
  }
  v48 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 184);
  v49 = *(_QWORD *)(v0 + 160);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v50(v47, *(_QWORD *)(v0 + 200), v49);
  v50(v48, v30, v49);
  result = static Date.< infix(_:_:)(v47, v48);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v51 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 496) = v51;
      *v51 = v0;
      v51[1] = sub_100059D14;
      v45 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 152);
      return sub_10005BB44(v46, v45);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v23 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v23+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v52 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 504) = v52;
    *v52 = v0;
    v52[1] = sub_10005A3E4;
    v42 = *(_QWORD *)(v0 + 280);
    v43 = *(_QWORD *)(v0 + 144);
    return sub_10005C42C(v43, v42);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10005AAB4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 512));
  return swift_task_switch(sub_10005AB08, 0, 0);
}

uint64_t sub_10005AB08()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_1000750AC(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_1000750AC(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v10 = (_QWORD *)(v1 + 16);
  sub_100033568(v8, v1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  *(_QWORD *)(v0 + 480) = v1;
  v11 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v11 + 16))
  {
    if (*v10 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v11);
      v31 = *(_QWORD *)(v0 + 440);
      v32 = *(_QWORD *)(v0 + 416);
      v54 = *(_QWORD *)(v0 + 432);
      v55 = *(_QWORD *)(v0 + 424);
      v52 = *(_QWORD *)(v0 + 408);
      v53 = *(_QWORD *)(v0 + 400);
      v33 = *(_QWORD *)(v0 + 360);
      v34 = *(_QWORD *)(v0 + 368);
      v35 = *(_QWORD *)(v0 + 344);
      v51 = *(_QWORD *)(v0 + 352);
      v36 = *(_QWORD *)(v0 + 328);
      v37 = *(_QWORD *)(v0 + 336);
      v56 = *(_QWORD *)(v0 + 392);
      v57 = *(_QWORD *)(v0 + 320);
      v58 = *(_QWORD *)(v0 + 296);
      v59 = *(_QWORD *)(v0 + 288);
      v60 = *(_QWORD *)(v0 + 280);
      v61 = *(_QWORD *)(v0 + 256);
      v62 = *(_QWORD *)(v0 + 248);
      v63 = *(_QWORD *)(v0 + 240);
      v64 = *(_QWORD *)(v0 + 216);
      v65 = *(_QWORD *)(v0 + 208);
      v66 = *(_QWORD *)(v0 + 200);
      v67 = *(_QWORD *)(v0 + 184);
      v68 = *(_QWORD *)(v0 + 176);
      v69 = *(_QWORD *)(v0 + 152);
      v70 = *(_QWORD *)(v0 + 144);
      v71 = *(_QWORD *)(v0 + 136);
      v72 = *(_QWORD *)(v0 + 128);
      v38 = swift_bridgeObjectRetain();
      sub_10005CBC4(v38);
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v51);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v32, v53);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v55);
      swift_task_dealloc(v31);
      swift_task_dealloc(v32);
      swift_task_dealloc(v56);
      swift_task_dealloc(v34);
      swift_task_dealloc(v35);
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v12 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 272);
    v15 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v12, v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v13);
    Album.lastPlayedDate.getter(v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v10 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v10;
  v16 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v16 + 16))
  {
    v17 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 232);
    v20 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(v17, v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), v18);
    Playlist.lastPlayedDate.getter(v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v21 = (uint64_t *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 168);
  v27 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v27;
  v28 = v24 + v27;
  sub_1000161C0(v22, v24);
  sub_1000161C0(v23, v28);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v23) = v29(v24, 1, v25);
  result = v29(v28, 1, v25);
  if ((_DWORD)v23 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v11 = *v21;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v42 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 520) = v42;
      *v42 = v0;
      v42[1] = sub_10005B178;
      v43 = *(_QWORD *)(v0 + 240);
      v44 = *(_QWORD *)(v0 + 128);
      return sub_10005BB44(v44, v43);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v21 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v21+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v39 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 512) = v39;
    *v39 = v0;
    v39[1] = sub_10005AAB4;
    v40 = *(_QWORD *)(v0 + 280);
    v41 = *(_QWORD *)(v0 + 136);
    return sub_10005C42C(v41, v40);
  }
  v46 = *(_QWORD *)(v0 + 176);
  v45 = *(_QWORD *)(v0 + 184);
  v47 = *(_QWORD *)(v0 + 160);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v48(v45, *(_QWORD *)(v0 + 200), v47);
  v48(v46, v28, v47);
  result = static Date.< infix(_:_:)(v45, v46);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v49 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 496) = v49;
      *v49 = v0;
      v49[1] = sub_100059D14;
      v43 = *(_QWORD *)(v0 + 240);
      v44 = *(_QWORD *)(v0 + 152);
      return sub_10005BB44(v44, v43);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v21 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v21+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v50 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 504) = v50;
    *v50 = v0;
    v50[1] = sub_10005A3E4;
    v40 = *(_QWORD *)(v0 + 280);
    v41 = *(_QWORD *)(v0 + 144);
    return sub_10005C42C(v41, v40);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10005B178()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  return swift_task_switch(sub_10005B1CC, 0, 0);
}

uint64_t sub_10005B1CC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 480)) & 1) != 0)
    v1 = *(_QWORD *)(v0 + 480);
  else
    v1 = sub_1000750AC(0, **(_QWORD **)(v0 + 488) + 1, 1, *(_QWORD *)(v0 + 480));
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
    v1 = sub_1000750AC(v2 > 1, v3 + 1, 1, v1);
  v4 = v0 + 96;
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 200) + *(int *)(v0 + 528);
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v8 = (_QWORD *)(v1 + 16);
  sub_100033568(v5, v1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v3);
  sub_100011694(v7, &qword_1005481F0);
  *(_QWORD *)(v0 + 480) = v1;
  v9 = *(_QWORD *)(v0 + 80);
  if (*(_QWORD *)(v9 + 16))
  {
    if (*v8 >= 6uLL)
    {
LABEL_17:
      swift_bridgeObjectRelease(v9);
      v29 = *(_QWORD *)(v0 + 440);
      v30 = *(_QWORD *)(v0 + 416);
      v52 = *(_QWORD *)(v0 + 432);
      v53 = *(_QWORD *)(v0 + 424);
      v50 = *(_QWORD *)(v0 + 408);
      v51 = *(_QWORD *)(v0 + 400);
      v31 = *(_QWORD *)(v0 + 360);
      v32 = *(_QWORD *)(v0 + 368);
      v33 = *(_QWORD *)(v0 + 344);
      v49 = *(_QWORD *)(v0 + 352);
      v34 = *(_QWORD *)(v0 + 328);
      v35 = *(_QWORD *)(v0 + 336);
      v54 = *(_QWORD *)(v0 + 392);
      v55 = *(_QWORD *)(v0 + 320);
      v56 = *(_QWORD *)(v0 + 296);
      v57 = *(_QWORD *)(v0 + 288);
      v58 = *(_QWORD *)(v0 + 280);
      v59 = *(_QWORD *)(v0 + 256);
      v60 = *(_QWORD *)(v0 + 248);
      v61 = *(_QWORD *)(v0 + 240);
      v62 = *(_QWORD *)(v0 + 216);
      v63 = *(_QWORD *)(v0 + 208);
      v64 = *(_QWORD *)(v0 + 200);
      v65 = *(_QWORD *)(v0 + 184);
      v66 = *(_QWORD *)(v0 + 176);
      v67 = *(_QWORD *)(v0 + 152);
      v68 = *(_QWORD *)(v0 + 144);
      v69 = *(_QWORD *)(v0 + 136);
      v70 = *(_QWORD *)(v0 + 128);
      v36 = swift_bridgeObjectRetain();
      sub_10005CBC4(v36);
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v49);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v30, v51);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v29, v53);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v54);
      swift_task_dealloc(v32);
      swift_task_dealloc(v33);
      swift_task_dealloc(v55);
      swift_task_dealloc(v56);
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      swift_task_dealloc(v60);
      swift_task_dealloc(v61);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v64);
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    v10 = *(_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 272);
    v13 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v10, v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
    Album.lastPlayedDate.getter(v13);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || *v8 > 5uLL)
      goto LABEL_17;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 160));
  }
  *(_QWORD *)(v0 + 488) = v8;
  v14 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(v15, v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
    Playlist.lastPlayedDate.getter(v18);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 160));
  }
  v19 = (uint64_t *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 200);
  v23 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 168);
  v25 = *(int *)(*(_QWORD *)(v0 + 192) + 48);
  *(_DWORD *)(v0 + 528) = v25;
  v26 = v22 + v25;
  sub_1000161C0(v20, v22);
  sub_1000161C0(v21, v26);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v21) = v27(v22, 1, v23);
  result = v27(v26, 1, v23);
  if ((_DWORD)v21 == 1)
  {
    if ((_DWORD)result == 1)
    {
      v9 = *v19;
      goto LABEL_17;
    }
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v40 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 520) = v40;
      *v40 = v0;
      v40[1] = sub_10005B178;
      v41 = *(_QWORD *)(v0 + 240);
      v42 = *(_QWORD *)(v0 + 128);
      return sub_10005BB44(v42, v41);
    }
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
  {
    if (!*(_QWORD *)(*v19 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v19+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v37 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 512) = v37;
    *v37 = v0;
    v37[1] = sub_10005AAB4;
    v38 = *(_QWORD *)(v0 + 280);
    v39 = *(_QWORD *)(v0 + 136);
    return sub_10005C42C(v39, v38);
  }
  v44 = *(_QWORD *)(v0 + 176);
  v43 = *(_QWORD *)(v0 + 184);
  v45 = *(_QWORD *)(v0 + 160);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32);
  v46(v43, *(_QWORD *)(v0 + 200), v45);
  v46(v44, v26, v45);
  result = static Date.< infix(_:_:)(v43, v44);
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + 80)), *(_QWORD *)(v0 + 224));
      sub_10005DECC(0, 1, (uint64_t (*)(void))sub_100075608, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
      v47 = (_QWORD *)swift_task_alloc(dword_100549DA4);
      *(_QWORD *)(v0 + 496) = v47;
      *v47 = v0;
      v47[1] = sub_100059D14;
      v41 = *(_QWORD *)(v0 + 240);
      v42 = *(_QWORD *)(v0 + 152);
      return sub_10005BB44(v42, v41);
    }
    goto LABEL_33;
  }
  if (*(_QWORD *)(*v19 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *v19+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 272) + 80)), *(_QWORD *)(v0 + 264));
    sub_10005DECC(0, 1, (uint64_t (*)(void))sub_1000755F4, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
    v48 = (_QWORD *)swift_task_alloc(dword_100549DAC);
    *(_QWORD *)(v0 + 504) = v48;
    *v48 = v0;
    v48[1] = sub_10005A3E4;
    v38 = *(_QWORD *)(v0 + 280);
    v39 = *(_QWORD *)(v0 + 144);
    return sub_10005C42C(v39, v38);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10005B83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(v1, *(_QWORD *)(v0 + 424));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005B9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 408);
  v1 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 400);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 368);
  v8 = *(_QWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 184);
  v21 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(v4, *(_QWORD *)(v0 + 424));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005BB44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v5);
  v2[11] = swift_task_alloc(v5);
  v6 = sub_10000B4C8(&qword_100547B58);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100547B60);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicSiriRepresentation(0);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100547B48);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100547A38);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v2[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[21] = v14;
  v2[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005BCB4, 0, 0);
}

uint64_t sub_10005BCB4()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int8x16_t **v41;

  v1 = v0[10].i64[0];
  v2 = v0[10].i64[1];
  v3 = v0[9].i64[1];
  v0[1].i64[0] = Playlist.name.getter();
  v0[1].i64[1] = v4;
  v5 = Playlist.curatorName.getter();
  v0[2].i64[0] = v5;
  v0[2].i64[1] = v6;
  v7 = Playlist.id.getter(v5);
  v9 = v8;
  _StringGuts.grow(_:)(55);
  v10._object = (void *)0x8000000100444D70;
  v10._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v10);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v7;
  v11._object = v9;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v9);
  v12._countAndFlagsBits = 0xD00000000000001FLL;
  v12._object = (void *)0x8000000100444D90;
  String.append(_:)(v12);
  URL.init(string:)(0, 0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v14 = v0[9].i64[0];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[10].i64[1] + 32))(v0[11].i64[0], v0[9].i64[1], v0[10].i64[0]);
    v15 = swift_bridgeObjectRelease(v9);
    Playlist.artwork.getter(v15);
    v16 = type metadata accessor for Artwork(0);
    v0[11].i64[1] = v16;
    v17 = *(_QWORD *)(v16 - 8);
    v0[12].i64[0] = v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
    {
      v18 = sub_100011694(v0[9].i64[0], &qword_100547B48);
      v0[13].i64[1] = 0;
      v19 = v0[1].i64[0];
      v20 = v0[1].i64[1];
      v21 = v0[8].i64[0];
      v22 = v0[8].i64[1];
      v23 = v0[7].i64[0];
      v24 = v0[7].i64[1];
      v25 = v0[6].i64[0];
      v26 = v0[6].i64[1];
      v0[14] = vextq_s8(v0[2], v0[2], 8uLL);
      v0[15].i64[0] = v20;
      v0[15].i64[1] = v19;
      Playlist.variant.getter(v18);
      v27 = sub_10000B4C8(&qword_100547B50);
      v28 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 0, 10, v27);
      v29 = Playlist.id.getter(v28);
      v0[16].i64[0] = v29;
      v0[16].i64[1] = v30;
      v0[17].i64[0] = Playlist.catalogID.getter(v29);
      v0[17].i64[1] = v31;
      v32 = Playlist.siriRepresentation.getter();
      v0[18].i64[0] = MusicSiriRepresentation.id.getter(v32);
      v0[18].i64[1] = v33;
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
      v34 = sub_10000B4C8(&qword_100547B68);
      v35 = swift_allocObject(v34, 34, 7);
      v0[19].i64[0] = v35;
      *(_OWORD *)(v35 + 16) = xmmword_100424BA0;
      Playlist.contentRating.getter();
      *(_BYTE *)(v35 + 32) = TextBadge.init(for:isPlayable:)(v26, 1);
      Playlist.favoriteStatus.getter();
      v36 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v25, 0, 1, v36);
      *(_BYTE *)(v35 + 33) = TextBadge.init(for:)(v25);
      v37 = type metadata accessor for MainActor(0);
      v0[19].i64[1] = static MainActor.shared.getter();
      v38 = dispatch thunk of Actor.unownedExecutor.getter(v37, &protocol witness table for MainActor);
      return swift_task_switch(sub_10005C208, v38, v39);
    }
    else
    {
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v40 = 350;
      else
        v40 = 275;
      v41 = (int8x16_t **)swift_task_alloc(dword_10054925C);
      v0[12].i64[1] = (uint64_t)v41;
      *v41 = v0;
      v41[1] = (int8x16_t *)sub_10005BFF8;
      return sub_100039994(v40);
    }
  }
  return result;
}

uint64_t sub_10005BFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_10005C074, 0, 0);
}

uint64_t sub_10005C074(uint64_t a1)
{
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1[13].i64[1] = v1[13].i64[0];
  v2 = v1[1].i64[0];
  v3 = v1[1].i64[1];
  v4 = v1[8].i64[0];
  v5 = v1[8].i64[1];
  v6 = v1[7].i64[0];
  v7 = v1[7].i64[1];
  v8 = v1[6].i64[0];
  v9 = v1[6].i64[1];
  v1[14] = vextq_s8(v1[2], v1[2], 8uLL);
  v1[15].i64[0] = v3;
  v1[15].i64[1] = v2;
  Playlist.variant.getter(a1);
  v10 = sub_10000B4C8(&qword_100547B50);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 10, v10);
  v12 = Playlist.id.getter(v11);
  v1[16].i64[0] = v12;
  v1[16].i64[1] = v13;
  v1[17].i64[0] = Playlist.catalogID.getter(v12);
  v1[17].i64[1] = v14;
  v15 = Playlist.siriRepresentation.getter();
  v1[18].i64[0] = MusicSiriRepresentation.id.getter(v15);
  v1[18].i64[1] = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v17 = sub_10000B4C8(&qword_100547B68);
  v18 = swift_allocObject(v17, 34, 7);
  v1[19].i64[0] = v18;
  *(_OWORD *)(v18 + 16) = xmmword_100424BA0;
  Playlist.contentRating.getter();
  *(_BYTE *)(v18 + 32) = TextBadge.init(for:isPlayable:)(v9, 1);
  Playlist.favoriteStatus.getter();
  v19 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
  *(_BYTE *)(v18 + 33) = TextBadge.init(for:)(v8);
  v20 = type metadata accessor for MainActor(0);
  v1[19].i64[1] = static MainActor.shared.getter();
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor);
  return swift_task_switch(sub_10005C208, v21, v22);
}

uint64_t sub_10005C208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = swift_release(*(_QWORD *)(v0 + 312));
  type metadata accessor for InternalMusicPlayer(0, v6);
  v7 = static InternalMusicPlayer.localDevice.getter();
  v8 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v0 + 320) = v8;
  v9 = InternalMusicPlayer.state<A>(for:)(v5, v8, &protocol witness table for Playlist);
  v10 = swift_release(v7);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v4 + 104))(v2, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3, v11);
  *(_BYTE *)(v0 + 328) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v1, v2) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v2, v3);
  v12(v1, v3);
  return swift_task_switch(sub_10005C300, 0, 0);
}

uint64_t sub_10005C300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  sub_100036164(0, 0, *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 224), v2, *(_QWORD *)(v0 + 216), *(_QWORD **)(v0 + 48), 1.0, v5, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), 0, 0,
    0,
    0,
    0,
    0,
    (uint64_t)_swiftEmptyArrayStorage,
    *(_QWORD *)(v0 + 304),
    *(_BYTE *)(v0 + 328));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9, v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C42C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v5);
  v2[11] = swift_task_alloc(v5);
  v6 = sub_10000B4C8(&qword_100547B58);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100547B60);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicSiriRepresentation(0);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100547B48);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100547A38);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v2[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[21] = v14;
  v2[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005C59C, 0, 0);
}

uint64_t sub_10005C59C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  v0[2] = Album.title.getter();
  v0[3] = v4;
  v5 = Album.artistName.getter();
  v0[4] = v5;
  v0[5] = v6;
  v7 = Album.id.getter(v5);
  v9 = v8;
  _StringGuts.grow(_:)(55);
  v10._object = (void *)0x8000000100444D70;
  v10._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v10);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v7;
  v11._object = v9;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v9);
  v12._countAndFlagsBits = 0xD00000000000001FLL;
  v12._object = (void *)0x8000000100444D90;
  String.append(_:)(v12);
  URL.init(string:)(0, 0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v14 = v0[18];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[21] + 32))(v0[22], v0[19], v0[20]);
    v15 = swift_bridgeObjectRelease(v9);
    Album.artwork.getter(v15);
    v16 = type metadata accessor for Artwork(0);
    v0[23] = v16;
    v17 = *(_QWORD *)(v16 - 8);
    v0[24] = v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
    {
      sub_100011694(v0[18], &qword_100547B48);
      v18 = v0[4];
      v19 = v0[5];
      v20 = v0[2];
      v21 = v0[3];
      v23 = v0[16];
      v22 = v0[17];
      v24 = v0[14];
      v25 = v0[15];
      v26 = v0[12];
      v27 = v0[13];
      v0[27] = 0;
      v0[28] = v19;
      v0[29] = v18;
      v0[30] = v21;
      v0[31] = v20;
      v28 = sub_10000B4C8(&qword_100547B50);
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 1, 10, v28);
      v30 = Album.id.getter(v29);
      v0[32] = v30;
      v0[33] = v31;
      v0[34] = Album.catalogID.getter(v30);
      v0[35] = v32;
      v33 = Album.siriRepresentation.getter();
      v0[36] = MusicSiriRepresentation.id.getter(v33);
      v0[37] = v34;
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      v35 = sub_10000B4C8(&qword_100547B68);
      v36 = swift_allocObject(v35, 34, 7);
      v0[38] = v36;
      *(_OWORD *)(v36 + 16) = xmmword_100424BA0;
      Album.contentRating.getter();
      *(_BYTE *)(v36 + 32) = TextBadge.init(for:isPlayable:)(v27, 1);
      Album.favoriteStatus.getter();
      v37 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v26, 0, 1, v37);
      *(_BYTE *)(v36 + 33) = TextBadge.init(for:)(v26);
      v38 = type metadata accessor for MainActor(0);
      v0[39] = static MainActor.shared.getter();
      v39 = dispatch thunk of Actor.unownedExecutor.getter(v38, &protocol witness table for MainActor);
      return swift_task_switch(sub_10005CACC, v39, v40);
    }
    else
    {
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v41 = 350;
      else
        v41 = 275;
      v42 = (_QWORD *)swift_task_alloc(dword_10054925C);
      v0[25] = v42;
      *v42 = v0;
      v42[1] = sub_10005C8C8;
      return sub_100039994(v41);
    }
  }
  return result;
}

uint64_t sub_10005C8C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_10005C944, 0, 0);
}

uint64_t sub_10005C944()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[2];
  v4 = v0[3];
  v6 = v0[16];
  v5 = v0[17];
  v7 = v0[14];
  v8 = v0[15];
  v9 = v0[12];
  v10 = v0[13];
  v0[27] = v0[26];
  v0[28] = v2;
  v0[29] = v1;
  v0[30] = v4;
  v0[31] = v3;
  v11 = sub_10000B4C8(&qword_100547B50);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 10, v11);
  v13 = Album.id.getter(v12);
  v0[32] = v13;
  v0[33] = v14;
  v0[34] = Album.catalogID.getter(v13);
  v0[35] = v15;
  v16 = Album.siriRepresentation.getter();
  v0[36] = MusicSiriRepresentation.id.getter(v16);
  v0[37] = v17;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v18 = sub_10000B4C8(&qword_100547B68);
  v19 = swift_allocObject(v18, 34, 7);
  v0[38] = v19;
  *(_OWORD *)(v19 + 16) = xmmword_100424BA0;
  Album.contentRating.getter();
  *(_BYTE *)(v19 + 32) = TextBadge.init(for:isPlayable:)(v10, 1);
  Album.favoriteStatus.getter();
  v20 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
  *(_BYTE *)(v19 + 33) = TextBadge.init(for:)(v9);
  v21 = type metadata accessor for MainActor(0);
  v0[39] = static MainActor.shared.getter();
  v22 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
  return swift_task_switch(sub_10005CACC, v22, v23);
}

uint64_t sub_10005CACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = swift_release(*(_QWORD *)(v0 + 312));
  type metadata accessor for InternalMusicPlayer(0, v6);
  v7 = static InternalMusicPlayer.localDevice.getter();
  v8 = type metadata accessor for Album(0);
  *(_QWORD *)(v0 + 320) = v8;
  v9 = InternalMusicPlayer.state<A>(for:)(v5, v8, &protocol witness table for Album);
  v10 = swift_release(v7);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v4 + 104))(v2, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3, v11);
  *(_BYTE *)(v0 + 328) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v1, v2) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v2, v3);
  v12(v1, v3);
  return swift_task_switch(sub_10005C300, 0, 0);
}

uint64_t sub_10005CBC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;

  v2 = type metadata accessor for WidgetMusicItem(0);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v9 = *(_QWORD *)(v4 + 72);
    v19 = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v10 = 136446210;
    v21 = v10;
    v20 = (char *)&type metadata for Any + 8;
    do
    {
      v16 = sub_10005CF44(v8, (uint64_t)v6);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v11 = swift_slowAlloc(12, -1);
        v12 = swift_slowAlloc(32, -1);
        v22 = v12;
        *(_DWORD *)v11 = v21;
        v13 = sub_100036564();
        v15 = v14;
        *(_QWORD *)(v11 + 4) = sub_1000759E0(v13, v14, &v22);
        swift_bridgeObjectRelease(v15);
        sub_10005CF88((uint64_t)v6);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "ITEM %{public}s", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy(v12, 1, v20);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);

      }
      else
      {

        sub_10005CF88((uint64_t)v6);
      }
      v8 += v9;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease(v19);
  }
  return result;
}

uint64_t sub_10005CD90()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC12MusicWidgets32RecentlyPlayedWidgetDataProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10005CDE8()
{
  return type metadata accessor for RecentlyPlayedWidgetDataProvider(0);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetDataProvider(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100549BB8, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetDataProvider);
}

uint64_t sub_10005CE04()
{
  return type metadata accessor for RecentlyPlayedWidgetDataProvider.Cache(0);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetDataProvider.Cache(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_100549CC8, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetDataProvider.Cache);
}

void sub_10005CE20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10005CE8C(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_10005CE8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_100549CD8)
  {
    v2 = sub_100011650(&qword_100547DE8);
    v3 = sub_1000124C8(&qword_100547E10, &qword_100547E18, (uint64_t)&unk_100425A48, (const char *)&protocol conformance descriptor for <A> [A]);
    v4 = sub_1000124C8(&qword_100547DF0, &qword_100547DF8, (uint64_t)&unk_100425A20, (const char *)&protocol conformance descriptor for <A> [A]);
    v5 = type metadata accessor for FileBacked(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_100549CD8);
  }
}

uint64_t sub_10005CF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005CF88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005CFC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  void *v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  unint64_t v44;
  uint64_t result;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  unint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  void (*v75)(char *, uint64_t);
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  unint64_t v95;
  unint64_t v96;

  v93 = a1;
  v1 = type metadata accessor for Station(0);
  v86 = *(_QWORD *)(v1 - 8);
  v87 = v1;
  __chkstk_darwin(v1);
  v85 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist(0);
  v89 = *(_QWORD *)(v3 - 8);
  v90 = v3;
  v4 = __chkstk_darwin(v3);
  v92 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v88 = (char *)&v81 - v6;
  v7 = sub_10000B4C8(&qword_100547A38);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v82 = (char *)&v81 - v12;
  v13 = __chkstk_darwin(v11);
  v83 = (char *)&v81 - v14;
  v15 = __chkstk_darwin(v13);
  v84 = (char *)&v81 - v16;
  v17 = __chkstk_darwin(v15);
  v91 = (uint64_t)&v81 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v81 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v81 - v22;
  v24 = type metadata accessor for Album(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v81 - v29;
  v31 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v32 + 16))(v34, v94, v31);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v34, v31);
  if (v35 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v30, v34, v24);
    Album.url.getter(v36);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    v37 = type metadata accessor for URL(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    if (v39(v23, 1, v37) != 1)
    {
      v66 = *(void (**)(char *, uint64_t))(v25 + 8);
      v66(v28, v24);
      v66(v30, v24);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v93, v23, v37);
    }
    v94 = (uint64_t (*)(char *, uint64_t, uint64_t))v39;
    v92 = (char *)Album.id.getter();
    v41 = v40;
    v95 = 0;
    v96 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease(v96);
    v95 = 0xD000000000000016;
    v96 = 0x8000000100444D70;
    swift_bridgeObjectRetain();
    v42._countAndFlagsBits = (uint64_t)v92;
    v42._object = v41;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(v41);
    v43._countAndFlagsBits = 0xD00000000000001ALL;
    v43._object = (void *)0x8000000100444DF0;
    String.append(_:)(v43);
    v44 = v96;
    URL.init(string:)(v95, v96);
    swift_bridgeObjectRelease(v44);
    result = v94(v21, 1, v37);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v93, v21, v37);
      swift_bridgeObjectRelease(v41);
      v46 = *(void (**)(char *, uint64_t))(v25 + 8);
      v46(v28, v24);
      v46(v30, v24);
      return sub_100011694((uint64_t)v23, &qword_100547A38);
    }
    __break(1u);
    goto LABEL_21;
  }
  if (v35 == enum case for RecentlyPlayedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    v48 = v88;
    v47 = v89;
    v49 = v90;
    v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v89 + 32))(v88, v34, v90);
    v51 = v91;
    Playlist.url.getter(v50);
    v52 = v92;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v92, v48, v49);
    v53 = type metadata accessor for URL(0);
    v54 = *(_QWORD *)(v53 - 8);
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    v56 = v55(v51, 1, v53);
    if ((_DWORD)v56 == 1)
    {
      v57 = Playlist.id.getter(v56);
      v59 = v58;
      v95 = 0;
      v96 = 0xE000000000000000;
      _StringGuts.grow(_:)(55);
      v60._object = (void *)0x8000000100444D70;
      v60._countAndFlagsBits = 0xD000000000000016;
      String.append(_:)(v60);
      swift_bridgeObjectRetain();
      v61._countAndFlagsBits = v57;
      v61._object = v59;
      String.append(_:)(v61);
      swift_bridgeObjectRelease(v59);
      v62._countAndFlagsBits = 0xD00000000000001FLL;
      v62._object = (void *)0x8000000100444D90;
      String.append(_:)(v62);
      v63 = v96;
      v64 = v84;
      URL.init(string:)(v95, v96);
      swift_bridgeObjectRelease(v63);
      result = v55((uint64_t)v64, 1, v53);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v93, v64, v53);
        swift_bridgeObjectRelease(v59);
        v65 = *(void (**)(char *, uint64_t))(v47 + 8);
        v65(v92, v49);
        v65(v48, v49);
        return sub_100011694(v91, &qword_100547A38);
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    v75 = *(void (**)(char *, uint64_t))(v47 + 8);
    v75(v52, v49);
    v75(v48, v49);
    v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32);
    v77 = v93;
    v78 = v51;
  }
  else
  {
    if (v35 != enum case for RecentlyPlayedMusicItem.station(_:))
    {
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      v79 = type metadata accessor for URL(0);
      v80 = *(_QWORD *)(v79 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48))(v10, 1, v79);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v93, v10, v79);
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      }
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    v68 = v85;
    v67 = v86;
    v69 = v87;
    v70 = (*(uint64_t (**)(char *, char *, uint64_t))(v86 + 32))(v85, v34, v87);
    v71 = (uint64_t)v83;
    Station.url.getter(v70);
    v53 = type metadata accessor for URL(0);
    v72 = *(_QWORD *)(v53 - 8);
    v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
    if (v73((char *)v71, 1, v53) == 1)
    {
      v74 = v82;
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v73(v74, 1, v53);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v93, v74, v53);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
        return sub_100011694(v71, &qword_100547A38);
      }
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 32);
    v77 = v93;
    v78 = v71;
  }
  return v76(v77, v78, v53);
}

uint64_t sub_10005D754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    v13 = sub_10000B4C8(&qword_100547B50);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
LABEL_7:
    v20 = a1;
    v21 = 1;
    goto LABEL_8;
  }
  v15 = v12;
  if (v12 == enum case for RecentlyPlayedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    Playlist.variant.getter(v16);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = sub_10000B4C8(&qword_100547B50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 10, v17);
  }
  v19 = enum case for RecentlyPlayedMusicItem.station(_:);
  v13 = sub_10000B4C8(&qword_100547B50);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  if (v15 != v19)
    goto LABEL_7;
  v20 = a1;
  v21 = 8;
LABEL_8:
  v14(v20, v21, 10, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

_QWORD *sub_10005D930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for Station(0);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  __chkstk_darwin(v2);
  v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100547B58);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100547B60);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Album(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v1, v17);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for RecentlyPlayedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v20, v13);
    v22 = sub_10000B4C8(&qword_100547B68);
    v23 = swift_allocObject(v22, 34, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100424BA0;
    Album.contentRating.getter();
    *(_BYTE *)(v23 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    Album.favoriteStatus.getter();
    v24 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 0, 1, v24);
    *(_BYTE *)(v23 + 33) = TextBadge.init(for:)(v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else if (v21 == enum case for RecentlyPlayedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v26 = v38;
    v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v6, v20, v39);
    v27 = sub_10000B4C8(&qword_100547B68);
    v23 = swift_allocObject(v27, 34, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100424BA0;
    Playlist.contentRating.getter();
    *(_BYTE *)(v23 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    Playlist.favoriteStatus.getter();
    v28 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
    *(_BYTE *)(v23 + 33) = TextBadge.init(for:)(v9);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
  }
  else if (v21 == enum case for RecentlyPlayedMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v29 = v35;
    v30 = v36;
    v31 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v20, v37);
    v32 = sub_10000B4C8(&qword_100547B68);
    v23 = swift_allocObject(v32, 33, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100424BB0;
    Station.contentRating.getter();
    *(_BYTE *)(v23 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v23;
}

uint64_t sub_10005DD2C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10005DD44(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumSortProperties.lastPlayedDate.getter);
}

uint64_t sub_10005DD38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10005DD44(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistSortProperties.lastPlayedDate.getter);
}

uint64_t sub_10005DD44(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[3];
  v6 = a1[4];
  sub_10000D900(a1, v5);
  return a4(v5, v6);
}

void *sub_10005DD8C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawBufferPointer.copyMemory source has too many elements", 69, 2, "Swift/UnsafeRawBufferPointer.swift", 34, 2, 487, 0);
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_10005DE20(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t static MPPropertySet.with(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10005DE64@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_10005DE8C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100011650(a2);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for MusicItemCollection<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005DECC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native(*v4) || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = a4(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = v6 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v16 * a1;
  v18 = v15 + v16 * a1;
  result = swift_arrayDestroy(v18, v9, v13);
  if (!v9)
    goto LABEL_22;
  v20 = *(_QWORD *)(v6 + 16);
  v21 = v20 - a2;
  if (__OFSUB__(v20, a2))
    goto LABEL_28;
  if ((v21 & 0x8000000000000000) == 0)
  {
    if (v17 < v16 * a2 || v18 >= v15 + v16 * a2 + v21 * v16)
    {
      result = swift_arrayInitWithTakeFrontToBack(v18);
    }
    else if (v17 != v16 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront(v18);
    }
    v23 = *(_QWORD *)(v6 + 16);
    v24 = __OFADD__(v23, v10);
    v25 = v23 - v9;
    if (!v24)
    {
      *(_QWORD *)(v6 + 16) = v25;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v26, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005E07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100548338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E0C4()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10000D924(v0, qword_100561350);
  sub_10000D78C(v0, (uint64_t)qword_100561350);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000048);
}

uint64_t sub_10005E124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100547878 != -1)
    swift_once(&qword_100547878, sub_10005E0C4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100561350);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10005E194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to WidgetConfigurationIntent.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_100060DF8();
  *v4 = v2;
  v4[1] = sub_10005E1F8;
  return WidgetConfigurationIntent.perform()(a2, v5);
}

uint64_t sub_10005E1F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + 16);
  v3 = *v1;
  result = swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  return result;
}

uint64_t sub_10005E254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10005FB2C();
  *a1 = result;
  return result;
}

uint64_t sub_10005E278(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10005E554();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_10005E2A0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_10005E2B0()
{
  return TypeDisplayRepresentation.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100444850);
}

uint64_t sub_10005E2CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10005F430();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10005E304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_10000B4C8(&qword_100549EF8);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100548E10);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + 16);
  v15 = *(void **)(v0 + 24);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
  v17._countAndFlagsBits = v14;
  v17._object = v15;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v17);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  LocalizedStringResource.init(stringInterpolation:)(v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v19 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
  return DisplayRepresentation.init(title:subtitle:image:)(v10, v6, v3);
}

uint64_t sub_10005E4B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10005E8F4();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t MPCPlaybackEngine.Configuration.playerID.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t static MusicItemID.entityIdentifier(for:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return MusicItemID.init(_:)(a1, a2);
}

unint64_t sub_10005E554()
{
  unint64_t result;

  result = qword_100549DE0;
  if (!qword_100549DE0)
  {
    result = swift_getWitnessTable(&unk_100426230, &type metadata for TopChartsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100549DE0);
  }
  return result;
}

unint64_t sub_10005E59C()
{
  unint64_t result;

  result = qword_100549DE8;
  if (!qword_100549DE8)
  {
    result = swift_getWitnessTable(&unk_1004262C0, &type metadata for TopChartsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100549DE8);
  }
  return result;
}

unint64_t sub_10005E5E4()
{
  unint64_t result;

  result = qword_100549DF0;
  if (!qword_100549DF0)
  {
    result = swift_getWitnessTable(&unk_1004262E8, &type metadata for TopChartsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100549DF0);
  }
  return result;
}

unint64_t sub_10005E62C()
{
  unint64_t result;

  result = qword_100549DF8;
  if (!qword_100549DF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Never, &type metadata for Never);
    atomic_store(result, (unint64_t *)&qword_100549DF8);
  }
  return result;
}

uint64_t sub_10005E670(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10005E554();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_10005E6B4()
{
  unint64_t result;

  result = qword_100549E08;
  if (!qword_100549E08)
  {
    result = swift_getWitnessTable(&unk_10042635C, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E08);
  }
  return result;
}

unint64_t sub_10005E6FC()
{
  unint64_t result;

  result = qword_100549E10;
  if (!qword_100549E10)
  {
    result = swift_getWitnessTable(&unk_100426394, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E10);
  }
  return result;
}

unint64_t sub_10005E744()
{
  unint64_t result;

  result = qword_100549E18;
  if (!qword_100549E18)
  {
    result = swift_getWitnessTable(&unk_1004263C4, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E18);
  }
  return result;
}

unint64_t sub_10005E78C()
{
  unint64_t result;

  result = qword_100549E20;
  if (!qword_100549E20)
  {
    result = swift_getWitnessTable(&unk_100426570, &type metadata for ChartQuery);
    atomic_store(result, (unint64_t *)&qword_100549E20);
  }
  return result;
}

unint64_t sub_10005E7D4()
{
  unint64_t result;

  result = qword_100549E28;
  if (!qword_100549E28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_100549E28);
  }
  return result;
}

unint64_t sub_10005E81C()
{
  unint64_t result;

  result = qword_100549E30;
  if (!qword_100549E30)
  {
    result = swift_getWitnessTable(&unk_1004263FC, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E30);
  }
  return result;
}

unint64_t sub_10005E864()
{
  unint64_t result;

  result = qword_100549E38;
  if (!qword_100549E38)
  {
    result = swift_getWitnessTable(&unk_100426424, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E38);
  }
  return result;
}

unint64_t sub_10005E8AC()
{
  unint64_t result;

  result = qword_100549E40;
  if (!qword_100549E40)
  {
    result = swift_getWitnessTable(&unk_10042644C, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E40);
  }
  return result;
}

unint64_t sub_10005E8F4()
{
  unint64_t result;

  result = qword_100549E48;
  if (!qword_100549E48)
  {
    result = swift_getWitnessTable(&unk_1004264A4, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E48);
  }
  return result;
}

unint64_t sub_10005E93C()
{
  unint64_t result;

  result = qword_100549E50;
  if (!qword_100549E50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_100549E50);
  }
  return result;
}

uint64_t sub_10005E980()
{
  return sub_100012324(&qword_100549E58, &qword_100549E60, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

unint64_t sub_10005E9B0()
{
  unint64_t result;

  result = qword_100549E68;
  if (!qword_100549E68)
  {
    result = swift_getWitnessTable(&unk_1004264D4, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, (unint64_t *)&qword_100549E68);
  }
  return result;
}

uint64_t Actions.GoToArtist.Context.menuItemSubtitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_10005EA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRetain(a2);
  result = MusicItemID.init(_:)(a1, a2);
  *a3 = result;
  a3[1] = v7;
  return result;
}

uint64_t sub_10005EA64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v1[2] = a1;
  v2 = sub_10000B4C8(&qword_100549220);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[5] = swift_task_alloc(v4);
  v1[6] = swift_task_alloc(v4);
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_100549EE0) - 8);
  v1[7] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[8] = swift_task_alloc(v6);
  v1[9] = swift_task_alloc(v6);
  v7 = sub_10000B4C8(&qword_100548E10);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10054A698 + dword_10054A698);
  v8 = (_QWORD *)swift_task_alloc(unk_10054A69C);
  v1[11] = v8;
  *v8 = v1;
  v8[1] = sub_10005EB70;
  return v10((uint64_t)&unk_100549EE8, 0, (uint64_t)&off_1004F8DA8);
}

uint64_t sub_10005EB70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10005EBCC, 0, 0);
}

uint64_t sub_10005EBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v7 = _swiftEmptyArrayStorage;
    do
    {
      v9 = *(_QWORD *)(v0 + 64);
      v8 = *(_QWORD *)(v0 + 72);
      v10 = *(_QWORD *)(v0 + 24);
      sub_100011370(v5, v8, &qword_100549EE0);
      sub_100011530(v8, v9, &qword_100549EE0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v10) == 1)
      {
        sub_100011694(*(_QWORD *)(v0 + 64), &qword_100549EE0);
      }
      else
      {
        v12 = *(_QWORD *)(v0 + 40);
        v11 = *(_QWORD *)(v0 + 48);
        v13 = *(_QWORD *)(v0 + 24);
        v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
        v14(v11, *(_QWORD *)(v0 + 64), v13);
        v14(v12, v11, v13);
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
          v7 = (_QWORD *)sub_10007561C(0, v7[2] + 1, 1, (unint64_t)v7);
        v16 = v7[2];
        v15 = v7[3];
        if (v16 >= v15 >> 1)
          v7 = (_QWORD *)sub_10007561C(v15 > 1, v16 + 1, 1, (unint64_t)v7);
        v17 = *(_QWORD *)(v0 + 40);
        v18 = *(_QWORD *)(v0 + 24);
        v7[2] = v16 + 1;
        v14((uint64_t)v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v16, v17, v18);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 96), 2);
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    v7 = _swiftEmptyArrayStorage;
  }
  v20 = *(_QWORD *)(v0 + 72);
  v19 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 40);
  v22 = *(_QWORD *)(v0 + 48);
  v24 = type metadata accessor for LocalizedStringResource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v19, 1, 1, v24);
  v25 = sub_10005E8AC();
  IntentItemCollection.init(promptLabel:usesIndexedCollation:sections:)(v19, 0, v7, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor, v25);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005EE0C(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetChartDiskCache(0);
  *(_QWORD *)(v2 + 32) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + 72) = *a2;
  return swift_task_switch(sub_10005EE90, 0, 0);
}

uint64_t sub_10005EE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  if (qword_100547768 != -1)
    swift_once(&qword_100547768, sub_100009F14);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = qword_1005611D8;
  v3 = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
  *(_QWORD *)(v0 + 40) = qword_1005611D8;
  *(_QWORD *)(v0 + 48) = v3;
  v4 = *(unsigned __int8 *)(v0 + 72);
  sub_10000D964(v2 + v3, v1, type metadata accessor for WidgetChartDiskCache);
  v5 = sub_100007F1C(v4);
  sub_100060B20(v1);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = sub_100005C44(*(_BYTE *)(v0 + 72));
    LocalizedStringResource.init(stringLiteral:)(v7);
    v8 = sub_10005E8AC();
    IntentItemSection.init(_:items:)(v6, v5, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor, v8);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    v11 = *(_QWORD *)(v0 + 16);
    v12 = sub_10000B4C8(&qword_100549220);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc(dword_100547BC4);
    *(_QWORD *)(v0 + 56) = v14;
    *v14 = v0;
    v14[1] = sub_10005EFE8;
    return sub_10000ECC4(*(_BYTE *)(v0 + 72));
  }
}

uint64_t sub_10005EFE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10005F044, 0, 0);
}

uint64_t sub_10005F044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(_BYTE *)(v0 + 72);
    sub_10000D964(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 48), v2, type metadata accessor for WidgetChartDiskCache);
    swift_bridgeObjectRetain();
    sub_100008A40(v3);
    swift_bridgeObjectRelease(v1);
    sub_100060B20(v2);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = sub_100005C44(*(_BYTE *)(v0 + 72));
    LocalizedStringResource.init(stringLiteral:)(v5);
    v6 = sub_10005E8AC();
    IntentItemSection.init(_:items:)(v4, v1, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor, v6);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 16);
  v11 = sub_10000B4C8(&qword_100549220);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, v7, 1, v11);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005F144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_10000B4C8(&qword_100548E10);
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(qword_100549EB0);
  v3[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[8] = v6;
  v7 = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[9] = v7;
  v8 = (_QWORD *)swift_task_alloc(dword_100549EDC);
  v3[10] = v8;
  *v8 = v3;
  v8[1] = sub_10005F1EC;
  return sub_10005EA64(v7);
}

uint64_t sub_10005F1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10005F35C;
  else
    v3 = sub_10005F250;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10005F250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = IntentItemCollection.sections.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_bridgeObjectRetain();
  v8 = sub_10005F978(v7, v6, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  v9 = type metadata accessor for LocalizedStringResource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  v10 = sub_10005E8AC();
  IntentItemCollection.init(promptLabel:usesIndexedCollation:sections:)(v3, 0, v8, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor, v10);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005F35C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10005F3A0()
{
  unint64_t result;

  result = qword_100549E78;
  if (!qword_100549E78)
  {
    result = swift_getWitnessTable(&unk_1004265C8, &type metadata for ChartQuery);
    atomic_store(result, (unint64_t *)&qword_100549E78);
  }
  return result;
}

unint64_t sub_10005F3E8()
{
  unint64_t result;

  result = qword_100549E80;
  if (!qword_100549E80)
  {
    result = swift_getWitnessTable(&unk_100426628, &type metadata for ChartQuery);
    atomic_store(result, (unint64_t *)&qword_100549E80);
  }
  return result;
}

unint64_t sub_10005F430()
{
  unint64_t result;

  result = qword_100549E88[0];
  if (!qword_100549E88[0])
  {
    result = swift_getWitnessTable(&unk_100426304, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor);
    atomic_store(result, qword_100549E88);
  }
  return result;
}

uint64_t sub_10005F474(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100549EF0 + dword_100549EF0);
  v3 = (_QWORD *)swift_task_alloc(unk_100549EF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005F4D4;
  return v5(a1);
}

uint64_t sub_10005F4D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_10005F528(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_100549EDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000DC64;
  return sub_10005EA64(a1);
}

unint64_t sub_10005F57C()
{
  unint64_t result;

  result = qword_100549EA0;
  if (!qword_100549EA0)
  {
    result = swift_getWitnessTable(&unk_100426650, &type metadata for ChartQuery);
    atomic_store(result, (unint64_t *)&qword_100549EA0);
  }
  return result;
}

uint64_t sub_10005F5C0()
{
  return sub_100012324(&qword_100549EA8, qword_100549EB0, (const char *)&protocol conformance descriptor for IntentItemCollection<A>);
}

uint64_t sub_10005F5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10005E78C();
  *v5 = v2;
  v5[1] = sub_100012D1C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10005F658(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  *(_QWORD *)(v1 + 64) = a1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_100549EC8 + dword_100549EC8);
  v2 = (_QWORD *)swift_task_alloc(unk_100549ECC);
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v1;
  v2[1] = sub_10005F6C0;
  return v4(v1 + 16);
}

uint64_t sub_10005F6C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0 + 16;
  v2 = *(_QWORD *)(*v0 + 64);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  sub_100011530(v1, v2, &qword_100549ED0);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

ValueMetadata *type metadata accessor for ChartQuery()
{
  return &type metadata for ChartQuery;
}

ValueMetadata *type metadata accessor for TopChartsWidgetConfigurationIntent()
{
  return &type metadata for TopChartsWidgetConfigurationIntent;
}

char *sub_10005F744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[4];
  _QWORD v34[6];
  char *v35;

  v7 = sub_10000B4C8(&qword_100549210);
  v8 = __chkstk_darwin(v7);
  v32 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v25 - v11;
  result = (char *)_swiftEmptyArrayStorage;
  v35 = (char *)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v25 = v3;
    v15 = *(_QWORD *)(v10 + 72);
    v26 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v16 = a1 + v26;
    v31 = v10;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v17 = (char *)_swiftEmptyArrayStorage;
    v27 = a2;
    v28 = a3;
    v30 = v15;
    v29(v12, v16, v7);
    while (1)
    {
      IntentItem.value.getter(v34, v7);
      swift_bridgeObjectRelease(v34[1]);
      v19 = v34[2];
      v20 = v34[3];
      swift_bridgeObjectRelease(v34[5]);
      v33[2] = v19;
      v33[3] = v20;
      v33[0] = a2;
      v33[1] = a3;
      v21 = sub_10001D9DC();
      LOBYTE(v19) = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v33, &type metadata for String, &type metadata for String, v21, v21);
      swift_bridgeObjectRelease(v20);
      if ((v19 & 1) != 0)
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v22(v32, v12, v7);
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
          sub_10003848C(0, *((_QWORD *)v17 + 2) + 1, 1);
        v17 = v35;
        v24 = *((_QWORD *)v35 + 2);
        v23 = *((_QWORD *)v35 + 3);
        if (v24 >= v23 >> 1)
        {
          sub_10003848C(v23 > 1, v24 + 1, 1);
          v17 = v35;
        }
        *((_QWORD *)v17 + 2) = v24 + 1;
        v18 = v30;
        v22(&v17[v26 + v24 * v30], v32, v7);
        a2 = v27;
        a3 = v28;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v7);
        v18 = v30;
      }
      v16 += v18;
      if (!--v14)
        break;
      v29(v12, v16, v7);
    }
    return v35;
  }
  return result;
}

_QWORD *sub_10005F978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v4 = v3;
  v26 = a2;
  v27 = a3;
  v6 = sub_10000B4C8(&qword_100549220);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v29 = _swiftEmptyArrayStorage;
    sub_100038460(0, v10, 0);
    v11 = v29;
    v24 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v25 = v7;
    v12 = a1 + v24;
    v13 = *(_QWORD *)(v7 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v23 = v13;
    do
    {
      v22(v9, v12, v6);
      v14 = IntentItemSection.items.getter(v6);
      v15 = v27;
      swift_bridgeObjectRetain();
      v16 = sub_10005F744(v14, v26, v15);
      v28 = v4;
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      IntentItemSection.items.setter(v16, v6);
      v29 = v11;
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
      {
        sub_100038460(v17 > 1, v18 + 1, 1);
        v11 = v29;
      }
      v11[2] = v18 + 1;
      v19 = v23;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v11 + v24 + v18 * v23, v9, v6);
      v12 += v19;
      --v10;
      v4 = v28;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_10005FB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD v20[3];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100548E00);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v20 - v8;
  v10 = sub_10000B4C8(&qword_100548E10);
  __chkstk_darwin(v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B4C8(&qword_100549F00);
  LocalizedStringResource.init(stringLiteral:)(0x7472616843);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v17 = type metadata accessor for IntentDialog(0);
  memset(v20, 0, sizeof(v20));
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v7, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  sub_10005E78C();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v16, v12, v20, v9, v7, v3);
}

uint64_t sub_10005FD40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1[6] = a1;
  v2 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 + 64);
  v1[8] = v3;
  v1[9] = swift_task_alloc((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100547B70);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(sub_10000B4C8(&qword_100547BC8) - 8);
  v1[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v1[12] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v7);
  v1[14] = swift_task_alloc(v7);
  v8 = type metadata accessor for WidgetChartDiskCache(0);
  v1[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005FE20, 0, 0);
}

uint64_t sub_10005FE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  *(_QWORD *)(v0 + 128) = v1;
  if (!v1)
  {
    v3 = _swiftEmptyArrayStorage;
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  v2 = 0;
  v3 = _swiftEmptyArrayStorage;
  while (2)
  {
    *(_QWORD *)(v0 + 136) = v2;
    *(_QWORD *)(v0 + 144) = v3;
    v4 = *(_QWORD *)(v0 + 48) + 16 * v2;
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v4 + 40);
    v5 = qword_100547768;
    result = swift_bridgeObjectRetain();
    if (v5 != -1)
      result = swift_once(&qword_100547768, sub_100009F14);
    v7 = 0;
    v8 = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
    *(_QWORD *)(v0 + 168) = qword_1005611D8;
    *(_QWORD *)(v0 + 176) = v8;
    while (1)
    {
      *(_QWORD *)(v0 + 184) = v7;
      if (v7 >= 3)
        goto LABEL_44;
      v9 = *(_QWORD *)(v0 + 120);
      v10 = *(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 176);
      v11 = *((unsigned __int8 *)&off_1004F8DD0 + v7 + 32);
      *(_BYTE *)(v0 + 209) = v11;
      sub_10000D964(v10, v9, type metadata accessor for WidgetChartDiskCache);
      v12 = (_QWORD *)sub_100007F1C(v11);
      sub_100060B20(v9);
      if (!v12)
      {
        v34 = (_QWORD *)swift_task_alloc(dword_100547BC4);
        *(_QWORD *)(v0 + 192) = v34;
        *v34 = v0;
        v34[1] = sub_1000601C8;
        return sub_10000ECC4(v11);
      }
      v40 = v12[2];
      if (v40)
        break;
LABEL_6:
      result = swift_bridgeObjectRelease(v12);
      v7 = *(_QWORD *)(v0 + 184) + 1;
      if (*(_QWORD *)(v0 + 184) == 2)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
        v3 = *(_QWORD **)(v0 + 144);
        goto LABEL_37;
      }
    }
    v13 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 160);
    v16 = v12[4];
    v15 = v12[5];
    v17 = v12[6];
    v18 = v12[7];
    v19 = v12[8];
    v39 = v12[9];
    if (v16 != v13 || v15 != v14)
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v16, v15, v13, v14, 0) & 1) != 0)
        goto LABEL_32;
      if (v40 != 1)
      {
        v13 = *(_QWORD *)(v0 + 152);
        v14 = *(_QWORD *)(v0 + 160);
        v16 = v12[10];
        v15 = v12[11];
        v17 = v12[12];
        v18 = v12[13];
        v19 = v12[14];
        v39 = v12[15];
        if (v16 == v13 && v15 == v14)
          goto LABEL_31;
        result = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v15, v13, v14, 0);
        if ((result & 1) != 0)
          goto LABEL_32;
        if (v40 != 2)
        {
          v22 = v12 + 21;
          v23 = 2;
          while (1)
          {
            v24 = v23 + 1;
            if (__OFADD__(v23, 1))
              break;
            v16 = *(v22 - 5);
            v15 = *(v22 - 4);
            v17 = *(v22 - 3);
            v18 = *(v22 - 2);
            v19 = *(v22 - 1);
            v39 = *v22;
            v25 = *(_QWORD *)(v0 + 152);
            v26 = *(_QWORD *)(v0 + 160);
            if (v16 == v25 && v15 == v26)
              goto LABEL_32;
            result = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v15, v25, v26, 0);
            if ((result & 1) != 0)
              goto LABEL_32;
            v22 += 6;
            ++v23;
            if (v24 == v40)
              goto LABEL_6;
          }
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
      }
      goto LABEL_6;
    }
LABEL_31:
    v15 = v14;
    v16 = v13;
LABEL_32:
    v28 = *(_QWORD *)(v0 + 160);
    v29 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v28);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
    v3 = *(_QWORD **)(v0 + 144);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v3 = sub_1000752B0(0, v3[2] + 1, 1, *(_QWORD **)(v0 + 144));
    v32 = v3[2];
    v31 = v3[3];
    if (v32 >= v31 >> 1)
      v3 = sub_1000752B0((_QWORD *)(v31 > 1), v32 + 1, 1, v3);
    v3[2] = v32 + 1;
    v33 = &v3[6 * v32];
    v33[4] = v16;
    v33[5] = v15;
    v33[6] = v17;
    v33[7] = v18;
    v33[8] = v19;
    v33[9] = v39;
LABEL_37:
    v2 = *(_QWORD *)(v0 + 136) + 1;
    if (v2 != *(_QWORD *)(v0 + 128))
      continue;
    break;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
LABEL_42:
  v35 = *(_QWORD *)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 72);
  v37 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v3);
}

uint64_t sub_1000601C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100060224, 0, 0);
}

uint64_t sub_100060224()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _QWORD *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = *(_QWORD **)(v0 + 200);
  if (!v1)
    goto LABEL_15;
  v2 = *(_BYTE *)(v0 + 209);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v67 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v65 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  v63 = *(_QWORD *)(v0 + 104);
  v64 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 56);
  v61 = v3;
  sub_10000D964(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 176), v3, type metadata accessor for WidgetChartDiskCache);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x8000000100444470;
  *(_BYTE *)(v0 + 208) = v2;
  v8._countAndFlagsBits = String.init<A>(describing:)(v0 + 208, &type metadata for TopChartsWidgetDataProvider.ChartKind);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10 = *(_QWORD *)(v0 + 24);
  v62 = *(_QWORD *)(v0 + 16);
  v11 = swift_bridgeObjectRetain();
  sub_10000BD4C(v11, v4);
  v12 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  v60 = v4;
  v13 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
  static TaskPriority.userInitiated.getter(v13);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
  sub_10000D964(v3, v6, type metadata accessor for WidgetDiskCache);
  sub_100011370(v4, v63, &qword_100547BC8);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v64 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(unsigned __int8 *)(v65 + 80);
  v19 = (v18 + v17 + 16) & ~v18;
  v20 = swift_allocObject(&unk_1004FA3A0, v19 + v67, v15 | v18 | 7);
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  sub_100060CD8(v6, v20 + v16);
  v21 = (_QWORD *)(v20 + v17);
  *v21 = v62;
  v21[1] = v10;
  sub_100011530(v63, v20 + v19, &qword_100547BC8);
  swift_bridgeObjectRetain();
  v22 = sub_10006E874(v5, (uint64_t)&unk_100547BD0, v20);
  swift_release(v22);
  sub_100011694(v5, &qword_100547B70);
  swift_bridgeObjectRelease(v10);
  sub_100011694(v60, &qword_100547BC8);
  swift_bridgeObjectRelease(v1);
  sub_100060B20(v61);
  while (1)
  {
    v23 = v1[2];
    if (v23)
    {
      v24 = *(_QWORD *)(v0 + 152);
      v25 = *(_QWORD *)(v0 + 160);
      v27 = v1[4];
      v26 = v1[5];
      v28 = v1[7];
      v30 = v1[8];
      v29 = v1[9];
      v68 = v1[6];
      if (v27 == v24 && v26 == v25)
      {
        v26 = *(_QWORD *)(v0 + 160);
        v27 = *(_QWORD *)(v0 + 152);
LABEL_8:
        v31 = *(_QWORD *)(v0 + 160);
        v32 = *(_QWORD *)(v0 + 144);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v1);
        swift_bridgeObjectRelease(v31);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
        v34 = *(_QWORD **)(v0 + 144);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v34 = sub_1000752B0(0, v34[2] + 1, 1, *(_QWORD **)(v0 + 144));
        v36 = v34[2];
        v35 = v34[3];
        if (v36 >= v35 >> 1)
          v34 = sub_1000752B0((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
        v34[2] = v36 + 1;
        v37 = &v34[6 * v36];
        v37[4] = v27;
        v37[5] = v26;
        v37[6] = v68;
        v37[7] = v28;
        v37[8] = v30;
        v37[9] = v29;
        goto LABEL_17;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v27, v26, v24, v25, 0) & 1) != 0)
        goto LABEL_8;
      if (v23 != 1)
      {
        v27 = *(_QWORD *)(v0 + 152);
        v26 = *(_QWORD *)(v0 + 160);
        v49 = v1[10];
        v48 = v1[11];
        v28 = v1[13];
        v68 = v1[12];
        v30 = v1[14];
        v29 = v1[15];
        if (v49 == v27 && v48 == v26)
          goto LABEL_8;
        result = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v48, v27, v26, 0);
        v26 = v48;
        v27 = v49;
        if ((result & 1) != 0)
          goto LABEL_8;
        if (v23 != 2)
          break;
      }
    }
LABEL_14:
    swift_bridgeObjectRelease(v1);
LABEL_15:
    v38 = *(_QWORD *)(v0 + 184) + 1;
    if (*(_QWORD *)(v0 + 184) != 2)
      goto LABEL_20;
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
    v34 = *(_QWORD **)(v0 + 144);
LABEL_17:
    v39 = *(_QWORD *)(v0 + 136) + 1;
    if (v39 == *(_QWORD *)(v0 + 128))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
      v56 = *(_QWORD *)(v0 + 112);
      v57 = *(_QWORD *)(v0 + 104);
      v59 = *(_QWORD *)(v0 + 72);
      v58 = *(_QWORD *)(v0 + 80);
      swift_task_dealloc(*(_QWORD *)(v0 + 120));
      swift_task_dealloc(v56);
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v34);
    }
    *(_QWORD *)(v0 + 136) = v39;
    *(_QWORD *)(v0 + 144) = v34;
    v40 = *(_QWORD *)(v0 + 48) + 16 * v39;
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v40 + 32);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v40 + 40);
    v41 = qword_100547768;
    swift_bridgeObjectRetain();
    if (v41 != -1)
LABEL_40:
      swift_once(&qword_100547768, sub_100009F14);
    v38 = 0;
    v42 = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
    *(_QWORD *)(v0 + 168) = qword_1005611D8;
    *(_QWORD *)(v0 + 176) = v42;
LABEL_20:
    *(_QWORD *)(v0 + 184) = v38;
    if (v38 >= 3)
    {
      __break(1u);
      goto LABEL_40;
    }
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 176);
    v45 = *((unsigned __int8 *)&off_1004F8DD0 + v38 + 32);
    *(_BYTE *)(v0 + 209) = v45;
    sub_10000D964(v44, v43, type metadata accessor for WidgetChartDiskCache);
    v1 = (_QWORD *)sub_100007F1C(v45);
    sub_100060B20(v43);
    if (!v1)
    {
      v46 = (_QWORD *)swift_task_alloc(dword_100547BC4);
      *(_QWORD *)(v0 + 192) = v46;
      *v46 = v0;
      v46[1] = sub_1000601C8;
      return sub_10000ECC4(v45);
    }
  }
  v51 = v1 + 21;
  v52 = 2;
  while (!__OFADD__(v52, 1))
  {
    v27 = *(v51 - 5);
    v26 = *(v51 - 4);
    v28 = *(v51 - 2);
    v68 = *(v51 - 3);
    v30 = *(v51 - 1);
    v29 = *v51;
    v53 = *(_QWORD *)(v0 + 152);
    v54 = *(_QWORD *)(v0 + 160);
    if (v27 == v53 && v26 == v54)
      goto LABEL_8;
    v66 = v52 + 1;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v26, v53, v54, 0);
    if ((result & 1) != 0)
      goto LABEL_8;
    v51 += 6;
    ++v52;
    if (v66 == v23)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000607C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for WidgetChartDiskCache(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006081C, 0, 0);
}

uint64_t sub_10006081C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  if (qword_100547768 != -1)
    swift_once(&qword_100547768, sub_100009F14);
  v1 = *(_QWORD *)(v0 + 24);
  v2 = qword_1005611D8;
  v3 = OBJC_IVAR____TtC12MusicWidgets27TopChartsWidgetDataProvider_cache;
  *(_QWORD *)(v0 + 32) = qword_1005611D8;
  *(_QWORD *)(v0 + 40) = v3;
  sub_10000D964(v2 + v3, v1, type metadata accessor for WidgetChartDiskCache);
  v4 = sub_100007F1C(1);
  sub_100060B20(v1);
  if (v4)
  {
    v5 = sub_10005E8AC();
    v6 = (_QWORD *)Array<A>.items.getter(v4, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor, v5);
    swift_bridgeObjectRelease(v4);
    if (v6[2])
    {
      v8 = v6[4];
      v7 = v6[5];
      v10 = v6[6];
      v9 = v6[7];
      v12 = v6[8];
      v11 = v6[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      swift_bridgeObjectRelease(v6);
      v8 = 0;
      v7 = 0;
      v10 = 0;
      v9 = 0;
      v12 = 0;
      v11 = 0;
    }
    v15 = *(_QWORD **)(v0 + 16);
    swift_task_dealloc(*(_QWORD *)(v0 + 24));
    *v15 = v8;
    v15[1] = v7;
    v15[2] = v10;
    v15[3] = v9;
    v15[4] = v12;
    v15[5] = v11;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc(dword_100547BC4);
    *(_QWORD *)(v0 + 48) = v13;
    *v13 = v0;
    v13[1] = sub_10006099C;
    return sub_10000ECC4(1);
  }
}

uint64_t sub_10006099C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000609F8, 0, 0);
}

uint64_t sub_1000609F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 56);
  if (!v1)
  {
    v6 = 0;
    v5 = 0;
    v7 = 0;
LABEL_6:
    v9 = 0;
    v8 = 0;
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(v0 + 24);
  sub_10000D964(*(_QWORD *)(v0 + 32) + *(_QWORD *)(v0 + 40), v2, type metadata accessor for WidgetChartDiskCache);
  swift_bridgeObjectRetain();
  sub_100008A40(1);
  swift_bridgeObjectRelease(v1);
  sub_100060B20(v2);
  v3 = sub_10005E8AC();
  v4 = (_QWORD *)Array<A>.items.getter(v1, &type metadata for TopChartsWidgetDataProvider.ChartDescriptor, v3);
  swift_bridgeObjectRelease(v1);
  if (!v4[2])
  {
    swift_bridgeObjectRelease(v4);
    v6 = 0;
    v5 = 0;
    v7 = 0;
    v1 = 0;
    goto LABEL_6;
  }
  v6 = v4[4];
  v5 = v4[5];
  v7 = v4[6];
  v1 = v4[7];
  v9 = v4[8];
  v8 = v4[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
LABEL_7:
  v10 = *(_QWORD **)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  *v10 = v6;
  v10[1] = v5;
  v10[2] = v7;
  v10[3] = v1;
  v10[4] = v9;
  v10[5] = v8;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100060B20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetChartDiskCache(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100060B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10000B4C8(&qword_100547BC8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = v0 + v4;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);

  v13 = v10 + *(int *)(v1 + 24);
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v15 = v0 + v8;
  v16 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v0 + v8, 1, v16))
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v8, v17);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + *(int *)(v16 + 20) + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + *(int *)(v16 + 24)));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_100060CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100060D1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_100547BC8) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_10054A67C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000DC64;
  return sub_10006BC88(a1, v9, v10, v11, v13, v14, v15);
}

unint64_t sub_100060DF8()
{
  unint64_t result;

  result = qword_100549F08;
  if (!qword_100549F08)
  {
    result = swift_getWitnessTable(&unk_100426200, &type metadata for TopChartsWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100549F08);
  }
  return result;
}

uint64_t sub_100060E3C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0x6E656D6D6F636552, 0xEF736E6F69746164);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, "Recommendations Widget Default Title", 36, 2);
  qword_100561368 = result;
  unk_100561370 = v6;
  return result;
}

_QWORD *sub_100060F28(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  void (*v52)(_QWORD *, _QWORD, uint64_t, int *);
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  id v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *__dsta;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for WidgetMusicItem(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10000B4C8(&qword_100548310);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v67 = v12;
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      v17 = v10[5];
      v9[4] = v10[4];
      v9[5] = v17;
      v18 = v11[7];
      v71 = (char *)v10 + v18;
      __dsta = (char *)v9 + v18;
      v19 = type metadata accessor for URL(0);
      v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(__dsta, v71, v19);
      v20 = v11[8];
      v21 = (_QWORD *)((char *)v9 + v20);
      v22 = (_QWORD *)((char *)v10 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = v11[9];
      v25 = (_QWORD *)((char *)v9 + v24);
      v26 = (_QWORD *)((char *)v10 + v24);
      v72 = v26[1];
      *v25 = *v26;
      v25[1] = v72;
      v27 = v11[10];
      v28 = (_QWORD *)((char *)v9 + v27);
      v29 = (_QWORD *)((char *)v10 + v27);
      v70 = v29[1];
      *v28 = *v29;
      v28[1] = v70;
      v30 = v11[11];
      v31 = (_QWORD *)((char *)v9 + v30);
      v32 = (_QWORD *)((char *)v10 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = v11[12];
      v35 = (_QWORD *)((char *)v9 + v34);
      v36 = (_QWORD *)((char *)v10 + v34);
      v37 = v36[1];
      *v35 = *v36;
      v35[1] = v37;
      v38 = v11[13];
      v39 = (_QWORD *)((char *)v9 + v38);
      v40 = (_QWORD *)((char *)v10 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      *(_QWORD *)((char *)v9 + v11[14]) = *(_QWORD *)((char *)v10 + v11[14]);
      *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
      v42 = v11[16];
      __dst = (char *)v9 + v42;
      v68 = (char *)v10 + v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = sub_10000B4C8(&qword_100547B50);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(void))(v44 + 48))())
      {
        v45 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        v46 = v67;
      }
      else
      {
        v47 = type metadata accessor for Playlist.Variant(0);
        v73 = *(_QWORD *)(v47 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v68, 1, v47))
        {
          v48 = sub_10000B4C8(&qword_100548358);
          v49 = __dst;
          memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dst, v68, v47);
          v49 = __dst;
          (*(void (**)(void))(v73 + 56))();
        }
        v46 = v67;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v49, 0, 10, v43);
      }
      *(_QWORD *)((char *)v9 + v11[17]) = *(_QWORD *)((char *)v10 + v11[17]);
      v50 = v11[18];
      v51 = *(void **)((char *)v10 + v50);
      *(_QWORD *)((char *)v9 + v50) = v51;
      *(_QWORD *)((char *)v9 + v11[19]) = *(_QWORD *)((char *)v10 + v11[19]);
      v52 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v46 + 56);
      v53 = v51;
      swift_bridgeObjectRetain();
      v52(v9, 0, 1, v11);
    }
    v54 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v55 = *(void **)((char *)a2 + v54);
    *(_QWORD *)((char *)a1 + v54) = v55;
    v56 = a3[9];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = type metadata accessor for TimelineEntryRelevance(0);
    v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
    swift_bridgeObjectRetain();
    v61 = v55;
    v60(v57, v58, v59);
    v62 = a3[10];
    v63 = (_QWORD *)((char *)a1 + v62);
    v64 = (_QWORD *)((char *)a2 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100061314(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + a2[6]);
  v6 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease(v5[1]);
    swift_bridgeObjectRelease(v5[3]);
    swift_bridgeObjectRelease(v5[5]);
    v7 = (char *)v5 + v6[7];
    v8 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[14]));
    v9 = (char *)v5 + v6[16];
    v10 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
    {
      v11 = type metadata accessor for Playlist.Variant(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[19]));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));

  v13 = a1 + a2[9];
  v14 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
}

uint64_t sub_100061508(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *__dsta;
  char *__dst;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for WidgetMusicItem(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000B4C8(&qword_100548310);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v70 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v15 = v9[5];
    v8[4] = v9[4];
    v8[5] = v15;
    v16 = v10[7];
    __dsta = (char *)v8 + v16;
    v67 = (char *)v9 + v16;
    v17 = type metadata accessor for URL(0);
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(__dsta, v67, v17);
    v18 = v10[8];
    v19 = (_QWORD *)((char *)v8 + v18);
    v20 = (_QWORD *)((char *)v9 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v10[9];
    v23 = (_QWORD *)((char *)v8 + v22);
    v24 = (_QWORD *)((char *)v9 + v22);
    v68 = v24[1];
    *v23 = *v24;
    v23[1] = v68;
    v25 = v10[10];
    v26 = (_QWORD *)((char *)v8 + v25);
    v27 = (_QWORD *)((char *)v9 + v25);
    v66 = v27[1];
    *v26 = *v27;
    v26[1] = v66;
    v28 = v10[11];
    v29 = (_QWORD *)((char *)v8 + v28);
    v30 = (_QWORD *)((char *)v9 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v10[12];
    v33 = (_QWORD *)((char *)v8 + v32);
    v34 = (_QWORD *)((char *)v9 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v10[13];
    v37 = (_QWORD *)((char *)v8 + v36);
    v38 = (_QWORD *)((char *)v9 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    *(_QWORD *)((char *)v8 + v10[14]) = *(_QWORD *)((char *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v40 = v10[16];
    __dst = (char *)v8 + v40;
    v64 = (char *)v9 + v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = sub_10000B4C8(&qword_100547B50);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(void))(v42 + 48))())
    {
      v43 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Playlist.Variant(0);
      v69 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v64, 1, v44))
      {
        v45 = sub_10000B4C8(&qword_100548358);
        v46 = __dst;
        memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(__dst, v64, v44);
        v46 = __dst;
        (*(void (**)(void))(v69 + 56))();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v46, 0, 10, v41);
    }
    *(_QWORD *)((char *)v8 + v10[17]) = *(_QWORD *)((char *)v9 + v10[17]);
    v47 = v10[18];
    v48 = *(void **)((char *)v9 + v47);
    *(_QWORD *)((char *)v8 + v47) = v48;
    *(_QWORD *)((char *)v8 + v10[19]) = *(_QWORD *)((char *)v9 + v10[19]);
    v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v70 + 56);
    v50 = v48;
    swift_bridgeObjectRetain();
    v49(v8, 0, 1, v10);
  }
  v51 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v52 = *(void **)(a2 + v51);
  *(_QWORD *)(a1 + v51) = v52;
  v53 = a3[9];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = type metadata accessor for TimelineEntryRelevance(0);
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
  swift_bridgeObjectRetain();
  v58 = v52;
  v57(v54, v55, v56);
  v59 = a3[10];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000618D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void (*v93)(_QWORD *, _QWORD, uint64_t, int *);
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t, uint64_t);
  int v98;
  int v99;
  uint64_t v100;
  void *v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  char *__dst;
  uint64_t v123;
  char *v124;
  char *v125;
  int *v126;
  int *v127;
  uint64_t v128;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for WidgetMusicItem(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10000E750((uint64_t)v8, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v127 = a3;
    v128 = a2;
    *v8 = *v9;
    v43 = v8[1];
    v8[1] = v9[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v43);
    v8[2] = v9[2];
    v44 = v8[3];
    v8[3] = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v44);
    v8[4] = v9[4];
    v45 = v8[5];
    v8[5] = v9[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v45);
    v46 = v10[7];
    v47 = (char *)v8 + v46;
    v48 = (char *)v9 + v46;
    v49 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
    v50 = v10[8];
    v51 = (_QWORD *)((char *)v8 + v50);
    v52 = (_QWORD *)((char *)v9 + v50);
    *v51 = *v52;
    v53 = v51[1];
    v51[1] = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v53);
    v54 = v10[9];
    v55 = (_QWORD *)((char *)v8 + v54);
    v56 = (_QWORD *)((char *)v9 + v54);
    *v55 = *v56;
    v57 = v55[1];
    v55[1] = v56[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v57);
    v58 = v10[10];
    v59 = (_QWORD *)((char *)v8 + v58);
    v60 = (_QWORD *)((char *)v9 + v58);
    *v59 = *v60;
    v61 = v59[1];
    v59[1] = v60[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v61);
    v62 = v10[11];
    v63 = (_QWORD *)((char *)v8 + v62);
    v64 = (_QWORD *)((char *)v9 + v62);
    *v63 = *v64;
    v65 = v63[1];
    v63[1] = v64[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v65);
    v66 = v10[12];
    v67 = (_QWORD *)((char *)v8 + v66);
    v68 = (_QWORD *)((char *)v9 + v66);
    *v67 = *v68;
    v69 = v67[1];
    v67[1] = v68[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v69);
    v70 = v10[13];
    v71 = (_QWORD *)((char *)v8 + v70);
    v72 = (_QWORD *)((char *)v9 + v70);
    *v71 = *v72;
    v73 = v71[1];
    v71[1] = v72[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v73);
    v74 = v10[14];
    v75 = *(_QWORD *)((char *)v8 + v74);
    *(_QWORD *)((char *)v8 + v74) = *(_QWORD *)((char *)v9 + v74);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v75);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v76 = v10[16];
    v77 = (char *)v8 + v76;
    v78 = (char *)v9 + v76;
    v79 = sub_10000B4C8(&qword_100547B50);
    v80 = *(_QWORD *)(v79 - 8);
    v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
    v82 = v81(v77, 10, v79);
    v83 = v81(v78, 10, v79);
    if (v82)
    {
      if (!v83)
      {
        v84 = type metadata accessor for Playlist.Variant(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v78, 1, v84))
        {
          v86 = sub_10000B4C8(&qword_100548358);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v77, v78, v84);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v77, 0, 1, v84);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 10, v79);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v83)
      {
        v95 = type metadata accessor for Playlist.Variant(0);
        v96 = *(_QWORD *)(v95 - 8);
        v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48);
        v98 = v97(v77, 1, v95);
        v99 = v97(v78, 1, v95);
        if (v98)
        {
          if (!v99)
          {
            (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v77, v78, v95);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v77, 0, 1, v95);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v99)
          {
            (*(void (**)(char *, char *, uint64_t))(v96 + 24))(v77, v78, v95);
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v96 + 8))(v77, v95);
        }
        v90 = sub_10000B4C8(&qword_100548358);
LABEL_17:
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
LABEL_26:
        a3 = v127;
        a2 = v128;
        *(_QWORD *)((char *)v8 + v10[17]) = *(_QWORD *)((char *)v9 + v10[17]);
        v100 = v10[18];
        v101 = *(void **)((char *)v8 + v100);
        v102 = *(void **)((char *)v9 + v100);
        *(_QWORD *)((char *)v8 + v100) = v102;
        v103 = v102;

        v104 = v10[19];
        v105 = *(_QWORD *)((char *)v9 + v104);
        v106 = *(_QWORD *)((char *)v8 + v104);
        *(_QWORD *)((char *)v8 + v104) = v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v106);
        goto LABEL_27;
      }
      sub_100011694((uint64_t)v77, &qword_100547B50);
    }
    v90 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_17;
  }
  if (v14)
  {
LABEL_7:
    v42 = sub_10000B4C8(&qword_100548310);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  v126 = a3;
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  v8[4] = v9[4];
  v8[5] = v9[5];
  v15 = v10[7];
  v16 = (char *)v8 + v15;
  v123 = v11;
  v124 = (char *)v9 + v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v16, v124, v17);
  v19 = v10[8];
  v20 = (_QWORD *)((char *)v8 + v19);
  v21 = (_QWORD *)((char *)v9 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = v10[9];
  v23 = (_QWORD *)((char *)v8 + v22);
  v24 = (_QWORD *)((char *)v9 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = v10[10];
  v26 = (_QWORD *)((char *)v8 + v25);
  v27 = (_QWORD *)((char *)v9 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = v10[11];
  v29 = (_QWORD *)((char *)v8 + v28);
  v30 = (_QWORD *)((char *)v9 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = v10[12];
  v32 = (_QWORD *)((char *)v8 + v31);
  v33 = (_QWORD *)((char *)v9 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  v34 = v10[13];
  v35 = (_QWORD *)((char *)v8 + v34);
  v36 = (_QWORD *)((char *)v9 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  *(_QWORD *)((char *)v8 + v10[14]) = *(_QWORD *)((char *)v9 + v10[14]);
  *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
  v37 = v10[16];
  __dst = (char *)v8 + v37;
  v125 = (char *)v9 + v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = sub_10000B4C8(&qword_100547B50);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v125, 10, v38))
  {
    v40 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v125, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    a3 = v126;
    v41 = v123;
  }
  else
  {
    v87 = type metadata accessor for Playlist.Variant(0);
    v88 = *(_QWORD *)(v87 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v125, 1, v87))
    {
      v89 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v125, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(__dst, v125, v87);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v87);
    }
    v41 = v123;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 10, v38);
    a3 = v126;
  }
  *(_QWORD *)((char *)v8 + v10[17]) = *(_QWORD *)((char *)v9 + v10[17]);
  v91 = v10[18];
  v92 = *(void **)((char *)v9 + v91);
  *(_QWORD *)((char *)v8 + v91) = v92;
  *(_QWORD *)((char *)v8 + v10[19]) = *(_QWORD *)((char *)v9 + v10[19]);
  v93 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v41 + 56);
  v94 = v92;
  swift_bridgeObjectRetain();
  v93(v8, 0, 1, v10);
LABEL_27:
  v107 = a3[7];
  v108 = *(_QWORD *)(a1 + v107);
  *(_QWORD *)(a1 + v107) = *(_QWORD *)(a2 + v107);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v108);
  v109 = a3[8];
  v110 = *(void **)(a1 + v109);
  v111 = *(void **)(a2 + v109);
  *(_QWORD *)(a1 + v109) = v111;
  v112 = v111;

  v113 = a3[9];
  v114 = a1 + v113;
  v115 = a2 + v113;
  v116 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 24))(v114, v115, v116);
  v117 = a3[10];
  v118 = (_QWORD *)(a1 + v117);
  v119 = (_QWORD *)(a2 + v117);
  *v118 = *v119;
  v120 = v118[1];
  v118[1] = v119[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v120);
  return a1;
}

uint64_t sub_1000620E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *__dst;
  uint64_t v36;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for WidgetMusicItem(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000B4C8(&qword_100548310);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v36 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    v14 = v10[7];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
    *(_OWORD *)((char *)v8 + v10[9]) = *(_OWORD *)((char *)v9 + v10[9]);
    *(_OWORD *)((char *)v8 + v10[10]) = *(_OWORD *)((char *)v9 + v10[10]);
    *(_OWORD *)((char *)v8 + v10[11]) = *(_OWORD *)((char *)v9 + v10[11]);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *(_OWORD *)((char *)v8 + v10[13]) = *(_OWORD *)((char *)v9 + v10[13]);
    *(_QWORD *)((char *)v8 + v10[14]) = *(_QWORD *)((char *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v18 = v10[16];
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    v21 = sub_10000B4C8(&qword_100547B50);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v34 = v22;
      __dst = v19;
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_10000B4C8(&qword_100548358);
        v27 = __dst;
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v25 + 32))(__dst, v20, v24);
        v27 = __dst;
        (*(void (**)(void))(v25 + 56))();
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v27, 0, 10, v21);
    }
    *(_QWORD *)((char *)v8 + v10[17]) = *(_QWORD *)((char *)v9 + v10[17]);
    *(_QWORD *)((char *)v8 + v10[18]) = *(_QWORD *)((char *)v9 + v10[18]);
    *(_QWORD *)((char *)v8 + v10[19]) = *(_QWORD *)((char *)v9 + v10[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v36 + 56))(v8, 0, 1, v10);
  }
  v28 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1000623D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, int *);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  int v79;
  uint64_t v80;
  size_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void *, uint64_t, uint64_t);
  int v94;
  int v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v115)(void *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *__src;
  void *__srca;
  char *__dst;
  void *__dsta;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for WidgetMusicItem(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10000E750((uint64_t)v8, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v26 = v9[1];
    v27 = v8[1];
    *v8 = *v9;
    v8[1] = v26;
    swift_bridgeObjectRelease(v27);
    v28 = v9[3];
    v29 = v8[3];
    v8[2] = v9[2];
    v8[3] = v28;
    swift_bridgeObjectRelease(v29);
    v30 = v9[5];
    v31 = v8[5];
    v8[4] = v9[4];
    v8[5] = v30;
    swift_bridgeObjectRelease(v31);
    v32 = v10[7];
    v33 = (char *)v8 + v32;
    v34 = (char *)v9 + v32;
    v35 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
    v36 = v10[8];
    v37 = (_QWORD *)((char *)v8 + v36);
    v38 = (_QWORD *)((char *)v9 + v36);
    v40 = *v38;
    v39 = v38[1];
    v41 = v37[1];
    *v37 = v40;
    v37[1] = v39;
    swift_bridgeObjectRelease(v41);
    v42 = v10[9];
    v43 = (_QWORD *)((char *)v8 + v42);
    v44 = (_QWORD *)((char *)v9 + v42);
    v46 = *v44;
    v45 = v44[1];
    v47 = v43[1];
    *v43 = v46;
    v43[1] = v45;
    swift_bridgeObjectRelease(v47);
    v48 = v10[10];
    v49 = (_QWORD *)((char *)v8 + v48);
    v50 = (_QWORD *)((char *)v9 + v48);
    v52 = *v50;
    v51 = v50[1];
    v53 = v49[1];
    *v49 = v52;
    v49[1] = v51;
    swift_bridgeObjectRelease(v53);
    v54 = v10[11];
    v55 = (_QWORD *)((char *)v8 + v54);
    v56 = (_QWORD *)((char *)v9 + v54);
    v58 = *v56;
    v57 = v56[1];
    v59 = v55[1];
    *v55 = v58;
    v55[1] = v57;
    swift_bridgeObjectRelease(v59);
    v60 = v10[12];
    v61 = (_QWORD *)((char *)v8 + v60);
    v62 = (_QWORD *)((char *)v9 + v60);
    v64 = *v62;
    v63 = v62[1];
    v65 = v61[1];
    *v61 = v64;
    v61[1] = v63;
    swift_bridgeObjectRelease(v65);
    v66 = v10[13];
    v67 = (_QWORD *)((char *)v8 + v66);
    v68 = (_QWORD *)((char *)v9 + v66);
    v70 = *v68;
    v69 = v68[1];
    v71 = v67[1];
    *v67 = v70;
    v67[1] = v69;
    swift_bridgeObjectRelease(v71);
    v72 = v10[14];
    v73 = *(_QWORD *)((char *)v8 + v72);
    *(_QWORD *)((char *)v8 + v72) = *(_QWORD *)((char *)v9 + v72);
    swift_bridgeObjectRelease(v73);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v74 = v10[16];
    v75 = (char *)v8 + v74;
    v76 = (char *)v9 + v74;
    v77 = sub_10000B4C8(&qword_100547B50);
    v117 = *(_QWORD *)(v77 - 8);
    v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
    __dsta = v75;
    LODWORD(v75) = v78(v75, 10, v77);
    __src = v76;
    v79 = v78(v76, 10, v77);
    if ((_DWORD)v75)
    {
      if (!v79)
      {
        v89 = type metadata accessor for Playlist.Variant(0);
        v116 = *(_QWORD *)(v89 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v76, 1, v89))
        {
          v90 = sub_10000B4C8(&qword_100548358);
          memcpy(__dsta, v76, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v116 + 32))(__dsta, v76, v89);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v116 + 56))(__dsta, 0, 1, v89);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dsta, 0, 10, v77);
        goto LABEL_28;
      }
      v80 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_11:
      v81 = *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64);
      v82 = __dsta;
LABEL_17:
      memcpy(v82, __src, v81);
LABEL_28:
      *(_QWORD *)((char *)v8 + v10[17]) = *(_QWORD *)((char *)v9 + v10[17]);
      v96 = v10[18];
      v97 = *(void **)((char *)v8 + v96);
      *(_QWORD *)((char *)v8 + v96) = *(_QWORD *)((char *)v9 + v96);

      v98 = v10[19];
      v99 = *(_QWORD *)((char *)v8 + v98);
      *(_QWORD *)((char *)v8 + v98) = *(_QWORD *)((char *)v9 + v98);
      swift_bridgeObjectRelease(v99);
      goto LABEL_29;
    }
    if (v79)
    {
      v87 = __dsta;
      sub_100011694((uint64_t)__dsta, &qword_100547B50);
      v88 = type metadata accessor for ArtworkImage.Placeholder(0);
    }
    else
    {
      v91 = type metadata accessor for Playlist.Variant(0);
      v92 = *(_QWORD *)(v91 - 8);
      v93 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v92 + 48);
      v94 = v93(__dsta, 1, v91);
      v95 = v93(__src, 1, v91);
      if (v94)
      {
        if (!v95)
        {
          (*(void (**)(void *, char *, uint64_t))(v92 + 32))(__dsta, __src, v91);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(__dsta, 0, 1, v91);
          goto LABEL_28;
        }
        v80 = sub_10000B4C8(&qword_100548358);
        goto LABEL_11;
      }
      if (!v95)
      {
        (*(void (**)(void *, char *, uint64_t))(v92 + 40))(__dsta, __src, v91);
        goto LABEL_28;
      }
      v115 = *(void (**)(void *, uint64_t))(v92 + 8);
      v87 = __dsta;
      v115(__dsta, v91);
      v88 = sub_10000B4C8(&qword_100548358);
    }
    v81 = *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64);
    v82 = v87;
    goto LABEL_17;
  }
  if (v14)
  {
LABEL_7:
    v25 = sub_10000B4C8(&qword_100548310);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_29;
  }
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  v16 = v10[7];
  v17 = (char *)v8 + v16;
  v18 = (char *)v9 + v16;
  v19 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
  *(_OWORD *)((char *)v8 + v10[9]) = *(_OWORD *)((char *)v9 + v10[9]);
  *(_OWORD *)((char *)v8 + v10[10]) = *(_OWORD *)((char *)v9 + v10[10]);
  *(_OWORD *)((char *)v8 + v10[11]) = *(_OWORD *)((char *)v9 + v10[11]);
  *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
  *(_OWORD *)((char *)v8 + v10[13]) = *(_OWORD *)((char *)v9 + v10[13]);
  *(_QWORD *)((char *)v8 + v10[14]) = *(_QWORD *)((char *)v9 + v10[14]);
  *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
  v20 = v10[16];
  __dst = (char *)v8 + v20;
  v21 = (char *)v9 + v20;
  v22 = sub_10000B4C8(&qword_100547B50);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
  {
    v24 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v118 = v23;
    __srca = (void *)v22;
    v83 = type metadata accessor for Playlist.Variant(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v21, 1, v83))
    {
      v85 = sub_10000B4C8(&qword_100548358);
      v86 = __dst;
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(__dst, v21, v83);
      v86 = __dst;
      (*(void (**)(void))(v84 + 56))();
    }
    (*(void (**)(char *, _QWORD, uint64_t, void *))(v118 + 56))(v86, 0, 10, __srca);
  }
  *(_QWORD *)((char *)v8 + v10[17]) = *(_QWORD *)((char *)v9 + v10[17]);
  *(_QWORD *)((char *)v8 + v10[18]) = *(_QWORD *)((char *)v9 + v10[18]);
  *(_QWORD *)((char *)v8 + v10[19]) = *(_QWORD *)((char *)v9 + v10[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_29:
  v100 = a3[7];
  v101 = *(_QWORD *)(a1 + v100);
  *(_QWORD *)(a1 + v100) = *(_QWORD *)(a2 + v100);
  swift_bridgeObjectRelease(v101);
  v102 = a3[8];
  v103 = *(void **)(a1 + v102);
  *(_QWORD *)(a1 + v102) = *(_QWORD *)(a2 + v102);

  v104 = a3[9];
  v105 = a1 + v104;
  v106 = a2 + v104;
  v107 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 40))(v105, v106, v107);
  v108 = a3[10];
  v109 = (_QWORD *)(a1 + v108);
  v110 = (uint64_t *)(a2 + v108);
  v112 = *v110;
  v111 = v110[1];
  v113 = v109[1];
  *v109 = v112;
  v109[1] = v111;
  swift_bridgeObjectRelease(v113);
  return a1;
}

uint64_t sub_100062A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100062A84);
}

uint64_t sub_100062A84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10000B4C8(&qword_100548310);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[6];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for TimelineEntryRelevance(0);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[9];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[7]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100062B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100062B60);
}

uint64_t sub_100062B60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_10000B4C8(&qword_100548310);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      v10 = type metadata accessor for TimelineEntryRelevance(0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(uint64_t a1)
{
  return sub_10001133C(a1, qword_100549FB0, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetTimelineProvider.Entry);
}

void sub_100062C40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[7];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_1004266B8;
    sub_100031FFC(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v8[4] = &unk_1004266D0;
      v6 = type metadata accessor for TimelineEntryRelevance(319);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        v8[6] = &unk_1004266E8;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100062D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100062D14);
}

uint64_t sub_100062D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100062D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100062D5C);
}

uint64_t sub_100062D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetTimelineProvider(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054A058, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetTimelineProvider);
}

uint64_t sub_100062DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  sub_10000D924((uint64_t)v7, qword_100561378);
  v8 = sub_10000D78C((uint64_t)v7, (uint64_t)qword_100561378);
  v9 = type metadata accessor for WidgetMusicItem(0);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  Date.init()(v10);
  if (qword_100547890 != -1)
    swift_once(&qword_100547890, sub_100064AF0);
  v11 = type metadata accessor for TimelineEntryRelevance(0);
  v12 = sub_10000D78C(v11, (uint64_t)qword_100549F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8 + v7[9], v12, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v8, v3, v0);
  *(_BYTE *)(v8 + v7[5]) = 3;
  result = sub_100064B78((uint64_t)v6, v8 + v7[6]);
  *(_QWORD *)(v8 + v7[7]) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v8 + v7[8]) = 0;
  v14 = (_QWORD *)(v8 + v7[10]);
  *v14 = 0;
  v14[1] = 0;
  return result;
}

unint64_t sub_100062F64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10054A090[0];
  if (!qword_10054A090[0])
  {
    v1 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(255);
    result = swift_getWitnessTable(")?\r", v1);
    atomic_store(result, qword_10054A090);
  }
  return result;
}

uint64_t sub_100062FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v7 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[4] = v7;
  v8 = (_QWORD *)swift_task_alloc(dword_10054A0C4);
  v5[5] = v8;
  *v8 = v5;
  v8[1] = sub_100063024;
  return sub_1000630C8(v7);
}

uint64_t sub_100063024()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_100063078, 0, 0);
}

uint64_t sub_100063078()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_10000E750(v1, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000630C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for Date(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v7);
  v2[12] = swift_task_alloc(v7);
  v8 = sub_10000B4C8(&qword_100548310);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100063184, 0, 0);
}

uint64_t sub_100063184()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;

  if ((sub_1000A7F94() & 1) != 0)
  {
    v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 72));
    v2 = Logger.logObject.getter(v1);
    v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Can't use widget: privacyAcknowledgementRequired", v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    if (qword_100547808 != -1)
      swift_once(&qword_100547808, sub_10003433C);
    v10 = unk_1005612E0;
    v26 = qword_1005612D8;
    v11 = swift_bridgeObjectRetain();
    Date.init()(v11);
    if (qword_100547890 != -1)
      swift_once(&qword_100547890, sub_100064AF0);
    v12 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 32);
    v17 = type metadata accessor for TimelineEntryRelevance(0);
    v18 = sub_10000D78C(v17, (uint64_t)qword_100549F10);
    v19 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16 + v19[9], v18, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v13, v15);
    *(_BYTE *)(v16 + v19[5]) = 3;
    sub_100064B78(v12, v16 + v19[6]);
    *(_QWORD *)(v16 + v19[7]) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v16 + v19[8]) = 0;
    v20 = (uint64_t *)(v16 + v19[10]);
    *v20 = v26;
    v20[1] = v10;
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_100547870 != -1)
      swift_once(&qword_100547870, sub_100056EDC);
    v25 = (_QWORD *)swift_task_alloc(dword_100549BCC);
    *(_QWORD *)(v0 + 112) = v25;
    *v25 = v0;
    v25[1] = sub_10006344C;
    return sub_100056F18();
  }
}

uint64_t sub_10006344C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 112);
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1000635F8;
  else
    v5 = sub_1000634B8;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000634B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  if (qword_100547898 != -1)
    swift_once(&qword_100547898, sub_100064B00);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = type metadata accessor for TimelineEntryRelevance(0);
  v7 = sub_10000D78C(v6, (uint64_t)qword_100549F28);
  v8 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5 + v8[9], v7, v6);
  Date.init()(v9);
  *(_BYTE *)(v5 + v8[5]) = 3;
  sub_100064B78(v4, v5 + v8[6]);
  *(_QWORD *)(v5 + v8[7]) = v3;
  *(_QWORD *)(v5 + v8[8]) = 0;
  v10 = (_QWORD *)(v5 + v8[10]);
  *v10 = 0;
  v10[1] = 0;
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000635F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 72));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 80);
    v34 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 88);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136446210;
    v38 = v8;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v9 = sub_10000B4C8(&qword_100549268);
    v10 = String.init<A>(describing:)(v0 + 16, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 24) = sub_1000759E0(v10, v11, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Could not fetch items - error=%{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v36, v34);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v17 = *(_QWORD *)(v0 + 104);
  v18 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  if (qword_100547818 != -1)
    swift_once(&qword_100547818, sub_100034504);
  v35 = qword_1005612F8;
  v37 = unk_100561300;
  v19 = swift_bridgeObjectRetain();
  Date.init()(v19);
  if (qword_100547890 != -1)
    swift_once(&qword_100547890, sub_100064AF0);
  v20 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 48);
  v25 = *(_QWORD *)(v0 + 32);
  v26 = type metadata accessor for TimelineEntryRelevance(0);
  v27 = sub_10000D78C(v26, (uint64_t)qword_100549F10);
  v28 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25 + v28[9], v27, v26);
  swift_errorRelease(v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v25, v23, v24);
  *(_BYTE *)(v25 + v28[5]) = 3;
  sub_100064B78(v21, v25 + v28[6]);
  *(_QWORD *)(v25 + v28[7]) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v25 + v28[8]) = 0;
  v29 = (uint64_t *)(v25 + v28[10]);
  *v29 = v35;
  v29[1] = v37;
  v30 = *(_QWORD *)(v0 + 96);
  v31 = *(_QWORD *)(v0 + 88);
  v32 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006395C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = sub_10000B4C8(&qword_10054A0B8);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[10] = swift_task_alloc(v11);
  v6[11] = swift_task_alloc(v11);
  v12 = type metadata accessor for TimelineReloadPolicy(0);
  v6[12] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[13] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[14] = swift_task_alloc(v14);
  v6[15] = swift_task_alloc(v14);
  v15 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v6[16] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v6[17] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[18] = swift_task_alloc(v17);
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v6[22] = swift_task_alloc(v17);
  v18 = sub_10000B4C8(&qword_1005482D0);
  v6[23] = v18;
  v6[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000B4C8(&qword_1005482C0);
  v6[25] = v19;
  v6[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000B4C8(&qword_100548310);
  v6[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100063B04, 0, 0);
}

uint64_t sub_100063B04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_100547790 != -1)
    swift_once(&qword_100547790, sub_1000134D8);
  v1 = qword_1005611E0;
  *(_QWORD *)(v0 + 224) = qword_1005611E0;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 232) = v2;
  *v2 = v0;
  v2[1] = sub_100063BC4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 272, 0, 0, 0x7453726579616C70, 0xEB00000000657461, sub_100016D2C, v1, &type metadata for NowPlayingDataProvider.PlayerState);
}

uint64_t sub_100063BC4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 232));
  return swift_task_switch(sub_100063C18, 0, 0);
}

uint64_t sub_100063C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  *(_BYTE *)(v0 + 273) = *(_BYTE *)(v0 + 272);
  sub_100011370(*(_QWORD *)(v2 + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__currentItem, v3, &qword_1005482C0);
  sub_100069BDC(*(_QWORD *)(v3 + *(int *)(v4 + 44)), *(_QWORD *)(v3 + *(int *)(v4 + 44) + 8), v1);
  sub_100011694(v3, &qword_1005482C0);
  sub_100011370(*(_QWORD *)(v2 + 16)+ OBJC_IVAR____TtCC12MusicWidgets22NowPlayingDataProviderP33_70F471A0DA99FBA7CCD65ABFE189F6D95Cache__codableCurrentItemBackground, v5, &qword_1005482D0);
  v7 = (void *)sub_100069C08(*(_QWORD *)(v5 + *(int *)(v6 + 44)), *(_QWORD *)(v5 + *(int *)(v6 + 44) + 8));
  sub_100011694(v5, &qword_1005482D0);
  if (v7 == (void *)1)
  {
    v7 = 0;
  }
  else
  {
    v8 = v7;
    sub_100017318(v7);
  }
  *(_QWORD *)(v0 + 240) = v7;
  v9 = (_QWORD *)swift_task_alloc(dword_10054A0C4);
  *(_QWORD *)(v0 + 248) = v9;
  *v9 = v0;
  v9[1] = sub_100063D44;
  return sub_1000630C8(*(_QWORD *)(v0 + 176));
}

uint64_t sub_100063D44()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 248));
  return swift_task_switch(sub_100063D98, 0, 0);
}

uint64_t sub_100063D98(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;

  v2 = *(unsigned __int8 *)(v1 + 273);
  v3 = Date.init()(a1);
  if (v2)
  {
    if (v2 == 1)
    {
      v4 = *(void **)(v1 + 240);
      v5 = *(_QWORD *)(v1 + 216);
      v6 = *(_QWORD *)(v1 + 176);
      v7 = *(int **)(v1 + 128);
      static TimelineReloadPolicy.never.getter(v3);
      v8 = v7[5];
      *(_BYTE *)(v6 + v8) = 1;
      v63 = v8;
      v65 = v6 + v7[6];
      sub_10001C424(v5, v65);
      v9 = v7[8];
      v10 = *(void **)(v6 + v9);
      v11 = v4;

      v67 = v9;
      *(_QWORD *)(v6 + v9) = v4;
      if (qword_100547898 != -1)
        swift_once(&qword_100547898, sub_100064B00);
      v12 = *(_QWORD *)(v1 + 176);
      v13 = *(_QWORD *)(v1 + 152);
      v14 = *(_QWORD *)(v1 + 128);
      v15 = type metadata accessor for TimelineEntryRelevance(0);
      v16 = sub_10000D78C(v15, (uint64_t)qword_100549F28);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v12 + *(int *)(v14 + 36), v16, v15);
      sub_10000D964(v12, v13, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
      v17 = sub_10007583C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      v69 = v11;
      if (v19 >= v18 >> 1)
        v17 = sub_10007583C(v18 > 1, v19 + 1, 1, v17);
      v20 = *(_QWORD *)(v1 + 176);
      v21 = *(_QWORD *)(v1 + 152);
      v61 = *(_QWORD *)(v1 + 144);
      v22 = *(_QWORD *)(v1 + 136);
      v24 = *(_QWORD *)(v1 + 72);
      v23 = *(_QWORD *)(v1 + 80);
      v25 = *(_QWORD *)(v1 + 64);
      *(_QWORD *)(v17 + 16) = v19 + 1;
      v26 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v27 = *(_QWORD *)(v22 + 72);
      sub_10000DB44(v21, v17 + v26 + v27 * v19, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
      v28.n128_u64[0] = 0x407E000000000000;
      Date.addingTimeInterval(_:)(v28);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40))(v20, v23, v25);
      *(_BYTE *)(v6 + v63) = 3;
      sub_100011694(v65, &qword_100548310);
      v29 = type metadata accessor for WidgetMusicItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v65, 1, 1, v29);

      *(_QWORD *)(v6 + v67) = 0;
      sub_10000D964(v20, v61, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
      v31 = *(_QWORD *)(v17 + 16);
      v30 = *(_QWORD *)(v17 + 24);
      if (v31 >= v30 >> 1)
        v17 = sub_10007583C(v30 > 1, v31 + 1, 1, v17);
      v52 = v17;
      v32 = *(_QWORD *)(v1 + 144);
      *(_QWORD *)(v17 + 16) = v31 + 1;
      v33 = v17 + v26 + v31 * v27;
    }
    else
    {
      v36 = *(_QWORD *)(v1 + 168);
      v37 = *(_QWORD *)(v1 + 176);
      static TimelineReloadPolicy.never.getter(v3);
      sub_10000D964(v37, v36, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
      v38 = sub_10007583C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v40 = *(_QWORD *)(v38 + 16);
      v39 = *(_QWORD *)(v38 + 24);
      if (v40 >= v39 >> 1)
        v38 = sub_10007583C(v39 > 1, v40 + 1, 1, v38);
      v52 = v38;
      v69 = *(void **)(v1 + 240);
      v32 = *(_QWORD *)(v1 + 168);
      v41 = *(_QWORD *)(v1 + 136);
      *(_QWORD *)(v38 + 16) = v40 + 1;
      v33 = v38
          + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
          + *(_QWORD *)(v41 + 72) * v40;
    }
    sub_10000DB44(v32, v33, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    v58 = *(_QWORD *)(v1 + 208);
    v59 = *(_QWORD *)(v1 + 192);
    v56 = *(_QWORD *)(v1 + 216);
    v57 = *(_QWORD *)(v1 + 176);
    v60 = *(_QWORD *)(v1 + 168);
    v62 = *(_QWORD *)(v1 + 160);
    v64 = *(_QWORD *)(v1 + 152);
    v66 = *(_QWORD *)(v1 + 144);
    v42 = *(_QWORD *)(v1 + 128);
    v51 = *(_QWORD *)(v1 + 120);
    v44 = *(_QWORD *)(v1 + 104);
    v43 = *(_QWORD *)(v1 + 112);
    v45 = *(_QWORD *)(v1 + 96);
    v55 = *(_QWORD *)(v1 + 88);
    v68 = *(_QWORD *)(v1 + 80);
    v46 = *(_QWORD *)(v1 + 56);
    v53 = *(_QWORD *)(v1 + 72);
    v54 = *(_QWORD *)(v1 + 64);
    v47 = *(_QWORD *)(v1 + 40);
    v48 = *(_QWORD *)(v1 + 48);
    v49 = *(void (**)(uint64_t))(v1 + 24);
    (*(void (**)(uint64_t))(v44 + 16))(v43);
    v50 = sub_100062F64();
    Timeline.init(entries:policy:)(v52, v43, v42, v50);
    v49(v46);

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v54);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v51, v45);
    sub_100011694(v56, &qword_100548310);
    sub_10000E750(v57, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v57);
    swift_task_dealloc(v60);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v51);
    swift_task_dealloc(v43);
    swift_task_dealloc(v55);
    swift_task_dealloc(v68);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v34 = (_QWORD *)swift_task_alloc(dword_100547F2C);
    *(_QWORD *)(v1 + 256) = v34;
    *v34 = v1;
    v34[1] = sub_100064270;
    return sub_100013E68();
  }
}

uint64_t sub_100064270(double a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(double *)(*(_QWORD *)v1 + 264) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000642C4, 0, 0);
}

uint64_t sub_1000642C4(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  a1.n128_u64[0] = *(_QWORD *)(v1 + 264);
  v2 = *(void **)(v1 + 240);
  v3 = *(_QWORD *)(v1 + 216);
  v4 = *(_QWORD *)(v1 + 176);
  v5 = *(int **)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  Date.addingTimeInterval(_:)(a1);
  static TimelineReloadPolicy.after(_:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  *(_BYTE *)(v4 + v5[5]) = 0;
  sub_10001C424(v3, v4 + v5[6]);
  v9 = v5[8];
  v10 = *(void **)(v4 + v9);
  v44 = v2;

  *(_QWORD *)(v4 + v9) = v2;
  if (qword_1005478A0 != -1)
    swift_once(&qword_1005478A0, sub_100064B10);
  v11 = *(_QWORD *)(v1 + 176);
  v12 = *(_QWORD *)(v1 + 160);
  v13 = *(_QWORD *)(v1 + 128);
  v14 = type metadata accessor for TimelineEntryRelevance(0);
  v15 = sub_10000D78C(v14, (uint64_t)qword_100549F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v11 + *(int *)(v13 + 36), v15, v14);
  sub_10000D964(v11, v12, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v16 = sub_10007583C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v18 = *(_QWORD *)(v16 + 16);
  v17 = *(_QWORD *)(v16 + 24);
  if (v18 >= v17 >> 1)
    v16 = sub_10007583C(v17 > 1, v18 + 1, 1, v16);
  v19 = *(_QWORD *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v16 + 16) = v18 + 1;
  sub_10000DB44(v19, v16+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v18, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v37 = *(_QWORD *)(v1 + 208);
  v38 = *(_QWORD *)(v1 + 192);
  v35 = *(_QWORD *)(v1 + 216);
  v36 = *(_QWORD *)(v1 + 176);
  v39 = *(_QWORD *)(v1 + 168);
  v40 = *(_QWORD *)(v1 + 160);
  v41 = *(_QWORD *)(v1 + 152);
  v42 = *(_QWORD *)(v1 + 144);
  v21 = *(_QWORD *)(v1 + 128);
  v31 = *(_QWORD *)(v1 + 120);
  v22 = *(_QWORD *)(v1 + 104);
  v23 = *(_QWORD *)(v1 + 112);
  v24 = *(_QWORD *)(v1 + 96);
  v34 = *(_QWORD *)(v1 + 88);
  v43 = *(_QWORD *)(v1 + 80);
  v25 = *(_QWORD *)(v1 + 56);
  v32 = *(_QWORD *)(v1 + 72);
  v33 = *(_QWORD *)(v1 + 64);
  v26 = *(_QWORD *)(v1 + 48);
  v30 = *(_QWORD *)(v1 + 40);
  v27 = *(void (**)(uint64_t))(v1 + 24);
  (*(void (**)(uint64_t))(v22 + 16))(v23);
  v28 = sub_100062F64();
  Timeline.init(entries:policy:)(v16, v23, v21, v28);
  v27(v25);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v30);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v31, v24);
  sub_100011694(v35, &qword_100548310);
  sub_10000E750(v36, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v36);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v31);
  swift_task_dealloc(v23);
  swift_task_dealloc(v34);
  swift_task_dealloc(v43);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1000645E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100547888 != -1)
    swift_once(&qword_100547888, sub_100062DB0);
  v2 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v3 = sub_10000D78C(v2, (uint64_t)qword_100561378);
  return sub_10000D964(v3, a1, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
}

double sub_10006464C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v5 = v4;
  v8 = *(_QWORD *)(a4 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(a1);
  v10 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_10000D964(v5, (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecentlyPlayedWidgetTimelineProvider);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = (v14 + 48) & ~v14;
  v16 = (_QWORD *)swift_allocObject(&unk_1004FA660, v15 + v9, v14 | 7);
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = a2;
  v16[5] = a3;
  sub_10000DB44((uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v16 + v15, type metadata accessor for RecentlyPlayedWidgetTimelineProvider);
  swift_retain(a3);
  v17 = sub_100007DD0((uint64_t)v12, (uint64_t)&unk_10054A0D0, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double sub_100064788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double result;
  uint64_t v22;

  v5 = v4;
  v8 = *(_QWORD *)(a4 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(a1);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_10000D964(v5, (uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1004FA638, v17 + 16, v15 | 7);
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  sub_10000DB44((uint64_t)v10, v18 + v16, type metadata accessor for RecentlyPlayedWidgetTimelineProvider);
  v19 = (_QWORD *)(v18 + v17);
  *v19 = a2;
  v19[1] = a3;
  swift_retain(a3);
  v20 = sub_100007DD0((uint64_t)v13, (uint64_t)&unk_10054A0B0, v18);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1000648D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to TimelineProvider.relevances()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100012D1C;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100064940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to TimelineProvider.relevance()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100012D1C;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_1000649AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for RecentlyPlayedWidgetTimelineProvider(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_100064A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for RecentlyPlayedWidgetTimelineProvider(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc(dword_10054A0AC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000DC64;
  return sub_10006395C(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100064AF0(uint64_t a1)
{
  return sub_100064B20(0.0, a1, qword_100549F10);
}

uint64_t sub_100064B00(uint64_t a1)
{
  return sub_100064B20(0.5, a1, qword_100549F28);
}

uint64_t sub_100064B10(uint64_t a1)
{
  return sub_100064B20(1.0, a1, qword_100549F40);
}

uint64_t sub_100064B20(float a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = type metadata accessor for TimelineEntryRelevance(0);
  sub_10000D924(v5, a3);
  sub_10000D78C(v5, (uint64_t)a3);
  return TimelineEntryRelevance.init(score:duration:)(a1, 0.0);
}

uint64_t sub_100064B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_100548310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100064BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for RecentlyPlayedWidgetTimelineProvider(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100064C40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  type metadata accessor for RecentlyPlayedWidgetTimelineProvider(0);
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10054A0CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100012D1C;
  return sub_100062FAC(a1, v4, v5, v6, v7);
}

BOOL sub_100064CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _BOOL8 result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;

  v4 = type metadata accessor for WidgetMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100548868);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_100548310);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v51 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v51 - v18;
  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v20 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v21 = *(int *)(v20 + 20);
  v22 = *(unsigned __int8 *)(a1 + v21);
  v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 != 3)
  {
    if (v23 == 3)
      return 0;
    v24 = 0x676E6979616C70;
    if (v22)
    {
      if (v22 == 1)
      {
        v25 = 0xE600000000000000;
        v26 = 0x646573756170;
        v54 = a2;
        if (!v23)
          goto LABEL_14;
LABEL_11:
        if (v23 == 1)
        {
          v27 = 0xE600000000000000;
          v24 = 0x646573756170;
        }
        else
        {
          v27 = 0xE700000000000000;
          v24 = 0x646570706F7473;
        }
LABEL_16:
        v53 = (int *)v20;
        if (v26 == v24 && v25 == v27)
        {
          swift_bridgeObjectRelease_n(v25, 2);
          v20 = (uint64_t)v53;
        }
        else
        {
          v28 = v25;
          v51 = v27;
          LODWORD(v52) = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v25, v24, v27, 0);
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v51);
          result = 0;
          v20 = (uint64_t)v53;
          if ((v52 & 1) == 0)
            return result;
        }
        goto LABEL_20;
      }
      v25 = 0xE700000000000000;
      v26 = 0x646570706F7473;
      v54 = a2;
      if (v23)
        goto LABEL_11;
    }
    else
    {
      v25 = 0xE700000000000000;
      v26 = 0x676E6979616C70;
      v54 = a2;
      if (v23)
        goto LABEL_11;
    }
LABEL_14:
    v27 = 0xE700000000000000;
    goto LABEL_16;
  }
  v54 = a2;
  if (v23 != 3)
    return 0;
LABEL_20:
  v30 = *(int *)(v20 + 24);
  v52 = a1;
  v31 = a1 + v30;
  v32 = v20;
  sub_100011370(v31, (uint64_t)v19, &qword_100548310);
  v53 = (int *)v32;
  sub_100011370(v54 + *(int *)(v32 + 24), (uint64_t)v17, &qword_100548310);
  v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100011370((uint64_t)v19, (uint64_t)v10, &qword_100548310);
  sub_100011370((uint64_t)v17, v33, &qword_100548310);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v34((uint64_t)v10, 1, v4) != 1)
  {
    sub_100011370((uint64_t)v10, (uint64_t)v14, &qword_100548310);
    if (v34(v33, 1, v4) != 1)
    {
      sub_10000DB44(v33, (uint64_t)v7, type metadata accessor for WidgetMusicItem);
      v35 = sub_100038B84((uint64_t)v14, (uint64_t)v7);
      sub_10000E750((uint64_t)v7, type metadata accessor for WidgetMusicItem);
      sub_100011694((uint64_t)v17, &qword_100548310);
      sub_100011694((uint64_t)v19, &qword_100548310);
      sub_10000E750((uint64_t)v14, type metadata accessor for WidgetMusicItem);
      sub_100011694((uint64_t)v10, &qword_100548310);
      if ((v35 & 1) == 0)
        return 0;
      goto LABEL_27;
    }
    sub_100011694((uint64_t)v17, &qword_100548310);
    sub_100011694((uint64_t)v19, &qword_100548310);
    sub_10000E750((uint64_t)v14, type metadata accessor for WidgetMusicItem);
LABEL_25:
    sub_100011694((uint64_t)v10, &qword_100548868);
    return 0;
  }
  sub_100011694((uint64_t)v17, &qword_100548310);
  sub_100011694((uint64_t)v19, &qword_100548310);
  if (v34(v33, 1, v4) != 1)
    goto LABEL_25;
  sub_100011694((uint64_t)v10, &qword_100548310);
LABEL_27:
  v36 = v52;
  v37 = v53;
  v38 = v54;
  if ((sub_100066D34(*(_QWORD *)(v52 + v53[7]), *(_QWORD *)(v54 + v53[7])) & 1) != 0)
  {
    v39 = v37[8];
    v40 = *(void **)(v36 + v39);
    v41 = v38;
    v42 = *(void **)(v38 + v39);
    if (v40)
    {
      if (!v42)
        return 0;
      sub_10002F7A0();
      v43 = v42;
      v44 = v40;
      v45 = static NSObject.== infix(_:_:)();

      v37 = v53;
      if ((v45 & 1) == 0)
        return 0;
    }
    else if (v42)
    {
      return 0;
    }
    if ((static TimelineEntryRelevance.== infix(_:_:)(v36 + v37[9], v41 + v37[9]) & 1) != 0)
    {
      v46 = v37[10];
      v47 = (_QWORD *)(v36 + v46);
      v48 = *(_QWORD *)(v36 + v46 + 8);
      v49 = (_QWORD *)(v41 + v46);
      v50 = v49[1];
      if (v48)
        return v50
            && (*v47 == *v49 && v48 == v50
             || (_stringCompareWithSmolCheck(_:_:expecting:)(*v47, v48, *v49, v50, 0) & 1) != 0);
      if (!v50)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1000651D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1000651E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100426800;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 40);
    return 0;
  }
  return result;
}

uint64_t *sub_100065250(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100547A38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = type metadata accessor for WidgetDiskCache(0);
    v12 = *(int *)(v11 + 20);
    v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    v14 = *(int *)(v11 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Logger(0);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v19 = v13;
    v18(v15, v16, v17);
    v20 = *(int *)(a3 + 44);
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t type metadata accessor for WidgetDiskCache(uint64_t a1)
{
  uint64_t result;

  result = qword_10054A1B0;
  if (!qword_10054A1B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WidgetDiskCache);
  return result;
}

uint64_t sub_1000653D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = type metadata accessor for WidgetDiskCache(0);

  v7 = a1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 44) + 8));
}

char *sub_100065478(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for WidgetDiskCache(0);
  v10 = *(int *)(v9 + 20);
  v11 = *(void **)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  v12 = *(int *)(v9 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Logger(0);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17 = v11;
  v16(v13, v14, v15);
  v18 = *(int *)(a3 + 44);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100065590(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = type metadata accessor for WidgetDiskCache(0);
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a2[v13];
  v15 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = v14;
  v16 = v14;

  v17 = *(int *)(v12 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = *(int *)(a3 + 44);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  return a1;
}

char *sub_100065708(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for WidgetDiskCache(0);
  *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)&a1[*(int *)(a3 + 44)] = *(_OWORD *)&a2[*(int *)(a3 + 44)];
  return a1;
}

char *sub_100065804(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = type metadata accessor for WidgetDiskCache(0);
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];

  v15 = *(int *)(v12 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = *(int *)(a3 + 44);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  return a1;
}

uint64_t sub_100065968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100065974);
}

uint64_t sub_100065974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for WidgetDiskCache(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1000659F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100065A00);
}

uint64_t sub_100065A00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WidgetDiskCache(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FileBacked(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000668D0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileBacked);
}

uint64_t *sub_100065A88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10000B4C8(&qword_100547A38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = type metadata accessor for Logger(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18 = v13;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_100065BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);

  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *sub_100065C2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)&a2[v9];
  *(_QWORD *)&a1[v9] = v11;
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = type metadata accessor for Logger(0);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v11;
  v15(v12, v13, v14);
  return a1;
}

char *sub_100065D18(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)&a2[v12];
  v14 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  v15 = v13;

  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

char *sub_100065E58(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_100065F3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_10000B4C8(&qword_100547A38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_100066078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100066084);
}

uint64_t sub_100066084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_10000B4C8(&qword_100547A38);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for Logger(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100066130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006613C);
}

uint64_t sub_10006613C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_10000B4C8(&qword_100547A38);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for Logger(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000661E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100066274(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_100066274(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10054A1C0)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10054A1C0);
  }
}

uint64_t sub_1000662C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v25 = a1;
  v26 = a2;
  v24 = a3;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(int *)(type metadata accessor for WidgetDiskCache(0) + 20);
  sub_100017290();
  static DispatchQoS.unspecified.getter();
  v27 = _swiftEmptyArrayStorage;
  v13 = sub_100066888();
  v14 = sub_10000B4C8(&qword_100548328);
  v15 = sub_1000172CC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v14, v15, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100444790, v12, v9, v6, 0);
  v17 = v24;
  *(_QWORD *)&v24[v23] = v16;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v18 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v19 = v17;
  v20 = v26;
  sub_1000664E0(v25, v26, v19);

  return swift_bridgeObjectRelease(v20);
}

uint64_t sub_1000664E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  id v22;
  char *v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v4 = sub_10000B4C8(&qword_100547A38);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v25 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v25 - v15;
  v17 = (void *)objc_opt_self(NSFileManager);
  v18 = objc_msgSend(v17, "defaultManager");
  NSFileManager.musicAppGroupCachesURL.getter((uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003A544((uint64_t)v6);
    v19 = 1;
  }
  else
  {
    v25 = a3;
    v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v16, v6, v7);
    URL.appending(_:)(0x646957636973754DLL, 0xEC00000073746567, 0);
    URL.appending(_:)(v26, v27, 0);
    v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v11, v7);
    v22 = objc_msgSend(v17, "defaultManager");
    NSFileManager.createDirectoryIfNeeded(at:)();
    v21(v16, v7);

    v23 = v25;
    v20(v25, v14, v7);
    a3 = v23;
    v19 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, v19, 1, v7);
}

uint64_t sub_100066730@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = Data.init(contentsOf:options:)(a1, 0);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

id sub_10006675C@<X0>(_BYTE *a1@<X8>)
{
  id v2;
  NSURL *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  id v7;
  id result;
  id v9;
  uint64_t v10;
  id v11;

  v2 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v3);
  v5 = v4;
  v11 = 0;
  v6 = objc_msgSend(v2, "removeItemAtURL:error:", v4, &v11);

  v7 = v11;
  if (v6)
  {
    result = v11;
  }
  else
  {
    v9 = v11;
    v10 = _convertNSErrorToError(_:)(v7);

    swift_willThrow();
    result = (id)swift_errorRelease(v10);
  }
  *a1 = v6 ^ 1;
  return result;
}

uint64_t sub_100066860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Data.write(to:options:)(a3, 0, a1, a2);
}

unint64_t sub_100066888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100548320;
  if (!qword_100548320)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_100548320);
  }
  return result;
}

uint64_t sub_1000668D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void sub_1000668FC(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_10006694C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1000669B8 + 4 * byte_100426845[a2]))(v2 - 12);
}

uint64_t sub_1000669B8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x8000000100444360;
  if (a1 == v1 - 12 && v2 == 0x8000000100444360)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 - 12, 0x8000000100444360, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_100066A60(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x676E6979616C70;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x646573756170;
    else
      v4 = 0x646570706F7473;
    if (v3 == 1)
      v5 = 0xE600000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x646573756170;
      else
        v2 = 0x646570706F7473;
      if (v6 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x676E6979616C70;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x676E6979616C70)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_100066B70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100066BC0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100066C58 + 4 * byte_10042684F[a2]))(0x61656C655277656ELL);
}

uint64_t sub_100066C58(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x61656C655277656ELL && v1 == 0xEB00000000736573)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x61656C655277656ELL, 0xEB00000000736573, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEB00000000736573);
  return v2 & 1;
}

uint64_t sub_100066D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for WidgetMusicItem(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_10000D964(a1 + v12, (uint64_t)v10, type metadata accessor for WidgetMusicItem);
        sub_10000D964(a2 + v12, (uint64_t)v7, type metadata accessor for WidgetMusicItem);
        v15 = sub_100038B84((uint64_t)v10, (uint64_t)v7);
        sub_10000E750((uint64_t)v7, type metadata accessor for WidgetMusicItem);
        sub_10000E750((uint64_t)v10, type metadata accessor for WidgetMusicItem);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

_QWORD *sub_100066E70(char a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *result;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  if (a2 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (!a2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10000B4C8(&qword_10054A410);
  result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
  result[2] = a2;
  v6 = result + 4;
  if (a2 == 1)
  {
    v7 = 0;
LABEL_9:
    v10 = a2 - v7;
    do
    {
      *v6++ = a1 & 1;
      --v10;
    }
    while (v10);
    return result;
  }
  v8 = 0;
  v7 = a2 & 0xFFFFFFFFFFFFFFFELL;
  v6 += a2 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    v9 = (char *)result + v8;
    v9[32] = a1 & 1;
    v9[33] = a1 & 1;
    v8 += 2;
  }
  while (v7 != v8);
  if (v7 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_100066F68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v6 = sub_10000B4C8(a3);
      v7 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v6);
      v7[2] = a2;
      v8 = *(_QWORD *)(sub_10000B4C8(a3) - 8);
      v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      sub_100011370(a1, (uint64_t)v7 + v9, a3);
      v10 = a2 - 1;
      if (a2 != 1)
      {
        v11 = *(_QWORD *)(v8 + 72);
        v12 = (uint64_t)v7 + v11 + v9;
        do
        {
          sub_100011370(a1, v12, a3);
          v12 += v11;
          --v10;
        }
        while (v10);
      }
    }
    else
    {
      v7 = _swiftEmptyArrayStorage;
    }
    sub_100011694(a1, a3);
    return (uint64_t)v7;
  }
  return result;
}

_QWORD *sub_10006708C(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;

  if (a2 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_10000B4C8(&qword_10054A538);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5;
      v5[2] = a2;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            sub_100039984(a1);
            *v8++ = a1;
            --v7;
          }
          while (v7);
        }
        sub_100039984(a1);
      }
    }
    else
    {
      sub_100017318(a1);
      return _swiftEmptyArrayStorage;
    }
    return v6;
  }
  return result;
}

uint64_t sub_10006717C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[42] = a5;
  v6[43] = a6;
  v6[40] = a1;
  v6[41] = a2;
  v6[34] = a3;
  v6[35] = a4;
  v6[36] = a5;
  v6[37] = a6;
  return swift_task_switch(sub_1000671A0, 0, 0);
}

uint64_t sub_1000671A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;

  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(sub_10000B4C8(&qword_100548310) - 8);
  *(_QWORD *)(v0 + 352) = v3;
  v4 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v0 + 360) = v4;
  v5 = swift_task_alloc((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetMusicItem(0);
  *(_QWORD *)(v0 + 368) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 376) = v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  if (__OFSUB__(v1 >> 1, v2))
  {
    __break(1u);
  }
  else
  {
    v12 = *(_OWORD *)(v0 + 320);
    v9 = sub_100066F68(v5, (v1 >> 1) - v2, &qword_100548310);
    swift_task_dealloc(v5);
    *(_QWORD *)(v0 + 304) = v9;
    v10 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 384) = v10;
    *(_QWORD *)(v10 + 16) = v0 + 272;
    *(_OWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 40) = v0 + 304;
    *(_QWORD *)(v0 + 392) = sub_10000B4C8(&qword_10054A450);
    if (sub_10041ADEC(2, 18, 0, 0))
    {
      v11 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
      *(_QWORD *)(v0 + 400) = v11;
      *v11 = v0;
      v11[1] = sub_100067334;
      return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
    }
    else
    {
      return swift_task_switch(sub_1000673A0, 0, 0);
    }
  }
  return result;
}

uint64_t sub_100067334()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 400));
  if (v0)
  {
    *(_QWORD *)(v2 + 440) = v0;
    v3 = sub_10007BE88;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 384));
    v3 = sub_10007BE90;
  }
  return swift_task_switch(v3, 0, 0);
}

void sub_1000673A0()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;

  swift_taskGroup_initialize(v0 + 2, v0[49]);
  v0[39] = v0 + 2;
  v2 = (char *)&dword_10054A5D8 + dword_10054A5D8;
  v1 = (_QWORD *)swift_task_alloc(unk_10054A5DC);
  v0[51] = v1;
  *v1 = v0;
  v1[1] = sub_10006744C;
  __asm { BR              X0 }
}

uint64_t sub_10006744C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 408);
  v3 = *v1;
  *(_QWORD *)(v3 + 416) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100067590, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 424) = v5;
  v6 = sub_10000B4C8(&qword_10054A460);
  *v5 = v3;
  v5[1] = sub_1000674F8;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_1000674F8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_10006754C, 0, 0);
}

uint64_t sub_10006754C()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 384));
  return swift_task_switch(sub_10007BE90, 0, 0);
}

uint64_t sub_100067590()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 432) = v1;
  v2 = sub_10000B4C8(&qword_10054A460);
  *v1 = v0;
  v1[1] = sub_100067620;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_100067620()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 432));
  return swift_task_switch(sub_100067674, 0, 0);
}

uint64_t sub_100067674()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 440) = *(_QWORD *)(v0 + 416);
  return swift_task_switch(sub_10007BE88, 0, 0);
}

uint64_t sub_1000676C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  v3[34] = a3;
  return swift_task_switch(sub_1000676E8, 0, 0);
}

uint64_t sub_1000676E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 280) = sub_100066E70(1, *(_QWORD *)(*(_QWORD *)(v0 + 312) + 16));
  v1 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 320) = v1;
  *(_QWORD *)(v1 + 16) = v0 + 272;
  *(_OWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 40) = v0 + 280;
  *(_QWORD *)(v0 + 328) = sub_10000B4C8(&qword_10054A638);
  if (!sub_10041ADEC(2, 18, 0, 0))
    return swift_task_switch(sub_100067868, 0, 0);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 336) = v2;
  *v2 = v0;
  v2[1] = sub_1000677FC;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1000677FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 336));
  if (v0)
  {
    *(_QWORD *)(v2 + 376) = v0;
    v3 = sub_100067C6C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 320));
    v3 = sub_100067B74;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100067868()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[41]);
  v0[36] = v0 + 2;
  v1 = v0[34];
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A640
                                                                                    + dword_10054A640);
  v2 = (_QWORD *)swift_task_alloc(unk_10054A644);
  v0[43] = v2;
  *v2 = v0;
  v2[1] = sub_1000678F8;
  return v4((uint64_t)v4, (uint64_t)(v0 + 36), v1, v0[37], v0[38], (uint64_t)(v0 + 35));
}

uint64_t sub_1000678F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 344);
  v3 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100067A3C, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 360) = v5;
  v6 = sub_10000B4C8(&qword_10054A648);
  *v5 = v3;
  v5[1] = sub_1000679A4;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_1000679A4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_1000679F8, 0, 0);
}

uint64_t sub_1000679F8()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  return swift_task_switch(sub_100067B74, 0, 0);
}

uint64_t sub_100067A3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 368) = v1;
  v2 = sub_10000B4C8(&qword_10054A648);
  *v1 = v0;
  v1[1] = sub_100067ACC;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_100067ACC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  return swift_task_switch(sub_100067B20, 0, 0);
}

uint64_t sub_100067B20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 352);
  return swift_task_switch(sub_100067C6C, 0, 0);
}

uint64_t sub_100067B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(_BYTE *)(v1 + v3 + 32) & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_1000750C0(0, v4[2] + 1, 1, v4);
        v6 = v4[2];
        v5 = v4[3];
        v7 = v6 + 1;
        if (v6 >= v5 >> 1)
          v4 = sub_1000750C0((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
        v4[2] = v7;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v4);
}

uint64_t sub_100067C6C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100067CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[42] = a5;
  v6[43] = a6;
  v6[40] = a1;
  v6[41] = a2;
  v6[34] = a3;
  v6[35] = a4;
  v6[36] = a5;
  v6[37] = a6;
  return swift_task_switch(sub_100067CCC, 0, 0);
}

uint64_t sub_100067CCC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;

  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(sub_10000B4C8(&qword_100548310) - 8);
  *(_QWORD *)(v0 + 352) = v3;
  v4 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v0 + 360) = v4;
  v5 = swift_task_alloc((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetMusicItem(0);
  *(_QWORD *)(v0 + 368) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 376) = v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  if (__OFSUB__(v1 >> 1, v2))
  {
    __break(1u);
  }
  else
  {
    v12 = *(_OWORD *)(v0 + 320);
    v9 = sub_100066F68(v5, (v1 >> 1) - v2, &qword_100548310);
    swift_task_dealloc(v5);
    *(_QWORD *)(v0 + 304) = v9;
    v10 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 384) = v10;
    *(_QWORD *)(v10 + 16) = v0 + 272;
    *(_OWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 40) = v0 + 304;
    *(_QWORD *)(v0 + 392) = sub_10000B4C8(&qword_10054A450);
    if (sub_10041ADEC(2, 18, 0, 0))
    {
      v11 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
      *(_QWORD *)(v0 + 400) = v11;
      *v11 = v0;
      v11[1] = sub_100067E60;
      return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
    }
    else
    {
      return swift_task_switch(sub_100067ECC, 0, 0);
    }
  }
  return result;
}

uint64_t sub_100067E60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 400));
  if (v0)
  {
    *(_QWORD *)(v2 + 440) = v0;
    v3 = sub_100068448;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 384));
    v3 = sub_1000681F4;
  }
  return swift_task_switch(v3, 0, 0);
}

void sub_100067ECC()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;

  swift_taskGroup_initialize(v0 + 2, v0[49]);
  v0[39] = v0 + 2;
  v2 = (char *)&dword_10054A458 + dword_10054A458;
  v1 = (_QWORD *)swift_task_alloc(unk_10054A45C);
  v0[51] = v1;
  *v1 = v0;
  v1[1] = sub_100067F78;
  __asm { BR              X0 }
}

uint64_t sub_100067F78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 408);
  v3 = *v1;
  *(_QWORD *)(v3 + 416) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000680BC, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 424) = v5;
  v6 = sub_10000B4C8(&qword_10054A460);
  *v5 = v3;
  v5[1] = sub_100068024;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_100068024()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_100068078, 0, 0);
}

uint64_t sub_100068078()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 384));
  return swift_task_switch(sub_1000681F4, 0, 0);
}

uint64_t sub_1000680BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 432) = v1;
  v2 = sub_10000B4C8(&qword_10054A460);
  *v1 = v0;
  v1[1] = sub_10006814C;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_10006814C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 432));
  return swift_task_switch(sub_1000681A0, 0, 0);
}

uint64_t sub_1000681A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 440) = *(_QWORD *)(v0 + 416);
  return swift_task_switch(sub_100068448, 0, 0);
}

uint64_t sub_1000681F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v16 = *(_QWORD *)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 352);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v18 = *(_QWORD *)(v0 + 376);
    v6 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
    swift_bridgeObjectRetain();
    v19 = _swiftEmptyArrayStorage;
    v17 = v5;
    do
    {
      v7 = *(_QWORD *)(v0 + 368);
      v8 = (*(_QWORD *)(v0 + 360) + 15) & 0xFFFFFFFFFFFFFFF0;
      v9 = swift_task_alloc(v6);
      v10 = swift_task_alloc(v8);
      sub_100011370(v4, v10, &qword_100548310);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v10, 1, v7) == 1)
      {
        sub_100011694(v10, &qword_100548310);
      }
      else
      {
        sub_10000DB44(v10, v9, type metadata accessor for WidgetMusicItem);
        swift_task_dealloc(v10);
        v10 = swift_task_alloc(v6);
        sub_10000DB44(v9, v10, type metadata accessor for WidgetMusicItem);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) != 0)
          v11 = (unint64_t)v19;
        else
          v11 = sub_1000753E8(0, v19[2] + 1, 1, (unint64_t)v19, &qword_10054A4A0, type metadata accessor for WidgetMusicItem);
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 >= v12 >> 1)
          v11 = sub_1000753E8(v12 > 1, v13 + 1, 1, v11, &qword_10054A4A0, type metadata accessor for WidgetMusicItem);
        *(_QWORD *)(v11 + 16) = v13 + 1;
        v19 = (_QWORD *)v11;
        sub_10000DB44(v10, v11+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v13, type metadata accessor for WidgetMusicItem);
        v5 = v17;
      }
      swift_task_dealloc(v10);
      swift_task_dealloc(v9);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v16);
    v1 = *(_QWORD *)(v0 + 304);
    v14 = v19;
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v14);
}

uint64_t sub_100068448()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 384));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 304));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100068484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[37] = a2;
  v3[38] = v2;
  v3[36] = a1;
  return swift_task_switch(sub_1000684A0, 0, 0);
}

uint64_t sub_1000684A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_100548310) - 8);
  *(_QWORD *)(v0 + 312) = v2;
  v3 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v0 + 320) = v3;
  v4 = swift_task_alloc((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetMusicItem(0);
  v14 = *(_OWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 328) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 336) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = sub_10000B4C8(&qword_100549DB0);
  v8 = sub_100012324(&qword_10054A560, &qword_100549DB0, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  v9 = dispatch thunk of Collection.count.getter(v7, v8);
  v10 = sub_100066F68(v4, v9, &qword_100548310);
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 272) = v10;
  v11 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 344) = v11;
  *(_QWORD *)(v11 + 16) = v1;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v0 + 272;
  *(_QWORD *)(v0 + 352) = sub_10000B4C8(&qword_10054A450);
  if (!sub_10041ADEC(2, 18, 0, 0))
    return swift_task_switch(sub_1000686D4, 0, 0);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 360) = v12;
  *v12 = v0;
  v12[1] = sub_100068668;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100068668()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 360));
  if (v0)
  {
    *(_QWORD *)(v2 + 400) = v0;
    v3 = sub_100068C30;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 344));
    v3 = sub_1000689DC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000686D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[44]);
  v0[35] = v0 + 2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A568
                                                                                    + dword_10054A568);
  v1 = (_QWORD *)swift_task_alloc(dword_10054A56C);
  v0[46] = v1;
  *v1 = v0;
  v1[1] = sub_100068760;
  return v3((uint64_t)v3, (uint64_t)(v0 + 35), v0[38], v0[36], v0[37], (uint64_t)(v0 + 34));
}

uint64_t sub_100068760()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 368);
  v3 = *v1;
  *(_QWORD *)(v3 + 376) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000688A4, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 384) = v5;
  v6 = sub_10000B4C8(&qword_10054A460);
  *v5 = v3;
  v5[1] = sub_10006880C;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_10006880C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 384));
  return swift_task_switch(sub_100068860, 0, 0);
}

uint64_t sub_100068860()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  return swift_task_switch(sub_1000689DC, 0, 0);
}

uint64_t sub_1000688A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 392) = v1;
  v2 = sub_10000B4C8(&qword_10054A460);
  *v1 = v0;
  v1[1] = sub_100068934;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_100068934()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_100068988, 0, 0);
}

uint64_t sub_100068988()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 376);
  return swift_task_switch(sub_100068C30, 0, 0);
}

uint64_t sub_1000689DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v16 = *(_QWORD *)(v0 + 272);
    v3 = *(_QWORD *)(v0 + 312);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v18 = *(_QWORD *)(v0 + 336);
    v6 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
    swift_bridgeObjectRetain();
    v19 = _swiftEmptyArrayStorage;
    v17 = v5;
    do
    {
      v7 = *(_QWORD *)(v0 + 328);
      v8 = (*(_QWORD *)(v0 + 320) + 15) & 0xFFFFFFFFFFFFFFF0;
      v9 = swift_task_alloc(v6);
      v10 = swift_task_alloc(v8);
      sub_100011370(v4, v10, &qword_100548310);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v10, 1, v7) == 1)
      {
        sub_100011694(v10, &qword_100548310);
      }
      else
      {
        sub_10000DB44(v10, v9, type metadata accessor for WidgetMusicItem);
        swift_task_dealloc(v10);
        v10 = swift_task_alloc(v6);
        sub_10000DB44(v9, v10, type metadata accessor for WidgetMusicItem);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) != 0)
          v11 = (unint64_t)v19;
        else
          v11 = sub_1000753E8(0, v19[2] + 1, 1, (unint64_t)v19, &qword_10054A4A0, type metadata accessor for WidgetMusicItem);
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 >= v12 >> 1)
          v11 = sub_1000753E8(v12 > 1, v13 + 1, 1, v11, &qword_10054A4A0, type metadata accessor for WidgetMusicItem);
        *(_QWORD *)(v11 + 16) = v13 + 1;
        v19 = (_QWORD *)v11;
        sub_10000DB44(v10, v11+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v13, type metadata accessor for WidgetMusicItem);
        v5 = v17;
      }
      swift_task_dealloc(v10);
      swift_task_dealloc(v9);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v16);
    v1 = *(_QWORD *)(v0 + 272);
    v14 = v19;
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v14);
}

uint64_t sub_100068C30()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 272));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100068C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  v3[34] = a3;
  return swift_task_switch(sub_100068C8C, 0, 0);
}

uint64_t sub_100068C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(sub_10000B4C8(&qword_10054A6A0) - 8);
  *(_QWORD *)(v0 + 320) = v2;
  v3 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v0 + 328) = v3;
  v4 = swift_task_alloc((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_OWORD *)(v0 + 296);
  v5 = sub_10000B4C8(&qword_100549EE0);
  *(_QWORD *)(v0 + 336) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 344) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = sub_100066F68(v4, *(_QWORD *)(v1 + 16), &qword_10054A6A0);
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 280) = v7;
  v8 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 352) = v8;
  *(_QWORD *)(v8 + 16) = v0 + 272;
  *(_OWORD *)(v8 + 24) = v11;
  *(_QWORD *)(v8 + 40) = v0 + 280;
  *(_QWORD *)(v0 + 360) = sub_10000B4C8(&qword_10054A6B8);
  if (!sub_10041ADEC(2, 18, 0, 0))
    return swift_task_switch(sub_100068E94, 0, 0);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 368) = v9;
  *v9 = v0;
  v9[1] = sub_100068E28;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100068E28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 368));
  if (v0)
  {
    *(_QWORD *)(v2 + 408) = v0;
    v3 = sub_1000693F4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 352));
    v3 = sub_1000691A0;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100068E94()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[45]);
  v0[36] = v0 + 2;
  v1 = v0[34];
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A6C0
                                                                                    + dword_10054A6C0);
  v2 = (_QWORD *)swift_task_alloc(unk_10054A6C4);
  v0[47] = v2;
  *v2 = v0;
  v2[1] = sub_100068F24;
  return v4((uint64_t)v4, (uint64_t)(v0 + 36), v1, v0[37], v0[38], (uint64_t)(v0 + 35));
}

uint64_t sub_100068F24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 376);
  v3 = *v1;
  *(_QWORD *)(v3 + 384) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100069068, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 392) = v5;
  v6 = sub_10000B4C8(&qword_10054A6C8);
  *v5 = v3;
  v5[1] = sub_100068FD0;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_100068FD0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_100069024, 0, 0);
}

uint64_t sub_100069024()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  return swift_task_switch(sub_1000691A0, 0, 0);
}

uint64_t sub_100069068()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 400) = v1;
  v2 = sub_10000B4C8(&qword_10054A6C8);
  *v1 = v0;
  v1[1] = sub_1000690F8;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_1000690F8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 400));
  return swift_task_switch(sub_10006914C, 0, 0);
}

uint64_t sub_10006914C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v0 + 384);
  return swift_task_switch(sub_1000693F4, 0, 0);
}

uint64_t sub_1000691A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v16 = *(_QWORD *)(v0 + 280);
    v3 = *(_QWORD *)(v0 + 320);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v18 = *(_QWORD *)(v0 + 344);
    v6 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
    swift_bridgeObjectRetain();
    v19 = _swiftEmptyArrayStorage;
    v17 = v5;
    do
    {
      v7 = *(_QWORD *)(v0 + 336);
      v8 = (*(_QWORD *)(v0 + 328) + 15) & 0xFFFFFFFFFFFFFFF0;
      v9 = swift_task_alloc(v6);
      v10 = swift_task_alloc(v8);
      sub_100011370(v4, v10, &qword_10054A6A0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v10, 1, v7) == 1)
      {
        sub_100011694(v10, &qword_10054A6A0);
      }
      else
      {
        sub_100011530(v10, v9, &qword_100549EE0);
        swift_task_dealloc(v10);
        v10 = swift_task_alloc(v6);
        sub_100011530(v9, v10, &qword_100549EE0);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) != 0)
          v11 = (unint64_t)v19;
        else
          v11 = sub_100075630(0, v19[2] + 1, 1, (unint64_t)v19, &qword_10054A6F8, &qword_100549EE0);
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 >= v12 >> 1)
          v11 = sub_100075630(v12 > 1, v13 + 1, 1, v11, &qword_10054A6F8, &qword_100549EE0);
        *(_QWORD *)(v11 + 16) = v13 + 1;
        v19 = (_QWORD *)v11;
        sub_100011530(v10, v11+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v13, &qword_100549EE0);
        v5 = v17;
      }
      swift_task_dealloc(v10);
      swift_task_dealloc(v9);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v16);
    v1 = *(_QWORD *)(v0 + 280);
    v14 = v19;
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v14);
}

uint64_t sub_1000693F4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100069430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[42] = a5;
  v6[43] = a6;
  v6[40] = a1;
  v6[41] = a2;
  v6[34] = a3;
  v6[35] = a4;
  v6[36] = a5;
  v6[37] = a6;
  return swift_task_switch(sub_100069454, 0, 0);
}

void sub_100069454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344) >> 1;
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    v5 = *(_OWORD *)(v0 + 320);
    *(_QWORD *)(v0 + 304) = sub_10006708C((void *)1, v2 - v1);
    v3 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 352) = v3;
    *(_QWORD *)(v3 + 16) = v0 + 272;
    *(_OWORD *)(v3 + 24) = v5;
    *(_QWORD *)(v3 + 40) = v0 + 304;
    *(_QWORD *)(v0 + 360) = sub_10000B4C8(&qword_10054A4F0);
    if (sub_10041ADEC(2, 18, 0, 0))
    {
      v4 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
      *(_QWORD *)(v0 + 368) = v4;
      *v4 = v0;
      v4[1] = sub_100069570;
      withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
    }
    else
    {
      swift_task_switch(sub_1000695DC, 0, 0);
    }
  }
}

uint64_t sub_100069570()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 368));
  if (v0)
  {
    *(_QWORD *)(v2 + 408) = v0;
    v3 = sub_100069A14;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 352));
    v3 = sub_100069904;
  }
  return swift_task_switch(v3, 0, 0);
}

void sub_1000695DC()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;

  swift_taskGroup_initialize(v0 + 2, v0[45]);
  v0[39] = v0 + 2;
  v2 = (char *)&dword_10054A4F8 + dword_10054A4F8;
  v1 = (_QWORD *)swift_task_alloc(unk_10054A4FC);
  v0[47] = v1;
  *v1 = v0;
  v1[1] = sub_100069688;
  __asm { BR              X0 }
}

uint64_t sub_100069688()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 376);
  v3 = *v1;
  *(_QWORD *)(v3 + 384) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000697CC, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 392) = v5;
  v6 = sub_10000B4C8(&qword_10054A500);
  *v5 = v3;
  v5[1] = sub_100069734;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_100069734()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_100069788, 0, 0);
}

uint64_t sub_100069788()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  return swift_task_switch(sub_100069904, 0, 0);
}

uint64_t sub_1000697CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 400) = v1;
  v2 = sub_10000B4C8(&qword_10054A500);
  *v1 = v0;
  v1[1] = sub_10006985C;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_10006985C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 400));
  return swift_task_switch(sub_1000698B0, 0, 0);
}

uint64_t sub_1000698B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v0 + 384);
  return swift_task_switch(sub_100069A14, 0, 0);
}

uint64_t sub_100069904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(v1, 2);
    for (i = 0; i != v2; ++i)
    {
      v5 = *(void **)(v1 + 8 * i + 32);
      if (v5 != (void *)1)
      {
        v6 = v5;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v8 = _swiftEmptyArrayStorage[2];
        v7 = _swiftEmptyArrayStorage[3];
        if (v8 >= v7 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
        v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
        specialized Array._endMutation()(v4);
      }
    }
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    swift_bridgeObjectRetain(v1);
  }
  swift_bridgeObjectRelease_n(v1, 2);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_100069A14()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 304));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100069A50@<X0>(uint64_t a1@<X8>)
{
  return sub_100069A6C(&qword_100547AD8, &qword_100547C18, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_100069A6C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = sub_10000B4C8(a1);
  v9 = sub_100012324(a2, a1, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_100069B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10006A528(a1, a2, &qword_100547BC8, type metadata accessor for WidgetChartDiskCache.ChartList, (uint64_t)sub_10007BE60, &qword_10054A688, (uint64_t)&unk_1004248B4, a3);
}

uint64_t sub_100069BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10006A528(a1, a2, &qword_100547AF0, type metadata accessor for TopChartsWidgetDataProvider.Chart, (uint64_t)sub_10007BE60, &qword_10054A618, (uint64_t)&unk_100424904, a3);
}

uint64_t sub_100069BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10006A528(a1, a2, &qword_100548310, type metadata accessor for WidgetMusicItem, (uint64_t)sub_10007BE60, &qword_100547E18, (uint64_t)&unk_100425A48, a3);
}

uint64_t sub_100069C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  _BYTE v70[16];
  uint64_t v71;
  uint64_t v72[4];
  id v73[2];

  v3 = v2;
  v65 = a2;
  v64 = type metadata accessor for Logger(0);
  v67 = *(_QWORD *)(v64 - 8);
  v5 = __chkstk_darwin(v64);
  v63 = (unint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v59 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v59 - v10;
  v12 = sub_10000B4C8(&qword_100547A38);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v59 - v16;
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = (char *)v3;
  sub_100011370(v3, (uint64_t)v15, &qword_100547A38);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v23 = v22(v15, 1, v18);
  v62 = a1;
  if (v23 == 1)
  {
    sub_100011694((uint64_t)v15, &qword_100547A38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    v24 = v65;
    goto LABEL_4;
  }
  v59 = v11;
  v60 = v9;
  v61 = v21;
  v24 = v65;
  URL.appending(_:)(a1, v65, 1);
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v15, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if (v22(v17, 1, v18) == 1)
  {
LABEL_4:
    sub_100011694((uint64_t)v17, &qword_100547A38);
    v26 = type metadata accessor for WidgetDiskCache(0);
    v27 = v67;
    v28 = v63;
    v29 = v64;
    (*(void (**)(unint64_t, char *, uint64_t))(v67 + 16))(v63, &v66[*(int *)(v26 + 24)], v64);
    v30 = swift_bridgeObjectRetain_n(v24, 2);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v72[0] = v34;
      *(_DWORD *)v33 = 136446210;
      swift_bridgeObjectRetain();
      v69 = sub_1000759E0(v62, v24, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70);
      swift_bridgeObjectRelease_n(v24, 3);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unable to get widget cache url for loading item named \"%{public}s\"", v33, 0xCu);
      v35 = 1;
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

      (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v28, v29);
    }
    else
    {

      swift_bridgeObjectRelease_n(v24, 2);
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v28, v29);
      return 1;
    }
    return v35;
  }
  v36 = v61;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v61, v17, v18);
  v73[0] = (id)1;
  v37 = type metadata accessor for WidgetDiskCache(0);
  v38 = v66;
  __chkstk_darwin(v37);
  *(&v59 - 2) = v36;
  OS_dispatch_queue.sync<A>(execute:)(sub_10007BE60, &v59 - 4, &type metadata for Data);
  v40 = v72[0];
  v39 = v72[1];
  v41 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = JSONDecoder.init()();
  v43 = sub_10001593C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for CodableImage, v40, v39, &type metadata for CodableImage, v43);
  v60 = (char *)v40;
  v63 = v39;
  swift_release(v42);
  v45 = (void *)v69;
  sub_100017318(v73[0]);
  v73[0] = v45;
  v46 = v67;
  v47 = v59;
  v48 = v64;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v59, &v38[*(int *)(v37 + 24)], v64);
  v49 = swift_bridgeObjectRetain_n(v24, 2);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc(22, -1);
    v53 = swift_slowAlloc(64, -1);
    v66 = (char *)v25;
    v54 = v53;
    v71 = v53;
    *(_DWORD *)v52 = 136446466;
    swift_bridgeObjectRetain();
    v69 = sub_1000759E0(v62, v24, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70);
    swift_bridgeObjectRelease_n(v24, 3);
    *(_WORD *)(v52 + 12) = 2082;
    swift_beginAccess(v73, &v69, 0, 0);
    v68 = v73[0];
    sub_100039984(v73[0]);
    v55 = sub_10000B4C8(&qword_100549190);
    v56 = String.init<A>(describing:)(&v68, v55);
    v58 = v57;
    v68 = (id)sub_1000759E0(v56, v57, &v71);
    v36 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
    swift_bridgeObjectRelease(v58);
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Loaded cached item named \"%{public}s\", value %{public}s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v52, -1, -1);
    sub_10003A628((uint64_t)v60, v63);

    v25 = (void (*)(char *, uint64_t))v66;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v59, v48);
  }
  else
  {
    swift_bridgeObjectRelease_n(v24, 2);
    sub_10003A628((uint64_t)v60, v63);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  }
  v25(v36, v18);
  swift_beginAccess(v73, v72, 0, 0);
  return (uint64_t)v73[0];
}

uint64_t sub_10006A4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10006A528(a1, a2, &qword_1005482D8, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)sub_10007BE60, &qword_100548088, (uint64_t)&unk_100424D44, a3);
}

uint64_t sub_10006A528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t *v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  unint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[16];
  uint64_t v109;
  uint64_t v110[5];

  v94 = a7;
  v93 = a6;
  v97 = a5;
  v98 = a8;
  v99 = a4;
  v10 = v8;
  v104 = a2;
  v101 = a1;
  v100 = type metadata accessor for Logger(0);
  v103 = *(_QWORD *)(v100 - 8);
  v11 = __chkstk_darwin(v100);
  v102 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v96 = (char *)&v86 - v14;
  __chkstk_darwin(v13);
  v92 = (char *)&v86 - v15;
  v95 = a3;
  v16 = sub_10000B4C8(a3);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v86 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v86 - v23;
  v25 = sub_10000B4C8(&qword_100547A38);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v86 - v29;
  v31 = type metadata accessor for URL(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v86 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v10;
  sub_100011370(v10, (uint64_t)v28, &qword_100547A38);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v35(v28, 1, v31) == 1)
  {
    sub_100011694((uint64_t)v28, &qword_100547A38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, 1, 1, v31);
    v36 = v104;
    v37 = v101;
  }
  else
  {
    v89 = v22;
    v87 = v19;
    v88 = v16;
    v91 = v34;
    v90 = v24;
    v37 = v101;
    v36 = v104;
    URL.appending(_:)(v101, v104, 1);
    v38 = *(void (**)(char *, uint64_t))(v32 + 8);
    v38(v28, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v31);
    if (v35(v30, 1, v31) != 1)
    {
      v102 = (char *)v38;
      v51 = v91;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v91, v30, v31);
      v52 = v99;
      v53 = v99(0);
      v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
      v55 = (uint64_t)v90;
      v54(v90, 1, 1, v53);
      v56 = type metadata accessor for WidgetDiskCache(0);
      __chkstk_darwin(v56);
      *(&v86 - 2) = (uint64_t)v51;
      OS_dispatch_queue.sync<A>(execute:)(v97, &v86 - 4, &type metadata for Data);
      v97 = v56;
      v57 = v110[0];
      v58 = (uint64_t (*)(uint64_t))v110[1];
      v59 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
      v60 = JSONDecoder.init()();
      v61 = v52;
      v62 = v57;
      v63 = sub_10001254C(v93, v61, v94);
      v64 = (uint64_t)v89;
      v99 = v58;
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(v53, v62, v58, v53, v63);
      v65 = swift_release(v60);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v54)(v64, 0, 1, v53, v65);
      v66 = v95;
      sub_10007B328(v64, v55, v95);
      v67 = v92;
      v68 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v92, v105 + *(int *)(v97 + 24), v100);
      v69 = v104;
      v70 = swift_bridgeObjectRetain_n(v104, 2);
      v71 = Logger.logObject.getter(v70);
      v72 = static os_log_type_t.default.getter();
      v73 = os_log_type_enabled(v71, (os_log_type_t)v72);
      v74 = v98;
      if (v73)
      {
        v75 = swift_slowAlloc(22, -1);
        v97 = v62;
        v76 = v66;
        v77 = v75;
        v78 = swift_slowAlloc(64, -1);
        v105 = v31;
        v79 = v78;
        v109 = v78;
        *(_DWORD *)v77 = 136446466;
        swift_bridgeObjectRetain();
        v107 = sub_1000759E0(v101, v69, &v109);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108);
        swift_bridgeObjectRelease_n(v69, 3);
        *(_WORD *)(v77 + 12) = 2082;
        swift_beginAccess(v55, &v107, 0, 0);
        v80 = (uint64_t)v87;
        sub_100011370(v55, (uint64_t)v87, v76);
        v81 = String.init<A>(describing:)(v80, v88);
        v83 = v82;
        v106 = sub_1000759E0(v81, v82, &v109);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
        v84 = v83;
        v55 = (uint64_t)v90;
        swift_bridgeObjectRelease(v84);
        _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v72, "Loaded cached item named \"%{public}s\", value %{public}s", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
        v85 = v79;
        v31 = v105;
        swift_slowDealloc(v85, -1, -1);
        swift_slowDealloc(v77, -1, -1);
        sub_10003A628(v97, (unint64_t)v99);

        (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v100);
      }
      else
      {
        swift_bridgeObjectRelease_n(v69, 2);
        sub_10003A628(v62, (unint64_t)v99);

        (*(void (**)(char *, uint64_t))(v103 + 8))(v67, v68);
        v76 = v66;
      }
      ((void (*)(char *, uint64_t))v102)(v91, v31);
      swift_beginAccess(v55, v110, 0, 0);
      sub_100011370(v55, v74, v76);
      return sub_100011694(v55, v76);
    }
  }
  sub_100011694((uint64_t)v30, &qword_100547A38);
  v39 = type metadata accessor for WidgetDiskCache(0);
  v40 = v102;
  v41 = v103;
  v42 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v105 + *(int *)(v39 + 24), v100);
  v43 = swift_bridgeObjectRetain_n(v36, 2);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v47 = swift_slowAlloc(32, -1);
    v110[0] = v47;
    *(_DWORD *)v46 = 136446210;
    swift_bridgeObjectRetain();
    v107 = sub_1000759E0(v37, v36, v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108);
    swift_bridgeObjectRelease_n(v36, 3);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Unable to get widget cache url for loading item named \"%{public}s\"", v46, 0xCu);
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v102, v42);
  }
  else
  {

    swift_bridgeObjectRelease_n(v36, 2);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
  }
  v48 = v98;
  v49 = v99(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
}

uint64_t sub_10006AFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[16];
  uint64_t v74;
  uint64_t v75[4];
  _QWORD v76[2];

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v69 = v6;
  v70 = v7;
  v8 = __chkstk_darwin(v6);
  v67 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v62 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v62 - v13;
  v15 = sub_10000B4C8(&qword_100547A38);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v62 - v19;
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v65 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v3;
  sub_100011370(v3, (uint64_t)v18, &qword_100547A38);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v25 = v24(v18, 1, v21);
  v66 = a1;
  if (v25 == 1)
  {
    v26 = a2;
    sub_100011694((uint64_t)v18, &qword_100547A38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_100011694((uint64_t)v20, &qword_100547A38);
    v29 = type metadata accessor for WidgetDiskCache(0);
    v30 = v67;
    v32 = v69;
    v31 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v67, v68 + *(int *)(v29 + 24), v69);
    v33 = swift_bridgeObjectRetain_n(v26, 2);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v75[0] = v37;
      *(_DWORD *)v36 = 136446210;
      swift_bridgeObjectRetain();
      v72 = sub_1000759E0(v66, v26, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
      swift_bridgeObjectRelease_n(v26, 3);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Unable to get widget cache url for loading item named \"%{public}s\"", v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v32);
    }
    else
    {

      swift_bridgeObjectRelease_n(v26, 2);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
    }
    return 0;
  }
  v63 = v14;
  v64 = v12;
  v27 = a1;
  v26 = a2;
  URL.appending(_:)(v27, a2, 1);
  v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v18, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  if (v24(v20, 1, v21) == 1)
    goto LABEL_4;
  v67 = (char *)v28;
  v39 = (uint64_t)v65;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v65, v20, v21);
  v76[0] = 0;
  v40 = type metadata accessor for WidgetDiskCache(0);
  v41 = v68;
  __chkstk_darwin(v40);
  *(&v62 - 2) = v39;
  OS_dispatch_queue.sync<A>(execute:)(sub_10007BE60, &v62 - 4, &type metadata for Data);
  v43 = v75[0];
  v42 = v75[1];
  v44 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  v45 = JSONDecoder.init()();
  v46 = sub_10000B4C8(&qword_100547DE8);
  v47 = sub_1000124C8(&qword_100547E10, &qword_100547E18, (uint64_t)&unk_100425A48, (const char *)&protocol conformance descriptor for <A> [A]);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v46, v43, v42, v46, v47);
  v48 = v26;
  v62 = v43;
  v64 = (char *)v42;
  swift_release(v45);
  v49 = v72;
  swift_bridgeObjectRelease(v76[0]);
  v76[0] = v49;
  v51 = v69;
  v50 = v70;
  v52 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v63, v41 + *(int *)(v40 + 24), v69);
  v53 = swift_bridgeObjectRetain_n(v48, 2);
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc(22, -1);
    v57 = swift_slowAlloc(64, -1);
    v74 = v57;
    *(_DWORD *)v56 = 136446466;
    swift_bridgeObjectRetain();
    v72 = sub_1000759E0(v66, v48, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
    swift_bridgeObjectRelease_n(v48, 3);
    *(_WORD *)(v56 + 12) = 2082;
    swift_beginAccess(v76, &v72, 0, 0);
    v71 = v76[0];
    swift_bridgeObjectRetain();
    v58 = sub_10000B4C8(&qword_10054A5B8);
    v59 = String.init<A>(describing:)(&v71, v58);
    v61 = v60;
    v71 = sub_1000759E0(v59, v60, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
    swift_bridgeObjectRelease(v61);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Loaded cached item named \"%{public}s\", value %{public}s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v56, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v48, 2);
  }
  sub_10003A628(v62, (unint64_t)v64);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v51);
  ((void (*)(char *, uint64_t))v67)(v65, v21);
  swift_beginAccess(v76, v75, 0, 0);
  return v76[0];
}

uint64_t sub_10006B8A4(uint64_t a1)
{
  return sub_10006B8B8(a1, &qword_100547B28, &qword_10054A600);
}

uint64_t sub_10006B8B8(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  char *v3;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = v3;
  v8 = sub_10000B4C8(a2);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v13 = sub_100012324(a3, a2, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v8);
    dispatch thunk of Collection.endIndex.getter(v8, v13);
    dispatch thunk of Collection.index(_:offsetBy:limitedBy:)(&v19, v17, a1, &v18, v8, v13);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v3, v8);
    if ((v20 & 1) != 0)
    {
      dispatch thunk of Collection.endIndex.getter(v8, v13);
      v14 = *(void (**)(char *, uint64_t))(v9 + 8);
      v14(v12, v8);
    }
    else
    {
      v15 = v19;
      v14 = *(void (**)(char *, uint64_t))(v9 + 8);
      v14(v12, v8);
      v18 = v15;
    }
    result = dispatch thunk of Collection.startIndex.getter(v8);
    if (v18 >= v19)
    {
      v17[0] = v19;
      v17[1] = v18;
      dispatch thunk of Collection.subscript.getter(&v19, v17, v8, v13);
      v14(v6, v8);
      return v19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10006BA48(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v3 >= result)
      v4 = result;
    else
      v4 = *(_QWORD *)(a2 + 16);
    if (result)
      v5 = v4;
    else
      v5 = 0;
    if (v3 >= v5)
    {
      type metadata accessor for WidgetMusicItem(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

void sub_10006BAB8(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_10006BB08()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x61656C655277656ELL, 0xEB00000000736573);
  swift_bridgeObjectRelease(0xEB00000000736573);
  return Hasher._finalize()();
}

void sub_10006BBB0(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_10006BC0C()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 - 12, 0x8000000100444360);
  swift_bridgeObjectRelease(0x8000000100444360);
  return Hasher._finalize()();
}

uint64_t sub_10006BC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = sub_10000B4C8(&qword_100547BC8);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetChartDiskCache.ChartList(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547A38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_10006BDF4, 0, 0);
}

uint64_t sub_10006BDF4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  os_log_type_t type;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t *v158;
  _QWORD *v159;
  uint64_t v160[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_100011370(v2, v7, &qword_100547A38);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_100011694(v3[16], &qword_100547A38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v156 = v4;
    v15 = v1[19];
    v16 = v1[14];
    v17 = v1[15];
    v18 = v1[12];
    v19 = v1[10];
    sub_100011694(v1[27], &qword_100547A38);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v19 + *(int *)(v20 + 24), v16);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[19];
    v26 = v1[14];
    v27 = v1[15];
    v28 = v1[12];
    if (v24)
    {
      v151 = v1[19];
      v29 = v1[11];
      v147 = v1[15];
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v160[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_1000759E0(v29, v28, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v156);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v151, v26);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1[12], 2);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    goto LABEL_7;
  }
  v44 = v1[21];
  v45 = v1[22];
  v46 = v1[20];
  v47 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_100011370(v47, v46, &qword_100547BC8);
  v158 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    v143 = v3 - 6;
    v149 = v14;
    v49 = v1[31];
    v48 = v1[32];
    v51 = v1[28];
    v50 = v1[29];
    v52 = v1[20];
    v53 = v1[18];
    v55 = v1[14];
    v54 = v1[15];
    v153 = v1;
    v56 = v1[12];
    v57 = v153[10];
    sub_100011694(v52, &qword_100547BC8);
    v144 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57 + *(int *)(v144 + 24), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
    v58 = v56;
    v1 = v153;
    v59 = swift_bridgeObjectRetain_n(v58, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter();
    v62 = os_log_type_enabled(v60, v61);
    v63 = v153[31];
    v64 = v153[28];
    v65 = v153[18];
    v66 = v153[14];
    v67 = v153[15];
    v68 = v153[12];
    if (v62)
    {
      v69 = v3 - 5;
      v141 = v153[18];
      v70 = v153[11];
      v71 = swift_slowAlloc(22, -1);
      v139 = v66;
      v72 = swift_slowAlloc(64, -1);
      v160[0] = v72;
      *(_DWORD *)v71 = 136446466;
      v136 = v67;
      swift_bridgeObjectRetain();
      v153[4] = sub_1000759E0(v70, v68, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v143, v69);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v71 + 12) = 2082;
      v73 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v64, v73);
      v76 = v75;
      v153[5] = sub_1000759E0(v74, v75, v160);
      v77 = v69;
      v1 = v153;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v158);
      swift_bridgeObjectRelease(v76);
      v78 = v64;
      v79 = v149;
      v149(v63, v78);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v141, v139);
    }
    else
    {
      swift_bridgeObjectRelease_n(v153[12], 2);
      v86 = v64;
      v79 = v149;
      v149(v63, v86);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    }
    v87 = v1[32];
    v88 = v1[28];
    v89 = swift_task_alloc(32);
    *(_QWORD *)(v89 + 16) = v87;
    v90 = sub_10000B4C8(&qword_10054A410);
    OS_dispatch_queue.sync<A>(execute:)(sub_10007BE74, v89, v90);
    swift_task_dealloc(v89);
    v79(v87, v88);
  }
  else
  {
    v80 = v1[25];
    v81 = v1[21];
    sub_10000DB44(v1[20], v80, type metadata accessor for WidgetChartDiskCache.ChartList);
    v82 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    v83 = JSONEncoder.init()();
    v84 = sub_10001254C(&qword_10054A680, type metadata accessor for WidgetChartDiskCache.ChartList, (uint64_t)&unk_1004248DC);
    v85 = dispatch thunk of JSONEncoder.encode<A>(_:)(v80, v81, v84);
    v154 = v1[32];
    v91 = v85;
    v93 = v92;
    swift_release(v83);
    v145 = type metadata accessor for WidgetDiskCache(0);
    v94 = (_QWORD *)swift_task_alloc(48);
    v94[2] = v91;
    v94[3] = v93;
    v94[4] = v154;
    OS_dispatch_queue.sync<A>(execute:)(sub_10007BE98, v94, (char *)&type metadata for () + 8);
    v140 = v91;
    v142 = v93;
    v159 = v4;
    v95 = v1[29];
    v132 = v1[30];
    v134 = v1[32];
    v96 = v1[28];
    v97 = v1[25];
    v137 = v1[24];
    v98 = v1[17];
    v99 = v1[15];
    v155 = v1;
    v100 = v1[14];
    v101 = v155[12];
    v150 = v14;
    v102 = v155[10];
    swift_task_dealloc(v94);
    v103 = v100;
    v1 = v155;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v98, v102 + *(int *)(v145 + 24), v103);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v132, v134, v96);
    sub_10000D964(v97, v137, type metadata accessor for WidgetChartDiskCache.ChartList);
    v104 = swift_bridgeObjectRetain_n(v101, 2);
    v105 = Logger.logObject.getter(v104);
    v106 = static os_log_type_t.default.getter();
    v107 = os_log_type_enabled(v105, v106);
    v108 = v155[30];
    v109 = v155[28];
    v111 = v155[24];
    v110 = v155[25];
    if (v107)
    {
      v129 = v155[23];
      v130 = v155[21];
      v133 = v155[15];
      v135 = v155[14];
      v138 = v155[17];
      v146 = v155[25];
      v112 = v155[12];
      v127 = v155[11];
      v113 = swift_slowAlloc(32, -1);
      v131 = swift_slowAlloc(96, -1);
      v160[0] = v131;
      *(_DWORD *)v113 = 136446722;
      v114 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v115 = dispatch thunk of CustomStringConvertible.description.getter(v109, v114);
      type = v106;
      v116 = v105;
      v118 = v117;
      v155[8] = sub_1000759E0(v115, v117, v160);
      v1 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      swift_bridgeObjectRelease(v118);
      v150(v108, v109);
      *(_WORD *)(v113 + 12) = 2082;
      swift_bridgeObjectRetain();
      v155[9] = sub_1000759E0(v127, v112, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v112, 3);
      *(_WORD *)(v113 + 22) = 2082;
      sub_10000D964(v111, v129, type metadata accessor for WidgetChartDiskCache.ChartList);
      v119 = String.init<A>(describing:)(v129, v130);
      v121 = v120;
      v155[3] = sub_1000759E0(v119, v120, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v159, v3 - 6);
      swift_bridgeObjectRelease(v121);
      sub_10000E750(v111, type metadata accessor for WidgetChartDiskCache.ChartList);
      _os_log_impl((void *)&_mh_execute_header, v116, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v113, 0x20u);
      swift_arrayDestroy(v131, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v131, -1, -1);
      swift_slowDealloc(v113, -1, -1);
      sub_10003A628(v140, v142);

      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v138, v135);
      v122 = v146;
    }
    else
    {
      v123 = v155[17];
      v124 = v155[14];
      v125 = v155[15];
      v126 = v155[12];
      sub_10003A628(v140, v142);

      sub_10000E750(v111, type metadata accessor for WidgetChartDiskCache.ChartList);
      swift_bridgeObjectRelease_n(v126, 2);
      v150(v108, v109);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v123, v124);
      v122 = v110;
    }
    sub_10000E750(v122, type metadata accessor for WidgetChartDiskCache.ChartList);
    v150(v1[32], v1[28]);
  }
LABEL_7:
  v33 = v1[31];
  v32 = v1[32];
  v34 = v1[30];
  v36 = v1[26];
  v35 = v1[27];
  v38 = v1[24];
  v37 = v1[25];
  v39 = v1[23];
  v40 = v1;
  v41 = v1[20];
  v42 = v40[19];
  v148 = v40[18];
  v152 = v40[17];
  v157 = v40[16];
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v148);
  swift_task_dealloc(v152);
  swift_task_dealloc(v157);
  return ((uint64_t (*)(void))v40[1])();
}

uint64_t sub_10006CB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = sub_10000B4C8(&qword_100547AF0);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TopChartsWidgetDataProvider.Chart(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547A38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_10006CC98, 0, 0);
}

uint64_t sub_10006CC98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  os_log_type_t type;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t *v158;
  _QWORD *v159;
  uint64_t v160[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_100011370(v2, v7, &qword_100547A38);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_100011694(v3[16], &qword_100547A38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v156 = v4;
    v15 = v1[19];
    v16 = v1[14];
    v17 = v1[15];
    v18 = v1[12];
    v19 = v1[10];
    sub_100011694(v1[27], &qword_100547A38);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v19 + *(int *)(v20 + 24), v16);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[19];
    v26 = v1[14];
    v27 = v1[15];
    v28 = v1[12];
    if (v24)
    {
      v151 = v1[19];
      v29 = v1[11];
      v147 = v1[15];
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v160[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_1000759E0(v29, v28, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v156);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v151, v26);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1[12], 2);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    goto LABEL_7;
  }
  v44 = v1[21];
  v45 = v1[22];
  v46 = v1[20];
  v47 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_100011370(v47, v46, &qword_100547AF0);
  v158 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    v143 = v3 - 6;
    v149 = v14;
    v49 = v1[31];
    v48 = v1[32];
    v51 = v1[28];
    v50 = v1[29];
    v52 = v1[20];
    v53 = v1[18];
    v55 = v1[14];
    v54 = v1[15];
    v153 = v1;
    v56 = v1[12];
    v57 = v153[10];
    sub_100011694(v52, &qword_100547AF0);
    v144 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57 + *(int *)(v144 + 24), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
    v58 = v56;
    v1 = v153;
    v59 = swift_bridgeObjectRetain_n(v58, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter();
    v62 = os_log_type_enabled(v60, v61);
    v63 = v153[31];
    v64 = v153[28];
    v65 = v153[18];
    v66 = v153[14];
    v67 = v153[15];
    v68 = v153[12];
    if (v62)
    {
      v69 = v3 - 5;
      v141 = v153[18];
      v70 = v153[11];
      v71 = swift_slowAlloc(22, -1);
      v139 = v66;
      v72 = swift_slowAlloc(64, -1);
      v160[0] = v72;
      *(_DWORD *)v71 = 136446466;
      v136 = v67;
      swift_bridgeObjectRetain();
      v153[4] = sub_1000759E0(v70, v68, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v143, v69);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v71 + 12) = 2082;
      v73 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v64, v73);
      v76 = v75;
      v153[5] = sub_1000759E0(v74, v75, v160);
      v77 = v69;
      v1 = v153;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v158);
      swift_bridgeObjectRelease(v76);
      v78 = v64;
      v79 = v149;
      v149(v63, v78);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v141, v139);
    }
    else
    {
      swift_bridgeObjectRelease_n(v153[12], 2);
      v86 = v64;
      v79 = v149;
      v149(v63, v86);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    }
    v87 = v1[32];
    v88 = v1[28];
    v89 = swift_task_alloc(32);
    *(_QWORD *)(v89 + 16) = v87;
    v90 = sub_10000B4C8(&qword_10054A410);
    OS_dispatch_queue.sync<A>(execute:)(sub_10007BE74, v89, v90);
    swift_task_dealloc(v89);
    v79(v87, v88);
  }
  else
  {
    v80 = v1[25];
    v81 = v1[21];
    sub_10000DB44(v1[20], v80, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v82 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    v83 = JSONEncoder.init()();
    v84 = sub_10001254C(&qword_10054A610, type metadata accessor for TopChartsWidgetDataProvider.Chart, (uint64_t)&unk_10042492C);
    v85 = dispatch thunk of JSONEncoder.encode<A>(_:)(v80, v81, v84);
    v154 = v1[32];
    v91 = v85;
    v93 = v92;
    swift_release(v83);
    v145 = type metadata accessor for WidgetDiskCache(0);
    v94 = (_QWORD *)swift_task_alloc(48);
    v94[2] = v91;
    v94[3] = v93;
    v94[4] = v154;
    OS_dispatch_queue.sync<A>(execute:)(sub_10007BE98, v94, (char *)&type metadata for () + 8);
    v140 = v91;
    v142 = v93;
    v159 = v4;
    v95 = v1[29];
    v132 = v1[30];
    v134 = v1[32];
    v96 = v1[28];
    v97 = v1[25];
    v137 = v1[24];
    v98 = v1[17];
    v99 = v1[15];
    v155 = v1;
    v100 = v1[14];
    v101 = v155[12];
    v150 = v14;
    v102 = v155[10];
    swift_task_dealloc(v94);
    v103 = v100;
    v1 = v155;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v98, v102 + *(int *)(v145 + 24), v103);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v132, v134, v96);
    sub_10000D964(v97, v137, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v104 = swift_bridgeObjectRetain_n(v101, 2);
    v105 = Logger.logObject.getter(v104);
    v106 = static os_log_type_t.default.getter();
    v107 = os_log_type_enabled(v105, v106);
    v108 = v155[30];
    v109 = v155[28];
    v111 = v155[24];
    v110 = v155[25];
    if (v107)
    {
      v129 = v155[23];
      v130 = v155[21];
      v133 = v155[15];
      v135 = v155[14];
      v138 = v155[17];
      v146 = v155[25];
      v112 = v155[12];
      v127 = v155[11];
      v113 = swift_slowAlloc(32, -1);
      v131 = swift_slowAlloc(96, -1);
      v160[0] = v131;
      *(_DWORD *)v113 = 136446722;
      v114 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v115 = dispatch thunk of CustomStringConvertible.description.getter(v109, v114);
      type = v106;
      v116 = v105;
      v118 = v117;
      v155[8] = sub_1000759E0(v115, v117, v160);
      v1 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      swift_bridgeObjectRelease(v118);
      v150(v108, v109);
      *(_WORD *)(v113 + 12) = 2082;
      swift_bridgeObjectRetain();
      v155[9] = sub_1000759E0(v127, v112, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v112, 3);
      *(_WORD *)(v113 + 22) = 2082;
      sub_10000D964(v111, v129, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      v119 = String.init<A>(describing:)(v129, v130);
      v121 = v120;
      v155[3] = sub_1000759E0(v119, v120, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v159, v3 - 6);
      swift_bridgeObjectRelease(v121);
      sub_10000E750(v111, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      _os_log_impl((void *)&_mh_execute_header, v116, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v113, 0x20u);
      swift_arrayDestroy(v131, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v131, -1, -1);
      swift_slowDealloc(v113, -1, -1);
      sub_10003A628(v140, v142);

      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v138, v135);
      v122 = v146;
    }
    else
    {
      v123 = v155[17];
      v124 = v155[14];
      v125 = v155[15];
      v126 = v155[12];
      sub_10003A628(v140, v142);

      sub_10000E750(v111, type metadata accessor for TopChartsWidgetDataProvider.Chart);
      swift_bridgeObjectRelease_n(v126, 2);
      v150(v108, v109);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v123, v124);
      v122 = v110;
    }
    sub_10000E750(v122, type metadata accessor for TopChartsWidgetDataProvider.Chart);
    v150(v1[32], v1[28]);
  }
LABEL_7:
  v33 = v1[31];
  v32 = v1[32];
  v34 = v1[30];
  v36 = v1[26];
  v35 = v1[27];
  v38 = v1[24];
  v37 = v1[25];
  v39 = v1[23];
  v40 = v1;
  v41 = v1[20];
  v42 = v40[19];
  v148 = v40[18];
  v152 = v40[17];
  v157 = v40[16];
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v148);
  swift_task_dealloc(v152);
  swift_task_dealloc(v157);
  return ((uint64_t (*)(void))v40[1])();
}

uint64_t sub_10006D9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = sub_10000B4C8(&qword_1005484E8);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetMusicRecommendation(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547A38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_10006DB3C, 0, 0);
}

uint64_t sub_10006DB3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  os_log_type_t type;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t *v158;
  _QWORD *v159;
  uint64_t v160[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_100011370(v2, v7, &qword_100547A38);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_100011694(v3[16], &qword_100547A38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v156 = v4;
    v15 = v1[19];
    v16 = v1[14];
    v17 = v1[15];
    v18 = v1[12];
    v19 = v1[10];
    sub_100011694(v1[27], &qword_100547A38);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v19 + *(int *)(v20 + 24), v16);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[19];
    v26 = v1[14];
    v27 = v1[15];
    v28 = v1[12];
    if (v24)
    {
      v151 = v1[19];
      v29 = v1[11];
      v147 = v1[15];
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v160[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_1000759E0(v29, v28, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v156);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v151, v26);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1[12], 2);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    goto LABEL_7;
  }
  v44 = v1[21];
  v45 = v1[22];
  v46 = v1[20];
  v47 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_100011370(v47, v46, &qword_1005484E8);
  v158 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    v143 = v3 - 6;
    v149 = v14;
    v49 = v1[31];
    v48 = v1[32];
    v51 = v1[28];
    v50 = v1[29];
    v52 = v1[20];
    v53 = v1[18];
    v55 = v1[14];
    v54 = v1[15];
    v153 = v1;
    v56 = v1[12];
    v57 = v153[10];
    sub_100011694(v52, &qword_1005484E8);
    v144 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57 + *(int *)(v144 + 24), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
    v58 = v56;
    v1 = v153;
    v59 = swift_bridgeObjectRetain_n(v58, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter();
    v62 = os_log_type_enabled(v60, v61);
    v63 = v153[31];
    v64 = v153[28];
    v65 = v153[18];
    v66 = v153[14];
    v67 = v153[15];
    v68 = v153[12];
    if (v62)
    {
      v69 = v3 - 5;
      v141 = v153[18];
      v70 = v153[11];
      v71 = swift_slowAlloc(22, -1);
      v139 = v66;
      v72 = swift_slowAlloc(64, -1);
      v160[0] = v72;
      *(_DWORD *)v71 = 136446466;
      v136 = v67;
      swift_bridgeObjectRetain();
      v153[4] = sub_1000759E0(v70, v68, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v143, v69);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v71 + 12) = 2082;
      v73 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v64, v73);
      v76 = v75;
      v153[5] = sub_1000759E0(v74, v75, v160);
      v77 = v69;
      v1 = v153;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v158);
      swift_bridgeObjectRelease(v76);
      v78 = v64;
      v79 = v149;
      v149(v63, v78);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v141, v139);
    }
    else
    {
      swift_bridgeObjectRelease_n(v153[12], 2);
      v86 = v64;
      v79 = v149;
      v149(v63, v86);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    }
    v87 = v1[32];
    v88 = v1[28];
    v89 = swift_task_alloc(32);
    *(_QWORD *)(v89 + 16) = v87;
    v90 = sub_10000B4C8(&qword_10054A410);
    OS_dispatch_queue.sync<A>(execute:)(sub_1000763BC, v89, v90);
    swift_task_dealloc(v89);
    v79(v87, v88);
  }
  else
  {
    v80 = v1[25];
    v81 = v1[21];
    sub_10000DB44(v1[20], v80, type metadata accessor for WidgetMusicRecommendation);
    v82 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    v83 = JSONEncoder.init()();
    v84 = sub_10001254C(&qword_10054A418, type metadata accessor for WidgetMusicRecommendation, (uint64_t)&unk_100426AF8);
    v85 = dispatch thunk of JSONEncoder.encode<A>(_:)(v80, v81, v84);
    v154 = v1[32];
    v91 = v85;
    v93 = v92;
    swift_release(v83);
    v145 = type metadata accessor for WidgetDiskCache(0);
    v94 = (_QWORD *)swift_task_alloc(48);
    v94[2] = v91;
    v94[3] = v93;
    v94[4] = v154;
    OS_dispatch_queue.sync<A>(execute:)(sub_1000763D4, v94, (char *)&type metadata for () + 8);
    v140 = v91;
    v142 = v93;
    v159 = v4;
    v95 = v1[29];
    v132 = v1[30];
    v134 = v1[32];
    v96 = v1[28];
    v97 = v1[25];
    v137 = v1[24];
    v98 = v1[17];
    v99 = v1[15];
    v155 = v1;
    v100 = v1[14];
    v101 = v155[12];
    v150 = v14;
    v102 = v155[10];
    swift_task_dealloc(v94);
    v103 = v100;
    v1 = v155;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v98, v102 + *(int *)(v145 + 24), v103);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v132, v134, v96);
    sub_10000D964(v97, v137, type metadata accessor for WidgetMusicRecommendation);
    v104 = swift_bridgeObjectRetain_n(v101, 2);
    v105 = Logger.logObject.getter(v104);
    v106 = static os_log_type_t.default.getter();
    v107 = os_log_type_enabled(v105, v106);
    v108 = v155[30];
    v109 = v155[28];
    v111 = v155[24];
    v110 = v155[25];
    if (v107)
    {
      v129 = v155[23];
      v130 = v155[21];
      v133 = v155[15];
      v135 = v155[14];
      v138 = v155[17];
      v146 = v155[25];
      v112 = v155[12];
      v127 = v155[11];
      v113 = swift_slowAlloc(32, -1);
      v131 = swift_slowAlloc(96, -1);
      v160[0] = v131;
      *(_DWORD *)v113 = 136446722;
      v114 = sub_10001254C(&qword_1005491D8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v115 = dispatch thunk of CustomStringConvertible.description.getter(v109, v114);
      type = v106;
      v116 = v105;
      v118 = v117;
      v155[8] = sub_1000759E0(v115, v117, v160);
      v1 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      swift_bridgeObjectRelease(v118);
      v150(v108, v109);
      *(_WORD *)(v113 + 12) = 2082;
      swift_bridgeObjectRetain();
      v155[9] = sub_1000759E0(v127, v112, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v112, 3);
      *(_WORD *)(v113 + 22) = 2082;
      sub_10000D964(v111, v129, type metadata accessor for WidgetMusicRecommendation);
      v119 = String.init<A>(describing:)(v129, v130);
      v121 = v120;
      v155[3] = sub_1000759E0(v119, v120, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v159, v3 - 6);
      swift_bridgeObjectRelease(v121);
      sub_10000E750(v111, type metadata accessor for WidgetMusicRecommendation);
      _os_log_impl((void *)&_mh_execute_header, v116, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v113, 0x20u);
      swift_arrayDestroy(v131, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v131, -1, -1);
      swift_slowDealloc(v113, -1, -1);
      sub_10003A628(v140, v142);

      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v138, v135);
      v122 = v146;
    }
    else
    {
      v123 = v155[17];
      v124 = v155[14];
      v125 = v155[15];
      v126 = v155[12];
      sub_10003A628(v140, v142);

      sub_10000E750(v111, type metadata accessor for WidgetMusicRecommendation);
      swift_bridgeObjectRelease_n(v126, 2);
      v150(v108, v109);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v123, v124);
      v122 = v110;
    }
    sub_10000E750(v122, type metadata accessor for WidgetMusicRecommendation);
    v150(v1[32], v1[28]);
  }
LABEL_7:
  v33 = v1[31];
  v32 = v1[32];
  v34 = v1[30];
  v36 = v1[26];
  v35 = v1[27];
  v38 = v1[24];
  v37 = v1[25];
  v39 = v1[23];
  v40 = v1;
  v41 = v1[20];
  v42 = v40[19];
  v148 = v40[18];
  v152 = v40[17];
  v157 = v40[16];
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v148);
  swift_task_dealloc(v152);
  swift_task_dealloc(v157);
  return ((uint64_t (*)(void))v40[1])();
}

uint64_t sub_10006E874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011370(a1, (uint64_t)v8, &qword_100547B70);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if ((_DWORD)v11 == 1)
  {
    sub_100011694((uint64_t)v8, &qword_100547B70);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v19 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_1004FA810, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v12, v21);
}

void sub_10006EA0C(char *a1)
{
  sub_100066B70(*a1);
}

unint64_t sub_10006EA1C()
{
  unint64_t result;

  result = qword_10054A210;
  if (!qword_10054A210)
  {
    result = swift_getWitnessTable(&unk_10042687C, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054A210);
  }
  return result;
}

void sub_10006EA60()
{
  char *v0;

  sub_10006BAB8(*v0);
}

void sub_10006EA68()
{
  __asm { BR              X10 }
}

uint64_t sub_10006EAA4(uint64_t a1)
{
  String.hash(into:)(a1, 0x61656C655277656ELL, 0xEB00000000736573);
  return swift_bridgeObjectRelease(0xEB00000000736573);
}

void sub_10006EB38(uint64_t a1)
{
  char *v1;

  sub_1000AA578(a1, *v1);
}

unint64_t sub_10006EB40@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10007B180(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10006EB6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10006EB9C + 4 * byte_100426863[*v0]))();
}

void sub_10006EB9C(_QWORD *a1@<X8>)
{
  *a1 = 0x61656C655277656ELL;
  a1[1] = 0xEB00000000736573;
}

void sub_10006EBC0(char *a1@<X8>)
{
  strcpy(a1, "stationsForYou");
  a1[15] = -18;
}

void sub_10006EBE8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000100444300;
}

void sub_10006EC08(_QWORD *a1@<X8>)
{
  *a1 = 0x536B73417473756ALL;
  a1[1] = 0xEB00000000697269;
}

uint64_t sub_10006EC2C()
{
  return sub_100012324(&qword_10054A218, &qword_10054A220, (const char *)&protocol conformance descriptor for [A]);
}

void sub_10006EC58(_QWORD *a1@<X8>)
{
  *a1 = &off_1004F8E90;
}

uint64_t sub_10006EC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10007B024();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10006ECC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10007B024();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_10006ED10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  void *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  Swift::String v37;
  void *v38;
  uint64_t v39;
  Swift::String v40;
  void *v41;
  Swift::String v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  Swift::String v51;
  void *v52;
  Swift::String v53;
  uint64_t v55;
  char v56;
  Swift::String v57;
  unint64_t v58;
  unint64_t v59;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = 0xD00000000000001ALL;
  v59 = 0x8000000100445130;
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v57._object);
  strcpy((char *)&v57, "fetchDate: \"");
  BYTE5(v57._object) = 0;
  HIWORD(v57._object) = -5120;
  v5 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 2108450;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  v9 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v9);
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v57._object);
  v57._countAndFlagsBits = 0x617A696C61636F6CLL;
  v57._object = (void *)0xEF22203A6E6F6974;
  v10 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v11 = (uint64_t *)(v0 + v10[5]);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain();
  v14 = Optional<A>.description.getter(v12, v13);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 2108450;
  v18._object = (void *)0xE300000000000000;
  String.append(_:)(v18);
  v19 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v19);
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v57._object);
  v57._countAndFlagsBits = 0xD000000000000012;
  v57._object = (void *)0x8000000100444450;
  if (qword_1005478A8 != -1)
    swift_once(&qword_1005478A8, sub_10006F20C);
  v20 = sub_10000D78C((uint64_t)v10, (uint64_t)qword_100561390);
  if ((sub_100079F04(v1, v20) & 1) != 0)
  {
    v22 = 0x4072C00000000000;
LABEL_12:
    v21.n128_u64[0] = v22;
    goto LABEL_13;
  }
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (!qword_1005613B0)
  {
    v22 = 0x40DC200000000000;
    goto LABEL_12;
  }
  v21.n128_u64[0] = sub_10009EE0C();
  if ((v23 & 1) != 0)
    v21.n128_f64[0] = 28800.0;
LABEL_13:
  Date.addingTimeInterval(_:)(v21);
  v24 = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v4, v2);
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v26);
  v28._countAndFlagsBits = 2108450;
  v28._object = (void *)0xE300000000000000;
  String.append(_:)(v28);
  v29 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v29);
  strcpy((char *)&v57, "title: \"");
  BYTE1(v57._object) = 0;
  WORD1(v57._object) = 0;
  HIDWORD(v57._object) = -402653184;
  v30 = (uint64_t *)(v1 + v10[6]);
  v31 = *v30;
  v32 = v30[1];
  swift_bridgeObjectRetain();
  v33 = Optional<A>.description.getter(v31, v32);
  v35 = v34;
  swift_bridgeObjectRelease(v32);
  v36._countAndFlagsBits = v33;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v35);
  v37._countAndFlagsBits = 2108450;
  v37._object = (void *)0xE300000000000000;
  String.append(_:)(v37);
  v38 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v38);
  strcpy((char *)&v57, "kind: \"");
  v57._object = (void *)0xE700000000000000;
  v56 = *(_BYTE *)(v1 + v10[7]);
  v39 = sub_10000B4C8(&qword_1005484F0);
  v40._countAndFlagsBits = String.init<A>(describing:)(&v56, v39);
  v41 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v41);
  v42._countAndFlagsBits = 2108450;
  v42._object = (void *)0xE300000000000000;
  String.append(_:)(v42);
  v43 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v43);
  strcpy((char *)&v57, "items: \"");
  BYTE1(v57._object) = 0;
  WORD1(v57._object) = 0;
  HIDWORD(v57._object) = -402653184;
  v44 = *(_QWORD *)(v1 + v10[8]);
  v45 = type metadata accessor for WidgetMusicItem(0);
  v46 = swift_bridgeObjectRetain();
  v47 = Array.description.getter(v46, v45);
  v49 = v48;
  swift_bridgeObjectRelease(v44);
  v50._countAndFlagsBits = v47;
  v50._object = v49;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v49);
  v51._countAndFlagsBits = 2108450;
  v51._object = (void *)0xE300000000000000;
  String.append(_:)(v51);
  v52 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v52);
  v53._countAndFlagsBits = 41;
  v53._object = (void *)0xE100000000000000;
  String.append(_:)(v53);
  return v58;
}

uint64_t sub_10006F20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0 = type metadata accessor for WidgetMusicItem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  sub_10000D924((uint64_t)v7, qword_100561390);
  v8 = sub_10000D78C((uint64_t)v7, (uint64_t)qword_100561390);
  static Date.now.getter(v8);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = objc_msgSend(v9, "preferredLocalizations");

  v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);
  if (v11[2])
  {
    v12 = v11[4];
    v25 = v11[5];
    v26 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = 0;
    v26 = 0;
  }
  swift_bridgeObjectRelease(v11);
  if (qword_100547880 != -1)
    swift_once(&qword_100547880, sub_100060E3C);
  v13 = unk_100561370;
  v24 = qword_100561368;
  v14 = qword_100547848;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v15 = sub_10000D78C(v0, (uint64_t)qword_100561330);
  sub_10000D964(v15, (uint64_t)v3, type metadata accessor for WidgetMusicItem);
  v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(8, v0);
  *(_QWORD *)(v16 + 16) = 8;
  v17 = v16 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10000D964((uint64_t)v3, v17, type metadata accessor for WidgetMusicItem);
  v18 = *(_QWORD *)(v1 + 72);
  sub_10000D964((uint64_t)v3, v17 + v18, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v17 + 2 * v18, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v17 + 3 * v18, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v17 + 4 * v18, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v17 + 5 * v18, type metadata accessor for WidgetMusicItem);
  sub_10000D964((uint64_t)v3, v17 + 6 * v18, type metadata accessor for WidgetMusicItem);
  sub_10000DB44((uint64_t)v3, v17 - v18 + 8 * v18, type metadata accessor for WidgetMusicItem);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v8, v6, v28);
  v20 = (_QWORD *)(v8 + v7[5]);
  v21 = v25;
  *v20 = v26;
  v20[1] = v21;
  v22 = (uint64_t *)(v8 + v7[6]);
  *v22 = v24;
  v22[1] = v13;
  *(_BYTE *)(v8 + v7[7]) = 5;
  *(_QWORD *)(v8 + v7[8]) = v16;
  return result;
}

uint64_t sub_10006F508(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MusicPersonalRecommendation(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[6] = v5;
  v2[7] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_10054A420);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v2[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[10] = v8;
  v2[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006F5B8, 0, 0);
}

uint64_t sub_10006F5B8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  static Date.now.getter(a1);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = objc_msgSend(v2, "preferredLocalizations");

  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v4 + 32);
    v6 = swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v6 = 0;
  }
  *(_QWORD *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 104) = v6;
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 40);
  v25 = *(_QWORD *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v11 = swift_bridgeObjectRelease(v4);
  *(_QWORD *)(v1 + 112) = MusicPersonalRecommendation.title.getter(v11);
  *(_QWORD *)(v1 + 120) = v12;
  *(_BYTE *)(v1 + 160) = sub_10006F8D8();
  MusicPersonalRecommendation.items.getter();
  v13 = sub_10006B8B8(8, &qword_10054A420, &qword_10054A548);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  *(_QWORD *)(v1 + 128) = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  v20 = *(unsigned __int8 *)(v8 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_1004FA838, v21 + v25, v20 | 7);
  *(_QWORD *)(v1 + 136) = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v22 + v21, v7, v9);
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A438
                                                                                     + dword_10054A438);
  v23 = (_QWORD *)swift_task_alloc(unk_10054A43C);
  *(_QWORD *)(v1 + 144) = v23;
  *v23 = v1;
  v23[1] = sub_10006F788;
  return v26((uint64_t)&unk_10054A430, v22, v13, v15, v17, v19);
}

uint64_t sub_10006F788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = a1;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_unknownObjectRelease(v4);
  return swift_task_switch(sub_10006F7F8, 0, 0);
}

uint64_t sub_10006F7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  _QWORD *v12;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v14 = *(_BYTE *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v5, v7);
  v10 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v11 = (_QWORD *)(v9 + v10[5]);
  *v11 = v3;
  v11[1] = v4;
  v12 = (_QWORD *)(v9 + v10[6]);
  *v12 = v2;
  v12[1] = v1;
  *(_BYTE *)(v9 + v10[7]) = v14;
  *(_QWORD *)(v9 + v10[8]) = v16;
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = type metadata accessor for MusicPersonalRecommendation(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_10054A4A8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v30 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)v30 - v13;
  MusicPersonalRecommendation.kind.getter(v12);
  v15 = type metadata accessor for MusicPersonalRecommendation.Kind(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    sub_100011370((uint64_t)v14, (uint64_t)v11, &qword_10054A4A8);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v11, v15);
    if (v27 == enum case for MusicPersonalRecommendation.Kind.friendsListening(_:))
    {
      v28 = 3;
      goto LABEL_10;
    }
    if (v27 == enum case for MusicPersonalRecommendation.Kind.justAskSiri(_:))
    {
      v28 = 4;
      goto LABEL_10;
    }
    if (v27 == enum case for MusicPersonalRecommendation.Kind.newReleases(_:))
    {
      v28 = 1;
      goto LABEL_10;
    }
    if (v27 == enum case for MusicPersonalRecommendation.Kind.stationsForYou(_:))
    {
      v28 = 2;
      goto LABEL_10;
    }
    if (v27 == enum case for MusicPersonalRecommendation.Kind.topPicks(_:))
    {
      v28 = 0;
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  v32 = v5;
  if (qword_1005478B8 != -1)
    swift_once(&qword_1005478B8, sub_100074F38);
  v17 = type metadata accessor for Logger(0);
  sub_10000D78C(v17, (uint64_t)qword_10054A1F8);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v31 = v22;
    v34 = v22;
    *(_DWORD *)v21 = 136315138;
    v30[1] = v21 + 4;
    MusicPersonalRecommendation.kind.getter(v22);
    v23 = String.init<A>(describing:)(v8, v32);
    v25 = v24;
    v33 = sub_1000759E0(v23, v24, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unhandled recommendation kind=%s", v21, 0xCu);
    v26 = v31;
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }

  v28 = 5;
LABEL_10:
  sub_100011694((uint64_t)v14, &qword_10054A4A8);
  return v28;
}

uint64_t sub_10006FC60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v1;
  v5 = sub_10000B4C8(&qword_10054A7A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v9);
  v11 = sub_10007B8B8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WidgetMusicRecommendation.CodingKeys, &type metadata for WidgetMusicRecommendation.CodingKeys, v11, v9, v10);
  v32 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_10001254C(&qword_100547DE0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v32, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v15 = (uint64_t *)(v3 + v14[5]);
    v16 = *v15;
    v17 = v15[1];
    v31 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v31, v5);
    v18 = (uint64_t *)(v3 + v14[6]);
    v19 = *v18;
    v20 = v18[1];
    v30 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v30, v5);
    v29 = *(_BYTE *)(v3 + v14[7]);
    v28 = 3;
    v21 = sub_10007B8FC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v29, &v28, v5, &type metadata for WidgetMusicRecommendationKind, v21);
    v27 = *(_QWORD *)(v3 + v14[8]);
    v26 = 4;
    v22 = sub_10000B4C8(&qword_100547DE8);
    v23 = sub_1000124C8(&qword_100547DF0, &qword_100547DF8, (uint64_t)&unk_100425A20, (const char *)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v26, v5, v22, v23);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10006FE9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  _BYTE v38[2];
  char v39;
  char v40;
  char v41;

  v30 = a2;
  v31 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v32 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_10000B4C8(&qword_10054A7B8);
  __chkstk_darwin(v33);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v10 = a1[4];
  sub_10000D900(a1, v11);
  v12 = sub_10007B8B8();
  v34 = v6;
  v13 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WidgetMusicRecommendation.CodingKeys, &type metadata for WidgetMusicRecommendation.CodingKeys, v12, v11, v10);
  if (v13)
    return sub_100011758(a1);
  v35 = a1;
  v14 = (uint64_t)v9;
  v41 = 0;
  v15 = sub_10001254C(&qword_100547E08, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v16 = v31;
  v17 = v32;
  v18 = v33;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v32, v31, &v41, v33, v31, v15);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(v14, v17, v16);
  v40 = 1;
  v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v40, v18);
  v20 = (uint64_t *)(v14 + v7[5]);
  *v20 = v19;
  v20[1] = v21;
  v39 = 2;
  v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v39, v18);
  v23 = (uint64_t *)(v14 + v7[6]);
  *v23 = v22;
  v23[1] = v24;
  v38[0] = 3;
  v25 = sub_10007B940();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for WidgetMusicRecommendationKind, v38, v18, &type metadata for WidgetMusicRecommendationKind, v25);
  *(_BYTE *)(v14 + v7[7]) = v38[1];
  v26 = sub_10000B4C8(&qword_100547DE8);
  v37 = 4;
  v27 = sub_1000124C8(&qword_100547E10, &qword_100547E18, (uint64_t)&unk_100425A48, (const char *)&protocol conformance descriptor for <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v36, v26, &v37, v18, v26, v27);
  MEMORY[8](v34, v18);
  *(_QWORD *)(v14 + v7[8]) = v36;
  sub_10000D964(v14, v30, type metadata accessor for WidgetMusicRecommendation);
  sub_100011758(v35);
  return sub_10000E750(v14, type metadata accessor for WidgetMusicRecommendation);
}

uint64_t sub_10007025C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100070290 + 4 * byte_100426868[*v0]))(0x7461446863746566, 0xE900000000000065);
}

uint64_t sub_100070290()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_1000702B0()
{
  return 0x656C746974;
}

uint64_t sub_1000702C4()
{
  return 1684957547;
}

uint64_t sub_1000702D4()
{
  return 0x736D657469;
}

uint64_t sub_1000702E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10007BB28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007030C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10007B8B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100070334(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10007B8B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007035C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006FE9C(a1, a2);
}

uint64_t sub_100070370(_QWORD *a1)
{
  return sub_10006FC60(a1);
}

uint64_t sub_10007038C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *(_BYTE *)(v3 + 144) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = sub_10000B4C8(&qword_10054A3C8);
  *(_QWORD *)(v3 + 32) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicPersonalRecommendation(0);
  *(_QWORD *)(v3 + 40) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 48) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 56) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 64) = swift_task_alloc(v7);
  v8 = type metadata accessor for WidgetRecommendationDiskCache(0);
  *(_QWORD *)(v3 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_1005484E8);
  *(_QWORD *)(v3 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetMusicRecommendation(0);
  *(_QWORD *)(v3 + 88) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v3 + 96) = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 104) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 112) = swift_task_alloc(v12);
  return swift_task_switch(sub_1000704A0, 0, 0);
}

uint64_t sub_1000704A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = OBJC_IVAR____TtC12MusicWidgets33RecommendationsWidgetDataProvider_cache;
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC12MusicWidgets33RecommendationsWidgetDataProvider_cache;
  v7 = *(unsigned __int8 *)(v0 + 144);
  sub_10000D964(v5 + v6, v3, type metadata accessor for WidgetRecommendationDiskCache);
  sub_100070924(v7, v4);
  sub_10000E750(v3, type metadata accessor for WidgetRecommendationDiskCache);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 80), &qword_1005484E8);
    v8 = (_QWORD *)swift_task_alloc(dword_10054A274);
    *(_QWORD *)(v0 + 128) = v8;
    *v8 = v0;
    v8[1] = sub_100070630;
    return sub_100071B1C(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 144));
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 16);
    sub_10000DB44(*(_QWORD *)(v0 + 80), v10, type metadata accessor for WidgetMusicRecommendation);
    sub_10000DB44(v10, v11, type metadata accessor for WidgetMusicRecommendation);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 56);
    v16 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 88));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100070630()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_100070684, 0, 0);
}

uint64_t sub_100070684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100011694(v3, &qword_10054A3C8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 88));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v12, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v13, v12, v1);
    v14 = (_QWORD *)swift_task_alloc(dword_10054A3F4);
    *(_QWORD *)(v0 + 136) = v14;
    *v14 = v0;
    v14[1] = sub_1000707CC;
    return sub_10006F508(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56));
  }
}

uint64_t sub_1000707CC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  return swift_task_switch(sub_100070820, 0, 0);
}

uint64_t sub_100070820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 16);
  sub_10000D964(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 120), v2, type metadata accessor for WidgetRecommendationDiskCache);
  sub_1000713C0(v1);
  sub_10000E750(v2, type metadata accessor for WidgetRecommendationDiskCache);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_10000DB44(v1, v6, type metadata accessor for WidgetMusicRecommendation);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 88));
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070924@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v106 = a2;
  v102 = type metadata accessor for Date(0);
  v100 = *(_QWORD **)(v102 - 8);
  v3 = __chkstk_darwin(v102);
  v101 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v97 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v97 - v8;
  v10 = sub_10000B4C8(&qword_1005484E8);
  __chkstk_darwin(v10);
  v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetMusicRecommendation(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v104 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v98 = (uint64_t)&v97 - v18;
  v19 = __chkstk_darwin(v17);
  v103 = (uint64_t)&v97 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v97 - v21;
  LODWORD(v99) = a1;
  LOBYTE(v108) = a1;
  v23 = String.init<A>(describing:)(&v108, &type metadata for WidgetMusicRecommendationKind);
  v25 = v24;
  sub_10006A528(v23, v24, &qword_1005484E8, type metadata accessor for WidgetMusicRecommendation, (uint64_t)sub_10007ABB0, &qword_10054A550, (uint64_t)&unk_100426AD0, (uint64_t)v12);
  swift_bridgeObjectRelease(v25);
  v105 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100011694((uint64_t)v12, &qword_1005484E8);
    if (qword_1005478B8 != -1)
      swift_once(&qword_1005478B8, sub_100074F38);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_10000D78C(v26, (uint64_t)qword_10054A1F8);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v108 = v31;
      *(_DWORD *)v30 = 136446210;
      LOBYTE(v107) = v99;
      v32 = String.init<A>(describing:)(&v107, &type metadata for WidgetMusicRecommendationKind);
      v34 = v33;
      v107 = sub_1000759E0(v32, v33, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Cache miss for recommendation kind: %{public}s", v30, 0xCu);
      v35 = 1;
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      v35 = 1;
    }
    v44 = v106;
LABEL_36:
    v81 = v105;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v44, v35, 1, v13);
  }
  v36 = sub_10000DB44((uint64_t)v12, (uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
  static Date.now.getter(v36);
  v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v38 = objc_msgSend(v37, "preferredLocalizations");

  v39 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String);
  v40 = v9;
  v41 = (uint64_t)v22;
  if (v39[2])
  {
    v42 = v39[4];
    v43 = v39[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v42 = 0;
    v43 = 0;
  }
  v45 = v102;
  v46 = (uint64_t)v104;
  v47 = v100;
  swift_bridgeObjectRelease(v39);
  if (qword_1005478A8 != -1)
    swift_once(&qword_1005478A8, sub_10006F20C);
  v48 = sub_10000D78C(v13, (uint64_t)qword_100561390);
  if ((sub_100079F04(v41, v48) & 1) != 0)
  {
    v50 = 0x4072C00000000000;
LABEL_22:
    v49.n128_u64[0] = v50;
    goto LABEL_23;
  }
  if (qword_1005478C8 != -1)
    swift_once(&qword_1005478C8, sub_10009EFC4);
  if (!qword_1005613B0)
  {
    v50 = 0x40DC200000000000;
    goto LABEL_22;
  }
  v49.n128_u64[0] = sub_10009EE0C();
  if ((v51 & 1) != 0)
    v49.n128_f64[0] = 28800.0;
LABEL_23:
  Date.addingTimeInterval(_:)(v49);
  v52 = static Date.> infix(_:_:)(v7, v40);
  v100 = (_QWORD *)v47[1];
  ((void (*)(char *, uint64_t))v100)(v7, v45);
  v53 = v103;
  sub_10000D964(v41, v103, type metadata accessor for WidgetMusicRecommendation);
  if ((v52 & 1) == 0)
  {
    sub_10000E750(v53, type metadata accessor for WidgetMusicRecommendation);
    v57 = v101;
    goto LABEL_30;
  }
  v54 = (_QWORD *)(v53 + *(int *)(v13 + 20));
  v55 = v54[1];
  v56 = v53;
  v57 = v101;
  if (v55)
  {
    if (v43)
    {
      if (*v54 == v42 && v55 == v43)
      {
        sub_10000E750(v103, type metadata accessor for WidgetMusicRecommendation);
LABEL_42:
        swift_bridgeObjectRelease(v43);
        goto LABEL_43;
      }
      v83 = _stringCompareWithSmolCheck(_:_:expecting:)(*v54, v55, v42, v43, 0);
      sub_10000E750(v103, type metadata accessor for WidgetMusicRecommendation);
      if ((v83 & 1) != 0)
        goto LABEL_42;
    }
    else
    {
      sub_10000E750(v103, type metadata accessor for WidgetMusicRecommendation);
    }
LABEL_30:
    v103 = v13;
    if (qword_1005478B8 != -1)
      swift_once(&qword_1005478B8, sub_100074F38);
    v58 = type metadata accessor for Logger(0);
    sub_10000D78C(v58, (uint64_t)qword_10054A1F8);
    ((void (*)(char *, char *, uint64_t))v47[2])(v57, v40, v45);
    sub_10000D964(v41, v46, type metadata accessor for WidgetMusicRecommendation);
    v59 = swift_bridgeObjectRetain();
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter();
    v62 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      v63 = swift_slowAlloc(32, -1);
      v97 = v42;
      v101 = v40;
      v64 = v57;
      v65 = v63;
      v99 = swift_slowAlloc(96, -1);
      v108 = v99;
      *(_DWORD *)v65 = 136446722;
      v66 = (void (*)(char *, uint64_t))v100;
      v67 = sub_10001254C(&qword_100547B80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      LODWORD(v98) = v62;
      v68 = dispatch thunk of CustomStringConvertible.description.getter(v45, v67);
      v70 = v69;
      v107 = sub_1000759E0(v68, v69, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
      swift_bridgeObjectRelease(v70);
      v66(v64, v45);
      *(_WORD *)(v65 + 12) = 2082;
      swift_bridgeObjectRetain();
      v71 = Optional<A>.description.getter(v97, v43);
      v97 = v41;
      v73 = v72;
      swift_bridgeObjectRelease(v43);
      v107 = sub_1000759E0(v71, v73, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
      swift_bridgeObjectRelease_n(v43, 2);
      swift_bridgeObjectRelease(v73);
      *(_WORD *)(v65 + 22) = 2082;
      v74 = (uint64_t)v104;
      v75 = sub_10006ED10();
      v77 = v76;
      v107 = sub_1000759E0(v75, v76, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
      swift_bridgeObjectRelease(v77);
      sub_10000E750(v74, type metadata accessor for WidgetMusicRecommendation);
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v98, "Cache miss now %{public}s, expected localization %{public}s, for recommendation: %{public}s", (uint8_t *)v65, 0x20u);
      v78 = v99;
      swift_arrayDestroy(v99, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      v66(v101, v45);
      v79 = v97;
    }
    else
    {

      sub_10000E750(v46, type metadata accessor for WidgetMusicRecommendation);
      swift_bridgeObjectRelease_n(v43, 2);
      v80 = (void (*)(char *, uint64_t))v100;
      ((void (*)(char *, uint64_t))v100)(v57, v45);
      v80(v40, v45);
      v79 = v41;
    }
    sub_10000E750(v79, type metadata accessor for WidgetMusicRecommendation);
    v35 = 1;
    v44 = v106;
    v13 = v103;
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  sub_10000E750(v56, type metadata accessor for WidgetMusicRecommendation);
  if (v43)
  {
    swift_bridgeObjectRelease(v43);
    goto LABEL_30;
  }
LABEL_43:
  if (qword_1005478B8 != -1)
    swift_once(&qword_1005478B8, sub_100074F38);
  v84 = type metadata accessor for Logger(0);
  sub_10000D78C(v84, (uint64_t)qword_10054A1F8);
  v85 = v98;
  v86 = sub_10000D964(v41, v98, type metadata accessor for WidgetMusicRecommendation);
  v87 = Logger.logObject.getter(v86);
  v88 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc(12, -1);
    v90 = swift_slowAlloc(32, -1);
    v101 = v40;
    v91 = v90;
    v108 = v90;
    *(_DWORD *)v89 = 136446210;
    v92 = sub_10006ED10();
    v94 = v93;
    v107 = sub_1000759E0(v92, v93, &v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108);
    swift_bridgeObjectRelease(v94);
    sub_10000E750(v85, type metadata accessor for WidgetMusicRecommendation);
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Using cached recommendation: %{public}s", v89, 0xCu);
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v89, -1, -1);

    v95 = v101;
    v96 = v102;
  }
  else
  {

    sub_10000E750(v85, type metadata accessor for WidgetMusicRecommendation);
    v95 = v40;
    v96 = v45;
  }
  ((void (*)(char *, uint64_t))v100)(v95, v96);
  v81 = v105;
  v44 = v106;
  sub_10000DB44(v41, v106, type metadata accessor for WidgetMusicRecommendation);
  v35 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v44, v35, 1, v13);
}

void sub_1000713C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = type metadata accessor for WidgetMusicRecommendation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v43 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetDiskCache(0);
  v41 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v41 + 64);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100547B70);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_1005484E8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - v16;
  if (*(_BYTE *)(a1 + *(int *)(v2 + 28)) == 5)
  {
    if (qword_1005478B8 != -1)
      swift_once(&qword_1005478B8, sub_100074F38);
    v18 = type metadata accessor for Logger(0);
    sub_10000D78C(v18, (uint64_t)qword_10054A1F8);
    v19 = v43;
    v20 = sub_10000D964(a1, v43, type metadata accessor for WidgetMusicRecommendation);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v45 = v24;
      *(_DWORD *)v23 = 136446210;
      v25 = sub_10006ED10();
      v27 = v26;
      v44 = sub_1000759E0(v25, v26, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_bridgeObjectRelease(v27);
      sub_10000E750(v19, type metadata accessor for WidgetMusicRecommendation);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Unknown kind, unable to save to disk recommendation: %{public}s", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      sub_10000E750(v19, type metadata accessor for WidgetMusicRecommendation);
    }

  }
  else
  {
    LOBYTE(v45) = *(_BYTE *)(a1 + *(int *)(v2 + 28));
    v43 = String.init<A>(describing:)(&v45, &type metadata for WidgetMusicRecommendationKind);
    v40 = v28;
    sub_10000D964(a1, (uint64_t)v17, type metadata accessor for WidgetMusicRecommendation);
    v29 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v17, 0, 1, v2);
    static TaskPriority.userInitiated.getter(v29);
    v30 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 0, 1, v30);
    sub_10000D964(v42, (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WidgetDiskCache);
    sub_100011370((uint64_t)v17, (uint64_t)v15, &qword_1005484E8);
    v31 = *(unsigned __int8 *)(v41 + 80);
    v32 = (v31 + 32) & ~v31;
    v33 = (v6 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = *(unsigned __int8 *)(v12 + 80);
    v35 = (v34 + v33 + 16) & ~v34;
    v36 = swift_allocObject(&unk_1004FA7E8, v35 + v13, v31 | v34 | 7);
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    sub_10000DB44((uint64_t)v7, v36 + v32, type metadata accessor for WidgetDiskCache);
    v37 = (_QWORD *)(v36 + v33);
    v38 = v40;
    *v37 = v43;
    v37[1] = v38;
    sub_100011530((uint64_t)v15, v36 + v35, &qword_1005484E8);
    swift_bridgeObjectRetain();
    v39 = sub_10006E874((uint64_t)v10, (uint64_t)&unk_10054A400, v36);
    swift_release(v39);
    sub_100011694((uint64_t)v10, &qword_100547B70);
    swift_bridgeObjectRelease(v38);
    sub_100011694((uint64_t)v17, &qword_1005484E8);
  }
}

id sub_1000717F4()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for RecommendationsWidgetDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100071830();
  qword_1005613A8 = (uint64_t)result;
  return result;
}

id sub_100071830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id result;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000662C8(0x6E656D6D6F636552, 0xEF736E6F69746164, (char *)(v1 + OBJC_IVAR____TtC12MusicWidgets33RecommendationsWidgetDataProvider_cache));
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2);
  static MusicDataRequest.preferredExecutionMethod.setter(v5);
  v6 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v7 = objc_msgSend(v6, "processName");

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  if (v8 == 0x646957636973754DLL && v10 == 0xEC00000073746567)
  {
    swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, 0x646957636973754DLL, 0xEC00000073746567, 0);
    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) == 0)
      return (id)v1;
  }
  if (qword_1005478B8 != -1)
    swift_once(&qword_1005478B8, sub_100074F38);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_10000D78C(v13, (uint64_t)qword_10054A1F8);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "running in widget process, disabling fallback cache", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v19 = objc_msgSend(v18, "artworkDataSource");
  if (v19)
  {
    v20 = v19;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v21 = (void *)swift_dynamicCastObjCClass(v20);
    if (v21)
      objc_msgSend(v21, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v20);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100071B1C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *(_BYTE *)(v2 + 306) = a2;
  *(_QWORD *)(v2 + 96) = a1;
  v3 = sub_10000B4C8(&qword_10054A3B0);
  *(_QWORD *)(v2 + 104) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 112) = v4;
  *(_QWORD *)(v2 + 120) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicPersonalRecommendationsResponse(0);
  *(_QWORD *)(v2 + 128) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 136) = v6;
  *(_QWORD *)(v2 + 144) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054A3B8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 152) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 160) = swift_task_alloc(v7);
  v8 = sub_10000B4C8(&qword_10054A3C0);
  *(_QWORD *)(v2 + 168) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicDataRequest.Source(0);
  *(_QWORD *)(v2 + 176) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v2 + 184) = v10;
  *(_QWORD *)(v2 + 192) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicPersonalRecommendationsRequest(0);
  *(_QWORD *)(v2 + 200) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v2 + 208) = v12;
  *(_QWORD *)(v2 + 216) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054A3C8);
  *(_QWORD *)(v2 + 224) = v13;
  v14 = (*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 232) = swift_task_alloc(v14);
  *(_QWORD *)(v2 + 240) = swift_task_alloc(v14);
  *(_QWORD *)(v2 + 248) = swift_task_alloc(v14);
  return swift_task_switch(sub_100071C98, 0, 0);
}

void sub_100071C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  char v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  if (qword_1005478B8 != -1)
    swift_once(&qword_1005478B8, sub_100074F38);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10000D78C(v1, (uint64_t)qword_10054A1F8);
  *(_QWORD *)(v0 + 256) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_BYTE *)(v0 + 306);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v19 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_BYTE *)(v0 + 305) = v5;
    v8 = String.init<A>(describing:)(v0 + 305, &type metadata for WidgetMusicRecommendationKind);
    v10 = v9;
    *(_QWORD *)(v0 + 88) = sub_1000759E0(v8, v9, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Asking server for %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v11 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(unsigned __int8 *)(v0 + 306);
  v16 = type metadata accessor for MusicPersonalRecommendation(0);
  *(_QWORD *)(v0 + 264) = v16;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  *(_QWORD *)(v0 + 272) = v17;
  v18 = v17(v11, 1, 1, v16);
  MusicPersonalRecommendationsRequest.init()(v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v12, enum case for MusicDataRequest.Source.widgets(_:), v14);
  MusicPersonalRecommendationsRequest.source.setter(v12);
  __asm { BR              X9 }
}

uint64_t sub_1000720F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000724C0;
  else
    v3 = sub_100072158;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100072158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 280))(v1, 0, 1, v3);
  sub_10007B328(v1, v2, &qword_10054A3B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 272))(*(_QWORD *)(v0 + 240), 1, 1, *(_QWORD *)(v0 + 264));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 112);
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v6, *(_QWORD *)(v0 + 160), v8);
    MusicPersonalRecommendationsResponse.recommendations.getter(v12);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_100069A6C(&qword_10054A3B0, &qword_10054A3E0, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPersonalRecommendation, v5);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  v13 = sub_10007B328(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), &qword_10054A3C8);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 248);
    v17 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 224);
    v36 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 200);
    v40 = *(_QWORD *)(v0 + 216);
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v42 = v19;
    *(_DWORD *)v18 = 136446210;
    swift_beginAccess(v16, v0 + 40, 0, 0);
    sub_100011370(v16, v17, &qword_10054A3C8);
    v20 = String.init<A>(describing:)(v17, v35);
    v22 = v21;
    *(_QWORD *)(v0 + 80) = sub_1000759E0(v20, v21, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Server returned: %{public}s", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v38);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 208);
    v23 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  sub_100011694(*(_QWORD *)(v0 + 160), &qword_10054A3B8);
  v27 = *(_QWORD *)(v0 + 240);
  v26 = *(_QWORD *)(v0 + 248);
  v28 = *(_QWORD *)(v0 + 232);
  v29 = *(_QWORD *)(v0 + 216);
  v30 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 144);
  v41 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_beginAccess(v26, v0 + 16, 0, 0);
  sub_100011370(v26, v33, &qword_10054A3C8);
  sub_100011694(v26, &qword_10054A3C8);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000724C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  sub_100011694(v2, &qword_10054A3B8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 296);
    v7 = *(_BYTE *)(v0 + 306);
    v8 = swift_slowAlloc(22, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    v27 = swift_slowAlloc(32, -1);
    v29 = v27;
    *(_DWORD *)v8 = 136446466;
    *(_BYTE *)(v0 + 304) = v7;
    v10 = String.init<A>(describing:)(v0 + 304, &type metadata for WidgetMusicRecommendationKind);
    v12 = v11;
    *(_QWORD *)(v0 + 64) = sub_1000759E0(v10, v11, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v8 + 12) = 2114;
    swift_errorRetain(v6);
    v13 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v0 + 72) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    *v9 = v13;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Request %{public}s failed with %{public}@", (uint8_t *)v8, 0x16u);
    v14 = sub_10000B4C8(&qword_100547B10);
    swift_arrayDestroy(v9, 1, v14);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 296);
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

  }
  v17 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 232);
  v19 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 192);
  v22 = *(_QWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  swift_beginAccess(v16, v0 + 16, 0, 0);
  sub_100011370(v16, v23, &qword_10054A3C8);
  sub_100011694(v16, &qword_10054A3C8);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000727B0()
{
  uint64_t v0;

  sub_10000E750(v0 + OBJC_IVAR____TtC12MusicWidgets33RecommendationsWidgetDataProvider_cache, type metadata accessor for WidgetRecommendationDiskCache);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000727E8()
{
  return type metadata accessor for RecommendationsWidgetDataProvider(0);
}

uint64_t type metadata accessor for RecommendationsWidgetDataProvider(uint64_t a1)
{
  return sub_10001133C(a1, (uint64_t *)&unk_10054A258, (uint64_t)&nominal type descriptor for RecommendationsWidgetDataProvider);
}

uint64_t sub_100072804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072810);
}

uint64_t sub_100072810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10007284C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072858);
}

uint64_t sub_100072858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetRecommendationDiskCache(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054A378, (uint64_t)&nominal type descriptor for WidgetRecommendationDiskCache);
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendationKind()
{
  return &type metadata for WidgetMusicRecommendationKind;
}

uint64_t sub_1000728C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_10000B4C8(&qword_1005481F0);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v7);
  v3[9] = swift_task_alloc(v7);
  v8 = type metadata accessor for MusicPersonalRecommendation.Item(0);
  v3[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[11] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v10);
  v3[13] = swift_task_alloc(v10);
  v11 = type metadata accessor for Album(0);
  v3[14] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[15] = v12;
  v3[16] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054A4A8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v13);
  v3[18] = swift_task_alloc(v13);
  return swift_task_switch(sub_1000729F0, 0, 0);
}

uint64_t sub_1000729F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t **v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Class isa;
  Class v36;
  void (*v37)(uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1[18];
  MusicPersonalRecommendation.kind.getter(a1);
  v3 = type metadata accessor for MusicPersonalRecommendation.Kind(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)v5 == 1)
    goto LABEL_7;
  v6 = v1[17];
  sub_100011370(v1[18], v6, &qword_10054A4A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v6, v3) != enum case for MusicPersonalRecommendation.Kind.newReleases(_:))
  {
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1[17], v3);
LABEL_7:
    v21 = MusicPersonalRecommendation.Item.recommendationReason.getter(v5);
    v23 = v22;
    goto LABEL_8;
  }
  v7 = v1[13];
  v8 = v1[10];
  v9 = v1[11];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v1[3], v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8) == enum case for MusicPersonalRecommendation.Item.album(_:))
  {
    v11 = v1[15];
    v10 = v1[16];
    v13 = v1[13];
    v12 = v1[14];
    v14 = v1[6];
    v15 = v1[7];
    v16 = v1[5];
    (*(void (**)(uint64_t, uint64_t))(v1[11] + 96))(v13, v1[10]);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v10, v13, v12);
    Album.releaseDate.getter(v17);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14);
    v19 = v1[15];
    if (v18 != 1)
    {
      v31 = v1[8];
      v30 = v1[9];
      v32 = v1[6];
      v33 = v1[7];
      v40 = v1[16];
      v41 = v1[14];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v30, v1[5], v32);
      v34 = objc_msgSend(objc_allocWithZone((Class)NSRelativeDateTimeFormatter), "init");
      isa = Date._bridgeToObjectiveC()().super.isa;
      static Date.now.getter(isa);
      v36 = Date._bridgeToObjectiveC()().super.isa;
      v37 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v37(v31, v32);
      v38 = objc_msgSend(v34, "localizedStringForDate:relativeToDate:", isa, v36);

      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v23 = v39;

      v37(v30, v32);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v40, v41);
      goto LABEL_8;
    }
    v20 = v1[5];
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1[16], v1[14]);
    sub_100011694(v20, &qword_1005481F0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v1[11] + 8))(v1[13], v1[10]);
  }
  v21 = 0;
  v23 = 0;
LABEL_8:
  v25 = v1[11];
  v24 = v1[12];
  v26 = v1[10];
  v27 = v1[3];
  sub_100011694(v1[18], &qword_10054A4A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v27, v26);
  v28 = (uint64_t **)swift_task_alloc(dword_10054A4B4);
  v1[19] = (uint64_t)v28;
  *v28 = v1;
  v28[1] = (uint64_t *)sub_100072CD8;
  return sub_100072D8C(v1[2], v1[12], v21, v23);
}

uint64_t sub_100072CD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(*v0 + 144);
  v3 = *(_QWORD *)(*v0 + 128);
  v2 = *(_QWORD *)(*v0 + 136);
  v5 = *(_QWORD *)(*v0 + 96);
  v4 = *(_QWORD *)(*v0 + 104);
  v7 = *(_QWORD *)(*v0 + 64);
  v6 = *(_QWORD *)(*v0 + 72);
  v8 = *(_QWORD *)(*v0 + 40);
  v10 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_100072D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_10000B4C8(&qword_10054A4B8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicSiriRepresentation(0);
  v4[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[16] = v7;
  v4[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100547B48);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v4[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Station(0);
  v4[21] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[22] = v12;
  v4[23] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Playlist(0);
  v4[24] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[25] = v14;
  v4[26] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v4[27] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[28] = v16;
  v4[29] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicPersonalRecommendation.Item(0);
  v4[30] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[31] = v18;
  v4[32] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100072F18, 0, 0);
}

uint64_t sub_100072F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 88), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for MusicPersonalRecommendation.Item.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 96))(v5, *(_QWORD *)(v0 + 240));
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v10 = Album.id.getter(v9);
    v12 = v11;
    v13 = Album.catalogID.getter(v10);
LABEL_5:
    v18 = v13;
    v19 = v14;
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    goto LABEL_10;
  }
  if (v4 == enum case for MusicPersonalRecommendation.Item.playlist(_:))
  {
    v15 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 96))(v15, *(_QWORD *)(v0 + 240));
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v15, v7);
    v10 = Playlist.id.getter(v16);
    v12 = v17;
    v13 = Playlist.catalogID.getter(v10);
    goto LABEL_5;
  }
  v22 = *(_QWORD *)(v0 + 248);
  v21 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 240);
  if (v4 == enum case for MusicPersonalRecommendation.Item.station(_:))
  {
    v25 = *(_QWORD *)(v0 + 176);
    v24 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(v22 + 96))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v21, v26);
    v10 = Station.id.getter(v27);
    v12 = v28;
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  else
  {
    v10 = MusicPersonalRecommendation.Item.id.getter();
    v12 = v29;
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  v18 = 0;
  v19 = 0;
LABEL_10:
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v12;
  *(_QWORD *)(v0 + 264) = v18;
  *(_QWORD *)(v0 + 272) = v19;
  v31 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 32) = MusicPersonalRecommendation.Item.title.getter(v20);
  *(_QWORD *)(v0 + 40) = v32;
  *(_QWORD *)(v0 + 48) = MusicPersonalRecommendation.Item.subtitle.getter();
  *(_QWORD *)(v0 + 56) = v33;
  v34 = sub_1000737DC(v30);
  MusicPersonalRecommendation.Item.artwork.getter(v34);
  v35 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 280) = v35;
  v36 = *(_QWORD *)(v35 - 8);
  *(_QWORD *)(v0 + 288) = v36;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 152), &qword_100547B48);
    *(_QWORD *)(v0 + 312) = 0;
    v37 = *(_QWORD *)(v0 + 136);
    v38 = *(_QWORD *)(v0 + 120);
    v39 = *(_QWORD *)(v0 + 128);
    v40 = *(_QWORD *)(v0 + 112);
    v41 = sub_100074B88(*(_QWORD *)(v0 + 144));
    v42 = MusicPersonalRecommendation.Item.siriRepresentation.getter(v41);
    *(_QWORD *)(v0 + 64) = MusicSiriRepresentation.id.getter(v42);
    *(_QWORD *)(v0 + 72) = v43;
    v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    MusicPersonalRecommendation.Item.friendsWhoListened.getter(v44);
    v45 = sub_10000B4C8(&qword_10054A4C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v40, 1, v45) == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054A4B8);
      v46 = *(_QWORD *)(v0 + 72);
      v48 = *(_QWORD *)(v0 + 40);
      v47 = *(_QWORD *)(v0 + 48);
      v50 = *(_QWORD *)(v0 + 24);
      v49 = *(_QWORD *)(v0 + 32);
      v51 = *(_QWORD *)(v0 + 16);
      *(_QWORD *)(v0 + 344) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v0 + 352) = v46;
      *(int8x16_t *)(v0 + 360) = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
      *(_QWORD *)(v0 + 376) = v47;
      *(_QWORD *)(v0 + 384) = v48;
      *(_QWORD *)(v0 + 392) = v49;
      *(_QWORD *)(v0 + 400) = v50;
      *(_QWORD *)(v0 + 408) = v51;
      *(_QWORD *)(v0 + 416) = sub_100073F6C();
      v52 = (_QWORD *)swift_task_alloc(dword_10054A4CC);
      *(_QWORD *)(v0 + 424) = v52;
      *v52 = v0;
      v52[1] = sub_10007365C;
      return sub_100074368();
    }
    else
    {
      v55 = sub_10006B8B8(3, &qword_10054A4C0, &qword_10054A540);
      v57 = v56;
      v59 = v58;
      v61 = v60;
      *(_QWORD *)(v0 + 320) = v55;
      v63 = (char *)&dword_10054A4D8 + dword_10054A4D8;
      v62 = (_QWORD *)swift_task_alloc(unk_10054A4DC);
      *(_QWORD *)(v0 + 328) = v62;
      *v62 = v0;
      v62[1] = sub_100073570;
      return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v63)(&unk_10054A4D0, 0, v55, v57, v59, v61);
    }
  }
  else
  {
    v54 = (_QWORD *)swift_task_alloc(dword_10054925C);
    *(_QWORD *)(v0 + 296) = v54;
    *v54 = v0;
    v54[1] = sub_100073328;
    return sub_100039994(150);
  }
}

uint64_t sub_100073328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1000733A4, 0, 0);
}

uint64_t sub_1000733A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = sub_100074B88(*(_QWORD *)(v0 + 144));
  v6 = MusicPersonalRecommendation.Item.siriRepresentation.getter(v5);
  *(_QWORD *)(v0 + 64) = MusicSiriRepresentation.id.getter(v6);
  *(_QWORD *)(v0 + 72) = v7;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  MusicPersonalRecommendation.Item.friendsWhoListened.getter(v8);
  v9 = sub_10000B4C8(&qword_10054A4C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 112), &qword_10054A4B8);
    v10 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 24);
    v13 = *(_QWORD *)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 344) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + 352) = v10;
    *(int8x16_t *)(v0 + 360) = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
    *(_QWORD *)(v0 + 376) = v11;
    *(_QWORD *)(v0 + 384) = v12;
    *(_QWORD *)(v0 + 392) = v13;
    *(_QWORD *)(v0 + 400) = v14;
    *(_QWORD *)(v0 + 408) = v15;
    *(_QWORD *)(v0 + 416) = sub_100073F6C();
    v16 = (_QWORD *)swift_task_alloc(dword_10054A4CC);
    *(_QWORD *)(v0 + 424) = v16;
    *v16 = v0;
    v16[1] = sub_10007365C;
    return sub_100074368();
  }
  else
  {
    v18 = sub_10006B8B8(3, &qword_10054A4C0, &qword_10054A540);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    *(_QWORD *)(v0 + 320) = v18;
    v26 = (char *)&dword_10054A4D8 + dword_10054A4D8;
    v25 = (_QWORD *)swift_task_alloc(unk_10054A4DC);
    *(_QWORD *)(v0 + 328) = v25;
    *v25 = v0;
    v25[1] = sub_100073570;
    return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v26)(&unk_10054A4D0, 0, v18, v20, v22, v24);
  }
}

uint64_t sub_100073570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 328);
  *(_QWORD *)(*(_QWORD *)v1 + 336) = a1;
  swift_task_dealloc(v2);
  swift_unknownObjectRelease(v3);
  return swift_task_switch(sub_1000735D4, 0, 0);
}

uint64_t sub_1000735D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 352) = v1;
  *(int8x16_t *)(v0 + 360) = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  *(_QWORD *)(v0 + 376) = v2;
  *(_QWORD *)(v0 + 384) = v3;
  *(_QWORD *)(v0 + 392) = v4;
  *(_QWORD *)(v0 + 400) = v5;
  *(_QWORD *)(v0 + 408) = v6;
  *(_QWORD *)(v0 + 416) = sub_100073F6C();
  v7 = (_QWORD *)swift_task_alloc(dword_10054A4CC);
  *(_QWORD *)(v0 + 424) = v7;
  *v7 = v0;
  v7[1] = sub_10007365C;
  return sub_100074368();
}

uint64_t sub_10007365C(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  *(_BYTE *)(*(_QWORD *)v1 + 432) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1000736B8, 0, 0);
}

uint64_t sub_1000736B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 88);
  sub_100036164(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 368), v7, *(_QWORD *)(v0 + 312), *(_QWORD **)(v0 + 80), 1.0, v8, *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 352), 0, 0,
    0,
    0,
    0,
    0,
    *(_QWORD *)(v0 + 344),
    *(_QWORD *)(v0 + 416),
    *(_BYTE *)(v0 + 432));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v8);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000737DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  unint64_t v45;
  uint64_t result;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  unint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  unint64_t v96;
  unint64_t v97;

  v94 = a1;
  v1 = type metadata accessor for Station(0);
  v87 = *(_QWORD *)(v1 - 8);
  v88 = v1;
  __chkstk_darwin(v1);
  v86 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist(0);
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  v4 = __chkstk_darwin(v3);
  v93 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v89 = (char *)&v82 - v6;
  v7 = sub_10000B4C8(&qword_100547A38);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v83 = (char *)&v82 - v12;
  v13 = __chkstk_darwin(v11);
  v84 = (char *)&v82 - v14;
  v15 = __chkstk_darwin(v13);
  v85 = (char *)&v82 - v16;
  v17 = __chkstk_darwin(v15);
  v92 = (uint64_t)&v82 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v82 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v82 - v22;
  v24 = type metadata accessor for Album(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v82 - v29;
  v31 = type metadata accessor for MusicPersonalRecommendation.Item(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v32 + 16))(v34, v95, v31);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v34, v31);
  if (v35 == enum case for MusicPersonalRecommendation.Item.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v30, v34, v24);
    Album.url.getter(v36);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    v37 = type metadata accessor for URL(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v23, 1, v37);
    if ((_DWORD)v40 != 1)
    {
      v67 = *(void (**)(char *, uint64_t))(v25 + 8);
      v67(v28, v24);
      v67(v30, v24);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v94, v23, v37);
    }
    v95 = v39;
    v93 = (char *)Album.id.getter(v40);
    v42 = v41;
    v96 = 0;
    v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease(v97);
    v96 = 0xD000000000000016;
    v97 = 0x8000000100444D70;
    swift_bridgeObjectRetain();
    v43._countAndFlagsBits = (uint64_t)v93;
    v43._object = v42;
    String.append(_:)(v43);
    swift_bridgeObjectRelease(v42);
    v44._countAndFlagsBits = 0xD00000000000001ALL;
    v44._object = (void *)0x8000000100444DF0;
    String.append(_:)(v44);
    v45 = v97;
    URL.init(string:)(v96, v97);
    swift_bridgeObjectRelease(v45);
    result = v95(v21, 1, v37);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v94, v21, v37);
      swift_bridgeObjectRelease(v42);
      v47 = *(void (**)(char *, uint64_t))(v25 + 8);
      v47(v28, v24);
      v47(v30, v24);
      return sub_100011694((uint64_t)v23, &qword_100547A38);
    }
    __break(1u);
    goto LABEL_21;
  }
  if (v35 == enum case for MusicPersonalRecommendation.Item.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    v49 = v89;
    v48 = v90;
    v50 = v91;
    v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v90 + 32))(v89, v34, v91);
    v52 = v92;
    Playlist.url.getter(v51);
    v53 = v93;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v93, v49, v50);
    v54 = type metadata accessor for URL(0);
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
    v57 = v56(v52, 1, v54);
    if ((_DWORD)v57 == 1)
    {
      v58 = Playlist.id.getter(v57);
      v60 = v59;
      v96 = 0;
      v97 = 0xE000000000000000;
      _StringGuts.grow(_:)(55);
      v61._object = (void *)0x8000000100444D70;
      v61._countAndFlagsBits = 0xD000000000000016;
      String.append(_:)(v61);
      swift_bridgeObjectRetain();
      v62._countAndFlagsBits = v58;
      v62._object = v60;
      String.append(_:)(v62);
      swift_bridgeObjectRelease(v60);
      v63._countAndFlagsBits = 0xD00000000000001FLL;
      v63._object = (void *)0x8000000100444D90;
      String.append(_:)(v63);
      v64 = v97;
      v65 = v85;
      URL.init(string:)(v96, v97);
      swift_bridgeObjectRelease(v64);
      result = v56((uint64_t)v65, 1, v54);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v94, v65, v54);
        swift_bridgeObjectRelease(v60);
        v66 = *(void (**)(char *, uint64_t))(v48 + 8);
        v66(v93, v50);
        v66(v49, v50);
        return sub_100011694(v92, &qword_100547A38);
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    v76 = *(void (**)(char *, uint64_t))(v48 + 8);
    v76(v53, v50);
    v76(v49, v50);
    v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
    v78 = v94;
    v79 = v52;
  }
  else
  {
    if (v35 != enum case for MusicPersonalRecommendation.Item.station(_:))
    {
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      v80 = type metadata accessor for URL(0);
      v81 = *(_QWORD *)(v80 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48))(v10, 1, v80);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v94, v10, v80);
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      }
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v32 + 96))(v34, v31);
    v69 = v86;
    v68 = v87;
    v70 = v88;
    v71 = (*(uint64_t (**)(char *, char *, uint64_t))(v87 + 32))(v86, v34, v88);
    v72 = (uint64_t)v84;
    Station.url.getter(v71);
    v54 = type metadata accessor for URL(0);
    v73 = *(_QWORD *)(v54 - 8);
    v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    if (v74((char *)v72, 1, v54) == 1)
    {
      v75 = v83;
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v74(v75, 1, v54);
      if ((_DWORD)result != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v94, v75, v54);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
        return sub_100011694(v72, &qword_100547A38);
      }
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
    v78 = v94;
    v79 = v72;
  }
  return v77(v78, v79, v54);
}

_QWORD *sub_100073F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for Station(0);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  __chkstk_darwin(v2);
  v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100547B58);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100547B60);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Album(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicPersonalRecommendation.Item(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v1, v17);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for MusicPersonalRecommendation.Item.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v20, v13);
    v22 = sub_10000B4C8(&qword_100547B68);
    v23 = swift_allocObject(v22, 34, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100424BA0;
    Album.contentRating.getter();
    *(_BYTE *)(v23 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    Album.favoriteStatus.getter();
    v24 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 0, 1, v24);
    *(_BYTE *)(v23 + 33) = TextBadge.init(for:)(v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else if (v21 == enum case for MusicPersonalRecommendation.Item.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v26 = v38;
    v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v6, v20, v39);
    v27 = sub_10000B4C8(&qword_100547B68);
    v23 = swift_allocObject(v27, 34, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100424BA0;
    Playlist.contentRating.getter();
    *(_BYTE *)(v23 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    Playlist.favoriteStatus.getter();
    v28 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
    *(_BYTE *)(v23 + 33) = TextBadge.init(for:)(v9);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
  }
  else if (v21 == enum case for MusicPersonalRecommendation.Item.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v29 = v35;
    v30 = v36;
    v31 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v20, v37);
    v32 = sub_10000B4C8(&qword_100547B68);
    v23 = swift_allocObject(v32, 33, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100424BB0;
    Station.contentRating.getter();
    *(_BYTE *)(v23 + 32) = TextBadge.init(for:isPlayable:)(v12, 1);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v23;
}

uint64_t sub_100074368()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1[2] = v0;
  v2 = type metadata accessor for Station(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v1[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[10] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[11] = swift_task_alloc(v8);
  v1[12] = swift_task_alloc(v8);
  v9 = type metadata accessor for Album(0);
  v1[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[14] = v10;
  v1[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicPersonalRecommendation.Item(0);
  v1[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[17] = v12;
  v1[18] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100074478, 0, 0);
}

uint64_t sub_100074478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 16), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for MusicPersonalRecommendation.Item.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v5, *(_QWORD *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v9 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 152) = static MainActor.shared.getter();
    v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
    v12 = v11;
    v13 = sub_1000746D0;
    return swift_task_switch(v13, v10, v12);
  }
  if (v4 == enum case for MusicPersonalRecommendation.Item.playlist(_:))
  {
    v14 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v14, *(_QWORD *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v15, v14, v17);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 160) = static MainActor.shared.getter();
    v10 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    v12 = v19;
    v13 = sub_100074864;
    return swift_task_switch(v13, v10, v12);
  }
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 128);
  if (v4 == enum case for MusicPersonalRecommendation.Item.station(_:))
  {
    v24 = *(_QWORD *)(v0 + 32);
    v23 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, uint64_t))(v20 + 96))(*(_QWORD *)(v0 + 144), v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v21, v25);
    v26 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter();
    v10 = dispatch thunk of Actor.unownedExecutor.getter(v26, &protocol witness table for MainActor);
    v12 = v27;
    v13 = sub_1000749F4;
    return swift_task_switch(v13, v10, v12);
  }
  v29 = *(_QWORD *)(v0 + 120);
  v31 = *(_QWORD *)(v0 + 88);
  v30 = *(_QWORD *)(v0 + 96);
  v32 = *(_QWORD *)(v0 + 64);
  v33 = *(_QWORD *)(v0 + 40);
  (*(void (**)(_QWORD, uint64_t))(v20 + 8))(*(_QWORD *)(v0 + 144), v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1000746D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = swift_release(*(_QWORD *)(v0 + 152));
  type metadata accessor for InternalMusicPlayer(0, v7);
  v8 = static InternalMusicPlayer.localDevice.getter();
  v9 = InternalMusicPlayer.state<A>(for:)(v1, v3, &protocol witness table for Album);
  v10 = swift_release(v8);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v5 + 104))(v4, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v6, v11);
  *(_BYTE *)(v0 + 176) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v2, v4) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v12(v4, v6);
  v12(v2, v6);
  return swift_task_switch(sub_1000747C8, 0, 0);
}

uint64_t sub_1000747C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(v2, *(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100074864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = swift_release(*(_QWORD *)(v0 + 160));
  type metadata accessor for InternalMusicPlayer(0, v7);
  v8 = static InternalMusicPlayer.localDevice.getter();
  v9 = InternalMusicPlayer.state<A>(for:)(v5, v6, &protocol witness table for Playlist);
  v10 = swift_release(v8);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v4 + 104))(v2, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3, v11);
  *(_BYTE *)(v0 + 177) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v1, v2) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v2, v3);
  v12(v1, v3);
  return swift_task_switch(sub_10007495C, 0, 0);
}

uint64_t sub_10007495C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(v0 + 177);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v2, *(_QWORD *)(v0 + 48));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v2);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1000749F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = swift_release(*(_QWORD *)(v0 + 168));
  type metadata accessor for InternalMusicPlayer(0, v7);
  v8 = static InternalMusicPlayer.localDevice.getter();
  v9 = InternalMusicPlayer.state<A>(for:)(v5, v6, &protocol witness table for Station);
  v10 = swift_release(v8);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v4 + 104))(v2, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v3, v11);
  *(_BYTE *)(v0 + 178) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v1, v2) & 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v2, v3);
  v12(v1, v3);
  return swift_task_switch(sub_100074AEC, 0, 0);
}

uint64_t sub_100074AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(v0 + 178);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(v2, *(_QWORD *)(v0 + 24));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100074B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicPersonalRecommendation.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for MusicPersonalRecommendation.Item.album(_:))
  {
    v13 = sub_10000B4C8(&qword_100547B50);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
LABEL_7:
    v20 = a1;
    v21 = 1;
    goto LABEL_8;
  }
  v15 = v12;
  if (v12 == enum case for MusicPersonalRecommendation.Item.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    Playlist.variant.getter(v16);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = sub_10000B4C8(&qword_100547B50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 10, v17);
  }
  v19 = enum case for MusicPersonalRecommendation.Item.station(_:);
  v13 = sub_10000B4C8(&qword_100547B50);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  if (v15 != v19)
    goto LABEL_7;
  v20 = a1;
  v21 = 8;
LABEL_8:
  v14(v20, v21, 10, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100074D64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_10000B4C8(&qword_100547B48);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100074DC0, 0, 0);
}

uint64_t sub_100074DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 32);
  SocialProfile.artwork.getter();
  v2 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 40) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 48) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_100011694(*(_QWORD *)(v0 + 32), &qword_100547B48);
    v4 = *(_QWORD *)(v0 + 32);
    **(_QWORD **)(v0 + 16) = 0;
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc(dword_10054925C);
    *(_QWORD *)(v0 + 56) = v6;
    *v6 = v0;
    v6[1] = sub_100074E80;
    return sub_100039994(54);
  }
}

uint64_t sub_100074E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  return swift_task_switch(sub_100074EF8, 0, 0);
}

uint64_t sub_100074EF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074F38()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D924(v0, qword_10054A1F8);
  sub_10000D78C(v0, (uint64_t)qword_10054A1F8);
  return static Logger.music(_:)(0xD000000000000021, 0x80000001004269A0);
}

uint64_t sub_100074F98(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_100074FA8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_100074FDC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100075040;
  return v6(a1);
}

uint64_t sub_100075040()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10007508C(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

uint64_t sub_1000750AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753E8(a1, a2, a3, a4, &qword_10054A4A0, type metadata accessor for WidgetMusicItem);
}

_QWORD *sub_1000750C0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000B4C8(&qword_10054A670);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10007A8D0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000751B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000B4C8(&qword_10054A668);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10007A8D0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000752B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000B4C8(&qword_100547C28);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10007A9B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000753D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753E8(a1, a2, a3, a4, &qword_10054A7E8, type metadata accessor for RecommendationsWidgetTimelineProvider.Entry);
}

uint64_t sub_1000753E8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000B4C8(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007BD48(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_1000755F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753E8(a1, a2, a3, a4, &qword_100549200, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
}

uint64_t sub_100075608(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753E8(a1, a2, a3, a4, &qword_1005491F8, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_10007561C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100075630(a1, a2, a3, a4, &qword_100549218, &qword_100549220);
}

uint64_t sub_100075630(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10000B4C8(a5);
  v14 = *(_QWORD *)(sub_10000B4C8(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(sub_10000B4C8(a6) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007B068(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_10007583C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753E8(a1, a2, a3, a4, &qword_10054A7F0, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
}

_QWORD *sub_100075850(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000B4C8(&qword_10054A530);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007AAA8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007595C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753E8(a1, a2, a3, a4, &qword_10054A7E0, type metadata accessor for TopChartsWidgetTimelineProvider.Entry);
}

uint64_t sub_100075970(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v6 = a4();
  v8 = v7;
  v9 = sub_1000759E0(v6, v7, a3);
  v10 = *a1 + 8;
  v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_1000759E0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100075AB0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1000760E0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1000760E0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100011758(v12);
  return v7;
}

uint64_t sub_100075AB0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100075C68(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_100075C68(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100075CFC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100075ED4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100075ED4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_100075CFC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100075E70(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100075E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10000B4C8(&qword_10054A3E8);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100075ED4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000B4C8(&qword_10054A3E8);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_100076020(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_100076030(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_1000760E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for WidgetMusicRecommendation(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054A758, (uint64_t)&nominal type descriptor for WidgetMusicRecommendation);
}

uint64_t sub_100076130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10000B4C8(&qword_1005484E8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = v0 + v4;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);

  v13 = v10 + *(int *)(v1 + 24);
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v15 = v0 + v8;
  v16 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v0 + v8, 1, v16))
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v8, v17);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[5] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[8]));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_1000762BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10000B4C8(&qword_1005484E8) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_10054A3FC);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000DC64;
  return sub_10006D9D0(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_100076398()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1000763BC@<X0>(_BYTE *a1@<X8>)
{
  return sub_10006675C(a1);
}

uint64_t sub_1000763D4()
{
  uint64_t *v0;

  return sub_100066860(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000763F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v8[16] = a8;
  v8[17] = v21;
  v8[14] = a6;
  v8[15] = a7;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v9 = *(_QWORD *)(sub_10000B4C8(&qword_100548310) - 8);
  v8[18] = v9;
  v8[19] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10054A468);
  v8[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10054A470);
  v8[21] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[22] = v12;
  v8[23] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Track(0);
  v8[24] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[25] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[26] = v15;
  v8[27] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547B70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[28] = swift_task_alloc(v16);
  v8[29] = swift_task_alloc(v16);
  v17 = sub_10000B4C8(&qword_10054A5E0);
  v8[30] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[31] = v18;
  v8[32] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054A5E8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v19);
  v8[34] = swift_task_alloc(v19);
  return swift_task_switch(sub_100076570, 0, 0);
}

uint64_t sub_100076570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = *(_QWORD *)(v1 + 240);
  v2 = *(_QWORD *)(v1 + 248);
  v4 = *(_QWORD *)(v1 + 200);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112) >> 1;
  swift_unknownObjectRetain(*(_QWORD *)(v1 + 88));
  v54 = 0;
  v52 = v3;
  v53 = v2;
  v50 = v6;
  v51 = v4;
  while (1)
  {
    if (v5 == v6)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 264), 1, 1, *(_QWORD *)(v1 + 240));
      v59 = v6;
    }
    else
    {
      if (v5 >= v6 || v5 < *(_QWORD *)(v1 + 104))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v0 = *(_QWORD *)(v1 + 256) + *(int *)(v3 + 48);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 16))(v0, *(_QWORD *)(v1 + 96) + *(_QWORD *)(v4 + 72) * v5, *(_QWORD *)(v1 + 192));
      if (__OFADD__(v54, 1))
        goto LABEL_21;
      v8 = v5;
      v9 = *(_QWORD **)(v1 + 264);
      v10 = *(_QWORD *)(v1 + 240);
      v11 = *(_QWORD *)(v1 + 192);
      v59 = v8 + 1;
      v12 = (char *)v9 + *(int *)(v3 + 48);
      *v9 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v12, v0, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v9, 0, 1, v10);
      ++v54;
    }
    v13 = *(_QWORD *)(v1 + 272);
    v14 = *(_QWORD *)(v1 + 240);
    sub_100011530(*(_QWORD *)(v1 + 264), v13, &qword_10054A5E8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v14) == 1)
      break;
    v15 = *(uint64_t **)(v1 + 272);
    v16 = *(_QWORD *)(v1 + 232);
    v17 = v4;
    v18 = *(_QWORD *)(v1 + 208);
    v19 = *(char **)(v1 + 216);
    v20 = *(_QWORD *)(v1 + 192);
    v21 = *(_QWORD *)(v1 + 128);
    v57 = *(_QWORD *)(v1 + 120);
    v58 = *(_QWORD *)(v1 + 224);
    v55 = v16;
    v56 = *v15;
    v22 = (char *)v15 + *(int *)(v3 + 48);
    v23 = type metadata accessor for TaskPriority(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v16, 1, 1, v23);
    v25 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
    v25((uint64_t)v19, v22, v20);
    v26 = *(unsigned __int8 *)(v17 + 80);
    v27 = (v26 + 56) & ~v26;
    v28 = (_QWORD *)swift_allocObject(&unk_1004FA8D8, v27 + v18, v26 | 7);
    v28[2] = 0;
    v29 = v28 + 2;
    v28[3] = 0;
    v28[4] = v56;
    v28[5] = v57;
    v28[6] = v21;
    v25((uint64_t)v28 + v27, v19, v20);
    sub_100011370(v55, v58, &qword_100547B70);
    LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v58, 1, v23);
    v30 = swift_retain(v21);
    v31 = *(_QWORD *)(v1 + 224);
    if ((_DWORD)v20 == 1)
    {
      sub_100011694(*(_QWORD *)(v1 + 224), &qword_100547B70);
      v32 = 0;
    }
    else
    {
      v33 = TaskPriority.rawValue.getter(v30);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
      v32 = v33;
    }
    v34 = *v29;
    v6 = v50;
    if (*v29)
    {
      v35 = v28[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v34);
      v37 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v35);
      v39 = v38;
      swift_unknownObjectRelease(v34);
    }
    else
    {
      v37 = 0;
      v39 = 0;
    }
    v4 = v51;
    v40 = **(_QWORD **)(v1 + 80);
    sub_10000B4C8(&qword_10054A450);
    v41 = v39 | v37;
    if (v39 | v37)
    {
      v41 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v37;
      *(_QWORD *)(v1 + 40) = v39;
    }
    v5 = v59;
    v0 = *(_QWORD *)(v1 + 232);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v41;
    *(_QWORD *)(v1 + 64) = v40;
    v7 = swift_task_create(v32 | 0x3100, v1 + 48);
    swift_release(v7);
    sub_100011694(v0, &qword_100547B70);
    v3 = v52;
    v2 = v53;
  }
  v42 = *(uint64_t **)(v1 + 136);
  v43 = *(uint64_t **)(v1 + 80);
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 88));
  v44 = *v43;
  v45 = sub_10000B4C8(&qword_10054A450);
  *(_QWORD *)(v1 + 280) = v45;
  v46 = sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.makeAsyncIterator()(v44, v45, v46, &protocol self-conformance witness table for Error);
  v0 = *v42;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
  *v42 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_19;
LABEL_22:
  v0 = sub_1000797DC(v0);
LABEL_19:
  **(_QWORD **)(v1 + 136) = v0;
  v48 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 288) = v48;
  *v48 = v1;
  v48[1] = sub_100076998;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v1 + 160), 0, 0, *(_QWORD *)(v1 + 168), v1 + 72);
}

uint64_t sub_100076998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 288));
  if (v0)
    v2 = sub_10007BE94;
  else
    v2 = sub_1000769FC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000769FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(unint64_t **)(v0 + 160);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 256);
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v9, *(_QWORD *)(v0 + 168));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v2);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(unint64_t **)(v0 + 136);
  v14 = *v2;
  sub_10000DB44((uint64_t)v2 + *(int *)(v1 + 48), v12, type metadata accessor for WidgetMusicItem);
  v15 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
  v16 = *v13;
  result = swift_isUniquelyReferenced_nonNull_native(*v13);
  *v13 = v16;
  if ((result & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = *(uint64_t **)(v0 + 136);
  result = sub_1000797DC(v16);
  v16 = result;
  *v18 = result;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v14 < *(_QWORD *)(v16 + 16))
  {
    sub_10007B328(*(_QWORD *)(v0 + 152), v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 144) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 144) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 144) + 72) * v14, &qword_100548310);
    v17 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 296) = v17;
    *v17 = v0;
    v17[1] = sub_100076BF4;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 160), 0, 0, *(_QWORD *)(v0 + 168), v0 + 72);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100076BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 296));
  if (v0)
    v2 = sub_10007BE94;
  else
    v2 = sub_1000769FC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100076C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  v7 = sub_10000B4C8(&qword_10054A650);
  v6[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[18] = v8;
  v6[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547B70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[20] = swift_task_alloc(v9);
  v6[21] = swift_task_alloc(v9);
  return swift_task_switch(sub_100076CF8, 0, 0);
}

uint64_t sub_100076CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0 + 72;
  v2 = *(_QWORD *)(v0 + 104);
  v42 = *(_QWORD *)(v2 + 16);
  if (v42)
  {
    v36 = v0 + 72;
    v37 = (_QWORD *)(v0 + 16);
    v40 = v2 + 32;
    v41 = v0 + 48;
    v3 = type metadata accessor for TaskPriority(0);
    v4 = *(_QWORD *)(v3 - 8);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
    v39 = v0;
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 160);
      v9 = *(_QWORD *)(v0 + 168);
      v11 = *(_QWORD *)(v0 + 112);
      v10 = *(_QWORD *)(v0 + 120);
      v12 = v4;
      v13 = *(_BYTE *)(v40 + v5);
      v38(v9, 1, 1, v3);
      v14 = swift_allocObject(&unk_1004FA900, 57, 7);
      *(_QWORD *)(v14 + 16) = 0;
      v15 = (uint64_t *)(v14 + 16);
      *(_QWORD *)(v14 + 24) = 0;
      *(_QWORD *)(v14 + 32) = v5;
      *(_QWORD *)(v14 + 40) = v11;
      *(_QWORD *)(v14 + 48) = v10;
      *(_BYTE *)(v14 + 56) = v13;
      v4 = v12;
      v0 = v39;
      sub_100011370(v9, v8, &qword_100547B70);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3);
      v16 = swift_retain(v10);
      v17 = *(_QWORD *)(v39 + 160);
      if ((_DWORD)v8 == 1)
      {
        sub_100011694(*(_QWORD *)(v39 + 160), &qword_100547B70);
        v18 = 0;
        v19 = *v15;
        if (!*v15)
          goto LABEL_8;
      }
      else
      {
        v25 = TaskPriority.rawValue.getter(v16);
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v3);
        v18 = v25;
        v19 = *v15;
        if (!*v15)
        {
LABEL_8:
          v22 = 0;
          v24 = 0;
          goto LABEL_9;
        }
      }
      v20 = *(_QWORD *)(v14 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v19);
      v22 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v20);
      v24 = v23;
      swift_unknownObjectRelease(v19);
LABEL_9:
      v26 = **(_QWORD **)(v39 + 96);
      sub_10000B4C8(&qword_10054A638);
      v27 = (_QWORD *)(v24 | v22);
      if (v24 | v22)
      {
        v27 = v37;
        *v37 = 0;
        v37[1] = 0;
        *(_QWORD *)(v39 + 32) = v22;
        *(_QWORD *)(v39 + 40) = v24;
      }
      ++v5;
      v6 = *(_QWORD *)(v39 + 168);
      *(_QWORD *)(v39 + 48) = 1;
      *(_QWORD *)(v39 + 56) = v27;
      *(_QWORD *)(v39 + 64) = v26;
      v7 = swift_task_create(v18 | 0x3100, v41);
      swift_release(v7);
      sub_100011694(v6, &qword_100547B70);
      if (v42 == v5)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v39 + 104));
        v1 = v36;
        break;
      }
    }
  }
  v28 = *(_QWORD **)(v0 + 128);
  v29 = **(_QWORD **)(v0 + 96);
  v30 = sub_10000B4C8(&qword_10054A638);
  v31 = sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.makeAsyncIterator()(v29, v30, v31, &protocol self-conformance witness table for Error);
  v32 = (_QWORD *)*v28;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v28);
  *v28 = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v32 = sub_100079810(v32);
  **(_QWORD **)(v0 + 128) = v32;
  v34 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 176) = v34;
  *v34 = v0;
  v34[1] = sub_100076FF4;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1, 0, 0, *(_QWORD *)(v0 + 136), v0 + 88);
}

uint64_t sub_100076FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 176));
  if (v0)
    v2 = sub_100077174;
  else
    v2 = sub_100077058;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100077058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  if ((*(_BYTE *)(v0 + 80) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 160);
    v2 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v3, *(_QWORD *)(v0 + 136));
    swift_task_dealloc(v2);
    swift_task_dealloc(v1);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD **)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = (_QWORD *)*v5;
  result = swift_isUniquelyReferenced_nonNull_native(*v5);
  *v5 = v7;
  if ((result & 1) != 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  result = (uint64_t)sub_100079810(v7);
  v7 = (_QWORD *)result;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v6 < v7[2])
  {
    v8 = *(_QWORD **)(v0 + 128);
    *((_BYTE *)v7 + v6 + 32) = 0;
    *v8 = v7;
    v9 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 184) = v9;
    *v9 = v0;
    v9[1] = sub_1000771D8;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 136), v0 + 88);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100077174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v3, *(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000771D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 184));
  if (v0)
    v2 = sub_100077174;
  else
    v2 = sub_100077058;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10007723C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v8[16] = a8;
  v8[17] = v21;
  v8[14] = a6;
  v8[15] = a7;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v9 = *(_QWORD *)(sub_10000B4C8(&qword_100548310) - 8);
  v8[18] = v9;
  v8[19] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_10054A468);
  v8[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_10054A470);
  v8[21] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[22] = v12;
  v8[23] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = ((uint64_t (*)(_QWORD))type metadata accessor for MusicPersonalRecommendation.Item)(0);
  v8[24] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[25] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[26] = v15;
  v8[27] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547B70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[28] = swift_task_alloc(v16);
  v8[29] = swift_task_alloc(v16);
  v17 = sub_10000B4C8(&qword_10054A478);
  v8[30] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[31] = v18;
  v8[32] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054A480) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v19);
  v8[34] = swift_task_alloc(v19);
  return swift_task_switch(sub_1000773BC, 0, 0);
}

uint64_t sub_1000773BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = *(_QWORD *)(v1 + 240);
  v2 = *(_QWORD *)(v1 + 248);
  v4 = *(_QWORD *)(v1 + 200);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112) >> 1;
  swift_unknownObjectRetain(*(_QWORD *)(v1 + 88));
  v54 = 0;
  v52 = v3;
  v53 = v2;
  v50 = v6;
  v51 = v4;
  while (1)
  {
    if (v5 == v6)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 264), 1, 1, *(_QWORD *)(v1 + 240));
      v59 = v6;
    }
    else
    {
      if (v5 >= v6 || v5 < *(_QWORD *)(v1 + 104))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v0 = *(_QWORD *)(v1 + 256) + *(int *)(v3 + 48);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 16))(v0, *(_QWORD *)(v1 + 96) + *(_QWORD *)(v4 + 72) * v5, *(_QWORD *)(v1 + 192));
      if (__OFADD__(v54, 1))
        goto LABEL_21;
      v8 = v5;
      v9 = *(_QWORD **)(v1 + 264);
      v10 = *(_QWORD *)(v1 + 240);
      v11 = *(_QWORD *)(v1 + 192);
      v59 = v8 + 1;
      v12 = (char *)v9 + *(int *)(v3 + 48);
      *v9 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v12, v0, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v9, 0, 1, v10);
      ++v54;
    }
    v13 = *(_QWORD *)(v1 + 272);
    v14 = *(_QWORD *)(v1 + 240);
    sub_100011530(*(_QWORD *)(v1 + 264), v13, &qword_10054A480);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v14) == 1)
      break;
    v15 = *(uint64_t **)(v1 + 272);
    v16 = *(_QWORD *)(v1 + 232);
    v17 = v4;
    v18 = *(_QWORD *)(v1 + 208);
    v19 = *(char **)(v1 + 216);
    v20 = *(_QWORD *)(v1 + 192);
    v21 = *(_QWORD *)(v1 + 128);
    v57 = *(_QWORD *)(v1 + 120);
    v58 = *(_QWORD *)(v1 + 224);
    v55 = v16;
    v56 = *v15;
    v22 = (char *)v15 + *(int *)(v3 + 48);
    v23 = type metadata accessor for TaskPriority(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v16, 1, 1, v23);
    v25 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
    v25((uint64_t)v19, v22, v20);
    v26 = *(unsigned __int8 *)(v17 + 80);
    v27 = (v26 + 56) & ~v26;
    v28 = (_QWORD *)swift_allocObject(&unk_1004FA860, v27 + v18, v26 | 7);
    v28[2] = 0;
    v29 = v28 + 2;
    v28[3] = 0;
    v28[4] = v56;
    v28[5] = v57;
    v28[6] = v21;
    v25((uint64_t)v28 + v27, v19, v20);
    sub_100011370(v55, v58, &qword_100547B70);
    LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v58, 1, v23);
    v30 = swift_retain(v21);
    v31 = *(_QWORD *)(v1 + 224);
    if ((_DWORD)v20 == 1)
    {
      sub_100011694(*(_QWORD *)(v1 + 224), &qword_100547B70);
      v32 = 0;
    }
    else
    {
      v33 = TaskPriority.rawValue.getter(v30);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
      v32 = v33;
    }
    v34 = *v29;
    v6 = v50;
    if (*v29)
    {
      v35 = v28[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v34);
      v37 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v35);
      v39 = v38;
      swift_unknownObjectRelease(v34);
    }
    else
    {
      v37 = 0;
      v39 = 0;
    }
    v4 = v51;
    v40 = **(_QWORD **)(v1 + 80);
    sub_10000B4C8(&qword_10054A450);
    v41 = v39 | v37;
    if (v39 | v37)
    {
      v41 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v37;
      *(_QWORD *)(v1 + 40) = v39;
    }
    v5 = v59;
    v0 = *(_QWORD *)(v1 + 232);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v41;
    *(_QWORD *)(v1 + 64) = v40;
    v7 = swift_task_create(v32 | 0x3100, v1 + 48);
    swift_release(v7);
    sub_100011694(v0, &qword_100547B70);
    v3 = v52;
    v2 = v53;
  }
  v42 = *(uint64_t **)(v1 + 136);
  v43 = *(uint64_t **)(v1 + 80);
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 88));
  v44 = *v43;
  v45 = sub_10000B4C8(&qword_10054A450);
  *(_QWORD *)(v1 + 280) = v45;
  v46 = sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.makeAsyncIterator()(v44, v45, v46, &protocol self-conformance witness table for Error);
  v0 = *v42;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
  *v42 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_19;
LABEL_22:
  v0 = sub_1000797DC(v0);
LABEL_19:
  **(_QWORD **)(v1 + 136) = v0;
  v48 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 288) = v48;
  *v48 = v1;
  v48[1] = sub_1000777E4;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v1 + 160), 0, 0, *(_QWORD *)(v1 + 168), v1 + 72);
}

uint64_t sub_1000777E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 288));
  if (v0)
    v2 = sub_100077A40;
  else
    v2 = sub_100077848;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100077848()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(unint64_t **)(v0 + 160);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 256);
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v9, *(_QWORD *)(v0 + 168));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v2);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(unint64_t **)(v0 + 136);
  v14 = *v2;
  sub_10000DB44((uint64_t)v2 + *(int *)(v1 + 48), v12, type metadata accessor for WidgetMusicItem);
  v15 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
  v16 = *v13;
  result = swift_isUniquelyReferenced_nonNull_native(*v13);
  *v13 = v16;
  if ((result & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = *(uint64_t **)(v0 + 136);
  result = sub_1000797DC(v16);
  v16 = result;
  *v18 = result;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v14 < *(_QWORD *)(v16 + 16))
  {
    sub_10007B328(*(_QWORD *)(v0 + 152), v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 144) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 144) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 144) + 72) * v14, &qword_100548310);
    v17 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 296) = v17;
    *v17 = v0;
    v17[1] = sub_100077B04;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 160), 0, 0, *(_QWORD *)(v0 + 168), v0 + 72);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100077A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v7, *(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100077B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 296));
  if (v0)
    v2 = sub_100077A40;
  else
    v2 = sub_100077848;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100077B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6[18] = a5;
  v6[19] = a6;
  v6[16] = a3;
  v6[17] = a4;
  v6[15] = a2;
  v7 = *(_QWORD *)(sub_10000B4C8(&qword_100548310) - 8);
  v6[20] = v7;
  v6[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10054A468);
  v6[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10054A470);
  v6[23] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[24] = v10;
  v6[25] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547B70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[26] = swift_task_alloc(v11);
  v6[27] = swift_task_alloc(v11);
  v12 = sub_10000B4C8(&qword_10054A578);
  v6[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[29] = v13;
  v6[30] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RecentlyPlayedMusicItem(0);
  v6[31] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[32] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v6[33] = v16;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[34] = swift_task_alloc(v17);
  v6[35] = swift_task_alloc(v17);
  v6[36] = swift_task_alloc(v17);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054A580) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[37] = swift_task_alloc(v18);
  v6[38] = swift_task_alloc(v18);
  v19 = sub_10000B4C8(&qword_100549DB0);
  v6[39] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v6[40] = v20;
  v6[41] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000B4C8(&qword_10054A588);
  v6[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000B4C8(&qword_10054A590);
  v6[43] = v22;
  v6[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100077D74, 0, 0);
}

uint64_t sub_100077D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD);
  void (*v22)(uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v63;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t i;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v69 = v0 + 16;
  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v80 = *(_QWORD *)(v0 + 256);
  v72 = *(_QWORD *)(v0 + 232);
  v73 = *(_QWORD *)(v0 + 224);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v66(v4, *(_QWORD *)(v0 + 128), v5);
  v67 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v4, v5);
  v7 = sub_100012324(&qword_10054A598, &qword_100549DB0, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v5, v7);
  v65 = *(int *)(v1 + 36);
  *(_QWORD *)(v2 + v65) = 0;
  v68 = v2;
  v8 = (_QWORD *)(v2 + *(int *)(sub_10000B4C8(&qword_10054A5A0) + 36));
  v9 = sub_100012324(&qword_10054A560, &qword_100549DB0, (const char *)&protocol conformance descriptor for MusicItemCollection<A>);
  v71 = v8;
  for (i = v9; ; v9 = i)
  {
    v12 = v8;
    v13 = *v8;
    dispatch thunk of Collection.endIndex.getter(*(_QWORD *)(v0 + 312), v9);
    if (v13 == *(_QWORD *)(v0 + 104))
    {
      v14 = v72;
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v72 + 56))(*(_QWORD *)(v0 + 296), 1, 1, *(_QWORD *)(v0 + 224));
      v15 = v73;
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 352);
      v17 = *(_QWORD *)(v0 + 328);
      v18 = *(_QWORD *)(v0 + 312);
      v19 = *(_QWORD *)(v0 + 280);
      v20 = *(_QWORD *)(v0 + 248);
      v76 = *(_QWORD *)(v0 + 288);
      v78 = *(_QWORD *)(v0 + 240);
      v21 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v69, v12, v18, v9);
      (*(void (**)(uint64_t))(v80 + 16))(v19);
      v21(v69, 0);
      v66(v17, v16, v18);
      dispatch thunk of Collection.formIndex(after:)(v12, v18, v9);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v17, v18);
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32);
      v22(v76, v19, v20);
      v23 = v78 + *(int *)(v73 + 48);
      v24 = *(_QWORD *)(v68 + v65);
      v22(v23, v76, v20);
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_18;
      }
      v25 = *(_QWORD **)(v0 + 296);
      v26 = *(_QWORD *)(v0 + 248);
      v27 = *(_QWORD *)(v0 + 224);
      *(_QWORD *)(v68 + v65) = v24 + 1;
      v28 = (char *)v25 + *(int *)(v73 + 48);
      *v25 = v24;
      v22((uint64_t)v28, v23, v26);
      v14 = v72;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v25, 0, 1, v27);
      v15 = v73;
    }
    v29 = *(_QWORD *)(v0 + 304);
    v30 = *(_QWORD *)(v0 + 224);
    sub_100011530(*(_QWORD *)(v0 + 296), v29, &qword_10054A580);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v29, 1, v30) == 1)
      break;
    v31 = *(uint64_t **)(v0 + 304);
    v32 = *(_QWORD *)(v0 + 264);
    v33 = *(char **)(v0 + 272);
    v34 = *(_QWORD *)(v0 + 248);
    v35 = *(_QWORD *)(v0 + 216);
    v74 = v35;
    v36 = *(_QWORD *)(v0 + 144);
    v77 = *(_QWORD *)(v0 + 136);
    v79 = *(_QWORD *)(v0 + 208);
    v75 = *v31;
    v37 = (char *)v31 + *(int *)(v15 + 48);
    v38 = type metadata accessor for TaskPriority(0);
    v39 = *(_QWORD *)(v38 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v35, 1, 1, v38);
    v40 = *(void (**)(uint64_t, char *, uint64_t))(v80 + 32);
    v40((uint64_t)v33, v37, v34);
    v41 = *(unsigned __int8 *)(v80 + 80);
    v42 = (v41 + 56) & ~v41;
    v43 = (_QWORD *)swift_allocObject(&unk_1004FA8B0, v42 + v32, v41 | 7);
    v43[2] = 0;
    v44 = v43 + 2;
    v43[3] = 0;
    v43[4] = v75;
    v43[5] = v77;
    v43[6] = v36;
    v40((uint64_t)v43 + v42, v33, v34);
    sub_100011370(v74, v79, &qword_100547B70);
    LODWORD(v42) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v79, 1, v38);
    v45 = swift_retain(v36);
    v46 = *(_QWORD *)(v0 + 208);
    if ((_DWORD)v42 == 1)
    {
      sub_100011694(*(_QWORD *)(v0 + 208), &qword_100547B70);
      v47 = 0;
      v48 = *v44;
      if (*v44)
        goto LABEL_10;
    }
    else
    {
      v54 = TaskPriority.rawValue.getter(v45);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v38);
      v47 = v54;
      v48 = *v44;
      if (*v44)
      {
LABEL_10:
        v49 = v43[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v48);
        v51 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v49);
        v53 = v52;
        swift_unknownObjectRelease(v48);
        goto LABEL_13;
      }
    }
    v51 = 0;
    v53 = 0;
LABEL_13:
    v55 = **(_QWORD **)(v0 + 120);
    sub_10000B4C8(&qword_10054A450);
    v56 = v53 | v51;
    if (v53 | v51)
    {
      v56 = v0 + 48;
      *(_QWORD *)(v0 + 48) = 0;
      *(_QWORD *)(v0 + 56) = 0;
      *(_QWORD *)(v0 + 64) = v51;
      *(_QWORD *)(v0 + 72) = v53;
    }
    v8 = v71;
    v10 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v0 + 80) = 1;
    *(_QWORD *)(v0 + 88) = v56;
    *(_QWORD *)(v0 + 96) = v55;
    v11 = swift_task_create(v47 | 0x3100, v0 + 80);
    swift_release(v11);
    sub_100011694(v10, &qword_100547B70);
  }
  v57 = *(unint64_t **)(v0 + 152);
  v58 = *(uint64_t **)(v0 + 120);
  sub_100011694(*(_QWORD *)(v0 + 352), &qword_10054A590);
  v59 = *v58;
  v60 = sub_10000B4C8(&qword_10054A450);
  *(_QWORD *)(v0 + 360) = v60;
  v61 = sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.makeAsyncIterator()(v59, v60, v61, &protocol self-conformance witness table for Error);
  v23 = *v57;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
  *v57 = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_16;
LABEL_18:
  v23 = sub_1000797DC(v23);
LABEL_16:
  **(_QWORD **)(v0 + 152) = v23;
  v63 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 368) = v63;
  *v63 = v0;
  v63[1] = sub_10007830C;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 176), 0, 0, *(_QWORD *)(v0 + 184), v0 + 112);
}

uint64_t sub_10007830C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 368));
  if (v0)
    v2 = sub_1000785A8;
  else
    v2 = sub_100078370;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100078370()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(unint64_t **)(v0 + 176);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 352);
    v5 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 336);
    v7 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 304);
    v9 = *(_QWORD *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 288);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 200);
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 208);
    v23 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v10, *(_QWORD *)(v0 + 184));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v10);
    swift_task_dealloc(v2);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 168);
  v13 = *(unint64_t **)(v0 + 152);
  v14 = *v2;
  sub_10000DB44((uint64_t)v2 + *(int *)(v1 + 48), v12, type metadata accessor for WidgetMusicItem);
  v15 = type metadata accessor for WidgetMusicItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
  v16 = *v13;
  result = swift_isUniquelyReferenced_nonNull_native(*v13);
  *v13 = v16;
  if ((result & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = *(uint64_t **)(v0 + 152);
  result = sub_1000797DC(v16);
  v16 = result;
  *v18 = result;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v14 < *(_QWORD *)(v16 + 16))
  {
    sub_10007B328(*(_QWORD *)(v0 + 168), v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 160) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 160) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 160) + 72) * v14, &qword_100548310);
    v17 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 376) = v17;
    *v17 = v0;
    v17[1] = sub_1000786B0;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 176), 0, 0, *(_QWORD *)(v0 + 184), v0 + 112);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000785A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v9, *(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v9);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000786B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 376));
  if (v0)
    v2 = sub_1000785A8;
  else
    v2 = sub_100078370;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100078714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[10] = a2;
  v7 = *(_QWORD *)(sub_10000B4C8(&qword_10054A6A0) - 8);
  v6[15] = v7;
  v6[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_10054A6D0);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10054A6D8);
  v6[18] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[19] = v10;
  v6[20] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547B70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[21] = swift_task_alloc(v11);
  v6[22] = swift_task_alloc(v11);
  return swift_task_switch(sub_100078800, 0, 0);
}

uint64_t sub_100078800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  _QWORD *v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 88);
  v40 = *(_QWORD *)(v1 + 16);
  if (v40)
  {
    v35 = (_QWORD *)(v0 + 16);
    v38 = v1 + 32;
    v39 = v0 + 48;
    v2 = type metadata accessor for TaskPriority(0);
    v3 = *(_QWORD *)(v2 - 8);
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
    v37 = v0;
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 168);
      v7 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 96);
      v10 = *(_QWORD *)(v0 + 104);
      v11 = v3;
      v12 = *(_BYTE *)(v38 + v4);
      v36(v7, 1, 1, v2);
      v13 = swift_allocObject(&unk_1004FA928, 57, 7);
      *(_QWORD *)(v13 + 16) = 0;
      v14 = (uint64_t *)(v13 + 16);
      *(_QWORD *)(v13 + 24) = 0;
      *(_QWORD *)(v13 + 32) = v4;
      *(_QWORD *)(v13 + 40) = v9;
      *(_QWORD *)(v13 + 48) = v10;
      *(_BYTE *)(v13 + 56) = v12;
      v3 = v11;
      v0 = v37;
      sub_100011370(v7, v8, &qword_100547B70);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
      v15 = swift_retain(v10);
      v16 = *(_QWORD *)(v37 + 168);
      if ((_DWORD)v8 == 1)
      {
        sub_100011694(*(_QWORD *)(v37 + 168), &qword_100547B70);
        v17 = 0;
        v18 = *v14;
        if (!*v14)
          goto LABEL_8;
      }
      else
      {
        v24 = TaskPriority.rawValue.getter(v15);
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v2);
        v17 = v24;
        v18 = *v14;
        if (!*v14)
        {
LABEL_8:
          v21 = 0;
          v23 = 0;
          goto LABEL_9;
        }
      }
      v19 = *(_QWORD *)(v13 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v18);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v19);
      v23 = v22;
      swift_unknownObjectRelease(v18);
LABEL_9:
      v25 = **(_QWORD **)(v37 + 80);
      sub_10000B4C8(&qword_10054A6B8);
      v26 = (_QWORD *)(v23 | v21);
      if (v23 | v21)
      {
        v26 = v35;
        *v35 = 0;
        v35[1] = 0;
        *(_QWORD *)(v37 + 32) = v21;
        *(_QWORD *)(v37 + 40) = v23;
      }
      ++v4;
      v5 = *(_QWORD *)(v37 + 176);
      *(_QWORD *)(v37 + 48) = 1;
      *(_QWORD *)(v37 + 56) = v26;
      *(_QWORD *)(v37 + 64) = v25;
      v6 = swift_task_create(v17 | 0x3100, v39);
      swift_release(v6);
      sub_100011694(v5, &qword_100547B70);
      if (v40 == v4)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v37 + 88));
        break;
      }
    }
  }
  v27 = *(unint64_t **)(v0 + 112);
  v28 = **(_QWORD **)(v0 + 80);
  v29 = sub_10000B4C8(&qword_10054A6B8);
  *(_QWORD *)(v0 + 184) = v29;
  v30 = sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.makeAsyncIterator()(v28, v29, v30, &protocol self-conformance witness table for Error);
  v31 = *v27;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v27);
  *v27 = v31;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v31 = sub_100079824(v31);
  **(_QWORD **)(v0 + 112) = v31;
  v33 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 192) = v33;
  *v33 = v0;
  v33[1] = sub_100078AF4;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 136), 0, 0, *(_QWORD *)(v0 + 144), v0 + 72);
}

uint64_t sub_100078AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 192));
  if (v0)
    v2 = sub_100078D10;
  else
    v2 = sub_100078B58;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100078B58()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t *v14;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(unint64_t **)(v0 + 136);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v5, *(_QWORD *)(v0 + 144));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v2);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(unint64_t **)(v0 + 112);
  v10 = *v2;
  sub_100011530((uint64_t)v2 + *(int *)(v1 + 48), v8, &qword_100549EE0);
  v11 = sub_10000B4C8(&qword_100549EE0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  v12 = *v9;
  result = swift_isUniquelyReferenced_nonNull_native(*v9);
  *v9 = v12;
  if ((result & 1) != 0)
  {
    if ((v10 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v14 = *(uint64_t **)(v0 + 112);
  result = sub_100079824(v12);
  v12 = result;
  *v14 = result;
  if ((v10 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v10 < *(_QWORD *)(v12 + 16))
  {
    sub_10007B328(*(_QWORD *)(v0 + 128), v12+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 120) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 120) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 120) + 72) * v10, &qword_10054A6A0);
    v13 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 200) = v13;
    *v13 = v0;
    v13[1] = sub_100078D90;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 136), 0, 0, *(_QWORD *)(v0 + 144), v0 + 72);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100078D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v3, *(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100078D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 200));
  if (v0)
    v2 = sub_100078D10;
  else
    v2 = sub_100078B58;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100078DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v8[18] = a8;
  v8[19] = v19;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a2;
  v8[13] = a3;
  v9 = sub_10000B4C8(&qword_10054A508);
  v8[20] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[21] = v10;
  v8[22] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SocialProfile(0);
  v8[23] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[24] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v8[25] = v13;
  v8[26] = swift_task_alloc((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_100547B70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[27] = swift_task_alloc(v14);
  v8[28] = swift_task_alloc(v14);
  v15 = sub_10000B4C8(&qword_10054A510);
  v8[29] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v8[30] = v16;
  v8[31] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (*(_QWORD *)(*(_QWORD *)(sub_10000B4C8(&qword_10054A518) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[32] = swift_task_alloc(v17);
  v8[33] = swift_task_alloc(v17);
  return swift_task_switch(sub_100078F28, 0, 0);
}

uint64_t sub_100078F28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v48;
  char v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = *(_QWORD *)(v1 + 232);
  v2 = *(_QWORD *)(v1 + 240);
  v4 = *(_QWORD *)(v1 + 192);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128) >> 1;
  swift_unknownObjectRetain(*(_QWORD *)(v1 + 104));
  v56 = 0;
  v54 = v3;
  v55 = v2;
  v52 = v6;
  v53 = v4;
  while (1)
  {
    if (v5 == v6)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 256), 1, 1, *(_QWORD *)(v1 + 232));
      v8 = v6;
    }
    else
    {
      if (v5 >= v6 || v5 < *(_QWORD *)(v1 + 120))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v0 = (_QWORD *)(*(_QWORD *)(v1 + 248) + *(int *)(v3 + 48));
      (*(void (**)(_QWORD *, uint64_t, _QWORD))(v4 + 16))(v0, *(_QWORD *)(v1 + 112) + *(_QWORD *)(v4 + 72) * v5, *(_QWORD *)(v1 + 184));
      if (__OFADD__(v56, 1))
        goto LABEL_23;
      v9 = *(_QWORD **)(v1 + 256);
      v10 = *(_QWORD *)(v1 + 232);
      v11 = *(_QWORD *)(v1 + 184);
      v8 = v5 + 1;
      v12 = (char *)v9 + *(int *)(v3 + 48);
      *v9 = v56;
      (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 32))(v12, v0, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v9, 0, 1, v10);
      ++v56;
    }
    v13 = *(_QWORD *)(v1 + 264);
    v14 = *(_QWORD *)(v1 + 232);
    sub_100011530(*(_QWORD *)(v1 + 256), v13, &qword_10054A518);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v14) == 1)
      break;
    v61 = v8;
    v15 = *(uint64_t **)(v1 + 264);
    v16 = *(_QWORD *)(v1 + 224);
    v17 = v4;
    v18 = *(_QWORD *)(v1 + 200);
    v19 = *(char **)(v1 + 208);
    v20 = *(_QWORD *)(v1 + 184);
    v21 = *(_QWORD *)(v1 + 144);
    v59 = *(_QWORD *)(v1 + 136);
    v60 = *(_QWORD *)(v1 + 216);
    v57 = v16;
    v58 = *v15;
    v22 = (char *)v15 + *(int *)(v3 + 48);
    v23 = type metadata accessor for TaskPriority(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v16, 1, 1, v23);
    v25 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
    v25((uint64_t)v19, v22, v20);
    v26 = *(unsigned __int8 *)(v17 + 80);
    v27 = (v26 + 56) & ~v26;
    v28 = (_QWORD *)swift_allocObject(&unk_1004FA888, v27 + v18, v26 | 7);
    v28[2] = 0;
    v29 = v28 + 2;
    v28[3] = 0;
    v28[4] = v58;
    v28[5] = v59;
    v28[6] = v21;
    v25((uint64_t)v28 + v27, v19, v20);
    sub_100011370(v57, v60, &qword_100547B70);
    LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v60, 1, v23);
    v30 = swift_retain(v21);
    v31 = *(_QWORD *)(v1 + 216);
    if ((_DWORD)v20 == 1)
    {
      sub_100011694(*(_QWORD *)(v1 + 216), &qword_100547B70);
      v32 = 0;
    }
    else
    {
      v33 = TaskPriority.rawValue.getter(v30);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
      v32 = v33;
    }
    v34 = *v29;
    v6 = v52;
    if (*v29)
    {
      v35 = v28[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v34);
      v37 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v35);
      v39 = v38;
      swift_unknownObjectRelease(v34);
    }
    else
    {
      v37 = 0;
      v39 = 0;
    }
    v4 = v53;
    v40 = **(_QWORD **)(v1 + 96);
    sub_10000B4C8(&qword_10054A4F0);
    v41 = v39 | v37;
    if (v39 | v37)
    {
      v41 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v37;
      *(_QWORD *)(v1 + 40) = v39;
    }
    v0 = *(_QWORD **)(v1 + 224);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v41;
    *(_QWORD *)(v1 + 64) = v40;
    v7 = swift_task_create(v32 | 0x3100, v1 + 48);
    swift_release(v7);
    sub_100011694((uint64_t)v0, &qword_100547B70);
    v3 = v54;
    v2 = v55;
    v5 = v61;
  }
  v42 = *(_QWORD **)(v1 + 152);
  v43 = *(uint64_t **)(v1 + 96);
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 104));
  v44 = *v43;
  v45 = sub_10000B4C8(&qword_10054A4F0);
  v46 = sub_10000B4C8(&qword_100549268);
  ThrowingTaskGroup.makeAsyncIterator()(v44, v45, v46, &protocol self-conformance witness table for Error);
  v0 = (_QWORD *)*v42;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
  *v42 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_19;
LABEL_24:
  v0 = sub_100079858(v0);
LABEL_19:
  v48 = *(_QWORD **)(v1 + 152);
  v49 = swift_isUniquelyReferenced_nonNull_native(v0);
  *v48 = v0;
  if ((v49 & 1) == 0)
    v0 = sub_100079858(v0);
  **(_QWORD **)(v1 + 152) = v0;
  v50 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 272) = v50;
  *v50 = v1;
  v50[1] = sub_100079370;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, *(_QWORD *)(v1 + 160), v1 + 88);
}

uint64_t sub_100079370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 272));
  if (v0)
    v2 = sub_100079540;
  else
    v2 = sub_1000793D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000793D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t *v15;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 256);
    v3 = *(_QWORD *)(v0 + 264);
    v4 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(v8, *(_QWORD *)(v0 + 160));
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD **)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = (_QWORD *)*v10;
  result = swift_isUniquelyReferenced_nonNull_native(*v10);
  *v10 = v12;
  if ((result & 1) != 0)
  {
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = *(uint64_t **)(v0 + 152);
  result = (uint64_t)sub_100079858(v12);
  v12 = (_QWORD *)result;
  *v15 = result;
  if ((v11 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v11 < v12[2])
  {
    v13 = &v12[v11];
    sub_100017318((id)v13[4]);
    v13[4] = v1;
    v14 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 280) = v14;
    *v14 = v0;
    v14[1] = sub_1000795E0;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 160), v0 + 88);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100079540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(v7, *(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000795E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 280));
  if (v0)
    v2 = sub_100079540;
  else
    v2 = sub_1000793D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100079644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch(sub_100079664, 0, 0);
}

uint64_t sub_100079664()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = (char *)v3 + *(int *)(sub_10000B4C8(&qword_10054A450) + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc(v1[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_10007BE8C;
  return ((uint64_t (*)(char *, _QWORD))v7)(v4, v0[6]);
}

uint64_t sub_1000796EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch(sub_10007970C, 0, 0);
}

uint64_t sub_10007970C()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = (char *)v3 + *(int *)(sub_10000B4C8(&qword_10054A450) + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc(v1[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_100079794;
  return ((uint64_t (*)(char *, _QWORD))v7)(v4, v0[6]);
}

uint64_t sub_100079794()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000797DC(unint64_t a1)
{
  return sub_100075630(0, *(_QWORD *)(a1 + 16), 0, a1, &qword_10054A498, &qword_100548310);
}

_QWORD *sub_100079810(_QWORD *a1)
{
  return sub_1000751B8(0, a1[2], 0, a1);
}

uint64_t sub_100079824(unint64_t a1)
{
  return sub_100075630(0, *(_QWORD *)(a1 + 16), 0, a1, &qword_10054A6F0, &qword_10054A6A0);
}

_QWORD *sub_100079858(_QWORD *a1)
{
  return sub_100075850(0, a1[2], 0, a1);
}

void sub_10007986C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;

  v2 = (char *)&dword_10054A5D8 + dword_10054A5D8;
  v1 = (_QWORD *)swift_task_alloc(unk_10054A5DC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100012D1C;
  __asm { BR              X8 }
}

uint64_t sub_100079928(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *a3;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A640
                                                                                     + dword_10054A640);
  v13 = (_QWORD *)swift_task_alloc(unk_10054A644);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_100012D1C;
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_1000799C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a4;
  *(_BYTE *)(v7 + 48) = *a7;
  v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc(a5[1]);
  *(_QWORD *)(v7 + 32) = v8;
  *v8 = v7;
  v8[1] = sub_100079A34;
  return v10();
}

uint64_t sub_100079A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100079AAC;
  else
    v3 = sub_100079A98;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100079A98()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100079AAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100079AB8()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;

  v2 = (char *)&dword_10054A458 + dword_10054A458;
  v1 = (_QWORD *)swift_task_alloc(unk_10054A45C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100012D1C;
  __asm { BR              X8 }
}

uint64_t sub_100079B74(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *a3;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A6C0
                                                                                     + dword_10054A6C0);
  v13 = (_QWORD *)swift_task_alloc(unk_10054A6C4);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_10000DC64;
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_100079C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 32) = a5;
  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a4;
  *(_BYTE *)(v7 + 64) = *a7;
  return swift_task_switch(sub_100079C38, 0, 0);
}

uint64_t sub_100079C38()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = (char *)v3 + *(int *)(sub_10000B4C8(&qword_10054A6B8) + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc(v1[1]);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_100079CCC;
  return ((uint64_t (*)(char *, _QWORD *))v7)(v4, v0 + 8);
}

uint64_t sub_100079CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100079D3C;
  else
    v3 = sub_100079D30;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100079D30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100079D3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100079D48()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;

  v2 = (char *)&dword_10054A4F8 + dword_10054A4F8;
  v1 = (_QWORD *)swift_task_alloc(unk_10054A4FC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100012D1C;
  __asm { BR              X8 }
}

uint64_t sub_100079E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  int *v11;

  v7[3] = a1;
  v7[4] = a4;
  v11 = (int *)((char *)a5 + *a5);
  v9 = (_QWORD *)swift_task_alloc(a5[1]);
  v7[5] = v9;
  *v9 = v7;
  v9[1] = sub_100079E7C;
  return ((uint64_t (*)(_QWORD *, uint64_t))v11)(v7 + 2, a7);
}

uint64_t sub_100079E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100079EF8;
  else
    v3 = sub_100079EE0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100079EE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  *v1 = *(_QWORD *)(v0 + 32);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100079EF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100079F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = type metadata accessor for WidgetMusicRecommendation(0);
  v5 = __chkstk_darwin(v4);
  v61 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v60 = (uint64_t)&v58 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v58 - v10;
  v12 = __chkstk_darwin(v9);
  v59 = (uint64_t)&v58 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v58 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v58 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v58 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v58 - v23;
  v25 = static Date.== infix(_:_:)(a1, a2);
  sub_10000D964(a1, (uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
  sub_10000D964(a2, (uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
  if ((v25 & 1) == 0)
  {
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
LABEL_15:
    sub_10000D964(a1, (uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
    sub_10000D964(a2, (uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_16;
  }
  v58 = v4;
  v26 = *(int *)(v4 + 20);
  v27 = &v24[v26];
  v28 = *(_QWORD *)&v24[v26 + 8];
  v29 = &v22[v26];
  v30 = *((_QWORD *)v29 + 1);
  if (!v28)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
    if (!v30)
    {
LABEL_23:
      sub_10000D964(a1, (uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
      sub_10000D964(a2, (uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
      goto LABEL_24;
    }
    v33 = v30;
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
    v33 = v28;
LABEL_14:
    swift_bridgeObjectRelease(v33);
    goto LABEL_15;
  }
  if (*(_QWORD *)v27 == *(_QWORD *)v29 && v28 == v30)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease(v28);
    goto LABEL_23;
  }
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v27, v28, *(_QWORD *)v29, *((_QWORD *)v29 + 1), 0);
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v22, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
  swift_bridgeObjectRelease(v28);
  sub_10000D964(a1, (uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
  sub_10000D964(a2, (uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
  if ((v32 & 1) == 0)
  {
LABEL_16:
    sub_10000E750((uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_17;
  }
LABEL_24:
  v41 = v58;
  v42 = *(int *)(v58 + 24);
  v43 = &v19[v42];
  v44 = *(_QWORD *)&v19[v42 + 8];
  v45 = &v16[v42];
  v46 = *((_QWORD *)v45 + 1);
  if (!v44)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
    if (!v46)
    {
LABEL_36:
      v34 = v59;
      sub_10000D964(a1, v59, type metadata accessor for WidgetMusicRecommendation);
      sub_10000D964(a2, (uint64_t)v11, type metadata accessor for WidgetMusicRecommendation);
      goto LABEL_37;
    }
    swift_bridgeObjectRelease(v46);
LABEL_17:
    v34 = v59;
    sub_10000D964(a1, v59, type metadata accessor for WidgetMusicRecommendation);
    sub_10000D964(a2, (uint64_t)v11, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_18;
  }
  if (!v46)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease(v44);
    goto LABEL_17;
  }
  if (*(_QWORD *)v43 == *(_QWORD *)v45 && v44 == v46)
  {
    swift_bridgeObjectRetain();
    sub_10000E750((uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750((uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease(v44);
    goto LABEL_36;
  }
  v48 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v43, v44, *(_QWORD *)v45, *((_QWORD *)v45 + 1), 0);
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v16, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750((uint64_t)v19, type metadata accessor for WidgetMusicRecommendation);
  swift_bridgeObjectRelease(v44);
  v34 = v59;
  sub_10000D964(a1, v59, type metadata accessor for WidgetMusicRecommendation);
  sub_10000D964(a2, (uint64_t)v11, type metadata accessor for WidgetMusicRecommendation);
  if ((v48 & 1) == 0)
    goto LABEL_18;
LABEL_37:
  v49 = *(int *)(v41 + 28);
  v50 = *(unsigned __int8 *)(v34 + v49);
  v51 = v11[v49];
  if (v50 == 5)
  {
    sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750(v34, type metadata accessor for WidgetMusicRecommendation);
    if (v51 == 5)
    {
      v52 = a1;
      v36 = v60;
      sub_10000D964(v52, v60, type metadata accessor for WidgetMusicRecommendation);
      v53 = a2;
      v38 = v61;
      sub_10000D964(v53, v61, type metadata accessor for WidgetMusicRecommendation);
LABEL_42:
      v39 = sub_100066D34(*(_QWORD *)(v36 + *(int *)(v41 + 32)), *(_QWORD *)(v38 + *(int *)(v41 + 32)));
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v51 == 5)
  {
LABEL_18:
    sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicRecommendation);
    sub_10000E750(v34, type metadata accessor for WidgetMusicRecommendation);
LABEL_19:
    v35 = a1;
    v36 = v60;
    sub_10000D964(v35, v60, type metadata accessor for WidgetMusicRecommendation);
    v37 = a2;
    v38 = v61;
    sub_10000D964(v37, v61, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_20;
  }
  sub_100066B70(v50);
  v55 = v54;
  sub_10000E750((uint64_t)v11, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750(v34, type metadata accessor for WidgetMusicRecommendation);
  v56 = a1;
  v36 = v60;
  sub_10000D964(v56, v60, type metadata accessor for WidgetMusicRecommendation);
  v57 = a2;
  v38 = v61;
  sub_10000D964(v57, v61, type metadata accessor for WidgetMusicRecommendation);
  if ((v55 & 1) != 0)
    goto LABEL_42;
LABEL_20:
  v39 = 0;
LABEL_21:
  sub_10000E750(v36, type metadata accessor for WidgetMusicRecommendation);
  sub_10000E750(v38, type metadata accessor for WidgetMusicRecommendation);
  return v39 & 1;
}

uint64_t sub_10007A548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MusicPersonalRecommendation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007A5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicPersonalRecommendation(0) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc(dword_10054A42C);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000DC64;
  return sub_1000728C4(a1, a2, v7);
}

void sub_10007A628()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10054A444);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100012D1C;
  ((void (__cdecl *)())((char *)&dword_10054A440 + dword_10054A440))();
}

uint64_t sub_10007A6BC()
{
  return sub_10007ADBC((uint64_t (*)(_QWORD))&type metadata accessor for MusicPersonalRecommendation.Item);
}

uint64_t sub_10007A6C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicPersonalRecommendation.Item(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10054A48C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A488
                                                                                                + dword_10054A488))(a1, v5, v6, v7, v8, v9, v10);
}

void sub_10007A77C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10054A4E4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100012D1C;
  ((void (__cdecl *)())((char *)&dword_10054A4E0 + dword_10054A4E0))();
}

uint64_t sub_10007A810()
{
  return sub_10007ADBC((uint64_t (*)(_QWORD))&type metadata accessor for SocialProfile);
}

uint64_t sub_10007A81C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SocialProfile(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10054A524);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_10054A520
                                                                                              + dword_10054A520))(a1, v5, v6, v7, v8, v9, v10);
}

char *sub_10007A8D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10007A9B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10007AAA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_10000B4C8(&qword_10054A538);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10007ABB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100066730(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10007ABC8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_10054A56C);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A568
                                                                                       + dword_10054A568))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10007AC5C()
{
  return sub_10007ADBC((uint64_t (*)(_QWORD))&type metadata accessor for RecentlyPlayedMusicItem);
}

uint64_t sub_10007AC68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RecentlyPlayedMusicItem(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10054A5AC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A5A8
                                                                                                + dword_10054A5A8))(a1, v5, v6, v7, v8, v9, v10);
}

void sub_10007AD1C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10054A5CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100012D1C;
  ((void (__cdecl *)())((char *)&dword_10054A5C8 + dword_10054A5C8))();
}

uint64_t sub_10007ADB0()
{
  return sub_10007ADBC((uint64_t (*)(_QWORD))&type metadata accessor for Track);
}

uint64_t sub_10007ADBC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 56) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 48));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10007AE3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Track(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10054A5F4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A5F0
                                                                                                + dword_10054A5F0))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10007AEF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_10054A62C);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A628
                                                                                         + dword_10054A628))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10007AF88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(int **)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10054A65C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, _BYTE *))((char *)&dword_10054A658
                                                                                              + dword_10054A658))(a1, v4, v5, v6, v7, v8, (_BYTE *)(v1 + 56));
}

unint64_t sub_10007B024()
{
  unint64_t result;

  result = qword_10054A690;
  if (!qword_10054A690)
  {
    result = swift_getWitnessTable(&unk_1004268E4, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054A690);
  }
  return result;
}

uint64_t sub_10007B068(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_10000B4C8(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B180(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004F8DF8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_10007B1C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_10054A6AC);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10054A6A8
                                                                                         + dword_10054A6A8))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10007B260()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10007B28C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10054A6E4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100012D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *))((char *)&dword_10054A6E0
                                                                                                + dword_10054A6E0))(a1, v4, v5, v6, v7, v8, (_BYTE *)(v1 + 56));
}

uint64_t sub_10007B328(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000B4C8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

_QWORD *sub_10007B36C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v17 = *(_QWORD *)((char *)a2 + v16);
    *(_QWORD *)((char *)a1 + v16) = v17;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

uint64_t sub_10007B434(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

uint64_t sub_10007B498(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_10007B534(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v17 = a3[8];
  v18 = *(_QWORD *)(a2 + v17);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t sub_10007B604(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10007B67C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v20 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_10007B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007B72C);
}

uint64_t sub_10007B72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10007B7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007B7B4);
}

uint64_t sub_10007B7B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_10007B82C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100426A50;
    v4[2] = &unk_100426A50;
    v4[3] = &unk_100426A68;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10007B8B8()
{
  unint64_t result;

  result = qword_10054A7A8;
  if (!qword_10054A7A8)
  {
    result = swift_getWitnessTable(&unk_100426BE4, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054A7A8);
  }
  return result;
}

unint64_t sub_10007B8FC()
{
  unint64_t result;

  result = qword_10054A7B0;
  if (!qword_10054A7B0)
  {
    result = swift_getWitnessTable(&unk_10042697C, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054A7B0);
  }
  return result;
}

unint64_t sub_10007B940()
{
  unint64_t result;

  result = qword_10054A7C0;
  if (!qword_10054A7C0)
  {
    result = swift_getWitnessTable(&unk_100426954, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_10054A7C0);
  }
  return result;
}

uint64_t _s12MusicWidgets29WidgetMusicRecommendationKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10007B9D0 + 4 * byte_100426877[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10007BA04 + 4 * byte_100426872[v4]))();
}

uint64_t sub_10007BA04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10007BA0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10007BA14);
  return result;
}

uint64_t sub_10007BA20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10007BA28);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10007BA2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10007BA34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendation.CodingKeys()
{
  return &type metadata for WidgetMusicRecommendation.CodingKeys;
}

unint64_t sub_10007BA54()
{
  unint64_t result;

  result = qword_10054A7C8;
  if (!qword_10054A7C8)
  {
    result = swift_getWitnessTable(&unk_100426BBC, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054A7C8);
  }
  return result;
}

unint64_t sub_10007BA9C()
{
  unint64_t result;

  result = qword_10054A7D0;
  if (!qword_10054A7D0)
  {
    result = swift_getWitnessTable("M?\r", &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054A7D0);
  }
  return result;
}

unint64_t sub_10007BAE4()
{
  unint64_t result;

  result = qword_10054A7D8;
  if (!qword_10054A7D8)
  {
    result = swift_getWitnessTable(&unk_100426B54, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10054A7D8);
  }
  return result;
}

uint64_t sub_10007BB28(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446863746566, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x617A696C61636F6CLL && a2 == 0xEC0000006E6F6974)
  {
    v7 = 0xEC0000006E6F6974;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617A696C61636F6CLL, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    v9 = 0xE400000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684957547, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_10007BD48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10007BE60@<X0>(uint64_t *a1@<X8>)
{
  return sub_10007ABB0(a1);
}

id sub_10007BE74@<X0>(_BYTE *a1@<X8>)
{
  return sub_1000763BC(a1);
}

uint64_t sub_10007BE98()
{
  return sub_1000763D4();
}

_QWORD *sub_10007BEAC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  void (*v52)(_QWORD *, _QWORD, uint64_t, int *);
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  id v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *__dsta;
  char *__dst;

  v4 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    v8 = v6[6];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for WidgetMusicItem(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10000B4C8(&qword_100548310);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v67 = v12;
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      v17 = v10[5];
      v9[4] = v10[4];
      v9[5] = v17;
      v18 = v11[7];
      v71 = (char *)v10 + v18;
      __dsta = (char *)v9 + v18;
      v19 = type metadata accessor for URL(0);
      v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(__dsta, v71, v19);
      v20 = v11[8];
      v21 = (_QWORD *)((char *)v9 + v20);
      v22 = (_QWORD *)((char *)v10 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = v11[9];
      v25 = (_QWORD *)((char *)v9 + v24);
      v26 = (_QWORD *)((char *)v10 + v24);
      v72 = v26[1];
      *v25 = *v26;
      v25[1] = v72;
      v27 = v11[10];
      v28 = (_QWORD *)((char *)v9 + v27);
      v29 = (_QWORD *)((char *)v10 + v27);
      v70 = v29[1];
      *v28 = *v29;
      v28[1] = v70;
      v30 = v11[11];
      v31 = (_QWORD *)((char *)v9 + v30);
      v32 = (_QWORD *)((char *)v10 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = v11[12];
      v35 = (_QWORD *)((char *)v9 + v34);
      v36 = (_QWORD *)((char *)v10 + v34);
      v37 = v36[1];
      *v35 = *v36;
      v35[1] = v37;
      v38 = v11[13];
      v39 = (_QWORD *)((char *)v9 + v38);
      v40 = (_QWORD *)((char *)v10 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      *(_QWORD *)((char *)v9 + v11[14]) = *(_QWORD *)((char *)v10 + v11[14]);
      *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
      v42 = v11[16];
      __dst = (char *)v9 + v42;
      v68 = (char *)v10 + v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = sub_10000B4C8(&qword_100547B50);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(void))(v44 + 48))())
      {
        v45 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        v46 = v67;
      }
      else
      {
        v47 = type metadata accessor for Playlist.Variant(0);
        v73 = *(_QWORD *)(v47 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v68, 1, v47))
        {
          v48 = sub_10000B4C8(&qword_100548358);
          v49 = __dst;
          memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dst, v68, v47);
          v49 = __dst;
          (*(void (**)(void))(v73 + 56))();
        }
        v46 = v67;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v49, 0, 10, v43);
      }
      *(_QWORD *)((char *)v9 + v11[17]) = *(_QWORD *)((char *)v10 + v11[17]);
      v50 = v11[18];
      v51 = *(void **)((char *)v10 + v50);
      *(_QWORD *)((char *)v9 + v50) = v51;
      *(_QWORD *)((char *)v9 + v11[19]) = *(_QWORD *)((char *)v10 + v11[19]);
      v52 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v46 + 56);
      v53 = v51;
      swift_bridgeObjectRetain();
      v52(v9, 0, 1, v11);
    }
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    v54 = v6[8];
    v55 = *(void **)((char *)a2 + v54);
    *(_QWORD *)((char *)a1 + v54) = v55;
    v56 = v6[9];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = type metadata accessor for TimelineEntryRelevance(0);
    v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
    swift_bridgeObjectRetain();
    v61 = v55;
    v60(v57, v58, v59);
    v62 = v6[10];
    v63 = (_QWORD *)((char *)a1 + v62);
    v64 = (_QWORD *)((char *)a2 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10007C2A8(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v4 = (_QWORD *)(a1 + v3[6]);
  v5 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease(v4[1]);
    swift_bridgeObjectRelease(v4[3]);
    swift_bridgeObjectRelease(v4[5]);
    v6 = (char *)v4 + v5[7];
    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[9] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[10] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[11] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[13] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[14]));
    v8 = (char *)v4 + v5[16];
    v9 = sub_10000B4C8(&qword_100547B50);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 10, v9))
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
        (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    }

    swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[19]));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v3[7]));

  v12 = a1 + v3[9];
  v13 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + v3[10] + 8));
}

uint64_t sub_10007C4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  id v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *__dsta;
  char *__dst;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for WidgetMusicItem(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10000B4C8(&qword_100548310);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v69 = v10;
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = v8[3];
    v7[2] = v8[2];
    v7[3] = v13;
    v14 = v8[5];
    v7[4] = v8[4];
    v7[5] = v14;
    v15 = v9[7];
    __dsta = (char *)v7 + v15;
    v66 = (char *)v8 + v15;
    v16 = type metadata accessor for URL(0);
    v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64(__dsta, v66, v16);
    v17 = v9[8];
    v18 = (_QWORD *)((char *)v7 + v17);
    v19 = (_QWORD *)((char *)v8 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v9[9];
    v22 = (_QWORD *)((char *)v7 + v21);
    v23 = (_QWORD *)((char *)v8 + v21);
    v67 = v23[1];
    *v22 = *v23;
    v22[1] = v67;
    v24 = v9[10];
    v25 = (_QWORD *)((char *)v7 + v24);
    v26 = (_QWORD *)((char *)v8 + v24);
    v65 = v26[1];
    *v25 = *v26;
    v25[1] = v65;
    v27 = v9[11];
    v28 = (_QWORD *)((char *)v7 + v27);
    v29 = (_QWORD *)((char *)v8 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v9[12];
    v32 = (_QWORD *)((char *)v7 + v31);
    v33 = (_QWORD *)((char *)v8 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v9[13];
    v36 = (_QWORD *)((char *)v7 + v35);
    v37 = (_QWORD *)((char *)v8 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    *(_QWORD *)((char *)v7 + v9[14]) = *(_QWORD *)((char *)v8 + v9[14]);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    v39 = v9[16];
    __dst = (char *)v7 + v39;
    v63 = (char *)v8 + v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = sub_10000B4C8(&qword_100547B50);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(void))(v41 + 48))())
    {
      v42 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v63, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v68 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v63, 1, v43))
      {
        v44 = sub_10000B4C8(&qword_100548358);
        v45 = __dst;
        memcpy(__dst, v63, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(__dst, v63, v43);
        v45 = __dst;
        (*(void (**)(void))(v68 + 56))();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v45, 0, 10, v40);
    }
    *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)((char *)v8 + v9[17]);
    v46 = v9[18];
    v47 = *(void **)((char *)v8 + v46);
    *(_QWORD *)((char *)v7 + v46) = v47;
    *(_QWORD *)((char *)v7 + v9[19]) = *(_QWORD *)((char *)v8 + v9[19]);
    v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v69 + 56);
    v49 = v47;
    swift_bridgeObjectRetain();
    v48(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  v50 = v5[8];
  v51 = *(void **)(a2 + v50);
  *(_QWORD *)(a1 + v50) = v51;
  v52 = v5[9];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = type metadata accessor for TimelineEntryRelevance(0);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  swift_bridgeObjectRetain();
  v57 = v51;
  v56(v53, v54, v55);
  v58 = v5[10];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10007C87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void (*v92)(_QWORD *, _QWORD, uint64_t, int *);
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  char *__dst;
  uint64_t v122;
  char *v123;
  char *v124;
  int *v125;
  int *v126;
  uint64_t v127;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for WidgetMusicItem(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_10000E750((uint64_t)v7, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v126 = v5;
    v127 = a2;
    *v7 = *v8;
    v42 = v7[1];
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v42);
    v7[2] = v8[2];
    v43 = v7[3];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v43);
    v7[4] = v8[4];
    v44 = v7[5];
    v7[5] = v8[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v44);
    v45 = v9[7];
    v46 = (char *)v7 + v45;
    v47 = (char *)v8 + v45;
    v48 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
    v49 = v9[8];
    v50 = (_QWORD *)((char *)v7 + v49);
    v51 = (_QWORD *)((char *)v8 + v49);
    *v50 = *v51;
    v52 = v50[1];
    v50[1] = v51[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v52);
    v53 = v9[9];
    v54 = (_QWORD *)((char *)v7 + v53);
    v55 = (_QWORD *)((char *)v8 + v53);
    *v54 = *v55;
    v56 = v54[1];
    v54[1] = v55[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v56);
    v57 = v9[10];
    v58 = (_QWORD *)((char *)v7 + v57);
    v59 = (_QWORD *)((char *)v8 + v57);
    *v58 = *v59;
    v60 = v58[1];
    v58[1] = v59[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v60);
    v61 = v9[11];
    v62 = (_QWORD *)((char *)v7 + v61);
    v63 = (_QWORD *)((char *)v8 + v61);
    *v62 = *v63;
    v64 = v62[1];
    v62[1] = v63[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v64);
    v65 = v9[12];
    v66 = (_QWORD *)((char *)v7 + v65);
    v67 = (_QWORD *)((char *)v8 + v65);
    *v66 = *v67;
    v68 = v66[1];
    v66[1] = v67[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v68);
    v69 = v9[13];
    v70 = (_QWORD *)((char *)v7 + v69);
    v71 = (_QWORD *)((char *)v8 + v69);
    *v70 = *v71;
    v72 = v70[1];
    v70[1] = v71[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v72);
    v73 = v9[14];
    v74 = *(_QWORD *)((char *)v7 + v73);
    *(_QWORD *)((char *)v7 + v73) = *(_QWORD *)((char *)v8 + v73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v74);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    v75 = v9[16];
    v76 = (char *)v7 + v75;
    v77 = (char *)v8 + v75;
    v78 = sub_10000B4C8(&qword_100547B50);
    v79 = *(_QWORD *)(v78 - 8);
    v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
    v81 = v80(v76, 10, v78);
    v82 = v80(v77, 10, v78);
    if (v81)
    {
      if (!v82)
      {
        v83 = type metadata accessor for Playlist.Variant(0);
        v84 = *(_QWORD *)(v83 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v77, 1, v83))
        {
          v85 = sub_10000B4C8(&qword_100548358);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v76, v77, v83);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v76, 0, 1, v83);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 10, v78);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v82)
      {
        v94 = type metadata accessor for Playlist.Variant(0);
        v95 = *(_QWORD *)(v94 - 8);
        v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
        v97 = v96(v76, 1, v94);
        v98 = v96(v77, 1, v94);
        if (v97)
        {
          if (!v98)
          {
            (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v76, v77, v94);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v76, 0, 1, v94);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v98)
          {
            (*(void (**)(char *, char *, uint64_t))(v95 + 24))(v76, v77, v94);
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v94);
        }
        v89 = sub_10000B4C8(&qword_100548358);
LABEL_17:
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
LABEL_26:
        v5 = v126;
        a2 = v127;
        *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)((char *)v8 + v9[17]);
        v99 = v9[18];
        v100 = *(void **)((char *)v7 + v99);
        v101 = *(void **)((char *)v8 + v99);
        *(_QWORD *)((char *)v7 + v99) = v101;
        v102 = v101;

        v103 = v9[19];
        v104 = *(_QWORD *)((char *)v8 + v103);
        v105 = *(_QWORD *)((char *)v7 + v103);
        *(_QWORD *)((char *)v7 + v103) = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v105);
        goto LABEL_27;
      }
      sub_100011694((uint64_t)v76, &qword_100547B50);
    }
    v89 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_7:
    v41 = sub_10000B4C8(&qword_100548310);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  v125 = v5;
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  v14 = v9[7];
  v15 = (char *)v7 + v14;
  v122 = v10;
  v123 = (char *)v8 + v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v15, v123, v16);
  v18 = v9[8];
  v19 = (_QWORD *)((char *)v7 + v18);
  v20 = (_QWORD *)((char *)v8 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  v21 = v9[9];
  v22 = (_QWORD *)((char *)v7 + v21);
  v23 = (_QWORD *)((char *)v8 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  v24 = v9[10];
  v25 = (_QWORD *)((char *)v7 + v24);
  v26 = (_QWORD *)((char *)v8 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  v27 = v9[11];
  v28 = (_QWORD *)((char *)v7 + v27);
  v29 = (_QWORD *)((char *)v8 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  v30 = v9[12];
  v31 = (_QWORD *)((char *)v7 + v30);
  v32 = (_QWORD *)((char *)v8 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  v33 = v9[13];
  v34 = (_QWORD *)((char *)v7 + v33);
  v35 = (_QWORD *)((char *)v8 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  *(_QWORD *)((char *)v7 + v9[14]) = *(_QWORD *)((char *)v8 + v9[14]);
  *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
  v36 = v9[16];
  __dst = (char *)v7 + v36;
  v124 = (char *)v8 + v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = sub_10000B4C8(&qword_100547B50);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v124, 10, v37))
  {
    v39 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v124, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    v5 = v125;
    v40 = v122;
  }
  else
  {
    v86 = type metadata accessor for Playlist.Variant(0);
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v124, 1, v86))
    {
      v88 = sub_10000B4C8(&qword_100548358);
      memcpy(__dst, v124, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v124, v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v86);
    }
    v40 = v122;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 10, v37);
    v5 = v125;
  }
  *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)((char *)v8 + v9[17]);
  v90 = v9[18];
  v91 = *(void **)((char *)v8 + v90);
  *(_QWORD *)((char *)v7 + v90) = v91;
  *(_QWORD *)((char *)v7 + v9[19]) = *(_QWORD *)((char *)v8 + v9[19]);
  v92 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v40 + 56);
  v93 = v91;
  swift_bridgeObjectRetain();
  v92(v7, 0, 1, v9);
LABEL_27:
  v106 = v5[7];
  v107 = *(_QWORD *)(a1 + v106);
  *(_QWORD *)(a1 + v106) = *(_QWORD *)(a2 + v106);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v107);
  v108 = v5[8];
  v109 = *(void **)(a1 + v108);
  v110 = *(void **)(a2 + v108);
  *(_QWORD *)(a1 + v108) = v110;
  v111 = v110;

  v112 = v5[9];
  v113 = a1 + v112;
  v114 = a2 + v112;
  v115 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 24))(v113, v114, v115);
  v116 = v5[10];
  v117 = (_QWORD *)(a1 + v116);
  v118 = (_QWORD *)(a2 + v116);
  *v117 = *v118;
  v119 = v117[1];
  v117[1] = v118[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v119);
  return a1;
}

uint64_t sub_10007D098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void *__dst;
  uint64_t v34;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for WidgetMusicItem(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10000B4C8(&qword_100548310);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v34 = v10;
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v7[2] = v8[2];
    v13 = v9[7];
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *(_OWORD *)((char *)v7 + v9[9]) = *(_OWORD *)((char *)v8 + v9[9]);
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    *(_OWORD *)((char *)v7 + v9[11]) = *(_OWORD *)((char *)v8 + v9[11]);
    *(_OWORD *)((char *)v7 + v9[12]) = *(_OWORD *)((char *)v8 + v9[12]);
    *(_OWORD *)((char *)v7 + v9[13]) = *(_OWORD *)((char *)v8 + v9[13]);
    *(_QWORD *)((char *)v7 + v9[14]) = *(_QWORD *)((char *)v8 + v9[14]);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    v17 = v9[16];
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = sub_10000B4C8(&qword_100547B50);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
    {
      v22 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v32 = v21;
      __dst = v18;
      v23 = type metadata accessor for Playlist.Variant(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
      {
        v25 = sub_10000B4C8(&qword_100548358);
        v26 = __dst;
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v24 + 32))(__dst, v19, v23);
        v26 = __dst;
        (*(void (**)(void))(v24 + 56))();
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v20);
    }
    *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)((char *)v8 + v9[17]);
    *(_QWORD *)((char *)v7 + v9[18]) = *(_QWORD *)((char *)v8 + v9[18]);
    *(_QWORD *)((char *)v7 + v9[19]) = *(_QWORD *)((char *)v8 + v9[19]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v34 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  v27 = v5[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  *(_OWORD *)(a1 + v5[10]) = *(_OWORD *)(a2 + v5[10]);
  return a1;
}

uint64_t sub_10007D39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, int *);
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  int v78;
  uint64_t v79;
  size_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v114)(void *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *__src;
  void *__srca;
  char *__dst;
  void *__dsta;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for WidgetMusicItem(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_10000E750((uint64_t)v7, type metadata accessor for WidgetMusicItem);
      goto LABEL_7;
    }
    v25 = v8[1];
    v26 = v7[1];
    *v7 = *v8;
    v7[1] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = v8[3];
    v28 = v7[3];
    v7[2] = v8[2];
    v7[3] = v27;
    swift_bridgeObjectRelease(v28);
    v29 = v8[5];
    v30 = v7[5];
    v7[4] = v8[4];
    v7[5] = v29;
    swift_bridgeObjectRelease(v30);
    v31 = v9[7];
    v32 = (char *)v7 + v31;
    v33 = (char *)v8 + v31;
    v34 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
    v35 = v9[8];
    v36 = (_QWORD *)((char *)v7 + v35);
    v37 = (_QWORD *)((char *)v8 + v35);
    v39 = *v37;
    v38 = v37[1];
    v40 = v36[1];
    *v36 = v39;
    v36[1] = v38;
    swift_bridgeObjectRelease(v40);
    v41 = v9[9];
    v42 = (_QWORD *)((char *)v7 + v41);
    v43 = (_QWORD *)((char *)v8 + v41);
    v45 = *v43;
    v44 = v43[1];
    v46 = v42[1];
    *v42 = v45;
    v42[1] = v44;
    swift_bridgeObjectRelease(v46);
    v47 = v9[10];
    v48 = (_QWORD *)((char *)v7 + v47);
    v49 = (_QWORD *)((char *)v8 + v47);
    v51 = *v49;
    v50 = v49[1];
    v52 = v48[1];
    *v48 = v51;
    v48[1] = v50;
    swift_bridgeObjectRelease(v52);
    v53 = v9[11];
    v54 = (_QWORD *)((char *)v7 + v53);
    v55 = (_QWORD *)((char *)v8 + v53);
    v57 = *v55;
    v56 = v55[1];
    v58 = v54[1];
    *v54 = v57;
    v54[1] = v56;
    swift_bridgeObjectRelease(v58);
    v59 = v9[12];
    v60 = (_QWORD *)((char *)v7 + v59);
    v61 = (_QWORD *)((char *)v8 + v59);
    v63 = *v61;
    v62 = v61[1];
    v64 = v60[1];
    *v60 = v63;
    v60[1] = v62;
    swift_bridgeObjectRelease(v64);
    v65 = v9[13];
    v66 = (_QWORD *)((char *)v7 + v65);
    v67 = (_QWORD *)((char *)v8 + v65);
    v69 = *v67;
    v68 = v67[1];
    v70 = v66[1];
    *v66 = v69;
    v66[1] = v68;
    swift_bridgeObjectRelease(v70);
    v71 = v9[14];
    v72 = *(_QWORD *)((char *)v7 + v71);
    *(_QWORD *)((char *)v7 + v71) = *(_QWORD *)((char *)v8 + v71);
    swift_bridgeObjectRelease(v72);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    v73 = v9[16];
    v74 = (char *)v7 + v73;
    v75 = (char *)v8 + v73;
    v76 = sub_10000B4C8(&qword_100547B50);
    v116 = *(_QWORD *)(v76 - 8);
    v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 48);
    __dsta = v74;
    LODWORD(v74) = v77(v74, 10, v76);
    __src = v75;
    v78 = v77(v75, 10, v76);
    if ((_DWORD)v74)
    {
      if (!v78)
      {
        v88 = type metadata accessor for Playlist.Variant(0);
        v115 = *(_QWORD *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v75, 1, v88))
        {
          v89 = sub_10000B4C8(&qword_100548358);
          memcpy(__dsta, v75, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v115 + 32))(__dsta, v75, v88);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(__dsta, 0, 1, v88);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v116 + 56))(__dsta, 0, 10, v76);
        goto LABEL_28;
      }
      v79 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_11:
      v80 = *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64);
      v81 = __dsta;
LABEL_17:
      memcpy(v81, __src, v80);
LABEL_28:
      *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)((char *)v8 + v9[17]);
      v95 = v9[18];
      v96 = *(void **)((char *)v7 + v95);
      *(_QWORD *)((char *)v7 + v95) = *(_QWORD *)((char *)v8 + v95);

      v97 = v9[19];
      v98 = *(_QWORD *)((char *)v7 + v97);
      *(_QWORD *)((char *)v7 + v97) = *(_QWORD *)((char *)v8 + v97);
      swift_bridgeObjectRelease(v98);
      goto LABEL_29;
    }
    if (v78)
    {
      v86 = __dsta;
      sub_100011694((uint64_t)__dsta, &qword_100547B50);
      v87 = type metadata accessor for ArtworkImage.Placeholder(0);
    }
    else
    {
      v90 = type metadata accessor for Playlist.Variant(0);
      v91 = *(_QWORD *)(v90 - 8);
      v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
      v93 = v92(__dsta, 1, v90);
      v94 = v92(__src, 1, v90);
      if (v93)
      {
        if (!v94)
        {
          (*(void (**)(void *, char *, uint64_t))(v91 + 32))(__dsta, __src, v90);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(__dsta, 0, 1, v90);
          goto LABEL_28;
        }
        v79 = sub_10000B4C8(&qword_100548358);
        goto LABEL_11;
      }
      if (!v94)
      {
        (*(void (**)(void *, char *, uint64_t))(v91 + 40))(__dsta, __src, v90);
        goto LABEL_28;
      }
      v114 = *(void (**)(void *, uint64_t))(v91 + 8);
      v86 = __dsta;
      v114(__dsta, v90);
      v87 = sub_10000B4C8(&qword_100548358);
    }
    v80 = *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64);
    v81 = v86;
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_7:
    v24 = sub_10000B4C8(&qword_100548310);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_29;
  }
  v14 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v14;
  *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
  v15 = v9[7];
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
  *(_OWORD *)((char *)v7 + v9[9]) = *(_OWORD *)((char *)v8 + v9[9]);
  *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
  *(_OWORD *)((char *)v7 + v9[11]) = *(_OWORD *)((char *)v8 + v9[11]);
  *(_OWORD *)((char *)v7 + v9[12]) = *(_OWORD *)((char *)v8 + v9[12]);
  *(_OWORD *)((char *)v7 + v9[13]) = *(_OWORD *)((char *)v8 + v9[13]);
  *(_QWORD *)((char *)v7 + v9[14]) = *(_QWORD *)((char *)v8 + v9[14]);
  *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
  v19 = v9[16];
  __dst = (char *)v7 + v19;
  v20 = (char *)v8 + v19;
  v21 = sub_10000B4C8(&qword_100547B50);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
  {
    v23 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v117 = v22;
    __srca = (void *)v21;
    v82 = type metadata accessor for Playlist.Variant(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v20, 1, v82))
    {
      v84 = sub_10000B4C8(&qword_100548358);
      v85 = __dst;
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(__dst, v20, v82);
      v85 = __dst;
      (*(void (**)(void))(v83 + 56))();
    }
    (*(void (**)(char *, _QWORD, uint64_t, void *))(v117 + 56))(v85, 0, 10, __srca);
  }
  *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)((char *)v8 + v9[17]);
  *(_QWORD *)((char *)v7 + v9[18]) = *(_QWORD *)((char *)v8 + v9[18]);
  *(_QWORD *)((char *)v7 + v9[19]) = *(_QWORD *)((char *)v8 + v9[19]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_29:
  v99 = v5[7];
  v100 = *(_QWORD *)(a1 + v99);
  *(_QWORD *)(a1 + v99) = *(_QWORD *)(a2 + v99);
  swift_bridgeObjectRelease(v100);
  v101 = v5[8];
  v102 = *(void **)(a1 + v101);
  *(_QWORD *)(a1 + v101) = *(_QWORD *)(a2 + v101);

  v103 = v5[9];
  v104 = a1 + v103;
  v105 = a2 + v103;
  v106 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 40))(v104, v105, v106);
  v107 = v5[10];
  v108 = (_QWORD *)(a1 + v107);
  v109 = (uint64_t *)(a2 + v107);
  v111 = *v109;
  v110 = v109[1];
  v112 = v108[1];
  *v108 = v111;
  v108[1] = v110;
  swift_bridgeObjectRelease(v112);
  return a1;
}

uint64_t sub_10007DA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007DA54);
}

uint64_t sub_10007DA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10007DA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007DA9C);
}

uint64_t sub_10007DA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecentlyPlayedWidgetView(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054A868, (uint64_t)&nominal type descriptor for RecentlyPlayedWidgetView);
}

uint64_t sub_10007DAF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10007DB58(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004829B4, 1);
}

uint64_t sub_10007DB68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v25 = a1;
  v3 = type metadata accessor for RedactionReasons(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecentlyPlayedContentView(0);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (char *)&v24 - v11;
  v24 = sub_10000B4C8(&qword_10054A8A0);
  v13 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = swift_getKeyPath(&unk_100426D40);
  v16 = sub_10000B4C8(&qword_100547EE0);
  swift_storeEnumTagMultiPayload(v10, v16, 0);
  sub_10000DB44((uint64_t)v10, (uint64_t)v12, type metadata accessor for RecentlyPlayedContentView);
  sub_10007DD78();
  v17 = sub_10001254C(&qword_10054A8A8, type metadata accessor for RecentlyPlayedContentView, (uint64_t)&unk_100426E14);
  View.redacted(reason:)(v6, v7, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10000E750((uint64_t)v12, type metadata accessor for RecentlyPlayedContentView);
  KeyPath = swift_getKeyPath(&unk_100426D70);
  v19 = sub_10000B4C8(&qword_10054A8B0);
  v20 = v25;
  v21 = (uint64_t *)(v25 + *(int *)(v19 + 36));
  v22 = sub_10000B4C8(&qword_10054A8B8);
  sub_10000D964(v2, (uint64_t)v21 + *(int *)(v22 + 28), type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  *v21 = KeyPath;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20, v15, v24);
}

uint64_t sub_10007DD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if ((sub_100081B90() & 1) == 0)
  {
    sub_100081594();
    v1 = v0;
    v2 = swift_bridgeObjectRelease(v0);
    if (v1)
      return static RedactionReasons.placeholder.getter(v2);
  }
  v4 = type metadata accessor for RedactionReasons(0);
  v8 = _swiftEmptyArrayStorage;
  v5 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
  v6 = sub_10000B4C8(&qword_100548708);
  v7 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v8, v6, v7, v4, v5);
}

uint64_t sub_10007DE64()
{
  unint64_t v0;

  v0 = sub_10007DFC8();
  return EnvironmentValues.subscript.getter(&_s28RecentlyPlayedWidgetEntryKeyVN, &_s28RecentlyPlayedWidgetEntryKeyVN, v0);
}

uint64_t sub_10007DE98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v10 - v6;
  sub_10000D964(a1, (uint64_t)&v10 - v6, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_10000D964((uint64_t)v7, (uint64_t)v5, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v8 = sub_10007DFC8();
  EnvironmentValues.subscript.setter(v5, &_s28RecentlyPlayedWidgetEntryKeyVN, &_s28RecentlyPlayedWidgetEntryKeyVN, v8);
  return sub_10000E750((uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
}

uint64_t type metadata accessor for RecentlyPlayedContentView(uint64_t a1)
{
  return sub_10001133C(a1, qword_10054A920, (uint64_t)&nominal type descriptor for RecentlyPlayedContentView);
}

uint64_t sub_10007DF88()
{
  unint64_t v0;

  v0 = sub_10007DFC8();
  return EnvironmentValues.subscript.getter(&_s28RecentlyPlayedWidgetEntryKeyVN, &_s28RecentlyPlayedWidgetEntryKeyVN, v0);
}

unint64_t sub_10007DFC8()
{
  unint64_t result;

  result = qword_10054A8C0;
  if (!qword_10054A8C0)
  {
    result = swift_getWitnessTable(&unk_100426DDC, &_s28RecentlyPlayedWidgetEntryKeyVN);
    atomic_store(result, (unint64_t *)&qword_10054A8C0);
  }
  return result;
}

uint64_t sub_10007E00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  char *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v127 = a1;
  v114 = type metadata accessor for RecentlyPlayedExtraLargeContentView(0);
  v1 = __chkstk_darwin(v114);
  v108 = (uint64_t *)((char *)&v107 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  v109 = (uint64_t)&v107 - v3;
  v111 = sub_10000B4C8(&qword_10054A968);
  __chkstk_darwin(v111);
  v113 = (uint64_t)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_10000B4C8(&qword_10054A970);
  __chkstk_darwin(v119);
  v115 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for RecentlyPlayedLargeContentView(0);
  v6 = __chkstk_darwin(v112);
  v8 = (char **)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v110 = (uint64_t)&v107 - v9;
  v122 = type metadata accessor for RecentlyPlayedMediumContentView(0);
  v10 = __chkstk_darwin(v122);
  v116 = (uint64_t *)((char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v117 = (uint64_t)&v107 - v12;
  v125 = sub_10000B4C8(&qword_10054A978);
  __chkstk_darwin(v125);
  v124 = (char **)((char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = sub_10000B4C8(&qword_10054A980);
  __chkstk_darwin(v123);
  v121 = (uint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_10000B4C8(&qword_10054A988);
  __chkstk_darwin(v120);
  v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10000B4C8(&qword_10054A990);
  __chkstk_darwin(v118);
  v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10000B4C8(&qword_10054A998);
  __chkstk_darwin(v126);
  v20 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for RecentlyPlayedSmallContentView(0);
  __chkstk_darwin(v21);
  v23 = (char **)((char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = type metadata accessor for WidgetFamily(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003E98C((uint64_t)v27);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v27, v24);
  if (v28 == enum case for WidgetFamily.systemSmall(_:))
  {
    *v23 = swift_getKeyPath(&unk_100426D70);
    v29 = sub_10000B4C8(&qword_1005499E0);
    swift_storeEnumTagMultiPayload(v23, v29, 0);
    v30 = (char *)v23 + v21[5];
    *(_QWORD *)v30 = swift_getKeyPath(&unk_100426EF8);
    v30[8] = 0;
    v31 = (_QWORD *)((char *)v23 + v21[6]);
    *v31 = swift_getKeyPath(&unk_100426F20);
    v32 = sub_10000B4C8(&qword_100549378);
    swift_storeEnumTagMultiPayload(v31, v32, 0);
    v33 = (_QWORD *)((char *)v23 + v21[7]);
    *v33 = swift_getKeyPath(&unk_100426E68);
    v34 = sub_10000B4C8(&qword_1005486F8);
    swift_storeEnumTagMultiPayload(v33, v34, 0);
    v35 = (_QWORD *)((char *)v23 + v21[8]);
    *v35 = swift_getKeyPath(&unk_100426E98);
    v36 = sub_10000B4C8(&qword_100548908);
    swift_storeEnumTagMultiPayload(v35, v36, 0);
    v37 = type metadata accessor for RecentlyPlayedSmallContentView;
    sub_10000D964((uint64_t)v23, (uint64_t)v16, type metadata accessor for RecentlyPlayedSmallContentView);
    swift_storeEnumTagMultiPayload(v16, v120, 0);
    v38 = sub_10001254C(&qword_10054A9B0, type metadata accessor for RecentlyPlayedSmallContentView, (uint64_t)&unk_1004270E8);
    v39 = sub_10001254C(&qword_10054A9B8, type metadata accessor for RecentlyPlayedMediumContentView, (uint64_t)&unk_100427098);
    _ConditionalContent<>.init(storage:)(v16, v21, v122, v38, v39);
    v40 = v121;
    sub_100011370((uint64_t)v18, v121, &qword_10054A990);
    swift_storeEnumTagMultiPayload(v40, v123, 0);
    v41 = sub_10008EEC0();
    v42 = sub_10008EF5C();
    _ConditionalContent<>.init(storage:)(v40, v118, v119, v41, v42);
    sub_100011694((uint64_t)v18, &qword_10054A990);
    v43 = v124;
    sub_100011370((uint64_t)v20, (uint64_t)v124, &qword_10054A998);
    swift_storeEnumTagMultiPayload(v43, v125, 0);
    v44 = sub_100056068(&qword_10054A9A0, &qword_10054A998, (uint64_t (*)(void))sub_10008EEC0, (uint64_t (*)(void))sub_10008EF5C);
    _ConditionalContent<>.init(storage:)(v43, v126, &type metadata for Text, v44, &protocol witness table for Text);
    sub_100011694((uint64_t)v20, &qword_10054A998);
    v45 = (uint64_t)v23;
LABEL_9:
    v84 = v37;
    return sub_10000E750(v45, v84);
  }
  v46 = v120;
  v47 = v122;
  v107 = v20;
  if (v28 == enum case for WidgetFamily.systemMedium(_:))
  {
    KeyPath = swift_getKeyPath(&unk_100426D70);
    v49 = (uint64_t)v116;
    *v116 = KeyPath;
    v50 = sub_10000B4C8(&qword_1005499E0);
    swift_storeEnumTagMultiPayload(v49, v50, 0);
    v51 = v47;
    v52 = (_QWORD *)(v49 + *(int *)(v47 + 20));
    *v52 = swift_getKeyPath(&unk_100426E68);
    v53 = sub_10000B4C8(&qword_1005486F8);
    swift_storeEnumTagMultiPayload(v52, v53, 0);
    v54 = (_QWORD *)(v49 + *(int *)(v47 + 24));
    *v54 = swift_getKeyPath(&unk_100426E98);
    v55 = sub_10000B4C8(&qword_100548908);
    swift_storeEnumTagMultiPayload(v54, v55, 0);
    v37 = type metadata accessor for RecentlyPlayedMediumContentView;
    v56 = v117;
    sub_10000DB44(v49, v117, type metadata accessor for RecentlyPlayedMediumContentView);
    sub_10000D964(v56, (uint64_t)v16, type metadata accessor for RecentlyPlayedMediumContentView);
    swift_storeEnumTagMultiPayload(v16, v46, 1);
    v57 = sub_10001254C(&qword_10054A9B0, type metadata accessor for RecentlyPlayedSmallContentView, (uint64_t)&unk_1004270E8);
    v58 = sub_10001254C(&qword_10054A9B8, type metadata accessor for RecentlyPlayedMediumContentView, (uint64_t)&unk_100427098);
    _ConditionalContent<>.init(storage:)(v16, v21, v51, v57, v58);
    v59 = v121;
    sub_100011370((uint64_t)v18, v121, &qword_10054A990);
    swift_storeEnumTagMultiPayload(v59, v123, 0);
    v60 = sub_10008EEC0();
    v61 = sub_10008EF5C();
    v62 = (uint64_t)v107;
    _ConditionalContent<>.init(storage:)(v59, v118, v119, v60, v61);
    sub_100011694((uint64_t)v18, &qword_10054A990);
    v63 = v124;
    sub_100011370(v62, (uint64_t)v124, &qword_10054A998);
    swift_storeEnumTagMultiPayload(v63, v125, 0);
    v64 = sub_100056068(&qword_10054A9A0, &qword_10054A998, (uint64_t (*)(void))sub_10008EEC0, (uint64_t (*)(void))sub_10008EF5C);
    _ConditionalContent<>.init(storage:)(v63, v126, &type metadata for Text, v64, &protocol witness table for Text);
    sub_100011694(v62, &qword_10054A998);
    v45 = v56;
    goto LABEL_9;
  }
  if (v28 != enum case for WidgetFamily.systemLarge(_:))
  {
    v86 = v123;
    v85 = v124;
    v87 = v121;
    if (v28 != enum case for WidgetFamily.systemExtraLarge(_:))
    {
      *v124 = 0xD000000000000012;
      v85[1] = 0x8000000100445240;
      *((_BYTE *)v85 + 16) = 0;
      v85[3] = _swiftEmptyArrayStorage;
      swift_storeEnumTagMultiPayload(v85, v125, 1);
      v106 = sub_100056068(&qword_10054A9A0, &qword_10054A998, (uint64_t (*)(void))sub_10008EEC0, (uint64_t (*)(void))sub_10008EF5C);
      _ConditionalContent<>.init(storage:)(v85, v126, &type metadata for Text, v106, &protocol witness table for Text);
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    }
    v88 = swift_getKeyPath(&unk_100426D70);
    v89 = (uint64_t)v108;
    *v108 = v88;
    v90 = sub_10000B4C8(&qword_1005499E0);
    swift_storeEnumTagMultiPayload(v89, v90, 0);
    v91 = v114;
    v92 = (_QWORD *)(v89 + *(int *)(v114 + 20));
    *v92 = swift_getKeyPath(&unk_100426E68);
    v93 = sub_10000B4C8(&qword_1005486F8);
    swift_storeEnumTagMultiPayload(v92, v93, 0);
    v94 = (_QWORD *)(v89 + *(int *)(v91 + 24));
    *v94 = swift_getKeyPath(&unk_100426E98);
    v95 = sub_10000B4C8(&qword_100548908);
    swift_storeEnumTagMultiPayload(v94, v95, 0);
    v37 = type metadata accessor for RecentlyPlayedExtraLargeContentView;
    v96 = v109;
    sub_10000DB44(v89, v109, type metadata accessor for RecentlyPlayedExtraLargeContentView);
    v97 = v113;
    sub_10000D964(v96, v113, type metadata accessor for RecentlyPlayedExtraLargeContentView);
    swift_storeEnumTagMultiPayload(v97, v111, 1);
    v98 = sub_10001254C(&qword_10054A9C8, type metadata accessor for RecentlyPlayedLargeContentView, (uint64_t)&unk_100427048);
    v99 = sub_10001254C(&qword_10054A9D0, type metadata accessor for RecentlyPlayedExtraLargeContentView, (uint64_t)&unk_100426FF8);
    v100 = (uint64_t)v115;
    _ConditionalContent<>.init(storage:)(v97, v112, v91, v98, v99);
    sub_100011370(v100, v87, &qword_10054A970);
    swift_storeEnumTagMultiPayload(v87, v86, 1);
    v101 = sub_10008EEC0();
    v102 = sub_10008EF5C();
    v103 = (uint64_t)v107;
    _ConditionalContent<>.init(storage:)(v87, v118, v119, v101, v102);
    sub_100011694(v100, &qword_10054A970);
    sub_100011370(v103, (uint64_t)v85, &qword_10054A998);
    swift_storeEnumTagMultiPayload(v85, v125, 0);
    v104 = sub_100056068(&qword_10054A9A0, &qword_10054A998, (uint64_t (*)(void))sub_10008EEC0, (uint64_t (*)(void))sub_10008EF5C);
    _ConditionalContent<>.init(storage:)(v85, v126, &type metadata for Text, v104, &protocol witness table for Text);
    sub_100011694(v103, &qword_10054A998);
    v45 = v96;
    goto LABEL_9;
  }
  *v8 = swift_getKeyPath(&unk_100426D70);
  v65 = sub_10000B4C8(&qword_1005499E0);
  swift_storeEnumTagMultiPayload(v8, v65, 0);
  v66 = v112;
  v67 = (_QWORD *)((char *)v8 + *(int *)(v112 + 20));
  *v67 = swift_getKeyPath(&unk_100426EC8);
  v68 = sub_10000B4C8(&qword_100548900);
  swift_storeEnumTagMultiPayload(v67, v68, 0);
  v69 = (_QWORD *)((char *)v8 + *(int *)(v66 + 24));
  *v69 = swift_getKeyPath(&unk_100426E68);
  v70 = sub_10000B4C8(&qword_1005486F8);
  swift_storeEnumTagMultiPayload(v69, v70, 0);
  v71 = (_QWORD *)((char *)v8 + *(int *)(v66 + 28));
  *v71 = swift_getKeyPath(&unk_100426E98);
  v72 = sub_10000B4C8(&qword_100548908);
  swift_storeEnumTagMultiPayload(v71, v72, 0);
  v73 = v110;
  sub_10000DB44((uint64_t)v8, v110, type metadata accessor for RecentlyPlayedLargeContentView);
  v74 = v113;
  sub_10000D964(v73, v113, type metadata accessor for RecentlyPlayedLargeContentView);
  swift_storeEnumTagMultiPayload(v74, v111, 0);
  v75 = sub_10001254C(&qword_10054A9C8, type metadata accessor for RecentlyPlayedLargeContentView, (uint64_t)&unk_100427048);
  v76 = sub_10001254C(&qword_10054A9D0, type metadata accessor for RecentlyPlayedExtraLargeContentView, (uint64_t)&unk_100426FF8);
  v77 = (uint64_t)v115;
  _ConditionalContent<>.init(storage:)(v74, v66, v114, v75, v76);
  v78 = v121;
  sub_100011370(v77, v121, &qword_10054A970);
  swift_storeEnumTagMultiPayload(v78, v123, 1);
  v79 = sub_10008EEC0();
  v80 = sub_10008EF5C();
  v81 = (uint64_t)v107;
  _ConditionalContent<>.init(storage:)(v78, v118, v119, v79, v80);
  sub_100011694(v77, &qword_10054A970);
  v82 = v124;
  sub_100011370(v81, (uint64_t)v124, &qword_10054A998);
  swift_storeEnumTagMultiPayload(v82, v125, 0);
  v83 = sub_100056068(&qword_10054A9A0, &qword_10054A998, (uint64_t (*)(void))sub_10008EEC0, (uint64_t (*)(void))sub_10008EF5C);
  _ConditionalContent<>.init(storage:)(v82, v126, &type metadata for Text, v83, &protocol witness table for Text);
  sub_100011694(v81, &qword_10054A998);
  v45 = v73;
  v84 = type metadata accessor for RecentlyPlayedLargeContentView;
  return sub_10000E750(v45, v84);
}

uint64_t sub_10007ED60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t KeyPath;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;

  v2 = v1;
  v104 = a1;
  v3 = type metadata accessor for ColorScheme(0);
  v102 = *(_QWORD *)(v3 - 8);
  v103 = v3;
  __chkstk_darwin(v3);
  v101 = (uint64_t)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000B4C8(&qword_100547A38);
  v6 = __chkstk_darwin(v5);
  v93 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v114 = (char *)&v93 - v8;
  v111 = type metadata accessor for WidgetLocation(0);
  v107 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000B4C8(&qword_1005499C8);
  __chkstk_darwin(v11);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_10000B4C8(&qword_100549998);
  __chkstk_darwin(v105);
  v106 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054AC68);
  __chkstk_darwin(v15);
  v109 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_10000B4C8(&qword_10054AC70);
  __chkstk_darwin(v108);
  v110 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_10000B4C8(&qword_10054AC78);
  __chkstk_darwin(v112);
  v113 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10000B4C8(&qword_10054AC80);
  v99 = *(_QWORD *)(v19 - 8);
  v100 = v19;
  __chkstk_darwin(v19);
  v98 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10000B4C8(&qword_10054AC88);
  v21 = __chkstk_darwin(v95);
  v97 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v96 = (uint64_t)&v93 - v23;
  v24 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v24);
  v26 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v32 = (char *)&v93 - v31;
  v33 = type metadata accessor for WidgetMusicItem(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v115 = (uint64_t)&v93 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003EE7C((uint64_t)v32);
  v36 = sub_100081B90();
  v94 = v33;
  if ((v36 & 1) != 0)
  {
    sub_100011370((uint64_t)&v32[*(int *)(v27 + 24)], (uint64_t)v26, &qword_100548310);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      goto LABEL_19;
    }
    v38 = v115;
    sub_10000DB44((uint64_t)v26, v115, type metadata accessor for WidgetMusicItem);
    goto LABEL_6;
  }
  v39 = *(_QWORD *)&v32[*(int *)(v27 + 28)];
  if (*(_QWORD *)(v39 + 16))
  {
    v38 = v115;
    sub_10000D964(v39 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)), v115, type metadata accessor for WidgetMusicItem);
LABEL_6:
    v40 = (uint64_t)v106;
    v41 = v107;
    goto LABEL_7;
  }
  v38 = v115;
  v40 = (uint64_t)v106;
  v41 = v107;
  if (qword_100547848 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v92 = sub_10000D78C(v94, (uint64_t)qword_100561330);
  sub_10000D964(v92, v38, type metadata accessor for WidgetMusicItem);
LABEL_7:
  v42 = sub_10000E750((uint64_t)v32, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v42);
  *((_QWORD *)v13 + 1) = 0x4014000000000000;
  v13[16] = 0;
  v43 = sub_10000B4C8(&qword_10054AC90);
  sub_10007F6D4(v2, v38, (uint64_t)&v13[*(int *)(v43 + 44)]);
  sub_10007FFE8();
  v44 = sub_100034A18((uint64_t)v10);
  v45 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  v46 = v111;
  v47 = v45(v10, v111);
  v48 = static Edge.Set.all.getter(v47);
  v49 = EdgeInsets.init(_all:)(v44);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  sub_100011370((uint64_t)v13, v40, &qword_1005499C8);
  v56 = v40 + *(int *)(v105 + 36);
  *(_BYTE *)v56 = v48;
  *(double *)(v56 + 8) = v49;
  *(_QWORD *)(v56 + 16) = v51;
  *(_QWORD *)(v56 + 24) = v53;
  *(_QWORD *)(v56 + 32) = v55;
  *(_BYTE *)(v56 + 40) = 0;
  sub_100011694((uint64_t)v13, &qword_1005499C8);
  sub_10003EE7C((uint64_t)v30);
  v57 = sub_100081594();
  v59 = v58;
  sub_10000E750((uint64_t)v30, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_10007FFE8();
  v60 = sub_100034A18((uint64_t)v10);
  v45(v10, v46);
  sub_10007FFE8();
  v61 = sub_100034A18((uint64_t)v10);
  v45(v10, v46);
  v62 = v109;
  sub_10003DB40(v57, v59, v109, v60, v61);
  swift_bridgeObjectRelease(v59);
  sub_100011694(v40, &qword_100549998);
  sub_10003EE7C((uint64_t)v30);
  v63 = v110;
  sub_10000D964((uint64_t)v30, v110, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_100011370(v62, v63 + *(int *)(v108 + 36), &qword_10054AC68);
  sub_10000E750((uint64_t)v30, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v64 = sub_100011694(v62, &qword_10054AC68);
  v65 = static Alignment.topTrailing.getter(v64);
  v67 = v66;
  v69 = v112;
  v68 = (uint64_t)v113;
  v70 = (uint64_t)&v113[*(int *)(v112 + 36)];
  sub_100081820(v2, v70);
  v71 = (uint64_t *)(v70 + *(int *)(sub_10000B4C8(&qword_1005495F0) + 36));
  *v71 = v65;
  v71[1] = v67;
  sub_100011530(v63, v68, &qword_10054AC70);
  sub_10003EE7C((uint64_t)v30);
  LOBYTE(v65) = sub_100081B90();
  sub_10000E750((uint64_t)v30, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v65 & 1) == 0)
  {
    v76 = v115 + *(int *)(v94 + 28);
    v73 = type metadata accessor for URL(0);
    v75 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v114, v76, v73);
    goto LABEL_11;
  }
  v72 = v93;
  URL.init(string:)(0xD000000000000016, 0x8000000100445260);
  v73 = type metadata accessor for URL(0);
  v74 = *(_QWORD *)(v73 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73);
  v75 = (uint64_t)v114;
  if ((_DWORD)result == 1)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v114, v72, v73);
LABEL_11:
  v77 = v98;
  type metadata accessor for URL(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v75, 0, 1, v73);
  v78 = sub_100095428();
  View.widgetURL(_:)(v75, v69, v78);
  sub_100011694(v75, &qword_100547A38);
  sub_100011694(v68, &qword_10054AC78);
  sub_10003EE7C((uint64_t)v30);
  v79 = sub_100081B90();
  sub_10000E750((uint64_t)v30, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v79 & 1) != 0)
  {
    v81 = v101;
    v80 = v102;
    v82 = v103;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v102 + 104))(v101, enum case for ColorScheme.light(_:), v103);
    v83 = v104;
  }
  else
  {
    type metadata accessor for RecentlyPlayedSmallContentView(0);
    v81 = v101;
    sub_10003E9D0(v101);
    v82 = v103;
    v83 = v104;
    v80 = v102;
  }
  v85 = v99;
  v84 = v100;
  v86 = (uint64_t)v97;
  v87 = v95;
  KeyPath = swift_getKeyPath(&unk_100427138);
  v89 = (uint64_t *)(v86 + *(int *)(v87 + 36));
  v90 = sub_10000B4C8(&qword_100548860);
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))((char *)v89 + *(int *)(v90 + 28), v81, v82);
  *v89 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v86, v77, v84);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v82);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v77, v84);
  v91 = v96;
  sub_100011530(v86, v96, &qword_10054AC88);
  sub_100011530(v91, v83, &qword_10054AC88);
  return sub_10000E750(v115, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_10007F6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t OpaqueTypeConformance2;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char v50;
  char *v51;
  char v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;

  v102 = (_QWORD *)a2;
  v117 = a3;
  v4 = type metadata accessor for Text.TruncationMode(0);
  v114 = *(_QWORD *)(v4 - 8);
  v115 = v4;
  __chkstk_darwin(v4);
  v113 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000B4C8(&qword_1005499D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_1005499D8);
  __chkstk_darwin(v9);
  v106 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_10000B4C8(&qword_10054ACA8);
  __chkstk_darwin(v108);
  v111 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_10000B4C8(&qword_10054ACB0);
  v12 = __chkstk_darwin(v109);
  v116 = (uint64_t)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v110 = (char *)&v100 - v15;
  __chkstk_darwin(v14);
  v112 = (uint64_t)&v100 - v16;
  v17 = type metadata accessor for ArtworkView(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_10000B4C8(&qword_100548A88);
  v20 = __chkstk_darwin(v103);
  v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v100 = (uint64_t)&v100 - v23;
  v101 = sub_10000B4C8(&qword_10054ACB8);
  __chkstk_darwin(v101);
  v25 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for WidgetLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v32 = (char *)&v100 - v31;
  v33 = sub_10000B4C8(&qword_10054ACC0);
  v34 = __chkstk_darwin(v33);
  v107 = (uint64_t)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v119 = (uint64_t)&v100 - v36;
  v120 = a1;
  v37 = sub_10007FFE8();
  static WidgetLocation.lockScreen.getter(v37);
  LOBYTE(a1) = static WidgetLocation.== infix(_:_:)(v32, v30);
  v38 = *(void (**)(char *, uint64_t))(v27 + 8);
  v104 = v30;
  v38(v30, v26);
  v39 = v32;
  v105 = v26;
  v118 = v38;
  v38(v32, v26);
  if ((a1 & 1) != 0)
  {
    v40 = v102;
    if (qword_1005477F8 != -1)
      swift_once(&qword_1005477F8, sub_100033F98);
    v41 = sub_10000B4C8(&qword_100548FC0);
    v42 = sub_10000D78C(v41, (uint64_t)qword_1005612A8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v25, v42, v41);
    swift_storeEnumTagMultiPayload(v25, v101, 0);
    v43 = sub_100011650(&qword_100548FD8);
    v44 = sub_100034E40();
    v121 = v43;
    v122 = v44;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v121, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    v46 = sub_1000954CC();
    v47 = _ConditionalContent<>.init(storage:)(v25, v41, v103, OpaqueTypeConformance2, v46);
  }
  else
  {
    v40 = v102;
    sub_10000D964((uint64_t)v102, (uint64_t)v19, type metadata accessor for WidgetMusicItem);
    v48 = type metadata accessor for WidgetMusicItem(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v19, 0, 1, v48);
    v49 = Corner.small.unsafeMutableAddressor();
    v50 = *((_BYTE *)v49 + 16);
    v51 = &v19[*(int *)(v17 + 20)];
    *(_OWORD *)v51 = *(_OWORD *)v49;
    v51[16] = v50;
    v52 = static Edge.Set.trailing.getter(v49);
    if (qword_100547830 != -1)
      swift_once(&qword_100547830, sub_1000347B0);
    v53 = EdgeInsets.init(_all:)(*(double *)&qword_100561328);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    sub_10000D964((uint64_t)v19, (uint64_t)v22, type metadata accessor for ArtworkView);
    v60 = v103;
    v61 = &v22[*(int *)(v103 + 36)];
    *v61 = v52;
    *((double *)v61 + 1) = v53;
    *((_QWORD *)v61 + 2) = v55;
    *((_QWORD *)v61 + 3) = v57;
    *((_QWORD *)v61 + 4) = v59;
    v61[40] = 0;
    sub_10000E750((uint64_t)v19, type metadata accessor for ArtworkView);
    v62 = v100;
    sub_100011530((uint64_t)v22, v100, &qword_100548A88);
    sub_100011370(v62, (uint64_t)v25, &qword_100548A88);
    swift_storeEnumTagMultiPayload(v25, v101, 1);
    v63 = sub_10000B4C8(&qword_100548FC0);
    v64 = sub_100011650(&qword_100548FD8);
    v65 = sub_100034E40();
    v121 = v64;
    v122 = v65;
    v66 = swift_getOpaqueTypeConformance2(&v121, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    v67 = sub_1000954CC();
    _ConditionalContent<>.init(storage:)(v25, v63, v60, v66, v67);
    v47 = sub_100011694(v62, &qword_100548A88);
  }
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v47);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v68 = sub_10000B4C8(&qword_10054ACD0);
  v69 = sub_1000801CC(v120, v40, (uint64_t)&v8[*(int *)(v68 + 44)]);
  v70 = static Alignment.leading.getter(v69);
  v71 = v106;
  sub_10003F4AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v106, 0.0, 1, 0.0, 1, v70, v72);
  sub_100011694((uint64_t)v8, &qword_1005499D0);
  v73 = v39;
  v74 = sub_10007FFE8();
  v75 = v104;
  static WidgetLocation.lockScreen.getter(v74);
  v76 = static WidgetLocation.== infix(_:_:)(v73, v75);
  v77 = v105;
  v78 = v118;
  v118(v75, v105);
  v78(v73, v77);
  if ((v76 & 1) != 0)
    v79 = 2;
  else
    v79 = 1;
  KeyPath = swift_getKeyPath(&unk_100427168);
  v81 = v111;
  sub_100011370(v71, v111, &qword_1005499D8);
  v82 = v81 + *(int *)(v108 + 36);
  *(_QWORD *)v82 = KeyPath;
  *(_QWORD *)(v82 + 8) = v79;
  *(_BYTE *)(v82 + 16) = 0;
  sub_100011694(v71, &qword_1005499D8);
  v84 = v113;
  v83 = v114;
  v85 = v115;
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v113, enum case for Text.TruncationMode.tail(_:), v115);
  v86 = swift_getKeyPath(&unk_100427198);
  v87 = (uint64_t)v110;
  v88 = (uint64_t *)&v110[*(int *)(v109 + 36)];
  v89 = sub_10000B4C8(&qword_10054ACD8);
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))((char *)v88 + *(int *)(v89 + 28), v84, v85);
  *v88 = v86;
  sub_100011370(v81, v87, &qword_10054ACA8);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
  sub_100011694(v81, &qword_10054ACA8);
  v90 = v112;
  sub_100011530(v87, v112, &qword_10054ACB0);
  v91 = sub_10007FFE8();
  static WidgetLocation.lockScreen.getter(v91);
  LOBYTE(v88) = static WidgetLocation.== infix(_:_:)(v73, v75);
  v92 = v118;
  v118(v75, v77);
  v92(v73, v77);
  v93 = v119;
  v94 = v107;
  sub_100011370(v119, v107, &qword_10054ACC0);
  v95 = v116;
  sub_100011370(v90, v116, &qword_10054ACB0);
  v96 = v117;
  sub_100011370(v94, v117, &qword_10054ACC0);
  v97 = sub_10000B4C8(&qword_10054ACE0);
  sub_100011370(v95, v96 + *(int *)(v97 + 48), &qword_10054ACB0);
  v98 = v96 + *(int *)(v97 + 64);
  *(_QWORD *)v98 = 0;
  *(_BYTE *)(v98 + 8) = v88 & 1;
  *(_BYTE *)(v98 + 9) = (v88 & 1) == 0;
  sub_100011694(v90, &qword_10054ACB0);
  sub_100011694(v93, &qword_10054ACC0);
  sub_100011694(v95, &qword_10054ACB0);
  return sub_100011694(v94, &qword_10054ACC0);
}

uint64_t sub_10007FFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for RecentlyPlayedSmallContentView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetRenderingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v26 - v10;
  v12 = sub_10003EC6C((uint64_t)&v26 - v10);
  static WidgetRenderingMode.vibrant.getter(v12);
  v13 = static WidgetRenderingMode.== infix(_:_:)(v11, v9);
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  sub_10000D964(v1, (uint64_t)v4, type metadata accessor for RecentlyPlayedSmallContentView);
  if ((v13 & 1) != 0)
  {
    v15 = &v4[*(int *)(v2 + 20)];
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    sub_10004C60C(*(_QWORD *)v15, v17);
    v18 = sub_10003EC98(v16, v17);
    sub_10004CAC0(v16, v17);
    v19 = sub_10000E750((uint64_t)v4, type metadata accessor for RecentlyPlayedSmallContentView);
    if ((v18 & 1) == 0)
      return static WidgetLocation.lockScreen.getter(v19);
  }
  else
  {
    sub_10000E750((uint64_t)v4, type metadata accessor for RecentlyPlayedSmallContentView);
  }
  v21 = v1 + *(int *)(v2 + 20);
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10004C60C(*(_QWORD *)v21, v23);
  v24 = sub_10003EC98(v22, v23);
  v25 = sub_10004CAC0(v22, v23);
  if ((v24 & 1) != 0)
    return static WidgetLocation.homeScreen.getter(v25);
  else
    return static WidgetLocation.standBy.getter(v25);
}

uint64_t sub_1000801CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  void (*v37)(char *, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  char *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  uint64_t v119;
  unsigned __int8 v120;
  uint64_t v121;
  uint64_t v122;

  v109 = a2;
  v5 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v5);
  v94 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v7 = __chkstk_darwin(v92);
  v91 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v88 = (uint64_t)&v86 - v9;
  v107 = type metadata accessor for WidgetMusicItem(0);
  __chkstk_darwin(v107);
  v87 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for PlaybackButtonLarge(0);
  __chkstk_darwin(v89);
  v93 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_10000B4C8(&qword_10054ACE8);
  v110 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v90 = (uint64_t)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_10054ACF0);
  v14 = __chkstk_darwin(v13);
  v113 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v112 = (char *)&v86 - v16;
  v103 = type metadata accessor for AccessibilityChildBehavior(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10000B4C8(&qword_10054ACF8);
  __chkstk_darwin(v95);
  v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_10000B4C8(&qword_10054AD00);
  v116 = *(_QWORD *)(v105 - 8);
  v21 = __chkstk_darwin(v105);
  v108 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v86 - v24;
  __chkstk_darwin(v23);
  v115 = (char *)&v86 - v26;
  v27 = type metadata accessor for RedactionReasons(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v86 - v32;
  type metadata accessor for RecentlyPlayedSmallContentView(0);
  v111 = a1;
  v34 = sub_10003EE50((uint64_t)v33);
  static RedactionReasons.placeholder.getter(v34);
  v35 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
  v36 = dispatch thunk of SetAlgebra.isSuperset(of:)(v31, v27, v35);
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v31, v27);
  v38 = (_QWORD *)((uint64_t (*)(char *, uint64_t))v37)(v33, v27);
  v39 = 0;
  v40 = 0;
  v41 = 0;
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v45 = 0;
  v106 = v36;
  if ((v36 & 1) != 0)
  {
    v46 = static Alignment.center.getter(v38);
    v39 = 1;
    v38 = _FrameLayout.init(width:height:alignment:)(&v117, 0, 1, 0x4034000000000000, 0, v46, v47);
    v40 = v117;
    v41 = v118;
    v42 = v119;
    v43 = v120;
    v44 = v121;
    v45 = v122;
  }
  v96 = v45;
  v97 = v44;
  v98 = v43;
  v99 = v42;
  v100 = v41;
  v102 = v40;
  v104 = v39;
  *(_QWORD *)v20 = static HorizontalAlignment.leading.getter(v38);
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  v48 = sub_10000B4C8(&qword_10054AD08);
  v49 = v109;
  v50 = sub_1000809A8(v109, (uint64_t)&v20[*(int *)(v48 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v50);
  v51 = sub_100012324(&qword_10054AD10, &qword_10054ACF8, (const char *)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v18, v95, v51);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v18, v103);
  sub_100011694((uint64_t)v20, &qword_10054ACF8);
  v52 = v105;
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v25, v105);
  v53 = 1;
  v54 = (uint64_t)v112;
  if (*((_BYTE *)v49 + *(int *)(v107 + 60)) == 1)
  {
    v55 = v87;
    sub_10000D964((uint64_t)v49, v87, type metadata accessor for WidgetMusicItem);
    v56 = v88;
    sub_10003EE7C(v88);
    v57 = v92;
    v58 = v94;
    sub_100011370(v56 + *(int *)(v92 + 24), v94, &qword_100548310);
    sub_10000E750(v56, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    v59 = v91;
    sub_10003EE7C(v91);
    v60 = *(_BYTE *)(v59 + *(int *)(v57 + 20));
    sub_10000E750(v59, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    v61 = v93;
    sub_10000DB44(v55, v93, type metadata accessor for WidgetMusicItem);
    v62 = v89;
    v63 = sub_100011530(v58, v61 + *(int *)(v89 + 20), &qword_100548310);
    *(_BYTE *)(v61 + *(int *)(v62 + 24)) = v60;
    v64 = static Edge.Set.top.getter(v63);
    v65 = EdgeInsets.init(_all:)(5.0);
    v67 = v66;
    v69 = v68;
    v71 = v70;
    v72 = v90;
    sub_10000D964(v61, v90, type metadata accessor for PlaybackButtonLarge);
    v73 = v72 + *(int *)(v114 + 36);
    *(_BYTE *)v73 = v64;
    *(double *)(v73 + 8) = v65;
    *(_QWORD *)(v73 + 16) = v67;
    *(_QWORD *)(v73 + 24) = v69;
    *(_QWORD *)(v73 + 32) = v71;
    *(_BYTE *)(v73 + 40) = 0;
    sub_10000E750(v61, type metadata accessor for PlaybackButtonLarge);
    sub_100011530(v72, v54, &qword_10054ACE8);
    v53 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v54, v53, 1, v114);
  v75 = v115;
  v74 = v116;
  v76 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
  v77 = v108;
  v76(v108, v115, v52);
  v78 = v113;
  sub_100011370(v54, v113, &qword_10054ACF0);
  v79 = v104;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = v79;
  v80 = v100;
  *(_QWORD *)(a3 + 16) = v102;
  *(_QWORD *)(a3 + 24) = v80;
  v81 = v98;
  *(_QWORD *)(a3 + 32) = v99;
  *(_QWORD *)(a3 + 40) = v81;
  v82 = v96;
  *(_QWORD *)(a3 + 48) = v97;
  *(_QWORD *)(a3 + 56) = v82;
  *(_BYTE *)(a3 + 64) = (v106 & 1) == 0;
  v83 = sub_10000B4C8(&qword_10054AD18);
  v76((char *)(a3 + *(int *)(v83 + 48)), v77, v52);
  sub_100011370(v78, a3 + *(int *)(v83 + 64), &qword_10054ACF0);
  sub_100011694(v54, &qword_10054ACF0);
  v84 = *(void (**)(char *, uint64_t))(v74 + 8);
  v84(v75, v52);
  sub_100011694(v78, &qword_10054ACF0);
  return ((uint64_t (*)(char *, uint64_t))v84)(v77, v52);
}

uint64_t sub_1000809A8@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t KeyPath;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  _QWORD *v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  char *v126;
  char v127;
  char v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD v186[10];

  v175 = a1;
  v174 = a2;
  v179 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v179);
  v183 = (uint64_t *)((char *)&v171 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v3);
  v182 = (char *)&v171 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v7 = (char *)&v171 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_10000B4C8(&qword_100549700);
  __chkstk_darwin(v178);
  v12 = (char *)&v171 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_100549708);
  v184 = *(_QWORD *)(v13 - 8);
  v185 = v13;
  v14 = __chkstk_darwin(v13);
  v181 = (char *)&v171 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v180 = (uint64_t)&v171 - v16;
  v17 = type metadata accessor for WidgetLocation(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v171 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v171 - v22;
  v24 = sub_10000B4C8(&qword_10054AD20);
  v25 = __chkstk_darwin(v24);
  v176 = (uint64_t)&v171 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v177 = (uint64_t)&v171 - v27;
  v28 = sub_10007FFE8();
  static WidgetLocation.lockScreen.getter(v28);
  v29 = static WidgetLocation.== infix(_:_:)(v23, v21);
  v30 = *(void (**)(char *, uint64_t))(v18 + 8);
  v30(v21, v17);
  v30(v23, v17);
  if ((v29 & 1) != 0)
  {
    sub_10003EE7C((uint64_t)v10);
    v31 = sub_100081B90();
    v171 = v12;
    if ((v31 & 1) != 0)
    {
      v32 = LocalizedStringKey.init(stringLiteral:)(0x79616C5020776F4ELL, 0xEB00000000676E69);
      v33 = Text.init(_:tableName:bundle:comment:)(v32);
    }
    else
    {
      if (qword_1005478E0 != -1)
        swift_once(&qword_1005478E0, sub_10009F4CC);
      v186[0] = qword_100561408;
      v186[1] = unk_100561410;
      v40 = sub_10001D9DC();
      swift_bridgeObjectRetain();
      v33 = Text.init<A>(_:)(v186, &type metadata for String, v40);
    }
    v41 = v33;
    v42 = v34;
    v172 = v36;
    v43 = v35 & 1;
    sub_10000E750((uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    v44 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 0.0);
    v45 = objc_msgSend(v44, "fontName");

    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v48 = v47;

    v49 = v173;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.caption2(_:), v173);
    v50 = static Font.custom(_:size:relativeTo:)(v46, v48, v7, 9.0);
    swift_bridgeObjectRelease(v48);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v49);
    v51 = v172;
    v52 = Text.font(_:)(v50, v41, v42, v43, v172);
    v54 = v53;
    v56 = v55;
    v57 = v41;
    v59 = v58;
    swift_release(v50);
    LOBYTE(v49) = v56 & 1;
    sub_10001DA20(v57, v42, v43);
    v60 = swift_bridgeObjectRelease(v51);
    v61 = static Font.Weight.semibold.getter(v60);
    v62 = Text.fontWeight(_:)(*(_QWORD *)&v61, 0, v52, v54, v56 & 1, v59);
    v64 = v63;
    v66 = v65;
    LOBYTE(v57) = v67 & 1;
    sub_10001DA20(v52, v54, v49);
    swift_bridgeObjectRelease(v59);
    v68 = enum case for Text.Case.uppercase(_:);
    v69 = type metadata accessor for Text.Case(0);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = (uint64_t)v182;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v182, v68, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v69);
    KeyPath = swift_getKeyPath(&unk_100427228);
    v73 = v183;
    sub_100011370(v71, (uint64_t)v183 + *(int *)(v179 + 28), &qword_100548A48);
    *v73 = KeyPath;
    v74 = (uint64_t)v171;
    sub_100011370((uint64_t)v73, (uint64_t)&v171[*(int *)(v178 + 36)], &qword_100548A40);
    *(_QWORD *)v74 = v62;
    *(_QWORD *)(v74 + 8) = v64;
    *(_BYTE *)(v74 + 16) = v57;
    *(_QWORD *)(v74 + 24) = v66;
    sub_10002EBA0(v62, v64, v57);
    swift_bridgeObjectRetain();
    sub_100011694((uint64_t)v73, &qword_100548A40);
    sub_100011694(v71, &qword_100548A48);
    sub_10001DA20(v62, v64, v57);
    swift_bridgeObjectRelease(v66);
    if (qword_1005477D8 != -1)
      swift_once(&qword_1005477D8, sub_100033C14);
    v75 = sub_10000B4C8(&qword_100548AA0);
    v76 = sub_10000D78C(v75, (uint64_t)qword_100561258);
    v39 = v185;
    v77 = (uint64_t)v181;
    sub_100011370(v76, (uint64_t)&v181[*(int *)(v185 + 36)], &qword_100548AA0);
    sub_100011530(v74, v77, &qword_100549700);
    v78 = v77;
    v79 = v180;
    sub_100011530(v78, v180, &qword_100549708);
    v80 = v79;
    v38 = v177;
    sub_100011530(v80, v177, &qword_100549708);
    v37 = 0;
  }
  else
  {
    v37 = 1;
    v38 = v177;
    v39 = v185;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v184 + 56))(v38, v37, 1, v39);
  v81 = v175;
  v83 = v175[2];
  v82 = v175[3];
  v84 = *(_QWORD *)((char *)v81 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 56));
  v85 = *(_QWORD *)(v84 + 16);
  if (v85)
  {
    v172 = v83;
    v86 = qword_100547858;
    swift_bridgeObjectRetain_n(v84, 2);
    v173 = v82;
    swift_bridgeObjectRetain();
    if (v86 != -1)
      swift_once(&qword_100547858, sub_10003830C);
    v87 = 0;
    v88 = 0;
    LODWORD(v185) = 0;
    v89 = 0xE000000000000000;
    v90 = _swiftEmptyArrayStorage;
    v178 = v85;
    v179 = v84;
    do
    {
      v183 = (uint64_t *)v89;
      v184 = (uint64_t)v90;
      v91 = v88;
      v92 = v84 + v87++;
      TextBadge.view(favoriteBadgeConfiguration:)(qword_100549040, *(_BYTE *)(v92 + 32));
      v94 = v93;
      v96 = v95;
      v98 = v97;
      v100 = v99 & 1;
      v101 = static Font.caption.getter(v93);
      v102 = Text.font(_:)(v101, v94, v96, v100, v98);
      v104 = v103;
      v106 = v105;
      v182 = v107;
      swift_release(v101);
      v108 = v106 & 1;
      sub_10001DA20(v94, v96, v100);
      swift_bridgeObjectRelease(v98);
      LOBYTE(v100) = v185 & 1;
      v109 = v91;
      v110 = v91;
      v111 = (char *)v183;
      v112 = v184;
      v113 = v182;
      v180 = static Text.+ infix(_:_:)(v110, v183, v185 & 1, v184, v102, v104, v108, v182);
      v181 = v114;
      v116 = v115;
      LODWORD(v185) = v117 & 1;
      v118 = v104;
      v119 = v178;
      sub_10001DA20(v102, v118, v108);
      swift_bridgeObjectRelease(v113);
      v120 = v109;
      v121 = (uint64_t)v111;
      v90 = v116;
      v88 = v180;
      v89 = (uint64_t)v181;
      v122 = v100;
      v84 = v179;
      sub_10001DA20(v120, v121, v122);
      swift_bridgeObjectRelease(v112);
    }
    while (v119 != v87);
    swift_bridgeObjectRelease_n(v84, 2);
    v82 = v173;
    v83 = v172;
  }
  else
  {
    swift_bridgeObjectRetain();
    v88 = 0;
    LODWORD(v185) = 0;
    v90 = _swiftEmptyArrayStorage;
    v89 = 0xE000000000000000;
  }
  v123 = v83;
  v124 = v185;
  v125 = static Text.+ infix(_:_:)(v123, v82, 0, _swiftEmptyArrayStorage, v88, v89, v185, v90);
  v182 = v126;
  v183 = (uint64_t *)v125;
  v128 = v127;
  v181 = v129;
  sub_10001DA20(v88, v89, v124);
  swift_bridgeObjectRelease(v82);
  v130 = swift_bridgeObjectRelease(v90);
  v131 = static Font.caption.getter(v130);
  v185 = Font.bold()();
  swift_release(v131);
  v184 = swift_getKeyPath(&unk_1004271C8);
  if (qword_1005477D0 != -1)
    swift_once(&qword_1005477D0, sub_100033BF8);
  v132 = qword_100561250;
  v179 = swift_getKeyPath(&unk_1004271F8);
  v133 = v175[5];
  if (v133)
    v134 = v175[4];
  else
    v134 = 0;
  if (v133)
    v135 = v175[5];
  else
    v135 = 0xE000000000000000;
  v180 = v132;
  swift_retain(v132);
  v136 = swift_bridgeObjectRetain();
  v137 = static Font.caption.getter(v136);
  v138 = Text.font(_:)(v137, v134, v135, 0, _swiftEmptyArrayStorage);
  v140 = v139;
  v142 = v141;
  v144 = v143;
  swift_bridgeObjectRelease(v135);
  swift_release(v137);
  if (qword_1005477D8 != -1)
    swift_once(&qword_1005477D8, sub_100033C14);
  v145 = v142 & 1;
  v146 = sub_10000B4C8(&qword_100548AA0);
  v147 = sub_10000D78C(v146, (uint64_t)qword_100561258);
  v148 = sub_100012324(&qword_100549740, &qword_100548AA0, (const char *)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v149 = Text.foregroundStyle<A>(_:)(v147, v138, v140, v145, v144, v146, v148);
  v151 = v150;
  v178 = v152;
  v154 = v153 & 1;
  sub_10001DA20(v138, v140, v145);
  swift_bridgeObjectRelease(v144);
  v155 = v176;
  sub_100011370(v177, v176, &qword_10054AD20);
  LOBYTE(v186[0]) = v128 & 1;
  v156 = v174;
  sub_100011370(v155, v174, &qword_10054AD20);
  v157 = sub_10000B4C8(&qword_10054AD28);
  v158 = v156 + *(int *)(v157 + 48);
  v160 = (uint64_t)v182;
  v159 = (uint64_t)v183;
  *(_QWORD *)v158 = v183;
  *(_QWORD *)(v158 + 8) = v160;
  *(_BYTE *)(v158 + 16) = v128 & 1;
  v161 = v128 & 1;
  v163 = v180;
  v162 = v181;
  *(_QWORD *)(v158 + 24) = v181;
  *(_WORD *)(v158 + 32) = 256;
  v165 = v184;
  v164 = v185;
  *(_QWORD *)(v158 + 40) = v184;
  *(_QWORD *)(v158 + 48) = v164;
  v166 = v179;
  *(_QWORD *)(v158 + 56) = v179;
  *(_QWORD *)(v158 + 64) = v163;
  v167 = v156 + *(int *)(v157 + 64);
  *(_QWORD *)v167 = v149;
  *(_QWORD *)(v167 + 8) = v151;
  *(_BYTE *)(v167 + 16) = v154;
  v168 = v178;
  *(_QWORD *)(v167 + 24) = v178;
  sub_10002EBA0(v159, v160, v161);
  swift_bridgeObjectRetain();
  swift_retain(v165);
  v169 = v185;
  swift_retain(v185);
  swift_retain(v166);
  swift_retain(v163);
  sub_10002EBA0(v149, v151, v154);
  swift_bridgeObjectRetain();
  sub_100011694(v177, &qword_10054AD20);
  sub_10001DA20(v149, v151, v154);
  swift_bridgeObjectRelease(v168);
  sub_10001DA20(v159, v160, v186[0]);
  swift_release(v163);
  swift_release(v166);
  swift_release(v169);
  swift_release(v184);
  swift_bridgeObjectRelease(v162);
  return sub_100011694(v176, &qword_10054AD20);
}

uint64_t sub_100081594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v24;

  v1 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v24 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v24 - v12;
  v14 = *(_BYTE *)(v0 + *(int *)(v11 + 20)) & 0xFE;
  sub_10000D964(v0, (uint64_t)&v24 - v12, v15);
  if (v14 == 2)
  {
    sub_10000E750((uint64_t)v13, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    sub_10000D964(v0, (uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
LABEL_4:
    sub_10000E750((uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    goto LABEL_5;
  }
  sub_100011370((uint64_t)&v13[v4[6]], (uint64_t)v3, &qword_100548310);
  sub_10000E750((uint64_t)v13, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v16 = type metadata accessor for WidgetMusicItem(0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v3, 1, v16);
  sub_100011694((uint64_t)v3, &qword_100548310);
  sub_10000D964(v0, (uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (v17 == 1)
    goto LABEL_4;
  v21 = *(void **)&v10[v4[8]];
  v22 = v21;
  sub_10000E750((uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (v21)
  {

    return 0;
  }
LABEL_5:
  v18 = (uint64_t *)(v0 + v4[10]);
  v20 = *v18;
  v19 = v18[1];
  sub_10000D964(v0, (uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (!v19)
  {
    if (*(_QWORD *)(*(_QWORD *)&v7[v4[7]] + 16))
    {
      v20 = 0;
    }
    else
    {
      if (qword_100547820 != -1)
        swift_once(&qword_100547820, sub_1000345E8);
      v20 = qword_100561308;
      swift_bridgeObjectRetain();
    }
  }
  swift_bridgeObjectRetain();
  sub_10000E750((uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  return v20;
}

uint64_t sub_100081820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned __int8 v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unsigned __int8 v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a2;
  v3 = sub_10000B4C8(&qword_100548BD0);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10000B4C8(&qword_100549640);
  __chkstk_darwin(v53);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000B4C8(&qword_100549648);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v52 - v16;
  v54 = a1;
  v18 = sub_10007FFE8();
  static WidgetLocation.lockScreen.getter(v18);
  v19 = sub_10001254C(&qword_100548FB8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetLocation, (uint64_t)&protocol conformance descriptor for WidgetLocation);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(v17, v15, v11, v19);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  v20(v17, v11);
  if ((a1 & 1) != 0)
  {
    v21 = 1;
    v23 = v56;
    v22 = v57;
  }
  else
  {
    if (qword_100547800 != -1)
      swift_once(&qword_100547800, sub_100034248);
    v24 = sub_10000D78C(v3, (uint64_t)qword_1005612C0);
    v25 = sub_100011370(v24, (uint64_t)v5, &qword_100548BD0);
    v26 = static Edge.Set.trailing.getter(v25);
    v27 = v26;
    v28 = static Edge.Set.trailing.getter(v26);
    sub_10007FFE8();
    v29 = sub_100034B64(v28, (uint64_t)v17);
    v20(v17, v11);
    v30 = EdgeInsets.init(_all:)(v29);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    sub_100011370((uint64_t)v5, (uint64_t)v7, &qword_100548BD0);
    v37 = &v7[*(int *)(v53 + 36)];
    *v37 = v27;
    *((double *)v37 + 1) = v30;
    *((_QWORD *)v37 + 2) = v32;
    *((_QWORD *)v37 + 3) = v34;
    *((_QWORD *)v37 + 4) = v36;
    v37[40] = 0;
    v38 = sub_100011694((uint64_t)v5, &qword_100548BD0);
    v39 = static Edge.Set.top.getter(v38);
    v40 = v39;
    v41 = static Edge.Set.top.getter(v39);
    sub_10007FFE8();
    v42 = sub_100034B64(v41, (uint64_t)v17);
    v20(v17, v11);
    v43 = EdgeInsets.init(_all:)(v42);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    sub_100011370((uint64_t)v7, (uint64_t)v10, &qword_100549640);
    v23 = v56;
    v50 = &v10[*(int *)(v56 + 36)];
    *v50 = v40;
    *((double *)v50 + 1) = v43;
    *((_QWORD *)v50 + 2) = v45;
    *((_QWORD *)v50 + 3) = v47;
    *((_QWORD *)v50 + 4) = v49;
    v50[40] = 0;
    sub_100011694((uint64_t)v7, &qword_100549640);
    v22 = v57;
    sub_100011530((uint64_t)v10, v57, &qword_100549648);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v22, v21, 1, v23);
}

uint64_t sub_100081B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  int v14;
  void *v16;
  id v17;
  uint64_t v18;

  v1 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v18 - v9;
  v11 = *(_BYTE *)(v0 + *(int *)(v8 + 20)) & 0xFE;
  sub_10000D964(v0, (uint64_t)&v18 - v9, v12);
  if (v11 == 2)
  {
    sub_10000E750((uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    sub_10000D964(v0, (uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
LABEL_4:
    sub_10000E750((uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    return 0;
  }
  sub_100011370((uint64_t)&v10[*(int *)(v4 + 24)], (uint64_t)v3, &qword_100548310);
  sub_10000E750((uint64_t)v10, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v13 = type metadata accessor for WidgetMusicItem(0);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v3, 1, v13);
  sub_100011694((uint64_t)v3, &qword_100548310);
  sub_10000D964(v0, (uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (v14 == 1)
    goto LABEL_4;
  v16 = *(void **)&v7[*(int *)(v4 + 32)];
  v17 = v16;
  sub_10000E750((uint64_t)v7, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if (!v16)
    return 0;

  return 1;
}

ValueMetadata *_s28RecentlyPlayedWidgetEntryKeyVMa()
{
  return &_s28RecentlyPlayedWidgetEntryKeyVN;
}

uint64_t *sub_100081D6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_10000B4C8(&qword_100547EE0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_100081E34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

uint64_t *sub_100081E98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_100081F34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_100547EE0);
    v4 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_100081FE8(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_10000B4C8(&qword_100547EE0);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100082080(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_100011694((uint64_t)a1, &qword_100547EE0);
    v4 = sub_10000B4C8(&qword_100547EE0);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for WidgetFamily(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100082130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008213C);
}

uint64_t sub_10008213C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_1005484F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10008217C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100082188);
}

uint64_t sub_100082188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000B4C8(&qword_1005484F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1000821CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10002E8E4(319, (unint64_t *)&qword_100548568, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

unint64_t sub_100082250()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10054A958;
  if (!qword_10054A958)
  {
    v1 = sub_100011650(&qword_10054A8B0);
    v3[0] = type metadata accessor for RecentlyPlayedContentView(255);
    v3[1] = sub_10001254C(&qword_10054A8A8, type metadata accessor for RecentlyPlayedContentView, (uint64_t)&unk_100426E14);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    v2[1] = sub_100012324(&qword_10054A960, &qword_10054A8B8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10054A958);
  }
  return result;
}

uint64_t sub_100082314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  char v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t KeyPath;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;

  v121 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v119 = *(_QWORD *)(v2 - 8);
  v120 = v2;
  __chkstk_darwin(v2);
  v118 = (uint64_t)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000B4C8(&qword_100547A38);
  v5 = __chkstk_darwin(v4);
  v110 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v131 = (char *)&v110 - v7;
  v126 = sub_10000B4C8(&qword_100549640);
  __chkstk_darwin(v126);
  v129 = (uint64_t)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10000B4C8(&qword_100549648);
  __chkstk_darwin(v127);
  v128 = (uint64_t)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100549A18);
  __chkstk_darwin(v10);
  v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10000B4C8(&qword_1005499E8);
  __chkstk_darwin(v122);
  v14 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000B4C8(&qword_10054AD30);
  __chkstk_darwin(v15);
  v124 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_10000B4C8(&qword_10054AD38);
  __chkstk_darwin(v123);
  v125 = (uint64_t)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_10000B4C8(&qword_10054AD40);
  __chkstk_darwin(v133);
  v132 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_10000B4C8(&qword_10054AD48);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v130 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_10000B4C8(&qword_10054AD50);
  v20 = __chkstk_darwin(v113);
  v115 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v114 = (uint64_t)&v110 - v22;
  v23 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v23);
  v25 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v31 = (char *)&v110 - v30;
  v32 = type metadata accessor for WidgetMusicItem(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v134 = (uint64_t)&v110 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v1;
  sub_10003EE7C((uint64_t)v31);
  v36 = sub_100081B90();
  v111 = v32;
  if ((v36 & 1) != 0)
  {
    sub_100011370((uint64_t)&v31[*(int *)(v26 + 24)], (uint64_t)v25, &qword_100548310);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      goto LABEL_21;
    }
    v38 = v134;
    sub_10000DB44((uint64_t)v25, v134, type metadata accessor for WidgetMusicItem);
    goto LABEL_6;
  }
  v39 = *(_QWORD *)&v31[*(int *)(v26 + 28)];
  if (*(_QWORD *)(v39 + 16))
  {
    v38 = v134;
    sub_10000D964(v39 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v134, type metadata accessor for WidgetMusicItem);
LABEL_6:
    v40 = (uint64_t)v124;
    goto LABEL_7;
  }
  v38 = v134;
  v40 = (uint64_t)v124;
  if (qword_100547848 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v109 = sub_10000D78C(v111, (uint64_t)qword_100561330);
  sub_10000D964(v109, v38, type metadata accessor for WidgetMusicItem);
LABEL_7:
  v41 = v122;
  v112 = v35;
  v42 = sub_10000E750((uint64_t)v31, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v42);
  *((_QWORD *)v12 + 1) = 0x4030000000000000;
  v12[16] = 0;
  v43 = sub_10000B4C8(&qword_10054AD58);
  v44 = sub_100082DA8(v38, v35, (uint64_t)&v12[*(int *)(v43 + 44)]);
  v45 = static Edge.Set.all.getter(v44);
  v46 = EdgeInsets.init(_all:)(16.0);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  sub_100011370((uint64_t)v12, (uint64_t)v14, &qword_100549A18);
  v53 = &v14[*(int *)(v41 + 36)];
  *v53 = v45;
  *((double *)v53 + 1) = v46;
  *((_QWORD *)v53 + 2) = v48;
  *((_QWORD *)v53 + 3) = v50;
  *((_QWORD *)v53 + 4) = v52;
  v53[40] = 0;
  sub_100011694((uint64_t)v12, &qword_100549A18);
  sub_10003EE7C((uint64_t)v29);
  v54 = sub_100081594();
  v56 = v55;
  sub_10000E750((uint64_t)v29, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_10003DDFC(v54, v56, v40, 16.0, 16.0);
  swift_bridgeObjectRelease(v56);
  sub_100011694((uint64_t)v14, &qword_1005499E8);
  sub_10003EE7C((uint64_t)v29);
  v57 = v125;
  sub_10000D964((uint64_t)v29, v125, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_100011370(v40, v57 + *(int *)(v123 + 36), &qword_10054AD30);
  sub_10000E750((uint64_t)v29, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v58 = sub_100011694(v40, &qword_10054AD30);
  v59 = static Alignment.topTrailing.getter(v58);
  v61 = v60;
  v62 = (uint64_t)v132;
  v63 = (uint64_t)&v132[*(int *)(v133 + 36)];
  if (qword_100547800 != -1)
    swift_once(&qword_100547800, sub_100034248);
  v64 = sub_10000B4C8(&qword_100548BD0);
  v65 = sub_10000D78C(v64, (uint64_t)qword_1005612C0);
  v66 = static Edge.Set.trailing.getter(v65);
  v67 = EdgeInsets.init(_all:)(10.0);
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v74 = v129;
  v75 = sub_100011370(v65, v129, &qword_100548BD0);
  v76 = v74 + *(int *)(v126 + 36);
  *(_BYTE *)v76 = v66;
  *(double *)(v76 + 8) = v67;
  *(_QWORD *)(v76 + 16) = v69;
  *(_QWORD *)(v76 + 24) = v71;
  *(_QWORD *)(v76 + 32) = v73;
  *(_BYTE *)(v76 + 40) = 0;
  v77 = static Edge.Set.top.getter(v75);
  v78 = EdgeInsets.init(_all:)(12.0);
  v80 = v79;
  v82 = v81;
  v84 = v83;
  v85 = v128;
  sub_100011370(v74, v128, &qword_100549640);
  v86 = v85 + *(int *)(v127 + 36);
  *(_BYTE *)v86 = v77;
  *(double *)(v86 + 8) = v78;
  *(_QWORD *)(v86 + 16) = v80;
  *(_QWORD *)(v86 + 24) = v82;
  *(_QWORD *)(v86 + 32) = v84;
  *(_BYTE *)(v86 + 40) = 0;
  sub_100011694(v74, &qword_100549640);
  sub_100011530(v85, v63, &qword_100549648);
  v87 = (uint64_t *)(v63 + *(int *)(sub_10000B4C8(&qword_10054AD60) + 36));
  *v87 = v59;
  v87[1] = v61;
  sub_100011530(v57, v62, &qword_10054AD38);
  sub_10003EE7C((uint64_t)v29);
  v88 = sub_100081B90();
  sub_10000E750((uint64_t)v29, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v89 = v130;
  if ((v88 & 1) == 0)
  {
    v94 = v134 + *(int *)(v111 + 28);
    v91 = type metadata accessor for URL(0);
    v93 = (uint64_t)v131;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v131, v94, v91);
    goto LABEL_13;
  }
  v90 = v110;
  URL.init(string:)(0xD000000000000016, 0x8000000100445260);
  v91 = type metadata accessor for URL(0);
  v92 = *(_QWORD *)(v91 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91);
  v93 = (uint64_t)v131;
  if ((_DWORD)result == 1)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v131, v90, v91);
  v62 = (uint64_t)v132;
LABEL_13:
  type metadata accessor for URL(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v93, 0, 1, v91);
  v95 = sub_100095594(&qword_10054AD68, &qword_10054AD40, &qword_10054AD70, &qword_10054AD38);
  View.widgetURL(_:)(v93, v133, v95);
  sub_100011694(v93, &qword_100547A38);
  sub_100011694(v62, &qword_10054AD40);
  sub_10003EE7C((uint64_t)v29);
  v96 = sub_100081B90();
  sub_10000E750((uint64_t)v29, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v96 & 1) != 0)
  {
    v98 = v118;
    v97 = v119;
    v99 = v120;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v119 + 104))(v118, enum case for ColorScheme.light(_:), v120);
    v100 = v121;
  }
  else
  {
    type metadata accessor for RecentlyPlayedMediumContentView(0);
    v98 = v118;
    sub_10003E9D0(v118);
    v99 = v120;
    v100 = v121;
    v97 = v119;
  }
  v101 = v117;
  v102 = v116;
  v103 = (uint64_t)v115;
  v104 = v113;
  KeyPath = swift_getKeyPath(&unk_100427138);
  v106 = (uint64_t *)(v103 + *(int *)(v104 + 36));
  v107 = sub_10000B4C8(&qword_100548860);
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))((char *)v106 + *(int *)(v107 + 28), v98, v99);
  *v106 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v102 + 16))(v103, v89, v101);
  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v98, v99);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v89, v101);
  v108 = v114;
  sub_100011530(v103, v114, &qword_10054AD50);
  sub_100011530(v108, v100, &qword_10054AD50);
  return sub_10000E750(v134, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_100082DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  void (*v47)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t *v48;
  char v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t KeyPath;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  double *v97;
  uint64_t v98;
  char v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  double *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  _QWORD *v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  _BYTE *v152;
  _BYTE *v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _BYTE *v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  _BYTE *v192;
  _BYTE *v193;
  uint64_t v194;
  _BYTE *v195;
  _BYTE *v196;
  char v197;
  _BYTE *v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  double v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _BYTE *v209;
  double *v210;
  uint64_t v211;
  char v212;
  double v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _BYTE *v220;
  double *v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _BYTE *v227;
  _BYTE *v228;
  uint64_t v229;
  _BYTE *v230;
  _BYTE *v231;
  uint64_t v232;
  _BYTE *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  _BYTE *v239;
  uint64_t v240;
  _BYTE *v241;
  uint64_t v242;
  uint64_t v243;
  _BYTE v245[12];
  int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _BYTE *v251;
  uint64_t v252;
  _BYTE *v253;
  uint64_t v254;
  _BYTE *v255;
  _BYTE *v256;
  _BYTE *v257;
  uint64_t v258;
  uint64_t v259;
  _BYTE *v260;
  uint64_t v261;
  _BYTE *v262;
  _BYTE *v263;
  _BYTE *v264;
  _BYTE *v265;
  uint64_t v266;
  uint64_t v267;
  _BYTE *v268;
  _BYTE *v269;
  uint64_t v270;
  _BYTE *v271;
  _BYTE *v272;
  _BYTE *v273;
  _BYTE *v274;
  uint64_t v275;
  uint64_t v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE *v280;
  uint64_t v281;
  _BYTE *v282;
  _BYTE *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _BYTE *v287;
  uint64_t v288;
  uint64_t v289;
  _BYTE *v290;
  uint64_t v291;
  __int128 v292[11];
  _OWORD v293[10];
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  _OWORD v305[9];
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  _OWORD v315[10];

  v278 = a3;
  v279 = a2;
  v281 = a1;
  v3 = type metadata accessor for Text.TruncationMode(0);
  v275 = *(_QWORD *)(v3 - 8);
  v276 = v3;
  __chkstk_darwin(v3);
  v274 = &v245[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10000B4C8(&qword_10054AD80);
  __chkstk_darwin(v5);
  v269 = &v245[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v266 = sub_10000B4C8(&qword_10054AD88);
  __chkstk_darwin(v266);
  v271 = &v245[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v267 = sub_10000B4C8(&qword_10054AD90);
  __chkstk_darwin(v267);
  v272 = &v245[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v270 = sub_10000B4C8(&qword_10054AD98);
  v9 = __chkstk_darwin(v270);
  v277 = &v245[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v273 = &v245[-v11];
  v12 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v12);
  v260 = &v245[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for WidgetMusicItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v257 = &v245[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v258 = type metadata accessor for PlaybackButtonLarge(0);
  __chkstk_darwin(v258);
  v262 = &v245[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v259 = sub_10000B4C8(&qword_10054ACE8);
  __chkstk_darwin(v259);
  v264 = &v245[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v261 = sub_10000B4C8(&qword_10054ADA0);
  __chkstk_darwin(v261);
  v268 = &v245[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_10000B4C8(&qword_100548A18);
  __chkstk_darwin(v20);
  v255 = &v245[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v252 = sub_10000B4C8(&qword_10054ADA8);
  __chkstk_darwin(v252);
  v265 = &v245[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v250 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v250);
  v24 = (uint64_t *)&v245[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v25);
  v27 = &v245[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v254 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v28 = __chkstk_darwin(v254);
  v253 = &v245[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = __chkstk_darwin(v28);
  v251 = &v245[-v31];
  __chkstk_darwin(v30);
  v33 = &v245[-v32];
  v248 = sub_10000B4C8(&qword_10054ADB0);
  __chkstk_darwin(v248);
  v35 = &v245[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v249 = sub_10000B4C8(&qword_10054ADB8);
  __chkstk_darwin(v249);
  v282 = &v245[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v284 = sub_10000B4C8(&qword_10054ADC0);
  __chkstk_darwin(v284);
  v283 = &v245[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = sub_10000B4C8(&qword_10054ADC8);
  v288 = *(_QWORD *)(v38 - 8);
  v289 = v38;
  __chkstk_darwin(v38);
  v287 = &v245[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v285 = sub_10000B4C8(&qword_10054ADD0);
  __chkstk_darwin(v285);
  v290 = &v245[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v286 = sub_10000B4C8(&qword_10054ADD8);
  __chkstk_darwin(v286);
  v280 = &v245[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = type metadata accessor for ArtworkView(0);
  v43 = __chkstk_darwin(v42);
  v263 = &v245[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v43);
  v46 = &v245[-v45];
  sub_10000D964(v281, (uint64_t)&v245[-v45], type metadata accessor for WidgetMusicItem);
  v47 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v291 = v14;
  v47(v46, 0, 1, v14);
  v48 = Corner.medium.unsafeMutableAddressor();
  v49 = *((_BYTE *)v48 + 16);
  v50 = *(int *)(v42 + 20);
  v256 = v46;
  v51 = &v46[v50];
  *(_OWORD *)v51 = *(_OWORD *)v48;
  v51[16] = v49;
  sub_10003EE7C((uint64_t)v33);
  if ((sub_100081B90() & 1) != 0)
  {
    v52 = LocalizedStringKey.init(stringLiteral:)(0x79616C5020776F4ELL, 0xEB00000000676E69);
    v53 = Text.init(_:tableName:bundle:comment:)(v52);
  }
  else
  {
    if (qword_1005478E0 != -1)
      swift_once(&qword_1005478E0, sub_10009F4CC);
    v294 = xmmword_100561408;
    v57 = sub_10001D9DC();
    swift_bridgeObjectRetain();
    v53 = Text.init<A>(_:)(&v294, &type metadata for String, v57);
  }
  v58 = v53;
  v59 = v54;
  v60 = v56;
  v61 = v55 & 1;
  v62 = sub_10000E750((uint64_t)v33, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v63 = static Alignment.leading.getter(v62);
  sub_10003F2CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v315, 0.0, 1, 0.0, 1, v63, v64, v58, v59, v61, v60);
  sub_10001DA20(v58, v59, v61);
  swift_bridgeObjectRelease(v60);
  v311 = v315[5];
  v312 = v315[6];
  v313 = v315[7];
  v314 = v315[8];
  v308 = v315[2];
  v309 = v315[3];
  v310 = v315[4];
  v306 = v315[0];
  v307 = v315[1];
  v65 = enum case for Text.Case.uppercase(_:);
  v66 = type metadata accessor for Text.Case(0);
  v67 = *(_QWORD *)(v66 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v67 + 104))(v27, v65, v66);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v27, 0, 1, v66);
  KeyPath = swift_getKeyPath(&unk_100427228);
  sub_100011370((uint64_t)v27, (uint64_t)v24 + *(int *)(v250 + 28), &qword_100548A48);
  *v24 = KeyPath;
  sub_100011370((uint64_t)v24, (uint64_t)v35 + *(int *)(v248 + 36), &qword_100548A40);
  v69 = v313;
  v35[6] = v312;
  v35[7] = v69;
  v35[8] = v314;
  v70 = v309;
  v35[2] = v308;
  v35[3] = v70;
  v71 = v311;
  v35[4] = v310;
  v35[5] = v71;
  v72 = v307;
  *v35 = v306;
  v35[1] = v72;
  sub_10004FFA4((uint64_t)&v306);
  sub_100011694((uint64_t)v24, &qword_100548A40);
  sub_100011694((uint64_t)v27, &qword_100548A48);
  v73 = sub_10004FFE0((uint64_t)&v306);
  v74 = static Font.caption2.getter(v73);
  v75 = Font.bold()();
  swift_release(v74);
  v76 = swift_getKeyPath(&unk_1004271C8);
  v77 = v282;
  sub_100011370((uint64_t)v35, (uint64_t)v282, &qword_10054ADB0);
  v78 = (uint64_t *)&v77[*(int *)(v249 + 36)];
  *v78 = v76;
  v78[1] = v75;
  sub_100011694((uint64_t)v35, &qword_10054ADB0);
  if (qword_1005477C8 != -1)
    swift_once(&qword_1005477C8, sub_1000339F4);
  v250 = sub_10000B4C8(&qword_100548AA0);
  v79 = sub_10000D78C(v250, (uint64_t)qword_100561238);
  v81 = (uint64_t)v283;
  v80 = v284;
  sub_100011370(v79, (uint64_t)&v283[*(int *)(v284 + 36)], &qword_100548AA0);
  sub_100011530((uint64_t)v77, v81, &qword_10054ADB8);
  v82 = sub_10009562C();
  v83 = v287;
  View.widgetAccentable(_:)(1, v80, v82);
  v84 = sub_100011694(v81, &qword_10054ADC0);
  v85 = static Edge.Set.trailing.getter(v84);
  v86 = v281;
  if (qword_100547830 != -1)
    swift_once(&qword_100547830, sub_1000347B0);
  v87 = EdgeInsets.init(_all:)(*(double *)&qword_100561328);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v95 = v288;
  v94 = v289;
  v96 = v290;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v288 + 16))(v290, v83, v289);
  v97 = (double *)&v96[*(int *)(v285 + 36)];
  *(_BYTE *)v97 = v85;
  v97[1] = v87;
  *((_QWORD *)v97 + 2) = v89;
  *((_QWORD *)v97 + 3) = v91;
  *((_QWORD *)v97 + 4) = v93;
  *((_BYTE *)v97 + 40) = 0;
  v98 = (*(uint64_t (**)(_BYTE *, uint64_t))(v95 + 8))(v83, v94);
  v99 = static Edge.Set.bottom.getter(v98);
  v100 = EdgeInsets.init(_all:)(1.0);
  v102 = v101;
  v104 = v103;
  v106 = v105;
  v107 = v280;
  sub_100011370((uint64_t)v96, (uint64_t)v280, &qword_10054ADD0);
  v108 = (double *)&v107[*(int *)(v286 + 36)];
  *(_BYTE *)v108 = v99;
  v108[1] = v100;
  *((_QWORD *)v108 + 2) = v102;
  *((_QWORD *)v108 + 3) = v104;
  *((_QWORD *)v108 + 4) = v106;
  *((_BYTE *)v108 + 40) = 0;
  sub_100011694((uint64_t)v96, &qword_10054ADD0);
  v109 = *(_QWORD *)(v86 + 24);
  *(_QWORD *)&v294 = *(_QWORD *)(v86 + 16);
  *((_QWORD *)&v294 + 1) = v109;
  v110 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v111 = Text.init<A>(_:)(&v294, &type metadata for String, v110);
  v247 = v113;
  v248 = v111;
  v249 = v114;
  v115 = *(_BYTE **)(v86 + *(int *)(v291 + 56));
  v116 = (_BYTE *)*((_QWORD *)v115 + 2);
  v117 = _swiftEmptyArrayStorage;
  if (v116)
  {
    v246 = v112;
    v118 = qword_100547850;
    swift_bridgeObjectRetain_n(v115, 2);
    if (v118 != -1)
      swift_once(&qword_100547850, sub_100038244);
    v119 = 0;
    v120 = 0;
    LODWORD(v291) = 0;
    v121 = 0xE000000000000000;
    v282 = v116;
    v283 = v115;
    do
    {
      v288 = v120;
      v289 = v121;
      v290 = v117;
      v122 = &(v119++)[(_QWORD)v115];
      TextBadge.view(favoriteBadgeConfiguration:)(qword_100549010, v122[32]);
      v124 = v123;
      v126 = v125;
      v128 = v127;
      v130 = v129 & 1;
      v131 = static Font.subheadline.getter(v123);
      v132 = static Font.Weight.semibold.getter(v131);
      v133 = Font.weight(_:)(v131, v132);
      swift_release(v131);
      v285 = Text.font(_:)(v133, v124, v126, v130, v128);
      v135 = v134;
      v137 = v136;
      v139 = v138;
      swift_release(v133);
      v140 = v137 & 1;
      sub_10001DA20(v124, v126, v130);
      swift_bridgeObjectRelease(v128);
      LOBYTE(v133) = v291 & 1;
      v142 = v288;
      v141 = v289;
      v143 = v290;
      v144 = v285;
      v145 = static Text.+ infix(_:_:)(v288, v289, v291 & 1, v290, v285, v135, v140, v139);
      v286 = v146;
      v287 = (_BYTE *)v145;
      v284 = v147;
      LODWORD(v291) = v148 & 1;
      v149 = v135;
      v115 = v283;
      sub_10001DA20(v144, v149, v140);
      swift_bridgeObjectRelease(v139);
      v150 = v141;
      v117 = (_QWORD *)v284;
      v151 = v133;
      v152 = v282;
      sub_10001DA20(v142, v150, v151);
      v153 = v143;
      v121 = v286;
      v120 = (uint64_t)v287;
      swift_bridgeObjectRelease(v153);
    }
    while (v152 != v119);
    swift_bridgeObjectRelease_n(v115, 2);
    LOBYTE(v112) = v246;
    v154 = v291;
  }
  else
  {
    v120 = 0;
    v154 = 0;
    v121 = 0xE000000000000000;
  }
  v155 = v112 & 1;
  v157 = v247;
  v156 = v248;
  v158 = v249;
  v159 = static Text.+ infix(_:_:)(v248, v247, v112 & 1, v249, v120, v121, v154, v117);
  v290 = v160;
  v291 = v159;
  v162 = v161;
  LODWORD(v289) = v163 & 1;
  sub_10001DA20(v120, v121, v154);
  swift_bridgeObjectRelease(v117);
  sub_10001DA20(v156, v157, v155);
  v164 = swift_bridgeObjectRelease(v158);
  v165 = static Alignment.leading.getter(v164);
  v166 = v289;
  v167 = v290;
  v168 = v291;
  sub_10003F2CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v305, 0.0, 1, 0.0, 1, v165, v169, v291, (uint64_t)v290, v289, v162);
  sub_10001DA20(v168, (uint64_t)v167, v166);
  v170 = swift_bridgeObjectRelease(v162);
  v171 = static Font.headline.getter(v170);
  v172 = swift_getKeyPath(&unk_1004271C8);
  if (qword_1005477D0 != -1)
    swift_once(&qword_1005477D0, sub_100033BF8);
  v173 = qword_100561250;
  v174 = swift_getKeyPath(&unk_1004271F8);
  v299 = v305[5];
  v300 = v305[6];
  v301 = v305[7];
  v302 = v305[8];
  v296 = v305[2];
  v297 = v305[3];
  v298 = v305[4];
  v294 = v305[0];
  v295 = v305[1];
  *(_QWORD *)&v303 = v172;
  *((_QWORD *)&v303 + 1) = v171;
  v175 = v281;
  v176 = *(_QWORD *)(v281 + 40);
  if (v176)
    v177 = *(_QWORD *)(v281 + 32);
  else
    v177 = 0;
  if (v176)
    v178 = *(_QWORD *)(v281 + 40);
  else
    v178 = 0xE000000000000000;
  *(_QWORD *)&v304 = v174;
  *((_QWORD *)&v304 + 1) = v173;
  swift_retain(v173);
  v179 = swift_bridgeObjectRetain();
  v180 = static Alignment.leading.getter(v179);
  sub_10003F2CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v293, 0.0, 1, 0.0, 1, v180, v181, v177, v178, 0, (uint64_t)_swiftEmptyArrayStorage);
  v182 = swift_bridgeObjectRelease(v178);
  v183 = static Font.body.getter(v182);
  v184 = swift_getKeyPath(&unk_1004271C8);
  if (qword_1005477D8 != -1)
    swift_once(&qword_1005477D8, sub_100033C14);
  v185 = sub_10000D78C(v250, (uint64_t)qword_100561258);
  v186 = v255;
  sub_100011370(v185, (uint64_t)v255, &qword_100548AA0);
  v187 = (uint64_t)v265;
  sub_100011370((uint64_t)v186, (uint64_t)&v265[*(int *)(v252 + 36)], &qword_100548A18);
  v188 = v293[7];
  *(_OWORD *)(v187 + 96) = v293[6];
  *(_OWORD *)(v187 + 112) = v188;
  *(_OWORD *)(v187 + 128) = v293[8];
  v189 = v293[3];
  *(_OWORD *)(v187 + 32) = v293[2];
  *(_OWORD *)(v187 + 48) = v189;
  v190 = v293[5];
  *(_OWORD *)(v187 + 64) = v293[4];
  *(_OWORD *)(v187 + 80) = v190;
  v191 = v293[1];
  *(_OWORD *)v187 = v293[0];
  *(_OWORD *)(v187 + 16) = v191;
  *(_QWORD *)(v187 + 144) = v184;
  *(_QWORD *)(v187 + 152) = v183;
  sub_100011694((uint64_t)v186, &qword_100548A18);
  v192 = v257;
  sub_10000D964(v175, (uint64_t)v257, type metadata accessor for WidgetMusicItem);
  v193 = v251;
  sub_10003EE7C((uint64_t)v251);
  v194 = v254;
  v195 = v260;
  sub_100011370((uint64_t)&v193[*(int *)(v254 + 24)], (uint64_t)v260, &qword_100548310);
  sub_10000E750((uint64_t)v193, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v196 = v253;
  sub_10003EE7C((uint64_t)v253);
  v197 = v196[*(int *)(v194 + 20)];
  sub_10000E750((uint64_t)v196, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v198 = v262;
  sub_10000DB44((uint64_t)v192, (uint64_t)v262, type metadata accessor for WidgetMusicItem);
  v199 = v258;
  v200 = sub_100011530((uint64_t)v195, (uint64_t)&v198[*(int *)(v258 + 20)], &qword_100548310);
  v198[*(int *)(v199 + 24)] = v197;
  v201 = static Edge.Set.top.getter(v200);
  v202 = EdgeInsets.init(_all:)(8.0);
  v204 = v203;
  v206 = v205;
  v208 = v207;
  v209 = v264;
  sub_10000D964((uint64_t)v198, (uint64_t)v264, type metadata accessor for PlaybackButtonLarge);
  v210 = (double *)&v209[*(int *)(v259 + 36)];
  *(_BYTE *)v210 = v201;
  v210[1] = v202;
  *((_QWORD *)v210 + 2) = v204;
  *((_QWORD *)v210 + 3) = v206;
  *((_QWORD *)v210 + 4) = v208;
  *((_BYTE *)v210 + 40) = 0;
  v211 = sub_10000E750((uint64_t)v198, type metadata accessor for PlaybackButtonLarge);
  v212 = static Edge.Set.bottom.getter(v211);
  v213 = EdgeInsets.init(_all:)(5.0);
  v215 = v214;
  v217 = v216;
  v219 = v218;
  v220 = v268;
  sub_100011370((uint64_t)v209, (uint64_t)v268, &qword_10054ACE8);
  v221 = (double *)&v220[*(int *)(v261 + 36)];
  *(_BYTE *)v221 = v212;
  v221[1] = v213;
  *((_QWORD *)v221 + 2) = v215;
  *((_QWORD *)v221 + 3) = v217;
  *((_QWORD *)v221 + 4) = v219;
  *((_BYTE *)v221 + 40) = 0;
  v222 = sub_100011694((uint64_t)v209, &qword_10054ACE8);
  v223 = static Axis.Set.vertical.getter(v222);
  v292[8] = v302;
  v292[9] = v303;
  v292[10] = v304;
  v292[4] = v298;
  v292[5] = v299;
  v292[6] = v300;
  v292[7] = v301;
  v292[0] = v294;
  v292[1] = v295;
  v292[2] = v296;
  v292[3] = v297;
  v224 = (uint64_t)v269;
  *v269 = v223;
  v225 = sub_10000B4C8(&qword_10054AE08);
  sub_100084160((uint64_t)v280, v292, v187, v281, (uint64_t)v220, v224 + *(int *)(v225 + 44));
  v226 = swift_getKeyPath(&unk_100427258);
  v227 = v271;
  sub_100011370(v224, (uint64_t)v271, &qword_10054AD80);
  v228 = &v227[*(int *)(v266 + 36)];
  *(_QWORD *)v228 = v226;
  v228[8] = 0;
  sub_100011694(v224, &qword_10054AD80);
  v229 = swift_getKeyPath(&unk_100427168);
  v230 = v272;
  sub_100011370((uint64_t)v227, (uint64_t)v272, &qword_10054AD88);
  v231 = &v230[*(int *)(v267 + 36)];
  *(_QWORD *)v231 = v229;
  *((_QWORD *)v231 + 1) = 1;
  v231[16] = 0;
  sub_100011694((uint64_t)v227, &qword_10054AD88);
  v233 = v274;
  v232 = v275;
  v234 = v276;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v275 + 104))(v274, enum case for Text.TruncationMode.tail(_:), v276);
  v235 = swift_getKeyPath(&unk_100427198);
  v236 = (uint64_t)v277;
  v237 = (uint64_t *)&v277[*(int *)(v270 + 36)];
  v238 = sub_10000B4C8(&qword_10054ACD8);
  (*(void (**)(char *, _BYTE *, uint64_t))(v232 + 16))((char *)v237 + *(int *)(v238 + 28), v233, v234);
  *v237 = v235;
  sub_100011370((uint64_t)v230, v236, &qword_10054AD90);
  (*(void (**)(_BYTE *, uint64_t))(v232 + 8))(v233, v234);
  sub_100011694((uint64_t)v230, &qword_10054AD90);
  v239 = v273;
  sub_100011530(v236, (uint64_t)v273, &qword_10054AD98);
  v240 = (uint64_t)v256;
  v241 = v263;
  sub_10000D964((uint64_t)v256, (uint64_t)v263, type metadata accessor for ArtworkView);
  sub_100011370((uint64_t)v239, v236, &qword_10054AD98);
  v242 = v278;
  sub_10000D964((uint64_t)v241, v278, type metadata accessor for ArtworkView);
  v243 = sub_10000B4C8(&qword_10054AE10);
  sub_100011370(v236, v242 + *(int *)(v243 + 48), &qword_10054AD98);
  sub_100095824((uint64_t)&v294);
  sub_100011694((uint64_t)v239, &qword_10054AD98);
  sub_10000E750(v240, type metadata accessor for ArtworkView);
  sub_100011694((uint64_t)v220, &qword_10054ADA0);
  sub_100011694(v187, &qword_10054ADA8);
  sub_100011694((uint64_t)v280, &qword_10054ADD8);
  sub_100011694(v236, &qword_10054AD98);
  return sub_10000E750((uint64_t)v241, type metadata accessor for ArtworkView);
}

uint64_t sub_100084160@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  v39 = a6;
  v11 = sub_10000B4C8(&qword_10054AE18);
  v12 = __chkstk_darwin(v11);
  v38 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v38 - v14;
  v16 = sub_10000B4C8(&qword_10054AE20);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v38 - v20;
  v22 = sub_10000B4C8(&qword_10054AE28);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v38 - v27;
  *(_QWORD *)v28 = static HorizontalAlignment.leading.getter(v26);
  *((_QWORD *)v28 + 1) = 0;
  v28[16] = 0;
  v29 = sub_10000B4C8(&qword_10054AE30);
  v30 = sub_100084444(a1, a2, a3, a4, a5, &v28[*(int *)(v29 + 44)]);
  *(_QWORD *)v21 = static HorizontalAlignment.leading.getter(v30);
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 0;
  v31 = sub_10000B4C8(&qword_10054AE38);
  v32 = sub_100084A70(a1, a2, a3, a4, a5, &v21[*(int *)(v31 + 44)]);
  *(_QWORD *)v15 = static HorizontalAlignment.leading.getter(v32);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v33 = sub_10000B4C8(&qword_10054AE40);
  sub_100085068(a2, a3, a4, a5, &v15[*(int *)(v33 + 44)]);
  sub_100011370((uint64_t)v28, (uint64_t)v25, &qword_10054AE28);
  sub_100011370((uint64_t)v21, (uint64_t)v19, &qword_10054AE20);
  v34 = v38;
  sub_100011370((uint64_t)v15, v38, &qword_10054AE18);
  v35 = v39;
  sub_100011370((uint64_t)v25, v39, &qword_10054AE28);
  v36 = sub_10000B4C8(&qword_10054AE48);
  sub_100011370((uint64_t)v19, v35 + *(int *)(v36 + 48), &qword_10054AE20);
  sub_100011370(v34, v35 + *(int *)(v36 + 64), &qword_10054AE18);
  sub_100011694((uint64_t)v15, &qword_10054AE18);
  sub_100011694((uint64_t)v21, &qword_10054AE20);
  sub_100011694((uint64_t)v28, &qword_10054AE28);
  sub_100011694(v34, &qword_10054AE18);
  sub_100011694((uint64_t)v19, &qword_10054AE20);
  return sub_100011694((uint64_t)v25, &qword_10054AE28);
}

uint64_t sub_100084444@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  int *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _OWORD v112[11];
  _OWORD v113[12];

  v74 = a5;
  v84 = a4;
  v76 = a1;
  v77 = a3;
  v87 = a6;
  v7 = sub_10000B4C8(&qword_10054AE50);
  v8 = __chkstk_darwin(v7);
  v88 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v86 = (uint64_t)&v74 - v10;
  v11 = type metadata accessor for AccessibilityChildBehavior(0);
  v81 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_10054ADA8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v74 - v18;
  v79 = sub_10000B4C8(&qword_10054AE58);
  __chkstk_darwin(v79);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10000B4C8(&qword_10054AE60);
  v89 = *(_QWORD *)(v80 - 8);
  v22 = __chkstk_darwin(v80);
  v85 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v78 = (char *)&v74 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v74 - v26;
  v28 = sub_10000B4C8(&qword_10054AE90);
  v29 = __chkstk_darwin(v28);
  v83 = (uint64_t)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v32 = (char *)&v74 - v31;
  KeyPath = swift_getKeyPath(&unk_100427168);
  v34 = sub_100011370(v76, (uint64_t)v32, &qword_10054ADD8);
  v35 = *(int *)(v28 + 36);
  v36 = (uint64_t)v32;
  v37 = &v32[v35];
  *(_QWORD *)v37 = KeyPath;
  *((_QWORD *)v37 + 1) = 2;
  v37[16] = 0;
  *(_QWORD *)v21 = static HorizontalAlignment.leading.getter(v34);
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 0;
  v38 = &v21[*(int *)(sub_10000B4C8(&qword_10054AE68) + 44)];
  v39 = a2[9];
  v109 = a2[8];
  v110 = v39;
  v111 = a2[10];
  v40 = a2[5];
  v105 = a2[4];
  v106 = v40;
  v41 = a2[7];
  v107 = a2[6];
  v108 = v41;
  v42 = a2[3];
  v103 = a2[2];
  v104 = v42;
  v43 = a2[1];
  v101 = *a2;
  v102 = v43;
  sub_100011370(v77, (uint64_t)v19, &qword_10054ADA8);
  v98 = v109;
  v99 = v110;
  v100 = v111;
  v94 = v105;
  v95 = v106;
  v96 = v107;
  v97 = v108;
  v90 = v101;
  v91 = v102;
  v92 = v103;
  v93 = v104;
  sub_100011370((uint64_t)v19, (uint64_t)v17, &qword_10054ADA8);
  v44 = v99;
  v112[8] = v98;
  v112[9] = v99;
  v45 = v100;
  v112[10] = v100;
  v46 = v94;
  v47 = v95;
  v112[4] = v94;
  v112[5] = v95;
  v49 = v96;
  v48 = v97;
  v112[6] = v96;
  v112[7] = v97;
  v50 = v90;
  v51 = v91;
  v112[0] = v90;
  v112[1] = v91;
  v53 = v92;
  v52 = v93;
  v112[2] = v92;
  v112[3] = v93;
  *((_OWORD *)v38 + 8) = v98;
  *((_OWORD *)v38 + 9) = v44;
  *((_OWORD *)v38 + 10) = v45;
  *((_OWORD *)v38 + 4) = v46;
  *((_OWORD *)v38 + 5) = v47;
  *((_OWORD *)v38 + 6) = v49;
  *((_OWORD *)v38 + 7) = v48;
  *(_OWORD *)v38 = v50;
  *((_OWORD *)v38 + 1) = v51;
  *((_OWORD *)v38 + 2) = v53;
  *((_OWORD *)v38 + 3) = v52;
  v54 = sub_10000B4C8(&qword_10054AE70);
  sub_100011370((uint64_t)v17, (uint64_t)&v38[*(int *)(v54 + 48)], &qword_10054ADA8);
  sub_100095898((uint64_t)v112);
  sub_100095898((uint64_t)&v101);
  sub_100011694((uint64_t)v19, &qword_10054ADA8);
  sub_100011694((uint64_t)v17, &qword_10054ADA8);
  v113[8] = v98;
  v113[9] = v99;
  v113[10] = v100;
  v113[4] = v94;
  v113[5] = v95;
  v113[6] = v96;
  v113[7] = v97;
  v113[0] = v90;
  v113[1] = v91;
  v113[2] = v92;
  v113[3] = v93;
  v55 = sub_100095824((uint64_t)v113);
  static AccessibilityChildBehavior.combine.getter(v55);
  v56 = sub_100012324(&qword_10054AE78, &qword_10054AE58, (const char *)&protocol conformance descriptor for VStack<A>);
  v57 = v78;
  View.accessibilityElement(children:)(v13, v79, v56);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v82);
  sub_100011694((uint64_t)v21, &qword_10054AE58);
  v58 = v89;
  v59 = v27;
  v60 = v57;
  v61 = v80;
  (*(void (**)(char *, char *))(v89 + 32))(v27, v60);
  if (*(_BYTE *)(v84 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 60)) == 1)
  {
    v62 = v86;
    sub_100011370(v74, v86, &qword_10054ADA0);
    v63 = sub_10000B4C8(&qword_10054ADA0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    v64 = sub_10000B4C8(&qword_10054ADA0);
    v62 = v86;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v86, 1, 1, v64);
  }
  v75 = v36;
  v65 = v83;
  sub_100011370(v36, v83, &qword_10054AE90);
  v66 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v67 = v85;
  v68 = v59;
  v66(v85, v59, v61);
  v69 = v88;
  sub_100011370(v62, v88, &qword_10054AE50);
  v70 = v87;
  *v87 = 0;
  *((_BYTE *)v70 + 8) = 0;
  v71 = (int *)sub_10000B4C8(&qword_10054AE98);
  sub_100011370(v65, (uint64_t)v70 + v71[12], &qword_10054AE90);
  v66((char *)v70 + v71[16], v67, v61);
  sub_100011370(v69, (uint64_t)v70 + v71[20], &qword_10054AE50);
  sub_100011694(v62, &qword_10054AE50);
  v72 = *(void (**)(char *, uint64_t))(v89 + 8);
  v72(v68, v61);
  sub_100011694(v75, &qword_10054AE90);
  sub_100011694(v69, &qword_10054AE50);
  v72(v67, v61);
  return sub_100011694(v65, &qword_10054AE90);
}

uint64_t sub_100084A70@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  int *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[11];
  _OWORD v107[12];

  v70 = a5;
  v78 = a4;
  v72 = a3;
  v83 = a1;
  v81 = a6;
  v7 = sub_10000B4C8(&qword_10054AE50);
  v8 = __chkstk_darwin(v7);
  v82 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v80 = (uint64_t)&v70 - v10;
  v11 = type metadata accessor for AccessibilityChildBehavior(0);
  v75 = *(_QWORD *)(v11 - 8);
  v76 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000B4C8(&qword_10054ADA8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v70 - v18;
  v73 = sub_10000B4C8(&qword_10054AE58);
  __chkstk_darwin(v73);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_10000B4C8(&qword_10054AE60);
  v22 = *(_QWORD *)(v74 - 8);
  v23 = __chkstk_darwin(v74);
  v79 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v70 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v70 - v28;
  v30 = sub_10000B4C8(&qword_10054ADD8);
  v31 = __chkstk_darwin(v30);
  v77 = (uint64_t)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = v83;
  v83 = (uint64_t)&v70 - v34;
  v35 = sub_100011370(v33, (uint64_t)&v70 - v34, &qword_10054ADD8);
  *(_QWORD *)v21 = static HorizontalAlignment.leading.getter(v35);
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 0;
  v36 = &v21[*(int *)(sub_10000B4C8(&qword_10054AE68) + 44)];
  v37 = a2[9];
  v103 = a2[8];
  v104 = v37;
  v105 = a2[10];
  v38 = a2[5];
  v99 = a2[4];
  v100 = v38;
  v39 = a2[7];
  v101 = a2[6];
  v102 = v39;
  v40 = a2[3];
  v97 = a2[2];
  v98 = v40;
  v41 = a2[1];
  v95 = *a2;
  v96 = v41;
  sub_100011370(v72, (uint64_t)v19, &qword_10054ADA8);
  v92 = v103;
  v93 = v104;
  v94 = v105;
  v88 = v99;
  v89 = v100;
  v90 = v101;
  v91 = v102;
  v84 = v95;
  v85 = v96;
  v86 = v97;
  v87 = v98;
  sub_100011370((uint64_t)v19, (uint64_t)v17, &qword_10054ADA8);
  v42 = v93;
  v106[8] = v92;
  v106[9] = v93;
  v43 = v94;
  v106[10] = v94;
  v44 = v88;
  v45 = v89;
  v106[4] = v88;
  v106[5] = v89;
  v47 = v90;
  v46 = v91;
  v106[6] = v90;
  v106[7] = v91;
  v48 = v84;
  v49 = v85;
  v106[0] = v84;
  v106[1] = v85;
  v51 = v86;
  v50 = v87;
  v106[2] = v86;
  v106[3] = v87;
  *((_OWORD *)v36 + 8) = v92;
  *((_OWORD *)v36 + 9) = v42;
  *((_OWORD *)v36 + 10) = v43;
  *((_OWORD *)v36 + 4) = v44;
  *((_OWORD *)v36 + 5) = v45;
  *((_OWORD *)v36 + 6) = v47;
  *((_OWORD *)v36 + 7) = v46;
  *(_OWORD *)v36 = v48;
  *((_OWORD *)v36 + 1) = v49;
  *((_OWORD *)v36 + 2) = v51;
  *((_OWORD *)v36 + 3) = v50;
  v52 = sub_10000B4C8(&qword_10054AE70);
  sub_100011370((uint64_t)v17, (uint64_t)&v36[*(int *)(v52 + 48)], &qword_10054ADA8);
  sub_100095898((uint64_t)v106);
  sub_100095898((uint64_t)&v95);
  sub_100011694((uint64_t)v19, &qword_10054ADA8);
  sub_100011694((uint64_t)v17, &qword_10054ADA8);
  v107[8] = v92;
  v107[9] = v93;
  v107[10] = v94;
  v107[4] = v88;
  v107[5] = v89;
  v107[6] = v90;
  v107[7] = v91;
  v107[0] = v84;
  v107[1] = v85;
  v107[2] = v86;
  v107[3] = v87;
  v53 = sub_100095824((uint64_t)v107);
  static AccessibilityChildBehavior.combine.getter(v53);
  v54 = sub_100012324(&qword_10054AE78, &qword_10054AE58, (const char *)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v13, v73, v54);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v76);
  sub_100011694((uint64_t)v21, &qword_10054AE58);
  v55 = v29;
  v56 = v29;
  v57 = v74;
  (*(void (**)(char *, char *))(v22 + 32))(v56, v27);
  if (*(_BYTE *)(v78 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 60)) == 1)
  {
    v58 = v80;
    sub_100011370(v70, v80, &qword_10054ADA0);
    v59 = sub_10000B4C8(&qword_10054ADA0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 0, 1, v59);
  }
  else
  {
    v60 = sub_10000B4C8(&qword_10054ADA0);
    v58 = v80;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v80, 1, 1, v60);
  }
  v61 = v77;
  sub_100011370(v83, v77, &qword_10054ADD8);
  v71 = v22;
  v62 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v63 = v79;
  v64 = v55;
  v62(v79, v55, v57);
  v65 = v82;
  sub_100011370(v58, v82, &qword_10054AE50);
  v66 = v81;
  *v81 = 0;
  *((_BYTE *)v66 + 8) = 0;
  v67 = (int *)sub_10000B4C8(&qword_10054AE88);
  sub_100011370(v61, (uint64_t)v66 + v67[12], &qword_10054ADD8);
  v62((char *)v66 + v67[16], v63, v57);
  sub_100011370(v65, (uint64_t)v66 + v67[20], &qword_10054AE50);
  sub_100011694(v58, &qword_10054AE50);
  v68 = *(void (**)(char *, uint64_t))(v71 + 8);
  v68(v64, v57);
  sub_100011694(v83, &qword_10054ADD8);
  sub_100011694(v65, &qword_10054AE50);
  v68(v63, v57);
  return sub_100011694(v61, &qword_10054ADD8);
}

uint64_t sub_100085068@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[11];
  _OWORD v98[12];

  v63 = a4;
  v64 = a2;
  v70 = a3;
  v73 = a5;
  v6 = sub_10000B4C8(&qword_10054AE50);
  v7 = __chkstk_darwin(v6);
  v74 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v72 = (uint64_t)&v63 - v9;
  v66 = type metadata accessor for AccessibilityChildBehavior(0);
  v69 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_10054ADA8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v63 - v16;
  v67 = sub_10000B4C8(&qword_10054AE58);
  __chkstk_darwin(v67);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10000B4C8(&qword_10054AE60);
  v65 = *(_QWORD *)(v68 - 8);
  v20 = __chkstk_darwin(v68);
  v71 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v63 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v63 - v26;
  *(_QWORD *)v19 = static HorizontalAlignment.leading.getter(v25);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 0;
  v28 = &v19[*(int *)(sub_10000B4C8(&qword_10054AE68) + 44)];
  v29 = a1[9];
  v94 = a1[8];
  v95 = v29;
  v96 = a1[10];
  v30 = a1[5];
  v90 = a1[4];
  v91 = v30;
  v31 = a1[7];
  v92 = a1[6];
  v93 = v31;
  v32 = a1[3];
  v88 = a1[2];
  v89 = v32;
  v33 = a1[1];
  v86 = *a1;
  v87 = v33;
  sub_100011370(v64, (uint64_t)v17, &qword_10054ADA8);
  v83 = v94;
  v84 = v95;
  v85 = v96;
  v79 = v90;
  v80 = v91;
  v81 = v92;
  v82 = v93;
  v75 = v86;
  v76 = v87;
  v77 = v88;
  v78 = v89;
  sub_100011370((uint64_t)v17, (uint64_t)v15, &qword_10054ADA8);
  v34 = v84;
  v97[8] = v83;
  v97[9] = v84;
  v35 = v85;
  v97[10] = v85;
  v36 = v79;
  v37 = v80;
  v97[4] = v79;
  v97[5] = v80;
  v39 = v81;
  v38 = v82;
  v97[6] = v81;
  v97[7] = v82;
  v40 = v75;
  v41 = v76;
  v97[0] = v75;
  v97[1] = v76;
  v43 = v77;
  v42 = v78;
  v97[2] = v77;
  v97[3] = v78;
  *((_OWORD *)v28 + 8) = v83;
  *((_OWORD *)v28 + 9) = v34;
  *((_OWORD *)v28 + 10) = v35;
  *((_OWORD *)v28 + 4) = v36;
  *((_OWORD *)v28 + 5) = v37;
  *((_OWORD *)v28 + 6) = v39;
  *((_OWORD *)v28 + 7) = v38;
  *(_OWORD *)v28 = v40;
  *((_OWORD *)v28 + 1) = v41;
  *((_OWORD *)v28 + 2) = v43;
  *((_OWORD *)v28 + 3) = v42;
  v44 = sub_10000B4C8(&qword_10054AE70);
  sub_100011370((uint64_t)v15, (uint64_t)&v28[*(int *)(v44 + 48)], &qword_10054ADA8);
  sub_100095898((uint64_t)v97);
  sub_100095898((uint64_t)&v86);
  sub_100011694((uint64_t)v17, &qword_10054ADA8);
  sub_100011694((uint64_t)v15, &qword_10054ADA8);
  v98[8] = v83;
  v98[9] = v84;
  v98[10] = v85;
  v98[4] = v79;
  v98[5] = v80;
  v98[6] = v81;
  v98[7] = v82;
  v98[0] = v75;
  v98[1] = v76;
  v98[2] = v77;
  v98[3] = v78;
  v45 = sub_100095824((uint64_t)v98);
  static AccessibilityChildBehavior.combine.getter(v45);
  v46 = sub_100012324(&qword_10054AE78, &qword_10054AE58, (const char *)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v11, v67, v46);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v66);
  sub_100011694((uint64_t)v19, &qword_10054AE58);
  v47 = v65;
  v48 = v27;
  v49 = v24;
  v50 = v68;
  (*(void (**)(char *, char *))(v65 + 32))(v27, v49);
  if (*(_BYTE *)(v70 + *(int *)(type metadata accessor for WidgetMusicItem(0) + 60)) == 1)
  {
    v51 = v72;
    sub_100011370(v63, v72, &qword_10054ADA0);
    v52 = sub_10000B4C8(&qword_10054ADA0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
  }
  else
  {
    v53 = sub_10000B4C8(&qword_10054ADA0);
    v51 = v72;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v72, 1, 1, v53);
  }
  v54 = v47;
  v55 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v56 = v71;
  v57 = v50;
  v55(v71, v48, v50);
  v58 = v74;
  sub_100011370(v51, v74, &qword_10054AE50);
  v59 = v73;
  *v73 = 0;
  *((_BYTE *)v59 + 8) = 0;
  v60 = sub_10000B4C8(&qword_10054AE80);
  v55((char *)v59 + *(int *)(v60 + 48), v56, v57);
  sub_100011370(v58, (uint64_t)v59 + *(int *)(v60 + 64), &qword_10054AE50);
  sub_100011694(v51, &qword_10054AE50);
  v61 = *(void (**)(char *, uint64_t))(v54 + 8);
  v61(v48, v57);
  sub_100011694(v58, &qword_10054AE50);
  return ((uint64_t (*)(char *, uint64_t))v61)(v56, v57);
}

uint64_t sub_1000855A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t result;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t KeyPath;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;

  v129 = a1;
  v128 = type metadata accessor for ColorScheme(0);
  v150 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v149 = (char *)&v119 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000B4C8(&qword_100547A38);
  v4 = __chkstk_darwin(v3);
  v120 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v148 = (char *)&v119 - v6;
  v145 = sub_10000B4C8(&qword_100549640);
  __chkstk_darwin(v145);
  v135 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10000B4C8(&qword_100549648);
  __chkstk_darwin(v146);
  v147 = (uint64_t)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for RecentlyPlayedLargeContentView(0);
  __chkstk_darwin(v119);
  v144 = (uint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000B4C8(&qword_100549A60);
  __chkstk_darwin(v10);
  v142 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000B4C8(&qword_100549A50);
  __chkstk_darwin(v12);
  v141 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10000B4C8(&qword_100549A20);
  v14 = __chkstk_darwin(v139);
  v140 = (uint64_t)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v143 = (uint64_t)&v119 - v16;
  v17 = type metadata accessor for SplitPercentageLayout(0);
  v137 = *(_QWORD *)(v17 - 8);
  v138 = v17;
  v18 = __chkstk_darwin(v17);
  v136 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v119 - v20;
  v22 = sub_10000B4C8(&qword_10054AEA0);
  __chkstk_darwin(v22);
  v132 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_10000B4C8(&qword_10054AEA8);
  __chkstk_darwin(v131);
  v133 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_10000B4C8(&qword_10054AEB0);
  __chkstk_darwin(v152);
  v134 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10000B4C8(&qword_10054AEB8);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10000B4C8(&qword_10054AEC0);
  v27 = __chkstk_darwin(v122);
  v124 = (char *)&v119 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v123 = (uint64_t)&v119 - v29;
  v30 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v30);
  v32 = (char *)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)&v119 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v34);
  v39 = (char *)&v119 - v38;
  __chkstk_darwin(v37);
  v41 = (char *)&v119 - v40;
  v42 = type metadata accessor for WidgetMusicItem(0);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v153 = (uint64_t *)((char *)&v119 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003EE7C((uint64_t)v41);
  v45 = sub_100081B90();
  v121 = v42;
  v130 = v36;
  if ((v45 & 1) != 0)
  {
    sub_100011370((uint64_t)&v41[*(int *)(v33 + 24)], (uint64_t)v32, &qword_100548310);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v32, 1, v42);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      goto LABEL_24;
    }
    v47 = v153;
    sub_10000DB44((uint64_t)v32, (uint64_t)v153, type metadata accessor for WidgetMusicItem);
    goto LABEL_6;
  }
  v48 = *(_QWORD *)&v41[*(int *)(v33 + 28)];
  if (*(_QWORD *)(v48 + 16))
  {
    v47 = v153;
    sub_10000D964(v48 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), (uint64_t)v153, type metadata accessor for WidgetMusicItem);
LABEL_6:
    v49 = v1;
    v50 = (uint64_t)v142;
    goto LABEL_7;
  }
  v47 = v153;
  v50 = (uint64_t)v142;
  if (qword_100547848 != -1)
    swift_once(&qword_100547848, sub_100036D58);
  v118 = sub_10000D78C(v121, (uint64_t)qword_100561330);
  sub_10000D964(v118, (uint64_t)v47, type metadata accessor for WidgetMusicItem);
  v49 = v1;
LABEL_7:
  v151 = v49;
  sub_10000E750((uint64_t)v41, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  SplitPercentageLayout.init(axis:locations:)(1, &off_1004F8EB8);
  v51 = v137;
  v52 = v136;
  v53 = v21;
  v54 = v138;
  (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v136, v53, v138);
  v55 = (uint64_t)v141;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v141, v52, v54);
  v56 = v140;
  sub_100011370(v55, v140, &qword_100549A50);
  sub_10008628C(v47, v49, v50);
  sub_100011694(v55, &qword_100549A50);
  sub_100011530(v50, v56 + *(int *)(v139 + 44), &qword_100549A60);
  v57 = v143;
  sub_100011530(v56, v143, &qword_100549A20);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v54);
  sub_10003EE7C((uint64_t)v39);
  v58 = sub_100081594();
  v60 = v59;
  sub_10000E750((uint64_t)v39, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v61 = v144;
  sub_10000D964(v49, v144, type metadata accessor for RecentlyPlayedLargeContentView);
  if (v60)
  {
    v62 = (uint64_t)v135;
    v63 = (uint64_t)v134;
    v64 = (uint64_t)v133;
    v65 = (uint64_t)v132;
    v66 = v131;
    v67 = (uint64_t)v130;
  }
  else
  {
    v67 = (uint64_t)v130;
    sub_10003EE7C((uint64_t)v130);
    v58 = sub_100089A58();
    v60 = v68;
    sub_10000E750(v67, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
    v62 = (uint64_t)v135;
    v63 = (uint64_t)v134;
    v64 = (uint64_t)v133;
    v65 = (uint64_t)v132;
    v66 = v131;
  }
  sub_10000E750(v61, type metadata accessor for RecentlyPlayedLargeContentView);
  sub_10003E0B8(v58, v60, v65, 32.0, 16.0);
  swift_bridgeObjectRelease(v60);
  sub_100011694(v57, &qword_100549A20);
  sub_10003EE7C(v67);
  sub_10000D964(v67, v64, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  sub_100011370(v65, v64 + *(int *)(v66 + 36), &qword_10054AEA0);
  sub_10000E750(v67, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v69 = sub_100011694(v65, &qword_10054AEA0);
  v70 = static Alignment.topTrailing.getter(v69);
  v72 = v71;
  v73 = v63 + *(int *)(v152 + 36);
  if (qword_100547800 != -1)
    swift_once(&qword_100547800, sub_100034248);
  v74 = sub_10000B4C8(&qword_100548BD0);
  v75 = sub_10000D78C(v74, (uint64_t)qword_1005612C0);
  v76 = static Edge.Set.trailing.getter(v75);
  v77 = EdgeInsets.init(_all:)(10.0);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  v84 = sub_100011370(v75, v62, &qword_100548BD0);
  v85 = v62 + *(int *)(v145 + 36);
  *(_BYTE *)v85 = v76;
  *(double *)(v85 + 8) = v77;
  *(_QWORD *)(v85 + 16) = v79;
  *(_QWORD *)(v85 + 24) = v81;
  *(_QWORD *)(v85 + 32) = v83;
  *(_BYTE *)(v85 + 40) = 0;
  v86 = static Edge.Set.top.getter(v84);
  v87 = EdgeInsets.init(_all:)(12.0);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v94 = v147;
  sub_100011370(v62, v147, &qword_100549640);
  v95 = v94 + *(int *)(v146 + 36);
  *(_BYTE *)v95 = v86;
  *(double *)(v95 + 8) = v87;
  *(_QWORD *)(v95 + 16) = v89;
  *(_QWORD *)(v95 + 24) = v91;
  *(_QWORD *)(v95 + 32) = v93;
  *(_BYTE *)(v95 + 40) = 0;
  sub_100011694(v62, &qword_100549640);
  sub_100011530(v94, v73, &qword_100549648);
  v96 = (uint64_t *)(v73 + *(int *)(sub_10000B4C8(&qword_10054AD60) + 36));
  *v96 = v70;
  v96[1] = v72;
  sub_100011530(v64, v63, &qword_10054AEA8);
  sub_10003EE7C(v67);
  v97 = sub_100081B90();
  sub_10000E750(v67, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v97 & 1) == 0)
  {
    v104 = (char *)v153 + *(int *)(v121 + 28);
    v99 = type metadata accessor for URL(0);
    v103 = (uint64_t)v148;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v148, v104, v99);
    v102 = (uint64_t)v149;
    v101 = v150;
    goto LABEL_16;
  }
  v98 = v120;
  URL.init(string:)(0xD000000000000016, 0x8000000100445260);
  v99 = type metadata accessor for URL(0);
  v100 = *(_QWORD *)(v99 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99);
  v102 = (uint64_t)v149;
  v101 = v150;
  v103 = (uint64_t)v148;
  if ((_DWORD)result == 1)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v148, v98, v99);
LABEL_16:
  type metadata accessor for URL(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v103, 0, 1, v99);
  v105 = sub_100095594(&qword_10054AEC8, &qword_10054AEB0, &qword_10054AED0, &qword_10054AEA8);
  v106 = v125;
  View.widgetURL(_:)(v103, v152, v105);
  sub_100011694(v103, &qword_100547A38);
  sub_100011694(v63, &qword_10054AEB0);
  sub_10003EE7C(v67);
  v107 = sub_100081B90();
  sub_10000E750(v67, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  if ((v107 & 1) != 0)
  {
    v108 = v128;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v101 + 104))(v102, enum case for ColorScheme.light(_:), v128);
    v109 = v129;
  }
  else
  {
    sub_10003E9D0(v102);
    v109 = v129;
    v108 = v128;
  }
  v110 = v122;
  KeyPath = swift_getKeyPath(&unk_100427138);
  v112 = (uint64_t)v124;
  v113 = (uint64_t *)&v124[*(int *)(v110 + 36)];
  v114 = sub_10000B4C8(&qword_100548860);
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))((char *)v113 + *(int *)(v114 + 28), v102, v108);
  *v113 = KeyPath;
  v115 = v126;
  v116 = v127;
  (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v112, v106, v127);
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v102, v108);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v106, v116);
  v117 = v123;
  sub_100011530(v112, v123, &qword_10054AEC0);
  sub_100011530(v117, v109, &qword_10054AEC0);
  return sub_10000E750((uint64_t)v153, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_10008628C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];

  v98 = a3;
  v87 = type metadata accessor for RedactionReasons(0);
  *(_QWORD *)&v96 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v86 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  __chkstk_darwin(v82);
  v85 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10000B4C8(&qword_10054AED8);
  __chkstk_darwin(v89);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_10054AEE0);
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  __chkstk_darwin(v9);
  v90 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10000B4C8(&qword_100549A68);
  __chkstk_darwin(v88);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000B4C8(&qword_100549A70);
  __chkstk_darwin(v13);
  v97 = (uint64_t)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10000B4C8(&qword_10054AEE8);
  v15 = __chkstk_darwin(v95);
  v84 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v94 = (uint64_t)&v82 - v18;
  __chkstk_darwin(v17);
  v83 = (char *)&v82 - v19;
  v20 = sub_10000B4C8(&qword_10054AEF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10000B4C8(&qword_10054AEF8);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v82 - v28;
  *(_QWORD *)v22 = static VerticalAlignment.center.getter(v27);
  *((_QWORD *)v22 + 1) = 0x4030000000000000;
  v22[16] = 0;
  v30 = (uint64_t)&v22[*(int *)(sub_10000B4C8(&qword_10054AF00) + 44)];
  v31 = a1;
  v32 = a2;
  v33 = sub_1000869EC(v31, a2, v30);
  LOBYTE(a2) = static Edge.Set.all.getter(v33);
  sub_100011370((uint64_t)v22, (uint64_t)v26, &qword_10054AEF0);
  v34 = &v26[*(int *)(v23 + 36)];
  *v34 = a2;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v34 + 8) = _Q0;
  *(_OWORD *)(v34 + 24) = xmmword_100426C40;
  v34[40] = 0;
  sub_100011694((uint64_t)v22, &qword_10054AEF0);
  v93 = v29;
  v40 = sub_100011530((uint64_t)v26, (uint64_t)v29, &qword_10054AEF8);
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v40);
  *((_QWORD *)v8 + 1) = 0x4028000000000000;
  v8[16] = 0;
  v41 = sub_10000B4C8(&qword_10054AF08);
  v42 = v32;
  v43 = (uint64_t)v85;
  sub_100088F20(v42, &v8[*(int *)(v41 + 44)]);
  sub_10003EE7C(v43);
  v44 = sub_100081B90();
  if ((v44 & 1) != 0)
  {
    v46 = v86;
    v45 = v87;
    if (*(_QWORD *)(*(_QWORD *)(v43 + *(int *)(v82 + 28)) + 16))
    {
      v99[0] = _swiftEmptyArrayStorage;
      v47 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
      v48 = sub_10000B4C8(&qword_100548708);
      v49 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
      v50 = v48;
      v51 = v45;
      dispatch thunk of SetAlgebra.init<A>(_:)(v99, v50, v49, v45, v47);
      v52 = v46;
      v54 = (uint64_t)v83;
      v53 = (uint64_t)v84;
    }
    else
    {
      v52 = v86;
      static RedactionReasons.placeholder.getter(v44);
      v54 = (uint64_t)v83;
      v53 = (uint64_t)v84;
      v51 = v45;
    }
  }
  else
  {
    v99[0] = _swiftEmptyArrayStorage;
    v55 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v56 = sub_10000B4C8(&qword_100548708);
    v57 = sub_100012324(&qword_100548710, &qword_100548708, (const char *)&protocol conformance descriptor for [A]);
    v58 = v86;
    v59 = v56;
    v51 = v87;
    dispatch thunk of SetAlgebra.init<A>(_:)(v99, v59, v57, v87, v55);
    v54 = (uint64_t)v83;
    v53 = (uint64_t)v84;
    v52 = v58;
  }
  sub_10000E750(v43, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v60 = sub_100012324(&qword_10054AF10, &qword_10054AED8, (const char *)&protocol conformance descriptor for VStack<A>);
  v61 = v90;
  View.redacted(reason:)(v52, v89, v60);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v52, v51);
  v62 = sub_100011694((uint64_t)v8, &qword_10054AED8);
  v63 = static Edge.Set.all.getter(v62);
  v65 = v91;
  v64 = v92;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v12, v61, v92);
  v66 = &v12[*(int *)(v88 + 36)];
  *v66 = v63;
  *(_OWORD *)(v66 + 8) = xmmword_100426C50;
  *(_OWORD *)(v66 + 24) = xmmword_100425150;
  v66[40] = 0;
  v67 = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v61, v64);
  v68 = static Alignment.center.getter(v67);
  v69 = v97;
  sub_10003F6D0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v97, 0.0, 1, 0.0, 1, v68, v70);
  sub_100011694((uint64_t)v12, &qword_100549A68);
  if (qword_1005478D0 != -1)
    swift_once(&qword_1005478D0, sub_10009F264);
  v71 = xmmword_1005613B8;
  v96 = *(__int128 *)((char *)&xmmword_1005613B8 + 8);
  v72 = qword_1005613D0;
  v73 = qword_1005613D8;
  v74 = swift_bridgeObjectRetain();
  v75 = static Edge.Set.all.getter(v74);
  v76 = v94;
  sub_100011370(v69, v94, &qword_100549A70);
  v77 = v76 + *(int *)(v95 + 36);
  *(_QWORD *)v77 = v71;
  *(_OWORD *)(v77 + 8) = v96;
  *(_QWORD *)(v77 + 24) = v72;
  *(_QWORD *)(v77 + 32) = v73;
  *(_BYTE *)(v77 + 40) = v75;
  sub_100011694(v69, &qword_100549A70);
  sub_100011530(v76, v54, &qword_10054AEE8);
  v78 = (uint64_t)v93;
  sub_100011370((uint64_t)v93, (uint64_t)v26, &qword_10054AEF8);
  sub_100011370(v54, v53, &qword_10054AEE8);
  v79 = v98;
  sub_100011370((uint64_t)v26, v98, &qword_10054AEF8);
  v80 = sub_10000B4C8(&qword_10054AF18);
  sub_100011370(v53, v79 + *(int *)(v80 + 48), &qword_10054AEE8);
  sub_100011694(v54, &qword_10054AEE8);
  sub_100011694(v78, &qword_10054AEF8);
  sub_100011694(v53, &qword_10054AEE8);
  return sub_100011694((uint64_t)v26, &qword_10054AEF8);
}

uint64_t sub_1000869EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  char *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  double v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  _BYTE *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  _BYTE *v240;
  char v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  char v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  char v268;
  void (*v269)(char *, uint64_t);
  double v270;
  double v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  double v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _BYTE *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  _QWORD *v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  char v388;
  char v389;
  char v390;
  _BYTE v391[7];
  _OWORD v392[13];
  _OWORD v393[4];
  _OWORD v394[10];
  uint64_t v395;
  uint64_t v396;
  char v397;
  char *v398;
  uint64_t v399;
  char v400;

  v351 = a3;
  v5 = type metadata accessor for Text.TruncationMode(0);
  v348 = *(_QWORD *)(v5 - 8);
  v349 = v5;
  __chkstk_darwin(v5);
  v347 = (char *)&v316 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000B4C8(&qword_100549A78);
  __chkstk_darwin(v7);
  v342 = (char *)&v316 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000B4C8(&qword_100549A80);
  __chkstk_darwin(v9);
  v344 = (uint64_t)&v316 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v341 = sub_10000B4C8(&qword_10054AFB8);
  __chkstk_darwin(v341);
  v345 = (uint64_t)&v316 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v343 = sub_10000B4C8(&qword_10054AFC0);
  v12 = __chkstk_darwin(v343);
  v350 = (char *)&v316 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v346 = (uint64_t)&v316 - v14;
  v369 = type metadata accessor for DynamicTypeSize(0);
  v362 = *(_QWORD *)(v369 - 8);
  v15 = __chkstk_darwin(v369);
  v335 = (char *)&v316 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v334 = (uint64_t)&v316 - v17;
  v18 = sub_10000B4C8(&qword_100548310);
  __chkstk_darwin(v18);
  v329 = (uint64_t)&v316 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for WidgetMusicItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v327 = (uint64_t)&v316 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = type metadata accessor for PlaybackButtonLarge(0);
  __chkstk_darwin(v328);
  v332 = (uint64_t)&v316 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v330 = sub_10000B4C8(&qword_10054ACE8);
  __chkstk_darwin(v330);
  v333 = (uint64_t)&v316 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v331 = sub_10000B4C8(&qword_10054ADA0);
  __chkstk_darwin(v331);
  v340 = (uint64_t)&v316 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10000B4C8(&qword_10054AFC8);
  v338 = *(_QWORD *)(v26 - 8);
  v339 = v26;
  __chkstk_darwin(v26);
  v360 = (uint64_t)&v316 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10000B4C8(&qword_10054AFD0);
  v336 = *(_QWORD *)(v28 - 8);
  v337 = v28;
  __chkstk_darwin(v28);
  v365 = (uint64_t)&v316 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v368 = sub_10000B4C8(&qword_100548A30);
  __chkstk_darwin(v368);
  v364 = (char *)&v316 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for RedactionReasons(0);
  v318 = *(_QWORD *)(v31 - 8);
  v319 = v31;
  v32 = __chkstk_darwin(v31);
  v317 = (char *)&v316 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v316 = (uint64_t)&v316 - v34;
  v358 = type metadata accessor for RecentlyPlayedLargeContentView(0);
  __chkstk_darwin(v358);
  v377 = (uint64_t)&v316 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v355 = sub_10000B4C8(&qword_100548A40);
  __chkstk_darwin(v355);
  v357 = (uint64_t *)((char *)&v316 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_10000B4C8(&qword_100548A48);
  __chkstk_darwin(v37);
  v39 = (char *)&v316 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v322 = type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry(0);
  v40 = __chkstk_darwin(v322);
  v321 = (uint64_t)&v316 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v40);
  v320 = (uint64_t)&v316 - v43;
  v44 = __chkstk_darwin(v42);
  v361 = (uint64_t)&v316 - v45;
  __chkstk_darwin(v44);
  v47 = (char *)&v316 - v46;
  v353 = sub_10000B4C8(&qword_100549700);
  __chkstk_darwin(v353);
  v49 = (char *)&v316 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v354 = sub_10000B4C8(&qword_10054AFD8);
  __chkstk_darwin(v354);
  v359 = (uint64_t)&v316 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v356 = sub_10000B4C8(&qword_10054AFE0);
  __chkstk_darwin(v356);
  v380 = (uint64_t)&v316 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v371 = sub_10000B4C8(&qword_10054AFE8);
  __chkstk_darwin(v371);
  v366 = (char *)&v316 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10000B4C8(&qword_10054AFF0);
  v374 = *(_QWORD *)(v53 - 8);
  v375 = v53;
  __chkstk_darwin(v53);
  v373 = (char *)&v316 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v372 = sub_10000B4C8(&qword_10054AFF8);
  __chkstk_darwin(v372);
  v376 = (char *)&v316 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v378 = sub_10000B4C8(&qword_10054B000);
  __chkstk_darwin(v378);
  v379 = (char *)&v316 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10000B4C8(&qword_10054B008);
  v325 = *(_QWORD *)(v57 - 8);
  v326 = v57;
  __chkstk_darwin(v57);
  v367 = (char *)&v316 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for ArtworkView(0);
  v60 = __chkstk_darwin(v59);
  v324 = (uint64_t)&v316 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v63 = (char *)&v316 - v62;
  v370 = a1;
  sub_10000D964((uint64_t)a1, (uint64_t)&v316 - v62, type metadata accessor for WidgetMusicItem);
  v64 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v352 = v20;
  v64(v63, 0, 1, v20);
  v65 = Corner.medium.unsafeMutableAddressor();
  v66 = *((_BYTE *)v65 + 16);
  v67 = *(int *)(v59 + 20);
  v323 = v63;
  v68 = &v63[v67];
  *(_OWORD *)v68 = *(_OWORD *)v65;
  v68[16] = v66;
  v363 = a2;
  sub_10003EE7C((uint64_t)v47);
  if ((sub_100081B90() & 1) != 0)
  {
    v69 = LocalizedStringKey.init(stringLiteral:)(0x79616C5020776F4ELL, 0xEB00000000676E69);
    v70 = Text.init(_:tableName:bundle:comment:)(v69);
  }
  else
  {
    if (qword_1005478E0 != -1)
      swift_once(&qword_1005478E0, sub_10009F4CC);
    v392[0] = xmmword_100561408;
    v74 = sub_10001D9DC();
    swift_bridgeObjectRetain();
    v70 = Text.init<A>(_:)(v392, &type metadata for String, v74);
  }
  v75 = v70;
  v76 = v71;
  v77 = v73;
  v78 = v72 & 1;
  sub_10000E750((uint64_t)v47, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v79 = enum case for Text.Case.uppercase(_:);
  v80 = type metadata accessor for Text.Case(0);
  v81 = *(_QWORD *)(v80 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 104))(v39, v79, v80);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v39, 0, 1, v80);
  KeyPath = swift_getKeyPath(&unk_100427228);
  v83 = v357;
  sub_100011370((uint64_t)v39, (uint64_t)v357 + *(int *)(v355 + 28), &qword_100548A48);
  *v83 = KeyPath;
  sub_100011370((uint64_t)v83, (uint64_t)&v49[*(int *)(v353 + 36)], &qword_100548A40);
  *(_QWORD *)v49 = v75;
  *((_QWORD *)v49 + 1) = v76;
  v49[16] = v78;
  *((_QWORD *)v49 + 3) = v77;
  sub_10002EBA0(v75, v76, v78);
  swift_bridgeObjectRetain();
  sub_100011694((uint64_t)v83, &qword_100548A40);
  sub_100011694((uint64_t)v39, &qword_100548A48);
  sub_10001DA20(v75, v76, v78);
  v84 = swift_bridgeObjectRelease(v77);
  v85 = static Font.caption2.getter(v84);
  v86 = Font.bold()();
  swift_release(v85);
  v87 = swift_getKeyPath(&unk_1004271C8);
  v88 = v359;
  sub_100011370((uint64_t)v49, v359, &qword_100549700);
  v89 = (uint64_t *)(v88 + *(int *)(v354 + 36));
  *v89 = v87;
  v89[1] = v86;
  sub_100011694((uint64_t)v49, &qword_100549700);
  if (qword_1005477C8 != -1)
    swift_once(&qword_1005477C8, sub_1000339F4);
  v90 = sub_10000B4C8(&qword_100548AA0);
  v91 = sub_10000D78C(v90, (uint64_t)qword_100561238);
  v92 = v380;
  sub_100011370(v91, v380 + *(int *)(v356 + 36), &qword_100548AA0);
  sub_100011530(v88, v92, &qword_10054AFD8);
  v93 = v361;
  v94 = v363;
  sub_10003EE7C(v361);
  v95 = sub_100081B90();
  sub_10000E750(v93, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v96 = v377;
  sub_10000D964(v94, v377, type metadata accessor for RecentlyPlayedLargeContentView);
  v97 = v369;
  v98 = (uint64_t)v364;
  v99 = (uint64_t)v379;
  if ((v95 & 1) != 0)
  {
    sub_10000E750(v96, type metadata accessor for RecentlyPlayedLargeContentView);
    v100 = 1.0;
  }
  else
  {
    v101 = v316;
    v102 = sub_10003EE50(v316);
    v103 = v97;
    v104 = v90;
    v105 = v317;
    static RedactionReasons.placeholder.getter(v102);
    v106 = sub_10001254C(&qword_100548700, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v107 = v319;
    v108 = dispatch thunk of SetAlgebra.isSuperset(of:)(v105, v319, v106);
    v109 = *(void (**)(char *, uint64_t))(v318 + 8);
    v110 = v105;
    v90 = v104;
    v97 = v103;
    v99 = (uint64_t)v379;
    v109(v110, v107);
    v109((char *)v101, v107);
    sub_10000E750(v96, type metadata accessor for RecentlyPlayedLargeContentView);
    if ((v108 & 1) != 0)
      v100 = 1.0;
    else
      v100 = 0.0;
  }
  v111 = v373;
  v112 = v380;
  v113 = v366;
  sub_100011370(v380, (uint64_t)v366, &qword_10054AFE0);
  v114 = v371;
  *(double *)&v113[*(int *)(v371 + 36)] = v100;
  sub_100011694(v112, &qword_10054AFE0);
  v115 = sub_10002F800(&qword_10054B010, &qword_10054AFE8, (uint64_t (*)(void))sub_100095FCC, (uint64_t)&protocol witness table for _OpacityEffect);
  View.widgetAccentable(_:)(1, v114, v115);
  v116 = sub_100011694((uint64_t)v113, &qword_10054AFE8);
  v117 = static Edge.Set.trailing.getter(v116);
  if (qword_100547830 != -1)
    swift_once(&qword_100547830, sub_1000347B0);
  v118 = EdgeInsets.init(_all:)(*(double *)&qword_100561328);
  v120 = v119;
  v122 = v121;
  v124 = v123;
  v126 = v374;
  v125 = v375;
  v127 = (uint64_t)v376;
  (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v376, v111, v375);
  v128 = v127 + *(int *)(v372 + 36);
  *(_BYTE *)v128 = v117;
  *(double *)(v128 + 8) = v118;
  *(_QWORD *)(v128 + 16) = v120;
  *(_QWORD *)(v128 + 24) = v122;
  *(_QWORD *)(v128 + 32) = v124;
  *(_BYTE *)(v128 + 40) = 0;
  v129 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v111, v125);
  v130 = static Edge.Set.bottom.getter(v129);
  v131 = EdgeInsets.init(_all:)(1.0);
  v133 = v132;
  v135 = v134;
  v137 = v136;
  sub_100011370(v127, v99, &qword_10054AFF8);
  v138 = (__int128 *)v378;
  v139 = v99 + *(int *)(v378 + 36);
  *(_BYTE *)v139 = v130;
  *(double *)(v139 + 8) = v131;
  *(_QWORD *)(v139 + 16) = v133;
  *(_QWORD *)(v139 + 24) = v135;
  *(_QWORD *)(v139 + 32) = v137;
  *(_BYTE *)(v139 + 40) = 0;
  sub_100011694(v127, &qword_10054AFF8);
  v140 = enum case for DynamicTypeSize.xLarge(_:);
  v141 = *(uint64_t **)(v362 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v141)(v98, enum case for DynamicTypeSize.xLarge(_:), v97);
  v142 = v97;
  v361 = sub_10001254C(&qword_100548AA8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v98, v98, v97, v361) & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  LODWORD(v319) = v140;
  v143 = sub_10002F800(&qword_10054B028, &qword_10054B000, (uint64_t (*)(void))sub_100096070, (uint64_t)&protocol witness table for _PaddingLayout);
  v359 = sub_100012324(&qword_100548B10, &qword_100548A30, (const char *)&protocol conformance descriptor for PartialRangeThrough<A>);
  View.dynamicTypeSize<A>(_:)(v98, v138, v368, v143, v359);
  sub_100011694(v98, &qword_100548A30);
  sub_100011694(v99, &qword_10054B000);
  v144 = v370;
  v145 = v370[3];
  *(_QWORD *)&v392[0] = v370[2];
  *((_QWORD *)&v392[0] + 1) = v145;
  v146 = sub_10001D9DC();
  swift_bridgeObjectRetain();
  v353 = v146;
  v147 = Text.init<A>(_:)(v392, &type metadata for String, v146);
  v355 = v149;
  v356 = v147;
  v357 = (uint64_t *)v150;
  v151 = *(_QWORD **)((char *)v144 + *(int *)(v352 + 56));
  v152 = v151[2];
  v366 = (char *)v141;
  v354 = v90;
  if (!v152)
  {
    v155 = 0;
    v189 = 0;
    v157 = (char *)_swiftEmptyArrayStorage;
    v156 = 0xE000000000000000;
    goto LABEL_22;
  }
  LODWORD(v352) = v148;
  v153 = qword_100547850;
  swift_bridgeObjectRetain_n(v151, 2);
  if (v153 != -1)
    goto LABEL_38;
  while (1)
  {
    v154 = 0;
    v155 = 0;
    LODWORD(v380) = 0;
    v156 = 0xE000000000000000;
    v157 = (char *)_swiftEmptyArrayStorage;
    v371 = v152;
    v372 = (uint64_t)v151;
    do
    {
      v377 = v155;
      v378 = v156;
      v379 = v157;
      v158 = (char *)v151 + v154++;
      TextBadge.view(favoriteBadgeConfiguration:)(qword_100549010, v158[32]);
      v160 = v159;
      v162 = v161;
      v164 = v163;
      v166 = v165 & 1;
      v167 = static Font.subheadline.getter(v159);
      v168 = static Font.Weight.semibold.getter(v167);
      v169 = Font.weight(_:)(v167, v168);
      swift_release(v167);
      v170 = Text.font(_:)(v169, v160, v162, v166, v164);
      v172 = v171;
      v174 = v173;
      v373 = v175;
      swift_release(v169);
      v176 = v174 & 1;
      sub_10001DA20(v160, v162, v166);
      swift_bridgeObjectRelease(v164);
      LOBYTE(v166) = v380 & 1;
      v178 = v377;
      v177 = v378;
      v179 = v379;
      v180 = v373;
      v181 = static Text.+ infix(_:_:)(v377, v378, v380 & 1, v379, v170, v172, v176, v373);
      v375 = v182;
      v376 = (char *)v181;
      v374 = v183;
      LODWORD(v380) = v184 & 1;
      v185 = v170;
      v186 = v176;
      v187 = v371;
      v151 = (_QWORD *)v372;
      sub_10001DA20(v185, v172, v186);
      swift_bridgeObjectRelease(v180);
      sub_10001DA20(v178, v177, v166);
      v188 = v179;
      v156 = v375;
      v155 = (uint64_t)v376;
      v157 = (char *)v374;
      swift_bridgeObjectRelease(v188);
    }
    while (v187 != v154);
    swift_bridgeObjectRelease_n(v151, 2);
    LOBYTE(v148) = v352;
    v189 = v380;
LABEL_22:
    v98 = (uint64_t)&v381;
    v190 = v148 & 1;
    v192 = v355;
    v191 = v356;
    v193 = (char *)v357;
    v194 = static Text.+ infix(_:_:)(v356, v355, v148 & 1, v357, v155, v156, v189, v157);
    v379 = v195;
    v380 = v194;
    v378 = v196;
    LODWORD(v377) = v197 & 1;
    sub_10001DA20(v155, v156, v189);
    swift_bridgeObjectRelease(v157);
    sub_10001DA20(v191, v192, v190);
    swift_bridgeObjectRelease(v193);
    v198 = swift_getKeyPath(&unk_100427258);
    v138 = v394;
    v199 = v379;
    v200 = v380;
    v201 = v378;
    v395 = v380;
    v396 = v378;
    v202 = v377;
    v397 = v377;
    v398 = v379;
    v399 = v198;
    v400 = 0;
    v203 = static Alignment.leading.getter(v198);
    sub_10003F728(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v394, 0.0, 1, 0.0, 1, v203, v204);
    sub_10001DA20(v200, v201, v202);
    swift_release(v198);
    v205 = swift_bridgeObjectRelease(v199);
    v142 = static Font.headline.getter(v205);
    v140 = swift_getKeyPath(&unk_1004271C8);
    if (qword_1005477D0 != -1)
LABEL_34:
      swift_once(&qword_1005477D0, sub_100033BF8);
    v206 = qword_100561250;
    v207 = swift_getKeyPath(&unk_1004271F8);
    v208 = swift_retain(v206);
    v209 = static Edge.Set.trailing.getter(v208);
    v210 = EdgeInsets.init(_all:)(*(double *)&qword_100561328);
    v390 = 0;
    v211 = v138[6];
    v212 = v138[8];
    v213 = v138[9];
    *(_OWORD *)(v98 + 112) = v138[7];
    *(_OWORD *)(v98 + 128) = v212;
    *(_OWORD *)(v98 + 144) = v213;
    v214 = v138[3];
    v383 = v138[2];
    v384 = v214;
    v215 = v138[5];
    v385 = v138[4];
    v386 = v215;
    v387 = v211;
    v216 = v138[1];
    v381 = *v138;
    v382 = v216;
    *(_QWORD *)(v98 + 160) = v140;
    *(_QWORD *)(v98 + 168) = v142;
    *(_QWORD *)(v98 + 176) = v207;
    *(_QWORD *)(v98 + 184) = v206;
    v388 = v209;
    v217 = v391;
    *(_DWORD *)(v98 + 193) = *(_DWORD *)v391;
    *(_DWORD *)(v98 + 196) = *(_DWORD *)&v391[3];
    *(double *)(v98 + 200) = v210;
    *(_QWORD *)(v98 + 208) = v218;
    *(_QWORD *)(v98 + 216) = v219;
    *(_QWORD *)(v98 + 224) = v220;
    v389 = v390;
    v221 = enum case for DynamicTypeSize.xxLarge(_:);
    v222 = (uint64_t)v364;
    v223 = v369;
    ((void (*)(char *, _QWORD, uint64_t))v366)(v364, enum case for DynamicTypeSize.xxLarge(_:), v369);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v222, v222, v223, v361) & 1) == 0)
    {
      __break(1u);
LABEL_36:
      swift_once(&qword_1005477D8, sub_100033C14);
      goto LABEL_29;
    }
    LODWORD(v380) = v221;
    v224 = sub_10000B4C8(&qword_10054B038);
    v225 = sub_10002F800(&qword_10054B040, &qword_10054B038, (uint64_t (*)(void))sub_10009612C, (uint64_t)&protocol witness table for _PaddingLayout);
    View.dynamicTypeSize<A>(_:)(v222, v224, v368, v225, v359);
    sub_100011694(v222, &qword_100548A30);
    v226 = *(_OWORD *)(v98 + 192);
    v392[11] = *(_OWORD *)(v98 + 176);
    v392[12] = v226;
    v393[0] = *(_OWORD *)(v98 + 208);
    *(_OWORD *)((char *)v393 + 9) = *(_OWORD *)(v98 + 217);
    v227 = *(_OWORD *)(v98 + 128);
    v392[7] = *(_OWORD *)(v98 + 112);
    v392[8] = v227;
    v228 = *(_OWORD *)(v98 + 160);
    v392[9] = *(_OWORD *)(v98 + 144);
    v392[10] = v228;
    v392[3] = v384;
    v392[4] = v385;
    v392[5] = v386;
    v392[6] = v387;
    v392[0] = v381;
    v392[1] = v382;
    v392[2] = v383;
    sub_100096340((uint64_t)v392);
    v230 = v370[4];
    v229 = v370[5];
    if (!v229)
      v230 = 0;
    v231 = 0xE000000000000000;
    if (v229)
      v231 = v370[5];
    *(_QWORD *)&v381 = v230;
    *((_QWORD *)&v381 + 1) = v231;
    swift_bridgeObjectRetain();
    v232 = Text.init<A>(_:)(&v381, &type metadata for String, v353);
    v234 = v233;
    v236 = v235;
    v238 = v237 & 1;
    v221 = v222;
    v239 = static Font.body.getter(v232);
    v223 = Text.font(_:)(v239, v232, v234, v238, v236);
    v217 = v240;
    LOBYTE(v98) = v241;
    v379 = v242;
    swift_release(v239);
    sub_10001DA20(v232, v234, v238);
    swift_bridgeObjectRelease(v236);
    if (qword_1005477D8 != -1)
      goto LABEL_36;
LABEL_29:
    v243 = v354;
    v244 = sub_10000D78C(v354, (uint64_t)qword_100561258);
    v245 = sub_100012324(&qword_100549740, &qword_100548AA0, (const char *)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
    v246 = v98 & 1;
    v247 = v379;
    v152 = Text.foregroundStyle<A>(_:)(v244, v223, v217, v246, v379, v243, v245);
    v249 = v248;
    v251 = v250;
    v253 = v252;
    sub_10001DA20(v223, (uint64_t)v217, v246);
    swift_bridgeObjectRelease(v247);
    *(_QWORD *)&v381 = v152;
    *((_QWORD *)&v381 + 1) = v249;
    LOBYTE(v382) = v251 & 1;
    *((_QWORD *)&v382 + 1) = v253;
    v254 = v369;
    v151 = v366;
    ((void (*)(uint64_t, _QWORD, uint64_t))v366)(v221, v380, v369);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v221, v221, v254, v361) & 1) != 0)
      break;
    __break(1u);
LABEL_38:
    swift_once(&qword_100547850, sub_100038244);
  }
  View.dynamicTypeSize<A>(_:)(v221, &type metadata for Text, v368, &protocol witness table for Text, v359);
  sub_100011694(v221, &qword_100548A30);
  sub_10001DA20(v381, *((uint64_t *)&v381 + 1), v382);
  swift_bridgeObjectRelease(*((_QWORD *)&v382 + 1));
  v255 = v327;
  sub_10000D964((uint64_t)v370, v327, type metadata accessor for WidgetMusicItem);
  v256 = v320;
  sub_10003EE7C(v320);
  v257 = v322;
  v258 = v329;
  sub_100011370(v256 + *(int *)(v322 + 24), v329, &qword_100548310);
  sub_10000E750(v256, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v259 = v321;
  sub_10003EE7C(v321);
  LOBYTE(v257) = *(_BYTE *)(v259 + *(int *)(v257 + 20));
  sub_10000E750(v259, type metadata accessor for RecentlyPlayedWidgetTimelineProvider.Entry);
  v260 = v255;
  v261 = v332;
  sub_10000DB44(v260, v332, type metadata accessor for WidgetMusicItem);
  v262 = v328;
  v263 = sub_100011530(v258, v261 + *(int *)(v328 + 20), &qword_100548310);
  *(_BYTE *)(v261 + *(int *)(v262 + 24)) = v257;
  v264 = static Edge.Set.top.getter(v263);
  v265 = v334;
  sub_10003EC38(v334);
  v266 = v335;
  ((void (*)(char *, _QWORD, uint64_t))v366)(v335, v319, v254);
  v267 = sub_10001254C(&qword_100548BB8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v268 = dispatch thunk of static Comparable.< infix(_:_:)(v266, v265, v254, v267);
  v269 = *(void (**)(char *, uint64_t))(v362 + 8);
  v269(v266, v254);
  v269((char *)v265, v254);
  v270 = 8.0;
  if ((v268 & 1) != 0)
    v270 = 2.0;
  v271 = EdgeInsets.init(_all:)(v270);
  v273 = v272;
  v275 = v274;
  v277 = v276;
  v278 = v333;
  sub_10000D964(v261, v333, type metadata accessor for PlaybackButtonLarge);
  v279 = v278 + *(int *)(v330 + 36);
  *(_BYTE *)v279 = v264;
  *(double *)(v279 + 8) = v271;
  *(_QWORD *)(v279 + 16) = v273;
  *(_QWORD *)(v279 + 24) = v275;
  *(_QWORD *)(v279 + 32) = v277;
  *(_BYTE *)(v279 + 40) = 0;
  v280 = sub_10000E750(v261, type metadata accessor for PlaybackButtonLarge);
  v281 = static Edge.Set.bottom.getter(v280);
  v282 = EdgeInsets.init(_all:)(5.0);
  v284 = v283;
  v286 = v285;
  v288 = v287;
  v289 = v340;
  sub_100011370(v278, v340, &qword_10054ACE8);
  v290 = v289 + *(int *)(v331 + 36);
  *(_BYTE *)v290 = v281;
  *(double *)(v290 + 8) = v282;
  *(_QWORD *)(v290 + 16) = v284;
  *(_QWORD *)(v290 + 24) = v286;
  *(_QWORD *)(v290 + 32) = v288;
  *(_BYTE *)(v290 + 40) = 0;
  v291 = sub_100011694(v278, &qword_10054ACE8);
  v292 = static Axis.Set.vertical.getter(v291);
  v293 = (uint64_t)v342;
  *v342 = v292;
  v294 = sub_10000B4C8(&qword_10054B088);
  v295 = v360;
  v296 = sub_1000883F0(v365, v360, (uint64_t)v370, v289, v293 + *(int *)(v294 + 44));
  v297 = static Alignment.center.getter(v296);
  v298 = v344;
  sub_10003F900(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v344, 0.0, 1, INFINITY, 0, v297, v299);
  sub_100011694(v293, &qword_100549A78);
  v300 = swift_getKeyPath(&unk_100427168);
  v301 = v345;
  sub_100011370(v298, v345, &qword_100549A80);
  v302 = v301 + *(int *)(v341 + 36);
  *(_QWORD *)v302 = v300;
  *(_QWORD *)(v302 + 8) = 1;
  *(_BYTE *)(v302 + 16) = 0;
  sub_100011694(v298, &qword_100549A80);
  v304 = v347;
  v303 = v348;
  v305 = v349;
  (*(void (**)(char *, _QWORD, uint64_t))(v348 + 104))(v347, enum case for Text.TruncationMode.tail(_:), v349);
  v306 = swift_getKeyPath(&unk_100427198);
  v307 = (uint64_t)v350;
  v308 = (uint64_t *)&v350[*(int *)(v343 + 36)];
  v309 = sub_10000B4C8(&qword_10054ACD8);
  (*(void (**)(char *, char *, uint64_t))(v303 + 16))((char *)v308 + *(int *)(v309 + 28), v304, v305);
  *v308 = v306;
  sub_100011370(v301, v307, &qword_10054AFB8);
  (*(void (**)(char *, uint64_t))(v303 + 8))(v304, v305);
  sub_100011694(v301, &qword_10054AFB8);
  v310 = v346;
  sub_100011530(v307, v346, &qword_10054AFC0);
  v312 = (uint64_t)v323;
  v311 = v324;
  sub_10000D964((uint64_t)v323, v324, type metadata accessor for ArtworkView);
  sub_100011370(v310, v307, &qword_10054AFC0);
  v313 = v351;
  sub_10000D964(v311, v351, type metadata accessor for ArtworkView);
  v314 = sub_10000B4C8(&qword_10054B090);
  sub_100011370(v307, v313 + *(int *)(v314 + 48), &qword_10054AFC0);
  sub_100011694(v310, &qword_10054AFC0);
  sub_10000E750(v312, type metadata accessor for ArtworkView);
  sub_100011694(v289, &qword_10054ADA0);
  (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v295, v339);
  (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v365, v337);
  (*(void (**)(char *, uint64_t))(v325 + 8))(v367, v326);
  sub_100011694(v307, &qword_10054AFC0);
  return sub_10000E750(v311, type metadata accessor for ArtworkView);
}

