uint64_t sub_10094C9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[14] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[15] = swift_task_alloc(v10);
  v7[16] = swift_task_alloc(v10);
  v11 = type metadata accessor for Collaboration.Object(0);
  v7[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Collaboration.Flow(0);
  v7[18] = v12;
  v7[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[20] = swift_task_alloc(v13);
  v7[21] = swift_task_alloc(v13);
  v14 = type metadata accessor for Playlist.Collaborator.Status(0);
  v7[22] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[23] = v15;
  v7[24] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011D0EB8);
  v7[25] = v16;
  v7[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D0EC0);
  v7[27] = v17;
  v18 = (*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[28] = swift_task_alloc(v18);
  v7[29] = swift_task_alloc(v18);
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  v19 = type metadata accessor for Playlist.Collaboration(0);
  v7[33] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[34] = v20;
  v7[35] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D0EC8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[36] = swift_task_alloc(v21);
  v7[37] = swift_task_alloc(v21);
  v22 = type metadata accessor for MainActor(0);
  v7[38] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  v7[39] = v24;
  v7[40] = v25;
  return swift_task_switch(sub_10094CC1C, v24, v25);
}

uint64_t sub_10094CC1C()
{
  uint64_t *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t **v6;

  Collaboration.Manager.canCollaborate(for:)();
  v1 = Collaboration.Manager.participantProfile.getter();
  v2 = v0[37];
  if (v1)
  {
    v3 = v1;
    ICMusicUserProfile.collaborator.getter(v0[37]);

    v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
  }
  else
  {
    v5 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  }
  v6 = (uint64_t **)swift_task_alloc(dword_1011D68B4);
  v0[41] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = (uint64_t *)sub_10094CF54;
  return Collaboration.Manager.validate(_:url:)(v0[35], v0[10], v0[11]);
}

uint64_t sub_10094CF54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10094D758;
  else
    v4 = sub_10094CFB4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 312), *(_QWORD *)(v2 + 320));
}

uint64_t sub_10094CFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  void *Strong;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = swift_release();
  Playlist.Collaboration.collaboratorStatus.getter(v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v2, enum case for Playlist.Collaborator.Status.notJoined(_:), v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v2, 0, 1, v5);
  v8 = v3 + *(int *)(v4 + 48);
  sub_10004A160(v1, v3, &qword_1011D0EC0);
  sub_10004A160(v2, v8, &qword_1011D0EC0);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v9(v3, 1, v5) != 1)
  {
    v11 = *(_QWORD *)(v0 + 176);
    sub_10004A160(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 240), &qword_1011D0EC0);
    v12 = v9(v8, 1, v11);
    v13 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 248);
    if (v12 != 1)
    {
      v17 = *(_QWORD *)(v0 + 208);
      v19 = *(_QWORD *)(v0 + 184);
      v18 = *(_QWORD *)(v0 + 192);
      v20 = *(_QWORD *)(v0 + 176);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v18, v8, v20);
      v21 = sub_100048748(&qword_1011D0ED8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v18, v20, v21);
      v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v23(v18, v20);
      sub_10004FF60(v14, &qword_1011D0EC0);
      v23(v13, v20);
      sub_10004FF60(v17, &qword_1011D0EC0);
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_10:
      v38 = *(_QWORD *)(v0 + 256);
      v39 = *(_QWORD *)(v0 + 232);
      v40 = *(_QWORD *)(v0 + 128);
      v41 = *(_QWORD *)(v0 + 104);
      v42 = *(_QWORD *)(v0 + 112);
      v43 = Logger.collaboration.unsafeMutableAddressor();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v40, v43, v41);
      v44 = sub_10004A160(v38, v39, &qword_1011D0EC0);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter();
      v47 = os_log_type_enabled(v45, v46);
      v48 = *(_QWORD *)(v0 + 296);
      v49 = *(_QWORD *)(v0 + 280);
      v50 = *(_QWORD *)(v0 + 232);
      v102 = *(_QWORD *)(v0 + 264);
      if (v47)
      {
        v52 = *(_QWORD *)(v0 + 216);
        v51 = *(_QWORD *)(v0 + 224);
        v89 = *(_QWORD *)(v0 + 256);
        v90 = *(_QWORD *)(v0 + 112);
        v94 = *(_QWORD *)(v0 + 104);
        v97 = *(_QWORD *)(v0 + 128);
        v99 = *(_QWORD *)(v0 + 272);
        v53 = (uint8_t *)swift_slowAlloc(12, -1);
        v92 = v48;
        v54 = swift_slowAlloc(32, -1);
        v104 = v54;
        *(_DWORD *)v53 = 136446210;
        sub_10004A160(v50, v51, &qword_1011D0EC0);
        v55 = String.init<A>(describing:)(v51, v52);
        *(_QWORD *)(v0 + 64) = sub_100322200(v55, v56, &v104);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
        swift_bridgeObjectRelease();
        sub_10004FF60(v50, &qword_1011D0EC0);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Skipping with=%{public}s", v53, 0xCu);
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v54, -1, -1);
        swift_slowDealloc(v53, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v97, v94);
        sub_10004FF60(v89, &qword_1011D0EC0);
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v49, v102);
        v57 = v92;
      }
      else
      {
        v58 = *(_QWORD *)(v0 + 128);
        v59 = *(_QWORD *)(v0 + 104);
        v60 = *(_QWORD *)(v0 + 112);
        v61 = *(_QWORD *)(v0 + 272);
        v62 = *(_QWORD *)(v0 + 256);

        sub_10004FF60(v50, &qword_1011D0EC0);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
        sub_10004FF60(v62, &qword_1011D0EC0);
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v49, v102);
        v57 = v48;
      }
      goto LABEL_19;
    }
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011D0EC0);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 208), &qword_1011D0EB8);
    goto LABEL_10;
  }
  v10 = *(_QWORD *)(v0 + 176);
  sub_10004FF60(*(_QWORD *)(v0 + 248), &qword_1011D0EC0);
  if (v9(v8, 1, v10) != 1)
    goto LABEL_6;
  sub_10004FF60(*(_QWORD *)(v0 + 208), &qword_1011D0EC0);
LABEL_8:
  v101 = v0 + 40;
  v24 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 296);
  v27 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 152);
  v96 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 80);
  v29 = *(_QWORD *)(v0 + 88);
  v30 = sub_100007E8C(&qword_1011D0ED0);
  v31 = v26 + *(int *)(v30 + 48);
  v32 = *(int *)(v30 + 64);
  sub_10004A160(v25, v26, &qword_1011D0EC8);
  v33 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v29, v33);
  *(_BYTE *)(v26 + v32) = Playlist.Collaboration.isOpenInvitation.getter() & 1;
  swift_storeEnumTagMultiPayload(v26, v27, 0);
  sub_10005B704(v28, v96, type metadata accessor for Collaboration.Object);
  sub_10004A160(v25, v24, &qword_1011D0EC8);
  v34 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v24, 1, v34);
  v36 = *(_QWORD *)(v0 + 288);
  if (v35 == 1)
  {
    sub_10004FF60(v36, &qword_1011D0EC8);
    v37 = 1;
  }
  else
  {
    v63 = *(_BYTE *)(v36 + *(int *)(v34 + 28));
    sub_10005B748(v36, type metadata accessor for Collaboration.Flow.Collaborator);
    v37 = v63 ^ 1;
  }
  v64 = *(_QWORD *)(v0 + 160);
  v65 = *(_QWORD **)(v0 + 168);
  v66 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 136);
  v68 = *(_QWORD *)(v0 + 96);
  v69 = *(_QWORD *)(v0 + 72);
  swift_retain_n(v69, 2);
  Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)(v66, v67, v69, v37 & 1, (uint64_t)&unk_1011B45D0, 0, (uint64_t)sub_100973CDC, v69, v65);
  sub_10005B704((uint64_t)v65, v64, type metadata accessor for Collaboration.Flow.View);
  v70 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B45D8));
  v71 = (void *)Card.ViewController.init(content:)(v64);
  v72 = v68 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v68 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v0 + 16, 0, 0);
  sub_10004A160(v72, v101, (uint64_t *)&unk_1011B6910);
  if ((*(_BYTE *)(v0 + 48) & 1) != 0)
  {
    sub_10004FF60(v101, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v101);
    sub_10004FF60(v101, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      objc_msgSend(Strong, "presentViewController:animated:completion:", v71, 1, 0);

    }
  }

  v74 = *(_QWORD *)(v0 + 296);
  v76 = *(_QWORD *)(v0 + 272);
  v75 = *(_QWORD *)(v0 + 280);
  v78 = *(_QWORD *)(v0 + 256);
  v77 = *(_QWORD *)(v0 + 264);
  sub_10005B748(*(_QWORD *)(v0 + 168), type metadata accessor for Collaboration.Flow.View);
  sub_10004FF60(v78, &qword_1011D0EC0);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
  v57 = v74;
LABEL_19:
  sub_10004FF60(v57, &qword_1011D0EC8);
  v79 = *(_QWORD *)(v0 + 288);
  v80 = *(_QWORD *)(v0 + 280);
  v82 = *(_QWORD *)(v0 + 248);
  v81 = *(_QWORD *)(v0 + 256);
  v84 = *(_QWORD *)(v0 + 232);
  v83 = *(_QWORD *)(v0 + 240);
  v85 = *(_QWORD *)(v0 + 224);
  v86 = *(_QWORD *)(v0 + 208);
  v87 = *(_QWORD *)(v0 + 192);
  v91 = *(_QWORD *)(v0 + 168);
  v93 = *(_QWORD *)(v0 + 160);
  v95 = *(_QWORD *)(v0 + 152);
  v98 = *(_QWORD *)(v0 + 136);
  v100 = *(_QWORD *)(v0 + 128);
  v103 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10094D758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release();
  sub_10004FF60(v1, &qword_1011D0EC8);
  v2 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  swift_errorRetain(v2);
  v7 = swift_errorRetain(v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138543362;
    swift_errorRetain(v2);
    v12 = _swift_stdlib_bridgeErrorToNSError(v2);
    *(_QWORD *)(v0 + 56) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    *v11 = v12;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Can't collaborate=%{public}@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  Collaboration.Manager.handleError(_:)(v2);
  swift_errorRelease(v2);
  v14 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10094D9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  double result;
  uint64_t v36;
  NSObject *v37;
  __n128 v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v42 = a3;
  v47 = a1;
  v48 = a2;
  v3 = type metadata accessor for Collaboration.Object(0);
  v43 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v43 + 64);
  __chkstk_darwin(v3);
  v46 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v5);
  v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - v12;
  v14 = Logger.collaboration.unsafeMutableAddressor();
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16 = v15(v13, v14, v7);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Will present moderation flow.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v13, v7);
  v21 = v48;
  if (v48)
  {
    v22 = qword_10119B8C8;
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once(&qword_10119B8C8, sub_1000E97E8);
    v23 = qword_10124C7A0;
    v24 = type metadata accessor for TaskPriority(0);
    v25 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v45, 1, 1, v24);
    v26 = v46;
    sub_10005B704(v42, v46, type metadata accessor for Collaboration.Object);
    type metadata accessor for MainActor(0);
    swift_retain_n(v23, 2);
    v27 = v44;
    v29 = static MainActor.shared.getter(v28);
    v30 = *(unsigned __int8 *)(v43 + 80);
    v31 = (v30 + 48) & ~v30;
    v32 = (v4 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    v34 = (_QWORD *)swift_allocObject(&unk_1010E3DC8, v33 + 8, v30 | 7);
    v34[2] = v29;
    v34[3] = &protocol witness table for MainActor;
    v34[4] = v47;
    v34[5] = v21;
    sub_10005B6C0(v26, (uint64_t)v34 + v31, type metadata accessor for Collaboration.Object);
    *(_QWORD *)((char *)v34 + v32) = v23;
    *(_QWORD *)((char *)v34 + v33) = v27;
    sub_100166D14(v25, (uint64_t)&unk_1011D0E78, (uint64_t)v34);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    v36 = v15(v10, v14, v7);
    v37 = Logger.logObject.getter(v36);
    v39 = static os_log_type_t.fault.getter(v38);
    if (os_log_type_enabled(v37, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v39, "Missing social profile id", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

    v20(v10, v7);
    return static Collaboration.Error.tapToRadarAlert()();
  }
  return result;
}

uint64_t sub_10094DD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  v9 = type metadata accessor for Logger(0);
  v8[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[14] = v10;
  v8[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Collaboration.Object(0);
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Collaboration.Flow(0);
  v8[17] = v12;
  v8[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[19] = swift_task_alloc(v13);
  v8[20] = swift_task_alloc(v13);
  v14 = sub_100007E8C((uint64_t *)&unk_1011D0E80);
  v8[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist.Collaborator(0);
  v8[22] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v8[23] = v16;
  v8[24] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D0BD0);
  v8[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011D0BD8);
  v8[26] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[27] = v19;
  v8[28] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MusicPropertySource(0);
  v8[29] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v8[30] = v21;
  v8[31] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[32] = swift_task_alloc(v22);
  v8[33] = swift_task_alloc(v22);
  v8[34] = swift_task_alloc(v22);
  v23 = type metadata accessor for MainActor(0);
  v8[35] = static MainActor.shared.getter(v24);
  v25 = dispatch thunk of Actor.unownedExecutor.getter(v23, &protocol witness table for MainActor);
  v8[36] = v25;
  v8[37] = v26;
  return swift_task_switch(sub_10094DF74, v25, v26);
}

uint64_t sub_10094DF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  Swift::String v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *Strong;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *log;
  os_log_t loga;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 304) = MusicItemID.init(_:)(v1, v3);
  *(_QWORD *)(v0 + 312) = v4;
  Collaboration.Object.musicItem.getter(v2);
  v5 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v0 + 320) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 328) = v6;
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  *(_QWORD *)(v0 + 336) = v7;
  if (v7(v2, 1, v5) != 1)
  {
    v18 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 232);
    v20 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v21 = swift_allocObject(v20, 40, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100EA7A90;
    sub_100007E8C(&qword_10119F4A8);
    v22 = static PartialMusicProperty<A>.collaborators.getter();
    *(_QWORD *)(v21 + 32) = v22;
    specialized Array._endMutation()(v22);
    *(_QWORD *)(v0 + 344) = v21;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, enum case for MusicPropertySource.library(_:), v19);
    v23 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
    *(_QWORD *)(v0 + 352) = v23;
    v24 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    *v23 = v0;
    v23[1] = sub_10094E710;
    return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 272), v21, *(_QWORD *)(v0 + 248), v5, &protocol witness table for Playlist, &protocol witness table for Playlist, v24);
  }
  v8 = *(_QWORD *)(v0 + 264);
  swift_release();
  sub_10004FF60(v8, &qword_1011A30F0);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 336);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 328) + 56))(v11, 1, 1, v10);
  sub_10004A160(v11, v12, &qword_1011A30F0);
  v13 = v9(v12, 1, v10);
  if ((_DWORD)v13 == 1)
  {
    v14 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 200);
    sub_10004FF60(*(_QWORD *)(v0 + 256), &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v16, 1, 1, v14);
LABEL_6:
    v32 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRelease();
    v33 = &qword_1011D0BD0;
    goto LABEL_7;
  }
  v26 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 328);
  v28 = *(_QWORD *)(v0 + 256);
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 216);
  v31 = *(_QWORD *)(v0 + 200);
  Playlist.collaborators.getter(v13);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v29) == 1)
    goto LABEL_6;
  v63 = *(_QWORD *)(v0 + 304);
  v62 = *(_QWORD *)(v0 + 312);
  v64 = *(_QWORD *)(v0 + 224);
  v65 = *(_QWORD *)(v0 + 176);
  v66 = *(_QWORD *)(v0 + 184);
  v67 = *(char **)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(v64, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  v68 = sub_10091FBA8(v64, v63, v62, v67);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, double))(v66 + 48))(v67, 1, v65, v68) != 1)
  {
    v69 = *(_QWORD *)(v0 + 184);
    v70 = *(_QWORD *)(v0 + 192);
    v71 = *(_QWORD *)(v0 + 176);
    v72 = *(_QWORD **)(v0 + 160);
    v74 = *(_QWORD *)(v0 + 136);
    v73 = *(_QWORD *)(v0 + 144);
    v75 = *(_QWORD *)(v0 + 128);
    v76 = *(_QWORD *)(v0 + 88);
    v91 = *(_QWORD *)(v0 + 152);
    v93 = *(_QWORD *)(v0 + 96);
    v77 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 32))(v70, *(_QWORD *)(v0 + 168), v71);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v73, v70, v71);
    swift_storeEnumTagMultiPayload(v73, v74, 1);
    sub_10005B704(v77, v75, type metadata accessor for Collaboration.Object);
    swift_retain_n(v76, 2);
    Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)(v73, v75, v76, 0, 0, 0, (uint64_t)sub_100973CDC, v76, v72);
    sub_10005B704((uint64_t)v72, v91, type metadata accessor for Collaboration.Flow.View);
    v78 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B45D8));
    v79 = (void *)Card.ViewController.init(content:)(v91);
    v80 = v93 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v93 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v0 + 16, 0, 0);
    v81 = v80;
    v82 = v0 + 40;
    sub_10004A160(v81, v0 + 40, (uint64_t *)&unk_1011B6910);
    if ((*(_BYTE *)(v0 + 48) & 1) != 0)
    {
      sub_10004FF60(v82, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v82);
      sub_10004FF60(v82, (uint64_t *)&unk_1011B6910);
      if (Strong)
      {
        objc_msgSend(Strong, "presentViewController:animated:completion:", v79, 1, 0);

      }
    }

    v84 = *(_QWORD *)(v0 + 272);
    v86 = *(_QWORD *)(v0 + 216);
    v85 = *(_QWORD *)(v0 + 224);
    v87 = *(_QWORD *)(v0 + 208);
    v89 = *(_QWORD *)(v0 + 184);
    v88 = *(_QWORD *)(v0 + 192);
    v90 = *(_QWORD *)(v0 + 176);
    sub_10005B748(*(_QWORD *)(v0 + 160), type metadata accessor for Collaboration.Flow.View);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v90);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    sub_10004FF60(v84, &qword_1011A30F0);
    goto LABEL_11;
  }
  v32 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  v33 = (uint64_t *)&unk_1011D0E80;
LABEL_7:
  sub_10004FF60(v32, v33);
  v34 = *(_QWORD *)(v0 + 272);
  v36 = *(_QWORD *)(v0 + 64);
  v35 = *(void **)(v0 + 72);
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = v36;
  v37._object = v35;
  String.append(_:)(v37);
  v38 = sub_10044BB1C();
  v39 = swift_allocError(&type metadata for Collaboration.Error, v38, 0, 0);
  *(_QWORD *)v40 = 0x70206C6169636F73;
  *(_QWORD *)(v40 + 8) = 0xEF3D656C69666F72;
  *(_BYTE *)(v40 + 16) = 2;
  swift_willThrow(v41);
  sub_10004FF60(v34, &qword_1011A30F0);
  v43 = *(_QWORD *)(v0 + 112);
  v42 = *(_QWORD *)(v0 + 120);
  v44 = *(_QWORD *)(v0 + 104);
  v45 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v45, v44);
  swift_errorRetain(v39);
  v46 = swift_errorRetain(v39);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.error.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    log = v47;
    v49 = (uint8_t *)swift_slowAlloc(12, -1);
    v50 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v49 = 138543362;
    swift_errorRetain(v39);
    v51 = _swift_stdlib_bridgeErrorToNSError(v39);
    *(_QWORD *)(v0 + 56) = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    *v50 = v51;
    swift_errorRelease(v39);
    swift_errorRelease(v39);
    _os_log_impl((void *)&_mh_execute_header, log, v48, "Can't present approval flow=%{public}@", v49, 0xCu);
    v52 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v50, 1, v52);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v49, -1, -1);

    swift_errorRelease(v39);
  }
  else
  {
    swift_errorRelease(v39);
    swift_errorRelease(v39);
    swift_errorRelease(v39);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
LABEL_11:
  v53 = *(_QWORD *)(v0 + 264);
  v55 = *(_QWORD *)(v0 + 248);
  v54 = *(_QWORD *)(v0 + 256);
  v56 = *(_QWORD *)(v0 + 224);
  v58 = *(_QWORD *)(v0 + 192);
  v57 = *(_QWORD *)(v0 + 200);
  v60 = *(_QWORD *)(v0 + 160);
  v59 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v92 = *(_QWORD *)(v0 + 144);
  v94 = *(_QWORD *)(v0 + 128);
  loga = *(os_log_t *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(loga);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10094E710()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 352);
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[30] + 8))(v2[31], v2[29]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v2[36];
    v5 = v2[37];
    v6 = sub_10094EE00;
  }
  else
  {
    v7 = v2[40];
    v8 = v2[41];
    v9 = v2[33];
    (*(void (**)(_QWORD, _QWORD))(v2[30] + 8))(v2[31], v2[29]);
    v10 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v9, v7, v10);
    v4 = v2[36];
    v5 = v2[37];
    v6 = sub_10094E7DC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10094E7DC()
{
  uint64_t v0;
  __n128 v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *Strong;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;

  v1 = swift_release();
  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 336);
  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 328) + 56))(v4, 0, 1, v3, v1);
  sub_10004A160(v4, v5, &qword_1011A30F0);
  v6 = v2(v5, 1, v3);
  if ((_DWORD)v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 200);
    sub_10004FF60(*(_QWORD *)(v0 + 256), &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, 1, 1, v7);
LABEL_4:
    v16 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRelease();
    v17 = &qword_1011D0BD0;
LABEL_5:
    sub_10004FF60(v16, v17);
    v18 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(void **)(v0 + 72);
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = v18;
    v21._object = v20;
    String.append(_:)(v21);
    v22 = sub_10044BB1C();
    v23 = swift_allocError(&type metadata for Collaboration.Error, v22, 0, 0);
    *(_QWORD *)v24 = 0x70206C6169636F73;
    *(_QWORD *)(v24 + 8) = 0xEF3D656C69666F72;
    *(_BYTE *)(v24 + 16) = 2;
    swift_willThrow(v25);
    sub_10004FF60(v19, &qword_1011A30F0);
    v27 = *(_QWORD *)(v0 + 112);
    v26 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 104);
    v29 = Logger.collaboration.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v29, v28);
    swift_errorRetain(v23);
    v30 = swift_errorRetain(v23);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v79 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v33 = 138543362;
      swift_errorRetain(v23);
      v34 = _swift_stdlib_bridgeErrorToNSError(v23);
      *(_QWORD *)(v0 + 56) = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
      *v79 = v34;
      swift_errorRelease(v23);
      swift_errorRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Can't present approval flow=%{public}@", v33, 0xCu);
      v35 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v79, 1, v35);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v33, -1, -1);

      swift_errorRelease(v23);
    }
    else
    {
      swift_errorRelease(v23);
      swift_errorRelease(v23);
      swift_errorRelease(v23);

    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 256);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 200);
  Playlist.collaborators.getter(v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
    goto LABEL_4;
  v46 = *(_QWORD *)(v0 + 304);
  v47 = *(_QWORD *)(v0 + 312);
  v48 = *(_QWORD *)(v0 + 224);
  v49 = *(_QWORD *)(v0 + 176);
  v50 = *(_QWORD *)(v0 + 184);
  v51 = *(char **)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(v48, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  v52 = sub_10091FBA8(v48, v46, v47, v51);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, double))(v50 + 48))(v51, 1, v49, v52) == 1)
  {
    v16 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
    v17 = (uint64_t *)&unk_1011D0E80;
    goto LABEL_5;
  }
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(_QWORD *)(v0 + 192);
  v55 = *(_QWORD *)(v0 + 176);
  v56 = *(_QWORD **)(v0 + 160);
  v58 = *(_QWORD *)(v0 + 136);
  v57 = *(_QWORD *)(v0 + 144);
  v59 = *(_QWORD *)(v0 + 128);
  v60 = *(_QWORD *)(v0 + 88);
  v75 = *(_QWORD *)(v0 + 152);
  v77 = *(_QWORD *)(v0 + 96);
  v61 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 32))(v54, *(_QWORD *)(v0 + 168), v55);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v57, v54, v55);
  swift_storeEnumTagMultiPayload(v57, v58, 1);
  sub_10005B704(v61, v59, type metadata accessor for Collaboration.Object);
  swift_retain_n(v60, 2);
  Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)(v57, v59, v60, 0, 0, 0, (uint64_t)sub_100973CDC, v60, v56);
  sub_10005B704((uint64_t)v56, v75, type metadata accessor for Collaboration.Flow.View);
  v62 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B45D8));
  v63 = (void *)Card.ViewController.init(content:)(v75);
  v64 = v77 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v77 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v0 + 16, 0, 0);
  v65 = v64;
  v66 = v0 + 40;
  sub_10004A160(v65, v0 + 40, (uint64_t *)&unk_1011B6910);
  if ((*(_BYTE *)(v0 + 48) & 1) != 0)
  {
    sub_10004FF60(v66, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v66);
    sub_10004FF60(v66, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      objc_msgSend(Strong, "presentViewController:animated:completion:", v63, 1, 0);

    }
  }

  v68 = *(_QWORD *)(v0 + 272);
  v70 = *(_QWORD *)(v0 + 216);
  v69 = *(_QWORD *)(v0 + 224);
  v71 = *(_QWORD *)(v0 + 208);
  v73 = *(_QWORD *)(v0 + 184);
  v72 = *(_QWORD *)(v0 + 192);
  v74 = *(_QWORD *)(v0 + 176);
  sub_10005B748(*(_QWORD *)(v0 + 160), type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
  sub_10004FF60(v68, &qword_1011A30F0);
LABEL_9:
  v36 = *(_QWORD *)(v0 + 264);
  v38 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 256);
  v39 = *(_QWORD *)(v0 + 224);
  v41 = *(_QWORD *)(v0 + 192);
  v40 = *(_QWORD *)(v0 + 200);
  v43 = *(_QWORD *)(v0 + 160);
  v42 = *(_QWORD *)(v0 + 168);
  v44 = *(_QWORD *)(v0 + 152);
  v76 = *(_QWORD *)(v0 + 144);
  v78 = *(_QWORD *)(v0 + 128);
  v80 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v76);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10094EE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v3, v1, v4);
  v5 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  swift_errorRetain(v5);
  v10 = swift_errorRetain(v5);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 138543362;
    swift_errorRetain(v5);
    v15 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 56) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    *v14 = v15;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Can't present approval flow=%{public}@", v13, 0xCu);
    v16 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v14, 1, v16);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v17 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 256);
  v20 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 192);
  v21 = *(_QWORD *)(v0 + 200);
  v24 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10094F05C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_100007E8C(&qword_1011D0E90);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(a1, (uint64_t)v4, &qword_1011D0E90);
  if (swift_getEnumCaseMultiPayload(v4, v2) != 1)
    return sub_10004FF60((uint64_t)v4, &qword_1011D0E90);
  v5 = *v4;
  Collaboration.Manager.handleError(_:)(v5);
  return swift_errorRelease(v5);
}

void sub_10094F11C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_shouldRequestForPlaylistSubscriptionUpdate;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_shouldRequestForPlaylistSubscriptionUpdate) = a1;
  if ((a1 & 1) != 0)
  {
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_autoupdatingResponse);
    if ((v8 & 0x8000000000000000) == 0)
    {
      swift_retain();
      if ((dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v9) & 1) != 0)
      {
        v10 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
        v11 = swift_allocObject(&unk_1010E35A8, 24, 7);
        swift_unknownObjectWeakInit(v11 + 16);
        type metadata accessor for MainActor(0);
        v12 = swift_retain();
        v13 = static MainActor.shared.getter(v12);
        v14 = (_QWORD *)swift_allocObject(&unk_1010E3DA0, 40, 7);
        v14[2] = v13;
        v14[3] = &protocol witness table for MainActor;
        v14[4] = v11;
        swift_release();
        sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011D0E68, (uint64_t)v14);
        swift_release();
        *(_BYTE *)(v2 + v7) = 0;
        sub_1004CA0BC(v8);
      }
      else
      {
        sub_1004CA0BC(v8);
      }
    }
  }
}

void sub_10094F29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_shouldRequestForPlaylistSubscriptionUpdate;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_shouldRequestForPlaylistSubscriptionUpdate) == 1)
  {
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_autoupdatingResponse);
    if ((v6 & 0x8000000000000000) == 0)
    {
      swift_retain();
      if ((dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v7) & 1) != 0)
      {
        v8 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
        v9 = swift_allocObject(&unk_1010E35A8, 24, 7);
        swift_unknownObjectWeakInit(v9 + 16);
        type metadata accessor for MainActor(0);
        v10 = swift_retain();
        v11 = static MainActor.shared.getter(v10);
        v12 = (_QWORD *)swift_allocObject(&unk_1010E3D78, 40, 7);
        v12[2] = v11;
        v12[3] = &protocol witness table for MainActor;
        v12[4] = v9;
        swift_release();
        sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011D0E60, (uint64_t)v12);
        swift_release();
        *(_BYTE *)(v1 + v5) = 0;
        sub_1004CA0BC(v6);
      }
      else
      {
        sub_1004CA0BC(v6);
      }
    }
  }
}

uint64_t sub_10094F41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v4[17] = a4;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A30A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[18] = swift_task_alloc(v5);
  v4[19] = swift_task_alloc(v5);
  v6 = type metadata accessor for Date(0);
  v4[20] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[21] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[22] = swift_task_alloc(v8);
  v4[23] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[24] = swift_task_alloc(v9);
  v4[25] = swift_task_alloc(v9);
  v4[26] = swift_task_alloc(v9);
  v10 = type metadata accessor for Playlist(0);
  v4[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[28] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v12);
  v4[30] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v4[31] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v4[32] = v15;
  v4[33] = v16;
  return swift_task_switch(sub_10094F56C, v15, v16);
}

uint64_t sub_10094F56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;

  v1 = *(_QWORD *)(v0 + 136) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 272) = Strong;
  if (!Strong)
  {
    swift_release();
LABEL_9:
    v14 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (char *)Strong;
  v4 = Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v0 + 40, 0, 0);
  sub_10004A160(v4, v0 + 112, (uint64_t *)&unk_1011B6910);
  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
  {
    sub_10004FF60(v0 + 112, (uint64_t *)&unk_1011B6910);
LABEL_8:
    swift_release();

    goto LABEL_9;
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v0 + 112);
  sub_10004FF60(v0 + 112, (uint64_t *)&unk_1011B6910);
  if (!v5)
    goto LABEL_8;
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v8 = *(_QWORD *)(v0 + 208);
  v9 = objc_msgSend(v5, "traitCollection");
  v10 = sub_10013ADBC();
  UITraitCollection.subscript.getter((_QWORD *)(v0 + 128), &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v10);

  *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 128);
  v11 = (uint64_t)&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist], v0 + 64, 0, 0);
  sub_10004A160(v11, v8, &qword_1011A30F0);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v12(v8, 1, v6) == 1)
  {
    v13 = *(_QWORD *)(v0 + 208);
    swift_release();
    swift_release();

    sub_10004FF60(v13, &qword_1011A30F0);
    goto LABEL_9;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 32))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  if (v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isOverridingSource] != 1)
    goto LABEL_16;
  v23 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 200);
  v25 = (uint64_t)&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogPlaylist];
  swift_beginAccess(v25, v0 + 88, 0, 0);
  sub_10004A160(v25, v24, &qword_1011A30F0);
  if (v12(v24, 1, v23))
  {
    v26 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 152);
    sub_10004FF60(*(_QWORD *)(v0 + 200), &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, 1, 1, v26);
LABEL_14:
    v38 = *(_QWORD *)(v0 + 152);
LABEL_15:
    sub_10004FF60(v38, (uint64_t *)&unk_1011A30A0);
    goto LABEL_16;
  }
  v30 = *(_QWORD *)(v0 + 224);
  v29 = *(_QWORD *)(v0 + 232);
  v31 = *(_QWORD *)(v0 + 216);
  v32 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 152);
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  v62 = *(_QWORD *)(v0 + 160);
  v61(v29, v32, v31);
  v35 = sub_10004FF60(v32, &qword_1011A30F0);
  Playlist.lastModifiedDate.getter(v35);
  v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  *(_QWORD *)(v0 + 288) = v36;
  v36(v29, v31);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (v37(v34, 1, v62) == 1)
    goto LABEL_14;
  v42 = *(_QWORD *)(v0 + 216);
  v43 = *(_QWORD *)(v0 + 192);
  v44 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 32);
  v44(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  sub_10004A160(v11, v43, &qword_1011A30F0);
  if (v12(v43, 1, v42))
  {
    v45 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 144);
    sub_10004FF60(*(_QWORD *)(v0 + 192), &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, 1, 1, v45);
LABEL_21:
    v54 = *(_QWORD *)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    v38 = v54;
    goto LABEL_15;
  }
  v48 = *(_QWORD *)(v0 + 232);
  v49 = *(_QWORD *)(v0 + 216);
  v50 = *(_QWORD *)(v0 + 192);
  v51 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 144);
  v61(v48, v50, v49);
  v53 = sub_10004FF60(v50, &qword_1011A30F0);
  Playlist.lastModifiedDate.getter(v53);
  v36(v48, v49);
  if (v37(v52, 1, v51) == 1)
    goto LABEL_21;
  v56 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 184);
  v44(v56, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 160));
  if ((static Date.> infix(_:_:)(v55, v56) & 1) != 0)
  {
    v57 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.updateSubscribedPlaylist(_:ignoreMinimumRefreshInterval:)[1]);
    *(_QWORD *)(v0 + 296) = v57;
    *v57 = v0;
    v57[1] = sub_10094FAA8;
    v40 = *(_QWORD *)(v0 + 240);
    v41 = 1;
    return MusicLibrary.updateSubscribedPlaylist(_:ignoreMinimumRefreshInterval:)(v40, v41);
  }
  v58 = *(_QWORD *)(v0 + 184);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
  v60(*(_QWORD *)(v0 + 176), v59);
  v60(v58, v59);
LABEL_16:
  v39 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.updateSubscribedPlaylist(_:ignoreMinimumRefreshInterval:)[1]);
  *(_QWORD *)(v0 + 304) = v39;
  *v39 = v0;
  v39[1] = sub_10094FC00;
  v40 = *(_QWORD *)(v0 + 240);
  v41 = 0;
  return MusicLibrary.updateSubscribedPlaylist(_:ignoreMinimumRefreshInterval:)(v40, v41);
}

uint64_t sub_10094FAA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 296));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 256);
    v4 = *(_QWORD *)(v2 + 264);
    v5 = sub_10097691C;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 256);
    v4 = *(_QWORD *)(v2 + 264);
    v5 = sub_10094FB10;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10094FB10()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
  v3 = *(void **)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD *)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 248));

  swift_release(v1);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v6, v8);
  v2(v4, v5);
  v11 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 184);
  v14 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10094FC00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 304));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 256);
    v4 = *(_QWORD *)(v2 + 264);
    v5 = sub_1009769B4;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 256);
    v4 = *(_QWORD *)(v2 + 264);
    v5 = sub_10094FC68;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10094FC68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 248));

  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10094FD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char v76[24];
  char v77[32];

  v1 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v1);
  v65 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011D0DF8);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v63 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011D0E00);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v67 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011D0E08);
  v70 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v68 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v72 = (char *)&v61 - v14;
  v15 = type metadata accessor for MusicPropertySource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - v20;
  v74 = v0;
  v22 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v23 = swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v77, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v21, v22, v15, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for MusicPropertySource.catalog(_:), v15);
  LOBYTE(v22) = static MusicPropertySource.== infix(_:_:)(v21, v18);
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v18, v15);
  result = ((uint64_t (*)(char *, uint64_t))v24)(v21, v15);
  if ((v22 & 1) != 0)
  {
    v26 = v74 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries;
    swift_beginAccess(v74 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries, v76, 0, 0);
    sub_10004A160(v26, (uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      return sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
    }
    else
    {
      v27 = v10;
      v62 = v10;
      v28 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v29 = v72;
      v30 = v9;
      v28(v72, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v12, v29, v9);
      v31 = sub_100049F28(&qword_1011C6810, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      v32 = dispatch thunk of Sequence._copyToContiguousArray()(v9, v31);
      v33 = type metadata accessor for Playlist.Entry(0);
      v34 = sub_100048748(&qword_1011D0E10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
      v35 = v68;
      MusicLibraryMapping.Request.init(mappingItems:)(v32, v33, v34);
      v36 = sub_100049F28((unint64_t *)&unk_1011D0E18, &qword_1011D0E08, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
      v37 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v73, v36);
      v38 = v74;
      *(_QWORD *)(v74 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntriesAutoupdatingResponse) = v37;
      swift_retain();
      v39 = swift_release();
      v40 = v63;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v39);
      v41 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v75 = (id)static OS_dispatch_queue.main.getter(v41, v42, v43, v44, v45, v46, v47, v48);
      v49 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v50 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v65, 1, 1, v49);
      v51 = sub_100049F28((unint64_t *)&unk_1011D0E28, &qword_1011D0DF8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v52 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      v54 = v66;
      v53 = v67;
      Publisher.receive<A>(on:options:)(&v75, v50, v66, v41, v51, v52);
      sub_10004FF60(v50, &qword_1011A08F0);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v54);
      v55 = swift_allocObject(&unk_1010E35A8, 24, 7);
      swift_unknownObjectWeakInit(v55 + 16);
      v56 = sub_100049F28(&qword_1011D0E38, &qword_1011D0E00, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v57 = v71;
      v58 = Publisher<>.sink(receiveValue:)(sub_100973AC8, v55, v71, v56);
      v59 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v53, v57, v59);
      *(_QWORD *)(v38 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntriesAutoupdatingResponseSubscription) = v58;
      swift_release();
      v60 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v35, v73, v60);
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v72, v30);
    }
  }
  return result;
}

uint64_t sub_100950300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[2];
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  char v43[24];

  v41 = type metadata accessor for Playlist.Entry(0);
  v4 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v7);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D0E40);
  v40 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D0E48);
  __chkstk_darwin(v13);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011D0E50);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v38 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v43, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v20 = (char *)result;
    sub_10004A160(a1, (uint64_t)v15, &qword_1011D0E48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {

      return sub_10004FF60((uint64_t)v15, &qword_1011D0E48);
    }
    else
    {
      v35 = v20;
      v36 = v17;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v38, v15, v16);
      v37 = v16;
      v21 = MusicLibraryMapping.Response.mappedItems.getter(v16);
      v22 = *(_QWORD *)(v21 + 16);
      if (v22)
      {
        v33[1] = v21;
        v34 = v9;
        v23 = v21 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
        v39 = *(_QWORD *)(v40 + 72);
        v24 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
        v25 = _swiftEmptyArrayStorage;
        do
        {
          v24(v12, v23, v10);
          MusicLibraryMapping.MappedItem.item.getter(v10);
          if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
            v25 = (_QWORD *)sub_100433664(0, v25[2] + 1, 1, (unint64_t)v25);
          v27 = v25[2];
          v26 = v25[3];
          if (v27 >= v26 >> 1)
            v25 = (_QWORD *)sub_100433664(v26 > 1, v27 + 1, 1, (unint64_t)v25);
          v25[2] = v27 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v25+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v27, v6, v41);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v10);
          v23 += v39;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        v9 = v34;
      }
      else
      {
        swift_bridgeObjectRelease();
        v25 = _swiftEmptyArrayStorage;
      }
      v42[0] = v25;
      v28 = sub_100007E8C((uint64_t *)&unk_1011C6870);
      v29 = sub_100049F28((unint64_t *)&unk_1011D0D20, (uint64_t *)&unk_1011C6870, (uint64_t)&protocol conformance descriptor for [A]);
      MusicItemCollection.init<A>(_:)(v42, v41, v28, &protocol witness table for Playlist.Entry, v29);
      v30 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 0, 1, v30);
      v31 = v35;
      v32 = (uint64_t)&v35[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries];
      swift_beginAccess(&v35[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries], v42, 33, 0);
      sub_1001A83C8((uint64_t)v9, v32, (uint64_t *)&unk_1011D0BB0);
      swift_endAccess(v42);
      sub_100956700();
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011D0BB0);

      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v38, v37);
    }
  }
  return result;
}

uint64_t sub_100950708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  __n128 v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[4];
  uint64_t v67;
  char v68[24];
  char v69[32];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v9);
  v63 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist.Entry(0);
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  __chkstk_darwin(v11);
  v61 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v14 = *(_QWORD **)(v13 - 8);
  __chkstk_darwin(v13);
  v62 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  v19 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v56 - v23;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_paginationTask))
    goto LABEL_5;
  v57 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_paginationTask;
  v58 = v2;
  v59 = a1;
  v25 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries, v69, 0, 0);
  sub_10004A160(v25, (uint64_t)v24, (uint64_t *)&unk_1011D0BB0);
  v26 = (unsigned int (*)(char *, uint64_t, uint64_t))v14[6];
  if (v26(v24, 1, v13))
  {
    v27 = (uint64_t *)&unk_1011D0BB0;
    v28 = (uint64_t)v24;
LABEL_4:
    sub_10004FF60(v28, v27);
    v2 = v58;
    a1 = v59;
LABEL_5:
    v29 = type metadata accessor for IndexPath(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v6, a1, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v6, 0, 1, v29);
    v31 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_largestPrefetchIndexPath;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_largestPrefetchIndexPath, v66, 33, 0);
    sub_1000A5508((uint64_t)v6, v31, (uint64_t *)&unk_1011A3D50);
    return swift_endAccess(v66);
  }
  v56 = (void (*)(char *, char *, uint64_t))v14[2];
  v56(v18, v24, v13);
  sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011D0BB0);
  v33 = MusicItemCollection.hasNextBatch.getter(v13);
  v34 = (void (*)(char *, uint64_t))v14[1];
  v34(v18, v13);
  v2 = v58;
  a1 = v59;
  if ((v33 & 1) == 0)
    goto LABEL_5;
  v35 = v56;
  v36 = v58 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
  swift_beginAccess(v58 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v68, 0, 0);
  sub_10004A160(v36, (uint64_t)v21, (uint64_t *)&unk_1011D0BB0);
  if (v26(v21, 1, v13))
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011D0BB0);
    v37 = v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v63, 1, 1, v65);
LABEL_13:
    v27 = (uint64_t *)&unk_1011B59A0;
    v28 = (uint64_t)v37;
    goto LABEL_4;
  }
  v38 = v62;
  v35(v62, v21, v13);
  sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011D0BB0);
  v39 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  if ((dispatch thunk of Collection.isEmpty.getter(v13, v39) & 1) != 0)
  {
    v37 = v63;
    v40 = v64;
    v41 = v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v63, 1, 1, v65);
  }
  else
  {
    dispatch thunk of Collection.endIndex.getter(v66, v13, v39);
    v42 = sub_100049F28(&qword_1011D0DC8, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of BidirectionalCollection.index(before:)(&v67, v66, v13, v42);
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v66, &v67, v13, v39);
    v37 = v63;
    v40 = v64;
    v41 = v65;
    (*(void (**)(char *))(v64 + 16))(v63);
    v43(v66, 0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v41);
  }
  v34(v38, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v41) == 1)
    goto LABEL_13;
  v44 = v61;
  v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v40 + 32))(v61, v37, v41);
  v46 = Playlist.Entry.position.getter(v45);
  v47 = v59;
  if (IndexPath.item.getter(v46) < v46)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v41);
    v2 = v58;
    a1 = v47;
    goto LABEL_5;
  }
  v2 = v58;
  if ((*(_BYTE *)(v58 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v41);
    a1 = v47;
    goto LABEL_5;
  }
  v48 = type metadata accessor for TaskPriority(0);
  v49 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v60, 1, 1, v48);
  v50 = swift_allocObject(&unk_1010E35A8, 24, 7);
  swift_unknownObjectWeakInit(v50 + 16);
  type metadata accessor for MainActor(0);
  v51 = swift_retain();
  v52 = static MainActor.shared.getter(v51);
  v53 = (_QWORD *)swift_allocObject(&unk_1010E3D28, 40, 7);
  v53[2] = v52;
  v53[3] = &protocol witness table for MainActor;
  v53[4] = v50;
  swift_release();
  v54 = sub_100980A1C(v49, (uint64_t)&unk_1011D0DD8, (uint64_t)v53);
  *(_QWORD *)(v2 + v57) = v54;
  v55 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v44, v41, v55);
}

uint64_t sub_100950D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v4[8] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D0BB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v6);
  v4[11] = swift_task_alloc(v6);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v4[14] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v10);
  v4[16] = swift_task_alloc(v10);
  v4[17] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v4[18] = v11;
  v4[19] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v4[20] = v13;
  v4[21] = v14;
  return swift_task_switch(sub_100950E44, v13, v14);
}

uint64_t sub_100950E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 176) = Strong;
  if (!Strong)
  {
    swift_release();
    goto LABEL_5;
  }
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries;
  swift_beginAccess(Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries, v0 + 40, 0, 0);
  sub_10004A160(v6, v5, (uint64_t *)&unk_1011D0BB0);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v0 + 184) = v7;
  v8 = v7(v5, 1, v3);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  if (v8)
  {
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    swift_release();
    sub_10004FF60(v12, (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v9);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = type metadata accessor for Playlist.Entry(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v14, &protocol witness table for Playlist.Entry);
    sub_10004FF60(v13, (uint64_t *)&unk_1011D0BB0);
    v15 = *(void **)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 136);
    v39 = v16;
    v18 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 72);
    v22 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v23 = swift_allocObject(&unk_1010E35A8, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v17, v16, v19);
    v24 = swift_retain();
    v25 = static MainActor.shared.getter(v24);
    v26 = *(unsigned __int8 *)(v20 + 80);
    v27 = (v26 + 40) & ~v26;
    v28 = (char *)swift_allocObject(&unk_1010E3D50, v27 + v18, v26 | 7);
    *((_QWORD *)v28 + 2) = v25;
    *((_QWORD *)v28 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v28 + 4) = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v28[v27], v17, v19);
    swift_release();
    sub_100166D14(v21, (uint64_t)&unk_1011D0DE8, (uint64_t)v28);

    v29 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v20 + 8))(v39, v19, v29);
LABEL_5:
    v30 = *(_QWORD *)(v0 + 128);
    v31 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v36 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v10 + 16))(*(_QWORD *)(v0 + 128), v36, *(_QWORD *)(v0 + 96));
  sub_10004FF60(v36, (uint64_t *)&unk_1011D0BB0);
  v37 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
  *(_QWORD *)(v0 + 192) = v37;
  v38 = sub_100048748(&qword_1011D0DC0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
  *v37 = v0;
  v37[1] = sub_100951178;
  return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 88), 0, 1, *(_QWORD *)(v0 + 96), v38);
}

uint64_t sub_100951178()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  v4 = *(_QWORD *)(*v1 + 128);
  v5 = *(_QWORD *)(*v1 + 96);
  v6 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (v0)
    v7 = sub_10095140C;
  else
    v7 = sub_100951200;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 168));
}

uint64_t sub_100951200()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 184);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = swift_release();
  if (v1(v2, 1, v3, v4) == 1)
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = type metadata accessor for Playlist.Entry(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v6, &protocol witness table for Playlist.Entry);
    sub_10004FF60(v5, (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  v7 = *(void **)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 136);
  v28 = v8;
  v10 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject(&unk_1010E35A8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v8, v11);
  v16 = swift_retain();
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1010E3D50, v19 + v10, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v20[v19], v9, v11);
  swift_release();
  sub_100166D14(v13, (uint64_t)&unk_1011D0DE8, (uint64_t)v20);

  v21 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v28, v11, v21);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10095140C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 152));

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009514A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v5[23] = a4;
  v5[24] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  v5[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Entry(0);
  v5[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[27] = v8;
  v5[28] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  v5[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v5[30] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[31] = v11;
  v5[32] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D0BB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[33] = swift_task_alloc(v12);
  v5[34] = swift_task_alloc(v12);
  v5[35] = swift_task_alloc(v12);
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5[36] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[37] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[38] = swift_task_alloc(v15);
  v5[39] = swift_task_alloc(v15);
  v16 = type metadata accessor for MainActor(0);
  v5[40] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  return swift_task_switch(sub_100951620, v18, v19);
}

uint64_t sub_100951620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 120, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(_QWORD *)(v0 + 288);
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 280);
    v7 = Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v0 + 48, 0, 0);
    sub_10004A160(v7, v6, (uint64_t *)&unk_1011D0BB0);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v8(v6, 1, v4) == 1)
    {
      v9 = *(_QWORD *)(v0 + 280);

      v10 = (uint64_t *)&unk_1011D0BB0;
LABEL_6:
      v21 = v9;
LABEL_14:
      sub_10004FF60(v21, v10);
      goto LABEL_15;
    }
    v65 = v8;
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 288);
    v12 = *(_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 272);
    v67 = *(_QWORD *)(v0 + 248);
    v69 = *(_QWORD *)(v0 + 240);
    v66 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 32))(v11, *(_QWORD *)(v0 + 280), v13);
    static MusicItemCollection.+= infix(_:_:)(v11, v16, v15, &protocol witness table for Playlist.Entry);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v17(v14, v11, v13);
    v18 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56);
    v18(v14, 0, 1, v13);
    v19 = (uint64_t)&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries], v0 + 72, 33, 0);
    sub_1000A5508(v14, v19, (uint64_t *)&unk_1011D0BB0);
    swift_endAccess(v0 + 72);
    v17(v14, v11, v13);
    v18(v14, 0, 1, v13);
    swift_beginAccess(v7, v0 + 96, 33, 0);
    sub_1001A83C8(v14, v7, (uint64_t *)&unk_1011D0BB0);
    swift_endAccess(v0 + 96);
    sub_100956700();
    sub_10004FF60(v14, (uint64_t *)&unk_1011D0BB0);
    sub_10094FD2C();
    *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_paginationTask] = 0;
    swift_release();
    v20 = (uint64_t)&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_largestPrefetchIndexPath];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_largestPrefetchIndexPath], v0 + 144, 0, 0);
    sub_10004A160(v20, v66, (uint64_t *)&unk_1011A3D50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v66, 1, v69) == 1)
    {
      v9 = *(_QWORD *)(v0 + 232);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 288));

      v10 = (uint64_t *)&unk_1011A3D50;
      goto LABEL_6;
    }
    v22 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 264);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
    sub_10004A160(v7, v23, (uint64_t *)&unk_1011D0BB0);
    if (v65(v23, 1, v22))
    {
      v24 = *(_QWORD *)(v0 + 208);
      v25 = *(_QWORD *)(v0 + 216);
      v26 = *(_QWORD *)(v0 + 200);
      sub_10004FF60(*(_QWORD *)(v0 + 264), (uint64_t *)&unk_1011D0BB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, 1, 1, v24);
LABEL_13:
      v40 = *(_QWORD *)(v0 + 312);
      v41 = *(_QWORD *)(v0 + 288);
      v42 = *(_QWORD *)(v0 + 296);
      v44 = *(_QWORD *)(v0 + 248);
      v43 = *(_QWORD *)(v0 + 256);
      v45 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 200);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      v10 = (uint64_t *)&unk_1011B59A0;
      v21 = v46;
      goto LABEL_14;
    }
    v27 = *(_QWORD *)(v0 + 288);
    v28 = *(_QWORD *)(v0 + 264);
    v17(*(_QWORD *)(v0 + 304), v28, v27);
    sub_10004FF60(v28, (uint64_t *)&unk_1011D0BB0);
    v29 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    if ((dispatch thunk of Collection.isEmpty.getter(v27, v29) & 1) != 0)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 56))(*(_QWORD *)(v0 + 200), 1, 1, *(_QWORD *)(v0 + 208));
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 288);
      v32 = *(_QWORD *)(v0 + 208);
      v31 = *(_QWORD *)(v0 + 216);
      v33 = *(_QWORD *)(v0 + 200);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), v30, v29);
      v34 = sub_100049F28(&qword_1011D0DC8, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of BidirectionalCollection.index(before:)((_QWORD *)(v0 + 168), v0 + 176, v30, v34);
      v35 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v0 + 16, v0 + 168, v30, v29);
      (*(void (**)(uint64_t))(v31 + 16))(v33);
      v35(v0 + 16, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
    }
    v36 = *(_QWORD *)(v0 + 208);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 200);
    v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 296) + 8);
    v39(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) == 1)
      goto LABEL_13;
    v56 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    v57 = Playlist.Entry.position.getter(v56);
    v58 = IndexPath.item.getter(v57);
    v59 = *(_QWORD *)(v0 + 312);
    v60 = *(_QWORD *)(v0 + 248);
    v61 = *(_QWORD *)(v0 + 256);
    v68 = *(_QWORD *)(v0 + 240);
    v70 = *(_QWORD *)(v0 + 288);
    v62 = *(_QWORD *)(v0 + 216);
    v63 = *(_QWORD *)(v0 + 224);
    v64 = *(_QWORD *)(v0 + 208);
    if (v58 >= v57)
      sub_100950708(v61);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v68);
    v39(v59, v70);
  }
LABEL_15:
  v47 = *(_QWORD *)(v0 + 304);
  v49 = *(_QWORD *)(v0 + 272);
  v48 = *(_QWORD *)(v0 + 280);
  v51 = *(_QWORD *)(v0 + 256);
  v50 = *(_QWORD *)(v0 + 264);
  v53 = *(_QWORD *)(v0 + 224);
  v52 = *(_QWORD *)(v0 + 232);
  v54 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100951C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE v22[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries, v22, 0, 0);
  sub_10004A160(v12, (uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
    v14 = MusicItemCollection.hasNextBatch.getter(v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if ((v14 & 1) != 0)
    {
      v15 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_paginationTask;
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_paginationTask))
      {
        swift_retain();
        sub_100007E8C(&qword_1011A14B0);
        Task.cancel()();
        swift_release();
      }
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
      v17 = swift_allocObject(&unk_1010E35A8, 24, 7);
      swift_unknownObjectWeakInit(v17 + 16, v1);
      type metadata accessor for MainActor(0);
      v18 = swift_retain();
      v19 = static MainActor.shared.getter(v18);
      v20 = (_QWORD *)swift_allocObject(&unk_1010E3CD8, 40, 7);
      v20[2] = v19;
      v20[3] = &protocol witness table for MainActor;
      v20[4] = v17;
      swift_release();
      *(_QWORD *)(v1 + v15) = sub_100980A1C((uint64_t)v4, (uint64_t)&unk_1011D0DA8, (uint64_t)v20);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100951E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v4[8] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[12] = swift_task_alloc(v8);
  v4[13] = swift_task_alloc(v8);
  v4[14] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D0BB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v9);
  v4[16] = swift_task_alloc(v9);
  v10 = sub_100007E8C(&qword_1011A30F0);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v4[18] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[19] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[20] = swift_task_alloc(v13);
  v4[21] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v4[22] = v14;
  v4[23] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v4[24] = v16;
  v4[25] = v17;
  return swift_task_switch(sub_100952004, v16, v17);
}

uint64_t sub_100952004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 208) = Strong;
  if (!Strong)
  {
    swift_release();
    goto LABEL_5;
  }
  v3 = (void *)Strong;
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogPlaylist;
  swift_beginAccess(Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogPlaylist, v0 + 40, 0, 0);
  sub_10004A160(v7, v6, &qword_1011A30F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);

    swift_release();
    sub_10004FF60(v8, &qword_1011A30F0);
LABEL_5:
    v9 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  *(_QWORD *)(v0 + 216) = swift_allocBox(v18);
  *(_QWORD *)(v0 + 224) = v19;
  v20 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EA7A90;
  sub_100007E8C(&qword_10119F4A8);
  static PartialMusicProperty<A>.entries.getter();
  v22 = MusicRelationshipProperty.limit(_:)(10000);
  swift_release();
  *(_QWORD *)(v21 + 32) = v22;
  specialized Array._endMutation()(v23);
  *(_QWORD *)(v0 + 232) = v21;
  v24 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
  *(_QWORD *)(v0 + 240) = v24;
  *v24 = v0;
  v24[1] = sub_10095224C;
  return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 160), v21, *(_QWORD *)(v0 + 144), &protocol witness table for Playlist);
}

uint64_t sub_10095224C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  if (v0)
    v4 = sub_10095257C;
  else
    v4 = sub_1009522BC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 192), *(_QWORD *)(v2 + 200));
}

uint64_t sub_1009522BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  void (*v23)(uint64_t, uint64_t, __n128);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = *(_QWORD *)(v1 + 152);
  v2 = *(_QWORD *)(v1 + 160);
  v4 = *(_QWORD *)(v1 + 144);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  Playlist.entries.getter(a1);
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v1 + 256) = v8;
  v8(v2, v4);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  *(_QWORD *)(v1 + 264) = v9;
  v10 = v9(v5, 1, v6);
  v11 = *(_QWORD *)(v1 + 128);
  if (v10 == 1)
  {
    v12 = type metadata accessor for Playlist.Entry(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v12, &protocol witness table for Playlist.Entry);
    sub_10004FF60(v11, (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 88) + 32))(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 80));
  }
  v13 = *(_QWORD *)(v1 + 224);
  v14 = *(_QWORD *)(v1 + 112);
  v15 = *(_QWORD *)(v1 + 80);
  v16 = *(_QWORD *)(v1 + 88);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v1 + 272) = v17;
  v17(v14, v13, v15);
  v18 = MusicItemCollection.hasNextBatch.getter(v15);
  v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v1 + 280) = v19;
  v19(v14, v15);
  if ((v18 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 272))(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 80));
    v20 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v1 + 288) = v20;
    v21 = sub_100048748(&qword_1011D0DC0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
    *v20 = v1;
    v20[1] = sub_100952650;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v1 + 120), 10000, 0, *(_QWORD *)(v1 + 80), v21);
  }
  else
  {
    v23 = *(void (**)(uint64_t, uint64_t, __n128))(v1 + 256);
    v25 = *(void **)(v1 + 208);
    v24 = *(_QWORD *)(v1 + 216);
    v26 = *(_QWORD *)(v1 + 168);
    v27 = *(_QWORD *)(v1 + 144);
    v28 = *(_QWORD *)(v1 + 72);
    swift_release();
    v29 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
    v30 = v25;
    v31 = swift_retain();
    v32 = static MainActor.shared.getter(v31);
    v33 = (_QWORD *)swift_allocObject(&unk_1010E3D00, 48, 7);
    v33[2] = v32;
    v33[3] = &protocol witness table for MainActor;
    v33[4] = v30;
    v33[5] = v24;
    sub_100166D14(v28, (uint64_t)&unk_1011D0DB8, (uint64_t)v33);

    v34 = swift_release();
    v23(v26, v27, v34);
    swift_release();
    v35 = *(_QWORD *)(v1 + 160);
    v37 = *(_QWORD *)(v1 + 128);
    v36 = *(_QWORD *)(v1 + 136);
    v39 = *(_QWORD *)(v1 + 112);
    v38 = *(_QWORD *)(v1 + 120);
    v41 = *(_QWORD *)(v1 + 96);
    v40 = *(_QWORD *)(v1 + 104);
    v42 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 168));
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10095257C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 184));

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_deallocBox(v1);
  v6 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100952650()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2 + 280))(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 80));
  if (v0)
    v4 = sub_10095295C;
  else
    v4 = sub_1009526C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 192), *(_QWORD *)(v2 + 200));
}

uint64_t sub_1009526C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v1, 1, v2) == 1)
  {
    sub_10004FF60(v1, (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v4 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 32))(v5, v1, v2);
    v6 = type metadata accessor for Playlist.Entry(0);
    static MusicItemCollection.+= infix(_:_:)(v4, v5, v6, &protocol witness table for Playlist.Entry);
    v3(v5, v2);
  }
  v7 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 272))(v8, *(_QWORD *)(v0 + 224), v9);
  v10 = MusicItemCollection.hasNextBatch.getter(v9);
  v7(v8, v9);
  if ((v10 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 272))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 80));
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 288) = v11;
    v12 = sub_100048748(&qword_1011D0DC0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
    *v11 = v0;
    v11[1] = sub_100952650;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 120), 10000, 0, *(_QWORD *)(v0 + 80), v12);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 256);
    v16 = *(void **)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 168);
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 72);
    swift_release();
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    v21 = v16;
    v22 = swift_retain();
    v23 = static MainActor.shared.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_1010E3D00, 48, 7);
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v21;
    v24[5] = v15;
    sub_100166D14(v19, (uint64_t)&unk_1011D0DB8, (uint64_t)v24);

    v25 = swift_release();
    v14(v17, v18, v25);
    swift_release();
    v26 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 128);
    v27 = *(_QWORD *)(v0 + 136);
    v30 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 120);
    v32 = *(_QWORD *)(v0 + 96);
    v31 = *(_QWORD *)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10095295C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v3 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 184));

  v1(v4, v5);
  swift_release(v2);
  v6 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100952A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[14] = a4;
  v7 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[16] = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5[17] = swift_projectBox(a5);
  v8 = type metadata accessor for MainActor(0);
  v5[18] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100952AE0, v10, v11);
}

uint64_t sub_100952AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  swift_release();
  v5 = swift_beginAccess(v1, v0 + 16, 0, 0);
  v6 = *(_QWORD *)(v3 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  v7(v2, v1, v3, v5);
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v8(v2, 0, 1, v3);
  v9 = v4 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries;
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogEntries, v0 + 40, 33, 0);
  sub_1000A5508(v2, v9, (uint64_t *)&unk_1011D0BB0);
  swift_endAccess(v0 + 40);
  v10 = swift_beginAccess(v1, v0 + 64, 0, 0);
  v7(v2, v1, v3, v10);
  v8(v2, 0, 1, v3);
  v11 = v4 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v0 + 88, 33, 0);
  sub_1001A83C8(v2, v11, (uint64_t *)&unk_1011D0BB0);
  swift_endAccess(v0 + 88);
  sub_100956700();
  sub_10004FF60(v2, (uint64_t *)&unk_1011D0BB0);
  sub_10094FD2C();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_paginationTask) = 0;
  swift_release();
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100952C70(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  unsigned __int8 v15;
  uint64_t v16;
  Swift::Int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  char v29;
  Swift::Int v30;
  char v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  char v41;
  Swift::Int v42;
  char v43;
  void *v44;
  uint64_t v45;
  char v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  _BYTE *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **aBlock;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;
  char v67[24];
  char v68[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexSet(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v68, 0, 0);
  sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
  if ((v62 & 1) != 0)
  {
    v12 = sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    v13 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
    v12 = sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if (v13)
    {
      v14 = sub_1007142B4();

      v15 = objc_msgSend(v14, "hasUncommittedUpdates");
      if ((v15 & 1) != 0)
      {
        v2[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_postponeSectionUpdate] = 1;
        return;
      }
    }
  }
  v60 = v8;
  v2[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_postponeSectionUpdate] = 0;
  IndexSet.init()(v12);
  v16 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeHeaderOnNextReload;
  if (v2[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeHeaderOnNextReload] == 1)
  {
    v17 = sub_10093A524(0);
    if ((v18 & 1) == 0)
    {
      IndexSet.insert(_:)(v17);
      v2[v16] = 0;
    }
  }
  v19 = (uint64_t)&v2[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries], v67, 0, 0);
  sub_10004A160(v19, (uint64_t)v6, (uint64_t *)&unk_1011D0BB0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v6, 1, v20);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011D0BB0);
  if ((_DWORD)v19 != 1)
  {
    v28 = sub_10093A524(3u);
    if ((v29 & 1) == 0)
      IndexSet.insert(_:)(v28);
    if ((a1 & 1) != 0 || (v30 = sub_10093A524(2u), (v31 & 1) != 0))
      sub_1009585EC();
    else
      IndexSet.insert(_:)(v30);
    v59 = v7;
    LOBYTE(aBlock) = 6;
    v32 = sub_10004D63C();
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v32) & 1) == 0)
      goto LABEL_44;
    sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if ((v62 & 1) == 0)
    {
      v40 = (_BYTE *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (!v40)
        goto LABEL_44;
      v25 = &OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload;
      v41 = v40[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload];

      if ((v41 & 1) == 0)
        goto LABEL_44;
      v42 = sub_10093A524(0xAu);
      if ((v43 & 1) != 0)
        goto LABEL_44;
      IndexSet.insert(_:)(v42);
      sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if ((v62 & 1) != 0)
      {
        sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
        goto LABEL_41;
      }
      v23 = (_QWORD *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (!v23)
        goto LABEL_41;
      sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if ((v62 & 1) != 0)
      {
        sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
        goto LABEL_39;
      }
      v44 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (!v44)
        goto LABEL_39;
      v24 = sub_100712090();

      if (!v24)
        goto LABEL_39;
      v27 = v24 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)v24 >> 62)
        goto LABEL_55;
      v45 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_37;
    }
    goto LABEL_21;
  }
  v21 = v7;
  v22 = objc_opt_self(UIView);
  v23 = (_QWORD *)swift_allocObject(&unk_1010E3AF8, 32, 7);
  v23[2] = v2;
  v23[3] = v10;
  v24 = swift_allocObject(&unk_1010E3B20, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_100976888;
  *(_QWORD *)(v24 + 24) = v23;
  v65 = sub_1001095DC;
  v66 = v24;
  aBlock = _NSConcreteStackBlock;
  v62 = 1107296256;
  v63 = sub_10046D7B4;
  v64 = &unk_1010E3B38;
  v25 = (uint64_t *)_Block_copy(&aBlock);
  v26 = v66;
  v2 = v2;
  swift_retain(v24);
  objc_msgSend((id)v22, "performWithoutAnimation:", v25, swift_release(v26).n128_f64[0]);
  _Block_release(v25);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v24, "", 114, 2166, 44, 1);
  swift_release(v24);
  if ((v22 & 1) != 0)
  {
    __break(1u);
    do
    {
      __break(1u);
LABEL_55:
      if (v24 >= 0)
        v58 = v27;
      else
        v58 = v24;
      swift_bridgeObjectRetain();
      v45 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease(v24);
LABEL_37:
      swift_bridgeObjectRelease(v24);
      if (v45)
        v46 = sub_100938194();
      else
LABEL_39:
        v46 = 0;
      *((_BYTE *)v23 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent) = v46 & 1;

LABEL_41:
      sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if ((v62 & 1) != 0)
      {
LABEL_21:
        sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        v47 = (_BYTE *)swift_unknownObjectWeakLoadStrong(&aBlock);
        sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
        if (v47)
        {
          v47[*v25] = 0;

        }
      }
LABEL_44:
      v48 = objc_opt_self(UIView);
      v23 = (_QWORD *)swift_allocObject(&unk_1010E3BE8, 32, 7);
      v23[2] = v2;
      v23[3] = v10;
      v24 = swift_allocObject(&unk_1010E3C10, 32, 7);
      *(_QWORD *)(v24 + 16) = sub_1009737E4;
      *(_QWORD *)(v24 + 24) = v23;
      v65 = sub_1001095DC;
      v66 = v24;
      aBlock = _NSConcreteStackBlock;
      v62 = 1107296256;
      v63 = sub_10046D7B4;
      v64 = &unk_1010E3C28;
      v25 = (uint64_t *)_Block_copy(&aBlock);
      v49 = v66;
      v2 = v2;
      swift_retain(v24);
      objc_msgSend((id)v48, "performWithoutAnimation:", v25, swift_release(v49).n128_f64[0]);
      _Block_release(v25);
      LOBYTE(v48) = swift_isEscapingClosureAtFileLocation(v24, "", 114, 2197, 40, 1);
      swift_release(v24);
    }
    while ((v48 & 1) != 0);
    sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if ((v62 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      v50 = v59;
    }
    else
    {
      v51 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      v50 = v59;
      if (v51)
      {
        v52 = sub_1007142B4();

        v35 = swift_allocObject(&unk_1010E3C60, 24, 7);
        *(_QWORD *)(v35 + 16) = v2;
        v53 = swift_allocObject(&unk_1010E3C88, 32, 7);
        *(_QWORD *)(v53 + 16) = sub_10097380C;
        *(_QWORD *)(v53 + 24) = v35;
        v65 = sub_1001095DC;
        v66 = v53;
        aBlock = _NSConcreteStackBlock;
        v62 = 1107296256;
        v63 = sub_10046D7B4;
        v64 = &unk_1010E3CA0;
        v54 = _Block_copy(&aBlock);
        v55 = v66;
        v56 = v2;
        objc_msgSend(v52, "performBatchUpdates:completion:", v54, 0, swift_release(v55).n128_f64[0]);
        _Block_release(v54);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v50);
        goto LABEL_49;
      }
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v50);
    goto LABEL_51;
  }
  sub_10004A160(v11, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
  if ((v62 & 1) != 0)
  {
    sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
LABEL_24:
    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v21);
LABEL_51:
    v57 = v23;
    goto LABEL_52;
  }
  v33 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
  sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
  if (!v33)
    goto LABEL_24;
  v34 = sub_1007142B4();

  v35 = swift_allocObject(&unk_1010E3B70, 24, 7);
  *(_QWORD *)(v35 + 16) = v2;
  v36 = swift_allocObject(&unk_1010E3B98, 32, 7);
  *(_QWORD *)(v36 + 16) = sub_1009737B4;
  *(_QWORD *)(v36 + 24) = v35;
  v65 = sub_1001095DC;
  v66 = v36;
  aBlock = _NSConcreteStackBlock;
  v62 = 1107296256;
  v63 = sub_10046D7B4;
  v64 = &unk_1010E3BB0;
  v37 = _Block_copy(&aBlock);
  v38 = v66;
  v39 = v2;
  objc_msgSend(v34, "performBatchUpdates:completion:", v37, 0, swift_release(v38).n128_f64[0]);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v21);
LABEL_49:
  swift_release(v23);
  v57 = (_QWORD *)v35;
LABEL_52:
  swift_release(v57);
}

void sub_10095355C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *Strong;
  id v10;
  NSIndexSet *v11;
  void *v12;
  void *v13;
  _BYTE v15[24];
  _BYTE v16[16];

  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v8, v15, 0, 0);
  sub_10004A160(v8, (uint64_t)v16, (uint64_t *)&unk_1011B6910);
  if ((v16[8] & 1) != 0)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      v10 = sub_1007142B4();

      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
      IndexSet._bridgeToObjectiveC()(v11);
      v13 = v12;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v10, "reloadSections:", v13);

    }
  }
}

void sub_100953694(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  void *Strong;
  char v5[24];
  _BYTE v6[16];

  sub_10095C01C();
  sub_10095C894();
  sub_10095AF90();
  sub_10095D8D8();
  v5[0] = 6;
  v2 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v2) & 1) == 0)
  {
    v3 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v3, v5, 0, 0);
    sub_10004A160(v3, (uint64_t)v6, (uint64_t *)&unk_1011B6910);
    if ((v6[8] & 1) != 0)
    {
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011B6910);
      if (Strong)
      {
        sub_1007124FC();

      }
    }
  }
}

uint64_t sub_10095376C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  int v33;
  __int128 v34;
  int v35;
  _BYTE v36[24];
  _BYTE v37[24];
  __int128 v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___headerConfiguration;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___headerConfiguration);
  if (!v6)
  {
    v8 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v37, 0, 0);
    sub_10004A160(v8, (uint64_t)v4, &qword_1011A30F0);
    v9 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v36, 0, 0);
    sub_10004A160(v9, (uint64_t)&v38, (uint64_t *)&unk_1011B6910);
    if ((BYTE8(v38) & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v38, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v10 = (void *)swift_unknownObjectWeakLoadStrong(&v38);
      sub_10004FF60((uint64_t)&v38, (uint64_t *)&unk_1011B6910);
      if (v10)
      {
        v11 = sub_10070FCAC();

        v12 = *(_QWORD *)(v11 + 72);
        if (v12 != 1 && v12 != 2)
        {
          v30 = *(_QWORD *)(v11 + 64);
          swift_release(v11);
          v13 = (v30 & 1) == 0;
LABEL_10:
          v35 = v13;
          v14 = swift_allocObject(&unk_1010E35A8, 24, 7);
          swift_unknownObjectWeakInit(v14 + 16, v1);
          v15 = swift_allocObject(&unk_1010E35A8, 24, 7);
          swift_unknownObjectWeakInit(v15 + 16, v1);
          v16 = swift_allocObject(&unk_1010E35A8, 24, 7);
          swift_unknownObjectWeakInit(v16 + 16, v1);
          sub_10004A160(v9, (uint64_t)&v38, (uint64_t *)&unk_1011B6910);
          if ((BYTE8(v38) & 1) != 0)
          {
            swift_retain(v14);
            swift_retain(v15);
            swift_retain(v16);
            sub_10004FF60((uint64_t)&v38, (uint64_t *)&unk_1011B6910);
            v17 = 0;
          }
          else
          {
            v17 = (void *)swift_unknownObjectWeakLoadStrong(&v38);
            swift_retain(v14);
            swift_retain(v15);
            swift_retain(v16);
            sub_10004FF60((uint64_t)&v38, (uint64_t *)&unk_1011B6910);
            if (v17)
            {
              v18 = sub_1007142B4();

              v34 = *(_OWORD *)&v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];
              v17 = *(void **)&v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];
              v33 = v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 26];
              v31 = *(_OWORD *)&v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 32];
              v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];
              v20 = v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];
              v32 = *(unsigned __int16 *)&v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 24];

              v21 = v31;
              v22 = v34;
              v23 = 0x10000;
              if (!v33)
                v23 = 0;
              v24 = v32 | v23;
              goto LABEL_17;
            }
          }
          v19 = 0;
          v20 = 0;
          v22 = 0uLL;
          v24 = 0x20000;
          v21 = 0uLL;
LABEL_17:
          v38 = v22;
          v39 = v17;
          v40 = v24;
          v41 = v21;
          v42 = v19;
          v43 = v20;
          v7 = sub_1006054A8((uint64_t)v4, v35, (uint64_t)&unk_1011D0D98, v14, (uint64_t)sub_100973740, v15, (uint64_t)sub_100973760, v16, (uint64_t)&v38);
          swift_release_n(v16, 2, v25);
          swift_release_n(v15, 2, v26);
          swift_release_n(v14, 2, v27);
          v28 = *(_QWORD *)(v1 + v5);
          *(_QWORD *)(v1 + v5) = v7;
          swift_retain(v7);
          swift_release(v28);
          v6 = 0;
          goto LABEL_18;
        }
        swift_release(v11);
      }
    }
    v13 = 2;
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___headerConfiguration);
LABEL_18:
  swift_retain(v6);
  return v7;
}

uint64_t sub_100953B04(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v2[5] = a1;
  v2[6] = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[8] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100953B94, v6, v7);
}

uint64_t sub_100953B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
    sub_100962C5C(v4, v5);

    sub_10004FF60(v4, (uint64_t *)&unk_1011A3D50);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 40);
    v8 = type metadata accessor for PlaybackIntentDescriptor(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100953C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  __int128 v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  _BYTE v28[24];
  __int128 v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char v34;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___searchHeaderConfiguration;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___searchHeaderConfiguration);
  if (!v6)
  {
    v8 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v28, 0, 0);
    sub_10004A160(v8, (uint64_t)v4, &qword_1011A30F0);
    v9 = swift_allocObject(&unk_1010E35A8, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v1);
    v10 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v27, 0, 0);
    sub_10004A160(v10, (uint64_t)&v29, (uint64_t *)&unk_1011B6910);
    if ((BYTE8(v29) & 1) != 0)
    {
      swift_retain(v9);
      sub_10004FF60((uint64_t)&v29, (uint64_t *)&unk_1011B6910);
      v11 = 0;
    }
    else
    {
      v11 = (void *)swift_unknownObjectWeakLoadStrong(&v29);
      swift_retain(v9);
      sub_10004FF60((uint64_t)&v29, (uint64_t *)&unk_1011B6910);
      if (v11)
      {
        v12 = sub_1007142B4();

        v13 = *(_OWORD *)&v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];
        v11 = *(void **)&v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];
        v14 = v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 26];
        v25 = *(_OWORD *)&v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 32];
        v26 = v13;
        v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];
        v16 = v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];
        v17 = *(unsigned __int16 *)&v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 24];

        v19 = v25;
        v18 = v26;
        v20 = 0x10000;
        if (!v14)
          v20 = 0;
        v21 = v17 | v20;
        goto LABEL_10;
      }
    }
    v15 = 0;
    v16 = 0;
    v18 = 0uLL;
    v21 = 0x20000;
    v19 = 0uLL;
LABEL_10:
    v29 = v18;
    v30 = v11;
    v31 = v21;
    v32 = v19;
    v33 = v15;
    v34 = v16;
    v7 = sub_10044C1B4((uint64_t)v4, (uint64_t)sub_1009736E4, v9, (uint64_t)&v29);
    swift_release_n(v9, 2, v22);
    v23 = *(_QWORD *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v7;
    swift_retain(v7);
    swift_release(v23);
    v6 = 0;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___searchHeaderConfiguration);
LABEL_11:
  swift_retain(v6);
  return v7;
}

uint64_t sub_100953EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v13[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100962C5C((uint64_t)v6, a2);

    return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3D50);
  }
  else
  {
    v11 = type metadata accessor for PlaybackIntentDescriptor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_100953FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  char v38[24];
  char v39[24];

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A30F0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v33 - v12;
  v35 = sub_10095376C();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isOverridingSource) == 1)
    v14 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogPlaylist;
  else
    v14 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  v15 = v0 + v14;
  swift_beginAccess(v1 + v14, v39, 0, 0);
  sub_10004A160(v15, (uint64_t)v13, &qword_1011A30F0);
  v16 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v38, 0, 0);
  sub_10004A160(v16, (uint64_t)v37, (uint64_t *)&unk_1011B6910);
  if ((v37[8] & 1) != 0)
  {
    sub_10004FF60((uint64_t)v37, (uint64_t *)&unk_1011B6910);
    v17 = 3;
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v37);
    sub_10004FF60((uint64_t)v37, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      v19 = sub_10070FCAC();

      v20 = *(_QWORD *)(v19 + 72);
      if (v20 == 1 || v20 == 2)
      {
        swift_release(v19);
        v17 = 2;
      }
      else
      {
        v21 = *(_QWORD *)(v19 + 64);
        swift_release(v19);
        v17 = (v21 & 1) == 0;
      }
    }
    else
    {
      v17 = 3;
    }
  }
  v22 = sub_1009480B0();
  v23 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v37, 0, 0);
  sub_10004A160(v23, (uint64_t)v11, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
  {
    sub_10004FF60((uint64_t)v11, &qword_1011A30F0);
    v24 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 1, 1, v24);
  }
  else
  {
    v25 = v34;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v34, v11, v2);
    v26 = sub_10004FF60((uint64_t)v11, &qword_1011A30F0);
    Playlist.favoriteStatus.getter(v26);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v25, v2);
    v27 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 0, 1, v27);
  }
  v36 = 0;
  v28 = Transaction.disablesAnimations.setter(1);
  v29 = v36;
  __chkstk_darwin(v28);
  *((_BYTE *)&v33 - 48) = v17;
  v30 = v35;
  *(&v33 - 5) = v35;
  *(&v33 - 4) = (uint64_t)v13;
  *((_BYTE *)&v33 - 24) = 0;
  *(&v33 - 2) = (uint64_t)v7;
  *(&v33 - 1) = v22;
  v31 = swift_retain(v29);
  withTransaction<A>(_:_:)(v31);
  swift_release(v29);
  swift_release(v29);
  swift_release(v30);
  swift_bridgeObjectRelease(v22);
  sub_10004FF60((uint64_t)v7, &qword_1011A19A0);
  return sub_10004FF60((uint64_t)v13, &qword_1011A30F0);
}

void sub_10095437C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  void *Strong;
  id v48;
  _QWORD v49[6];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _BYTE v53[64];
  _BYTE v54[24];
  _QWORD v55[11];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v52 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v4);
  v49[3] = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v6);
  v49[4] = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for SocialProfile(0);
  v49[5] = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49[2] = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A30F0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)v49 - v17;
  v19 = sub_100007E8C(&qword_1011B6938);
  __chkstk_darwin(v19);
  v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ContainerDetail.AttributionItem(0);
  v22 = *(_QWORD *)(v51 - 8);
  v23 = __chkstk_darwin(v51);
  v49[1] = (char *)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)v49 - v25;
  LOBYTE(v55[0]) = 6;
  v27 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v27) & 1) != 0)
  {
    v49[0] = v0;
    v28 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_attributionItem;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_attributionItem, v53, 0, 0);
    sub_10004A160(v28, (uint64_t)v21, &qword_1011B6938);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v51) == 1)
    {
      sub_10004FF60((uint64_t)v21, &qword_1011B6938);
LABEL_8:
      v1 = v49[0];
      goto LABEL_9;
    }
    sub_10005B6C0((uint64_t)v21, (uint64_t)v26, type metadata accessor for ContainerDetail.AttributionItem);
    sub_10070D2A8();
    if ((v29 & 1) == 0)
    {
      sub_10005B748((uint64_t)v26, type metadata accessor for ContainerDetail.AttributionItem);
      goto LABEL_8;
    }
    v30 = v49[0] + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v49[0] + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v55, 0, 0);
    sub_10004A160(v30, (uint64_t)v54, (uint64_t *)&unk_1011B6910);
    if ((v54[8] & 1) != 0)
    {
      sub_10004FF60((uint64_t)v54, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v54);
      sub_10004FF60((uint64_t)v54, (uint64_t *)&unk_1011B6910);
      if (Strong)
      {
        v48 = sub_10076BBD4();

LABEL_22:
        sub_10070C5A4((uint64_t)v48);
        swift_release(v48);
        sub_10005B748((uint64_t)v26, type metadata accessor for ContainerDetail.AttributionItem);
        return;
      }
    }
    v48 = 0;
    goto LABEL_22;
  }
LABEL_9:
  v31 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v54, 0, 0);
  sub_10004A160(v31, (uint64_t)v18, &qword_1011A30F0);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v33 = v1;
  if (v32(v18, 1, v9))
  {
    sub_10004FF60((uint64_t)v18, &qword_1011A30F0);
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v18, v9);
  v34 = sub_10004FF60((uint64_t)v18, &qword_1011A30F0);
  Playlist.curatorName.getter(v34);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!v36)
  {
LABEL_11:
    sub_10004A160(v31, (uint64_t)v16, &qword_1011A30F0);
    if (v32(v16, 1, v9))
    {
      sub_10004FF60((uint64_t)v16, &qword_1011A30F0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
      v37 = sub_10004FF60((uint64_t)v16, &qword_1011A30F0);
      v38 = Playlist.isOwner.getter(v37);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if ((v38 & 1) != 0)
      {
        v39 = sub_1009480B0();
        swift_bridgeObjectRelease(v39);
        if (!v39)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)v55);
          sub_100065184(v55);
          __asm { BR              X10 }
        }
      }
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRelease(v36);
LABEL_17:
  v40 = type metadata accessor for TaskPriority(0);
  v41 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v52, 1, 1, v40);
  v42 = swift_allocObject(&unk_1010E35A8, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16, v33);
  type metadata accessor for MainActor(0);
  v43 = swift_retain(v42);
  v44 = static MainActor.shared.getter(v43);
  v45 = (_QWORD *)swift_allocObject(&unk_1010E3AD0, 40, 7);
  v45[2] = v44;
  v45[3] = &protocol witness table for MainActor;
  v45[4] = v42;
  swift_release(v42);
  v46 = sub_100166D14(v41, (uint64_t)&unk_1011D0D68, (uint64_t)v45);
  swift_release(v46);
}

void sub_1009549AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *Strong;
  id v17;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x63697373616C63, 0xE700000000000000, 0x6269726373627573, 0xEA00000000007265, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v2 & 1) == 0)
    JUMPOUT(0x100954838);
  if (qword_10119B918 != -1)
    swift_once(&qword_10119B918, sub_1000FE7D4);
  v3 = qword_10124C870;
  KeyPath = swift_getKeyPath(&unk_100ED7D88);
  v5 = swift_getKeyPath(&unk_100ED7DB0);
  v6 = *(_QWORD **)(v1 - 344);
  static Published.subscript.getter(v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v7 = type metadata accessor for UserProfile(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  v10 = *(_QWORD *)(v1 - 336);
  if (v9 == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011A2290);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 328) + 56))(v10, 1, 1, *(_QWORD *)(v1 - 320));
    goto LABEL_14;
  }
  UserProfile.socialProfile.getter();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v6, v7);
  v11 = *(_QWORD *)(v1 - 328);
  v12 = *(_QWORD *)(v1 - 320);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v12) == 1)
LABEL_14:
    JUMPOUT(0x100954788);
  v13 = *(_QWORD *)(v1 - 352);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, v10, v12);
  v14 = *(_QWORD *)(v1 - 360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v13, v12);
  swift_storeEnumTagMultiPayload(v14, *(_QWORD *)(v1 - 312), 1);
  v15 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v1 - 272, 0, 0);
  sub_10004A160(v15, v1 - 248, (uint64_t *)&unk_1011B6910);
  if ((*(_BYTE *)(v1 - 240) & 1) != 0)
  {
    sub_10004FF60(v1 - 248, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 - 248);
    sub_10004FF60(v1 - 248, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      v17 = sub_10076BBD4();

LABEL_12:
      sub_10070C5A4((uint64_t)v17);
      swift_release(v17);
      sub_10005B748(v14, type metadata accessor for ContainerDetail.AttributionItem);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
      JUMPOUT(0x1009548ECLL);
    }
  }
  v17 = 0;
  goto LABEL_12;
}

uint64_t sub_100954C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[16] = a4;
  v5 = type metadata accessor for MusicPropertySource(0);
  v4[17] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[18] = v6;
  v4[19] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A30F0);
  v4[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[21] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[22] = v10;
  v4[23] = v11;
  return swift_task_switch(sub_100954D28, v10, v11);
}

uint64_t sub_100954D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 128) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 192) = Strong;
  if (Strong)
  {
    v3 = Strong;
    v5 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v0 + 40, 0, 0);
    sub_10004A160(v8, v4, &qword_1011A30F0);
    v9 = v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
    v10 = swift_beginAccess(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v0 + 64, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16))(v5, v9, v6, v10);
    v11 = v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v11, v0 + 88, 0, 0);
    sub_10004A160(v11, v0 + 112, (uint64_t *)&unk_1011B6910);
    if ((*(_BYTE *)(v0 + 120) & 1) != 0)
    {
      sub_10004FF60(v0 + 112, (uint64_t *)&unk_1011B6910);
      v12 = 0;
    }
    else
    {
      v12 = swift_unknownObjectWeakLoadStrong(v0 + 112);
      sub_10004FF60(v0 + 112, (uint64_t *)&unk_1011B6910);
    }
    *(_QWORD *)(v0 + 200) = v12;
    v15 = (_QWORD *)swift_task_alloc(dword_1011D0D74);
    *(_QWORD *)(v0 + 208) = v15;
    *v15 = v0;
    v15[1] = sub_100954EF4;
    return sub_100972F7C(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 152), v12);
  }
  else
  {
    swift_release();
    v13 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100954EF4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(void **)(*v0 + 200);
  v3 = *(_QWORD *)(*v0 + 152);
  v4 = *(_QWORD *)(*v0 + 160);
  v5 = *(_QWORD *)(*v0 + 136);
  v6 = *(_QWORD *)(*v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  sub_10004FF60(v4, &qword_1011A30F0);
  return swift_task_switch(sub_100954F7C, *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 184));
}

uint64_t sub_100954F7C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 168));

  v2 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100954FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  objc_super v22;
  _QWORD v23[3];
  uint64_t v24;
  char v25;

  v1 = v0;
  v2 = ((uint64_t (*)(void))sub_10095376C)();
  KeyPath = swift_getKeyPath(&unk_100ED7D38);
  v23[0] = v2;
  v4 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v23, KeyPath, v4);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Music6Header13Configuration__description);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 8);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 16);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Music6Header13Configuration__description + 24);
  sub_100445F28(v6, v5, v7, v8);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_100048AAC(v7, v8);
    swift_bridgeObjectRelease(v5);
    sub_10004BA30(v7, v8);
    swift_bridgeObjectRetain();
    sub_10044603C(v6, v5, v7, v8);
    v10 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v23, 0, 0);
    sub_10004A160(v10, (uint64_t)&v24, (uint64_t *)&unk_1011B6910);
    if ((v25 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v24, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v11 = (void *)swift_unknownObjectWeakLoadStrong(&v24);
      v12 = sub_10004FF60((uint64_t)&v24, (uint64_t *)&unk_1011B6910);
      if (v11)
      {
        v13 = sub_10095376C(v12);
        v14 = swift_getKeyPath(&unk_100ED7D60);
        v24 = v13;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v24, v14, v4);
        swift_release(v14);
        v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtCV5Music6Header13Configuration__title);
        v16 = *(_QWORD *)(v13 + OBJC_IVAR____TtCV5Music6Header13Configuration__title + 8);
        swift_bridgeObjectRetain();
        swift_release(v13);
        v17 = (objc_class *)type metadata accessor for DescriptionModal();
        v18 = objc_allocWithZone(v17);
        v19 = objc_allocWithZone((Class)type metadata accessor for DescriptionModal.Content());
        v20 = sub_100766A58(v15, v16, v6, v5);
        v22.receiver = v18;
        v22.super_class = v17;
        v21 = objc_msgSendSuper2(&v22, "initWithRootViewController:", v20);

        objc_msgSend(v11, "presentViewController:animated:completion:", v21, 1, 0);
        return result;
      }
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100955238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  _BYTE v26[24];

  v1 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v25[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentedLoadingState;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentedLoadingState);
  if ((v12 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL)
    goto LABEL_6;
  if (v12 >> 62)
  {
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_QWORD *)(v11 + 16);
    if (v12 >> 62 != 1)
    {
      if (v12 == 0x8000000000000000 && (v14 | v13) == 0)
        v20 = 0x8000000000000000;
      else
        v20 = 0x8000000000000001;
      sub_1004C826C(v20, 0, 0);
      return 2;
    }
    sub_1004C826C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentedLoadingState), v13, v14);
  }
  if ((v12 & 1) == 0)
  {
LABEL_6:
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) != 1)
    {
      v16 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
      swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v26, 0, 0);
      sub_10004A160(v16, (uint64_t)v3, &qword_1011A30F0);
      v17 = type metadata accessor for Playlist(0);
      LODWORD(v16) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v3, 1, v17) == 1;
      sub_10004FF60((uint64_t)v3, &qword_1011A30F0);
      return (2 * v16);
    }
    v15 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v15, v26, 0, 0);
    sub_10004A160(v15, (uint64_t)v10, (uint64_t *)&unk_1011D0BB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
    {
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011D0BB0);
      return 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011D0BB0);
    v21 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v4);
    dispatch thunk of Collection.endIndex.getter(v25, v4, v21);
    v23 = v25[0];
    v22 = v25[1];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v22 != v23)
      return 1;
  }
  return 2;
}

void sub_100955508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  void *Strong;
  uint64_t v9;
  _QWORD v10[3];
  _BYTE v11[16];

  v1 = v0;
  v2 = sub_10095376C();
  KeyPath = swift_getKeyPath(&unk_100ED7CE0);
  v10[0] = v2;
  v4 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v10, KeyPath, v4);
  swift_release();
  v5 = *(unsigned __int8 *)(v2 + 16);
  swift_release();
  if (v5 != 2)
  {
    v6 = sub_100955238();
    if (v6 != 2 && (v6 & 1) == 0)
    {
      v7 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
      swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v10, 0, 0);
      sub_10004A160(v7, (uint64_t)v11, (uint64_t *)&unk_1011B6910);
      if ((v11[8] & 1) != 0)
      {
        sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
        sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011B6910);
        if (Strong)
        {
          sub_10070FCAC();

          __chkstk_darwin(v9);
          sub_10092A698();
          swift_release();
        }
      }
      sub_100955894();
    }
  }
}

double sub_100955680@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v4 = _s11UberArtworkVMa(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10095376C();
  v8 = (uint64_t *)((char *)v6 + *(int *)(v4 + 24));
  *v8 = swift_getKeyPath(&unk_100ED7D08);
  v9 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  *(uint64_t *)((char *)v6 + *(int *)(v4 + 28)) = 0x4061800000000000;
  *v6 = v7;
  v6[1] = a1;
  sub_10005B6C0((uint64_t)v6, a2, _s11UberArtworkVMa);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

void sub_100955768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  _BYTE v8[24];
  _BYTE v9[16];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0;
    if (*(_BYTE *)(v1 + 32))
    {
      if (v2 == 1)
        return;
      if (*(_BYTE *)(v1 + 33))
      {
        if (v2 == 2)
          return;
        for (i = 34; *(_BYTE *)(v1 + i); ++i)
        {
          v5 = i - 31;
          if (__OFADD__(i - 32, 1))
          {
            __break(1u);
            return;
          }
          if (v5 == v2)
            return;
        }
      }
    }
    if ((sub_100955238() & 1) != 0)
    {
      v6 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
      swift_beginAccess(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v8, 0, 0);
      sub_10004A160(v6, (uint64_t)v9, (uint64_t *)&unk_1011B6910);
      if ((v9[8] & 1) != 0)
      {
        sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v9);
        sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B6910);
        if (Strong)
        {
          sub_10070FCAC();

          sub_100566E8C();
          swift_release();
        }
      }
      sub_100955894();
    }
  }
}

void sub_100955894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *Strong;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  id v24;
  id v25;
  int v26;
  void *v27;
  char **v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  NSString *v38;
  id v39;
  id v40;
  NSString v41;
  Class isa;
  _BYTE v44[80];
  _BYTE v45[24];
  _BYTE v46[16];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v8, v45, 0, 0);
  sub_10004A160(v8, (uint64_t)v46, (uint64_t *)&unk_1011B6910);
  if ((v46[8] & 1) != 0)
  {
    sub_10004FF60((uint64_t)v46, (uint64_t *)&unk_1011B6910);
    goto LABEL_5;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v46);
  sub_10004FF60((uint64_t)v46, (uint64_t *)&unk_1011B6910);
  if (!Strong
    || (v10 = objc_msgSend(Strong, "traitCollection"),
        Strong,
        v11 = objc_msgSend(v10, "userInterfaceIdiom"),
        v10,
        v11 != (id)6))
  {
LABEL_5:
    v12 = sub_100961C30();
    v13 = objc_msgSend(v12, "searchBar");

    v14 = objc_msgSend(v13, "searchTextField");
    v15 = type metadata accessor for MaterialSearchTextField();
    v16 = swift_dynamicCastClass(v14, v15);
    if (!v16)
    {
LABEL_26:

      return;
    }
    v17 = (void *)v16;
    v18 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching;
    v19 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching);
    if (v19)
      v20 = 0;
    else
      v20 = 16;
    v21 = v16 + OBJC_IVAR____TtC5Music23MaterialSearchTextField_blurEffectStyle;
    v22 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Music23MaterialSearchTextField_blurEffectStyle);
    v23 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC5Music23MaterialSearchTextField_blurEffectStyle + 8);
    *(_QWORD *)v21 = v20;
    *(_BYTE *)(v21 + 8) = v19;
    if ((v19 & 1) != 0)
    {
      if (v23)
      {
LABEL_19:
        v26 = *(unsigned __int8 *)(v1 + v18);
        v27 = (void *)objc_opt_self(UIColor);
        v28 = &selRef_secondaryLabelColor;
        if (!v26)
          v28 = &selRef_whiteColor;
        v29 = objc_msgSend(v27, *v28);
        v30 = objc_msgSend(v17, "leftView");
        if (v30)
        {
          v31 = v30;
          objc_msgSend(v30, "setTintColor:", v29);

        }
        v32 = objc_msgSend(v17, "rightView");
        if (v32)
        {
          v33 = v32;
          objc_msgSend(v32, "setTintColor:", v29);

        }
        v34 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
        static Locale.current.getter(v34);
        String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
        v35 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
        inited = swift_initStackObject(v35, v44);
        *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
        *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
        *(_QWORD *)(inited + 64) = sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
        *(_QWORD *)(inited + 40) = v29;
        v37 = v14;
        v38 = NSForegroundColorAttributeName;
        v39 = v29;
        sub_100041C10(inited);
        v40 = objc_allocWithZone((Class)NSAttributedString);
        v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_100048748((unint64_t *)&qword_10119D8C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EA7920);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v14 = objc_msgSend(v40, "initWithString:attributes:", v41, isa, swift_bridgeObjectRelease().n128_f64[0]);

        objc_msgSend(v17, "setAttributedPlaceholder:", v14);
        goto LABEL_26;
      }
    }
    else
    {
      if (v22 != 16)
        LOBYTE(v23) = 1;
      if ((v23 & 1) == 0)
        goto LABEL_19;
    }
    v24 = sub_1003F1F88();
    if ((*(_BYTE *)(v21 + 8) & 1) != 0)
      v25 = 0;
    else
      v25 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", *(_QWORD *)v21);
    objc_msgSend(v24, "setEffect:", v25);

    objc_msgSend(v17, "setNeedsLayout");
    goto LABEL_19;
  }
}

void *sub_100955D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _BYTE v36[24];
  _BYTE v37[24];

  v2 = v1;
  v4 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - v9;
  v12 = Playlist.Entry.internalItem.getter(v11);
  v13 = Playlist.Entry.InternalItem.id.getter(v12);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v10, v4);
  v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_libraryStateCache);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_libraryStateCache, v37, 0, 0);
  v18 = *v17;
  if (*(_QWORD *)(*v17 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_10079C1D4(v13, v15);
    if ((v20 & 1) != 0)
    {
      v21 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v22 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v36, 0, 0);
  sub_10004A160(v22, (uint64_t)&v34, (uint64_t *)&unk_1011B6910);
  if ((v35 & 1) != 0)
  {
    v23 = sub_10004FF60((uint64_t)&v34, (uint64_t *)&unk_1011B6910);
    v21 = 0;
  }
  else
  {
    v21 = (void *)swift_unknownObjectWeakLoadStrong(&v34);
    v23 = sub_10004FF60((uint64_t)&v34, (uint64_t *)&unk_1011B6910);
    if (v21)
    {
      v24 = objc_msgSend(v21, "traitCollection");
      v25 = sub_10013ADBC();
      UITraitCollection.subscript.getter(&v34, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v25);

      v26 = type metadata accessor for Playlist.Entry(0);
      v21 = (void *)MusicLibrary.state<A>(for:)(a1, v26, &protocol witness table for Playlist.Entry);
      swift_release();
    }
  }
  v27 = Playlist.Entry.internalItem.getter(v23);
  v28 = Playlist.Entry.InternalItem.id.getter(v27);
  v30 = v29;
  v16(v7, v4);
  swift_beginAccess(v17, &v34, 33, 0);
  if (v21)
  {
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
    v33 = *v17;
    *v17 = 0x8000000000000000;
    sub_1005EF430((uint64_t)v21, v28, v30, isUniquelyReferenced_nonNull_native);
    *v17 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1003AF318(v28, v30);
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_endAccess(&v34);
  return v21;
}

void sub_10095601C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  BOOL v26;
  uint64_t KeyPath;
  uint64_t v28;
  int v29;
  char *v30;
  _BYTE *v31;
  char v32;
  double v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  _QWORD v54[3];
  uint64_t v55[3];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  sub_10004A160((uint64_t)a1, (uint64_t)&v44 - v12, (uint64_t *)&unk_1011D0BB0);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v49(v13, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
    v14 = 2;
  }
  else
  {
    v15 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v4);
    dispatch thunk of Collection.endIndex.getter(v54, v4, v15);
    v14 = v55[0] == v54[0];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  v16 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
  v17 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v55, 0, 0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v49)(v16, 1, v4, v17))
  {
    if (v14 == 2)
      goto LABEL_29;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
    v18 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v4);
    dispatch thunk of Collection.endIndex.getter(&v50, v4, v18);
    v19 = v54[0];
    v20 = v50;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14 != 2 && (v14 != 0) != (v19 != v20))
      goto LABEL_29;
  }
  v21 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v54, 0, 0);
  sub_10004A160(v21, (uint64_t)&v50, (uint64_t *)&unk_1011B6910);
  v47 = a1;
  v48 = v7;
  v45 = v21;
  if ((v51 & 1) != 0)
  {
    sub_10004FF60((uint64_t)&v50, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    v22 = (_BYTE *)swift_unknownObjectWeakLoadStrong(&v50);
    sub_10004FF60((uint64_t)&v50, (uint64_t *)&unk_1011B6910);
    if (v22)
    {
      v22[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 1;

    }
  }
  v23 = sub_10095376C();
  v24 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching;
  v25 = *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching);
  v46 = v10;
  if ((v25 & 1) != 0 || v49((char *)v16, 1, v4))
  {
    v26 = 0;
  }
  else
  {
    v34 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v48, v16, v4);
    v35 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v4);
    dispatch thunk of Collection.endIndex.getter(&v52, v4, v35);
    v26 = v50 == v52;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v34, v4);
  }
  KeyPath = swift_getKeyPath(&unk_100ED7CB8);
  __chkstk_darwin(KeyPath);
  *(&v44 - 2) = v23;
  *((_BYTE *)&v44 - 8) = v26;
  v50 = v23;
  v28 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v50, KeyPath, sub_100874724, &v44 - 4, (char *)&type metadata for () + 8, v28);
  swift_release();
  swift_release();
  v29 = *(unsigned __int8 *)(v2 + v24);
  v10 = v46;
  a1 = v47;
  v30 = v48;
  if (v29 == 1)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeHeaderOnNextReload) = 1;
    sub_10004A160(v45, (uint64_t)&v50, (uint64_t *)&unk_1011B6910);
    if ((v51 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v50, (uint64_t *)&unk_1011B6910);
      goto LABEL_29;
    }
    v31 = (_BYTE *)swift_unknownObjectWeakLoadStrong(&v50);
    sub_10004FF60((uint64_t)&v50, (uint64_t *)&unk_1011B6910);
    if (v31)
    {
      if (v49((char *)v16, 1, v4))
      {
        v32 = v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork];
        v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
        v33 = 1.0;
        if ((v32 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v30, v16, v4);
        v36 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
        dispatch thunk of Collection.startIndex.getter(v4);
        dispatch thunk of Collection.endIndex.getter(&v52, v4, v36);
        v37 = v50 == v52;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v30, v4);
        v38 = v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork];
        v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = v37;
        if (v37 == v38)
        {
LABEL_28:

          goto LABEL_29;
        }
        v33 = 1.0;
        if (v37)
          v33 = 0.0;
      }
      objc_msgSend(*(id *)&v31[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer], "setAlpha:", v33);
      goto LABEL_28;
    }
  }
LABEL_29:
  sub_100957048();
  sub_10095A140(a1);
  sub_10004A160(v16, (uint64_t)v10, (uint64_t *)&unk_1011D0BB0);
  sub_10095921C((uint64_t)a1, (uint64_t)v10);
  v40 = v39;
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011D0BB0);
  sub_100952C70(v40 & 1);
  v41 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v41, &v50, 0, 0);
  sub_10004A160(v41, (uint64_t)&v52, (uint64_t *)&unk_1011B6910);
  if ((v53 & 1) != 0)
  {
    sub_10004FF60((uint64_t)&v52, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    v42 = (void *)swift_unknownObjectWeakLoadStrong(&v52);
    sub_10004FF60((uint64_t)&v52, (uint64_t *)&unk_1011B6910);
    if (v42)
    {
      sub_100714554();

    }
  }
  sub_10004A160(v41, (uint64_t)&v52, (uint64_t *)&unk_1011B6910);
  if ((v53 & 1) != 0)
  {
    sub_10004FF60((uint64_t)&v52, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    v43 = (void *)swift_unknownObjectWeakLoadStrong(&v52);
    sub_10004FF60((uint64_t)&v52, (uint64_t *)&unk_1011B6910);
    if (v43)
    {
      objc_msgSend(v43, "setNeedsUpdateContentUnavailableConfiguration");

    }
  }
}

void sub_100956700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *Strong;
  id v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t KeyPath;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  _QWORD v28[3];
  _QWORD v29[3];
  _BYTE v30[24];
  _BYTE v31[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v28 - v10;
  v12 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v12, v31, 0, 0);
  sub_10004A160(v12, (uint64_t)v30, (uint64_t *)&unk_1011B6910);
  if ((v30[8] & 1) != 0)
  {
    sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v30);
    sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      v14 = sub_1007142B4();

      v15 = objc_msgSend(v14, "hasUncommittedUpdates");
      if ((v15 & 1) != 0)
      {
        *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_postponeStaticEntriesUpdates) = 1;
        return;
      }
    }
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_postponeStaticEntriesUpdates) = 0;
  sub_1009574D8();
  sub_10095B3DC();
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource);
  if (v16)
  {
    v17 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v30, 0, 0);
    sub_10004A160(v17, (uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
    {
      swift_retain();
      sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
      swift_retain();
      sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011D0BB0);
      v18 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Collection.startIndex.getter(v2);
      dispatch thunk of Collection.endIndex.getter(v28, v2, v18);
      v19 = v29[0];
      v20 = v28[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v19 == v20)
      {
        v21 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks;
        swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks, v28, 0, 0);
        v22 = *(_QWORD *)(*(_QWORD *)v21 + 16) == 0;
LABEL_12:
        KeyPath = swift_getKeyPath(&unk_100ED7C70);
        v24 = swift_getKeyPath(&unk_100ED7C98);
        LOBYTE(v29[0]) = v22;
        static Published.subscript.setter(v29, v16, KeyPath, v24);
        goto LABEL_13;
      }
    }
    v22 = 0;
    goto LABEL_12;
  }
LABEL_13:
  v25 = sub_100962308();
  v26 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearchEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearchEnabled) = v25 & 1;
  sub_1009629E4(v26);
  v27 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v29, 0, 0);
  sub_10004A160(v27, (uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
  sub_10094B644((uint64_t)v8);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
}

void sub_100956A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  void *Strong;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Class isa;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[24];
  _BYTE v67[16];
  _BYTE v68[24];

  v65 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v62 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - v11;
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - v17;
  v19 = type metadata accessor for IndexPath(0);
  v63 = *(_QWORD *)(v19 - 8);
  v64 = v19;
  __chkstk_darwin(v19);
  v61 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v59 - v22;
  v24 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
  v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8);
  if (!a2)
  {
    if (!v25)
      return;
LABEL_8:
    v60 = v23;
    sub_100957048();
    v26 = v24[1];
    if (v26)
    {
      if (a2)
        return;
      v27 = *v24;
      v28 = sub_10093A524(2u);
      v30 = v29;
      v31 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
      swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v68, 0, 0);
      sub_10004A160(v31, (uint64_t)v9, (uint64_t *)&unk_1011D0BB0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
      {
        swift_bridgeObjectRetain();
        sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011D0BB0);
        v32 = 1;
      }
      else
      {
        v37 = (uint64_t)v62;
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v62, v9, v4);
        swift_bridgeObjectRetain();
        sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011D0BB0);
        swift_bridgeObjectRetain();
        v38 = sub_10096EB88(v37, v27, v26);
        v40 = v30 | v39;
        v41 = swift_bridgeObjectRelease(v26);
        (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v37, v4, v41);
        if ((v40 & 1) != 0)
        {
          v32 = 1;
        }
        else
        {
          IndexPath.init(item:section:)(v38, v28);
          v32 = 0;
        }
      }
      v48 = v63;
      v47 = v64;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v15, v32, 1, v64);
      v49 = swift_bridgeObjectRelease(v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v48 + 48))(v15, 1, v47, v49) == 1)
      {
        sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3D50);
        return;
      }
      v50 = v61;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v61, v15, v47);
      goto LABEL_24;
    }
    if (!a2)
      return;
    v33 = sub_10093A524(2u);
    v35 = v34;
    v36 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v68, 0, 0);
    sub_10004A160(v36, (uint64_t)v12, (uint64_t *)&unk_1011D0BB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
    {
      sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011D0BB0);
    }
    else
    {
      v42 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v62, v12, v4);
      sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011D0BB0);
      swift_bridgeObjectRetain();
      v43 = sub_10096EB88(v42, v65, a2);
      v45 = v35 | v44;
      v46 = swift_bridgeObjectRelease(a2);
      (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v42, v4, v46);
      if ((v45 & 1) == 0)
      {
        IndexPath.init(item:section:)(v43, v33);
        v48 = v63;
        v47 = v64;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v18, 0, 1, v64);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v18, 1, v47) != 1)
        {
          v50 = v60;
          (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v60, v18, v47);
LABEL_24:
          v51 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
          swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v66, 0, 0);
          sub_10004A160(v51, (uint64_t)v67, (uint64_t *)&unk_1011B6910);
          if ((v67[8] & 1) != 0)
          {
            sub_10004FF60((uint64_t)v67, (uint64_t *)&unk_1011B6910);
          }
          else
          {
            Strong = (void *)swift_unknownObjectWeakLoadStrong(v67);
            sub_10004FF60((uint64_t)v67, (uint64_t *)&unk_1011B6910);
            if (Strong)
            {
              v53 = sub_1007142B4();

              v54 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
              v55 = *(unsigned __int8 *)(v48 + 80);
              v56 = (v55 + 32) & ~v55;
              v57 = swift_allocObject(v54, v56 + *(_QWORD *)(v48 + 72), v55 | 7);
              *(_OWORD *)(v57 + 16) = xmmword_100EA7AA0;
              (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v57 + v56, v50, v47);
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v53, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v57).n128_f64[0]);

            }
          }
          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
          return;
        }
LABEL_19:
        sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A3D50);
        return;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v18, 1, 1, v64);
    goto LABEL_19;
  }
  if (!v25
    || (*v24 != v65 || v25 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(v65, a2, *v24, v25, 0) & 1) == 0)
  {
    goto LABEL_8;
  }
}

uint64_t sub_100957048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  __n128 v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _BYTE v49[24];
  char v50[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v44 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v5);
  v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v46 = (char *)&v42 - v8;
  v48 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  v17 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v50, 0, 0);
  sub_10004A160(v17, (uint64_t)v16, (uint64_t *)&unk_1011D0BB0);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v19 = v18(v16, 1, v2);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011D0BB0);
  if (v19 == 1 || (v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8)) == 0)
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v27 = (uint64_t)v47;
    v26(v47, 1, 1, v48);
    goto LABEL_6;
  }
  v43 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
  v21 = sub_10093A524(2u);
  v23 = v22;
  sub_10004A160(v17, (uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
  if (v18(v13, 1, v2))
  {
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
    v24 = v48;
    v25 = (uint64_t)v46;
  }
  else
  {
    v42 = v21;
    v30 = (uint64_t)v44;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v44, v13, v2);
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
    swift_bridgeObjectRetain();
    v31 = sub_10096EB88(v30, v43, v20);
    v33 = v23 | v32;
    v34 = swift_bridgeObjectRelease(v20);
    (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v30, v2, v34);
    v24 = v48;
    v25 = (uint64_t)v46;
    if ((v33 & 1) == 0)
    {
      IndexPath.init(item:section:)(v31, v42);
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v35(v25, 0, 1, v24);
      goto LABEL_10;
    }
  }
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v35(v25, 1, 1, v24);
LABEL_10:
  v36 = swift_bridgeObjectRelease(v20);
  v0 = v1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48))(v25, 1, v24, v36) != 1)
  {
    v39 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v45, v25, v24);
    v40 = (uint64_t)v47;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, v39, v24);
    v35(v40, 0, 1, v24);
    v41 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentItemIndexPath;
    swift_beginAccess(v41, v49, 33, 0);
    sub_1000A5508(v40, v41, (uint64_t *)&unk_1011A3D50);
    swift_endAccess(v49);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v39, v24);
  }
  sub_10004FF60(v25, (uint64_t *)&unk_1011A3D50);
  v37 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_autoupdatingResponse);
  if (v37 < 0 && (v37 & 0xF000000000000007) != 0xF000000000000007)
  {
    swift_retain();
    v0 = v1;
    if ((dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v38) & 1) != 0)
    {
      sub_100951C08();
      return sub_1004CA0BC(v37);
    }
    sub_1004CA0BC(v37);
  }
  v27 = (uint64_t)v47;
  v35((uint64_t)v47, 1, 1, v24);
LABEL_6:
  v28 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentItemIndexPath;
  swift_beginAccess(v28, v49, 33, 0);
  sub_1000A5508(v27, v28, (uint64_t *)&unk_1011A3D50);
  return swift_endAccess(v49);
}

uint64_t sub_1009574D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  void (*v64)(Swift::String *, _QWORD);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  _QWORD *v70;
  uint64_t (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  Swift::String v76;
  Swift::String v77;
  unint64_t v78;
  char v79;
  __n128 v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  Swift::String v88;
  Swift::String v89;
  unint64_t v90;
  char v91;
  __n128 v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  char *v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  Swift::String v117[2];
  Swift::String v118;
  _BYTE v119[24];
  char v120[16];

  v114 = type metadata accessor for Playlist.Entry(0);
  v116 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v97 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v110 = (char *)&v97 - v3;
  __chkstk_darwin(v4);
  v115 = (char *)&v97 - v5;
  __chkstk_darwin(v6);
  v109 = (char *)&v97 - v7;
  v105 = (_QWORD *)sub_100007E8C((uint64_t *)&unk_1011D0D00);
  __chkstk_darwin(v105);
  v104 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v113 = (uint64_t)&v97 - v10;
  v11 = type metadata accessor for MusicPropertySource(0);
  v107 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v106 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v97 - v14;
  v16 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (char *)&v97 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v97 - v23;
  v25 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v108 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v97 - v29;
  v31 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v120, 0, 0);
  sub_10004A160(v31, (uint64_t)v24, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011D0BB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v21, 1, 1, v25);
    v32 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v117, 0, 0);
    sub_10004A160(v32, (uint64_t)v18, (uint64_t *)&unk_1011D0BB0);
    swift_beginAccess(v32, v119, 33, 0);
    sub_1001A83C8((uint64_t)v21, v32, (uint64_t *)&unk_1011D0BB0);
    swift_endAccess(v119);
    sub_10095601C(v18);
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011D0BB0);
    return sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011D0BB0);
  }
  v111 = v21;
  v102 = v18;
  v34 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v103 = v30;
  v34(v30, v24, v25);
  v35 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v36 = swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v119, 0, 0);
  v37 = v107;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v107 + 16))(v15, v35, v11, v36);
  v38 = v106;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v106, enum case for MusicPropertySource.catalog(_:), v11);
  LOBYTE(v35) = static MusicPropertySource.== infix(_:_:)(v15, v38);
  v39 = *(void (**)(char *, uint64_t))(v37 + 8);
  v39(v38, v11);
  v39(v15, v11);
  if ((v35 & 1) == 0)
    goto LABEL_13;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) != 1)
    goto LABEL_13;
  v40 = *(char **)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_searchText + 8);
  if (!v40)
    goto LABEL_13;
  v41 = ((unint64_t)v40 >> 56) & 0xF;
  v101 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_searchText);
  if (((unint64_t)v40 & 0x2000000000000000) == 0)
    v41 = v101 & 0xFFFFFFFFFFFFLL;
  if (v41)
  {
    v97 = v0;
    v100 = v26;
    v42 = (uint64_t)v104;
    v99 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    v99(v104, v103, v25);
    v43 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v106 = v40;
    swift_bridgeObjectRetain();
    dispatch thunk of Collection.startIndex.getter(v25);
    v44 = v105;
    *(_QWORD *)(v42 + *((int *)v105 + 9)) = v117[0]._countAndFlagsBits;
    v45 = v113;
    sub_100065228(v42, v113, (uint64_t *)&unk_1011D0D00);
    v46 = (_QWORD *)(v45 + *((int *)v44 + 9));
    v47 = *v46;
    v104 = (char *)v25;
    dispatch thunk of Collection.endIndex.getter(v117, v25, v43);
    v48 = (uint64_t)v111;
    if (v47 != v117[0]._countAndFlagsBits)
    {
      v105 = _swiftEmptyArrayStorage;
      v58 = v104;
      v60 = v114;
      v59 = v115;
      v98 = v46;
      while (1)
      {
        v64 = (void (*)(Swift::String *, _QWORD))dispatch thunk of Collection.subscript.read(v117, v46, v58, v43);
        v65 = v116;
        v66 = v43;
        v67 = v46;
        v68 = v109;
        v107 = *(_QWORD *)(v116 + 16);
        ((void (*)(char *))v107)(v109);
        v64(v117, 0);
        v69 = v108;
        v99(v108, (char *)v45, (uint64_t)v58);
        v70 = v67;
        v43 = v66;
        dispatch thunk of Collection.formIndex(after:)(v70, v58, v66);
        (*(void (**)(char *, char *))(v100 + 8))(v69, v58);
        v71 = *(uint64_t (**)(char *, char *, uint64_t))(v65 + 32);
        v72 = v71(v59, v68, v60);
        v73 = Playlist.Entry.title.getter(v72);
        v75 = HIBYTE(v74) & 0xF;
        if ((v74 & 0x2000000000000000) == 0)
          v75 = v73 & 0xFFFFFFFFFFFFLL;
        if (v75)
        {
          v76 = String.insensitiveCompareString()();
          v77 = String.insensitiveCompareString()();
          v117[0] = v76;
          v118 = v77;
          v78 = sub_100055B68();
          v79 = StringProtocol.contains<A>(_:)(&v118, &type metadata for String, &type metadata for String, v78, v78);
          v48 = (uint64_t)v111;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v80 = swift_bridgeObjectRelease();
          v81 = v110;
          v82 = (void (*)(char *, char *, uint64_t))v107;
          v83 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v107)(v110, v59, v60, v80);
          if ((v79 & 1) != 0)
          {
            v62 = *(void (**)(char *, uint64_t))(v116 + 8);
            v62(v81, v60);
            v46 = v98;
LABEL_27:
            v82(v112, v115, v60);
            v93 = (unint64_t)v105;
            if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
              v93 = sub_100433664(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
            v95 = *(_QWORD *)(v93 + 16);
            v94 = *(_QWORD *)(v93 + 24);
            v45 = v113;
            if (v95 >= v94 >> 1)
              v93 = sub_100433664(v94 > 1, v95 + 1, 1, v93);
            *(_QWORD *)(v93 + 16) = v95 + 1;
            v96 = (*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
            v105 = (_QWORD *)v93;
            v60 = v114;
            v71((char *)(v93 + v96 + *(_QWORD *)(v116 + 72) * v95), v112, v114);
            goto LABEL_16;
          }
        }
        else
        {
          v84 = swift_bridgeObjectRelease();
          v81 = v110;
          v82 = (void (*)(char *, char *, uint64_t))v107;
          v83 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v107)(v110, v59, v60, v84);
        }
        v85 = Playlist.Entry.artistName.getter(v83);
        v87 = HIBYTE(v86) & 0xF;
        if ((v86 & 0x2000000000000000) == 0)
          v87 = v85 & 0xFFFFFFFFFFFFLL;
        v46 = v98;
        if (v87)
        {
          v88 = String.insensitiveCompareString()();
          v89 = String.insensitiveCompareString()();
          v117[0] = v88;
          v118 = v89;
          v90 = sub_100055B68();
          v91 = StringProtocol.contains<A>(_:)(&v118, &type metadata for String, &type metadata for String, v90, v90);
          v48 = (uint64_t)v111;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v92 = swift_bridgeObjectRelease();
          v62 = *(void (**)(char *, uint64_t))(v116 + 8);
          v60 = v114;
          ((void (*)(char *, uint64_t, __n128))v62)(v81, v114, v92);
          if ((v91 & 1) != 0)
            goto LABEL_27;
        }
        else
        {
          v61 = swift_bridgeObjectRelease();
          v62 = *(void (**)(char *, uint64_t))(v116 + 8);
          v60 = v114;
          ((void (*)(char *, uint64_t, __n128))v62)(v81, v114, v61);
        }
        v45 = v113;
LABEL_16:
        v59 = v115;
        v62(v115, v60);
        v63 = *v46;
        v58 = v104;
        dispatch thunk of Collection.endIndex.getter(v117, v104, v43);
        if (v63 == v117[0]._countAndFlagsBits)
          goto LABEL_12;
      }
    }
    v105 = _swiftEmptyArrayStorage;
    v58 = v104;
    v60 = v114;
LABEL_12:
    sub_10004FF60(v45, (uint64_t *)&unk_1011D0D00);
    swift_bridgeObjectRelease();
    v117[0]._countAndFlagsBits = (uint64_t)v105;
    v49 = sub_100007E8C((uint64_t *)&unk_1011C6870);
    v50 = sub_100049F28((unint64_t *)&unk_1011D0D20, (uint64_t *)&unk_1011C6870, (uint64_t)&protocol conformance descriptor for [A]);
    MusicItemCollection.init<A>(_:)(v117, v60, v49, &protocol witness table for Playlist.Entry, v50);
    v51 = v100;
    (*(void (**)(uint64_t, _QWORD, uint64_t, char *))(v100 + 56))(v48, 0, 1, v58);
    v52 = v97 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v97 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v117, 0, 0);
    v53 = v102;
    sub_10004A160(v52, (uint64_t)v102, (uint64_t *)&unk_1011D0BB0);
    swift_beginAccess(v52, &v118, 33, 0);
    sub_1001A83C8(v48, v52, (uint64_t *)&unk_1011D0BB0);
    swift_endAccess(&v118);
    sub_10095601C(v53);
    sub_10004FF60(v48, (uint64_t *)&unk_1011D0BB0);
    sub_10004FF60((uint64_t)v53, (uint64_t *)&unk_1011D0BB0);
    return (*(uint64_t (**)(char *, char *))(v51 + 8))(v103, v58);
  }
  else
  {
LABEL_13:
    v54 = (uint64_t)v111;
    v55 = v103;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v111, v103, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v54, 0, 1, v25);
    v56 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v117, 0, 0);
    v57 = v102;
    sub_10004A160(v56, (uint64_t)v102, (uint64_t *)&unk_1011D0BB0);
    swift_beginAccess(v56, &v118, 33, 0);
    sub_1001A83C8(v54, v56, (uint64_t *)&unk_1011D0BB0);
    swift_endAccess(&v118);
    sub_10095601C(v57);
    sub_10004FF60(v54, (uint64_t *)&unk_1011D0BB0);
    sub_10004FF60((uint64_t)v57, (uint64_t *)&unk_1011D0BB0);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v55, v25);
  }
}

void *sub_100957FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *Strong;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t inited;
  char *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _BYTE v57[48];
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[10];
  _OWORD v64[10];
  _OWORD v65[6];

  v50 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v2);
  v56 = (void (**)(char *, uint64_t, uint64_t))((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  __chkstk_darwin(v4);
  v54 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  __chkstk_darwin(v6);
  v51 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v21 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v21);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v1;
  v24 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, &v62, 0, 0);
  sub_10004A160(v24, (uint64_t)v65, (uint64_t *)&unk_1011B6910);
  if ((BYTE8(v65[0]) & 1) != 0)
  {
    sub_10004FF60((uint64_t)v65, (uint64_t *)&unk_1011B6910);
    return 0;
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v65);
    sub_10004FF60((uint64_t)v65, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      v26 = type metadata accessor for PlaylistContext(0);
      v45 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
      v46 = v26;
      v45(v23, 1, 1);
      v27 = (unint64_t)v23;
      v28 = v55 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
      swift_beginAccess(v55 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, &v61, 0, 0);
      sub_10004A160(v28, (uint64_t)v13, &qword_1011A30F0);
      v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
      v47 = Strong;
      if (v29 == 1)
      {
        sub_10004FF60((uint64_t)v13, &qword_1011A30F0);
        v30 = v50;
      }
      else
      {
        sub_10004FF60(v27, (uint64_t *)&unk_1011A20C0);
        v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v31(v20, v13, v14);
        v30 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v10, v50, v49);
        v31(v17, v20, v14);
        PlaylistContext.init(entry:playlist:)((uint64_t)v10, (uint64_t)v17, v27);
        ((void (*)(unint64_t, _QWORD, uint64_t, uint64_t))v45)(v27, 0, 1, v46);
      }
      v32 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
      inited = swift_initStackObject(v32, &v60);
      *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
      v34 = v51;
      Playlist.Entry.internalItem.getter(inited);
      Playlist.Entry.InternalItem.musicItem.getter((_QWORD *)(inited + 32));
      (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
      v35 = v54;
      sub_100965638(v30, v54);
      v36 = (void *)PlaybackIntentDescriptor.intent.getter();
      sub_10005B748(v35, type metadata accessor for PlaybackIntentDescriptor);
      v37 = v47;
      v38 = objc_msgSend(v37, "traitCollection");
      v39 = sub_10013ADBC();
      UITraitCollection.subscript.getter(v65, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v39);

      v40 = *(_QWORD *)&v65[0];
      sub_100966CD4(v56);
      memset(v65, 0, 80);
      v58 = 0;
      memset(v57, 0, sizeof(v57));
      v59 = xmmword_100EA93A0;
      if (qword_10119B8C0 != -1)
        swift_once(&qword_10119B8C0, sub_1000E9774);
      v41 = qword_10119B8C8;
      v42 = (id)qword_10124C798;
      if (v41 != -1)
        swift_once(&qword_10119B8C8, sub_1000E97E8);
      v43 = qword_10124C7A0;
      swift_retain();
      sub_100495120(inited, v36, v27, v40, v42, v43, (unint64_t)v56, (uint64_t)v65, v63, (uint64_t)v57, 1);
      sub_100065228((uint64_t)v63, (uint64_t)v64, (uint64_t *)&unk_1011A3DC0);
      if (*((_QWORD *)&v64[0] + 1))
      {
        v64[7] = v64[2];
        v64[8] = v64[3];
        v64[9] = v64[4];
        v64[5] = v64[0];
        v64[6] = v64[1];
        sub_100007E8C((uint64_t *)&unk_1011A20B0);
        Strong = (void *)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
        sub_1000E411C((uint64_t)v63);
      }
      else
      {
        Strong = 0;
      }
      swift_release();
      swift_bridgeObjectRelease();

      swift_release();
      sub_10004FF60((uint64_t)v57, (uint64_t *)&unk_1011A20F0);
      sub_10004FF60((uint64_t)v56, (uint64_t *)&unk_1011A9990);
      sub_10004FF60(v27, (uint64_t *)&unk_1011A20C0);
    }
  }
  return Strong;
}

double sub_1009585EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double result;
  void *Strong;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  void (*v41)(char *, unint64_t, uint64_t, __n128);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  void *v45;
  id v46;
  Class isa;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  __n128 v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, char *, uint64_t);
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, unint64_t, uint64_t, __n128);
  char *v127;
  _BYTE v128[16];
  char v129[8];
  char v130[8];
  _BYTE v131[16];
  char v132[8];

  v1 = v0;
  v2 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A64E8);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v9);
  v116 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Playlist(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (uint64_t)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v123 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v118 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v14);
  v121 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for Playlist.Entry(0);
  v119 = *(_QWORD *)(v120 - 8);
  v16 = __chkstk_darwin(v120);
  v112 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v117 = (char *)&v93 - v19;
  v111 = v20;
  __chkstk_darwin(v18);
  v122 = (uint64_t)&v93 - v21;
  v22 = type metadata accessor for IndexPath(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v127 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v25);
  v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v132, 0, 0);
  v124 = v28;
  sub_10004A160(v28, (uint64_t)v131, (uint64_t *)&unk_1011B6910);
  if ((v131[8] & 1) != 0)
  {
    sub_10004FF60((uint64_t)v131, (uint64_t *)&unk_1011B6910);
    return result;
  }
  v110 = v12;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v131);
  sub_10004FF60((uint64_t)v131, (uint64_t *)&unk_1011B6910);
  if (Strong)
  {
    v108 = v8;
    v107 = v5;
    v31 = sub_1007142B4();

    v32 = objc_msgSend(v31, "indexPathsForVisibleItems");
    v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v22);

    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      v100 = v3;
      v101 = v2;
      v35 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
      v36 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
      v102 = v1;
      v37 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playerStateCache);
      v38 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v109 = v33;
      v39 = v33 + v38;
      v106 = v35;
      swift_beginAccess(v35, v131, 0, 0);
      v103 = v36;
      swift_beginAccess(v36, v130, 0, 0);
      v99 = v37;
      v40 = swift_beginAccess(v37, v129, 0, 0);
      v41 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16);
      v125 = *(_QWORD *)(v23 + 72);
      v126 = v41;
      v42 = v124;
      v43 = v127;
      while (1)
      {
        v126(v27, v39, v22, v40);
        v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
        v44(v27, 0, 1, v22);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v27, 1, v22) == 1)
        {
          v92 = v109;
          goto LABEL_34;
        }
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v43, v27, v22);
        sub_10004A160(v42, (uint64_t)v128, (uint64_t *)&unk_1011B6910);
        if ((v128[8] & 1) != 0)
          break;
        v45 = (void *)swift_unknownObjectWeakLoadStrong(v128);
        sub_10004FF60((uint64_t)v128, (uint64_t *)&unk_1011B6910);
        if (!v45)
          goto LABEL_19;
        v46 = sub_1007142B4();

        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v48 = objc_msgSend(v46, "cellForItemAtIndexPath:", isa);

        v42 = v124;
        if (!v48)
          goto LABEL_19;
        v49 = _s13TracklistCellCMa();
        v50 = swift_dynamicCastClass(v48, v49);
        if (!v50)
          goto LABEL_18;
        v51 = *(_QWORD *)(v50 + OBJC_IVAR____TtCV5Music15ContainerDetail13TracklistCell_data + 8);
        if ((~v51 & 0xF000000000000007) != 0)
        {
          if (v51 < 0
            || (v105 = *(_QWORD *)(v50 + OBJC_IVAR____TtCV5Music15ContainerDetail13TracklistCell_data + 8),
                v52 = *(_QWORD *)(v50 + OBJC_IVAR____TtCV5Music15ContainerDetail13TracklistCell_data),
                v53 = type metadata accessor for PlaylistEntryData(0),
                v104 = v52,
                v54 = swift_dynamicCastClass(v52, v53),
                v55 = v110,
                !v54))
          {
LABEL_18:

            goto LABEL_19;
          }
          v98 = v54;
          v56 = v121;
          sub_10004A160(v106, v121, (uint64_t *)&unk_1011D0BB0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v56, 1, v55))
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v118, v56, v55);
            sub_1004C8A14(v104, v105);
            sub_1004C8A14(v104, v105);
            v59 = sub_10004FF60(v56, (uint64_t *)&unk_1011D0BB0);
            v60 = v55;
            v61 = IndexPath.item.getter(v59);
            v62 = v118;
            MusicItemCollection.subscript.getter(v61, v60);
            (*(void (**)(char *, uint64_t))(v123 + 8))(v62, v60);
            v97 = *(void (**)(uint64_t, char *, uint64_t))(v119 + 32);
            v97(v122, v117, v120);
            v63 = v116;
            sub_10004A160(v103, v116, &qword_1011A30F0);
            v64 = v114;
            v65 = v63;
            v66 = v115;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v65, 1, v115) == 1)
            {

              v67 = v104;
              v68 = v105;
              sub_1004C8A20(v104, v105);
              sub_1004C8A20(v67, v68);
              (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v122, v120);
              v43 = v127;
              (*(void (**)(char *, uint64_t))(v23 + 8))(v127, v22);
              sub_10004FF60(v116, &qword_1011A30F0);
LABEL_30:
              v42 = v124;
              goto LABEL_20;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v113, v116, v66);
            v69 = v122;
            v70 = v102;
            sub_100959DA4(v122, v108);
            v96 = swift_allocObject(&unk_1010E35A8, 24, 7);
            swift_unknownObjectWeakInit(v96 + 16, v70);
            v71 = v119;
            v72 = v69;
            v73 = v120;
            v93 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
            v93(v112, v72, v120);
            v74 = *(unsigned __int8 *)(v71 + 80);
            v94 = (v74 + 24) & ~v74;
            v75 = swift_allocObject(&unk_1010E3A08, v94 + v111, v74 | 7);
            v95 = v75;
            v76 = v96;
            *(_QWORD *)(v75 + 16) = v96;
            v97(v75 + v94, v112, v73);
            swift_retain(v76);
            v77 = v95;
            sub_1001EDFF0(v122, v113, (uint64_t)v108, (uint64_t)sub_100971FB4, v95);
            swift_release(v77);
            sub_10004FF60((uint64_t)v108, (uint64_t *)&unk_1011A64E8);
            swift_release(v96);
            v78 = v107;
            v80 = Playlist.Entry.internalItem.getter(v79);
            v97 = (void (*)(uint64_t, char *, uint64_t))Playlist.Entry.InternalItem.id.getter(v80);
            v98 = v81;
            (*(void (**)(char *, uint64_t))(v100 + 8))(v78, v101);
            v82 = *v99;
            v83 = v122;
            if (*(_QWORD *)(*v99 + 16))
            {
              swift_bridgeObjectRetain();
              v84 = sub_10079C1D4((uint64_t)v97, v98);
              if ((v85 & 1) != 0)
              {
                v97 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v82 + 56) + 8 * v84);
                swift_retain(v97);
                swift_bridgeObjectRelease(v82);
                v86 = swift_bridgeObjectRelease(v98);
                v87 = v112;
                ((void (*)(char *, uint64_t, uint64_t, __n128))v93)(v112, v122, v120, v86);
                (*(void (**)(char *))(*(_QWORD *)v97 + 224))(v87);

                v88 = v104;
                v89 = v105;
                sub_1004C8A20(v104, v105);
                swift_release(v97);
                sub_1004C8A20(v88, v89);
                (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v113, v115);
                (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v122, v120);
LABEL_29:
                v43 = v127;
                (*(void (**)(char *, uint64_t))(v23 + 8))(v127, v22);
                goto LABEL_30;
              }
              swift_bridgeObjectRelease(v82);
            }
            swift_bridgeObjectRelease(v98);

            v90 = v104;
            v91 = v105;
            sub_1004C8A20(v104, v105);
            sub_1004C8A20(v90, v91);
            (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v113, v115);
            (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v83, v120);
            goto LABEL_29;
          }
          v57 = v104;
          v58 = v105;
          sub_1004C8A14(v104, v105);
          sub_1004C8A14(v57, v58);
          sub_10004FF60(v56, (uint64_t *)&unk_1011D0BB0);

          sub_1004C8A20(v57, v58);
          sub_1004C8A20(v57, v58);
          v43 = v127;
          (*(void (**)(char *, uint64_t))(v23 + 8))(v127, v22);
          v42 = v124;
        }
        else
        {
          v43 = v127;
          (*(void (**)(char *, uint64_t))(v23 + 8))(v127, v22);

        }
LABEL_20:
        v39 += v125;
        if (!--v34)
        {
          v33 = v109;
          v44(v27, 1, 1, v22);
          goto LABEL_33;
        }
      }
      sub_10004FF60((uint64_t)v128, (uint64_t *)&unk_1011B6910);
LABEL_19:
      v43 = v127;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v127, v22);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v27, 1, 1, v22);
LABEL_33:
    v92 = v33;
LABEL_34:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v92).n128_u64[0];
  }
  return result;
}

void *sub_1009591B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = (void *)Strong;
  v7 = sub_100957FEC(a3);

  return v7;
}

void sub_10095921C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  Class isa;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t, __n128);
  char *v93;
  uint64_t v94;
  _BOOL4 v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  void (*v104)(char *, uint64_t);
  char *v105;
  __n128 v106;
  __n128 v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _BYTE v132[24];
  char *v133;
  char v134;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Entry(0);
  v119 = *(_QWORD *)(v6 - 8);
  v120 = v6;
  __chkstk_darwin(v6);
  v118 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v117 = (char *)&v108 - v9;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v10);
  v123 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v128 = (char *)&v108 - v13;
  v125 = type metadata accessor for IndexPath(0);
  v129 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v124 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v127 = (char *)&v108 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v108 - v18;
  v20 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v20);
  v22 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v108 - v24;
  v26 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v126 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v122 = (char *)&v108 - v30;
  __chkstk_darwin(v31);
  v121 = (char *)&v108 - v32;
  __chkstk_darwin(v33);
  v130 = (char *)&v108 - v34;
  __chkstk_darwin(v35);
  v37 = (char *)&v108 - v36;
  sub_10004A160(a1, (uint64_t)v25, (uint64_t *)&unk_1011D0BB0);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v38(v25, 1, v26) == 1)
  {
    sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011D0BB0);
    return;
  }
  v39 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v39(v37, v25, v26);
  sub_10004A160(a2, (uint64_t)v22, (uint64_t *)&unk_1011D0BB0);
  if (v38(v22, 1, v26) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v26);
    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011D0BB0);
    return;
  }
  v116 = v37;
  v40 = v130;
  v39(v130, v22, v26);
  v41 = sub_10093A524(2u);
  if ((v42 & 1) != 0)
  {
    v51 = *(void (**)(char *, uint64_t))(v27 + 8);
    v51(v40, v26);
LABEL_10:
    v52 = v116;
LABEL_18:
    v51(v52, v26);
    return;
  }
  v43 = v41;
  v44 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v45 = v116;
  dispatch thunk of Collection.startIndex.getter(v26);
  dispatch thunk of Collection.endIndex.getter(&v133, v26, v44);
  dispatch thunk of Collection.distance(from:to:)(v132, &v133, v26, v44);
  v47 = v46;
  dispatch thunk of Collection.startIndex.getter(v26);
  dispatch thunk of Collection.endIndex.getter(&v133, v26, v44);
  dispatch thunk of Collection.distance(from:to:)(v132, &v133, v26, v44);
  if (v47 != v48)
  {
LABEL_17:
    v51 = *(void (**)(char *, uint64_t))(v27 + 8);
    v51(v40, v26);
    v52 = v45;
    goto LABEL_18;
  }
  v115 = v43;
  v49 = sub_10095AB38();
  v50 = v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v132, 0, 0);
  sub_10004A160(v50, (uint64_t)&v133, (uint64_t *)&unk_1011B6910);
  if ((v134 & 1) != 0)
    goto LABEL_8;
  v53 = (void *)swift_unknownObjectWeakLoadStrong(&v133);
  sub_10004FF60((uint64_t)&v133, (uint64_t *)&unk_1011B6910);
  if (!v53)
    goto LABEL_17;
  v54 = sub_1007142B4();

  v55 = objc_msgSend(v54, "numberOfItemsInSection:", v115);
  if ((id)v49 != v55)
    goto LABEL_17;
  sub_10004A160(v50, (uint64_t)&v133, (uint64_t *)&unk_1011B6910);
  if ((v134 & 1) != 0)
  {
LABEL_8:
    sub_10004FF60((uint64_t)&v133, (uint64_t *)&unk_1011B6910);
    goto LABEL_17;
  }
  v56 = (void *)swift_unknownObjectWeakLoadStrong(&v133);
  sub_10004FF60((uint64_t)&v133, (uint64_t *)&unk_1011B6910);
  if (!v56)
    goto LABEL_17;
  v110 = v50;
  v111 = v44;
  v57 = sub_1007142B4();

  v58 = objc_msgSend(v57, "indexPathsForVisibleItems");
  v59 = v125;
  v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, v125);

  v133 = (char *)_swiftEmptyArrayStorage;
  v113 = *(char **)(v60 + 16);
  if (v113)
  {
    v61 = 0;
    v62 = (uint64_t)v128;
    v63 = v129;
    v112 = v60;
    while (1)
    {
      if (v61 >= *(_QWORD *)(v60 + 16))
      {
        __break(1u);
        return;
      }
      v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      v65 = *(_QWORD *)(v63 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v63 + 16))(v62, v60 + v64 + v65 * v61, v59);
      v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
      v114(v62, 0, 1, v59);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v62, 1, v59) == 1)
        break;
      v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 32);
      v67 = v66(v19, v62, v59);
      v68 = IndexPath.section.getter(v67);
      if (v68 == v115)
      {
        v66(v127, (uint64_t)v19, v59);
        v69 = v133;
        if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0)
        {
          sub_10035CA64(0, *((_QWORD *)v69 + 2) + 1, 1);
          v69 = v133;
        }
        v71 = *((_QWORD *)v69 + 2);
        v70 = *((_QWORD *)v69 + 3);
        v72 = v71 + 1;
        if (v71 >= v70 >> 1)
        {
          v109 = v71 + 1;
          sub_10035CA64(v70 > 1, v71 + 1, 1);
          v72 = v109;
          v69 = v133;
        }
        *((_QWORD *)v69 + 2) = v72;
        v66(&v69[v64 + v71 * v65], (uint64_t)v127, v59);
        v133 = v69;
        v63 = v129;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v59);
      }
      ++v61;
      v62 = (uint64_t)v128;
      v60 = v112;
      if (v113 == (char *)v61)
        goto LABEL_30;
    }
  }
  else
  {
    v63 = v129;
    v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56);
    v62 = (uint64_t)v128;
LABEL_30:
    v114(v62, 1, 1, v59);
  }
  swift_bridgeObjectRelease();
  sub_10004FF60(v62, (uint64_t *)&unk_1011A3D50);
  v73 = (char *)*((_QWORD *)v133 + 2);
  v74 = v123;
  v75 = v124;
  v76 = v111;
  if (!v73)
    goto LABEL_49;
  v77 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v113 = v133;
  v78 = &v133[v77];
  v115 = *(_QWORD *)(v63 + 72);
  v127 = *(char **)(v63 + 16);
  while (1)
  {
    v79 = v125;
    ((void (*)(char *, char *, uint64_t))v127)(v74, v78, v125);
    v114((uint64_t)v74, 0, 1, v79);
    v80 = v129;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v74, 1, v79) == 1)
    {
      v106 = swift_release();
      v96 = *(void (**)(char *, uint64_t))(v27 + 8);
      goto LABEL_46;
    }
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v75, v74, v79);
    sub_10004A160(v110, (uint64_t)&v133, (uint64_t *)&unk_1011B6910);
    if ((v134 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v133, (uint64_t *)&unk_1011B6910);
LABEL_48:
      (*(void (**)(char *, uint64_t))(v129 + 8))(v75, v125);
LABEL_49:
      swift_release();
      v51 = *(void (**)(char *, uint64_t))(v27 + 8);
      v51(v130, v26);
      goto LABEL_10;
    }
    v81 = (void *)swift_unknownObjectWeakLoadStrong(&v133);
    sub_10004FF60((uint64_t)&v133, (uint64_t *)&unk_1011B6910);
    if (!v81)
      goto LABEL_48;
    v82 = sub_1007142B4();

    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v84 = objc_msgSend(v82, "cellForItemAtIndexPath:", isa);

    if (!v84)
      goto LABEL_48;
    v85 = _s13TracklistCellCMa();
    v86 = swift_dynamicCastClass(v84, v85);

    if (!v86)
      goto LABEL_48;
    v128 = v73;
    v88 = IndexPath.item.getter(v87);
    dispatch thunk of Collection.startIndex.getter(v26);
    dispatch thunk of Collection.endIndex.getter(&v131, v26, v76);
    v89 = dispatch thunk of Collection.distance(from:to:)(&v133, &v131, v26, v76);
    v91 = v90;
    v92 = *(void (**)(char *, char *, uint64_t, __n128))(v27 + 16);
    v93 = v121;
    v92(v121, v130, v26, v89);
    if (v88 >= v91)
    {
      v95 = 1;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v26);
      dispatch thunk of Collection.endIndex.getter(&v131, v26, v76);
      dispatch thunk of Collection.distance(from:to:)(&v133, &v131, v26, v76);
      v95 = v88 >= v94;
    }
    v96 = *(void (**)(char *, uint64_t))(v27 + 8);
    v96(v93, v26);
    v97 = v122;
    ((void (*)(char *, char *, uint64_t))v92)(v122, v116, v26);
    v98 = v126;
    ((void (*)(char *, char *, uint64_t))v92)(v126, v130, v26);
    if (v95)
      break;
    v99 = v117;
    MusicItemCollection.subscript.getter(v88, v26);
    v100 = v118;
    MusicItemCollection.subscript.getter(v88, v26);
    v101 = sub_100048748((unint64_t *)&unk_1011D0D10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
    v102 = v120;
    v103 = static MusicItem<>.==~ infix(_:_:)(v99, v100, v120, &protocol witness table for Playlist.Entry, v101);
    v104 = *(void (**)(char *, uint64_t))(v119 + 8);
    v104(v100, v102);
    v105 = v99;
    v75 = v124;
    v104(v105, v102);
    v96(v126, v26);
    v96(v97, v26);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v75, v125);
    if ((v103 & 1) == 0)
      goto LABEL_51;
    v78 += v115;
    v73 = v128 - 1;
    v74 = v123;
    v76 = v111;
    if (v128 == (char *)1)
    {
      v114((uint64_t)v123, 1, 1, v125);
      v106 = swift_release();
LABEL_46:
      ((void (*)(char *, uint64_t, __n128))v96)(v130, v26, v106);
      v96(v116, v26);
      return;
    }
  }
  v96(v98, v26);
  v96(v97, v26);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v75, v125);
LABEL_51:
  v107 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v96)(v130, v26, v107);
  v96(v116, v26);
}

uint64_t sub_100959DA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  int v24;
  int v25;
  void *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char v42[24];

  v40 = a1;
  v41 = a2;
  v38 = _s7ContextVMa_1(0);
  __chkstk_darwin(v38);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = _s7ContextV6SourceOMa(0);
  v5 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v42, 0, 0);
  sub_10004A160(v15, (uint64_t)v10, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011A30F0);
  }
  else
  {
    v35 = v5;
    v36 = v4;
    v37 = v2;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v16 = &v7[*(int *)(sub_100007E8C(&qword_1011A22A0) + 48)];
    v17 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v40, v17);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
    v18 = v39;
    swift_storeEnumTagMultiPayload(v7, v39, 0);
    if ((Playlist.hasJoinedCollaboration.getter() & 1) != 0)
    {
      v19 = sub_10094A5AC();
      v20 = v19;
      v21 = *(unsigned __int8 *)(v19 + 24);
      if (v21 == 255)
      {
        swift_release(v19);
      }
      else
      {
        v22 = *(_QWORD *)(v19 + 16);
        swift_bridgeObjectRetain();
        v23 = sub_1001DE010((uint64_t)v7, v22, v21 & 1);
        LODWORD(v40) = v24;
        v25 = ~(_BYTE)v24;
        sub_10013BC80(v22, v21);
        swift_release(v20);
        if (v25)
        {
          v26 = v23;
          v27 = (uint64_t)v36;
          sub_10005B704((uint64_t)v7, (uint64_t)v36, _s7ContextV6SourceOMa);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v27, 0, 1, v18);
          v28 = (int *)v38;
          v29 = v27 + *(int *)(v38 + 20);
          *(_QWORD *)v29 = v26;
          *(_BYTE *)(v29 + 8) = v40;
          *(_QWORD *)(v27 + v28[6]) = 0;
          *(_BYTE *)(v27 + v28[7]) = 0;
          *(_BYTE *)(v27 + v28[8]) = 1;
          v30 = sub_10094A5AC();
          sub_10005B748((uint64_t)v7, _s7ContextV6SourceOMa);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          v31 = v41;
          *v41 = v30;
          v32 = type metadata accessor for Tracklist.ReactionsConfiguration(0);
          sub_10005B6C0(v27, (uint64_t)v31 + *(int *)(v32 + 20), _s7ContextVMa_1);
          return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
        }
      }
    }
    sub_10005B748((uint64_t)v7, _s7ContextV6SourceOMa);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v34 = type metadata accessor for Tracklist.ReactionsConfiguration(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v41, 1, 1, v34);
}

void sub_10095A140(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char *v32;
  unint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t *v55;
  BOOL v56;
  uint64_t KeyPath;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[3];
  char v93[24];
  char v94[24];
  uint64_t v95;
  char v96[32];

  v2 = v1;
  v88 = a1;
  v3 = type metadata accessor for Track(0);
  v89 = *(_QWORD *)(v3 - 8);
  v90 = v3;
  __chkstk_darwin(v3);
  v78 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D0CF0);
  v86 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v76 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D0CF8);
  __chkstk_darwin(v7);
  v87 = (unint64_t *)((char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char **)((char *)&v76 - v10);
  v12 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v12);
  v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v76 - v16;
  v18 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v81 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v76 - v22;
  v24 = (unint64_t *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks, v96, 0, 0);
  if (*(_QWORD *)(*v24 + 16))
  {
    v84 = v14;
    v85 = v18;
    v25 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v94, 0, 0);
    v26 = v85;
    sub_10004A160(v25, (uint64_t)v17, (uint64_t *)&unk_1011D0BB0);
    v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v82(v17, 1, v26) == 1)
    {
      v27 = type metadata accessor for Playlist.Entry(0);
      MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v27, &protocol witness table for Playlist.Entry);
      sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011D0BB0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v17, v26);
    }
    v28 = sub_10097125C((uint64_t)v88, (uint64_t)v23);
    v80 = v19;
    v79 = *(void (**)(char *, uint64_t))(v19 + 8);
    v79(v23, v26);
    v95 = v28;
    v29 = *(_QWORD *)(*v24 + 16);
    v77 = *v24;
    swift_bridgeObjectRetain();
    v30 = 0;
    v88 = _swiftEmptyArrayStorage;
    v31 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v82;
    v32 = v78;
    v33 = v87;
    while (1)
    {
      if (v30 == v29)
      {
        v34 = 1;
        v30 = v29;
      }
      else
      {
        if (v30 >= *(_QWORD *)(v77 + 16))
          goto LABEL_45;
        v83 = v30 + 1;
        v35 = v11;
        v36 = v29;
        v38 = v89;
        v37 = v90;
        v39 = &v76[*(int *)(v5 + 48)];
        (*(void (**)(char *, unint64_t, uint64_t))(v89 + 16))(v39, v77+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v30, v90);
        v40 = (char *)v33 + *(int *)(v5 + 48);
        *v33 = v30;
        v41 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v29 = v36;
        v11 = v35;
        v42 = v37;
        v31 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v82;
        v41(v40, v39, v42);
        v34 = 0;
        v30 = v83;
        v32 = v78;
      }
      v43 = v86;
      (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v33, v34, 1, v5);
      sub_100065228((uint64_t)v33, (uint64_t)v11, &qword_1011D0CF8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v5) == 1)
        break;
      v44 = *v11;
      v45.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v89 + 32))(v32, (char *)v11 + *(int *)(v5 + 48), v90);
      v46 = Track.catalogID.getter(v45);
      if (v47 && (sub_1001A3AA8(v46, v47), v49 = v48, swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), v49))
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v88);
        v33 = v87;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v88 = sub_1004333A4(0, v88[2] + 1, 1, v88);
        v52 = v88[2];
        v51 = v88[3];
        if (v52 >= v51 >> 1)
          v88 = sub_1004333A4((_QWORD *)(v51 > 1), v52 + 1, 1, v88);
        v53 = v88;
        v88[2] = v52 + 1;
        v53[v52 + 4] = v44;
        v32 = v78;
      }
      else
      {
        v33 = v87;
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v32, v90);
      v31 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v82;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v88[2];
    if (!v54)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      return;
    }
    v86 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource;
    v83 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v93, 0, 0);
    v87 = v88 + 3;
    v55 = (uint64_t *)&unk_1011D0BB0;
    while (v54 <= v88[2])
    {
      v59 = v87[v54];
      swift_beginAccess(v24, v92, 33, 0);
      v60 = *v24;
      v61 = swift_isUniquelyReferenced_nonNull_native(*v24);
      *v24 = v60;
      if ((v61 & 1) == 0)
      {
        v60 = sub_10072E1BC(v60);
        *v24 = v60;
      }
      v62 = *(_QWORD *)(v60 + 16);
      if (v59 >= v62)
        goto LABEL_44;
      v63 = v55;
      v64 = v2;
      v65 = v62 - 1;
      v66 = *(_QWORD *)(v89 + 72);
      v67 = v60
          + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))
          + v66 * v59;
      (*(void (**)(unint64_t, uint64_t))(v89 + 8))(v67, v90);
      if ((uint64_t)(v65 - v59) < 0)
        goto LABEL_46;
      if (v66 > 0 || v67 >= v67 + v66 + v66 * (v65 - v59))
      {
        swift_arrayInitWithTakeFrontToBack(v67);
      }
      else if (v66)
      {
        swift_arrayInitWithTakeBackToFront(v67);
      }
      *(_QWORD *)(v60 + 16) = v65;
      *v24 = v60;
      swift_endAccess(v92);
      v2 = v64;
      sub_10095B3DC();
      v68 = *(_QWORD *)(v64 + v86);
      v55 = v63;
      if (v68)
      {
        v69 = (uint64_t)v84;
        sub_10004A160(v83, (uint64_t)v84, v63);
        v70 = v85;
        if (v31(v69, 1, v85))
        {
          swift_retain();
          sub_10004FF60(v69, v63);
          v56 = 0;
        }
        else
        {
          v71 = v81;
          (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v81, v69, v70);
          swift_retain();
          sub_10004FF60(v69, v63);
          v72 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
          v73 = v70;
          dispatch thunk of Collection.startIndex.getter(v70);
          dispatch thunk of Collection.endIndex.getter(&v91, v70, v72);
          v75 = v91;
          v74 = v92[0];
          v79(v71, v73);
          v56 = v74 == v75 && *(_QWORD *)(*v24 + 16) == 0;
          v31 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v82;
          v55 = v63;
        }
        KeyPath = swift_getKeyPath(&unk_100ED7C70);
        v58 = swift_getKeyPath(&unk_100ED7C98);
        LOBYTE(v92[0]) = v56;
        static Published.subscript.setter(v92, v68, KeyPath, v58);
      }
      if (!--v54)
        goto LABEL_41;
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
  }
}

uint64_t sub_10095A964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _BYTE v19[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011D0BB0);
    v10 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v2);
    dispatch thunk of Collection.endIndex.getter(&v17, v2, v10);
    v12 = v17;
    v11 = v18[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v11 != v12)
    {
LABEL_5:
      LOBYTE(v14) = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) ^ 1;
      return v14 & 1;
    }
  }
  v13 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks, v18, 0, 0);
  v14 = *(_QWORD *)(*(_QWORD *)v13 + 16);
  if (v14)
    goto LABEL_5;
  return v14 & 1;
}

uint64_t sub_10095AB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[24];

  v1 = v0;
  v2 = type metadata accessor for MusicPropertySource(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v37 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v37 - v19;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) != 1)
  {
    v37 = v10;
    v23 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
    v24 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v42, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v8, v23, v2, v24);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for MusicPropertySource.catalog(_:), v2);
    LOBYTE(v23) = static MusicPropertySource.== infix(_:_:)(v8, v6);
    v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v6, v2);
    v25(v8, v2);
    if ((v23 & 1) != 0)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogTrackCount + 8) != 1)
        return *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogTrackCount);
      v26 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
      swift_beginAccess(v26, v41, 0, 0);
      v27 = v26;
      v28 = v18;
      sub_10004A160(v27, (uint64_t)v18, (uint64_t *)&unk_1011D0BB0);
      v10 = v37;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v18, 1, v9))
      {
        v22 = (uint64_t)v18;
        goto LABEL_10;
      }
      v31 = v38;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v38, v28, v9);
      v35 = (uint64_t)v28;
    }
    else
    {
      v29 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
      swift_beginAccess(v29, v41, 0, 0);
      sub_10004A160(v29, (uint64_t)v15, (uint64_t *)&unk_1011D0BB0);
      v10 = v37;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v9))
      {
        v22 = (uint64_t)v15;
        goto LABEL_10;
      }
      v31 = v38;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v38, v15, v9);
      v35 = (uint64_t)v15;
    }
    sub_10004FF60(v35, (uint64_t *)&unk_1011D0BB0);
    v32 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v9);
    dispatch thunk of Collection.endIndex.getter(&v39, v9, v32);
    v33 = &v40;
    v34 = &v39;
LABEL_16:
    v30 = dispatch thunk of Collection.distance(from:to:)(v33, v34, v9, v32);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
    return v30;
  }
  v21 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
  swift_beginAccess(v21, v42, 0, 0);
  sub_10004A160(v21, (uint64_t)v20, (uint64_t *)&unk_1011D0BB0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v9))
  {
    v31 = v38;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v38, v20, v9);
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011D0BB0);
    v32 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v9);
    dispatch thunk of Collection.endIndex.getter(&v40, v9, v32);
    v33 = (uint64_t *)v41;
    v34 = &v40;
    goto LABEL_16;
  }
  v22 = (uint64_t)v20;
LABEL_10:
  sub_10004FF60(v22, (uint64_t *)&unk_1011D0BB0);
  return 0;
}

void sub_10095AF90()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t i;
  uint64_t v14;
  void **aBlock;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  uint64_t (*v19)();
  uint64_t v20;
  char v21[24];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0;
    if (*(_BYTE *)(v1 + 32) == 6)
    {
      v4 = 0;
    }
    else
    {
      if (v2 == 1)
        return;
      if (*(_BYTE *)(v1 + 33) == 6)
      {
        v4 = 1;
      }
      else
      {
        if (v2 == 2)
          return;
        for (i = 34; ; ++i)
        {
          v4 = i - 32;
          if (*(_BYTE *)(v1 + i) == 6)
            break;
          v14 = i - 31;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            return;
          }
          if (v14 == v2)
            return;
        }
      }
    }
    v5 = (uint64_t)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v21, 0, 0);
    sub_10004A160(v5, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if ((v16 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v6 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (v6)
      {
        v7 = sub_1007142B4();

        v8 = swift_allocObject(&unk_1010E3990, 32, 7);
        *(_QWORD *)(v8 + 16) = v3;
        *(_QWORD *)(v8 + 24) = v4;
        v9 = swift_allocObject(&unk_1010E39B8, 32, 7);
        *(_QWORD *)(v9 + 16) = sub_100970BBC;
        *(_QWORD *)(v9 + 24) = v8;
        v19 = sub_1001095DC;
        v20 = v9;
        aBlock = _NSConcreteStackBlock;
        v16 = 1107296256;
        v17 = sub_10046D7B4;
        v18 = &unk_1010E39D0;
        v10 = _Block_copy(&aBlock);
        v11 = v20;
        v12 = v3;
        objc_msgSend(v7, "performBatchUpdates:completion:", v10, 0, swift_release(v11).n128_f64[0]);
        _Block_release(v10);

        swift_release(v8);
      }
    }
  }
}

void sub_10095B178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *Strong;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSArray v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[8];
  char v18;

  if ((sub_10095A964() & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingDetailSection) & 1) != 0)
      return;
    *(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingDetailSection) = 1;
    v4 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v4, v16, 0, 0);
    sub_10004A160(v4, (uint64_t)v17, (uint64_t *)&unk_1011B6910);
    if ((v18 & 1) == 0)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v17);
      sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011B6910);
      if (!Strong)
        return;
      v6 = sub_1007142B4();

      v7 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
      v8 = type metadata accessor for IndexPath(0);
      v9 = swift_allocObject(v7, ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) | 7);
      *(_OWORD *)(v9 + 16) = xmmword_100EA7AA0;
      IndexPath.init(item:section:)(0, a2);
      v10.super.isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "insertItemsAtIndexPaths:", v10.super.isa, swift_bridgeObjectRelease(v9).n128_f64[0]);
      goto LABEL_11;
    }
LABEL_8:
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011B6910);
    return;
  }
  if (!*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingDetailSection))
    return;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingDetailSection) = 0;
  v11 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v11, v16, 0, 0);
  sub_10004A160(v11, (uint64_t)v17, (uint64_t *)&unk_1011B6910);
  if ((v18 & 1) != 0)
    goto LABEL_8;
  v12 = (void *)swift_unknownObjectWeakLoadStrong(v17);
  sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011B6910);
  if (!v12)
    return;
  v6 = sub_1007142B4();

  v13 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
  v14 = type metadata accessor for IndexPath(0);
  v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7AA0;
  IndexPath.init(item:section:)(0, a2);
  v10.super.isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "deleteItemsAtIndexPaths:", v10.super.isa, swift_bridgeObjectRelease(v15).n128_f64[0]);
LABEL_11:

}

void sub_10095B3DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _BYTE *v13;
  char *Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21[2];
  uint64_t v22;
  char v23;
  _BYTE v24[24];

  v1 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v1);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_tracklistFooterViewModel);
  swift_retain(v4);
  v5 = sub_10095AB38();
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks, v24, 0, 0);
  v7 = *(_QWORD *)(*v6 + 16);
  v8 = v5 + v7;
  if (__OFADD__(v5, v7))
  {
    __break(1u);
    return;
  }
  KeyPath = swift_getKeyPath(&unk_100ED7BE0);
  v10 = swift_getKeyPath(&unk_100ED7C08);
  v22 = v8;
  v23 = 0;
  static Published.subscript.setter(&v22, v4, KeyPath, v10);
  v11 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, &v22, 0, 0);
  sub_10004A160(v11, (uint64_t)v20, (uint64_t *)&unk_1011B6910);
  if ((v20[8] & 1) != 0)
  {
    v12 = (uint64_t *)&unk_1011B6910;
    v13 = v20;
  }
  else
  {
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v20);
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011B6910);
    if (!Strong)
      return;
    v15 = *(_QWORD *)&Strong[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_durationCalculator];
    swift_retain(v15);

    v16 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v20, 0, 0);
    sub_10004A160(v16, (uint64_t)v3, (uint64_t *)&unk_1011D0BB0);
    v19 = *v6;
    v21[0] = (uint64_t)v3;
    v21[1] = (uint64_t)&v19;
    v17 = swift_allocObject(&unk_1010E35A8, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v0);
    swift_bridgeObjectRetain();
    swift_retain(v17);
    sub_100929E30(v21, (uint64_t)sub_100970978, v17);
    v18 = swift_release(v15);
    swift_release_n(v17, 2, v18);
    swift_bridgeObjectRelease(v19);
    v13 = v3;
    v12 = (uint64_t *)&unk_1011D0BB0;
  }
  sub_10004FF60((uint64_t)v13, v12);
}

uint64_t sub_10095B610(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_tracklistFooterViewModel);
    swift_retain(v6);

    KeyPath = swift_getKeyPath(&unk_100ED7C28);
    v8 = swift_getKeyPath(&unk_100ED7C50);
    v9 = a2;
    return static Published.subscript.setter(&v9, v6, KeyPath, v8);
  }
  return result;
}

uint64_t sub_10095B6B0()
{
  void (*v0)(char *, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  void (*v86)(uint64_t, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[3];
  uint64_t v108;
  char v109[32];

  v1 = type metadata accessor for Playlist.Variant(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v93);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v87 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v87 - v14;
  v16 = type metadata accessor for Playlist.EditableComponents(0);
  v98 = *(_QWORD *)(v16 - 8);
  v99 = v16;
  __chkstk_darwin(v16);
  v95 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Playlist(0);
  v101 = *(void (**)(char *, uint64_t))(v18 - 8);
  v102 = v18;
  v19 = __chkstk_darwin(v18);
  v92 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v96 = (char *)&v87 - v21;
  v22 = sub_100007E8C(&qword_1011A30F0);
  v23 = __chkstk_darwin(v22);
  v94 = (uint64_t)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v100 = (char *)&v87 - v25;
  v26 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v26);
  v97 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v28);
  v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v105 = *(_QWORD *)(v31 - 8);
  v106 = v31;
  __chkstk_darwin(v31);
  v103 = (char *)&v87 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = v0;
  v33 = (char *)v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentedLoadingState;
  v34 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentedLoadingState);
  if ((v34 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL)
  {
LABEL_13:
    v90 = v2;
    if ((*((_BYTE *)v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) & 1) != 0)
      return 0x3FFFFFEFALL;
    v44 = (uint64_t)v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess((char *)v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v109, 0, 0);
    sub_10004A160(v44, (uint64_t)v30, (uint64_t *)&unk_1011D0BB0);
    v45 = v105;
    v46 = v106;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v30, 1, v106) == 1)
    {
      sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011D0BB0);
      return 0x3FFFFFEFALL;
    }
    v88 = v6;
    v89 = v1;
    v47 = v103;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v103, v30, v46);
    v48 = v45;
    v49 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v46);
    dispatch thunk of Collection.endIndex.getter(&v108, v46, v49);
    if (v107[0] != v108)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v46);
      return 0x3FFFFFEFALL;
    }
    v87 = v13;
    v50 = (uint64_t)v104 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
    swift_beginAccess((char *)v104 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v107, 0, 0);
    v51 = (uint64_t)v100;
    sub_10004A160(v50, (uint64_t)v100, &qword_1011A30F0);
    v52 = v101;
    v53 = v102;
    v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v101 + 6);
    if (v54(v51, 1, v102))
    {
      v55 = &qword_1011A30F0;
LABEL_22:
      sub_10004FF60(v51, v55);
LABEL_23:
      (*(void (**)(char *, uint64_t))(v105 + 8))(v103, v106);
      return 0x3FFFFFEFALL;
    }
    v91 = v15;
    v56 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v52 + 2);
    v57 = v96;
    v56(v96, v51, v53);
    v58 = sub_10004FF60(v51, &qword_1011A30F0);
    v51 = (uint64_t)v97;
    Playlist.editableComponents.getter(v58);
    v59 = (void (*)(char *, uint64_t))*((_QWORD *)v52 + 1);
    v59(v57, v53);
    v60 = v98;
    v61 = v99;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v51, 1, v99) == 1)
    {
      v55 = (uint64_t *)&unk_1011C65F0;
      goto LABEL_22;
    }
    v100 = v4;
    v101 = v59;
    v104 = v56;
    v63 = v51;
    v64 = v95;
    static Playlist.EditableComponents.tracklist.getter();
    v65 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
    v66 = v60;
    v67 = dispatch thunk of SetAlgebra.isSuperset(of:)(v64, v61, v65);
    v68 = *(void (**)(char *, uint64_t))(v66 + 8);
    v68(v64, v61);
    v68((char *)v63, v61);
    if ((v67 & 1) != 0)
      goto LABEL_23;
    v69 = v94;
    sub_10004A160(v50, v94, &qword_1011A30F0);
    v70 = (uint64_t)v10;
    if (v54(v69, 1, v53))
    {
      sub_10004FF60(v69, &qword_1011A30F0);
      v71 = v90;
      v72 = (uint64_t)v91;
      v73 = v89;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v91, 1, 1, v89);
      v74 = (uint64_t)v87;
      v75 = v93;
      v76 = v103;
      v77 = (uint64_t)v88;
    }
    else
    {
      v78 = v92;
      v104(v92, v69, v53);
      v79 = sub_10004FF60(v69, &qword_1011A30F0);
      v72 = (uint64_t)v91;
      Playlist.variant.getter(v79);
      v101(v78, v53);
      v74 = (uint64_t)v87;
      v75 = v93;
      v76 = v103;
      v73 = v89;
      v77 = (uint64_t)v88;
      v71 = v90;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v71 + 104))(v74, enum case for Playlist.Variant.favoriteSongs(_:), v73);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v73);
    v80 = v77 + *(int *)(v75 + 48);
    sub_10004A160(v72, v77, (uint64_t *)&unk_1011CEF20);
    sub_10004A160(v74, v80, (uint64_t *)&unk_1011CEF20);
    v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
    if (v81(v77, 1, v73) == 1)
    {
      sub_10004FF60(v74, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v72, (uint64_t *)&unk_1011CEF20);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v106);
      if (v81(v80, 1, v73) == 1)
      {
        sub_10004FF60(v77, (uint64_t *)&unk_1011CEF20);
        return 0x3FFFFFEFELL;
      }
    }
    else
    {
      v82 = v70;
      sub_10004A160(v77, v70, (uint64_t *)&unk_1011CEF20);
      if (v81(v80, 1, v73) != 1)
      {
        v83 = (uint64_t)v100;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v100, v80, v73);
        v84 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v85 = dispatch thunk of static Equatable.== infix(_:_:)(v82, v83, v73, v84);
        v86 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
        v86(v83, v73);
        sub_10004FF60(v74, (uint64_t *)&unk_1011CEF20);
        sub_10004FF60((uint64_t)v91, (uint64_t *)&unk_1011CEF20);
        (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v106);
        v86(v82, v73);
        sub_10004FF60(v77, (uint64_t *)&unk_1011CEF20);
        if ((v85 & 1) != 0)
          return 0x3FFFFFEFELL;
        return 0x3FFFFFEFCLL;
      }
      sub_10004FF60(v74, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60((uint64_t)v91, (uint64_t *)&unk_1011CEF20);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v106);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v73);
    }
    sub_10004FF60(v77, (uint64_t *)&unk_1011C66C0);
    return 0x3FFFFFEFCLL;
  }
  v91 = v15;
  v35 = v10;
  v36 = v2;
  v37 = v6;
  v38 = v1;
  v40 = *((_QWORD *)v33 + 1);
  v39 = *((_QWORD *)v33 + 2);
  if (v34 >> 62)
  {
    if (v34 >> 62 != 1)
    {
      if (v34 != 0x8000000000000000 || v39 | v40)
        v41 = 0x8000000000000001;
      else
        v41 = 0x8000000000000000;
      v42 = 0;
      v43 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    sub_100055294(v34, v40, v39);
  }
  if ((v34 & 1) != 0)
  {
    v41 = v34;
    v42 = v40;
    v43 = v39;
LABEL_12:
    sub_1004C826C(v41, v42, v43);
    v1 = v38;
    v6 = v37;
    v2 = v36;
    v10 = v35;
    v15 = v91;
    v0 = v104;
    goto LABEL_13;
  }
  return v34;
}

void sub_10095C01C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t i;
  uint64_t v14;
  void **aBlock;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  uint64_t (*v19)();
  uint64_t v20;
  char v21[24];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0;
    if (*(_BYTE *)(v1 + 32) == 4)
    {
      v4 = 0;
    }
    else
    {
      if (v2 == 1)
        return;
      if (*(_BYTE *)(v1 + 33) == 4)
      {
        v4 = 1;
      }
      else
      {
        if (v2 == 2)
          return;
        for (i = 34; ; ++i)
        {
          v4 = i - 32;
          if (*(_BYTE *)(v1 + i) == 4)
            break;
          v14 = i - 31;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            return;
          }
          if (v14 == v2)
            return;
        }
      }
    }
    v5 = (uint64_t)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v21, 0, 0);
    sub_10004A160(v5, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if ((v16 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v6 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (v6)
      {
        v7 = sub_1007142B4();

        v8 = swift_allocObject(&unk_1010E38C8, 32, 7);
        *(_QWORD *)(v8 + 16) = v3;
        *(_QWORD *)(v8 + 24) = v4;
        v9 = swift_allocObject(&unk_1010E38F0, 32, 7);
        *(_QWORD *)(v9 + 16) = sub_100970938;
        *(_QWORD *)(v9 + 24) = v8;
        v19 = sub_1001095DC;
        v20 = v9;
        aBlock = _NSConcreteStackBlock;
        v16 = 1107296256;
        v17 = sub_10046D7B4;
        v18 = &unk_1010E3908;
        v10 = _Block_copy(&aBlock);
        v11 = v20;
        v12 = v3;
        objc_msgSend(v7, "performBatchUpdates:completion:", v10, 0, swift_release(v11).n128_f64[0]);
        _Block_release(v10);

        swift_release(v8);
      }
    }
  }
}

void sub_10095C204(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSArray v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[8];
  char v21;

  v4 = sub_10095B6B0();
  if ((v4 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFALL)
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingNoContentSection) != 1)
      return;
    *(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingNoContentSection) = 0;
    v7 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v7, v19, 0, 0);
    sub_10004A160(v7, (uint64_t)v20, (uint64_t *)&unk_1011B6910);
    if ((v21 & 1) == 0)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v20);
      sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011B6910);
      if (!Strong)
        return;
      v9 = sub_1007142B4();

      v10 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
      v11 = type metadata accessor for IndexPath(0);
      v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
      *(_OWORD *)(v12 + 16) = xmmword_100EA7AA0;
      IndexPath.init(item:section:)(0, a2);
      v13.super.isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "deleteItemsAtIndexPaths:", v13.super.isa, swift_bridgeObjectRelease(v12).n128_f64[0]);
      goto LABEL_11;
    }
LABEL_8:
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011B6910);
    return;
  }
  sub_100970950(v4, v5, v6);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingNoContentSection) & 1) != 0)
    return;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingNoContentSection) = 1;
  v14 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v14, v19, 0, 0);
  sub_10004A160(v14, (uint64_t)v20, (uint64_t *)&unk_1011B6910);
  if ((v21 & 1) != 0)
    goto LABEL_8;
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v20);
  sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011B6910);
  if (!v15)
    return;
  v9 = sub_1007142B4();

  v16 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
  v17 = type metadata accessor for IndexPath(0);
  v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100EA7AA0;
  IndexPath.init(item:section:)(0, a2);
  v13.super.isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "insertItemsAtIndexPaths:", v13.super.isa, swift_bridgeObjectRelease(v18).n128_f64[0]);
LABEL_11:

}

BOOL sub_10095C490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  char v52[24];
  char v53[24];

  v1 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v1);
  v45 = (uint64_t)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist.EditableComponents(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPropertySource(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v44 - v19;
  v21 = v0;
  v22 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v23 = swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v53, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v20, v22, v14, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for MusicPropertySource.library(_:), v14);
  LOBYTE(v22) = static MusicPropertySource.== infix(_:_:)(v20, v18);
  v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v18, v14);
  v24(v20, v14);
  if ((v22 & 1) == 0)
    return 0;
  v25 = v7;
  v27 = v46;
  v26 = v47;
  v28 = v48;
  v29 = v21 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v21 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v52, 0, 0);
  sub_10004A160(v29, (uint64_t)v10, &qword_1011A30F0);
  v31 = v49;
  v30 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v50))
  {
    v32 = &qword_1011A30F0;
    v33 = (uint64_t)v10;
LABEL_6:
    sub_10004FF60(v33, v32);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v25, v10, v30);
  v34 = sub_10004FF60((uint64_t)v10, &qword_1011A30F0);
  Playlist.editableComponents.getter(v34);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v13, 1, v28) == 1)
  {
    v32 = (uint64_t *)&unk_1011C65F0;
    v33 = (uint64_t)v13;
    goto LABEL_6;
  }
  static Playlist.EditableComponents.tracklist.getter();
  v37 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v38 = dispatch thunk of SetAlgebra.isSuperset(of:)(v27, v28, v37);
  v39 = *(void (**)(char *, uint64_t))(v26 + 8);
  v39(v27, v28);
  v39(v13, v28);
  if ((v38 & 1) != 0 && (*(_BYTE *)(v21 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) & 1) == 0)
  {
    v40 = v21 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(v21 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v51, 0, 0);
    v41 = v40;
    v42 = v45;
    sub_10004A160(v41, v45, (uint64_t *)&unk_1011D0BB0);
    v43 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
    v35 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43) != 1;
    sub_10004FF60(v42, (uint64_t *)&unk_1011D0BB0);
    return v35;
  }
  return 0;
}

void sub_10095C894()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t i;
  uint64_t v15;
  void **aBlock;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;
  char v22[24];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0;
    if (*(_BYTE *)(v1 + 32) == 5)
    {
      v4 = 0;
    }
    else
    {
      if (v2 == 1)
        return;
      if (*(_BYTE *)(v1 + 33) == 5)
      {
        v4 = 1;
      }
      else
      {
        if (v2 == 2)
          return;
        for (i = 34; ; ++i)
        {
          v4 = i - 32;
          if (*(_BYTE *)(v1 + i) == 5)
            break;
          v15 = i - 31;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            return;
          }
          if (v15 == v2)
            return;
        }
      }
    }
    v5 = (uint64_t)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v22, 0, 0);
    sub_10004A160(v5, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if ((v17 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v6 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (v6)
      {
        v7 = sub_1007142B4();
        v8 = (_QWORD *)swift_allocObject(&unk_1010E3850, 40, 7);
        v8[2] = v3;
        v8[3] = v6;
        v8[4] = v4;
        v9 = swift_allocObject(&unk_1010E3878, 32, 7);
        *(_QWORD *)(v9 + 16) = sub_10097091C;
        *(_QWORD *)(v9 + 24) = v8;
        v20 = sub_1001095DC;
        v21 = v9;
        aBlock = _NSConcreteStackBlock;
        v17 = 1107296256;
        v18 = sub_10046D7B4;
        v19 = &unk_1010E3890;
        v10 = _Block_copy(&aBlock);
        v11 = v21;
        v12 = v3;
        v13 = v6;
        objc_msgSend(v7, "performBatchUpdates:completion:", v10, 0, swift_release(v11).n128_f64[0]);
        _Block_release(v10);

        swift_release(v8);
      }
    }
  }
}

void sub_10095CA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;

  v5 = sub_10095C490();
  v6 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingAddMusicSection;
  if (!v5)
  {
    if (!*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingAddMusicSection))
      return;
    *(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingAddMusicSection) = 0;
    v7 = sub_1007142B4();
    v11 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
    v12 = type metadata accessor for IndexPath(0);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EA7AA0;
    IndexPath.init(item:section:)(0, a3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "deleteItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);
    goto LABEL_7;
  }
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isShowingAddMusicSection) & 1) == 0)
  {
    sub_10095D730();
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsViewModel))
    {
      *(_BYTE *)(a1 + v6) = 1;
      v7 = sub_1007142B4();
      v8 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
      v9 = type metadata accessor for IndexPath(0);
      v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) | 7);
      *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
      IndexPath.init(item:section:)(0, a3);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v7, "insertItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);
LABEL_7:

    }
  }
}

uint64_t sub_10095CC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v3[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A30F0);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v3[19] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v3[20] = v14;
  v3[21] = v15;
  return swift_task_switch(sub_10095CD68, v14, v15);
}

uint64_t sub_10095CD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 48), v3, &qword_1011A30F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 112);
    swift_release();
    sub_10004FF60(v4, &qword_1011A30F0);
    v5 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    v14 = type metadata accessor for MusicLibrary(0);
    *(_QWORD *)(v0 + 176) = static MusicLibrary.shared.getter(v14);
    *(_QWORD *)(v0 + 16) = v13;
    v15 = type metadata accessor for Track(0);
    swift_bridgeObjectRetain();
    v16 = sub_100007E8C((uint64_t *)&unk_1011B8ED0);
    v17 = sub_100049F28((unint64_t *)&qword_1011B69F0, (uint64_t *)&unk_1011B8ED0, (uint64_t)&protocol conformance descriptor for [A]);
    MusicItemCollection.init<A>(_:)(v0 + 16, v15, v16, &protocol witness table for Track, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v10, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.includeDuplicates(_:), v12);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)[1]);
    *(_QWORD *)(v0 + 184) = v18;
    v19 = sub_100049F28((unint64_t *)&unk_1011B5730, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    *v18 = v0;
    v18[1] = sub_10095CF6C;
    return MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 80), 0, 0, *(_QWORD *)(v0 + 88), v19);
  }
}

uint64_t sub_10095CF6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v3);
  v10 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v7, v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
  {
    v11 = v2[20];
    v12 = v2[21];
    v13 = sub_10095D148;
  }
  else
  {
    v14 = v2[17];
    v15 = v2[15];
    v16 = *(void (**)(uint64_t, uint64_t))(v2[16] + 8);
    v2[25] = v16;
    v16(v14, v15);
    v11 = v2[20];
    v12 = v2[21];
    v13 = sub_10095D038;
  }
  return swift_task_switch(v13, v11, v12);
}

uint64_t sub_10095D038()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011D09BC);
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_10095D080;
  return sub_10093A148();
}

uint64_t sub_10095D080()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  return swift_task_switch(sub_10095D0CC, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168));
}

uint64_t sub_10095D0CC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 152));
  v1(v2, v3);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10095D148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_release();
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124DDD0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 128);
  if (v6)
  {
    v22 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 144);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v23 = v12;
    *(_DWORD *)v11 = 136446210;
    *(_QWORD *)(v0 + 24) = v7;
    swift_errorRetain(v7);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 24, v13);
    *(_QWORD *)(v0 + 32) = sub_100322200(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to add new picker selections to playlist with error=%{public}s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v22);
  }
  else
  {

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  v16 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10095D3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[15];
  uint64_t v45;
  char v46;

  v1 = v0;
  v2 = type metadata accessor for Playlist.EditableComponents(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v37 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicPropertySource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v37 - v18;
  v20 = v1;
  v21 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v22 = swift_beginAccess(v21, &v43, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v19, v21, v13, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for MusicPropertySource.library(_:), v13);
  LOBYTE(v21) = static MusicPropertySource.== infix(_:_:)(v19, v17);
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v13);
  v23(v19, v13);
  if ((v21 & 1) == 0)
    return 0;
  v24 = v38;
  v25 = v39;
  v26 = v20 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v20 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, &v42, 0, 0);
  sub_10004A160(v26, (uint64_t)v9, &qword_1011A30F0);
  v28 = v40;
  v27 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v41))
  {
    v29 = &qword_1011A30F0;
LABEL_6:
    sub_10004FF60((uint64_t)v9, v29);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v6, v9, v27);
  v30 = sub_10004FF60((uint64_t)v9, &qword_1011A30F0);
  v9 = v12;
  Playlist.editableComponents.getter(v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  v31 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v12, 1, v25) == 1)
  {
    v29 = (uint64_t *)&unk_1011C65F0;
    goto LABEL_6;
  }
  v33 = v37;
  static Playlist.EditableComponents.tracklist.getter();
  v34 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v35 = dispatch thunk of SetAlgebra.isSuperset(of:)(v33, v25, v34);
  v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v33, v25);
  v36(v9, v25);
  if ((v35 & 1) != 0)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v44);
    sub_100065184(v44);
    if ((v44[0] & 0x100) != 0)
    {
      static ApplicationCapabilities.shared.getter((uint64_t)&v45);
      sub_100065184(&v45);
      if ((v46 & 1) != 0 && *(_BYTE *)(v20 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) != 1)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_10095D730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v20[-v10 - 8];
  v12 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v20, 0, 0);
  sub_10004A160(v12, (uint64_t)v4, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_10004FF60((uint64_t)v4, &qword_1011A30F0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  v15 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsViewModel;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsViewModel))
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    v16 = type metadata accessor for MusicSuggestedSongsViewModel(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    v17 = MusicSuggestedSongsViewModel.init(playlist:)(v9);
    v18 = *(_QWORD *)(v1 + v15);
    *(_QWORD *)(v1 + v15) = v17;
    v14 = swift_release(v18);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v11, v5, v14);
}

void sub_10095D8D8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t i;
  uint64_t v15;
  void **aBlock;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;
  char v22[24];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0;
    if (*(_BYTE *)(v1 + 32) == 9)
    {
      v4 = 0;
    }
    else
    {
      if (v2 == 1)
        return;
      if (*(_BYTE *)(v1 + 33) == 9)
      {
        v4 = 1;
      }
      else
      {
        if (v2 == 2)
          return;
        for (i = 34; ; ++i)
        {
          v4 = i - 32;
          if (*(_BYTE *)(v1 + i) == 9)
            break;
          v15 = i - 31;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            return;
          }
          if (v15 == v2)
            return;
        }
      }
    }
    v5 = (uint64_t)&v0[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v22, 0, 0);
    sub_10004A160(v5, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    if ((v17 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v6 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
      sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
      if (v6)
      {
        v7 = sub_1007142B4();
        v8 = (_QWORD *)swift_allocObject(&unk_1010E37D8, 40, 7);
        v8[2] = v3;
        v8[3] = v6;
        v8[4] = v4;
        v9 = swift_allocObject(&unk_1010E3800, 32, 7);
        *(_QWORD *)(v9 + 16) = sub_100970900;
        *(_QWORD *)(v9 + 24) = v8;
        v20 = sub_10010942C;
        v21 = v9;
        aBlock = _NSConcreteStackBlock;
        v17 = 1107296256;
        v18 = sub_10046D7B4;
        v19 = &unk_1010E3818;
        v10 = _Block_copy(&aBlock);
        v11 = v21;
        v12 = v3;
        v13 = v6;
        objc_msgSend(v7, "performBatchUpdates:completion:", v10, 0, swift_release(v11).n128_f64[0]);
        _Block_release(v10);

        swift_release(v8);
      }
    }
  }
}

void sub_10095DACC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  double v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Class isa;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char v67[8];
  char v68[24];
  char v69[48];
  _BYTE v70[72];
  char v71[16];
  _BYTE v72[32];
  uint64_t v73;
  char v74;

  v65 = a3;
  *(_QWORD *)&v64 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v56 - v19;
  v21 = sub_10095D3A0();
  v22 = a1;
  v23 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource];
  if ((v21 & 1) != 0)
  {
    v58 = v10;
    v59 = v18;
    v57 = v7;
    v60 = v5;
    v61 = v20;
    v62 = v15;
    v63 = v14;
    if (!v23)
    {
      v24 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource;
      v25 = a1;
      v26 = (uint64_t)&a1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist];
      swift_beginAccess(&v22[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist], v71, 0, 0);
      sub_10004A160(v26, (uint64_t)v13, &qword_1011A30F0);
      v27 = v62;
      v28 = v63;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v13, 1, v63) == 1)
      {
        sub_10004FF60((uint64_t)v13, &qword_1011A30F0);
      }
      else
      {
        v34 = v61;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v61, v13, v28);
        sub_10095D730();
        v35 = (uint64_t)v59;
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v59, v34, v28);
        memset(v72, 0, sizeof(v72));
        v73 = 0;
        v74 = -1;
        PresentationSource.init(viewController:position:)((id)v64, (uint64_t)v72, (uint64_t)v70);
        v36 = sub_100007E8C((uint64_t *)&unk_1011D0CC0);
        inited = swift_initStackObject(v36, v69);
        v64 = xmmword_100EA7AA0;
        *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
        *(_QWORD *)(inited + 32) = v25;
        *(_QWORD *)(inited + 40) = &off_1010E33D8;
        v38 = &v25[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries];
        swift_beginAccess(&v25[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries], v68, 0, 0);
        v39 = (uint64_t)v38;
        v40 = (uint64_t)v58;
        sub_10004A160(v39, (uint64_t)v58, (uint64_t *)&unk_1011D0BB0);
        v41 = v60;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v40, 1, v4))
        {
          v42 = v25;
          sub_10004FF60(v40, (uint64_t *)&unk_1011D0BB0);
          v43 = 1;
        }
        else
        {
          v44 = v57;
          (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v57, v40, v4);
          v45 = v25;
          sub_10004FF60(v40, (uint64_t *)&unk_1011D0BB0);
          v46 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
          dispatch thunk of Collection.startIndex.getter(v4);
          dispatch thunk of Collection.endIndex.getter(&v66, v4, v46);
          v47 = dispatch thunk of Collection.distance(from:to:)(v67, &v66, v4, v46);
          (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v4);
          v43 = v47 == 0;
        }
        v48 = type metadata accessor for SuggestedSongsDataSource(0);
        swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
        v49 = sub_1001C04AC(v35, (uint64_t)v70, inited, 0, v43);
        v50 = *(_QWORD *)&v25[v24];
        *(_QWORD *)&v25[v24] = v49;
        swift_release(v50);
        v51 = sub_1007142B4();
        v52 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
        v53 = type metadata accessor for IndexPath(0);
        v54 = swift_allocObject(v52, ((*(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v53 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80) | 7);
        *(_OWORD *)(v54 + 16) = v64;
        IndexPath.init(item:section:)(0, v65);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v51, "insertItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v54).n128_f64[0]);

        (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
      }
    }
  }
  else if (v23)
  {
    *(_QWORD *)&a1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource] = 0;
    swift_release(v23);
    *(_QWORD *)&v64 = sub_1007142B4();
    v29 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
    v30 = type metadata accessor for IndexPath(0);
    v31 = swift_allocObject(v29, ((*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) | 7);
    *(_OWORD *)(v31 + 16) = xmmword_100EA7AA0;
    IndexPath.init(item:section:)(0, v65);
    v32 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v31).n128_u64[0];
    objc_msgSend((id)v64, "deleteItemsAtIndexPaths:", v32, v33);

  }
}

void sub_10095E0A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  double v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  void *Strong;
  id v43;
  double v44;
  double MinY;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  __n128 v51;
  char v52;
  void (*v53)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  char *v60;
  _BYTE *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  int64_t v73;
  id v74;
  _BYTE v75[24];
  char v76[24];
  char v77[32];
  CGRect v78;
  CGRect v79;

  v2 = v1;
  v64 = type metadata accessor for Song(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v62 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D0CB0);
  __chkstk_darwin(v5);
  v71 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsCell);
  if (v7)
    v8 = a1 == 0;
  else
    v8 = 1;
  if (v8)
    return;
  v68 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource;
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsDataSource);
  if (!v9)
    return;
  v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_pendingImpressionCellTags);
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_pendingImpressionCellTags, v77, 0, 0);
  v11 = *v10;
  v12 = *(_QWORD *)(*v10 + 56);
  v72 = *v10 + 56;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v16 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  v65 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsViewModel;
  v17 = v7;
  v18 = v11;
  v19 = v17;
  v74 = a1;
  swift_bridgeObjectRetain();
  v70 = v16;
  *(_QWORD *)&v20 = swift_beginAccess(v16, v76, 0, 0).n128_u64[0];
  v21 = 0;
  v73 = (unint64_t)(v13 + 63) >> 6;
  v67 = v2;
  v66 = v11;
  v69 = v19;
  while (v15)
  {
    v22 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v23 = v22 | (v21 << 6);
LABEL_26:
    v27 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v23);
    v28 = objc_msgSend(v19, "viewWithTag:", v27, v20);
    if (v28)
    {
      v29 = v28;
      v30 = type metadata accessor for TaggedViewResolver.View(0);
      v31 = (char *)swift_dynamicCastClass(v29, v30);
      if (!v31)
        goto LABEL_9;
      v32 = v31;
      objc_msgSend(v31, "frame");
      objc_msgSend(v32, "convertRect:toCoordinateSpace:", v74);
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      sub_10004A160(v70, (uint64_t)v75, (uint64_t *)&unk_1011B6910);
      if ((v75[8] & 1) != 0)
      {
        sub_10004FF60((uint64_t)v75, (uint64_t *)&unk_1011B6910);
        v41 = 0.0;
      }
      else
      {
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v75);
        sub_10004FF60((uint64_t)v75, (uint64_t *)&unk_1011B6910);
        if (Strong)
        {
          v43 = objc_msgSend(Strong, "view");

          if (!v43)
            goto LABEL_46;
          objc_msgSend(v43, "directionalLayoutMargins");
          v41 = v44;

          v2 = v67;
        }
        else
        {
          v41 = 0.0;
        }
        v19 = v69;
      }
      v78.origin.x = v34;
      v78.origin.y = v36;
      v78.size.width = v38;
      v78.size.height = v40;
      MinY = CGRectGetMinY(v78);
      objc_msgSend(v74, "bounds");
      if (MinY >= CGRectGetMaxY(v79) - v41)
        goto LABEL_9;
      v46 = *(_QWORD *)(v2 + v68);
      if (!v46)
        goto LABEL_39;
      swift_beginAccess(v46 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_pendingImpressionCellTags, v75, 33, 0);
      swift_retain(v46);
      v2 = v67;
      sub_1001A39A0(v27);
      swift_endAccess(v75);
      swift_release(v46);
      v47 = *(_QWORD *)(v2 + v68);
      if (v47)
      {
        v48 = sub_100007E8C(&qword_1011D0CB8);
        v49 = v71;
        v61 = &v71[*(int *)(v48 + 48)];
        v50 = (uint64_t)v62;
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, &v32[OBJC_IVAR____TtCV5Music18TaggedViewResolver4View_song], v64);
        swift_beginAccess(v47 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_impressedSongs, v75, 33, 0);
        swift_retain(v47);
        LOBYTE(v50) = sub_1001954E4((uint64_t)v61, v50);
        swift_endAccess(v75);
        v51 = swift_release(v47);
        v52 = v50 & 1;
        v18 = v66;
        *v49 = v52;
        v53 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v48 - 8) + 56);
        v54 = v48;
        v2 = v67;
        v53(v49, 0, 1, v54, v51);
      }
      else
      {
LABEL_39:
        v55 = sub_100007E8C(&qword_1011D0CB8);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v55 - 8) + 56))(v71, 1, 1, v55, v56);
      }
      sub_10004FF60((uint64_t)v71, &qword_1011D0CB0);
      v57 = *(_QWORD *)(v2 + v65);
      v19 = v69;
      if (v57)
      {
        v58 = &v32[OBJC_IVAR____TtCV5Music18TaggedViewResolver4View_song];
        v59 = swift_retain(*(_QWORD *)(v2 + v65));
        v60 = v58;
        v18 = v66;
        dispatch thunk of MusicSuggestedSongsViewModel.didImpress(_:)(v60, v59);
        swift_release(v57);

      }
      else
      {
LABEL_9:

      }
    }
  }
  v24 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v24 >= v73)
    goto LABEL_42;
  v25 = *(_QWORD *)(v72 + 8 * v24);
  ++v21;
  if (v25)
    goto LABEL_25;
  v21 = v24 + 1;
  if (v24 + 1 >= v73)
    goto LABEL_42;
  v25 = *(_QWORD *)(v72 + 8 * v21);
  if (v25)
    goto LABEL_25;
  v21 = v24 + 2;
  if (v24 + 2 >= v73)
    goto LABEL_42;
  v25 = *(_QWORD *)(v72 + 8 * v21);
  if (v25)
  {
LABEL_25:
    v15 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_26;
  }
  v26 = v24 + 3;
  if (v26 >= v73)
  {
LABEL_42:

    swift_release(v18);
    return;
  }
  v25 = *(_QWORD *)(v72 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v73)
      goto LABEL_42;
    v25 = *(_QWORD *)(v72 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
}

uint64_t sub_10095E6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  v5 = type metadata accessor for IndexPath(0);
  v4[23] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[24] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[25] = v7;
  v4[26] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v4[27] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[28] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v4[29] = v10;
  v4[30] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v4[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A30F0);
  v4[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v4[34] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[35] = v15;
  v4[36] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  v4[37] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v4[38] = v18;
  v4[39] = v19;
  return swift_task_switch(sub_10095E7F8, v18, v19);
}

uint64_t sub_10095E7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 176) + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v4, v0 + 112, 0, 0);
  sub_10004A160(v4, v3, &qword_1011A30F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 264);
    swift_release();
    sub_10004FF60(v5, &qword_1011A30F0);
    v6 = *(_QWORD *)(v0 + 256);
    v7 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 288));
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
    v12 = type metadata accessor for MusicLibrary(0);
    v13 = static MusicLibrary.shared.getter(v12);
    *(_QWORD *)(v0 + 320) = v13;
    v14 = (_QWORD *)swift_task_alloc(dword_1011ACA84);
    *(_QWORD *)(v0 + 328) = v14;
    *v14 = v0;
    v14[1] = sub_10095E958;
    return Playlist.numberOfDuplicateTracks(_:library:)(*(_QWORD *)(v0 + 152), v13);
  }
}

uint64_t sub_10095E958(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  *(_QWORD *)(*v1 + 336) = a1;
  swift_task_dealloc(v3);
  swift_release();
  return swift_task_switch(sub_10095E9B8, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_10095E9B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  if ((uint64_t)v0[42] < 1)
  {
    v35 = (_QWORD *)swift_task_alloc(dword_1011D09EC);
    v0[43] = v35;
    *v35 = v0;
    v35[1] = sub_10095EEC4;
    return sub_10095F3E8(v0[19], v0[20], 0);
  }
  else
  {
    v53 = v0[42];
    v54 = v0[35];
    v55 = v0[34];
    v56 = v0[36];
    v1 = v0[31];
    v2 = v0[32];
    v46 = v2;
    v3 = v0[30];
    v5 = v0[27];
    v4 = v0[28];
    v36 = v0[26];
    v6 = v0[24];
    v41 = v0[25];
    v43 = v0[29];
    v7 = v0[23];
    v51 = (void *)v0[22];
    v8 = v0[20];
    v9 = v0[19];
    v48 = v8;
    v49 = v9;
    swift_release();
    v10 = String.LocalizationValue.init(stringLiteral:)(0x6961674120646441, 0xE90000000000006ELL);
    static Locale.current.getter(v10);
    String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v50(v3, v9, v5);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v47(v36, v8, v7);
    v11 = *(unsigned __int8 *)(v4 + 80);
    v12 = *(unsigned __int8 *)(v6 + 80);
    v13 = (v11 + 24) & ~v11;
    v45 = v13;
    v14 = ((v43 + v12 + v13) & ~v12) + v41;
    v15 = (v43 + v12 + v13) & ~v12;
    v42 = v11 | v12 | 7;
    v44 = v14;
    v16 = swift_allocObject(&unk_1010E36E8, v14, v42);
    *(_QWORD *)(v16 + 16) = v51;
    v17 = v16 + v13;
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v18 = v3;
    v40(v17, v3, v5);
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v39(v16 + v15, v36, v7);
    v37 = v51;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v0[6] = sub_10097050C;
    v0[7] = v16;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100223938;
    v0[5] = &unk_1010E3700;
    v20 = _Block_copy(v0 + 2);
    swift_release();
    v38 = (id)objc_opt_self(UIAlertAction);
    v52 = objc_msgSend(v38, "actionWithTitle:style:handler:", v19, 0, v20);
    _Block_release(v20);

    v21 = String.LocalizationValue.init(stringLiteral:)(1885956947, 0xE400000000000000);
    static Locale.current.getter(v21);
    String.init(localized:table:bundle:locale:comment:)(v46, 0, 0, 0, v1, 0, 0, 256);
    v50(v3, v49, v5);
    v47(v36, v48, v7);
    v22 = swift_allocObject(&unk_1010E3738, v44, v42);
    *(_QWORD *)(v22 + 16) = v37;
    v40(v22 + v45, v18, v5);
    v39(v22 + v15, v36, v7);
    v23 = v37;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v0[8] = _NSConcreteStackBlock;
    v0[12] = sub_1009705FC;
    v0[13] = v22;
    v0[9] = 1107296256;
    v0[10] = sub_100223938;
    v0[11] = &unk_1010E3750;
    v25 = _Block_copy(v0 + 8);
    v26 = objc_msgSend(v38, "actionWithTitle:style:handler:", v24, 0, v25, swift_release().n128_f64[0]);
    _Block_release(v25);

    v27 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v5);
    dispatch thunk of Collection.endIndex.getter(v0 + 18, v5, v27);
    dispatch thunk of Collection.distance(from:to:)(v0 + 17, v0 + 18, v5, v27);
    sub_100322D68(v53, v28, (uint64_t)v52, (uint64_t)v26);

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
    v29 = v0[32];
    v30 = v0[33];
    v32 = v0[30];
    v31 = v0[31];
    v33 = v0[26];
    swift_task_dealloc(v0[36]);
    swift_task_dealloc(v30);
    swift_task_dealloc(v29);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_10095EEC4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 344));
  return swift_task_switch(sub_10095EF10, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_10095EF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  swift_release(*(_QWORD *)(v0 + 296));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10095EFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  return swift_task_switch(sub_10095EFBC, 0, 0);
}

uint64_t sub_10095EFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011D09EC);
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_10095F05C;
    return sub_10095F3E8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), 0);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10095F05C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));

  return swift_task_switch(sub_100976918, 0, 0);
}

uint64_t sub_10095F0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a5;
  v29 = a6;
  v26 = a3;
  v27 = a4;
  v25[1] = a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v25[0] = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v13);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TaskPriority.init(rawValue:)(21);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  v17 = swift_allocObject(&unk_1010E35A8, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v9);
  v18 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v6);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v19 + 40) & ~v19;
  v21 = *(unsigned __int8 *)(v7 + 80);
  v22 = (v11 + v21 + v20) & ~v21;
  v23 = (char *)swift_allocObject(v28, v22 + v8, v19 | v21 | 7);
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  *((_QWORD *)v23 + 4) = v17;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v23[v20], v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 32))(&v23[v22], v25[0], v18);
  sub_1000E8AA0((uint64_t)v15, v29, (uint64_t)v23);
  swift_release();
  return sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A13B0);
}

uint64_t sub_10095F2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  return swift_task_switch(sub_10095F2D4, 0, 0);
}

uint64_t sub_10095F2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011D09EC);
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_10095F374;
    return sub_10095F3E8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), 1);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10095F374()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));

  return swift_task_switch(sub_10095F3CC, 0, 0);
}

uint64_t sub_10095F3CC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 72) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10095F3E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v4 + 248) = a2;
  *(_QWORD *)(v4 + 256) = v3;
  *(_BYTE *)(v4 + 628) = a3;
  *(_QWORD *)(v4 + 240) = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  *(_QWORD *)(v4 + 264) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  *(_QWORD *)(v4 + 272) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 280) = v7;
  *(_QWORD *)(v4 + 288) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Track(0);
  *(_QWORD *)(v4 + 296) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 304) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 312) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 320) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 328) = swift_task_alloc(v10);
  v11 = sub_100007E8C((uint64_t *)&unk_1011ACA90);
  *(_QWORD *)(v4 + 336) = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 344) = swift_task_alloc(v12);
  *(_QWORD *)(v4 + 352) = swift_task_alloc(v12);
  v13 = type metadata accessor for IndexPath(0);
  *(_QWORD *)(v4 + 360) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v4 + 368) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 376) = swift_task_alloc(v15);
  *(_QWORD *)(v4 + 384) = swift_task_alloc(v15);
  v16 = sub_100007E8C(&qword_1011C8D50);
  *(_QWORD *)(v4 + 392) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  *(_QWORD *)(v4 + 400) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A30F0);
  *(_QWORD *)(v4 + 408) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v4 + 416) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v4 + 424) = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 432) = swift_task_alloc(v21);
  *(_QWORD *)(v4 + 440) = swift_task_alloc(v21);
  *(_QWORD *)(v4 + 448) = swift_task_alloc(v21);
  v22 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 456) = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 464) = v24;
  *(_QWORD *)(v4 + 472) = v25;
  return swift_task_switch(sub_10095F610, v24, v25);
}

id sub_10095F610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 256) + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v4, v0 + 80, 0, 0);
  sub_10004A160(v4, v3, &qword_1011A30F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 408);
    swift_release();
    sub_10004FF60(v5, &qword_1011A30F0);
    v6 = *(_QWORD *)(v0 + 440);
    v7 = *(_QWORD *)(v0 + 432);
    v9 = *(_QWORD *)(v0 + 400);
    v8 = *(_QWORD *)(v0 + 408);
    v11 = *(_QWORD *)(v0 + 384);
    v10 = *(_QWORD *)(v0 + 392);
    v12 = *(_QWORD *)(v0 + 376);
    v14 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 352);
    v32 = *(_QWORD *)(v0 + 328);
    v33 = *(_QWORD *)(v0 + 320);
    v34 = *(_QWORD *)(v0 + 312);
    v35 = *(_QWORD *)(v0 + 288);
    v36 = *(_QWORD *)(v0 + 264);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 440);
    v17 = *(_QWORD *)(v0 + 448);
    v18 = *(_QWORD *)(v0 + 416);
    v19 = *(_QWORD *)(v0 + 424);
    v20 = *(_QWORD *)(v0 + 400);
    v21 = *(_QWORD *)(v0 + 392);
    v22 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v17, *(_QWORD *)(v0 + 408), v18);
    type metadata accessor for MusicLibraryPlaylistEditViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v16, v17, v18);
    v23 = v22 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(v22 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v0 + 152, 0, 0);
    sub_10004A160(v23, v20, (uint64_t *)&unk_1011D0BB0);
    v24 = type metadata accessor for SocialProfile(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 1, 1, v24);
    v25 = type metadata accessor for MusicLibrary(0);
    *(_QWORD *)(v0 + 480) = v25;
    v26 = static MusicLibrary.shared.getter(v25);
    v27 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
    v28 = sub_100049F28(&qword_1011C6810, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    *(_QWORD *)(v0 + 488) = MusicLibraryPlaylistEditViewModel.__allocating_init<A>(_:entries:author:library:)(v16, v20, v21, v26, v27, v28);
    result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
    if (result)
    {
      v29 = result;
      v30 = objc_msgSend(result, "cloudAddToPlaylistBehavior");

      dispatch thunk of MusicLibraryPlaylistEditViewModel.addInsertedEntriesToLibrary.setter(v30 == (id)1);
      v37 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.beginEditing()
                              + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.beginEditing());
      v31 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.beginEditing()
                                       + 1));
      *(_QWORD *)(v0 + 496) = v31;
      *v31 = v0;
      v31[1] = sub_10095F928;
      return (id)v37();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10095F928()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 496);
  *(_QWORD *)(*v1 + 504) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100960AB0;
  else
    v4 = sub_10095F988;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 464), *(_QWORD *)(v2 + 472));
}

uint64_t sub_10095F988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD);
  void (*v23)(uint64_t, uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t (*v71)(_QWORD);
  char *v72;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 248);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 368) + 16);
  *(_QWORD *)(v0 + 512) = v10;
  v10(v1, v8, v2);
  *(_QWORD *)(v0 + 224) = &_swiftEmptySetSingleton;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v0 + 520) = v11;
  v11(v4, v9, v6);
  v12 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  *(_QWORD *)(v0 + 528) = v12;
  dispatch thunk of Collection.startIndex.getter(v6);
  *(_QWORD *)(v4 + *(int *)(v5 + 36)) = *(_QWORD *)(v0 + 216);
  sub_100065228(v4, v3, (uint64_t *)&unk_1011ACA90);
  v13 = *(int *)(v5 + 36);
  *(_DWORD *)(v0 + 624) = v13;
  v14 = *(_QWORD *)(v3 + v13);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 232), v6, v12);
  if (v14 == *(_QWORD *)(v0 + 232))
  {
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 352), (uint64_t *)&unk_1011ACA90);
    swift_bridgeObjectRelease();
    v71 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                         + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save());
    v41 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                     + 1));
    *(_QWORD *)(v0 + 600) = v41;
    *v41 = v0;
    v41[1] = sub_100960904;
    return v71(*(_QWORD *)(v0 + 432));
  }
  v63 = v0 + 104;
  v64 = v0 + 48;
  while (1)
  {
    v65 = *(_QWORD *)(v0 + 528);
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    v15 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 328);
    v68 = *(_QWORD *)(v0 + 320);
    v69 = *(_QWORD *)(v0 + 384);
    v17 = *(_QWORD *)(v0 + 296);
    v18 = *(_QWORD *)(v0 + 304);
    v19 = *(_QWORD *)(v0 + 288);
    v67 = *(_QWORD *)(v0 + 280);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = v15 + *(int *)(v0 + 624);
    v70 = *(unsigned __int8 *)(v0 + 628);
    v22 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v64, v21, v20, v65);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    *(_QWORD *)(v0 + 536) = v23;
    v62 = v23;
    ((void (*)(uint64_t))v23)(v16);
    v22(v64, 0);
    v66(v19, v15, v20);
    dispatch thunk of Collection.formIndex(after:)(v21, v20, v65);
    v24 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    *(_QWORD *)(v0 + 544) = v24;
    v24(v19, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v68, v16, v17);
    swift_beginAccess(v69, v63, 32, 0);
    *(_QWORD *)(v0 + 552) = IndexPath.item.getter(v25);
    v26 = swift_endAccess(v63);
    if (v70 != 1)
      break;
    v27 = *(_QWORD *)(v0 + 224);
    v28 = swift_bridgeObjectRetain();
    v29 = Track.id.getter(v28);
    v31 = sub_10075CDDC(v29, v30, v27);
    swift_bridgeObjectRelease();
    v32 = swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(v0 + 320);
    v34 = *(_QWORD *)(v0 + 296);
    v35 = *(_QWORD *)(v0 + 304);
    if ((v31 & 1) == 0)
    {
      v50 = sub_100007E8C(&qword_10119F2C8);
      v51 = *(_QWORD *)(v35 + 72);
      v52 = *(unsigned __int8 *)(v35 + 80);
      v53 = (v52 + 32) & ~v52;
      v54 = swift_allocObject(v50, v53 + v51, v52 | 7);
      *(_OWORD *)(v54 + 16) = xmmword_100EA7AA0;
      v62(v54 + v53, v33, v34);
      v55 = MusicItemCollection.init(arrayLiteral:)(v54, v34, &protocol witness table for Track);
      v56 = static MusicLibrary.shared.getter(v55);
      *(_QWORD *)(v0 + 560) = v56;
      v57 = (_QWORD *)swift_task_alloc(dword_1011ACA84);
      *(_QWORD *)(v0 + 568) = v57;
      *v57 = v0;
      v57[1] = sub_10095FE8C;
      return Playlist.numberOfDuplicateTracks(_:library:)(*(_QWORD *)(v0 + 288), v56);
    }
    v36 = *(int *)(v0 + 624);
    v37 = *(_QWORD *)(v0 + 528);
    v38 = *(_QWORD *)(v0 + 352);
    v39 = *(_QWORD *)(v0 + 272);
    (*(void (**)(_QWORD, _QWORD, __n128))(v35 + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296), v32);
    v40 = *(_QWORD *)(v38 + v36);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 232), v39, v37);
    if (v40 == *(_QWORD *)(v0 + 232))
      goto LABEL_6;
  }
  v43 = *(_QWORD *)(v0 + 552);
  if (v43 == -1)
  {
    v58 = *(_QWORD *)(v0 + 264);
    v59 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59, v60);
    goto LABEL_13;
  }
  result = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v26);
  if (v43 < 0)
  {
    __break(1u);
  }
  else
  {
    v44 = result;
    v45 = *(_QWORD *)(v0 + 552);
    if (v45 < *(_QWORD *)(result + 16))
    {
      v46 = *(_QWORD *)(v0 + 264);
      v47 = type metadata accessor for Playlist.Entry(0);
      v48 = *(_QWORD *)(v47 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 16))(v46, v44+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v45, v47);
      v49 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v48 + 56))(v46, 0, 1, v47, v49);
LABEL_13:
      v72 = (char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
          + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:);
      v61 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
                                       + 1));
      *(_QWORD *)(v0 + 584) = v61;
      *v61 = v0;
      v61[1] = sub_100960390;
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, void *))v72)(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 296), &protocol witness table for Track);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10095FE8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 568);
  v4 = *(void (**)(uint64_t, uint64_t, __n128))(*v1 + 544);
  v5 = *(_QWORD *)(*v1 + 288);
  v6 = *(_QWORD *)(*v1 + 272);
  *(_QWORD *)(*v1 + 576) = a1;
  swift_task_dealloc(v3);
  v7 = swift_release();
  v4(v5, v6, v7);
  return swift_task_switch(sub_10095FF18, *(_QWORD *)(v2 + 464), *(_QWORD *)(v2 + 472));
}

uint64_t sub_10095FF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t (*v58)(_QWORD);
  char *v59;

  if (*(uint64_t *)(v1 + 576) > 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 304) + 8))(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 296));
    v2 = *(_QWORD *)(*(_QWORD *)(v1 + 352) + *(int *)(v1 + 624));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 528));
    if (v2 == *(_QWORD *)(v1 + 232))
    {
LABEL_7:
      sub_10004FF60(*(_QWORD *)(v1 + 352), (uint64_t *)&unk_1011ACA90);
      swift_bridgeObjectRelease();
      v58 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                           + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save());
      v28 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                       + 1));
      *(_QWORD *)(v1 + 600) = v28;
      *v28 = v1;
      v28[1] = sub_100960904;
      return v58(*(_QWORD *)(v1 + 432));
    }
    v50 = v1 + 104;
    v51 = v1 + 48;
    while (1)
    {
      v52 = *(_QWORD *)(v1 + 528);
      v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 520);
      v3 = *(_QWORD *)(v1 + 352);
      v4 = *(_QWORD *)(v1 + 328);
      v55 = *(_QWORD *)(v1 + 320);
      v56 = *(_QWORD *)(v1 + 384);
      v5 = *(_QWORD *)(v1 + 296);
      v6 = *(_QWORD *)(v1 + 304);
      v7 = *(_QWORD *)(v1 + 288);
      v54 = *(_QWORD *)(v1 + 280);
      v8 = *(_QWORD *)(v1 + 272);
      v9 = v3 + *(int *)(v1 + 624);
      v57 = *(unsigned __int8 *)(v1 + 628);
      v10 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v51, v9, v8, v52);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      *(_QWORD *)(v1 + 536) = v11;
      v49 = v11;
      ((void (*)(uint64_t))v11)(v4);
      v10(v51, 0);
      v53(v7, v3, v8);
      dispatch thunk of Collection.formIndex(after:)(v9, v8, v52);
      v12 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      *(_QWORD *)(v1 + 544) = v12;
      v12(v7, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v55, v4, v5);
      swift_beginAccess(v56, v50, 32, 0);
      *(_QWORD *)(v1 + 552) = IndexPath.item.getter(v13);
      a1 = swift_endAccess(v50);
      if (v57 != 1)
        break;
      v14 = *(_QWORD *)(v1 + 224);
      v15 = swift_bridgeObjectRetain();
      v16 = Track.id.getter(v15);
      v18 = sub_10075CDDC(v16, v17, v14);
      swift_bridgeObjectRelease();
      v19 = swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v1 + 320);
      v21 = *(_QWORD *)(v1 + 296);
      v22 = *(_QWORD *)(v1 + 304);
      if ((v18 & 1) == 0)
      {
        v41 = sub_100007E8C(&qword_10119F2C8);
        v42 = *(_QWORD *)(v22 + 72);
        v43 = *(unsigned __int8 *)(v22 + 80);
        v44 = (v43 + 32) & ~v43;
        v45 = swift_allocObject(v41, v44 + v42, v43 | 7);
        *(_OWORD *)(v45 + 16) = xmmword_100EA7AA0;
        v49(v45 + v44, v20, v21);
        v46 = MusicItemCollection.init(arrayLiteral:)(v45, v21, &protocol witness table for Track);
        v47 = static MusicLibrary.shared.getter(v46);
        *(_QWORD *)(v1 + 560) = v47;
        v48 = (_QWORD *)swift_task_alloc(dword_1011ACA84);
        *(_QWORD *)(v1 + 568) = v48;
        *v48 = v1;
        v48[1] = sub_10095FE8C;
        return Playlist.numberOfDuplicateTracks(_:library:)(*(_QWORD *)(v1 + 288), v47);
      }
      v23 = *(int *)(v1 + 624);
      v24 = *(_QWORD *)(v1 + 528);
      v25 = *(_QWORD *)(v1 + 352);
      v26 = *(_QWORD *)(v1 + 272);
      (*(void (**)(_QWORD, _QWORD, __n128))(v22 + 8))(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 296), v19);
      v27 = *(_QWORD *)(v25 + v23);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 232), v26, v24);
      if (v27 == *(_QWORD *)(v1 + 232))
        goto LABEL_7;
    }
  }
  v30 = *(_QWORD *)(v1 + 552);
  if (v30 == -1)
  {
    v37 = *(_QWORD *)(v1 + 264);
    v38 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38, v39);
    goto LABEL_13;
  }
  result = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(a1);
  if (v30 < 0)
  {
    __break(1u);
  }
  else
  {
    v31 = result;
    v32 = *(_QWORD *)(v1 + 552);
    if (v32 < *(_QWORD *)(result + 16))
    {
      v33 = *(_QWORD *)(v1 + 264);
      v34 = type metadata accessor for Playlist.Entry(0);
      v35 = *(_QWORD *)(v34 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v33, v31+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v32, v34);
      v36 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v35 + 56))(v33, 0, 1, v34, v36);
LABEL_13:
      v59 = (char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
          + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:);
      v40 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
                                       + 1));
      *(_QWORD *)(v1 + 584) = v40;
      *v40 = v1;
      v40[1] = sub_100960390;
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, void *))v59)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 296), &protocol witness table for Track);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100960390()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 584);
  *(_QWORD *)(*v1 + 592) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100960D94;
  else
    v4 = sub_1009603F0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 464), *(_QWORD *)(v2 + 472));
}

uint64_t sub_1009603F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  _QWORD *v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t (*v68)(_QWORD);
  char *v69;

  v2 = *(_QWORD *)(v1 + 384);
  v3 = Track.id.getter(a1);
  sub_100195838((uint64_t *)(v1 + 176), v3, v4);
  swift_bridgeObjectRelease();
  v5 = swift_beginAccess(v2, v1 + 128, 33, 0);
  result = IndexPath.item.modify(v1 + 16, v5);
  if (__OFADD__(*v7, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 320);
    v9 = *(_QWORD *)(v1 + 296);
    v10 = *(_QWORD *)(v1 + 304);
    v11 = *(_QWORD *)(v1 + 264);
    ++*v7;
    ((void (*)(uint64_t, _QWORD))result)(v1 + 16, 0);
    swift_endAccess(v1 + 128);
    sub_10004FF60(v11, (uint64_t *)&unk_1011B59A0);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 352) + *(int *)(v1 + 624));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 528));
    if (v12 == *(_QWORD *)(v1 + 232))
    {
LABEL_7:
      sub_10004FF60(*(_QWORD *)(v1 + 352), (uint64_t *)&unk_1011ACA90);
      swift_bridgeObjectRelease();
      v68 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                           + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save());
      v39 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                       + 1));
      *(_QWORD *)(v1 + 600) = v39;
      *v39 = v1;
      v39[1] = sub_100960904;
      return v68(*(_QWORD *)(v1 + 432));
    }
    v60 = v1 + 104;
    v61 = v1 + 48;
    while (1)
    {
      v62 = *(_QWORD *)(v1 + 528);
      v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 520);
      v13 = *(_QWORD *)(v1 + 352);
      v14 = *(_QWORD *)(v1 + 328);
      v65 = *(_QWORD *)(v1 + 320);
      v66 = *(_QWORD *)(v1 + 384);
      v15 = *(_QWORD *)(v1 + 296);
      v16 = *(_QWORD *)(v1 + 304);
      v17 = *(_QWORD *)(v1 + 288);
      v64 = *(_QWORD *)(v1 + 280);
      v18 = *(_QWORD *)(v1 + 272);
      v19 = v13 + *(int *)(v1 + 624);
      v67 = *(unsigned __int8 *)(v1 + 628);
      v20 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v61, v19, v18, v62);
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
      *(_QWORD *)(v1 + 536) = v21;
      v59 = v21;
      ((void (*)(uint64_t))v21)(v14);
      v20(v61, 0);
      v63(v17, v13, v18);
      dispatch thunk of Collection.formIndex(after:)(v19, v18, v62);
      v22 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      *(_QWORD *)(v1 + 544) = v22;
      v22(v17, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v65, v14, v15);
      swift_beginAccess(v66, v60, 32, 0);
      *(_QWORD *)(v1 + 552) = IndexPath.item.getter(v23);
      v24 = swift_endAccess(v60);
      if (v67 != 1)
        break;
      v25 = *(_QWORD *)(v1 + 224);
      v26 = swift_bridgeObjectRetain();
      v27 = Track.id.getter(v26);
      v29 = sub_10075CDDC(v27, v28, v25);
      swift_bridgeObjectRelease();
      v30 = swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v1 + 320);
      v32 = *(_QWORD *)(v1 + 296);
      v33 = *(_QWORD *)(v1 + 304);
      if ((v29 & 1) == 0)
      {
        v47 = sub_100007E8C(&qword_10119F2C8);
        v48 = *(_QWORD *)(v33 + 72);
        v49 = *(unsigned __int8 *)(v33 + 80);
        v50 = (v49 + 32) & ~v49;
        v51 = swift_allocObject(v47, v50 + v48, v49 | 7);
        *(_OWORD *)(v51 + 16) = xmmword_100EA7AA0;
        v59(v51 + v50, v31, v32);
        v52 = MusicItemCollection.init(arrayLiteral:)(v51, v32, &protocol witness table for Track);
        v53 = static MusicLibrary.shared.getter(v52);
        *(_QWORD *)(v1 + 560) = v53;
        v54 = (_QWORD *)swift_task_alloc(dword_1011ACA84);
        *(_QWORD *)(v1 + 568) = v54;
        *v54 = v1;
        v54[1] = sub_10095FE8C;
        return Playlist.numberOfDuplicateTracks(_:library:)(*(_QWORD *)(v1 + 288), v53);
      }
      v34 = *(int *)(v1 + 624);
      v35 = *(_QWORD *)(v1 + 528);
      v36 = *(_QWORD *)(v1 + 352);
      v37 = *(_QWORD *)(v1 + 272);
      (*(void (**)(_QWORD, _QWORD, __n128))(v33 + 8))(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 296), v30);
      v38 = *(_QWORD *)(v36 + v34);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 232), v37, v35);
      if (v38 == *(_QWORD *)(v1 + 232))
        goto LABEL_7;
    }
    v40 = *(_QWORD *)(v1 + 552);
    if (v40 == -1)
    {
      v55 = *(_QWORD *)(v1 + 264);
      v56 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v56 - 8) + 56))(v55, 1, 1, v56, v57);
      goto LABEL_14;
    }
    result = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v24);
    if (v40 < 0)
      goto LABEL_16;
    v41 = result;
    v42 = *(_QWORD *)(v1 + 552);
    if (v42 < *(_QWORD *)(result + 16))
    {
      v43 = *(_QWORD *)(v1 + 264);
      v44 = type metadata accessor for Playlist.Entry(0);
      v45 = *(_QWORD *)(v44 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16))(v43, v41+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v42, v44);
      v46 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v45 + 56))(v43, 0, 1, v44, v46);
LABEL_14:
      v69 = (char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
          + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:);
      v58 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
                                       + 1));
      *(_QWORD *)(v1 + 584) = v58;
      *v58 = v1;
      v58[1] = sub_100960390;
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, void *))v69)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 296), &protocol witness table for Track);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100960904()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 600);
  *(_QWORD *)(*(_QWORD *)v1 + 608) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[58];
    v5 = v2[59];
    v6 = sub_1009614B0;
  }
  else
  {
    v7 = v2[54];
    v8 = v2[52];
    v9 = *(void (**)(uint64_t, uint64_t))(v2[53] + 8);
    v2[77] = v9;
    v9(v7, v8);
    v4 = v2[58];
    v5 = v2[59];
    v6 = sub_10096097C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10096097C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 616);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 416);
  v5 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 368);
  swift_release(*(_QWORD *)(v0 + 488));
  swift_release(v3);
  v1(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 392);
  v14 = *(_QWORD *)(v0 + 376);
  v16 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 352);
  v18 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 320);
  v20 = *(_QWORD *)(v0 + 312);
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100960AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  v1 = *(_QWORD *)(v0 + 504);
  if (qword_10119B910 != -1)
    swift_once(&qword_10119B910, sub_1000FC88C);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124C858);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 424);
  if (v6)
  {
    v28 = *(_QWORD *)(v0 + 416);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v31 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 192) = v1;
    swift_errorRetain(v1);
    v12 = sub_100007E8C(&qword_1011A14B0);
    v13 = String.init<A>(describing:)(v0 + 192, v12);
    *(_QWORD *)(v0 + 200) = sub_100322200(v13, v14, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to insert tracks in playlist with error=%{public}s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    swift_release();

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v28);
  }
  else
  {
    swift_release();

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v15 = *(_QWORD *)(v0 + 440);
  v16 = *(_QWORD *)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 400);
  v17 = *(_QWORD *)(v0 + 408);
  v20 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 392);
  v21 = *(_QWORD *)(v0 + 376);
  v23 = *(_QWORD *)(v0 + 344);
  v22 = *(_QWORD *)(v0 + 352);
  v25 = *(_QWORD *)(v0 + 328);
  v26 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 312);
  v29 = *(_QWORD *)(v0 + 288);
  v30 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100960D94()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD);
  void (*v44)(uint64_t, uint64_t, uint64_t);
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  _QWORD *v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v98;
  int v99;
  uint64_t (*v100)(_QWORD);
  char *v101;
  uint64_t v102;

  v88 = (_QWORD *)(v0 + 232);
  sub_10004FF60(*(_QWORD *)(v0 + 264), (uint64_t *)&unk_1011B59A0);
  if (qword_10119B910 != -1)
    swift_once(&qword_10119B910, sub_1000FC88C);
  v1 = *(_QWORD *)(v0 + 592);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 536);
  v4 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124C858);
  v2(v4, v3, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 592);
  if (v10)
  {
    v12 = *(_QWORD *)(v0 + 376);
    v84 = *(_QWORD *)(v0 + 384);
    v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
    v13 = *(_QWORD *)(v0 + 360);
    v89 = *(_QWORD *)(v0 + 368);
    v98 = *(_QWORD *)(v0 + 320);
    type = v9;
    v15 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 312);
    v16 = *(_QWORD *)(v0 + 296);
    v92 = v16;
    v17 = swift_slowAlloc(32, -1);
    v94 = swift_slowAlloc(96, -1);
    v102 = v94;
    *(_DWORD *)v17 = 136446722;
    v18 = Track.title.getter(v94);
    *(_QWORD *)(v17 + 4) = sub_100322200(v18, v19, &v102);
    v20 = swift_bridgeObjectRelease();
    v21 = *(void (**)(uint64_t, uint64_t, __n128))(v15 + 8);
    v21(v14, v16, v20);
    v22 = (void (*)(uint64_t, uint64_t))v21;
    *(_WORD *)(v17 + 12) = 2082;
    v86(v12, v84, v13);
    v23 = sub_100048748((unint64_t *)&unk_1011A9AC0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v13, v23);
    v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v12, v13);
    *(_QWORD *)(v17 + 14) = sub_100322200(v24, v26, &v102);
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2082;
    *(_QWORD *)(v0 + 208) = v11;
    swift_errorRetain(v11);
    v27 = sub_100007E8C(&qword_1011A14B0);
    v28 = String.init<A>(describing:)(v0 + 208, v27);
    *(_QWORD *)(v17 + 24) = sub_100322200(v28, v29, &v102);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, type, "Failed to insert track=%{public}s into playlist at indexPath=%{public}s with error=%{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v94, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v94, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v11);
    v22(v98, v92);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 312);
    v31 = *(_QWORD *)(v0 + 320);
    v32 = *(_QWORD *)(v0 + 296);
    v33 = *(_QWORD *)(v0 + 304);

    swift_errorRelease(v11);
    swift_errorRelease(v11);
    v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v34(v30, v32);
    swift_errorRelease(v11);
    v34(v31, v32);
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v0 + 352) + *(int *)(v0 + 624));
  dispatch thunk of Collection.endIndex.getter(v88, *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 528));
  if (v35 == *(_QWORD *)(v0 + 232))
  {
LABEL_11:
    sub_10004FF60(*(_QWORD *)(v0 + 352), (uint64_t *)&unk_1011ACA90);
    swift_bridgeObjectRelease();
    v100 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                          + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save());
    v62 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.save()
                                     + 1));
    *(_QWORD *)(v0 + 600) = v62;
    *v62 = v0;
    v62[1] = sub_100960904;
    return v100(*(_QWORD *)(v0 + 432));
  }
  v85 = v0 + 104;
  v87 = v0 + 48;
  while (1)
  {
    v90 = *(_QWORD *)(v0 + 528);
    v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    v36 = *(_QWORD *)(v0 + 352);
    v37 = *(_QWORD *)(v0 + 328);
    v95 = *(_QWORD *)(v0 + 320);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 384);
    v38 = *(_QWORD *)(v0 + 296);
    v39 = *(_QWORD *)(v0 + 304);
    v40 = *(_QWORD *)(v0 + 288);
    v93 = *(_QWORD *)(v0 + 280);
    v41 = *(_QWORD *)(v0 + 272);
    v42 = v36 + *(int *)(v0 + 624);
    v99 = *(unsigned __int8 *)(v0 + 628);
    v43 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v87, v42, v41, v90);
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    *(_QWORD *)(v0 + 536) = v44;
    v83 = v44;
    ((void (*)(uint64_t))v44)(v37);
    v43(v87, 0);
    v91(v40, v36, v41);
    dispatch thunk of Collection.formIndex(after:)(v42, v41, v90);
    v45 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    *(_QWORD *)(v0 + 544) = v45;
    v45(v40, v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v95, v37, v38);
    swift_beginAccess(*(_QWORD *)typea, v85, 32, 0);
    *(_QWORD *)(v0 + 552) = IndexPath.item.getter(v46);
    v47 = swift_endAccess(v85);
    if (v99 != 1)
      break;
    v48 = *(_QWORD *)(v0 + 224);
    v49 = swift_bridgeObjectRetain();
    v50 = Track.id.getter(v49);
    v52 = sub_10075CDDC(v50, v51, v48);
    swift_bridgeObjectRelease();
    v53 = swift_bridgeObjectRelease();
    v54 = *(_QWORD *)(v0 + 320);
    v55 = *(_QWORD *)(v0 + 296);
    v56 = *(_QWORD *)(v0 + 304);
    if ((v52 & 1) == 0)
    {
      v71 = sub_100007E8C(&qword_10119F2C8);
      v72 = *(_QWORD *)(v56 + 72);
      v73 = *(unsigned __int8 *)(v56 + 80);
      v74 = (v73 + 32) & ~v73;
      v75 = swift_allocObject(v71, v74 + v72, v73 | 7);
      *(_OWORD *)(v75 + 16) = xmmword_100EA7AA0;
      v83(v75 + v74, v54, v55);
      v76 = MusicItemCollection.init(arrayLiteral:)(v75, v55, &protocol witness table for Track);
      v77 = static MusicLibrary.shared.getter(v76);
      *(_QWORD *)(v0 + 560) = v77;
      v78 = (_QWORD *)swift_task_alloc(dword_1011ACA84);
      *(_QWORD *)(v0 + 568) = v78;
      *v78 = v0;
      v78[1] = sub_10095FE8C;
      return Playlist.numberOfDuplicateTracks(_:library:)(*(_QWORD *)(v0 + 288), v77);
    }
    v57 = *(int *)(v0 + 624);
    v58 = *(_QWORD *)(v0 + 528);
    v59 = *(_QWORD *)(v0 + 352);
    v60 = *(_QWORD *)(v0 + 272);
    (*(void (**)(_QWORD, _QWORD, __n128))(v56 + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296), v53);
    v61 = *(_QWORD *)(v59 + v57);
    dispatch thunk of Collection.endIndex.getter(v88, v60, v58);
    if (v61 == *(_QWORD *)(v0 + 232))
      goto LABEL_11;
  }
  v64 = *(_QWORD *)(v0 + 552);
  if (v64 == -1)
  {
    v79 = *(_QWORD *)(v0 + 264);
    v80 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v80 - 8) + 56))(v79, 1, 1, v80, v81);
    goto LABEL_18;
  }
  result = dispatch thunk of MusicLibraryPlaylistEditViewModel.entries.getter(v47);
  if (v64 < 0)
  {
    __break(1u);
  }
  else
  {
    v65 = result;
    v66 = *(_QWORD *)(v0 + 552);
    if (v66 < *(_QWORD *)(result + 16))
    {
      v67 = *(_QWORD *)(v0 + 264);
      v68 = type metadata accessor for Playlist.Entry(0);
      v69 = *(_QWORD *)(v68 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v69 + 16))(v67, v65+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v66, v68);
      v70 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v69 + 56))(v67, 0, 1, v68, v70);
LABEL_18:
      v101 = (char *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
           + async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:);
      v82 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicLibraryPlaylistEditViewModel.insert<A>(_:after:)
                                       + 1));
      *(_QWORD *)(v0 + 584) = v82;
      *v82 = v0;
      v82[1] = sub_100960390;
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, void *))v101)(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 296), &protocol witness table for Track);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1009614B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = *(_QWORD *)(v0 + 608);
  if (qword_10119B910 != -1)
    swift_once(&qword_10119B910, sub_1000FC88C);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124C858);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 416);
  v13 = *(_QWORD *)(v0 + 424);
  if (v10)
  {
    v32 = *(_QWORD *)(v0 + 416);
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v35 = v15;
    *(_DWORD *)v14 = 136446210;
    *(_QWORD *)(v0 + 192) = v5;
    swift_errorRetain(v5);
    v16 = sub_100007E8C(&qword_1011A14B0);
    v17 = String.init<A>(describing:)(v0 + 192, v16);
    *(_QWORD *)(v0 + 200) = sub_100322200(v17, v18, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to insert tracks in playlist with error=%{public}s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
    swift_release();

    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v32);
  }
  else
  {
    swift_release();

    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v19 = *(_QWORD *)(v0 + 440);
  v20 = *(_QWORD *)(v0 + 432);
  v22 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 376);
  v27 = *(_QWORD *)(v0 + 344);
  v26 = *(_QWORD *)(v0 + 352);
  v29 = *(_QWORD *)(v0 + 328);
  v30 = *(_QWORD *)(v0 + 320);
  v31 = *(_QWORD *)(v0 + 312);
  v33 = *(_QWORD *)(v0 + 288);
  v34 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1009617AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  _BYTE v20[16];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___filterKeyCommand;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___filterKeyCommand);
  if (v9)
  {
    v10 = *(id *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___filterKeyCommand);
  }
  else
  {
    v11 = sub_100961C30();
    v12 = swift_allocObject(&unk_1010E36C0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    sub_10004A07C(0, (unint64_t *)&qword_1011D0C80, UIKeyCommand_ptr);
    swift_retain();
    v13 = String.LocalizationValue.init(stringLiteral:)(0xE26E4920646E6946, 0xAA0000000000A680);
    static Locale.current.getter(v13);
    v14 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v16 = UIKeyCommand.init(title:input:modifierFlags:handler:)(v14, v15, 102, 0xE100000000000000, 1572864, (uint64_t)sub_1005B982C, v12);

    swift_release();
    v17 = *(void **)(v1 + v8);
    *(_QWORD *)(v1 + v8) = v16;
    v10 = v16;

    v9 = 0;
  }
  v18 = v9;
  return v10;
}

uint64_t sub_100961954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(char *, uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v16[24];

  v1 = type metadata accessor for MusicPropertySource(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v16[-v6 - 8];
  v8 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v9 = swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v16, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v7, v8, v1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for MusicPropertySource.catalog(_:), v1);
  LOBYTE(v8) = static MusicPropertySource.== infix(_:_:)(v7, v4);
  v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v4, v1);
  result = ((uint64_t (*)(char *, uint64_t))v10)(v7, v1);
  if ((v8 & 1) != 0)
    return sub_1009574D8();
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_autoupdatingResponse);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v13 = swift_allocObject(&unk_1010E35A8, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16);
    v14 = swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_100974A98, v13, v14);
    swift_release();
    return sub_1004CA0BC(v12);
  }
  return result;
}

uint64_t sub_100961AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t);
  _BYTE v17[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011D0C10);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C(&qword_1011A19D0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_100942444((uint64_t)v6);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
      v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v13(v10, v6, v7);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v10, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  v15(v10, a1, v7);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011D0C10);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v10, v7);
}

id sub_100961C30()
{
  return sub_10012CF24(&OBJC_IVAR____TtC5Music24PlaylistDetailDataSource____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_100961C44);
}

id sub_100961C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  void *Strong;
  id v16;
  char *v17;
  _BYTE v20[24];
  _BYTE v21[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
  v9 = objc_msgSend(v8, "searchBar");
  type metadata accessor for MaterialSearchTextField();
  objc_msgSend(v9, "_setClassForSearchTextField:", swift_getObjCClassFromMetadata());

  objc_msgSend(v8, "setSearchResultsUpdater:", a1);
  v10 = objc_msgSend(v8, "searchBar");
  v11 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  static Locale.current.getter(v11);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setPlaceholder:", v12, swift_bridgeObjectRelease().n128_f64[0]);

  v13 = objc_msgSend(v8, "searchBar");
  objc_msgSend(v13, "setReturnKeyType:", 9);

  objc_msgSend(v8, "setObscuresBackgroundDuringPresentation:", 0);
  v14 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v14, v20, 0, 0);
  sub_10004A160(v14, (uint64_t)v21, (uint64_t *)&unk_1011B6910);
  if ((v21[8] & 1) != 0)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v21);
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011B6910);
    if (Strong)
    {
      v16 = objc_msgSend(Strong, "navigationItem");

      if (v16)
      {
        objc_msgSend(v16, "setHidesSearchBarWhenScrolling:", 1);
        objc_msgSend(v16, "setPreferredSearchBarPlacement:", 2);
        v17 = (char *)&loc_100961EF0 + *((int *)qword_100962038 + sub_1008EC73C());
        __asm { BR              X10 }
      }
    }
  }
  return v8;
}

uint64_t sub_10096204C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _BYTE *v12;
  char v13;
  _BYTE *v14;
  _BYTE v15[24];
  _BYTE v16[8];
  char v17;

  v2 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) != (result & 1))
  {
    v3 = v1;
    v4 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v15, 0, 0);
    sub_10004A160(v4, (uint64_t)v16, (uint64_t *)&unk_1011B6910);
    if ((v17 & 1) != 0)
    {
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
      if (Strong)
      {
        v6 = sub_10070FCAC();

        *(_BYTE *)(v6 + 32) = *(_BYTE *)(v3 + v2);
        sub_100568020();
        swift_release();
      }
    }
    if (*(_BYTE *)(v3 + v2) != 1)
      goto LABEL_13;
    sub_100951C08();
    v7 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
    v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8);
    *v7 = 0;
    v7[1] = 0;
    sub_100956A7C(v8, v9);
    swift_bridgeObjectRelease();
    sub_10004A160(v4, (uint64_t)v16, (uint64_t *)&unk_1011B6910);
    if ((v17 & 1) != 0)
    {
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v10 = (void *)swift_unknownObjectWeakLoadStrong(v16);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
      if (v10)
      {
        v11 = objc_msgSend(v10, "contentScrollViewForEdge:", 1);

        if (v11)
        {
          objc_msgSend(v11, "setKeyboardDismissMode:", 1);

        }
      }
    }
    if ((*(_BYTE *)(v3 + v2) & 1) == 0)
    {
LABEL_13:
      sub_10004A160(v4, (uint64_t)v16, (uint64_t *)&unk_1011B6910);
      if ((v17 & 1) != 0)
      {
        sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        v12 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v16);
        sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
        if (v12)
        {
          v13 = v12[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork];
          v12[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
          if ((v13 & 1) != 0)
            objc_msgSend(*(id *)&v12[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer], "setAlpha:", 1.0);

        }
      }
    }
    *(_BYTE *)(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeHeaderOnNextReload) = 1;
    sub_10004A160(v4, (uint64_t)v16, (uint64_t *)&unk_1011B6910);
    if ((v17 & 1) != 0)
    {
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v14 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v16);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B6910);
      if (v14)
      {
        v14[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 1;

      }
    }
    sub_100955768();
    return sub_1009574D8();
  }
  return result;
}

uint64_t sub_100962308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unsigned __int8 v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char v42;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81[8];
  char v82[24];
  char v83[32];

  v73 = type metadata accessor for Playlist.Variant(0);
  v76 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v68 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v72);
  v75 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v3);
  v69 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v74 = (char *)&v67 - v6;
  __chkstk_darwin(v7);
  v78 = (char *)&v67 - v8;
  v77 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v79 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v67 - v22;
  v24 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v83, 0, 0);
  sub_10004A160(v24, (uint64_t)v16, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    v27 = v18;
    v28 = (uint64_t)v75;
    v70 = v27;
    v71 = v23;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v23, v16, v17);
    v29 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v82, 0, 0);
    sub_10004A160(v29, (uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
    v30 = v77;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v13, 1, v77))
    {
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
    }
    else
    {
      v44 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v10, v13, v30);
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011D0BB0);
      v45 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Collection.startIndex.getter(v30);
      dispatch thunk of Collection.endIndex.getter(&v80, v30, v45);
      v46 = dispatch thunk of Collection.distance(from:to:)(v81, &v80, v30, v45);
      v48 = v47;
      (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v10, v30, v46);
      if (v48 > 0)
      {
        v35 = v20;
        v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v70 + 16))(v20, v71, v17);
        v37 = v17;
        v38 = v76;
        v39 = (uint64_t)v78;
        goto LABEL_12;
      }
    }
    v31 = sub_100961C30();
    v32 = objc_msgSend(v31, "isActive");

    v34 = v70;
    v33 = v71;
    v35 = v20;
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v70 + 16))(v20, v71, v17);
    v37 = v17;
    v38 = v76;
    v39 = (uint64_t)v78;
    if ((v32 & 1) == 0)
    {
      v40 = v33;
      v41 = *(void (**)(char *, uint64_t))(v34 + 8);
      v41(v35, v37);
      v41(v40, v37);
      goto LABEL_8;
    }
LABEL_12:
    v67 = v37;
    Playlist.variant.getter(v36);
    v49 = v73;
    v50 = (uint64_t)v74;
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v74, enum case for Playlist.Variant.genius(_:), v73);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v50, 0, 1, v49);
    v51 = v28 + *(int *)(v72 + 48);
    sub_10004A160(v39, v28, (uint64_t *)&unk_1011CEF20);
    sub_10004A160(v50, v51, (uint64_t *)&unk_1011CEF20);
    v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    v53 = v35;
    if (v52(v28, 1, v49) == 1)
    {
      sub_10004FF60(v50, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v39, (uint64_t *)&unk_1011CEF20);
      v54 = *(void (**)(char *, uint64_t))(v70 + 8);
      v55 = v35;
      v56 = v67;
      v54(v55, v67);
      v54(v71, v56);
      if (v52(v51, 1, v49) == 1)
      {
        v25 = (uint64_t *)&unk_1011CEF20;
        v26 = v28;
        goto LABEL_3;
      }
    }
    else
    {
      v57 = v69;
      sub_10004A160(v28, v69, (uint64_t *)&unk_1011CEF20);
      if (v52(v51, 1, v49) != 1)
      {
        v61 = v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v68, v51, v49);
        v62 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        LODWORD(v79) = dispatch thunk of static Equatable.== infix(_:_:)(v57, v61, v49, v62);
        v63 = *(void (**)(char *, uint64_t))(v38 + 8);
        v63(v61, v49);
        sub_10004FF60(v50, (uint64_t *)&unk_1011CEF20);
        sub_10004FF60(v39, (uint64_t *)&unk_1011CEF20);
        v64 = v49;
        v65 = *(void (**)(char *, uint64_t))(v70 + 8);
        v66 = v67;
        v65(v53, v67);
        v65(v71, v66);
        v63((char *)v57, v64);
        sub_10004FF60(v28, (uint64_t *)&unk_1011CEF20);
        v42 = v79 ^ 1;
        return v42 & 1;
      }
      v58 = v57;
      sub_10004FF60(v50, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v39, (uint64_t *)&unk_1011CEF20);
      v59 = *(void (**)(char *, uint64_t))(v70 + 8);
      v60 = v67;
      v59(v35, v67);
      v59(v71, v60);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v58, v49);
    }
    sub_10004FF60(v28, (uint64_t *)&unk_1011C66C0);
    v42 = 1;
    return v42 & 1;
  }
  v25 = &qword_1011A30F0;
  v26 = (uint64_t)v16;
LABEL_3:
  sub_10004FF60(v26, v25);
LABEL_8:
  v42 = 0;
  return v42 & 1;
}

void sub_1009629E4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _BYTE v13[24];
  _BYTE v14[8];
  char v15;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearchEnabled) != (a1 & 1))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearchEnabled))
    {
      v2 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
      swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v13, 0, 0);
      sub_10004A160(v2, (uint64_t)v14, (uint64_t *)&unk_1011B6910);
      if ((v15 & 1) != 0)
      {
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
        if (Strong)
        {
          v5 = sub_1009617AC();
          objc_msgSend(Strong, "addKeyCommand:", v5);

        }
      }
      sub_10004A160(v2, (uint64_t)v14, (uint64_t *)&unk_1011B6910);
      if ((v15 & 1) == 0)
      {
        v6 = (void *)swift_unknownObjectWeakLoadStrong(v14);
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
        if (v6)
        {
          v7 = objc_msgSend(v6, "navigationItem");

          v8 = sub_100961C30();
          objc_msgSend(v7, "setSearchController:", v8);

        }
        return;
      }
LABEL_15:
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
      return;
    }
    v3 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v13, 0, 0);
    sub_10004A160(v3, (uint64_t)v14, (uint64_t *)&unk_1011B6910);
    if ((v15 & 1) != 0)
    {
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v9 = (void *)swift_unknownObjectWeakLoadStrong(v14);
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
      if (v9)
      {
        v10 = sub_1009617AC();
        objc_msgSend(v9, "removeKeyCommand:", v10);

      }
    }
    sub_10004A160(v3, (uint64_t)v14, (uint64_t *)&unk_1011B6910);
    if ((v15 & 1) != 0)
      goto LABEL_15;
    v11 = (void *)swift_unknownObjectWeakLoadStrong(v14);
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011B6910);
    if (v11)
    {
      v12 = objc_msgSend(v11, "navigationItem");

      objc_msgSend(v12, "setSearchController:", 0);
    }
  }
}

void sub_100962C5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  id v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BYTE v49[8];

  v46 = a1;
  v38 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  v4 = __chkstk_darwin(v38);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v43 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v31 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v40 = (char *)v27 - v9;
  __chkstk_darwin(v8);
  v36 = (char *)v27 - v10;
  v42 = type metadata accessor for Playlist(0);
  v37 = *(_QWORD *)(v42 - 8);
  v11 = __chkstk_darwin(v42);
  v12 = __chkstk_darwin(v11);
  v39 = (char *)v27 - v13;
  __chkstk_darwin(v12);
  v29 = (char *)v27 - v14;
  v15 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v15);
  v30 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v32 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v34 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v18);
  v35 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Playlist.Entry(0);
  v20 = __chkstk_darwin(v44);
  __chkstk_darwin(v20);
  v41 = (char *)v27 - v21;
  v22 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
  __chkstk_darwin(v22);
  v45 = v2;
  v23 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v23, v49, 0, 0);
  sub_10004A160(v23, (uint64_t)&v47, (uint64_t *)&unk_1011B6910);
  if ((v48 & 1) != 0)
  {
    sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    v24 = (void *)swift_unknownObjectWeakLoadStrong(&v47);
    sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011B6910);
    if (v24)
    {
      v27[0] = v5;
      v28 = v24;
      sub_100963D80(v46, a2);
      v26 = type metadata accessor for PlaybackIntentDescriptor(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a2, 0, 1, v26);

      return;
    }
  }
  v25 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
}

uint64_t sub_100963D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  uint64_t v43;

  v36 = a1;
  v39 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  __chkstk_darwin(v6);
  v35 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  v9 = __chkstk_darwin(v8);
  v34 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - v11;
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v2;
  v20 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries, v42, 0, 0);
  sub_10004A160(v20, (uint64_t)v19, (uint64_t *)&unk_1011D0BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13))
  {
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011D0BB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011D0BB0);
    v21 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v13);
    dispatch thunk of Collection.endIndex.getter(&v41, v13, v21);
    v22 = v43;
    v23 = v41;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (v22 == v23)
    {
      v24 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
      v25 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
      swift_allocError(v24, v25, 0, 0);
      swift_storeEnumTagMultiPayload(v26, v24, 7);
      return swift_willThrow(v27);
    }
  }
  v29 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 1, 1, v29);
  sub_10004A160(v36, (uint64_t)v5, (uint64_t *)&unk_1011A3D50);
  v31 = v37;
  v30 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v5, 1, v38) == 1)
  {
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011A3D50);
  }
  else
  {
    v32 = v35;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v35, v5, v30);
    v33 = v34;
    sub_100965F24(v34);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011B59A0);
    sub_100065228(v33, (uint64_t)v12, (uint64_t *)&unk_1011B59A0);
  }
  sub_10096414C((uint64_t)v12, v39);
  return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011B59A0);
}

uint64_t sub_10096414C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  void (*v60)(_QWORD *, char *, uint64_t);
  int v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  __n128 v116;
  uint64_t (*v117)(uint64_t, _QWORD);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __n128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  objc_class *Strong;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  void (*v181)(_QWORD *, char *, uint64_t);
  uint64_t (*v182)(char *, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224[8];
  _BYTE v225[16];
  char v226[8];
  __int128 v227;
  __int128 v228;
  void *v229;
  uint64_t v230;
  char v231;
  uint64_t v232;
  void *v233;
  char v234[8];
  char v235[8];
  char v236;
  uint64_t v237;

  v237 = a1;
  v197 = a2;
  v195 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v195);
  v196 = (char *)&v180 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v213 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v205 = (char *)&v180 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D0C10);
  __chkstk_darwin(v5);
  v210 = (uint64_t)&v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_100007E8C(&qword_1011A19D0);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v190 = (char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B69C0);
  __chkstk_darwin(v8);
  v202 = (char *)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v10);
  v191 = (uint64_t)&v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v192 = *(_QWORD *)(v193 - 8);
  v12 = __chkstk_darwin(v193);
  v186 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v189 = (char *)&v180 - v14;
  v217 = type metadata accessor for MusicPropertySource(0);
  v216 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v215 = (char *)&v180 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  v17 = __chkstk_darwin(v16);
  v203 = (uint64_t)&v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v187 = (char *)&v180 - v20;
  v21 = __chkstk_darwin(v19);
  v201 = (char *)&v180 - v22;
  v23 = __chkstk_darwin(v21);
  v185 = (char *)&v180 - v24;
  __chkstk_darwin(v23);
  v211 = (uint64_t)&v180 - v25;
  v222 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v221 = *(_QWORD *)(v222 - 8);
  v26 = __chkstk_darwin(v222);
  v209 = (char *)&v180 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v208 = (char *)&v180 - v29;
  __chkstk_darwin(v28);
  v220 = (char *)&v180 - v30;
  v31 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  v32 = __chkstk_darwin(v31);
  v204 = (char *)&v180 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v188 = (uint64_t)&v180 - v35;
  v36 = __chkstk_darwin(v34);
  v200 = (uint64_t)&v180 - v37;
  v38 = __chkstk_darwin(v36);
  v184 = (uint64_t)&v180 - v39;
  __chkstk_darwin(v38);
  v41 = (char *)&v180 - v40;
  v42 = type metadata accessor for Playlist.Entry(0);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v219 = (char *)&v180 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v45);
  v47 = (char *)&v180 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for Playlist(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = __chkstk_darwin(v48);
  v194 = (char *)&v180 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v53 = (char *)&v180 - v52;
  v218 = v2;
  v54 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v235, 0, 0);
  sub_10004A160(v54, (uint64_t)v47, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
  {
    sub_10004FF60((uint64_t)v47, &qword_1011A30F0);
    v55 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
    v56 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
    swift_allocError(v55, v56, 0, 0);
    swift_storeEnumTagMultiPayload(v57, v55, 3);
    return swift_willThrow(v58);
  }
  v214 = v49;
  v60 = *(void (**)(_QWORD *, char *, uint64_t))(v49 + 32);
  v212 = v53;
  v181 = v60;
  v60(v53, v47, v48);
  sub_10004A160(v237, (uint64_t)v41, (uint64_t *)&unk_1011B59A0);
  v182 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v61 = v182(v41, 1, v42);
  v183 = v43;
  v207 = v48;
  if (v61 == 1)
  {
    sub_10004FF60((uint64_t)v41, (uint64_t *)&unk_1011B59A0);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v62 = (uint64_t)v212;
    v63 = Player.state<A>(for:)((uint64_t)v212, v48, (uint64_t)&protocol witness table for Playlist);
    v64 = v209;
    (*(void (**)(_QWORD *))(*v63 + 256))(v63);
    v65 = swift_release(v63);
    v66 = v221;
    v67 = v220;
    v68 = v222;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v221 + 104))(v220, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v222, v65);
    v69 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v64, v67);
    v70 = *(void (**)(char *, uint64_t))(v66 + 8);
    v70(v67, v68);
    if ((v69 & 1) == 0)
    {
      v99 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
      v237 = v99;
      v100 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
      v223 = swift_allocError(v99, v100, 0, 0);
      v101 = v68;
      v103 = v102;
      v104 = sub_100007E8C((uint64_t *)&unk_1011D0C20);
      v105 = v207;
      v106 = v103 + *(int *)(v104 + 48);
      v107 = v214;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v103, v62, v207);
      (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v106, v64, v101);
      swift_storeEnumTagMultiPayload(v103, v237, 2);
      swift_willThrow(v108);
      v70(v64, v101);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 8))(v62, v105);
    }
    v70(v64, v68);
    v71 = v62;
  }
  else
  {
    v72 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v73 = (uint64_t)v219;
    v72(v219, v41, v42);
    v74 = v42;
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v75 = Player.state<A>(for:)(v73, v42, (uint64_t)&protocol witness table for Playlist.Entry);
    v76 = v220;
    (*(void (**)(_QWORD *))(*v75 + 256))(v75);
    v77 = v221;
    v78 = v208;
    v79 = v222;
    (*(void (**)(char *, _QWORD, uint64_t))(v221 + 104))(v208, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v222);
    v80 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v76, v78);
    v81 = *(void (**)(char *, uint64_t))(v77 + 8);
    v81(v78, v79);
    v81(v76, v79);
    v82 = v214;
    if ((v80 & 1) == 0)
    {
      v109 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
      v110 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
      swift_allocError(v109, v110, 0, 0);
      v112 = v111;
      v113 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C30) + 48);
      v114 = v183;
      v115 = v219;
      (*(void (**)(uint64_t, char *, uint64_t))(v183 + 16))(v112, v219, v74);
      *(_QWORD *)(v112 + v113) = v75;
      swift_storeEnumTagMultiPayload(v112, v109, 1);
      swift_willThrow(v116);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v115, v74);
      v117 = *(uint64_t (**)(uint64_t, _QWORD))(v82 + 8);
LABEL_50:
      v128 = (uint64_t)v212;
      v129 = &v231;
      return v117(v128, *((_QWORD *)v129 - 32));
    }
    v42 = v74;
    (*(void (**)(char *, uint64_t))(v183 + 8))(v219, v74);
    swift_release(v75);
    v71 = (uint64_t)v212;
  }
  v83 = v218;
  v84 = v218 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v85 = swift_beginAccess(v218 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v234, 0, 0);
  v86 = v216;
  v87 = v215;
  v88 = v84;
  v89 = v217;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v216 + 16))(v215, v88, v217, v85);
  v90 = (*(uint64_t (**)(char *, uint64_t))(v86 + 88))(v87, v89);
  v91 = v223;
  v92 = v213;
  v93 = v210;
  if (v90 == enum case for MusicPropertySource.catalog(_:))
  {
    v94 = *(_BYTE *)(v83 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isSearching) == 1;
    v180 = v42;
    if (!v94)
      goto LABEL_25;
    v95 = v83 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v83 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v224, 0, 0);
    v96 = v191;
    sub_10004A160(v95, v191, (uint64_t *)&unk_1011D0BB0);
    v97 = v192;
    v98 = v193;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v192 + 48))(v96, 1, v193) == 1)
    {
      sub_10004FF60(v96, (uint64_t *)&unk_1011D0BB0);
LABEL_25:
      v133 = v207;
      v232 = v207;
      v233 = &protocol witness table for Playlist;
      v134 = sub_100049F68(&v230);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v214 + 16))(v134, v71, v133);
      v135 = v200;
      sub_10004A160(v237, v200, (uint64_t *)&unk_1011B59A0);
      if (v182((char *)v135, 1, v42) == 1)
      {
        sub_10004FF60(v135, (uint64_t *)&unk_1011B59A0);
        v227 = 0u;
        v228 = 0u;
        v229 = 0;
      }
      else
      {
        *((_QWORD *)&v228 + 1) = v42;
        v229 = &protocol witness table for Playlist.Entry;
        v136 = sub_100049F68(&v227);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v183 + 32))(v136, v135, v42);
      }
      v137 = (uint64_t)v204;
      v138 = enum case for MusicPlaybackSource.catalog(_:);
      v139 = type metadata accessor for MusicPlaybackSource(0);
      v140 = *(_QWORD *)(v139 - 8);
      v141 = v202;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 104))(v202, v138, v139);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v141, 0, 1, v139);
      v142 = (uint64_t)v201;
      MusicPlaybackIntentDescriptor.init(container:startingAt:playbackSource:)(&v230, &v227, v141);
      v143 = v206;
      v83 = v218;
      goto LABEL_29;
    }
    v130 = v189;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v189, v96, v98);
    v131 = v97;
    v132 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v98);
    dispatch thunk of Collection.endIndex.getter(&v227, v98, v132);
    if (v230 == (_QWORD)v227)
    {
      (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v98);
      v71 = (uint64_t)v212;
      v92 = v213;
      goto LABEL_25;
    }
    v176 = v186;
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v186, v130, v98);
    v177 = v184;
    sub_10004A160(v237, v184, (uint64_t *)&unk_1011B59A0);
    v178 = sub_100049F28(&qword_1011C6810, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v142 = (uint64_t)v185;
    MusicPlaybackIntentDescriptor.init<A, B>(items:startingAt:)(v176, v177, v98, v42, v178, &protocol witness table for Playlist.Entry);
    v143 = v206;
    if (v91)
    {
      (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v98);
      goto LABEL_49;
    }
    (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v98);
    v137 = (uint64_t)v204;
    v92 = v213;
LABEL_29:
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v142, 0, 1, v143);
    v144 = v211;
    sub_100065228(v142, v211, (uint64_t *)&unk_1011A3D60);
    v145 = v203;
    sub_10004A160(v144, v203, (uint64_t *)&unk_1011A3D60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v145, 1, v143) == 1)
    {
      sub_10004FF60(v145, (uint64_t *)&unk_1011A3D60);
      v146 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
      v147 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
      swift_allocError(v146, v147, 0, 0);
      swift_storeEnumTagMultiPayload(v148, v146, 5);
      swift_willThrow(v149);
      v150 = v211;
LABEL_48:
      sub_10004FF60(v150, (uint64_t *)&unk_1011A3D60);
      goto LABEL_49;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v205, v145, v143);
    v151 = v83 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v83 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v226, 0, 0);
    sub_10004A160(v151, (uint64_t)&v230, (uint64_t *)&unk_1011B6910);
    if ((v231 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v230, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v152 = (void *)swift_unknownObjectWeakLoadStrong(&v230);
      sub_10004FF60((uint64_t)&v230, (uint64_t *)&unk_1011B6910);
      if (v152)
      {
        UIViewController.playActivityInformation.getter();
        v154 = v153;
        v156 = v155;
        v158 = v157;

        v159 = v154;
        v137 = (uint64_t)v204;
        v92 = v213;
        swift_bridgeObjectRelease(v159);
LABEL_36:
        v160 = v156;
        v161 = v205;
        MusicPlaybackIntentDescriptor.playActivityRecommendationData.setter(v160, v158);
        v162 = (uint64_t)v196;
        v163 = v161;
        v164 = v206;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v196, v163, v206);
        swift_storeEnumTagMultiPayload(v162, v195, 1);
        sub_10004A160(v237, v137, (uint64_t *)&unk_1011B59A0);
        v165 = v180;
        if (v182((char *)v137, 1, v180) == 1)
        {
          sub_10004FF60(v137, (uint64_t *)&unk_1011B59A0);
          v227 = 0u;
          v228 = 0u;
          v229 = 0;
        }
        else
        {
          *((_QWORD *)&v228 + 1) = v165;
          v229 = &protocol witness table for Playlist.Entry;
          v166 = sub_100049F68(&v227);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v183 + 32))(v166, v137, v165);
        }
        v167 = v214;
        v168 = v194;
        (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v194, v212, v207);
        if (*((_QWORD *)&v228 + 1))
        {
          (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v207);
          sub_100064C48(&v227, (uint64_t)&v230);
        }
        else
        {
          v173 = v207;
          v232 = v207;
          v233 = &protocol witness table for Playlist;
          v174 = sub_100049F68(&v230);
          v181(v174, v168, v173);
          sub_10004FF60((uint64_t)&v227, (uint64_t *)&unk_1011B69E0);
        }
        sub_10004A160(v151, (uint64_t)v225, (uint64_t *)&unk_1011B6910);
        if ((v225[8] & 1) != 0)
        {
          sub_10004FF60((uint64_t)v225, (uint64_t *)&unk_1011B6910);
          Strong = 0;
        }
        else
        {
          Strong = (objc_class *)swift_unknownObjectWeakLoadStrong(v225);
          sub_10004FF60((uint64_t)v225, (uint64_t *)&unk_1011B6910);
        }
        PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v162, (uint64_t)&v230, 3, 0, 0, 1, 0, 1, v197, Strong);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v205, v164);
        v150 = v211;
        goto LABEL_48;
      }
    }
    v156 = 0;
    v158 = 0xF000000000000000;
    goto LABEL_36;
  }
  if (v90 == enum case for MusicPropertySource.library(_:))
  {
    sub_100942444(v210);
    v118 = v198;
    v119 = v199;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v93, 1, v199) == 1)
    {
      sub_10004FF60(v93, (uint64_t *)&unk_1011D0C10);
      v120 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
      v121 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
      swift_allocError(v120, v121, 0, 0);
      swift_storeEnumTagMultiPayload(v122, v120, 4);
      swift_willThrow(v123);
LABEL_49:
      v117 = *(uint64_t (**)(uint64_t, _QWORD))(v214 + 8);
      goto LABEL_50;
    }
    v169 = v190;
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v190, v93, v119);
    MusicLibrarySectionedRequest.ignoreExplicitContentRestrictions.setter(0, v119);
    v232 = v119;
    v233 = (void *)sub_100049F28((unint64_t *)&qword_1011A19D8, &qword_1011A19D0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
    v170 = sub_100049F68(&v230);
    (*(void (**)(_QWORD *, char *, uint64_t))(v118 + 16))(v170, v169, v119);
    v171 = v188;
    sub_10004A160(v237, v188, (uint64_t *)&unk_1011B59A0);
    v172 = v42;
    if (v182((char *)v171, 1, v42) == 1)
    {
      sub_10004FF60(v171, (uint64_t *)&unk_1011B59A0);
      v227 = 0u;
      v228 = 0u;
      v229 = 0;
    }
    else
    {
      *((_QWORD *)&v228 + 1) = v42;
      v229 = &protocol witness table for Playlist.Entry;
      v179 = sub_100049F68(&v227);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v183 + 32))(v179, v171, v42);
    }
    v143 = v206;
    v137 = (uint64_t)v204;
    v142 = (uint64_t)v187;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v230, &v227);
    if (v91)
    {
      (*(void (**)(char *, uint64_t))(v198 + 8))(v190, v199);
      goto LABEL_49;
    }
    v180 = v172;
    (*(void (**)(char *, uint64_t))(v198 + 8))(v190, v199);
    goto LABEL_29;
  }
  v124 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
  v125 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
  swift_allocError(v124, v125, 0, 0);
  swift_storeEnumTagMultiPayload(v126, v124, 6);
  swift_willThrow(v127);
  (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v71, v207);
  v117 = *(uint64_t (**)(uint64_t, _QWORD))(v216 + 8);
  v128 = (uint64_t)v215;
  v129 = &v236;
  return v117(v128, *((_QWORD *)v129 - 32));
}

uint64_t sub_100965638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  void *v48;
  id v49;
  unint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t KeyPath;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  objc_class *Strong;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[16];
  _OWORD v101[2];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  char v107[8];
  char v108[8];
  uint64_t v109;

  v99 = a1;
  v85 = a2;
  v86 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v86);
  v87 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v93 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C(&qword_10119F2E0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v88 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v82 - v10;
  v12 = type metadata accessor for MusicPropertySource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v16);
  v90 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v82 - v22;
  v25 = __chkstk_darwin(v24);
  v91 = v4;
  v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v28 = (char *)&v82 - v27;
  v92 = v3;
  v89 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v26)((char *)&v82 - v27, 1, 1, v3, v25);
  v29 = v109 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v30 = swift_beginAccess(v109 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v108, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, v29, v12, v30);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if ((_DWORD)v31 == enum case for MusicPropertySource.catalog(_:))
  {
    v32 = v99;
    Playlist.Entry.internalItem.getter(v31);
    v33 = sub_100048748(&qword_1011A7628, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
    v34 = v97;
    MusicPlaybackIntentDescriptor.init<A>(item:)(v11, v98, v33);
    result = sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A3D60);
    v36 = (uint64_t)v23;
    if (v34)
      return result;
    goto LABEL_12;
  }
  v83 = v8;
  v84 = v20;
  v37 = v94;
  v38 = v95;
  v39 = v96;
  v32 = v99;
  if ((_DWORD)v31 != enum case for MusicPropertySource.library(_:))
  {
    v43 = (uint64_t)v28;
    v44 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
    v45 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
    swift_allocError(v44, v45, 0, 0);
    swift_storeEnumTagMultiPayload(v46, v44, 6);
    swift_willThrow(v47);
    sub_10004FF60(v43, (uint64_t *)&unk_1011A3D60);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v40 = type metadata accessor for Track(0);
  v41 = v37;
  MusicLibraryRequest.init()(v40, &protocol witness table for Track);
  v42 = v109 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v109 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v107, 0, 0);
  sub_10004A160(v42, (uint64_t)&v103, (uint64_t *)&unk_1011B6910);
  if ((v104 & 1) != 0)
  {
    sub_10004FF60((uint64_t)&v103, (uint64_t *)&unk_1011B6910);
  }
  else
  {
    v48 = (void *)swift_unknownObjectWeakLoadStrong(&v103);
    sub_10004FF60((uint64_t)&v103, (uint64_t *)&unk_1011B6910);
    if (v48)
    {
      v49 = objc_msgSend(v48, "traitCollection");
      v50 = sub_10013ADBC();
      UITraitCollection.subscript.getter(&v103, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v50);

      goto LABEL_11;
    }
  }
  v52 = type metadata accessor for MusicLibrary(0);
  static MusicLibrary.shared.getter(v52);
LABEL_11:
  MusicLibraryRequest.library.setter(v51);
  MusicLibraryRequest.includeNonLibraryAddedContent.setter(1, v39);
  KeyPath = swift_getKeyPath(&unk_100ED7BB8);
  v54 = v83;
  v55 = Playlist.Entry.internalItem.getter(KeyPath);
  v56 = Playlist.Entry.InternalItem.id.getter(v55);
  v58 = v57;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v98);
  v103 = v56;
  v104 = v58;
  MusicLibraryRequest.filter<A>(matching:equalTo:)(KeyPath, &v103, v39, &protocol witness table for MusicItemID);
  swift_release();
  swift_bridgeObjectRelease();
  v105 = v39;
  v106 = (void *)sub_100049F28((unint64_t *)&unk_1011D0C00, &qword_10119F2E0, (uint64_t)&protocol conformance descriptor for MusicLibraryRequest<A>);
  v59 = sub_100049F68(&v103);
  (*(void (**)(_QWORD *, char *, uint64_t))(v38 + 16))(v59, v41, v39);
  v102 = 0;
  memset(v101, 0, sizeof(v101));
  v36 = (uint64_t)v84;
  v60 = v97;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v103, v101);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
  result = sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A3D60);
  if (v60)
    return result;
LABEL_12:
  v61 = v92;
  v89(v36, 0, 1, v92);
  sub_100065228(v36, (uint64_t)v28, (uint64_t *)&unk_1011A3D60);
  v62 = v90;
  sub_10004A160((uint64_t)v28, v90, (uint64_t *)&unk_1011A3D60);
  v63 = v91;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v62, 1, v61) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v93, v62, v61);
    v69 = v109 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v109 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v101, 0, 0);
    sub_10004A160(v69, (uint64_t)&v103, (uint64_t *)&unk_1011B6910);
    v82 = v28;
    if ((v104 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v103, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      v70 = (void *)swift_unknownObjectWeakLoadStrong(&v103);
      sub_10004FF60((uint64_t)&v103, (uint64_t *)&unk_1011B6910);
      if (v70)
      {
        UIViewController.playActivityInformation.getter();
        v72 = v71;
        v74 = v73;

        swift_bridgeObjectRelease();
LABEL_19:
        v75 = v85;
        v76 = v72;
        v77 = v93;
        MusicPlaybackIntentDescriptor.playActivityRecommendationData.setter(v76, v74);
        v78 = (uint64_t)v87;
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v87, v77, v61);
        swift_storeEnumTagMultiPayload(v78, v86, 1);
        v79 = type metadata accessor for Playlist.Entry(0);
        v105 = v79;
        v106 = &protocol witness table for Playlist.Entry;
        v80 = sub_100049F68(&v103);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v80, v32, v79);
        sub_10004A160(v69, (uint64_t)v100, (uint64_t *)&unk_1011B6910);
        if ((v100[8] & 1) != 0)
        {
          sub_10004FF60((uint64_t)v100, (uint64_t *)&unk_1011B6910);
          Strong = 0;
        }
        else
        {
          Strong = (objc_class *)swift_unknownObjectWeakLoadStrong(v100);
          sub_10004FF60((uint64_t)v100, (uint64_t *)&unk_1011B6910);
        }
        PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v78, (uint64_t)&v103, 3, 0, 0, 1, 0, 1, v75, Strong);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v93, v61);
        v68 = (uint64_t)v82;
        return sub_10004FF60(v68, (uint64_t *)&unk_1011A3D60);
      }
    }
    v72 = 0;
    v74 = 0xF000000000000000;
    goto LABEL_19;
  }
  sub_10004FF60(v62, (uint64_t *)&unk_1011A3D60);
  v64 = type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(0);
  v65 = sub_100048748(&qword_1011D0BF8, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError, (uint64_t)&unk_100ED81BC);
  swift_allocError(v64, v65, 0, 0);
  swift_storeEnumTagMultiPayload(v66, v64, 5);
  swift_willThrow(v67);
  v68 = (uint64_t)v28;
  return sub_10004FF60(v68, (uint64_t *)&unk_1011A3D60);
}

uint64_t sub_100965F24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[8];
  _BYTE v27[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10093A524(2u);
  v13 = v12;
  v14 = IndexPath.section.getter(v11);
  if ((v13 & 1) == 0 && v11 == v14)
  {
    v15 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentingEntries, v27, 0, 0);
    sub_10004A160(v15, (uint64_t)v6, (uint64_t *)&unk_1011D0BB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011D0BB0);
    }
    else
    {
      v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      v17 = IndexPath.item.getter(v16);
      v18 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Collection.startIndex.getter(v7);
      dispatch thunk of Collection.endIndex.getter(&v25, v7, v18);
      v19 = dispatch thunk of Collection.distance(from:to:)(v26, &v25, v7, v18);
      if (v17 < v19)
      {
        v20 = IndexPath.item.getter(v19);
        MusicItemCollection.subscript.getter(v20, v7);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v21 = type metadata accessor for Playlist.Entry(0);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  v23 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
}

uint64_t sub_100966168@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, _QWORD, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t (*v96)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char v113[24];
  char v114[24];
  char v115[32];

  v2 = v1;
  v112 = a1;
  v104 = type metadata accessor for Playlist.Variant(0);
  v111 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v100 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v105);
  v106 = (uint64_t)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  v6 = __chkstk_darwin(v5);
  v102 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v103 = (char *)&v99 - v9;
  __chkstk_darwin(v8);
  v107 = (uint64_t)&v99 - v10;
  v11 = sub_100007E8C(&qword_10119E460);
  v12 = __chkstk_darwin(v11);
  v101 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v109 = (uint64_t)&v99 - v15;
  __chkstk_darwin(v14);
  v108 = (char *)&v99 - v16;
  v17 = type metadata accessor for MusicPropertySource(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v21);
  v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Playlist(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v99 - v30;
  __chkstk_darwin(v29);
  v33 = (char *)&v99 - v32;
  v110 = v2;
  v34 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v34, v115, 0, 0);
  v35 = v34;
  v36 = v25;
  sub_10004A160(v35, (uint64_t)v23, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_10004FF60((uint64_t)v23, &qword_1011A30F0);
    v37 = type metadata accessor for MetricsEvent.Page(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v112, 1, 1, v37);
  }
  v39 = v31;
  v99 = v28;
  v40 = v111;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v23, v24);
  v41 = v36;
  v42 = v110;
  v43 = v110 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v44 = swift_beginAccess(v110 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v114, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, v43, v17, v44);
  v45 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if ((_DWORD)v45 == enum case for MusicPropertySource.catalog(_:))
  {
    v46 = v42;
    v47 = Playlist.catalogID.getter(v45);
    v49 = v48;
    v50 = v24;
    v51 = *(uint64_t (**)(char *, char *))(v41 + 16);
    v52 = v39;
    v53 = v50;
    v54 = v51(v39, v33);
    if (v49)
    {
      v55 = v47;
    }
    else
    {
      v55 = Playlist.id.getter(v54);
      v49 = v70;
    }
    v71 = *(void (**)(char *, uint64_t))(v41 + 8);
    v71(v52, v53);
    v72 = v46 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sourceURL;
    swift_beginAccess(v46 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sourceURL, v113, 0, 0);
    v73 = v109;
    sub_10004A160(v72, v109, &qword_10119E460);
    v74 = v99;
    ((void (*)(char *, char *, uint64_t))v51)(v99, v33, v53);
    v75 = type metadata accessor for URL(0);
    v76 = *(_QWORD *)(v75 - 8);
    v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v73, 1, v75);
    if ((_DWORD)v77 == 1)
    {
      v78 = v74;
      v79 = (uint64_t)v108;
      Playlist.url.getter(v77);
      v71(v78, v53);
      v71(v33, v53);
      sub_10004FF60(v73, &qword_10119E460);
    }
    else
    {
      v71(v74, v53);
      v71(v33, v53);
      v79 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v108, v73, v75);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v79, 0, 1, v75);
    }
    v80 = v112;
    MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)(v55, v49, 0x7473696C79616C50, 0xE800000000000000, v79, 0, 0, 0, v112, 1, 0, 0);
    goto LABEL_28;
  }
  v56 = v20;
  v110 = v41;
  v57 = (uint64_t)v33;
  if ((_DWORD)v45 != enum case for MusicPropertySource.library(_:))
  {
    (*(void (**)(char *, uint64_t))(v110 + 8))(v33, v24);
    v69 = type metadata accessor for MetricsEvent.Page(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v112, 1, 1, v69);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v56, v17);
  }
  v58 = v107;
  v109 = v57;
  Playlist.variant.getter(v45);
  v59 = v40;
  v60 = *(void (**)(char *, _QWORD, uint64_t))(v40 + 104);
  v61 = (uint64_t)v103;
  v62 = v104;
  v60(v103, enum case for Playlist.Variant.favoriteSongs(_:), v104);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v62);
  v63 = v106;
  v64 = v106 + *(int *)(v105 + 48);
  sub_10004A160(v58, v106, (uint64_t *)&unk_1011CEF20);
  sub_10004A160(v61, v64, (uint64_t *)&unk_1011CEF20);
  v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v65(v63, 1, v62) == 1)
  {
    sub_10004FF60(v61, (uint64_t *)&unk_1011CEF20);
    sub_10004FF60(v58, (uint64_t *)&unk_1011CEF20);
    v66 = v65(v64, 1, v62);
    v67 = v110;
    if (v66 == 1)
    {
      v68 = sub_10004FF60(v63, (uint64_t *)&unk_1011CEF20);
LABEL_20:
      v87 = v109;
      v88 = Playlist.catalogID.getter(v68);
      if (v89)
        v90 = v88;
      else
        v90 = 0x657469726F766146;
      if (v89)
        v91 = v89;
      else
        v91 = 0xED000073676E6F53;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v87, v24);
      v92 = type metadata accessor for URL(0);
      v93 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v101, 1, 1, v92);
      v94 = v112;
      MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)(v90, v91, 0x7473696C79616C50, 0xE800000000000000, v93, 0, 0, 0, v112, 1, 0, 0);
      v95 = type metadata accessor for MetricsEvent.Page(0);
      v96 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56);
      v97 = v94;
      return v96(v97, 0, 1, v95);
    }
    goto LABEL_18;
  }
  v81 = v102;
  sub_10004A160(v63, v102, (uint64_t *)&unk_1011CEF20);
  if (v65(v64, 1, v62) == 1)
  {
    sub_10004FF60(v61, (uint64_t *)&unk_1011CEF20);
    sub_10004FF60(v107, (uint64_t *)&unk_1011CEF20);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v81, v62);
    v67 = v110;
LABEL_18:
    sub_10004FF60(v63, (uint64_t *)&unk_1011C66C0);
    goto LABEL_27;
  }
  v82 = v61;
  v83 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v100, v64, v62);
  v84 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v85 = dispatch thunk of static Equatable.== infix(_:_:)(v81, v83, v62, v84);
  v86 = *(void (**)(char *, uint64_t))(v59 + 8);
  v86(v83, v62);
  sub_10004FF60(v82, (uint64_t *)&unk_1011CEF20);
  sub_10004FF60(v107, (uint64_t *)&unk_1011CEF20);
  v86((char *)v81, v62);
  v68 = sub_10004FF60(v63, (uint64_t *)&unk_1011CEF20);
  v67 = v110;
  if ((v85 & 1) != 0)
    goto LABEL_20;
LABEL_27:
  v98 = MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor();
  v80 = v112;
  sub_10005B704(v98, (uint64_t)v112, type metadata accessor for MetricsEvent.Page);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v109, v24);
LABEL_28:
  v95 = type metadata accessor for MetricsEvent.Page(0);
  v96 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56);
  v97 = v80;
  return v96(v97, 0, 1, v95);
}

unint64_t sub_100966A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  __n128 v16;
  unint64_t v18;
  _OWORD v19[2];
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
  inited = swift_initStackObject(v8, &v23);
  *(_OWORD *)(inited + 16) = xmmword_100EA7BA0;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 48) = 0x7365746F6ELL;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  strcpy((char *)(inited + 80), "locationType");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(_QWORD *)(inited + 96) = 0x656E6961746E6F43;
  *(_QWORD *)(inited + 104) = 0xEF6C696174654472;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 1684957547;
  *(_QWORD *)(inited + 136) = 0xE400000000000000;
  *(_QWORD *)(inited + 144) = 0x7473696C79616C70;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  *(_QWORD *)(inited + 168) = &type metadata for String;
  *(_QWORD *)(inited + 176) = 0xD000000000000010;
  *(_QWORD *)(inited + 216) = &type metadata for Int;
  *(_QWORD *)(inited + 184) = 0x8000000100E3C560;
  *(_QWORD *)(inited + 192) = 0;
  v10 = sub_100041ADC(inited);
  v11 = v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v11, &v22, 0, 0);
  sub_10004A160(v11, (uint64_t)v3, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v3, &qword_1011A30F0);
  }
  else
  {
    v12.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v13 = Playlist.name.getter(v12);
    v21 = &type metadata for String;
    *(_QWORD *)&v20 = v13;
    *((_QWORD *)&v20 + 1) = v14;
    sub_100048ABC(&v20, v19);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    v18 = v10;
    sub_1005EE168(v19, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    v10 = v18;
    v16 = swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  }
  return v10;
}

uint64_t sub_100966CD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _BYTE v36[24];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - v6;
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v33 - v9);
  v11 = type metadata accessor for MetricsEvent.Page(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100966168(v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A8780);
    v15 = type metadata accessor for Actions.MetricsReportingContext(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  else
  {
    v35 = a1;
    sub_10005B6C0((uint64_t)v10, (uint64_t)v14, type metadata accessor for MetricsEvent.Page);
    sub_10005B704((uint64_t)v14, (uint64_t)v7, type metadata accessor for MetricsEvent.Page);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    v17 = sub_100007E8C((uint64_t *)&unk_1011AE300);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v18 + 32) = sub_100966A54();
    sub_10004A160((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1011A8780);
    v19 = MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v34 = v20;
    v22 = v21;
    v23 = qword_10119B8B8;
    v24 = (id)*v19;
    if (v23 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v25 = qword_10124C790;
    swift_retain();
    v26 = GroupActivitiesManager.hasJoined.getter();
    v27 = GroupActivitiesManager.participantsCount.getter();
    v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v36, 0, 0);
    v29 = *v28;

    swift_release();
    v32 = v27;
    v30 = v35;
    Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 6, (uint64_t)v4, v34, v22, v18, 0, v26 & 1, v35, v32, v29);
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A8780);
    sub_10005B748((uint64_t)v14, type metadata accessor for MetricsEvent.Page);
    v31 = type metadata accessor for Actions.MetricsReportingContext(0);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t sub_100966FAC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _BYTE v36[24];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v33 - v7;
  __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v33 - v9);
  v11 = type metadata accessor for MetricsEvent.Page(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100966168(v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A8780);
    v15 = type metadata accessor for Actions.MetricsReportingContext(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  else
  {
    v35 = a1;
    sub_10005B6C0((uint64_t)v10, (uint64_t)v14, type metadata accessor for MetricsEvent.Page);
    sub_10005B704((uint64_t)v14, (uint64_t)v8, type metadata accessor for MetricsEvent.Page);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    v17 = sub_100007E8C((uint64_t *)&unk_1011AE300);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v18 + 32) = sub_100966A54();
    sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A8780);
    v19 = MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v34 = v20;
    v22 = v21;
    v23 = qword_10119B8B8;
    v24 = (id)*v19;
    if (v23 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v25 = qword_10124C790;
    swift_retain(qword_10124C790);
    v26 = GroupActivitiesManager.hasJoined.getter();
    v27 = GroupActivitiesManager.participantsCount.getter();
    v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v36, 0, 0);
    v29 = *v28;

    swift_release(v25);
    v32 = v27;
    v30 = v35;
    Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v5, v34, v22, v18, 0, v26 & 1, v35, v32, v29);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A8780);
    sub_10005B748((uint64_t)v14, type metadata accessor for MetricsEvent.Page);
    v31 = type metadata accessor for Actions.MetricsReportingContext(0);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t sub_1009672B0(uint64_t *a1, uint64_t *a2)
{
  return sub_10096E184(*a1, *a2);
}

uint64_t sub_1009672BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000A5508(a1, v3, (uint64_t *)&unk_1011B6910);
  return swift_endAccess(v5);
}

uint64_t sub_100967320()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playActivityFeatureIdentifier);
}

uint64_t sub_100967334()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_100967370(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID);
  v4 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease(v4);
}

double sub_100967390(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  sub_100956A7C(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1009673D0()
{
  return sub_100935E18();
}

uint64_t sub_1009673F0(uint64_t a1)
{
  return sub_10093726C(a1);
}

uint64_t sub_100967410@<X0>(uint64_t a1@<X8>)
{
  return sub_1004C2CFC(&OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentItemIndexPath, (uint64_t *)&unk_1011A3D50, a1);
}

BOOL sub_100967424()
{
  return sub_100937304();
}

uint64_t sub_100967448@<X0>(uint64_t a1@<X8>)
{
  return sub_1009374CC(a1);
}

uint64_t sub_100967468@<X0>(uint64_t a1@<X8>)
{
  return sub_100937958(a1);
}

uint64_t sub_100967488@<X0>(uint64_t a1@<X8>)
{
  return sub_100937ABC(a1);
}

uint64_t sub_1009674A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1004C2CFC(&OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_artwork, &qword_1011A1440, a1);
}

uint64_t sub_1009674BC()
{
  return sub_100937EF4();
}

uint64_t sub_1009674DC()
{
  return sub_100938048();
}

uint64_t sub_1009674FC()
{
  return sub_100938194() & 1;
}

void sub_100967520(uint64_t a1)
{
  _QWORD *v1;
  void *v2;

  v2 = *(void **)(*v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_containerDetailLink);
  *(_QWORD *)(*v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_containerDetailLink) = a1;

}

uint64_t sub_100967538()
{
  return sub_10093840C() & 1;
}

uint64_t sub_10096755C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  _BYTE v12[24];

  v3 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v6, v12, 0, 0);
  sub_10004A160(v6, (uint64_t)v5, &qword_1011A30F0);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    result = sub_10004FF60((uint64_t)v5, &qword_1011A30F0);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = &off_1010CDE90;
    v10 = sub_100049F68((_QWORD *)a1);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v8 + 32))(v10, v5, v7);
  }
  return result;
}

uint64_t sub_100967668@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for MusicPropertySource(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1009676D0()
{
  uint64_t v0;

  v0 = *AccessibilityIdentifier.playlistView.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100967700()
{
  uint64_t v0;

  if (qword_10119BE40 != -1)
    swift_once(&qword_10119BE40, sub_1002F3F20);
  v0 = qword_10124CD30;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10096775C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100966168(a1);
}

uint64_t sub_10096777C()
{
  return sub_100955238();
}

uint64_t sub_10096779C()
{
  _QWORD *v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;

  v1 = (unint64_t *)(*v0 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_presentedLoadingState);
  v2 = *v1;
  if ((*v1 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL)
    return 0;
  if (!(v2 >> 62))
    return *v1 & 1;
  v4 = v1[1];
  v5 = v1[2];
  if (v2 >> 62 == 1)
  {
    v3 = *v1 & 1;
    sub_1004C826C(v2, v4, v5);
  }
  else
  {
    if (v2 == 0x8000000000000000 && (v5 | v4) == 0)
      v7 = 0x8000000000000000;
    else
      v7 = 0x8000000000000001;
    sub_1004C826C(v7, 0, 0);
    return 1;
  }
  return v3;
}

double sub_100967844()
{
  return sub_100938C2C();
}

double sub_100967864(__int128 *a1)
{
  return sub_10093A394(a1);
}

void sub_100967884()
{
  sub_100952C70(0);
}

uint64_t sub_1009678A8(uint64_t a1)
{
  _QWORD *v1;
  unsigned __int8 v3;

  Array.subscript.getter(a1, *(_QWORD *)(*v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections), (uint64_t)&type metadata for ContainerDetail.Section, (uint64_t)&v3);
  return v3;
}

uint64_t sub_1009678E4(unsigned __int8 a1)
{
  return sub_10093A524(a1);
}

id sub_100967908()
{
  return sub_10093A5A0();
}

id sub_100967928(uint64_t a1)
{
  return sub_10093AB88(a1);
}

unint64_t sub_100967948()
{
  return sub_10093AF04();
}

uint64_t sub_100967968()
{
  return sub_10093B2B4();
}

double sub_100967988(char a1)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  _QWORD v6[3];
  char v7;
  uint64_t v8;

  v2 = sub_10095376C();
  KeyPath = swift_getKeyPath(&unk_100ED7B90);
  v6[2] = v2;
  v7 = a1;
  v8 = v2;
  v4 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1004C8230, v6, (char *)&type metadata for () + 8, v4);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100967A48()
{
  sub_1009388BC();
}

unint64_t sub_100967A68()
{
  return sub_10093B404();
}

double sub_100967A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v12[24];

  v3 = type metadata accessor for MusicPropertySource(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1 >> 30 != 1
    && (a1 >> 30 != 2 || a1 != 2147483652)
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_allowsCatalogFallback) & 1) != 0)
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for MusicPropertySource.library(_:), v3, v5);
    v8 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
    v9 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v12, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 40))(v8, v7, v3, v9);
    swift_endAccess(v12);
    v5.n128_f64[0] = sub_100939D7C();
  }
  return v5.n128_f64[0];
}

uint64_t Playlist.Entry.mappingContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  v4 = enum case for MusicLibraryMapping.ItemContent.fetchedCatalogItem<A>(_:);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D0700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t sub_100967BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011B5160, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
  return MusicLibraryMappingItem<>.mappingID.getter(a1, a2, v4);
}

uint64_t sub_100967C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
  v4 = enum case for MusicLibraryMapping.ItemContent.fetchedCatalogItem<A>(_:);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D0700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

uint64_t Playlist.mappingContent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21[15] = 5;
  v7 = sub_10004D63C();
  v8 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v7);
  if ((v8 & 1) != 0
    || (Playlist.artwork.getter(v8),
        v9 = type metadata accessor for Artwork(0),
        v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9),
        sub_10004FF60((uint64_t)v6, &qword_1011A1440),
        v10 != 1))
  {
    v17 = type metadata accessor for Playlist(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, v2, v17);
    v16 = (unsigned int *)&enum case for MusicLibraryMapping.ItemContent.fetchedCatalogItem<A>(_:);
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011B6470);
    v12 = (char *)a1 + *(int *)(v11 + 48);
    *a1 = Playlist.id.getter(v11);
    a1[1] = v13;
    v14 = enum case for MusicLibraryMapping.ItemKind.playlist(_:);
    v15 = type metadata accessor for MusicLibraryMapping.ItemKind(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v12, v14, v15);
    v16 = (unsigned int *)&enum case for MusicLibraryMapping.ItemContent.unfetchedItem<A>(_:);
  }
  v18 = *v16;
  v19 = sub_100007E8C(&qword_1011D0710);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a1, v18, v19);
}

void *sub_100967E24()
{
  return &protocol witness table for Playlist.Entry;
}

void *sub_100967E30()
{
  return &protocol witness table for Playlist;
}

uint64_t sub_100967E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748((unint64_t *)&unk_1011D1510, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  return MusicLibraryMappingItem<>.mappingID.getter(a1, a2, v4);
}

uint64_t sub_100967E94()
{
  return type metadata accessor for PlaylistDetailDataSource(0);
}

uint64_t type metadata accessor for PlaylistDetailDataSource(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011D09A8, (uint64_t)&nominal type descriptor for PlaylistDetailDataSource);
}

void sub_100967EB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[7];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  const char *v70;
  void *v71;
  const char *v72;
  const char *v73;
  const char *v74;
  const char *v75;
  uint64_t v76;
  const char *v77;
  const char *v78;
  uint64_t v79;
  const char *v80;
  const char *v81;
  const char *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  void *v93;
  const char *v94;
  const char *v95;
  char *v96;
  char *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  char *v102;
  void *v103;
  char *v104;
  void *v105;
  void *v106;
  const char *v107;
  const char *v108;
  const char *v109;
  const char *v110;
  const char *v111;
  void *v112;
  const char *v113;
  void *v114;
  void *v115;

  v44[0] = "\b";
  sub_1001AB544(319, &qword_1011D09F0, &qword_1011D09F8);
  if (v3 <= 0x3F)
  {
    v44[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, &qword_1011D0A00, &qword_1011D0A08);
    if (v5 <= 0x3F)
    {
      v44[2] = *(_QWORD *)(v4 - 8) + 64;
      v44[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      sub_1001AB544(319, &qword_1011D0A10, &qword_1011D0A18);
      if (v7 <= 0x3F)
      {
        v44[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001AB544(319, &qword_1011A96B0, &qword_1011A96B8);
        if (v9 <= 0x3F)
        {
          v44[5] = *(_QWORD *)(v8 - 8) + 64;
          sub_1001AB544(319, (unint64_t *)&unk_1011D0A20, &qword_1011AD6C0);
          if (v11 <= 0x3F)
          {
            v44[6] = *(_QWORD *)(v10 - 8) + 64;
            sub_1001AB544(319, &qword_1011D0A30, &qword_1011D0A38);
            if (v13 <= 0x3F)
            {
              v45 = *(_QWORD *)(v12 - 8) + 64;
              v46 = v45;
              sub_100968364(319, (unint64_t *)&unk_1011D0A40, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr, type metadata accessor for TracklistFooter.ViewModel);
              if (v15 <= 0x3F)
              {
                v47 = *(_QWORD *)(v14 - 8) + 64;
                sub_1001AB544(319, &qword_1011D0A50, &qword_1011D0A58);
                if (v17 <= 0x3F)
                {
                  v48 = *(_QWORD *)(v16 - 8) + 64;
                  sub_1001AB544(319, (unint64_t *)&unk_1011D0A60, (uint64_t *)&unk_1011B6680);
                  if (v19 <= 0x3F)
                  {
                    v49 = *(_QWORD *)(v18 - 8) + 64;
                    sub_100968364(319, (unint64_t *)&qword_1011D0A70, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr, type metadata accessor for RelatedContentSpacing.Data);
                    if (v21 <= 0x3F)
                    {
                      v50 = *(_QWORD *)(v20 - 8) + 64;
                      sub_1001AB544(319, (unint64_t *)&unk_1011D0A80, (uint64_t *)&unk_1011B6690);
                      if (v23 <= 0x3F)
                      {
                        v51 = *(_QWORD *)(v22 - 8) + 64;
                        v52 = &unk_100ED79E8;
                        v53 = &unk_100ED7A00;
                        v54 = &unk_100ED7A18;
                        v55 = &unk_100ED7A30;
                        v56 = &unk_100ED7A48;
                        sub_10015C698(319, (unint64_t *)&unk_1011D0A90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
                        if (v25 <= 0x3F)
                        {
                          v26 = *(_QWORD *)(v24 - 8) + 64;
                          v57 = v26;
                          v58 = &unk_100ED7A60;
                          sub_10015C698(319, (unint64_t *)&qword_1011B66A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork);
                          if (v28 <= 0x3F)
                          {
                            v59 = *(_QWORD *)(v27 - 8) + 64;
                            v60 = &unk_100ED7A30;
                            v61 = &unk_100ED7A78;
                            sub_10015C698(319, (unint64_t *)&qword_1011C46C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist);
                            if (v30 <= 0x3F)
                            {
                              v31 = *(_QWORD *)(v29 - 8) + 64;
                              v62 = v31;
                              v32 = type metadata accessor for MusicPropertySource(319);
                              if (v33 <= 0x3F)
                              {
                                v63 = *(_QWORD *)(v32 - 8) + 64;
                                v64 = &unk_100ED7A48;
                                v65 = &unk_100ED7A48;
                                v66 = &unk_100ED7A48;
                                v67 = &unk_100ED7A48;
                                v68 = "\b";
                                sub_10015C698(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
                                if (v35 <= 0x3F)
                                {
                                  v36 = *(_QWORD *)(v34 - 8) + 64;
                                  v69 = v36;
                                  v70 = "\b";
                                  v71 = &unk_100ED7A90;
                                  v72 = "\b";
                                  v73 = "\b";
                                  v74 = "\b";
                                  v75 = "\b";
                                  sub_10015C698(319, &qword_1011D0AA0, type metadata accessor for PlaylistDetailDataSource.CollaborationDetails);
                                  if (v38 <= 0x3F)
                                  {
                                    v76 = *(_QWORD *)(v37 - 8) + 64;
                                    v77 = "\b";
                                    v78 = "\b";
                                    v79 = v36;
                                    v80 = "\b";
                                    v81 = "\b";
                                    v82 = "\b";
                                    v83 = "\b";
                                    v84 = v31;
                                    sub_1001AB544(319, &qword_1011D0AA8, (uint64_t *)&unk_1011ACC20);
                                    if (v40 <= 0x3F)
                                    {
                                      v41 = *(_QWORD *)(v39 - 8) + 64;
                                      v85 = v41;
                                      v86 = &unk_100ED7AA8;
                                      v87 = v26;
                                      v88 = &unk_100ED7A48;
                                      v89 = (char *)&value witness table for Builtin.BridgeObject + 64;
                                      v90 = &unk_100ED7A48;
                                      v91 = "\b";
                                      sub_10015C698(319, &qword_1011B66B8, type metadata accessor for ContainerDetail.AttributionItem);
                                      if (v43 <= 0x3F)
                                      {
                                        v92 = *(_QWORD *)(v42 - 8) + 64;
                                        v93 = &unk_100ED7A48;
                                        v94 = "\b";
                                        v95 = "\b";
                                        v96 = (char *)&value witness table for Builtin.BridgeObject + 64;
                                        v97 = (char *)&value witness table for Builtin.BridgeObject + 64;
                                        v98 = &unk_100ED7A48;
                                        v99 = v41;
                                        v100 = v41;
                                        v101 = &unk_100ED7A18;
                                        v102 = (char *)&value witness table for Builtin.BridgeObject + 64;
                                        v103 = &unk_100ED7A48;
                                        v104 = (char *)&value witness table for Builtin.NativeObject + 64;
                                        v105 = &unk_100ED7A48;
                                        v106 = &unk_100ED7A48;
                                        v107 = "\b";
                                        v108 = "\b";
                                        v109 = "\b";
                                        v110 = "\b";
                                        v111 = "\b";
                                        v112 = &unk_100ED7A18;
                                        v113 = "\b";
                                        v114 = &unk_100ED7A48;
                                        v115 = &unk_100ED7A48;
                                        swift_updateClassMetadata2(a1, 256, 78, v44, a1 + 80);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100968364(uint64_t a1, unint64_t *a2, unint64_t *a3, _QWORD *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v8 = sub_10004A07C(255, a3, a4);
    v9 = a5(255);
    v10 = type metadata accessor for UICollectionView.CellRegistration(a1, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t type metadata accessor for PlaylistDetailDataSource.CollaborationDetails(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D0B08, (uint64_t)&nominal type descriptor for PlaylistDetailDataSource.CollaborationDetails);
}

ValueMetadata *type metadata accessor for PlaylistDetailDataSource.AutoupdatingResponse()
{
  return &type metadata for PlaylistDetailDataSource.AutoupdatingResponse;
}

uint64_t *sub_1009683F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Collaboration(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t sub_100968494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Playlist.Collaboration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_1009684E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Collaboration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_100968554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Playlist.Collaboration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_1009685DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Playlist.Collaboration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100968640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Collaboration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(int *)(a3 + 24);
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_1009686B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009686C4);
}

uint64_t sub_1009686C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Playlist.Collaboration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100968740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10096874C);
}

uint64_t sub_10096874C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Playlist.Collaboration(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1009687C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Playlist.Collaboration(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10096883C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124DDD0);
  sub_100048B14(v0, (uint64_t)qword_10124DDD0);
  return static Logger.music(_:)(0x7473696C79616C50, 0xEF676E6974696445);
}

uint64_t sub_1009688A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED7D88);
  v5 = swift_getKeyPath(&unk_100ED7DB0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_10096890C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, &qword_1011A2290);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED7D88);
  v12 = swift_getKeyPath(&unk_100ED7DB0);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011A2290);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_10004FF60((uint64_t)v9, &qword_1011A2290);
}

double sub_100968A04@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED80C8);
  v5 = swift_getKeyPath(&unk_100ED80F0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100968A80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED80C8);
  v5 = swift_getKeyPath(&unk_100ED80F0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100968AF8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ED7C70);
  v5 = swift_getKeyPath(&unk_100ED7C98);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100968B74(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ED7C70);
  v5 = swift_getKeyPath(&unk_100ED7C98);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

id sub_100968BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

uint64_t sub_100968C5C(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  void (*v71)(char *, uint64_t, __n128);
  char *v73;
  uint64_t v74;
  char *v75;
  uint8_t *v76;
  uint64_t v77;
  uint8_t *v78;
  __int128 v79[2];
  _QWORD v80[5];
  uint64_t v81;
  char v82;

  v74 = a3;
  v78 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v77 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v73 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v73 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v73 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v76 = (uint8_t *)&v73 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v73 - v21;
  v23 = type metadata accessor for MusicVideo(0);
  v80[3] = v23;
  v80[4] = &protocol witness table for MusicVideo;
  v24 = sub_100049F68(v80);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v78, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v78 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v11, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v57 = v11;
      v58 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v77, 1, 1, v58);
      v59 = v75;
      v28(v75, v14, v30);
      sub_100064AC8(v74, (uint64_t)&v81);
      type metadata accessor for MainActor(0);
      v61 = static MainActor.shared.getter(v60);
      v62 = *(unsigned __int8 *)(v7 + 80);
      v63 = (v62 + 32) & ~v62;
      v64 = v62 | 7;
      v65 = v8 + v63 + 7;
      v66 = v14;
      v67 = v65 & 0xFFFFFFFFFFFFFFF8;
      v68 = swift_allocObject(&unk_1010E4728, (v65 & 0xFFFFFFFFFFFFFFF8) + 72, v64);
      *(_QWORD *)(v68 + 16) = v61;
      *(_QWORD *)(v68 + 24) = &protocol witness table for MainActor;
      v27((char *)(v68 + v63), v59, v30);
      sub_100064EF0((uint64_t)&v81, v68 + v67);
      v69 = sub_100166D14(v77, (uint64_t)&unk_1011D1458, v68);
      v70 = swift_release(v69);
      v71 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v71(v66, v30, v70);
      ((void (*)(char *, uint64_t))v71)(v57, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v81);
    sub_100065184(&v81);
    if ((v82 & 1) != 0)
    {
LABEL_11:
      v50 = type metadata accessor for TaskPriority(0);
      v51 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v77, 1, 1, v50);
      sub_100064C78((uint64_t)v80, (uint64_t)v79);
      type metadata accessor for MainActor(0);
      v53 = static MainActor.shared.getter(v52);
      v54 = swift_allocObject(&unk_1010E4750, 72, 7);
      *(_QWORD *)(v54 + 16) = v53;
      *(_QWORD *)(v54 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v79, v54 + 32);
      v34 = &unk_1011D1460;
      v35 = v51;
      v36 = v54;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v77, 1, 1, v31);
      sub_100064C78((uint64_t)v80, (uint64_t)v79);
      v33 = swift_allocObject(&unk_1010E4778, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v79, v33 + 32);
      v34 = &unk_1011D1468;
      v35 = v32;
      v36 = v33;
    }
    v55 = sub_100166D14(v35, (uint64_t)v34, v36);
    v56 = swift_release(v55);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v56);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v76;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v76, v78, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v81 = v44;
      *(_DWORD *)v43 = 136315138;
      v78 = v43 + 4;
      v45 = v73;
      v25(v73, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      v48 = v47;
      *(_QWORD *)&v79[0] = sub_100322200(v46, v47, &v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, (char *)v79 + 8);
      v49 = swift_bridgeObjectRelease(v48);
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v49);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
}

uint64_t sub_1009692CC(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t, __n128);
  char *v70;
  uint64_t v71;
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  uint8_t *v75;
  __int128 v76[2];
  _QWORD v77[5];
  uint64_t v78;
  char v79;

  v71 = a3;
  v75 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v74 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v72 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v70 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v73 = (uint8_t *)&v70 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  v23 = type metadata accessor for Track(0);
  v77[3] = v23;
  v77[4] = &protocol witness table for Track;
  v24 = sub_100049F68(v77);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v75, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v75 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v11, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v55 = v11;
      v56 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
      v57 = v72;
      v28(v72, v14, v30);
      sub_100064AC8(v71, (uint64_t)&v78);
      type metadata accessor for MainActor(0);
      v59 = static MainActor.shared.getter(v58);
      v60 = *(unsigned __int8 *)(v7 + 80);
      v61 = (v60 + 32) & ~v60;
      v62 = v60 | 7;
      v63 = v8 + v61 + 7;
      v64 = v14;
      v65 = v63 & 0xFFFFFFFFFFFFFFF8;
      v66 = swift_allocObject(&unk_1010E4890, (v63 & 0xFFFFFFFFFFFFFFF8) + 72, v62);
      *(_QWORD *)(v66 + 16) = v59;
      *(_QWORD *)(v66 + 24) = &protocol witness table for MainActor;
      v27((char *)(v66 + v61), v57, v30);
      sub_100064EF0((uint64_t)&v78, v66 + v65);
      sub_100166D14(v74, (uint64_t)&unk_1011D1478, v66);
      v67 = swift_release();
      v68 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v68(v64, v30, v67);
      ((void (*)(char *, uint64_t))v68)(v55, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v78);
    sub_100065184(&v78);
    if ((v79 & 1) != 0)
    {
LABEL_11:
      v49 = type metadata accessor for TaskPriority(0);
      v50 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v74, 1, 1, v49);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      type metadata accessor for MainActor(0);
      v52 = static MainActor.shared.getter(v51);
      v53 = swift_allocObject(&unk_1010E48B8, 72, 7);
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v76, v53 + 32);
      v34 = &unk_1011D1480;
      v35 = v50;
      v36 = v53;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v74, 1, 1, v31);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      v33 = swift_allocObject(&unk_1010E48E0, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v76, v33 + 32);
      v34 = &unk_1011D1488;
      v35 = v32;
      v36 = v33;
    }
    sub_100166D14(v35, (uint64_t)v34, v36);
    v54 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v54);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v73;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v73, v75, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v78 = v44;
      *(_DWORD *)v43 = 136315138;
      v75 = v43 + 4;
      v45 = v70;
      v25(v70, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      *(_QWORD *)&v76[0] = sub_100322200(v46, v47, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, (char *)v76 + 8);
      v48 = swift_bridgeObjectRelease();
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
}

uint64_t sub_10096993C(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t, __n128);
  char *v70;
  uint64_t v71;
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  uint8_t *v75;
  __int128 v76[2];
  _QWORD v77[5];
  uint64_t v78;
  char v79;

  v71 = a3;
  v75 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v74 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v72 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v70 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v73 = (uint8_t *)&v70 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  v23 = type metadata accessor for Album(0);
  v77[3] = v23;
  v77[4] = &protocol witness table for Album;
  v24 = sub_100049F68(v77);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v75, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v75 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v11, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v55 = v11;
      v56 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
      v57 = v72;
      v28(v72, v14, v30);
      sub_100064AC8(v71, (uint64_t)&v78);
      type metadata accessor for MainActor(0);
      v59 = static MainActor.shared.getter(v58);
      v60 = *(unsigned __int8 *)(v7 + 80);
      v61 = (v60 + 32) & ~v60;
      v62 = v60 | 7;
      v63 = v8 + v61 + 7;
      v64 = v14;
      v65 = v63 & 0xFFFFFFFFFFFFFFF8;
      v66 = swift_allocObject(&unk_1010E4908, (v63 & 0xFFFFFFFFFFFFFFF8) + 72, v62);
      *(_QWORD *)(v66 + 16) = v59;
      *(_QWORD *)(v66 + 24) = &protocol witness table for MainActor;
      v27((char *)(v66 + v61), v57, v30);
      sub_100064EF0((uint64_t)&v78, v66 + v65);
      sub_100166D14(v74, (uint64_t)&unk_1011D1490, v66);
      v67 = swift_release();
      v68 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v68(v64, v30, v67);
      ((void (*)(char *, uint64_t))v68)(v55, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v78);
    sub_100065184(&v78);
    if ((v79 & 1) != 0)
    {
LABEL_11:
      v49 = type metadata accessor for TaskPriority(0);
      v50 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v74, 1, 1, v49);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      type metadata accessor for MainActor(0);
      v52 = static MainActor.shared.getter(v51);
      v53 = swift_allocObject(&unk_1010E4930, 72, 7);
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v76, v53 + 32);
      v34 = &unk_1011D1498;
      v35 = v50;
      v36 = v53;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v74, 1, 1, v31);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      v33 = swift_allocObject(&unk_1010E4958, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v76, v33 + 32);
      v34 = &unk_1011D14A0;
      v35 = v32;
      v36 = v33;
    }
    sub_100166D14(v35, (uint64_t)v34, v36);
    v54 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v54);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v73;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v73, v75, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v78 = v44;
      *(_DWORD *)v43 = 136315138;
      v75 = v43 + 4;
      v45 = v70;
      v25(v70, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      *(_QWORD *)&v76[0] = sub_100322200(v46, v47, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, (char *)v76 + 8);
      v48 = swift_bridgeObjectRelease();
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
}

uint64_t sub_100969FAC(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t, __n128);
  char *v70;
  uint64_t v71;
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  uint8_t *v75;
  __int128 v76[2];
  _QWORD v77[5];
  uint64_t v78;
  char v79;

  v71 = a3;
  v75 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v74 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v72 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v70 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v73 = (uint8_t *)&v70 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  v23 = type metadata accessor for Song(0);
  v77[3] = v23;
  v77[4] = &protocol witness table for Song;
  v24 = sub_100049F68(v77);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v75, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v75 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v11, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v55 = v11;
      v56 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
      v57 = v72;
      v28(v72, v14, v30);
      sub_100064AC8(v71, (uint64_t)&v78);
      type metadata accessor for MainActor(0);
      v59 = static MainActor.shared.getter(v58);
      v60 = *(unsigned __int8 *)(v7 + 80);
      v61 = (v60 + 32) & ~v60;
      v62 = v60 | 7;
      v63 = v8 + v61 + 7;
      v64 = v14;
      v65 = v63 & 0xFFFFFFFFFFFFFFF8;
      v66 = swift_allocObject(&unk_1010E45C0, (v63 & 0xFFFFFFFFFFFFFFF8) + 72, v62);
      *(_QWORD *)(v66 + 16) = v59;
      *(_QWORD *)(v66 + 24) = &protocol witness table for MainActor;
      v27((char *)(v66 + v61), v57, v30);
      sub_100064EF0((uint64_t)&v78, v66 + v65);
      sub_100166D14(v74, (uint64_t)&unk_1011D1440, v66);
      v67 = swift_release();
      v68 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v68(v64, v30, v67);
      ((void (*)(char *, uint64_t))v68)(v55, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v78);
    sub_100065184(&v78);
    if ((v79 & 1) != 0)
    {
LABEL_11:
      v49 = type metadata accessor for TaskPriority(0);
      v50 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v74, 1, 1, v49);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      type metadata accessor for MainActor(0);
      v52 = static MainActor.shared.getter(v51);
      v53 = swift_allocObject(&unk_1010E45E8, 72, 7);
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v76, v53 + 32);
      v34 = &unk_1011D1448;
      v35 = v50;
      v36 = v53;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v74, 1, 1, v31);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      v33 = swift_allocObject(&unk_1010E4610, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v76, v33 + 32);
      v34 = &unk_1011D1450;
      v35 = v32;
      v36 = v33;
    }
    sub_100166D14(v35, (uint64_t)v34, v36);
    v54 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v54);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v73;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v73, v75, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v78 = v44;
      *(_DWORD *)v43 = 136315138;
      v75 = v43 + 4;
      v45 = v70;
      v25(v70, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      *(_QWORD *)&v76[0] = sub_100322200(v46, v47, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, (char *)v76 + 8);
      v48 = swift_bridgeObjectRelease();
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
}

uint64_t sub_10096A61C(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t, __n128);
  char *v70;
  uint64_t v71;
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  uint8_t *v75;
  __int128 v76[2];
  _QWORD v77[5];
  uint64_t v78;
  char v79;

  v71 = a3;
  v75 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v74 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v72 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v70 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v73 = (uint8_t *)&v70 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  v23 = type metadata accessor for TVEpisode(0);
  v77[3] = v23;
  v77[4] = sub_100048748(&qword_1011A0550, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v24 = sub_100049F68(v77);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v75, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v75 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v11, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v55 = v11;
      v56 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
      v57 = v72;
      v28(v72, v14, v30);
      sub_100064AC8(v71, (uint64_t)&v78);
      type metadata accessor for MainActor(0);
      v59 = static MainActor.shared.getter(v58);
      v60 = *(unsigned __int8 *)(v7 + 80);
      v61 = (v60 + 32) & ~v60;
      v62 = v60 | 7;
      v63 = v8 + v61 + 7;
      v64 = v14;
      v65 = v63 & 0xFFFFFFFFFFFFFFF8;
      v66 = swift_allocObject(&unk_1010E4548, (v63 & 0xFFFFFFFFFFFFFFF8) + 72, v62);
      *(_QWORD *)(v66 + 16) = v59;
      *(_QWORD *)(v66 + 24) = &protocol witness table for MainActor;
      v27((char *)(v66 + v61), v57, v30);
      sub_100064EF0((uint64_t)&v78, v66 + v65);
      sub_100166D14(v74, (uint64_t)&unk_1011D1420, v66);
      v67 = swift_release();
      v68 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v68(v64, v30, v67);
      ((void (*)(char *, uint64_t))v68)(v55, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v78);
    sub_100065184(&v78);
    if ((v79 & 1) != 0)
    {
LABEL_11:
      v49 = type metadata accessor for TaskPriority(0);
      v50 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v74, 1, 1, v49);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      type metadata accessor for MainActor(0);
      v52 = static MainActor.shared.getter(v51);
      v53 = swift_allocObject(&unk_1010E4570, 72, 7);
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v76, v53 + 32);
      v34 = &unk_1011D1428;
      v35 = v50;
      v36 = v53;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v74, 1, 1, v31);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      v33 = swift_allocObject(&unk_1010E4598, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v76, v33 + 32);
      v34 = &unk_1011D1430;
      v35 = v32;
      v36 = v33;
    }
    sub_100166D14(v35, (uint64_t)v34, v36);
    v54 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v54);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v73;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v73, v75, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v78 = v44;
      *(_DWORD *)v43 = 136315138;
      v75 = v43 + 4;
      v45 = v70;
      v25(v70, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      *(_QWORD *)&v76[0] = sub_100322200(v46, v47, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, (char *)v76 + 8);
      v48 = swift_bridgeObjectRelease();
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
}

uint64_t sub_10096ACA4(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t, __n128);
  char *v70;
  uint64_t v71;
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  uint8_t *v75;
  __int128 v76[2];
  _QWORD v77[5];
  uint64_t v78;
  char v79;

  v71 = a3;
  v75 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v74 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v72 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v70 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v73 = (uint8_t *)&v70 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  v23 = type metadata accessor for MusicMovie(0);
  v77[3] = v23;
  v77[4] = sub_100048748((unint64_t *)&unk_1011A99C0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v24 = sub_100049F68(v77);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v75, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v75 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v11, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v55 = v11;
      v56 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
      v57 = v72;
      v28(v72, v14, v30);
      sub_100064AC8(v71, (uint64_t)&v78);
      type metadata accessor for MainActor(0);
      v59 = static MainActor.shared.getter(v58);
      v60 = *(unsigned __int8 *)(v7 + 80);
      v61 = (v60 + 32) & ~v60;
      v62 = v60 | 7;
      v63 = v8 + v61 + 7;
      v64 = v14;
      v65 = v63 & 0xFFFFFFFFFFFFFFF8;
      v66 = swift_allocObject(&unk_1010E44D0, (v63 & 0xFFFFFFFFFFFFFFF8) + 72, v62);
      *(_QWORD *)(v66 + 16) = v59;
      *(_QWORD *)(v66 + 24) = &protocol witness table for MainActor;
      v27((char *)(v66 + v61), v57, v30);
      sub_100064EF0((uint64_t)&v78, v66 + v65);
      sub_100166D14(v74, (uint64_t)&unk_1011D13F8, v66);
      v67 = swift_release();
      v68 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v68(v64, v30, v67);
      ((void (*)(char *, uint64_t))v68)(v55, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v78);
    sub_100065184(&v78);
    if ((v79 & 1) != 0)
    {
LABEL_11:
      v49 = type metadata accessor for TaskPriority(0);
      v50 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v74, 1, 1, v49);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      type metadata accessor for MainActor(0);
      v52 = static MainActor.shared.getter(v51);
      v53 = swift_allocObject(&unk_1010E44F8, 72, 7);
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v76, v53 + 32);
      v34 = &unk_1011D1400;
      v35 = v50;
      v36 = v53;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v74, 1, 1, v31);
      sub_100064C78((uint64_t)v77, (uint64_t)v76);
      v33 = swift_allocObject(&unk_1010E4520, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v76, v33 + 32);
      v34 = &unk_1011D1408;
      v35 = v32;
      v36 = v33;
    }
    sub_100166D14(v35, (uint64_t)v34, v36);
    v54 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v54);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v73;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v73, v75, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v78 = v44;
      *(_DWORD *)v43 = 136315138;
      v75 = v43 + 4;
      v45 = v70;
      v25(v70, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      *(_QWORD *)&v76[0] = sub_100322200(v46, v47, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, (char *)v76 + 8);
      v48 = swift_bridgeObjectRelease();
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v77);
}

uint64_t sub_10096B32C(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  void (*v71)(char *, uint64_t, __n128);
  char *v73;
  uint64_t v74;
  char *v75;
  uint8_t *v76;
  uint64_t v77;
  uint8_t *v78;
  __int128 v79[2];
  _QWORD v80[5];
  uint64_t v81;
  char v82;

  v74 = a3;
  v78 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v77 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v73 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v73 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v73 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v76 = (uint8_t *)&v73 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v73 - v21;
  v23 = type metadata accessor for Playlist.Entry(0);
  v80[3] = v23;
  v80[4] = &protocol witness table for Playlist.Entry;
  v24 = sub_100049F68(v80);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v78, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v78 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v12, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v57 = v12;
      v58 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v77, 1, 1, v58);
      v59 = v75;
      v28(v75, v14, v30);
      sub_100064AC8(v74, (uint64_t)&v81);
      type metadata accessor for MainActor(0);
      v61 = static MainActor.shared.getter(v60);
      v62 = *(unsigned __int8 *)(v7 + 80);
      v63 = (v62 + 32) & ~v62;
      v64 = v62 | 7;
      v65 = v8 + v63 + 7;
      v66 = v14;
      v67 = v65 & 0xFFFFFFFFFFFFFFF8;
      v68 = swift_allocObject(&unk_1010E35D0, (v65 & 0xFFFFFFFFFFFFFFF8) + 72, v64);
      *(_QWORD *)(v68 + 16) = v61;
      *(_QWORD *)(v68 + 24) = &protocol witness table for MainActor;
      v27((char *)(v68 + v63), v59, v30);
      sub_100064EF0((uint64_t)&v81, v68 + v67);
      v69 = sub_100166D14(v77, (uint64_t)&unk_1011D0C50, v68);
      v70 = swift_release(v69);
      v71 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v71(v66, v30, v70);
      ((void (*)(char *, uint64_t))v71)(v57, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v81);
    sub_100065184(&v81);
    if ((v82 & 1) != 0)
    {
LABEL_11:
      v50 = type metadata accessor for TaskPriority(0);
      v51 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v77, 1, 1, v50);
      sub_100064C78((uint64_t)v80, (uint64_t)v79);
      type metadata accessor for MainActor(0);
      v53 = static MainActor.shared.getter(v52);
      v54 = swift_allocObject(&unk_1010E35F8, 72, 7);
      *(_QWORD *)(v54 + 16) = v53;
      *(_QWORD *)(v54 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v79, v54 + 32);
      v34 = &unk_1011B96A8;
      v35 = v51;
      v36 = v54;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v77, 1, 1, v31);
      sub_100064C78((uint64_t)v80, (uint64_t)v79);
      v33 = swift_allocObject(&unk_1010E3620, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v79, v33 + 32);
      v34 = &unk_1011D0C60;
      v35 = v32;
      v36 = v33;
    }
    v55 = sub_100166D14(v35, (uint64_t)v34, v36);
    v56 = swift_release(v55);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v56);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v76;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v76, v78, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v81 = v44;
      *(_DWORD *)v43 = 136315138;
      v78 = v43 + 4;
      v45 = v73;
      v25(v73, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      v48 = v47;
      *(_QWORD *)&v79[0] = sub_100322200(v46, v47, &v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, (char *)v79 + 8);
      v49 = swift_bridgeObjectRelease(v48);
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v49);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
}

uint64_t sub_10096B99C(uint8_t *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  void (*v71)(char *, uint64_t, __n128);
  char *v73;
  uint64_t v74;
  char *v75;
  uint8_t *v76;
  uint64_t v77;
  uint8_t *v78;
  __int128 v79[2];
  _QWORD v80[5];
  uint64_t v81;
  char v82;

  v74 = a3;
  v78 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v77 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v73 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v73 - v13;
  v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v73 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v76 = (uint8_t *)&v73 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v73 - v21;
  v23 = type metadata accessor for Playlist(0);
  v80[3] = v23;
  v80[4] = &protocol witness table for Playlist;
  v24 = sub_100049F68(v80);
  (*(void (**)(_QWORD *, uint8_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v78, v23);
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v16 + 16);
  v78 = a1;
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if (v26 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v14, v22, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v12, v14, v6);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
    v30 = v6;
    if (v29 == enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:))
      goto LABEL_11;
    if (v29 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v57 = v12;
      v58 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v77, 1, 1, v58);
      v59 = v75;
      v28(v75, v14, v30);
      sub_100064AC8(v74, (uint64_t)&v81);
      type metadata accessor for MainActor(0);
      v61 = static MainActor.shared.getter(v60);
      v62 = *(unsigned __int8 *)(v7 + 80);
      v63 = (v62 + 32) & ~v62;
      v64 = v62 | 7;
      v65 = v8 + v63 + 7;
      v66 = v14;
      v67 = v65 & 0xFFFFFFFFFFFFFFF8;
      v68 = swift_allocObject(&unk_1010E3648, (v65 & 0xFFFFFFFFFFFFFFF8) + 72, v64);
      *(_QWORD *)(v68 + 16) = v61;
      *(_QWORD *)(v68 + 24) = &protocol witness table for MainActor;
      v27((char *)(v68 + v63), v59, v30);
      sub_100064EF0((uint64_t)&v81, v68 + v67);
      v69 = sub_100166D14(v77, (uint64_t)&unk_1011D0C68, v68);
      v70 = swift_release(v69);
      v71 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v71(v66, v30, v70);
      ((void (*)(char *, uint64_t))v71)(v57, v30);
      return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
    }
    static ApplicationCapabilities.shared.getter((uint64_t)&v81);
    sub_100065184(&v81);
    if ((v82 & 1) != 0)
    {
LABEL_11:
      v50 = type metadata accessor for TaskPriority(0);
      v51 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v77, 1, 1, v50);
      sub_100064C78((uint64_t)v80, (uint64_t)v79);
      type metadata accessor for MainActor(0);
      v53 = static MainActor.shared.getter(v52);
      v54 = swift_allocObject(&unk_1010E3670, 72, 7);
      *(_QWORD *)(v54 + 16) = v53;
      *(_QWORD *)(v54 + 24) = &protocol witness table for MainActor;
      sub_100064C48(v79, v54 + 32);
      v34 = &unk_1011D0C70;
      v35 = v51;
      v36 = v54;
    }
    else
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v77, 1, 1, v31);
      sub_100064C78((uint64_t)v80, (uint64_t)v79);
      v33 = swift_allocObject(&unk_1010E3698, 72, 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      sub_100064C48(v79, v33 + 32);
      v34 = &unk_1011D0C78;
      v35 = v32;
      v36 = v33;
    }
    v55 = sub_100166D14(v35, (uint64_t)v34, v36);
    v56 = swift_release(v55);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v14, v6, v56);
  }
  else if (v26 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v37 = *(void (**)(char *, uint64_t))(v16 + 8);
    v37(v22, v15);
    if (qword_10119C178 != -1)
      swift_once(&qword_10119C178, sub_100545BBC);
    v38 = type metadata accessor for Logger(0);
    sub_100048B14(v38, (uint64_t)qword_10124D210);
    v39 = v76;
    v40 = ((uint64_t (*)(uint8_t *, uint8_t *, uint64_t))v25)(v76, v78, v15);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v81 = v44;
      *(_DWORD *)v43 = 136315138;
      v78 = v43 + 4;
      v45 = v73;
      v25(v73, v39, v15);
      v46 = String.init<A>(describing:)(v45, v15);
      v48 = v47;
      *(_QWORD *)&v79[0] = sub_100322200(v46, v47, &v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, (char *)v79 + 8);
      v49 = swift_bridgeObjectRelease(v48);
      ((void (*)(uint8_t *, uint64_t, __n128))v37)(v39, v15, v49);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playabilityStatus=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v37((char *)v39, v15);
    }

  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
}

uint64_t sub_10096C00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v3[11] = a2;
  v3[12] = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v5);
  v3[15] = swift_task_alloc(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[17] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[18] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[19] = swift_task_alloc(v9);
  v3[20] = swift_task_alloc(v9);
  v3[21] = swift_task_alloc(v9);
  v10 = type metadata accessor for Album(0);
  v3[22] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[23] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v12);
  v3[25] = swift_task_alloc(v12);
  v13 = *(void (**)(void))(v11 + 16);
  v3[26] = v13;
  v13();
  v14 = type metadata accessor for MainActor(0);
  v3[27] = v14;
  v3[28] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v3[29] = v16;
  v3[30] = v17;
  return swift_task_switch(sub_10096C17C, v16, v17);
}

uint64_t sub_10096C17C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  PresentationSource.windowScene.getter();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "delegate");
    if (v3
      && (*(_QWORD *)(v0 + 80) = v3,
          v4 = sub_100007E8C(&qword_1011A9300),
          v5 = sub_100007E8C(&qword_1011A3120),
          (swift_dynamicCast(v0 + 16, v0 + 80, v4, v5, 6) & 1) != 0))
    {
      v6 = *(_QWORD *)(v0 + 40);
      if (v6)
      {
        v7 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v0 + 16), v6)
                       + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
        swift_retain();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
LABEL_8:

        goto LABEL_10;
      }
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_10004FF60(v0 + 16, (uint64_t *)&unk_1011A3110);
    v7 = 0;
    goto LABEL_8;
  }
  v7 = 0;
LABEL_10:
  *(_QWORD *)(v0 + 248) = v7;
  v8 = *(char **)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 96);
  (*(void (**)(char *, _QWORD, _QWORD))(v0 + 208))(v8, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  *(_QWORD *)(v0 + 56) = sub_10096CF6C(v8);
  *(_QWORD *)(v0 + 64) = v13;
  *(_QWORD *)(v0 + 72) = v14;
  sub_10004A160(v12, v11, &qword_1011B1F10);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  *(_QWORD *)(v0 + 256) = v15;
  if (v15(v11, 1, v9) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 120), &qword_1011B1F10);
    v16 = (_QWORD *)swift_task_alloc(dword_1011D2FFC);
    *(_QWORD *)(v0 + 264) = v16;
    *v16 = v0;
    v16[1] = sub_10096C508;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 176));
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 136);
    swift_release();
    v38 = *(_OWORD *)(v0 + 56);
    v36 = *(void (**)(uint64_t))(v18 + 32);
    v37 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 248);
    v41 = *(_QWORD *)(v0 + 200);
    v42 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 128);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 104);
    v45 = *(_QWORD *)(v0 + 112);
    v35 = v25;
    v36(v20);
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v20, v24);
    v27 = swift_retain();
    v28 = static MainActor.shared.getter(v27);
    v29 = *(unsigned __int8 *)(v23 + 80);
    v30 = (v29 + 40) & ~v29;
    v31 = (v22 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = (_QWORD *)swift_allocObject(&unk_1010E4B10, v31 + 24, v29 | 7);
    v32[2] = v28;
    v32[3] = &protocol witness table for MainActor;
    v32[4] = v19;
    ((void (*)(char *, uint64_t, uint64_t))v36)((char *)v32 + v30, v21, v24);
    v33 = (char *)v32 + v31;
    *(_OWORD *)v33 = v38;
    *((_QWORD *)v33 + 2) = v37;
    sub_100166D34(v35, (uint64_t)&unk_1011D14F8, (uint64_t)v32);
    swift_release();
    v34 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v23 + 8))(v20, v24, v34);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v20);
    swift_task_dealloc(v44);
    swift_task_dealloc(v21);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10096C508()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 264));
  return swift_task_switch(sub_10096C554, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_10096C554()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = swift_release();
  v5 = v1(v3, 1, v2, v4);
  v6 = *(_QWORD *)(v0 + 136);
  if (v5 == 1)
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v8, &protocol witness table for Track);
    sub_10004FF60(v7, &qword_1011B1F10);
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  }
  else
  {
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    v9(*(char **)(v0 + 160), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128));
  }
  v28 = v9;
  v31 = *(_OWORD *)(v0 + 56);
  v30 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  v34 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 152);
  v35 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 128);
  v37 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 112);
  v29 = v16;
  ((void (*)(uint64_t))v9)(v11);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v15);
  v19 = swift_retain();
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v14 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject(&unk_1010E4B10, v23 + 24, v21 | 7);
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v24 + 4) = v10;
  v28(&v24[v22], v18, v15);
  v25 = &v24[v23];
  *(_OWORD *)v25 = v31;
  *((_QWORD *)v25 + 2) = v30;
  sub_100166D34(v29, (uint64_t)&unk_1011D14F8, (uint64_t)v24);
  swift_release();
  v26 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v11, v15, v26);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v11);
  swift_task_dealloc(v35);
  swift_task_dealloc(v18);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10096C7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v3[11] = a2;
  v3[12] = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v5);
  v3[15] = swift_task_alloc(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[17] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[18] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[19] = swift_task_alloc(v9);
  v3[20] = swift_task_alloc(v9);
  v3[21] = swift_task_alloc(v9);
  v10 = type metadata accessor for Playlist(0);
  v3[22] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[23] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v12);
  v3[25] = swift_task_alloc(v12);
  v13 = *(void (**)(void))(v11 + 16);
  v3[26] = v13;
  v13();
  v14 = type metadata accessor for MainActor(0);
  v3[27] = v14;
  v3[28] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v3[29] = v16;
  v3[30] = v17;
  return swift_task_switch(sub_10096C92C, v16, v17);
}

uint64_t sub_10096C92C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  PresentationSource.windowScene.getter();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "delegate");
    if (v3
      && (*(_QWORD *)(v0 + 80) = v3,
          v4 = sub_100007E8C(&qword_1011A9300),
          v5 = sub_100007E8C(&qword_1011A3120),
          (swift_dynamicCast(v0 + 16, v0 + 80, v4, v5, 6) & 1) != 0))
    {
      v6 = *(_QWORD *)(v0 + 40);
      if (v6)
      {
        v7 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v0 + 16), v6)
                       + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
        swift_retain();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
LABEL_8:

        goto LABEL_10;
      }
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_10004FF60(v0 + 16, (uint64_t *)&unk_1011A3110);
    v7 = 0;
    goto LABEL_8;
  }
  v7 = 0;
LABEL_10:
  *(_QWORD *)(v0 + 248) = v7;
  v8 = *(char **)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 96);
  (*(void (**)(char *, _QWORD, _QWORD))(v0 + 208))(v8, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  *(_QWORD *)(v0 + 56) = sub_10096D830(v8);
  *(_QWORD *)(v0 + 64) = v13;
  *(_QWORD *)(v0 + 72) = v14;
  sub_10004A160(v12, v11, &qword_1011B1F10);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  *(_QWORD *)(v0 + 256) = v15;
  if (v15(v11, 1, v9) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 120), &qword_1011B1F10);
    v16 = (_QWORD *)swift_task_alloc(dword_1011D2FFC);
    *(_QWORD *)(v0 + 264) = v16;
    *v16 = v0;
    v16[1] = sub_10096CCB8;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 176));
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 136);
    swift_release();
    v38 = *(_OWORD *)(v0 + 56);
    v36 = *(void (**)(uint64_t))(v18 + 32);
    v37 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 248);
    v41 = *(_QWORD *)(v0 + 200);
    v42 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 128);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 104);
    v45 = *(_QWORD *)(v0 + 112);
    v35 = v25;
    v36(v20);
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v20, v24);
    v27 = swift_retain();
    v28 = static MainActor.shared.getter(v27);
    v29 = *(unsigned __int8 *)(v23 + 80);
    v30 = (v29 + 40) & ~v29;
    v31 = (v22 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = (_QWORD *)swift_allocObject(&unk_1010E4188, v31 + 24, v29 | 7);
    v32[2] = v28;
    v32[3] = &protocol witness table for MainActor;
    v32[4] = v19;
    ((void (*)(char *, uint64_t, uint64_t))v36)((char *)v32 + v30, v21, v24);
    v33 = (char *)v32 + v31;
    *(_OWORD *)v33 = v38;
    *((_QWORD *)v33 + 2) = v37;
    sub_100166D34(v35, (uint64_t)&unk_1011D1120, (uint64_t)v32);
    swift_release();
    v34 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v23 + 8))(v20, v24, v34);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v20);
    swift_task_dealloc(v44);
    swift_task_dealloc(v21);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10096CCB8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 264));
  return swift_task_switch(sub_10096CD04, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_10096CD04()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = swift_release();
  v5 = v1(v3, 1, v2, v4);
  v6 = *(_QWORD *)(v0 + 136);
  if (v5 == 1)
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v8, &protocol witness table for Track);
    sub_10004FF60(v7, &qword_1011B1F10);
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  }
  else
  {
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    v9(*(char **)(v0 + 160), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128));
  }
  v28 = v9;
  v31 = *(_OWORD *)(v0 + 56);
  v30 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  v34 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 152);
  v35 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 128);
  v37 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 112);
  v29 = v16;
  ((void (*)(uint64_t))v9)(v11);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v15);
  v19 = swift_retain();
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v14 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject(&unk_1010E4188, v23 + 24, v21 | 7);
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v24 + 4) = v10;
  v28(&v24[v22], v18, v15);
  v25 = &v24[v23];
  *(_OWORD *)v25 = v31;
  *((_QWORD *)v25 + 2) = v30;
  sub_100166D34(v29, (uint64_t)&unk_1011D1120, (uint64_t)v24);
  swift_release();
  v26 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v11, v15, v26);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v11);
  swift_task_dealloc(v35);
  swift_task_dealloc(v18);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10096CF6C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  int v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v54;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _BYTE v87[40];
  _QWORD v88[6];

  v71 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v3);
  v73 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Playlist.Entry(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v68 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A9A00);
  __chkstk_darwin(v6);
  v78 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for Track(0);
  v77 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v72 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v9);
  v82 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for MusicVideo(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v76 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v12);
  v85 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for Song(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v80 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Playlist(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v22);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88[3] = v29;
  v88[4] = &protocol witness table for Album;
  v30 = (char *)sub_100049F68(v88);
  v31 = *(uint64_t (**)(char *, char *, uint64_t))(v26 + 32);
  v31(v30, a1, v25);
  sub_100064C78((uint64_t)v88, (uint64_t)v87);
  v32 = sub_100007E8C(&qword_1011AEAD8);
  v33 = swift_dynamicCast(v24, v87, v32, v25, 6);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if (v33)
  {
    v34(v24, 0, 1, v25);
    v35 = v31(v28, v24, v25);
    Album.catalogID.getter(v35);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v88);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    return 0;
  }
  v34(v24, 1, 1, v25);
  sub_10004FF60((uint64_t)v24, &qword_1011A8FA0);
  sub_100064C78((uint64_t)v88, (uint64_t)v87);
  v37 = swift_dynamicCast(v17, v87, v32, v18, 6);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  if ((v37 & 1) != 0)
  {
    v36 = 1;
    v38(v17, 0, 1, v18);
    v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    Playlist.catalogID.getter(v39);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v88);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return v36;
  }
  v38(v17, 1, 1, v18);
  sub_10004FF60((uint64_t)v17, &qword_1011A30F0);
  sub_100064C78((uint64_t)v88, (uint64_t)v87);
  v40 = (uint64_t)v85;
  v41 = v86;
  v42 = swift_dynamicCast(v85, v87, v32, v86, 6);
  v43 = v84;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
  if (v42)
  {
    v44(v40, 0, 1, v41);
    v45 = v80;
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 32))(v80, v40, v41);
    Song.catalogID.getter(v46);
LABEL_11:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v88);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v41);
    return 2;
  }
  v44(v40, 1, 1, v41);
  sub_10004FF60(v40, &qword_10119E480);
  sub_100064C78((uint64_t)v88, (uint64_t)v87);
  v47 = (uint64_t)v82;
  v41 = v83;
  v48 = swift_dynamicCast(v82, v87, v32, v83, 6);
  v43 = v81;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
  if (v48)
  {
    v49(v47, 0, 1, v41);
    v45 = v76;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 32))(v76, v47, v41);
    MusicVideo.catalogID.getter(v50);
    goto LABEL_11;
  }
  v49(v47, 1, 1, v41);
  sub_10004FF60(v47, &qword_1011B59B0);
  sub_100064C78((uint64_t)v88, (uint64_t)v87);
  v51 = (uint64_t)v78;
  v41 = v79;
  v52 = swift_dynamicCast(v78, v87, v32, v79, 6);
  v43 = v77;
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
  if (v52)
  {
    v53(v51, 0, 1, v41);
    v45 = v72;
    v54.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v43 + 32))(v72, v51, v41);
    Track.catalogID.getter(v54);
    goto LABEL_11;
  }
  v53(v51, 1, 1, v41);
  sub_10004FF60(v51, &qword_1011A9A00);
  sub_100064C78((uint64_t)v88, (uint64_t)v87);
  v56 = (uint64_t)v73;
  v57 = v75;
  v58 = swift_dynamicCast(v73, v87, v32, v75, 6);
  v59 = v74;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
  if (v58)
  {
    v60(v56, 0, 1, v57);
    v61 = v68;
    v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 32))(v68, v56, v57);
    v63 = v69;
    Playlist.Entry.internalItem.getter(v62);
    v64 = v70;
    v65 = v71;
    v66 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v63, v71);
    if (v66 == enum case for Playlist.Entry.InternalItem.musicVideo(_:)
      || v66 == enum case for Playlist.Entry.InternalItem.song(_:))
    {
      v67 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v63, v65);
      Playlist.Entry.catalogID.getter(v67);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v88);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v57);
      swift_bridgeObjectRelease();
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v88);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v57);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
    }
    return 0;
  }
  else
  {
    v60(v56, 1, 1, v57);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v88);
    sub_10004FF60(v56, (uint64_t *)&unk_1011B59A0);
    return 0;
  }
}

uint64_t sub_10096D830(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  int v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  int v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v53;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _BYTE v86[40];
  _QWORD v87[6];

  v70 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v3);
  v72 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Playlist.Entry(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v67 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A9A00);
  __chkstk_darwin(v6);
  v77 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for Track(0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v71 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v9);
  v81 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for MusicVideo(0);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v75 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v12);
  v84 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for Song(0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v79 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Playlist(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87[3] = v18;
  v87[4] = &protocol witness table for Playlist;
  v29 = (char *)sub_100049F68(v87);
  v30 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 32);
  v30(v29, a1, v18);
  sub_100064C78((uint64_t)v87, (uint64_t)v86);
  v31 = sub_100007E8C(&qword_1011AEAD8);
  v32 = swift_dynamicCast(v24, v86, v31, v25, 6);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if (v32)
  {
    v33(v24, 0, 1, v25);
    v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
    Album.catalogID.getter(v34);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    return 0;
  }
  v33(v24, 1, 1, v25);
  sub_10004FF60((uint64_t)v24, &qword_1011A8FA0);
  sub_100064C78((uint64_t)v87, (uint64_t)v86);
  v36 = swift_dynamicCast(v17, v86, v31, v18, 6);
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  if ((v36 & 1) != 0)
  {
    v35 = 1;
    v37(v17, 0, 1, v18);
    v38 = v30(v21, v17, v18);
    Playlist.catalogID.getter(v38);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return v35;
  }
  v37(v17, 1, 1, v18);
  sub_10004FF60((uint64_t)v17, &qword_1011A30F0);
  sub_100064C78((uint64_t)v87, (uint64_t)v86);
  v39 = (uint64_t)v84;
  v40 = v85;
  v41 = swift_dynamicCast(v84, v86, v31, v85, 6);
  v42 = v83;
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
  if (v41)
  {
    v43(v39, 0, 1, v40);
    v44 = v79;
    v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 32))(v79, v39, v40);
    Song.catalogID.getter(v45);
LABEL_11:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v40);
    return 2;
  }
  v43(v39, 1, 1, v40);
  sub_10004FF60(v39, &qword_10119E480);
  sub_100064C78((uint64_t)v87, (uint64_t)v86);
  v46 = (uint64_t)v81;
  v40 = v82;
  v47 = swift_dynamicCast(v81, v86, v31, v82, 6);
  v42 = v80;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
  if (v47)
  {
    v48(v46, 0, 1, v40);
    v44 = v75;
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 32))(v75, v46, v40);
    MusicVideo.catalogID.getter(v49);
    goto LABEL_11;
  }
  v48(v46, 1, 1, v40);
  sub_10004FF60(v46, &qword_1011B59B0);
  sub_100064C78((uint64_t)v87, (uint64_t)v86);
  v50 = (uint64_t)v77;
  v40 = v78;
  v51 = swift_dynamicCast(v77, v86, v31, v78, 6);
  v42 = v76;
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
  if (v51)
  {
    v52(v50, 0, 1, v40);
    v44 = v71;
    v53.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v42 + 32))(v71, v50, v40);
    Track.catalogID.getter(v53);
    goto LABEL_11;
  }
  v52(v50, 1, 1, v40);
  sub_10004FF60(v50, &qword_1011A9A00);
  sub_100064C78((uint64_t)v87, (uint64_t)v86);
  v55 = (uint64_t)v72;
  v56 = v74;
  v57 = swift_dynamicCast(v72, v86, v31, v74, 6);
  v58 = v73;
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
  if (v57)
  {
    v59(v55, 0, 1, v56);
    v60 = v67;
    v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 32))(v67, v55, v56);
    v62 = v68;
    Playlist.Entry.internalItem.getter(v61);
    v63 = v69;
    v64 = v70;
    v65 = (*(uint64_t (**)(char *, uint64_t))(v69 + 88))(v62, v70);
    if (v65 == enum case for Playlist.Entry.InternalItem.musicVideo(_:)
      || v65 == enum case for Playlist.Entry.InternalItem.song(_:))
    {
      v66 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v62, v64);
      Playlist.Entry.catalogID.getter(v66);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v56);
      swift_bridgeObjectRelease();
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v56);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    }
    return 0;
  }
  else
  {
    v59(v55, 1, 1, v56);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
    sub_10004FF60(v55, (uint64_t *)&unk_1011B59A0);
    return 0;
  }
}

uint64_t sub_10096E0F4(uint64_t a1)
{
  __int16 v1;
  uint64_t *v2;

  (*(void (**)(void))(*(_QWORD *)a1 + 256))();
  switch(HIBYTE(v1))
  {
    case 2:
      v2 = AccessibilityIdentifier.containerDetailStateButton.unsafeMutableAddressor();
      break;
    case 3:
      v2 = AccessibilityIdentifier.containerDetailAddButton.unsafeMutableAddressor();
      break;
    case 4:
      v2 = AccessibilityIdentifier.containerDetailDownloadButton.unsafeMutableAddressor();
      break;
    case 5:
      v2 = AccessibilityIdentifier.containerDetailDownloadedButton.unsafeMutableAddressor();
      break;
    default:
      if ((v1 & 0x100) != 0)
      {
        v2 = AccessibilityIdentifier.containerDetailDownloadPausedButton.unsafeMutableAddressor();
      }
      else if ((v1 & 1) != 0)
      {
        v2 = AccessibilityIdentifier.containerDetailDownloadQueuedButton.unsafeMutableAddressor();
      }
      else
      {
        v2 = AccessibilityIdentifier.containerDetailDownloadingButton.unsafeMutableAddressor();
      }
      break;
  }
  return *v2;
}

uint64_t sub_10096E184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, uint64_t, __n128);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  __n128 v41;
  char v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v45)(_QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  __n128 v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char v85;
  void (*v86)(char *, uint64_t);
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v92;
  char *v93;
  uint64_t *v94;
  char *v95;
  char *v96;
  _QWORD *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char v109[24];
  char v110[24];
  char v111[24];
  char v112[24];
  char v113[24];
  char v114[8];
  char v115[8];
  char v116[8];

  v108 = a2;
  v3 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v3);
  v101 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v103 = (char *)&v92 - v6;
  __chkstk_darwin(v7);
  v100 = (uint64_t)&v92 - v8;
  __chkstk_darwin(v9);
  v104 = (uint64_t)&v92 - v10;
  __chkstk_darwin(v11);
  v94 = (uint64_t *)((char *)&v92 - v12);
  __chkstk_darwin(v13);
  v97 = (uint64_t *)((char *)&v92 - v14);
  v105 = type metadata accessor for Playlist(0);
  v106 = *(_QWORD **)(v105 - 8);
  __chkstk_darwin(v105);
  v96 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v102 = (char *)&v92 - v17;
  __chkstk_darwin(v18);
  v95 = (char *)&v92 - v19;
  __chkstk_darwin(v20);
  v99 = (char *)&v92 - v21;
  __chkstk_darwin(v22);
  v93 = (char *)&v92 - v23;
  __chkstk_darwin(v24);
  v98 = (char *)&v92 - v25;
  v26 = type metadata accessor for MusicPropertySource(0);
  v27 = *(_QWORD **)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v92 - v31;
  v107 = a1;
  v33 = a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v34 = swift_beginAccess(a1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v116, 0, 0);
  v35 = (void (*)(char *, uint64_t, uint64_t, __n128))v27[2];
  v35(v32, v33, v26, v34);
  v36 = enum case for MusicPropertySource.library(_:);
  v37 = (void (*)(char *, uint64_t, uint64_t))v27[13];
  v37(v29, enum case for MusicPropertySource.library(_:), v26);
  v38 = static MusicPropertySource.== infix(_:_:)(v32, v29);
  v39 = (void (*)(char *, uint64_t))v27[1];
  v39(v29, v26);
  v39(v32, v26);
  if ((v38 & 1) != 0)
  {
    v40 = v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
    v41 = swift_beginAccess(v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v111, 0, 0);
    v35(v32, v40, v26, v41);
    v37(v29, v36, v26);
    v42 = static MusicPropertySource.== infix(_:_:)(v32, v29);
    v39(v29, v26);
    v39(v32, v26);
    if ((v42 & 1) != 0)
    {
      v43 = v107 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
      swift_beginAccess(v107 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v110, 0, 0);
      v44 = (void (*)(_QWORD, _QWORD, _QWORD))v97;
      sub_10004A160(v43, (uint64_t)v97, &qword_1011A30F0);
      v45 = (unsigned int (*)(_QWORD, uint64_t, uint64_t))v106[6];
      v46 = v105;
      if (v45(v44, 1, v105) != 1)
      {
        v97 = (_QWORD *)v106[4];
        ((void (*)(char *, _QWORD, uint64_t))v97)(v98, v44, v46);
        v47 = v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
        swift_beginAccess(v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v109, 0, 0);
        v48 = v47;
        v44 = (void (*)(_QWORD, _QWORD, _QWORD))v94;
        sub_10004A160(v48, (uint64_t)v94, &qword_1011A30F0);
        if (v45(v44, 1, v46) != 1)
        {
          v82 = v93;
          ((void (*)(char *, _QWORD, uint64_t))v97)(v93, v44, v46);
          v83 = sub_100048748(&qword_1011B5130, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
          v84 = v98;
          v85 = static MusicItem<>.==~ infix(_:_:)(v98, v82, v46, &protocol witness table for Playlist, v83);
          v86 = (void (*)(char *, uint64_t))v106[1];
          v86(v82, v46);
          v86(v84, v46);
          if ((v85 & 1) != 0)
          {
            v71 = *(_BYTE *)(v107 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeOnlyDownloadedContent) ^ *(_BYTE *)(v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeOnlyDownloadedContent) ^ 1;
            return v71 & 1;
          }
          goto LABEL_34;
        }
        ((void (*)(char *, uint64_t))v106[1])(v98, v46);
      }
      sub_10004FF60((uint64_t)v44, &qword_1011A30F0);
    }
  }
  ((void (*)(char *, uint64_t, uint64_t))v35)(v32, v33, v26);
  v49 = enum case for MusicPropertySource.catalog(_:);
  v37(v29, enum case for MusicPropertySource.catalog(_:), v26);
  v50 = static MusicPropertySource.== infix(_:_:)(v32, v29);
  v39(v29, v26);
  v39(v32, v26);
  v51 = v107;
  if ((v50 & 1) == 0 && *(_BYTE *)(v107 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isOverridingSource) != 1)
    goto LABEL_34;
  v52 = v108;
  v53 = v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source;
  v54 = swift_beginAccess(v108 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_source, v115, 0, 0);
  v35(v32, v53, v26, v54);
  v37(v29, v49, v26);
  v55 = static MusicPropertySource.== infix(_:_:)(v32, v29);
  v39(v29, v26);
  v39(v32, v26);
  if ((v55 & 1) == 0 && *(_BYTE *)(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_isOverridingSource) != 1)
    goto LABEL_34;
  v56 = v51 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v51 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v114, 0, 0);
  v57 = v104;
  sub_10004A160(v56, v104, &qword_1011A30F0);
  v58 = v106;
  v59 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v106[6];
  v60 = v105;
  if (v59(v57, 1, v105) == 1)
  {
    v61 = v57;
    v62 = (uint64_t)v103;
    v63 = v102;
  }
  else
  {
    v64 = (void (*)(char *, uint64_t, uint64_t))v58[4];
    v65 = v99;
    v64(v99, v57, v60);
    v66 = v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
    swift_beginAccess(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v112, 0, 0);
    v67 = v66;
    v68 = v100;
    sub_10004A160(v67, v100, &qword_1011A30F0);
    if (v59(v68, 1, v60) != 1)
    {
      v73 = v95;
      v64(v95, v68, v60);
      v74 = sub_100048748(&qword_1011B5130, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      v71 = static MusicItem<>.==~ infix(_:_:)(v65, v73, v60, &protocol witness table for Playlist, v74);
      v75 = (void (*)(char *, uint64_t))v58[1];
      v75(v73, v60);
      v75(v65, v60);
      return v71 & 1;
    }
    ((void (*)(char *, uint64_t))v58[1])(v65, v60);
    v62 = (uint64_t)v103;
    v63 = v102;
    v61 = v68;
  }
  sub_10004FF60(v61, &qword_1011A30F0);
  sub_10004A160(v56, v62, &qword_1011A30F0);
  if (v59(v62, 1, v60) == 1)
  {
    sub_10004FF60(v62, &qword_1011A30F0);
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v58[4])(v63, v62, v60);
    v69 = *(_QWORD *)(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID + 8);
    if (v69)
    {
      v70 = *(_QWORD *)(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID);
      swift_bridgeObjectRetain();
      v71 = MusicItem.contains(_:)(v70, v69, v60, &protocol witness table for Playlist);
      v72 = swift_bridgeObjectRelease(v69);
      ((void (*)(char *, uint64_t, __n128))v58[1])(v63, v60, v72);
      return v71 & 1;
    }
    ((void (*)(char *, uint64_t))v58[1])(v63, v60);
  }
  v76 = (uint64_t)v101;
  v77 = v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist;
  swift_beginAccess(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist, v113, 0, 0);
  sub_10004A160(v77, v76, &qword_1011A30F0);
  if (v59(v76, 1, v60) == 1)
  {
    sub_10004FF60(v76, &qword_1011A30F0);
  }
  else
  {
    v78 = v96;
    ((void (*)(char *, uint64_t, uint64_t))v58[4])(v96, v76, v60);
    v79 = *(_QWORD *)(v51 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID + 8);
    if (v79)
    {
      v80 = *(_QWORD *)(v51 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID);
      swift_bridgeObjectRetain();
      v71 = MusicItem.contains(_:)(v80, v79, v60, &protocol witness table for Playlist);
      v81 = swift_bridgeObjectRelease(v79);
      ((void (*)(char *, uint64_t, __n128))v58[1])(v78, v60, v81);
      return v71 & 1;
    }
    ((void (*)(char *, uint64_t))v58[1])(v78, v60);
  }
  v87 = (_QWORD *)(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID);
  v88 = *(_QWORD *)(v52 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID + 8);
  if (!v88
    || (v89 = (_QWORD *)(v51 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID),
        (v90 = *(_QWORD *)(v51 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_catalogID + 8)) == 0))
  {
LABEL_34:
    v71 = 0;
    return v71 & 1;
  }
  if (*v87 == *v89 && v88 == v90)
    v71 = 1;
  else
    v71 = _stringCompareWithSmolCheck(_:_:expecting:)(*v87, v88, *v89, v90, 0);
  return v71 & 1;
}

uint64_t sub_10096EB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[4];
  uint64_t v43;

  v41 = a3;
  v5 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v40 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Playlist.Entry(0);
  v8 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v15 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(v42, v14, v15);
  if (v43 == v42[0])
    return 0;
  v38 = v10;
  v39 = v8;
  v36 = v5;
  v37 = v6;
  v16 = v32;
  v17 = v15;
  v34 = v14;
  v35 = a1;
  v33 = v15;
  while (1)
  {
    v18 = dispatch thunk of Collection.subscript.read(v42, &v43, v14, v17);
    v19 = v39;
    v20 = *(void (**)(char *))(v39 + 16);
    v20(v13);
    ((void (*)(_QWORD *, _QWORD))v18)(v42, 0);
    v21 = v41;
    LOBYTE(v18) = MusicItem.contains(_:)(a2, v41, v16, &protocol witness table for Playlist.Entry);
    v22 = ((uint64_t (*)(char *, char *, uint64_t))v20)(v10, v13, v16);
    if ((v18 & 1) != 0)
      break;
    v23 = v40;
    Playlist.Entry.internalItem.getter(v22);
    v24 = sub_100048748(&qword_1011D0BF0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
    v25 = v21;
    v26 = v36;
    v27 = MusicItem.contains(_:)(a2, v25, v36, v24);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v26);
    v28 = *(void (**)(char *, uint64_t))(v19 + 8);
    v28(v10, v16);
    v28(v13, v16);
    if ((v27 & 1) != 0)
      return v43;
    v14 = v34;
    v17 = v33;
    dispatch thunk of Collection.formIndex(after:)(&v43, v34, v33);
    dispatch thunk of Collection.endIndex.getter(v42, v14, v17);
    if (v43 == v42[0])
      return 0;
  }
  v30 = *(void (**)(char *, uint64_t))(v19 + 8);
  v30(v10, v16);
  v30(v13, v16);
  return v43;
}

char *sub_10096EE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  char *v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  char *v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  char *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(uint64_t, uint64_t);
  void *v90;
  id v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __n128 v101;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  id v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119[8];
  uint64_t v120;
  uint64_t v121[4];

  v116 = a5;
  v117 = a2;
  v111 = a4;
  v109 = (id)a3;
  v104 = sub_100007E8C((uint64_t *)&unk_1011A2100);
  __chkstk_darwin(v104);
  v105 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v106 - 8);
  v8 = __chkstk_darwin(v106);
  v113 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v108 = (char *)&v103 - v10;
  v11 = sub_100007E8C(&qword_1011B6938);
  __chkstk_darwin(v11);
  v110 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v13);
  v107 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v15);
  v17 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119E460);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v103 - v22;
  v115 = type metadata accessor for ContainerDetail.Source(0);
  v24 = __chkstk_darwin(v115);
  v112 = (uint64_t)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v103 - v27;
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v103 - v30;
  v32 = Playlist.catalogID.getter(v29);
  v34 = v33;
  sub_10005B704(v117, (uint64_t)v31, type metadata accessor for ContainerDetail.Source);
  v35 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v23, 1, 1, v35);
  sub_10004A160(v116, (uint64_t)v21, &qword_10119E460);
  v36 = objc_allocWithZone((Class)type metadata accessor for PlaylistDetailDataSource(0));
  v103 = v31;
  v37 = (uint64_t)v23;
  v38 = v106;
  v39 = sub_10092B838(v32, v34, (uint64_t)v31, (uint64_t)v109, v111, v37, (uint64_t)v21);
  v40 = *(char **)(v7 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v17, a1, v38);
  v111 = v7;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v38);
  v41 = (uint64_t)&v39[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist];
  swift_beginAccess(&v39[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playlist], v121, 33, 0);
  v42 = v39;
  v43 = a1;
  sub_1000A5508((uint64_t)v17, v41, &qword_1011A30F0);
  v44 = swift_endAccess(v121);
  v45 = (uint64_t)v107;
  Playlist.entries.getter(v44);
  v46 = (uint64_t)&v42[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries];
  swift_beginAccess(&v42[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_staticEntries], v121, 33, 0);
  sub_1000A5508(v45, v46, (uint64_t *)&unk_1011D0BB0);
  swift_endAccess(v121);
  sub_10005B704(v117, (uint64_t)v28, type metadata accessor for ContainerDetail.Source);
  v47 = 0;
  if (swift_getEnumCaseMultiPayload(v28, v115) != 1)
  {
    v47 = v28[*(int *)(sub_100007E8C((uint64_t *)&unk_1011AD760) + 48)];
    sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011D0B60);
  }
  v42[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_includeOnlyDownloadedContent] = v47;
  sub_10093DEB4();
  v48 = v110;
  sub_10092B260(v110);
  v49 = (uint64_t)&v42[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_attributionItem];
  swift_beginAccess(&v42[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_attributionItem], v121, 33, 0);
  sub_1000A5508((uint64_t)v48, v49, &qword_1011B6938);
  swift_endAccess(v121);
  if (qword_10119C740 != -1)
    swift_once(&qword_10119C740, sub_100716478);
  v109 = v42;
  v50 = type metadata accessor for Logger(0);
  v51 = sub_100048B14(v50, (uint64_t)qword_10124D860);
  v52 = Logger.logObject.getter(v51);
  v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "╭ Creating playlist detail data source", v54, 2u);
    swift_slowDealloc(v54, -1, -1);
  }

  v55 = v108;
  v110 = v40;
  v56 = ((uint64_t (*)(char *, uint64_t, uint64_t))v40)(v108, v43, v38);
  v57 = Logger.logObject.getter(v56);
  v58 = static os_log_type_t.default.getter();
  v59 = os_log_type_enabled(v57, v58);
  v114 = v43;
  if (v59)
  {
    v60 = v55;
    v61 = (uint8_t *)swift_slowAlloc(12, -1);
    v62 = swift_slowAlloc(32, -1);
    v121[0] = v62;
    *(_DWORD *)v61 = 136446210;
    v63 = sub_100048748(&qword_1011A4F50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v64 = dispatch thunk of CustomStringConvertible.description.getter(v38, v63);
    v66 = v65;
    v118 = sub_100322200(v64, v65, v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, v119);
    v67 = swift_bridgeObjectRelease(v66);
    v111 = *(_QWORD *)(v111 + 8);
    ((void (*)(char *, uint64_t, __n128))v111)(v60, v38, v67);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "| Playlist: %{public}s", v61, 0xCu);
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v61, -1, -1);
  }
  else
  {
    v111 = *(_QWORD *)(v111 + 8);
    ((void (*)(char *, uint64_t))v111)(v55, v38);
  }

  v68 = v112;
  v69 = sub_10005B704(v117, v112, type metadata accessor for ContainerDetail.Source);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(12, -1);
    v73 = swift_slowAlloc(32, -1);
    v121[0] = v73;
    *(_DWORD *)v72 = 136446210;
    v74 = (uint64_t)v103;
    sub_10005B704(v68, (uint64_t)v103, type metadata accessor for ContainerDetail.Source);
    v75 = String.init<A>(describing:)(v74, v115);
    v76 = v68;
    v78 = v77;
    v118 = sub_100322200(v75, v77, v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, v119);
    swift_bridgeObjectRelease(v78);
    sub_10005B748(v76, type metadata accessor for ContainerDetail.Source);
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "| Source: %{public}s", v72, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1, -1);
    swift_slowDealloc(v72, -1, -1);
  }
  else
  {
    sub_10005B748(v68, type metadata accessor for ContainerDetail.Source);
  }

  v80 = v113;
  v79 = v114;
  v81 = v109;
  ((void (*)(char *, uint64_t, uint64_t))v110)(v113, v114, v38);
  v82 = v81;
  v83 = Logger.logObject.getter(v82);
  v84 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)swift_slowAlloc(12, -1);
    v86 = swift_slowAlloc(32, -1);
    v120 = v86;
    *(_DWORD *)v85 = 136446210;
    v87 = (uint64_t)&v82[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
    swift_beginAccess(&v82[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v121, 0, 0);
    sub_10004A160(v87, (uint64_t)&v118, (uint64_t *)&unk_1011B6910);
    if ((v119[0] & 1) != 0)
    {
      sub_10004FF60((uint64_t)&v118, (uint64_t *)&unk_1011B6910);
      v88 = v105;
    }
    else
    {
      v90 = (void *)swift_unknownObjectWeakLoadStrong(&v118);
      sub_10004FF60((uint64_t)&v118, (uint64_t *)&unk_1011B6910);
      v88 = v105;
      if (v90)
      {
        v91 = objc_msgSend(v90, "traitCollection");
        v92 = sub_10013ADBC();
        UITraitCollection.subscript.getter(&v118, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v92);

        v93 = v118;
        v94 = MusicLibrary.state<A>(for:)(v80, v38, &protocol witness table for Playlist);
        v95 = swift_release(v93);
        dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v95);
        v88 = v105;
        swift_release(v94);
        v96 = type metadata accessor for MusicLibrary.AddStatus(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v88, 0, 1, v96);
LABEL_20:
        v98 = String.init<A>(describing:)(v88, v104);
        v100 = v99;
        v118 = sub_100322200(v98, v99, &v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, v119);

        v101 = swift_bridgeObjectRelease(v100);
        v89 = (void (*)(uint64_t, uint64_t))v111;
        ((void (*)(char *, uint64_t, __n128))v111)(v80, v38, v101);

        _os_log_impl((void *)&_mh_execute_header, v83, v84, "╰ Add Status: %{public}s", v85, 0xCu);
        swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v86, -1, -1);
        swift_slowDealloc(v85, -1, -1);

        goto LABEL_21;
      }
    }
    v97 = type metadata accessor for MusicLibrary.AddStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v88, 1, 1, v97);
    goto LABEL_20;
  }

  v89 = (void (*)(uint64_t, uint64_t))v111;
  ((void (*)(char *, uint64_t))v111)(v80, v38);
LABEL_21:

  sub_10004FF60(v116, &qword_10119E460);
  sub_10005B748(v117, type metadata accessor for ContainerDetail.Source);
  v89(v79, v38);
  return v82;
}

char *sub_10096F8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t (*v21)(char *, char *, uint64_t);
  char *v22;
  char *result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  _QWORD v37[2];
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;

  v46 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v45 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v40 = (char *)v37 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)v37 - v9;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v11);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v37 - v15;
  v44 = *(_QWORD *)(a1 + 16);
  v37[1] = a1;
  if (v44)
  {
    v39 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v43 = a1 + v39;
    v42 = OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections;
    v17 = *(_QWORD *)(v4 + 72);
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v48 = v17;
    swift_bridgeObjectRetain();
    v18 = 0;
    v49 = (char *)_swiftEmptyArrayStorage;
    v41 = v13;
    v38 = v4;
    while (1)
    {
      v47(v16, v43 + v48 * v18, v3);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v19(v16, 0, 1, v3);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
      if (v20(v16, 1, v3) == 1)
        goto LABEL_27;
      v21 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
      v22 = v10;
      result = (char *)v21(v10, v16, v3);
      v24 = *(_QWORD *)(v46 + v42);
      v25 = *(_QWORD *)(v24 + 16);
      if (!v25)
        break;
      if (*(_BYTE *)(v24 + 32) == 2)
      {
        v26 = 0;
      }
      else
      {
        if (v25 == 1)
          break;
        v30 = 33;
        while (1)
        {
          v26 = v30 - 32;
          if (*(_BYTE *)(v24 + v30) == 2)
            break;
          v31 = v30 - 31;
          if (__OFADD__(v26, 1))
          {
            __break(1u);
            return result;
          }
          ++v30;
          if (v31 == v25)
            goto LABEL_16;
        }
      }
      if (v26 != IndexPath.section.getter(result))
      {
        v28 = 1;
        v10 = v22;
        goto LABEL_18;
      }
      v27 = (uint64_t)v41;
      v47(v41, (uint64_t)v22, v3);
      v28 = 0;
      v10 = v22;
      v29 = v27;
      v4 = v38;
LABEL_19:
      v19((char *)v29, v28, 1, v3);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      if (v20((char *)v29, 1, v3) == 1)
      {
        sub_10004FF60(v29, (uint64_t *)&unk_1011A3D50);
      }
      else
      {
        v32 = v29;
        v33 = v40;
        v21(v40, (char *)v32, v3);
        v21(v45, v33, v3);
        if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
          v49 = (char *)sub_100432FAC(0, *((_QWORD *)v49 + 2) + 1, 1, (unint64_t)v49);
        v35 = *((_QWORD *)v49 + 2);
        v34 = *((_QWORD *)v49 + 3);
        if (v35 >= v34 >> 1)
          v49 = (char *)sub_100432FAC(v34 > 1, v35 + 1, 1, (unint64_t)v49);
        v36 = v49;
        *((_QWORD *)v49 + 2) = v35 + 1;
        v21(&v36[v39 + v35 * v48], v45, v3);
      }
      if (++v18 == v44)
        goto LABEL_26;
    }
LABEL_16:
    v10 = v22;
    IndexPath.section.getter(result);
    v28 = 1;
LABEL_18:
    v29 = (uint64_t)v41;
    goto LABEL_19;
  }
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  swift_bridgeObjectRetain();
  v49 = (char *)_swiftEmptyArrayStorage;
LABEL_26:
  v19(v16, 1, 1, v3);
LABEL_27:
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_10096FCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = v2;
  v6 = v2 + 16;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  v7 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 128);
  v8 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 136);
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 144)) = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 152)) = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 160)) = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168)) = 0;
  v11 = *(_QWORD *)(*(_QWORD *)v3 + 176);
  *(_QWORD *)(v3 + v11) = 0;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(v7, v19, 33, 0);
  sub_1001A83C8(a2, v7, &qword_1011A8FA0);
  swift_endAccess(v19);
  v12 = sub_100927F08();
  v13 = swift_allocObject(&unk_1010E49A8, 24, 7);
  swift_weakInit(v13 + 16, v3);
  v14 = type metadata accessor for GestureRecognizerHandler();
  swift_allocObject(v14, 40, 7);
  v15 = sub_10004A07C(0, (unint64_t *)&unk_1011A8EF0, UILongPressGestureRecognizer_ptr);
  v16 = GestureRecognizerHandler.init<A>(gestureRecognizer:handler:)(v12, (uint64_t)sub_100975AD0, v13, v15);
  v17 = *(_QWORD *)(v3 + v11);
  *(_QWORD *)(v3 + v11) = v16;
  swift_release(v17);
  sub_100926460();
  sub_10004FF60(a2, &qword_1011A8FA0);
  return v3;
}

uint64_t sub_10096FE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = v2;
  v6 = v2 + 16;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  v7 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 128);
  v8 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 136);
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 144)) = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 152)) = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 160)) = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168)) = 0;
  v11 = *(_QWORD *)(*(_QWORD *)v3 + 176);
  *(_QWORD *)(v3 + v11) = 0;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_beginAccess(v7, v19, 33, 0);
  sub_1001A83C8(a2, v7, &qword_1011A30F0);
  swift_endAccess(v19);
  v12 = sub_100927F08();
  v13 = swift_allocObject(&unk_1010E3FF8, 24, 7);
  swift_weakInit(v13 + 16, v3);
  v14 = type metadata accessor for GestureRecognizerHandler();
  swift_allocObject(v14, 40, 7);
  v15 = sub_10004A07C(0, (unint64_t *)&unk_1011A8EF0, UILongPressGestureRecognizer_ptr);
  v16 = GestureRecognizerHandler.init<A>(gestureRecognizer:handler:)(v12, (uint64_t)sub_1009748A0, v13, v15);
  v17 = *(_QWORD *)(v3 + v11);
  *(_QWORD *)(v3 + v11) = v16;
  swift_release(v17);
  sub_10092680C();
  sub_10004FF60(a2, &qword_1011A30F0);
  return v3;
}

char *sub_100970070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v12 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  v18 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v20 = 0;
  swift_storeEnumTagMultiPayload(v20, v21, 1);
  v35 = a5;
  sub_10004A160(a5, (uint64_t)v17, &qword_10119E460);
  sub_10004A160(a6, (uint64_t)v14, &qword_10119E460);
  objc_allocWithZone((Class)type metadata accessor for PlaylistDetailDataSource(0));
  swift_bridgeObjectRetain();
  v22 = sub_10092B838(a1, a2, (uint64_t)v20, a3, a4, (uint64_t)v17, (uint64_t)v14);
  if (qword_10119C740 != -1)
    swift_once(&qword_10119C740, sub_100716478);
  v23 = type metadata accessor for Logger(0);
  sub_100048B14(v23, (uint64_t)qword_10124D860);
  v24 = swift_bridgeObjectRetain();
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v37 = v28;
    *(_DWORD *)v27 = 136446210;
    v34 = a6;
    swift_bridgeObjectRetain();
    v29 = MusicItemID.description.getter(a1, a2);
    v31 = v30;
    swift_bridgeObjectRelease();
    v36 = sub_100322200(v29, v31, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Creating playlist detail data source with playlist id: %{public}s", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);

    v32 = v34;
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);

    v32 = a6;
  }
  sub_10004FF60(v32, &qword_10119E460);
  sub_10004FF60(v35, &qword_10119E460);
  return v22;
}

uint64_t sub_100970384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1009703A8(uint64_t a1)
{
  uint64_t v1;

  sub_10092C894(a1, v1);
}

uint64_t sub_1009703B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100930634(v1, a1);
}

uint64_t type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D1590, (uint64_t)&nominal type descriptor for PlaylistDetailDataSource.PlaybackIntentCreationError);
}

uint64_t sub_1009703D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.id.getter, a2);
}

uint64_t sub_1009703E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_1011B96A4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100546E38(a1, v6, v7, v8, v9);
}

uint64_t sub_100970490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011B9694);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return sub_100546D1C(a1, v4, v5, v1 + 32);
}

uint64_t sub_10097050C(uint64_t a1)
{
  return sub_100970610(a1, (uint64_t)&unk_1010E37B0, (uint64_t)&unk_1011D0CA8);
}

uint64_t sub_100970520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100970530(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10097053C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, v8);
}

uint64_t sub_1009705FC(uint64_t a1)
{
  return sub_100970610(a1, (uint64_t)&unk_1010E3788, (uint64_t)&unk_1011D0C98);
}

uint64_t sub_100970610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_10095F0B4(a1, *(_QWORD *)(v3 + 16), v3 + v8, v3 + ((v8 + v9 + v10) & ~v10), a2, a3);
}

uint64_t sub_1009706A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 32);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1011D0C94);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10006AEE4;
  v12[7] = v10;
  v12[8] = v11;
  v12[5] = a1;
  v12[6] = v9;
  return swift_task_switch(sub_10095F2D4, 0, 0);
}

uint64_t sub_100970758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v9);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, v8);
}

uint64_t sub_100970820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 32);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1011D0CA4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10006AEE4;
  v12[7] = v10;
  v12[8] = v11;
  v12[5] = a1;
  v12[6] = v9;
  return swift_task_switch(sub_10095EFBC, 0, 0);
}

uint64_t sub_1009708D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100970900()
{
  uint64_t v0;

  sub_10095DACC(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10097090C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10097091C()
{
  uint64_t *v0;

  sub_10095CA88(v0[2], v0[3], v0[4]);
}

uint64_t sub_100970928()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100970938()
{
  uint64_t v0;

  sub_10095C204(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100970940()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100970950(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFALL)
    return sub_100055B48(result, a2, a3);
  return result;
}

uint64_t sub_100970978(double a1)
{
  uint64_t v1;

  return sub_10095B610(v1, a1);
}

uint64_t sub_100970980()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D0CD0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v4 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject(v0, ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
}

uint64_t sub_100970A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D0CD0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc(dword_1011D0CDC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10005AEE4;
  return sub_10092A300(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100970B08(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011BA2B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100565BA4(v8, a1, v4, v5, v6, v7);
}

uint64_t sub_100970B98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100970BBC()
{
  uint64_t v0;

  sub_10095B178(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100970BC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100970BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v24 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v24);
  v23 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  Date.init()(v11);
  v26 = *(_QWORD *)(v1 + 88);
  v12 = swift_allocObject(&unk_1010E4340, 24, 7);
  swift_weakInit(v12 + 16, v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v25, v2);
  v13 = v24;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10, v24);
  v14 = *(unsigned __int8 *)(v3 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v4 + v16 + v15) & ~v16;
  v18 = swift_allocObject(&unk_1010E4368, v17 + v7, v14 | v16 | 7);
  *(_QWORD *)(v18 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v18 + v15, v5, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, v23, v13);
  swift_retain();
  sub_10053AAF4((void (*)(uint64_t, double))sub_1009751D0, v18);
  v19 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v10, v13, v19);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100970DAC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections);
    if (*(_QWORD *)(v2 + 16) > a1)
      __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x100971098);
}

#error "100971110: call analysis failed (funcsize=15)"

BOOL sub_100971144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = IndexPath.section.getter(v6);
  v8 = sub_10093A524(2u);
  if ((v9 & 1) != 0)
  {
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  }
  else
  {
    v10 = v8;
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    if (v7 == v10)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 1;
    }
  }
  v13 = IndexPath.section.getter(v11);
  v14 = sub_10093A524(5u);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (v16 & 1) == 0 && v13 == v14;
}

uint64_t sub_10097125C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  BOOL v52;
  void (*v53)(_QWORD **, _QWORD);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(_QWORD **, _QWORD);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v92;
  unint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  char *v107;
  __n128 v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t result;
  uint64_t v116;
  char *v117;
  void (*v118)(_QWORD **, _QWORD);
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  __n128 v135;
  char *v136;
  int v137;
  __n128 v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  unint64_t v143;
  uint64_t v144;
  _BOOL8 v145;
  uint64_t v146;
  char *v147;
  char v148;
  unint64_t v149;
  char v150;
  _QWORD *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  __n128 v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  _QWORD *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void *v174;
  _QWORD *v175;

  v165 = a2;
  v173 = a1;
  v2 = type metadata accessor for Playlist.Entry(0);
  v169 = *(_QWORD *)(v2 - 8);
  v170 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v171 = (char *)&v156 - v6;
  __chkstk_darwin(v7);
  v160 = (char *)&v156 - v8;
  __chkstk_darwin(v9);
  v168 = (char *)&v156 - v10;
  __chkstk_darwin(v11);
  v161 = (char *)&v156 - v12;
  __chkstk_darwin(v13);
  v167 = (char *)&v156 - v14;
  v15 = sub_100007E8C((uint64_t *)&unk_1011D0D00);
  __chkstk_darwin(v15);
  v17 = (char *)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v163 = (uint64_t)&v156 - v19;
  __chkstk_darwin(v20);
  v164 = (char *)&v156 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v156 - v23;
  v25 = sub_100007E8C((uint64_t *)&unk_1011D0BB0);
  __chkstk_darwin(v25);
  v27 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v156 - v33;
  sub_10004A160(v173, (uint64_t)v27, (uint64_t *)&unk_1011D0BB0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  v173 = v29;
  if (v35 == 1)
  {
    sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011D0BB0);
    v168 = *(char **)(v29 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v168)(v31, v165, v28);
    v36 = sub_100049F28(&qword_1011C6810, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Sequence.makeIterator()(v28, v36);
    v37 = &v17[*(int *)(v15 + 36)];
    v38 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v39 = *(_QWORD **)v37;
    dispatch thunk of Collection.endIndex.getter(&v175, v28, v38);
    if (v39 == v175)
    {
      v40 = _swiftEmptyArrayStorage;
    }
    else
    {
      v172 = v31;
      v40 = _swiftEmptyArrayStorage;
      v49 = v170;
      do
      {
        v53 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v175, v37, v28, v38);
        v54 = v169;
        v55 = v171;
        (*(void (**)(char *))(v169 + 16))(v171);
        v53(&v175, 0);
        v56 = v172;
        ((void (*)(char *, char *, uint64_t))v168)(v172, v17, v28);
        dispatch thunk of Collection.formIndex(after:)(v37, v28, v38);
        (*(void (**)(char *, uint64_t))(v173 + 8))(v56, v28);
        v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v54 + 32))(v4, v55, v49);
        v58 = Playlist.Entry.catalogID.getter(v57);
        v60 = v59;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v4, v49);
        if (v60)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) != 0)
            v61 = v40;
          else
            v61 = sub_10043255C(0, v40[2] + 1, 1, v40);
          v63 = v61[2];
          v62 = v61[3];
          if (v63 >= v62 >> 1)
            v61 = sub_10043255C((_QWORD *)(v62 > 1), v63 + 1, 1, v61);
          v61[2] = v63 + 1;
          v40 = v61;
          v50 = &v61[2 * v63];
          v50[4] = v58;
          v50[5] = v60;
        }
        v51 = *(_QWORD **)v37;
        dispatch thunk of Collection.endIndex.getter(&v175, v28, v38);
        v52 = v51 == v175;
        v49 = v170;
      }
      while (!v52);
    }
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011D0D00);
    v41 = sub_1006A1A8C((uint64_t)v40);
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v34, v27, v28);
  v166 = (_QWORD *)sub_1000430A4((uint64_t)_swiftEmptyArrayStorage);
  v174 = &_swiftEmptySetSingleton;
  v42 = (uint64_t)v164;
  v171 = *(char **)(v29 + 16);
  ((void (*)(char *, char *, uint64_t))v171)(v164, v34, v28);
  v43 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v159 = v34;
  dispatch thunk of Collection.startIndex.getter(v28);
  *(_QWORD *)(v42 + *(int *)(v15 + 36)) = v175;
  sub_100065228(v42, (uint64_t)v24, (uint64_t *)&unk_1011D0D00);
  v44 = &v24[*(int *)(v15 + 36)];
  v45 = *(_QWORD **)v44;
  dispatch thunk of Collection.endIndex.getter(&v175, v28, v43);
  v46 = (uint64_t)v24;
  v172 = v31;
  if (v45 == v175)
  {
    v47 = v42;
    v48 = v170;
    goto LABEL_49;
  }
  v48 = v170;
  v158 = v15;
  do
  {
    v64 = v169;
    v65 = v161;
    while (1)
    {
      v66 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v175, v44, v28, v43);
      v67 = v167;
      (*(void (**)(char *))(v64 + 16))(v167);
      v66(&v175, 0);
      ((void (*)(char *, uint64_t, uint64_t))v171)(v31, v46, v28);
      dispatch thunk of Collection.formIndex(after:)(v44, v28, v43);
      (*(void (**)(char *, uint64_t))(v173 + 8))(v31, v28);
      v68 = (*(uint64_t (**)(char *, char *, uint64_t))(v64 + 32))(v65, v67, v48);
      v69 = Playlist.Entry.catalogID.getter(v68);
      v71 = v43;
      if (v70)
        break;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v48);
      v72 = *(_QWORD **)v44;
      dispatch thunk of Collection.endIndex.getter(&v175, v28, v43);
      v31 = v172;
      if (v72 == v175)
      {
        v15 = v158;
        v47 = (uint64_t)v164;
        goto LABEL_49;
      }
    }
    v73 = v69;
    v74 = v70;
    v157 = v44;
    v75 = v166;
    if (!v166[2] || (v76 = sub_10079C1D4(v69, v70), v75 = v166, (v77 & 1) == 0))
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v75);
      v175 = v166;
      v93 = sub_10079C1D4(v73, v74);
      v94 = v166[2];
      v95 = (v92 & 1) == 0;
      v96 = v94 + v95;
      v80 = v164;
      if (__OFADD__(v94, v95))
      {
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
        __break(1u);
        return result;
      }
      v97 = v92;
      if (v166[3] >= v96)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1007A7C24();
      }
      else
      {
        sub_1007A19EC(v96, isUniquelyReferenced_nonNull_native);
        v98 = sub_10079C1D4(v73, v74);
        if ((v97 & 1) != (v99 & 1))
          goto LABEL_93;
        v93 = v98;
      }
      v100 = v175;
      v166 = v175;
      if ((v97 & 1) != 0)
      {
        *(_QWORD *)(v175[7] + 8 * v93) = 1;
        goto LABEL_45;
      }
      v175[(v93 >> 6) + 8] |= 1 << v93;
      v101 = (uint64_t *)(v100[6] + 16 * v93);
      *v101 = v73;
      v101[1] = v74;
      *(_QWORD *)(v100[7] + 8 * v93) = 1;
      v102 = v100[2];
      v103 = __OFADD__(v102, 1);
      v104 = v102 + 1;
      if (v103)
        goto LABEL_86;
      goto LABEL_44;
    }
    v78 = *(_QWORD *)(v166[7] + 8 * v76);
    v79 = v78 + 1;
    v80 = v164;
    if (__OFADD__(v78, 1))
      goto LABEL_87;
    v81 = swift_isUniquelyReferenced_nonNull_native(v166);
    v175 = v166;
    v83 = sub_10079C1D4(v73, v74);
    v84 = v166[2];
    v85 = (v82 & 1) == 0;
    v86 = v84 + v85;
    if (__OFADD__(v84, v85))
      goto LABEL_88;
    if (v166[3] >= v86)
    {
      if ((v81 & 1) != 0)
        goto LABEL_41;
      v88 = v82;
      sub_1007A7C24();
    }
    else
    {
      v87 = v81;
      v88 = v82;
      sub_1007A19EC(v86, v87);
      v89 = sub_10079C1D4(v73, v74);
      if ((v88 & 1) != (v90 & 1))
        goto LABEL_93;
      v83 = v89;
    }
    v82 = v88;
LABEL_41:
    v100 = v175;
    v166 = v175;
    if ((v82 & 1) != 0)
    {
      *(_QWORD *)(v175[7] + 8 * v83) = v79;
      goto LABEL_45;
    }
    v175[(v83 >> 6) + 8] |= 1 << v83;
    v105 = (uint64_t *)(v100[6] + 16 * v83);
    *v105 = v73;
    v105[1] = v74;
    *(_QWORD *)(v100[7] + 8 * v83) = v79;
    v106 = v100[2];
    v103 = __OFADD__(v106, 1);
    v104 = v106 + 1;
    if (v103)
      goto LABEL_91;
LABEL_44:
    v100[2] = v104;
    swift_bridgeObjectRetain();
LABEL_45:
    v48 = v170;
    v107 = v161;
    swift_bridgeObjectRelease();
    v108 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v169 + 8))(v107, v48, v108);
    v44 = v157;
    v109 = *(_QWORD **)v157;
    v43 = v71;
    dispatch thunk of Collection.endIndex.getter(&v175, v28, v71);
    v52 = v109 == v175;
    v31 = v172;
    v15 = v158;
    v47 = (uint64_t)v80;
  }
  while (!v52);
LABEL_49:
  v162 = v43;
  sub_10004FF60(v46, (uint64_t *)&unk_1011D0D00);
  ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v47, v165, v28);
  dispatch thunk of Collection.startIndex.getter(v28);
  *(_QWORD *)(v47 + *(int *)(v15 + 36)) = v175;
  v110 = v162;
  v111 = v163;
  sub_100065228(v47, v163, (uint64_t *)&unk_1011D0D00);
  v112 = (_QWORD *)(v111 + *(int *)(v15 + 36));
  v113 = (_QWORD *)*v112;
  dispatch thunk of Collection.endIndex.getter(&v175, v28, v110);
  if (v113 != v175)
  {
    v116 = v169;
    v114 = v173;
    while (1)
    {
      v117 = v160;
      while (1)
      {
        v118 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v175, v112, v28, v110);
        v119 = v168;
        (*(void (**)(char *))(v116 + 16))(v168);
        v118(&v175, 0);
        v120 = v172;
        ((void (*)(char *, uint64_t, uint64_t))v171)(v172, v111, v28);
        dispatch thunk of Collection.formIndex(after:)(v112, v28, v110);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v120, v28);
        v121 = (*(uint64_t (**)(char *, char *, uint64_t))(v116 + 32))(v117, v119, v48);
        v122 = Playlist.Entry.catalogID.getter(v121);
        if (v123)
          break;
        (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v48);
        v124 = (_QWORD *)*v112;
        dispatch thunk of Collection.endIndex.getter(&v175, v28, v110);
        v52 = v124 == v175;
        v114 = v173;
        if (v52)
          goto LABEL_51;
      }
      v125 = v122;
      v126 = v123;
      if (!v166[2])
        goto LABEL_68;
      swift_bridgeObjectRetain();
      v127 = (uint64_t)v166;
      v128 = sub_10079C1D4(v125, v126);
      if ((v129 & 1) == 0)
        break;
      v130 = *(_QWORD *)(*(_QWORD *)(v127 + 56) + 8 * v128);
      swift_bridgeObjectRelease();
      v131 = v130 - 1;
      if (v130 == 1)
      {
        swift_bridgeObjectRetain();
        v132 = sub_10079C1D4(v125, v126);
        v134 = v133;
        v135 = swift_bridgeObjectRelease();
        v136 = v160;
        if ((v134 & 1) != 0)
        {
          v137 = swift_isUniquelyReferenced_nonNull_native(v127);
          v175 = (_QWORD *)v127;
          if (!v137)
          {
            sub_1007A7C24();
            v127 = (uint64_t)v175;
          }
          swift_bridgeObjectRelease();
          v166 = (_QWORD *)v127;
          sub_1007AA65C(v132, v127);
          v135 = swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v136, v48, v135);
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
      if (__OFSUB__(v130, 1))
        goto LABEL_89;
      v140 = (uint64_t)v166;
      v141 = swift_isUniquelyReferenced_nonNull_native(v166);
      v175 = (_QWORD *)v140;
      v143 = sub_10079C1D4(v125, v126);
      v144 = *(_QWORD *)(v140 + 16);
      v145 = (v142 & 1) == 0;
      v146 = v144 + v145;
      v147 = v160;
      if (__OFADD__(v144, v145))
        goto LABEL_90;
      v148 = v142;
      if (*(_QWORD *)(v140 + 24) >= v146)
      {
        if ((v141 & 1) == 0)
          sub_1007A7C24();
      }
      else
      {
        sub_1007A19EC(v146, v141);
        v149 = sub_10079C1D4(v125, v126);
        if ((v148 & 1) != (v150 & 1))
          goto LABEL_93;
        v143 = v149;
      }
      v48 = v170;
      v151 = v175;
      v166 = v175;
      if ((v148 & 1) != 0)
      {
        *(_QWORD *)(v175[7] + 8 * v143) = v131;
      }
      else
      {
        v175[(v143 >> 6) + 8] |= 1 << v143;
        v152 = (uint64_t *)(v151[6] + 16 * v143);
        *v152 = v125;
        v152[1] = v126;
        *(_QWORD *)(v151[7] + 8 * v143) = v131;
        v153 = v151[2];
        v103 = __OFADD__(v153, 1);
        v154 = v153 + 1;
        if (v103)
          goto LABEL_92;
        v151[2] = v154;
        swift_bridgeObjectRetain();
      }
      v116 = v169;
      v111 = v163;
      swift_bridgeObjectRelease();
      v155 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v147, v48, v155);
LABEL_70:
      v139 = (_QWORD *)*v112;
      v110 = v162;
      dispatch thunk of Collection.endIndex.getter(&v175, v28, v162);
      v52 = v139 == v175;
      v114 = v173;
      if (v52)
        goto LABEL_51;
    }
    swift_bridgeObjectRelease();
LABEL_68:
    sub_100195838((uint64_t *)&v175, v125, v126);
    v138 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v117, v48, v138);
LABEL_69:
    v111 = v163;
    goto LABEL_70;
  }
  v114 = v173;
LABEL_51:
  sub_10004FF60(v111, (uint64_t *)&unk_1011D0D00);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v159, v28);
  v41 = (uint64_t)v174;
LABEL_52:
  swift_bridgeObjectRelease();
  return v41;
}

double sub_100971FC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100955680(a1, a2);
}

uint64_t sub_100971FD0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100971FF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1005662DC(a1, v1);
}

uint64_t sub_100971FFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_100972024()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100972034(void *a1)
{
  uint64_t v1;

  sub_100566330(a1, *(double **)(v1 + 16));
}

uint64_t sub_10097203C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10097204C()
{
  unint64_t result;

  result = qword_1011D0D40;
  if (!qword_1011D0D40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_1011D0D40);
  }
  return result;
}

uint64_t sub_100972090(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_1009720DC()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_100972114(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D0D64);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100954C70(a1, v4, v5, v6);
}

id sub_100972188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  double v47;
  Class v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  void (*v53)(void);
  void *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void (*v64)();
  uint64_t v65;

  v2 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Entry(0);
  v10 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  v58 = v10;
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v55 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v56 = (char *)&v50 - v13;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for IndexPath(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))(v16, 1, 1, v17, v19);
    goto LABEL_6;
  }
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16))(v16, a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v17, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_6:
    v24 = (uint64_t *)&unk_1011A3D50;
    v25 = (uint64_t)v16;
    goto LABEL_7;
  }
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
  v23 = IndexPath.section.getter(v22);
  Array.subscript.getter(v23, *(_QWORD *)(v59 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections), (uint64_t)&type metadata for ContainerDetail.Section, (uint64_t)&aBlock);
  if (aBlock == 2)
  {
    sub_100965F24((uint64_t)v8);
    v28 = v57;
    v29 = v58;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v8, 1, v57) != 1)
    {
      v30 = (uint64_t)v56;
      v53 = *(void (**)(void))(v29 + 32);
      v53();
      v31 = sub_100955D2C(v30);
      if (v31)
      {
        v54 = v31;
        v32 = type metadata accessor for ContextualPreview.Data(0);
        v51 = swift_allocBox(v32);
        v34 = v33;
        Playlist.Entry.internalItem.getter(v51);
        sub_1001D2198(v34);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v35 = v56;
        v34[*(int *)(v32 + 36)] = Playlist.Entry.supportsContainerNavigation(itemState:)();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v36 = swift_allocObject(&unk_1010E35A8, 24, 7);
        swift_unknownObjectWeakInit(v36 + 16);
        v38 = v57;
        v37 = v58;
        v39 = v55;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v35, v57);
        v40 = *(unsigned __int8 *)(v37 + 80);
        v41 = (v40 + 24) & ~v40;
        v42 = swift_allocObject(&unk_1010E4458, v41 + v11, v40 | 7);
        *(_QWORD *)(v42 + 16) = v36;
        ((void (*)(uint64_t, char *, uint64_t))v53)(v42 + v41, v39, v38);
        v43 = (void *)objc_opt_self(UIContextMenuConfiguration);
        v44 = v51;
        v64 = sub_1002A445C;
        v65 = v51;
        aBlock = _NSConcreteStackBlock;
        v61 = 1107296256;
        v62 = sub_1000FA900;
        v63 = &unk_1010E4470;
        v45 = _Block_copy(&aBlock);
        swift_retain_n(v44, 2);
        swift_retain();
        swift_release();
        v64 = (void (*)())sub_100971FB4;
        v65 = v42;
        aBlock = _NSConcreteStackBlock;
        v61 = 1107296256;
        v62 = sub_100968BE4;
        v63 = &unk_1010E4498;
        v46 = _Block_copy(&aBlock);
        swift_retain();
        *(_QWORD *)&v47 = swift_release().n128_u64[0];
        v48 = isa;
        v26 = objc_msgSend(v43, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v45, v46, v47);
        swift_release();
        swift_release();

        _Block_release(v46);
        _Block_release(v45);
        v49 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v56, v57, v49);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
        swift_release();
        swift_release();
        return v26;
      }
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v30, v28);
      goto LABEL_4;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    v24 = (uint64_t *)&unk_1011B59A0;
    v25 = (uint64_t)v8;
LABEL_7:
    sub_10004FF60(v25, v24);
    return 0;
  }
LABEL_4:
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  return 0;
}

id sub_1009726C8(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void *v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  __n128 v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  id v61;
  void **aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  uint64_t (*v66)();
  uint64_t v67;
  char v68[24];

  v61 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - v11;
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IndexPath(0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v22 = v21;
  aBlock = (void **)objc_msgSend(v20, "identifier", v17);
  v23 = sub_100007E8C(&qword_1011A9960);
  v24 = swift_dynamicCast(v15, &aBlock, v23, v16, 6);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if (!v24)
  {
    v25(v15, 1, 1, v16);
    goto LABEL_7;
  }
  v58 = v6;
  v59 = v7;
  v25(v15, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v16) == 1)
  {
LABEL_7:
    v33 = (uint64_t *)&unk_1011A3D50;
    v34 = (uint64_t)v15;
    goto LABEL_8;
  }
  v26 = *(uint64_t (**)(char *, char *, uint64_t))(v22 + 32);
  v27 = v22;
  v28 = v19;
  v29 = v26(v19, v15, v16);
  v30 = IndexPath.section.getter(v29);
  Array.subscript.getter(v30, *(_QWORD *)&v60[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections], (uint64_t)&type metadata for ContainerDetail.Section, (uint64_t)&aBlock);
  if (aBlock != 2)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v16);
    return objc_msgSend(v61, "setPreferredCommitStyle:", 0);
  }
  v57 = v27;
  sub_100965F24((uint64_t)v5);
  v32 = v58;
  v31 = v59;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v5, 1, v58) != 1)
  {
    v56 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v56(v12, v5, v32);
    v36 = sub_100955D2C((uint64_t)v12);
    if (v36)
    {
      v37 = v36;
      v38 = v12;
      if (Playlist.Entry.supportsContainerNavigation(itemState:)())
      {
        v39 = (uint64_t)&v60[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
        swift_beginAccess(&v60[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v68, 0, 0);
        sub_10004A160(v39, (uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
        v40 = v59;
        if ((v63 & 1) != 0)
        {
          sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
        }
        else
        {
          v44 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
          sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011B6910);
          if (v44)
          {
            v45 = sub_10076BBD4();

            if (v45)
            {
              v47 = v58;
              v46 = v59;
              (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v9, v38, v58);
              v48 = *(unsigned __int8 *)(v46 + 80);
              v60 = v38;
              v49 = (v48 + 16) & ~v48;
              v50 = (v8 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
              v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
              v52 = swift_allocObject(&unk_1010E43B8, v51 + 8, v48 | 7);
              v56((char *)(v52 + v49), v9, v47);
              *(_QWORD *)(v52 + v50) = v45;
              *(_QWORD *)(v52 + v51) = v37;
              v66 = sub_100975474;
              v67 = v52;
              aBlock = _NSConcreteStackBlock;
              v63 = 1107296256;
              v64 = sub_1001DBD98;
              v65 = &unk_1010E43D0;
              v53 = _Block_copy(&aBlock);
              swift_retain();
              swift_retain();
              objc_msgSend(v61, "addAnimations:", v53, swift_release().n128_f64[0]);
              _Block_release(v53);
              swift_release();
              v54 = swift_release();
              (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v60, v47, v54);
              return (id)(*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v28, v16);
            }
            swift_release();
            v43 = v58;
            v40 = v59;
            goto LABEL_23;
          }
        }
        swift_release();
        v43 = v58;
LABEL_23:
        v41 = *(void (**)(char *, uint64_t))(v40 + 8);
        v42 = v38;
        goto LABEL_24;
      }
      swift_release();
      v41 = *(void (**)(char *, uint64_t))(v59 + 8);
      v42 = v12;
    }
    else
    {
      v41 = *(void (**)(char *, uint64_t))(v31 + 8);
      v42 = v12;
    }
    v43 = v32;
LABEL_24:
    v41(v42, v43);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v16);
    return objc_msgSend(v61, "setPreferredCommitStyle:", 0);
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v16);
  v33 = (uint64_t *)&unk_1011B59A0;
  v34 = (uint64_t)v5;
LABEL_8:
  sub_10004FF60(v34, v33);
  return objc_msgSend(v61, "setPreferredCommitStyle:", 0);
}

void sub_100972BC4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  _QWORD v20[3];
  char v21;
  _BYTE v22[24];
  uint64_t v23;
  char v24;

  v3 = v2;
  v6 = IndexPath.section.getter(a1);
  Array.subscript.getter(v6, *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections), (uint64_t)&type metadata for ContainerDetail.Section, (uint64_t)v22);
  switch(v22[0])
  {
    case 9:
      v8 = *(void **)(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsCell);
      *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_suggestedSongsCell) = a1;
      v9 = a1;

      break;
    case 2:
      sub_100950708(a2);
      v10 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
      swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v22, 0, 0);
      sub_10004A160(v10, (uint64_t)&v23, (uint64_t *)&unk_1011B6910);
      if ((v24 & 1) != 0)
      {
        sub_10004FF60((uint64_t)&v23, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        v15 = (void *)swift_unknownObjectWeakLoadStrong(&v23);
        sub_10004FF60((uint64_t)&v23, (uint64_t *)&unk_1011B6910);
        if (v15)
        {
          sub_100712CDC();

          sub_100928014(a1, a2, 0, 1, 4);
          swift_release();
        }
      }
      break;
    case 0:
      v7 = v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
      swift_beginAccess(v3 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v22, 0, 0);
      sub_10004A160(v7, (uint64_t)&v23, (uint64_t *)&unk_1011B6910);
      if ((v24 & 1) != 0)
      {
        sub_10004FF60((uint64_t)&v23, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        v11 = (void *)swift_unknownObjectWeakLoadStrong(&v23);
        sub_10004FF60((uint64_t)&v23, (uint64_t *)&unk_1011B6910);
        if (v11)
        {
          v12 = sub_10070FCAC();

          v13 = *(_QWORD *)(v12 + 72);
          if (v13 == 1 || v13 == 2)
          {
            swift_release();
            v14 = 2;
          }
          else
          {
            v16 = *(_QWORD *)(v12 + 64);
            swift_release();
            v14 = (v16 & 1) == 0;
          }
          v17 = sub_10095376C();
          KeyPath = swift_getKeyPath(&unk_100ED7CE0);
          __chkstk_darwin(KeyPath);
          v20[2] = v17;
          v21 = v14;
          v23 = v17;
          v19 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v23, KeyPath, sub_10097699C, v20, (char *)&type metadata for () + 8, v19);
          swift_release();
          swift_release();
        }
      }
      sub_100955508();
      break;
  }
}

void sub_100972E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *Strong;
  _BYTE v8[24];
  _BYTE v9[16];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections);
  v5 = IndexPath.section.getter(a1);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= *(_QWORD *)(v4 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  if (*(_BYTE *)(v4 + v5 + 32) == 2)
  {
    v6 = v1 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController, v8, 0, 0);
    sub_10004A160(v6, (uint64_t)v9, (uint64_t *)&unk_1011B6910);
    if ((v9[8] & 1) != 0)
    {
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B6910);
    }
    else
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v9);
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B6910);
      if (Strong)
      {
        sub_100712CDC();

        sub_100970BD4(a1);
        swift_release();
      }
    }
  }
}

uint64_t sub_100972F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v3[2] = a1;
  v3[3] = a3;
  v4 = type metadata accessor for MusicPropertySource(0);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v3[6] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B6938) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[7] = swift_task_alloc(v6);
  v3[8] = swift_task_alloc(v6);
  v7 = sub_100007E8C(&qword_1011A30F0);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v3[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[11] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v10);
  v3[13] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v3[14] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v3[15] = v13;
  v3[16] = v14;
  return swift_task_switch(sub_1009730A0, v13, v14);
}

uint64_t sub_1009730A0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 24);
  if (!v1)
    goto LABEL_7;
  *(_BYTE *)(v0 + 160) = 6;
  v2 = sub_10004D63C();
  v3 = v1;
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v2) & 1) == 0)
  {
LABEL_6:

LABEL_7:
    swift_release();
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  sub_10004A160(*(_QWORD *)(v0 + 16), v6, &qword_1011A30F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    v7 = *(_QWORD *)(v0 + 72);

    swift_release();
    sub_10004FF60(v7, &qword_1011A30F0);
LABEL_8:
    v8 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  v14 = sub_10076BBD4();
  *(_QWORD *)(v0 + 136) = v14;
  if (!v14)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 32);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EAE9C0;
  sub_100007E8C(&qword_10119F4A8);
  *(_QWORD *)(v19 + 32) = static PartialMusicProperty<A>.socialProfile.getter();
  *(_QWORD *)(v19 + 40) = static PartialMusicProperty<A>.curator.getter();
  *(_QWORD *)(v19 + 48) = static PartialMusicProperty<A>.radioShow.getter();
  *(_QWORD *)(v19 + 56) = static PartialMusicProperty<A>.genre.getter();
  v20 = static PartialMusicProperty<A>.collaborators.getter();
  *(_QWORD *)(v19 + 64) = v20;
  specialized Array._endMutation()(v20);
  *(_QWORD *)(v0 + 144) = v19;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, enum case for MusicPropertySource.catalog(_:), v17);
  v21 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 152) = v21;
  v22 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  *v21 = v0;
  v21[1] = sub_100973310;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 96), v19, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 80), &protocol witness table for Playlist, &protocol witness table for Playlist, v22);
}

uint64_t sub_100973310()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 152));
  v4 = v2[5];
  v3 = v2[6];
  v5 = v2[4];
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[15];
    v7 = v2[16];
    v8 = sub_100973544;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[6], v2[4]);
    swift_bridgeObjectRelease();
    v6 = v2[15];
    v7 = v2[16];
    v8 = sub_1009733C4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1009733C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(char **)(v0 + 64);
  swift_release();
  sub_10092B260(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 64), v5, &qword_1011B6938);
  v6 = type metadata accessor for ContainerDetail.AttributionItem(0);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(void **)(v0 + 24);
  if (v7 == 1)
  {
    swift_release();

    sub_10004FF60(v13, &qword_1011B6938);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    sub_10004FF60(v12, &qword_1011B6938);
  }
  else
  {
    swift_retain();
    sub_10070C5A4(v15);

    swift_release_n(v8, 2, v16);
    sub_10004FF60(v13, &qword_1011B6938);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    sub_10005B748(v12, type metadata accessor for ContainerDetail.AttributionItem);
  }
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 48);
  v20 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100973544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  v2 = type metadata accessor for ContainerDetail.AttributionItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  v4 = *(_QWORD *)(v0 + 56);
  sub_10004A160(*(_QWORD *)(v0 + 64), v4, &qword_1011B6938);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(void **)(v0 + 24);
  if (v5 == 1)
  {
    swift_release();

    sub_10004FF60(v11, &qword_1011B6938);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    sub_10004FF60(v10, &qword_1011B6938);
  }
  else
  {
    swift_retain();
    sub_10070C5A4(v13);

    swift_release_n(v6, 2, v14);
    sub_10004FF60(v11, &qword_1011B6938);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    sub_10005B748(v10, type metadata accessor for ContainerDetail.AttributionItem);
  }
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 72);
  v19 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009736C0()
{
  uint64_t v0;

  return sub_100602650(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1009736E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100953EB4(v1, a1);
}

uint64_t sub_1009736EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1011D0D94);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10006AEE4;
  return sub_100953B04(a1, v1);
}

void sub_100973740()
{
  uint64_t v0;

  sub_100119450(v0, sub_10095437C);
}

void sub_100973760()
{
  uint64_t v0;

  sub_100119450(v0, (void (*)(void))sub_100954FC4);
}

uint64_t sub_100973780()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100973790()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1009737B4()
{
  sub_10095C01C();
}

uint64_t sub_1009737D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1009737E4()
{
  uint64_t v0;

  sub_10095355C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1009737FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10097380C()
{
  uint64_t v0;

  sub_100953694(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100973814()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100973828(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D0DA4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100951E98(a1, v4, v5, v6);
}

uint64_t sub_100973894()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009738C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011D0DB4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100952A30(a1, v4, v5, v7, v6);
}

uint64_t sub_100973944(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D0DD4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100950D30(a1, v4, v5, v6);
}

uint64_t sub_1009739B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100973A30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011ACC20) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D0DE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_1009514A0(a1, v5, v6, v7, v8);
}

uint64_t sub_100973AC8(uint64_t a1)
{
  uint64_t v1;

  return sub_100950300(a1, v1);
}

uint64_t sub_100973AD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D0E5C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10094F41C(a1, v4, v5, v6);
}

uint64_t sub_100973B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Collaboration.Object(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload(v0 + v3, v1) == 1)
  {
    v5 = type metadata accessor for Playlist(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {

  }
  v6 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return swift_deallocObject(v0, v6 + 8);
}

uint64_t sub_100973C14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Object(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = v1[5];
  v11 = (uint64_t)v1 + v5;
  v12 = *(_QWORD *)((char *)v1 + v6);
  v13 = *(_QWORD *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1011D0E74);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_10094DD60(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_100973CDC(uint64_t a1)
{
  return sub_10094F05C(a1);
}

uint64_t sub_100973CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for Collaboration.Object(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  if (swift_getEnumCaseMultiPayload(v0 + v3, v1) == 1)
  {
    v9 = type metadata accessor for Playlist(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {

  }
  v10 = (v3 + v4 + v7) & ~v7;
  v11 = (v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v10, v5);

  return swift_deallocObject(v0, v11 + 8);
}

uint64_t sub_100973DFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Object(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + v8;
  v14 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_1011D0EAC);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10006AEE4;
  return sub_10094C9F8(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_100973ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, v8);
}

uint64_t sub_100973FA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011ACC20) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1011D0EEC);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_10094BB44(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_100974064(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D0EFC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10094BD5C(a1, v4, v5, v6);
}

void sub_1009740D0(uint64_t a1)
{
  uint64_t v1;

  sub_10094AB4C(a1, v1);
}

uint64_t sub_1009740D8()
{
  return Playlist.collaboration.getter();
}

uint64_t sub_1009740F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Playlist.hasActiveCollaboration.getter();
  *a1 = result & 1;
  return result;
}

void sub_100974128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10094A108(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_100974130(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)1)

}

uint64_t sub_100974140()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_release();
  swift_unknownObjectWeakDestroy(v0 + 24, v1);
  v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v2);
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject(v0, 96);
}

void sub_100974198(uint64_t a1)
{
  uint64_t v1;

  sub_1009493F0(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1009741A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryPlaylistEntryInternalSortProperties.releaseDate.getter(v1, v2);
}

uint64_t sub_1009741E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistEntryInternalSortProperties.title.getter, a2);
}

uint64_t sub_1009741F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistEntryInternalSortProperties.albumTitle.getter, a2);
}

uint64_t sub_100974200@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryPlaylistEntryInternalSortProperties.trackNumber.getter(v3, v4);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t sub_10097424C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistEntryInternalSortProperties.artistName.getter, a2);
}

uint64_t sub_100974258@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryPlaylistEntryInternalSortProperties.position.getter(v3, v4);
  *a2 = result;
  return result;
}

void sub_10097429C(__int16 a1)
{
  uint64_t v1;

  sub_10093D5AC(a1 & 0x1FF, v1);
}

uint64_t sub_1009742A8()
{
  return sub_100974338(56);
}

uint64_t sub_1009742B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011D0F94);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100946604(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100974330()
{
  return sub_100974338(48);
}

uint64_t sub_100974338(uint64_t a1)
{
  _QWORD *v1;

  swift_unknownObjectRelease(v1[2]);
  swift_release(v1[4]);
  swift_release(v1[5]);
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100974378(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011D0FA4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100946DF8(a1, v4, v5, v7, v6);
}

uint64_t sub_1009743F0(uint64_t a1)
{
  return sub_10093D66C(a1);
}

uint64_t sub_1009743F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100974424(uint64_t a1)
{
  uint64_t v1;

  sub_1009449F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100974430()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011D0FFC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100945424();
}

uint64_t sub_10097449C(uint64_t a1)
{
  uint64_t v1;

  return sub_100943644(a1, v1);
}

void sub_1009744A4()
{
  uint64_t v0;

  sub_100119450(v0, (void (*)(void))sub_100939D7C);
}

uint64_t sub_1009744D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PlaylistFilter.id.getter, a2);
}

id sub_1009744E0(uint64_t a1)
{
  uint64_t v1;

  return sub_10093E9B0(a1, v1);
}

uint64_t sub_1009744E8()
{
  return sub_100496BB4((uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_1009744F4()
{
  return sub_100496E84((uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_100974500()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1090) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  type metadata accessor for Actions.Collaborate.Context(0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject(v0, v3 + 8);
}

uint64_t sub_100974630()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1090) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10093F6F4((_OWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

_QWORD *sub_100974678(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[9];
  v5 = a1[11];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

double sub_1009746E0(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return sub_100926BB8(a1, a2, a3, a4, a5, v5, (uint64_t)&unk_1010E3FF8, (uint64_t)sub_10097471C, (uint64_t)sub_100974744);
}

double sub_10097471C(uint64_t a1)
{
  uint64_t v1;

  return sub_1009272EC(a1, v1, (uint64_t)&unk_1010E4020, (uint64_t)&unk_1011D10B8);
}

double sub_100974744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100927D10(a1, a2, v2);
}

uint64_t sub_100974760(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011D10B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100927910(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1009747E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100975A30(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))sub_100142884);
}

uint64_t sub_1009747F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100975A30(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))sub_10014284C);
}

uint64_t sub_100974804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100975A30(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))sub_100142764);
}

uint64_t sub_100974824(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D10F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100939A38(a1, v4, v5, v6);
}

void sub_100974890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1009394CC(a1, a2, a3, v3);
}

unint64_t sub_100974898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100939880(v1, a1);
}

void sub_1009748A0(void *a1)
{
  uint64_t v1;

  sub_1009259E0(a1, v1);
}

uint64_t sub_1009748A8()
{
  return sub_100975AE4((uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_1009748B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1011D110C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100925FDC(a1, v9, v10, v11, v12, v13);
}

double sub_100974980(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100926144(a1, a2, v2, sub_10092680C);
}

uint64_t sub_1009749A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = (_QWORD *)swift_task_alloc(dword_1011C5B1C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100715FA0(a1, v6, v7, v8, v9, v11, v12, v13);
}

uint64_t sub_100974A6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100974A98(uint64_t a1)
{
  uint64_t v1;

  return sub_100961AC0(a1, v1);
}

uint64_t sub_100974AB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10093610C(v1, a1);
}

_QWORD *sub_100974ABC(uint64_t a1)
{
  uint64_t v1;

  return sub_100936344(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100974AC4(uint64_t a1)
{
  uint64_t v1;

  sub_100937194(a1, v1);
}

uint64_t sub_100974ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v6);
  v7 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v7 != 255)
    sub_100064AA4(*(id *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), v7);
  if (*(_QWORD *)(v5 + 56))
    swift_release();
  return swift_deallocObject(v0, v4 + 72);
}

uint64_t sub_100974B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)swift_task_alloc(dword_1011D1144);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100937040(a1, v6, v7);
}

uint64_t sub_100974BF4()
{
  return sub_100496E84((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_100974C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + v6);
  v9 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D1164);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100936EB8(a1, v7, v8, v9);
}

uint64_t sub_100974C9C(uint64_t a1)
{
  uint64_t v1;

  return static IndexPath.== infix(_:_:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_100974CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1011D117C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10006AEE4;
  return sub_100934430(a1, v1);
}

uint64_t sub_100974D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100974D9C()
{
  uint64_t v0;

  type metadata accessor for Playlist.Entry(0);
  sub_100934358(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100974DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

void sub_100974EB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1009317F0(a1, a2, a3, v3);
}

uint64_t sub_100974EBC()
{
  uint64_t v0;

  return sub_100931AA8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

double sub_100974ECC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_100930FD0(a1, a2, a3, v3);
}

void sub_100974ED4(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  sub_1009312DC(v1[2], v1[3], v1[4], a1);
}

void sub_100974EE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_100930880(a1, a2, a3, v3);
}

uint64_t sub_100974EF8()
{
  uint64_t *v0;

  return sub_100930BF8(v0[2], v0[3], v0[4]);
}

uint64_t sub_100974F04()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

void sub_100974F28(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3;

  sub_1009301C4(a1, a2, a3, v3);
}

uint64_t sub_100974F30@<X0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_100930460(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

void sub_100974F40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_10092FDA0(a1, a2, a3, v3);
}

uint64_t sub_100974F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10092FF58(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_100974F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10092F974(a1, a2, a3, v3);
}

uint64_t sub_100974F5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10092FA98(v1, a1);
}

void sub_100974F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10092F0D8(a1, a2, a3, v3);
}

uint64_t sub_100974F6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10092F59C(v1[2], v1[3], v1[4], a1);
}

void sub_100974F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10092DAF4(a1, a2, a3, v3);
}

void *sub_100974F84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8) + 80);
  return sub_1009591B4(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_100974FC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10092E8F0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD **)(v1 + 72), a1, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_100975000()
{
  return sub_100975E44((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_100975014(uint64_t a1)
{
  return sub_100975F1C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1001F4FEC);
}

uint64_t sub_100975030()
{
  return sub_100496BB4((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry);
}

uint64_t sub_10097503C()
{
  return sub_100975048((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry);
}

uint64_t sub_100975048(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_100925380(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_100975088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10092D7D0(a1, a2, a3, v3);
}

uint64_t sub_100975090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100953C78();
  *a1 = result;
  return result;
}

unint64_t sub_1009750B8()
{
  unint64_t result;

  result = qword_1011D1388;
  if (!qword_1011D1388)
  {
    result = swift_getWitnessTable(&unk_100ECF534, &type metadata for SearchHeader);
    atomic_store(result, (unint64_t *)&qword_1011D1388);
  }
  return result;
}

void sub_1009750FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10092D178(a1, a2, a3, v3);
}

uint64_t sub_100975104()
{
  uint64_t v0;

  return sub_10092D498(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100975114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

void sub_1009751D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_100928548(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_100975244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 10) & ~v9;
  v13 = v10 + *(_QWORD *)(v8 + 64);
  v11 = v3 | v9 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);
  return swift_deallocObject(v0, v13, v11);
}

uint64_t sub_100975338(double a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  return sub_1009282F8(*(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 9), v1 + ((v7 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 10) & ~v7), a1);
}

uint64_t sub_1009753E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_100975474()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10093484C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1009754C0()
{
  return sub_100530C5C((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo);
}

uint64_t sub_1009754CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for MusicVideo(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1011D13D4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return sub_100934E68(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100975578()
{
  return sub_100530C5C((uint64_t (*)(_QWORD))&type metadata accessor for Song);
}

uint64_t sub_100975584(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1011D13E4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return sub_100934C4C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100975634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100975700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  v6 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v7);
  v8 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release();
  return swift_deallocObject(v0, v4 + 72);
}

uint64_t sub_1009757BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

double sub_1009757E8(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return sub_100926BB8(a1, a2, a3, a4, a5, v5, (uint64_t)&unk_1010E49A8, (uint64_t)sub_100975824, (uint64_t)sub_100974744);
}

double sub_100975824(uint64_t a1)
{
  uint64_t v1;

  return sub_1009272EC(a1, v1, (uint64_t)&unk_1010E49D0, (uint64_t)&unk_1011D14D8);
}

uint64_t sub_100975850()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10097588C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011D14D4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100927460(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100975918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  int v13;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v8[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v8);
  v9 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;

  v11 = *(void **)(v0 + v4 + 8);
  if ((unint64_t)v11 >= 4)

  v12 = v0 + v9;
  swift_unknownObjectWeakDestroy(v0 + v9, v10);
  v13 = *(unsigned __int8 *)(v0 + v9 + 48);
  if (v13 != 255)
    sub_100064AA4(*(id *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), v13);
  if (*(_QWORD *)(v12 + 56))
    swift_release();
  return swift_deallocObject(v0, v9 + 72);
}

uint64_t sub_100975A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v11 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a5(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), v5 + v12, *(_QWORD *)(v5 + v13), *(_QWORD *)(v5 + v13 + 8), v5 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8));
}

void sub_100975AD0(void *a1)
{
  uint64_t v1;

  sub_10092557C(a1, v1);
}

uint64_t sub_100975AD8()
{
  return sub_100975AE4((uint64_t (*)(_QWORD))&type metadata accessor for Album);
}

uint64_t sub_100975AE4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v3 + 8))(v1 + v4, v2, v9);

  v10 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v1 + v7, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v1 + v7, v10);
  return swift_deallocObject(v1, v7 + v8);
}

uint64_t sub_100975BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1F10) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1011D14E4);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100925E44(a1, v9, v10, v11, v12, v13);
}

double sub_100975CAC(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100926144(a1, a2, v2, sub_100926460);
}

uint64_t sub_100975CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  if (*(_QWORD *)(v0 + v4 + 16) != 1)
    swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4 + 24);
}

uint64_t sub_100975D68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = (_QWORD *)swift_task_alloc(dword_1011C5B1C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10005AEE4;
  return sub_100715FA0(a1, v6, v7, v8, v9, v11, v12, v13);
}

uint64_t sub_100975E30()
{
  return sub_100975E44((uint64_t (*)(_QWORD))&type metadata accessor for Track, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
}

uint64_t sub_100975E44(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 64);
  v14 = v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2 + v12, v9);
  return swift_deallocObject(v2, v13, v14);
}

uint64_t sub_100975F00(uint64_t a1)
{
  return sub_100975F1C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Track, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1001F4FE0);
}

uint64_t sub_100975F1C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, v4 + v8, v4 + ((v8 + v9 + v10) & ~v10));
}

uint64_t sub_100975FA0()
{
  return sub_100496BB4((uint64_t (*)(_QWORD))&type metadata accessor for Track);
}

uint64_t sub_100975FAC()
{
  return sub_100975048((uint64_t (*)(_QWORD))&type metadata accessor for Track);
}

uint64_t *sub_100975FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C20) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = sub_100007E8C((uint64_t *)&unk_1011D0C30);
      *(uint64_t *)((char *)a1 + *(int *)(v17 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v17 + 48));
      swift_retain();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

double sub_100976134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 2)
  {
    v6 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
    v2 += *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C20) + 48);
    v5 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
    return result;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      return result;
    v5 = type metadata accessor for IndexPath(0);
    goto LABEL_6;
  }
  v7 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v2, v7);
  sub_100007E8C((uint64_t *)&unk_1011D0C30);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_100976204(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C20) + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v14 = sub_100007E8C((uint64_t *)&unk_1011D0C30);
    *(_QWORD *)&a1[*(int *)(v14 + 48)] = *(_QWORD *)&a2[*(int *)(v14 + 48)];
    swift_retain();
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_100976358(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C20) + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = sub_100007E8C((uint64_t *)&unk_1011D0C30);
      *(_QWORD *)&a1[*(int *)(v14 + 48)] = *(_QWORD *)&a2[*(int *)(v14 + 48)];
      swift_retain();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

char *sub_1009764C4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C20) + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    v14 = sub_100007E8C((uint64_t *)&unk_1011D0C30);
    *(_QWORD *)&a1[*(int *)(v14 + 48)] = *(_QWORD *)&a2[*(int *)(v14 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_100976614(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for PlaylistDetailDataSource.PlaybackIntentCreationError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011D0C20) + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = sub_100007E8C((uint64_t *)&unk_1011D0C30);
      *(_QWORD *)&a1[*(int *)(v14 + 48)] = *(_QWORD *)&a2[*(int *)(v14 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10097677C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE v11[32];
  _BYTE v12[32];
  _QWORD v13[3];

  v2 = type metadata accessor for IndexPath(319);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v13[0] = *(_QWORD *)(v2 - 8) + 64;
    v5 = type metadata accessor for Playlist.Entry(319);
    v3 = v5;
    if (v6 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v12, *(_QWORD *)(v5 - 8) + 64, (char *)&value witness table for Builtin.NativeObject + 64);
      v13[1] = v12;
      v3 = type metadata accessor for Playlist(319);
      if (v7 <= 0x3F)
      {
        v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(319);
        if (v9 > 0x3F)
        {
          return v8;
        }
        else
        {
          swift_getTupleTypeLayout2(v11, *(_QWORD *)(v3 - 8) + 64, *(_QWORD *)(v8 - 8) + 64);
          v13[2] = v11;
          swift_initEnumMetadataMultiPayload(a1, 256, 3, v13);
          return 0;
        }
      }
    }
  }
  return v3;
}

uint64_t sub_100976870(uint64_t a1)
{
  return sub_100974C9C(a1) & 1;
}

uint64_t sub_10097699C()
{
  return sub_1004CB6FC();
}

uint64_t *sub_1009769B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  void *v86;
  char v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  char *__dst;
  uint64_t v131;
  unsigned int (*v132)(uint64_t *, uint64_t, uint64_t);
  uint64_t v133;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v132 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v133 = v7;
    v131 = v8;
    if (v132(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Cover(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      v22 = sub_100007E8C(&qword_1011A6AF0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
      {
        v23 = type metadata accessor for AttributedString(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v17, v18, v23);
        v24 = 1;
      }
      else
      {
        v25 = v18[1];
        *v17 = *v18;
        v17[1] = v25;
        swift_bridgeObjectRetain();
        v24 = 0;
      }
      swift_storeEnumTagMultiPayload(v17, v19, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v26 = v11[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for ArtworkImage.ViewModel(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v27, v28, v32);
      v33 = *(int *)(v29 + 20);
      __dst = &v27[v33];
      v34 = &v28[v33];
      v35 = type metadata accessor for Artwork.CropStyle(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v38 = v11[8];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
    {
      v43 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Playlist.Variant(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v39, v40, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v44);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 10, v41);
    }
    *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
    v47 = v11[10];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = v49[16];
    if (v50 == 255)
    {
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v48[16] = v49[16];
    }
    else
    {
      v51 = v50 & 1;
      v52 = *(_QWORD *)v49;
      v53 = *((_QWORD *)v49 + 1);
      sub_1001F579C(*(_QWORD *)v49, v53, v50 & 1);
      *(_QWORD *)v48 = v52;
      *((_QWORD *)v48 + 1) = v53;
      v48[16] = v51;
    }
    v54 = v11[11];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = *(void **)((char *)a2 + v54);
    *(uint64_t *)((char *)a1 + v54) = (uint64_t)v57;
    v58 = (int *)type metadata accessor for SegueContext(0);
    v59 = v58[5];
    v60 = &v55[v59];
    v61 = &v56[v59];
    v62 = v57;
    if (v132((uint64_t *)v61, 1, v133))
    {
      v63 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v60, v61, v133);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v60, 0, 1, v133);
    }
    v55[v58[6]] = v56[v58[6]];
    v64 = v58[7];
    v65 = &v55[v64];
    v66 = &v56[v64];
    if (*(_QWORD *)v66)
    {
      v67 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v67;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v65 = *(_OWORD *)v66;
    }
    v68 = v11[12];
    v69 = (uint64_t *)((char *)a1 + v68);
    v70 = (uint64_t *)((char *)a2 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = v11[13];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    v75 = type metadata accessor for URL(0);
    v76 = *(_QWORD *)(v75 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    if (v77(v74, 1, v75))
    {
      v78 = sub_100007E8C(&qword_10119E460);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    v79 = v11[14];
    v80 = *(void **)((char *)a2 + v79);
    *(uint64_t *)((char *)a1 + v79) = (uint64_t)v80;
    v81 = a3[5];
    v82 = a3[6];
    v83 = (char *)a1 + v81;
    v84 = (char *)a2 + v81;
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v83[8] = v84[8];
    v85 = (char *)a1 + v82;
    v86 = *(void **)((char *)a2 + v82);
    v87 = *((_BYTE *)a2 + v82 + 8);
    v88 = v80;
    sub_1000A4100(v86, v87);
    *(_QWORD *)v85 = v86;
    v85[8] = v87;
    v89 = a3[7];
    v90 = a3[8];
    v91 = (uint64_t *)((char *)a1 + v89);
    v92 = (uint64_t *)((char *)a2 + v89);
    v93 = *v92;
    v94 = v92[1];
    *v91 = v93;
    v91[1] = v94;
    v95 = (uint64_t *)((char *)a1 + v90);
    v96 = (uint64_t *)((char *)a2 + v90);
    v98 = *v96;
    v97 = v96[1];
    *v95 = v98;
    v95[1] = v97;
    v99 = a3[9];
    v100 = (char *)a1 + v99;
    v101 = (char *)a2 + v99;
    v102 = *(_QWORD *)v101;
    v103 = *((_QWORD *)v101 + 1);
    v104 = v101[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v102, v103);
    *(_QWORD *)v100 = v102;
    *((_QWORD *)v100 + 1) = v103;
    v100[16] = v104;
    v105 = a3[10];
    v106 = a3[11];
    v107 = (uint64_t *)((char *)a1 + v105);
    v108 = (uint64_t *)((char *)a2 + v105);
    v109 = *v108;
    v110 = v108[1];
    *v107 = v109;
    v107[1] = v110;
    v111 = (uint64_t *)((char *)a1 + v106);
    v112 = (uint64_t *)((char *)a2 + v106);
    v114 = *v112;
    v113 = v112[1];
    *v111 = v114;
    v111[1] = v113;
    v115 = a3[12];
    v116 = a3[13];
    v117 = (uint64_t *)((char *)a1 + v115);
    v118 = (uint64_t *)((char *)a2 + v115);
    v120 = *v118;
    v119 = v118[1];
    *v117 = v120;
    v117[1] = v119;
    v121 = (char *)a1 + v116;
    v122 = *(uint64_t *)((char *)a2 + v116);
    v123 = *(uint64_t *)((char *)a2 + v116 + 8);
    LOBYTE(v100) = *((_BYTE *)a2 + v116 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v122, v123, (char)v100);
    *(_QWORD *)v121 = v122;
    *((_QWORD *)v121 + 1) = v123;
    v121[16] = (char)v100;
    v124 = a3[14];
    v125 = (char *)a1 + v124;
    v126 = (char *)a2 + v124;
    v127 = *(_QWORD *)v126;
    v128 = *((_QWORD *)v126 + 1);
    LOBYTE(v114) = v126[16];
    sub_1000A411C(*(_QWORD *)v126, v128, v114);
    *(_QWORD *)v125 = v127;
    *((_QWORD *)v125 + 1) = v128;
    v125[16] = v114;
  }
  return a1;
}

uint64_t type metadata accessor for Cover(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D16D8, (uint64_t)&nominal type descriptor for Cover);
}

double sub_1009770E4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  id *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Cover(0);
  swift_bridgeObjectRelease();
  v8 = a1 + v7[6];
  v9 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v11 = a1 + v7[7];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
    v14 = v11 + *(int *)(v12 + 20);
    v15 = type metadata accessor for Artwork.CropStyle(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  v17 = a1 + v7[8];
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 10, v18))
  {
    v19 = type metadata accessor for Playlist.Variant(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }
  v21 = a1 + v7[10];
  v22 = *(unsigned __int8 *)(v21 + 16);
  if (v22 != 255)
    sub_1001F57BC(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), v22 & 1);
  v23 = (id *)(a1 + v7[11]);

  v24 = type metadata accessor for SegueContext(0);
  v25 = (char *)v23 + *(int *)(v24 + 20);
  if (!v6((uint64_t)v25, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v4);
  if (*(id *)((char *)v23 + *(int *)(v24 + 28)))
    swift_release();
  swift_bridgeObjectRelease();
  v26 = a1 + v7[13];
  v27 = type metadata accessor for URL(0);
  v28 = *(_QWORD *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);

  sub_1000A4224(*(id *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8), *(_BYTE *)(a1 + a2[14] + 16));
}

char *sub_10097743C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  void *v84;
  char v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  char *__dst;
  uint64_t v129;
  unsigned int (*v130)(char *, uint64_t, uint64_t);
  uint64_t v131;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v130 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v131 = v6;
  v129 = v7;
  if (v130(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Cover(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    v20 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v21 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
      v22 = 1;
    }
    else
    {
      v23 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v23;
      swift_bridgeObjectRetain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v24 = v9[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v25, v26, v30);
    v31 = *(int *)(v27 + 20);
    __dst = &v25[v31];
    v32 = &v26[v31];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v36 = v9[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v45 = v9[10];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = v47[16];
  if (v48 == 255)
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
  }
  else
  {
    v49 = v48 & 1;
    v50 = *(_QWORD *)v47;
    v51 = *((_QWORD *)v47 + 1);
    sub_1001F579C(*(_QWORD *)v47, v51, v48 & 1);
    *(_QWORD *)v46 = v50;
    *((_QWORD *)v46 + 1) = v51;
    v46[16] = v49;
  }
  v52 = v9[11];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *(void **)&a2[v52];
  *(_QWORD *)&a1[v52] = v55;
  v56 = (int *)type metadata accessor for SegueContext(0);
  v57 = v56[5];
  v58 = &v53[v57];
  v59 = &v54[v57];
  v60 = v55;
  if (v130(v59, 1, v131))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v58, v59, v131);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v58, 0, 1, v131);
  }
  v53[v56[6]] = v54[v56[6]];
  v62 = v56[7];
  v63 = &v53[v62];
  v64 = &v54[v62];
  if (*(_QWORD *)v64)
  {
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v63 = *(_OWORD *)v64;
  }
  v66 = v9[12];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *((_QWORD *)v67 + 1) = v69;
  v70 = v9[13];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = type metadata accessor for URL(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  swift_bridgeObjectRetain();
  if (v75(v72, 1, v73))
  {
    v76 = sub_100007E8C(&qword_10119E460);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v77 = v9[14];
  v78 = *(void **)&a2[v77];
  *(_QWORD *)&a1[v77] = v78;
  v79 = a3[5];
  v80 = a3[6];
  v81 = &a1[v79];
  v82 = &a2[v79];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = v82[8];
  v83 = &a1[v80];
  v84 = *(void **)&a2[v80];
  v85 = a2[v80 + 8];
  v86 = v78;
  sub_1000A4100(v84, v85);
  *(_QWORD *)v83 = v84;
  v83[8] = v85;
  v87 = a3[7];
  v88 = a3[8];
  v89 = &a1[v87];
  v90 = &a2[v87];
  v91 = *(_QWORD *)v90;
  v92 = *((_QWORD *)v90 + 1);
  *(_QWORD *)v89 = v91;
  *((_QWORD *)v89 + 1) = v92;
  v93 = &a1[v88];
  v94 = &a2[v88];
  v96 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v95;
  v97 = a3[9];
  v98 = &a1[v97];
  v99 = &a2[v97];
  v100 = *(_QWORD *)v99;
  v101 = *((_QWORD *)v99 + 1);
  v102 = v99[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v100, v101);
  *(_QWORD *)v98 = v100;
  *((_QWORD *)v98 + 1) = v101;
  v98[16] = v102;
  v103 = a3[10];
  v104 = a3[11];
  v105 = &a1[v103];
  v106 = &a2[v103];
  v107 = *(_QWORD *)v106;
  v108 = *((_QWORD *)v106 + 1);
  *(_QWORD *)v105 = v107;
  *((_QWORD *)v105 + 1) = v108;
  v109 = &a1[v104];
  v110 = &a2[v104];
  v112 = *(_QWORD *)v110;
  v111 = *((_QWORD *)v110 + 1);
  *(_QWORD *)v109 = v112;
  *((_QWORD *)v109 + 1) = v111;
  v113 = a3[12];
  v114 = a3[13];
  v115 = &a1[v113];
  v116 = &a2[v113];
  v118 = *(_QWORD *)v116;
  v117 = *((_QWORD *)v116 + 1);
  *(_QWORD *)v115 = v118;
  *((_QWORD *)v115 + 1) = v117;
  v119 = &a1[v114];
  v120 = *(_QWORD *)&a2[v114];
  v121 = *(_QWORD *)&a2[v114 + 8];
  LOBYTE(v98) = a2[v114 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v120, v121, (char)v98);
  *(_QWORD *)v119 = v120;
  *((_QWORD *)v119 + 1) = v121;
  v119[16] = (char)v98;
  v122 = a3[14];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = *(_QWORD *)v124;
  v126 = *((_QWORD *)v124 + 1);
  LOBYTE(v112) = v124[16];
  sub_1000A411C(*(_QWORD *)v124, v126, v112);
  *(_QWORD *)v123 = v125;
  *((_QWORD *)v123 + 1) = v126;
  v123[16] = v112;
  return a1;
}

char *sub_100977B28(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int v75;
  int v76;
  char v77;
  __int128 v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void **v89;
  char *v90;
  void *v91;
  void *v92;
  id v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  id v131;
  char v132;
  void *v133;
  char v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  uint64_t v176;
  int *v177;
  uint64_t (*v178)(char *, uint64_t, uint64_t);
  uint64_t v179;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v179 = v6;
  v10 = v8(a2, 1, v6);
  v177 = a3;
  v178 = v8;
  v176 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Cover(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
      {
        v24 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v17, v18, v24);
        v25 = 1;
      }
      else
      {
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
        swift_bridgeObjectRetain();
        v25 = 0;
      }
      swift_storeEnumTagMultiPayload(v17, v19, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_20;
    }
LABEL_13:
    v26 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  if (v23)
  {
    sub_10005B748((uint64_t)v17, type metadata accessor for VerticalLockupGridCell.Subtitle);
    goto LABEL_13;
  }
  if (a1 != a2)
  {
    sub_10005B748((uint64_t)v17, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v27 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v17, v18, v27);
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(v17, v19, 0);
    }
  }
LABEL_20:
  v28 = v12[7];
  v29 = (uint64_t)&a1[v28];
  v30 = &a2[v28];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33((uint64_t)v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v29, v30, v46);
      v47 = *(int *)(v31 + 20);
      v48 = (void *)(v29 + v47);
      v49 = &v30[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_33;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
          goto LABEL_33;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_27:
      memcpy(v44, v45, v43);
      goto LABEL_33;
    }
    sub_10005B748(v29, type metadata accessor for ArtworkImage.ViewModel);
LABEL_26:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v29;
    v45 = v30;
    goto LABEL_27;
  }
  if (v35)
    goto LABEL_26;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v29, v30, v36);
  v37 = *(int *)(v31 + 20);
  v38 = (void *)(v29 + v37);
  v39 = &v30[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_33:
  v55 = v12[8];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 10, v58);
  v62 = v60(v57, 10, v58);
  if (!v61)
  {
    if (!v62)
    {
      v67 = type metadata accessor for Playlist.Variant(0);
      v68 = *(_QWORD *)(v67 - 8);
      v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
      v70 = v69(v56, 1, v67);
      v71 = v69(v57, 1, v67);
      if (v70)
      {
        if (!v71)
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v56, v57, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v56, 0, 1, v67);
          goto LABEL_46;
        }
      }
      else
      {
        if (!v71)
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v56, v57, v67);
          goto LABEL_46;
        }
        (*(void (**)(char *, uint64_t))(v68 + 8))(v56, v67);
      }
      v66 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_40:
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      goto LABEL_46;
    }
    sub_10004FF60((uint64_t)v56, (uint64_t *)&unk_1011A3DB0);
LABEL_39:
    v66 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_40;
  }
  if (v62)
    goto LABEL_39;
  v63 = type metadata accessor for Playlist.Variant(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v57, 1, v63))
  {
    v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v56, v57, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v56, 0, 1, v63);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 10, v58);
LABEL_46:
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  v72 = v12[10];
  v73 = (uint64_t)&a1[v72];
  v74 = &a2[v72];
  v75 = a1[v72 + 16];
  v76 = a2[v72 + 16];
  if (v75 == 255)
  {
    if (v76 == 255)
    {
      v78 = *(_OWORD *)v74;
      *(_BYTE *)(v73 + 16) = v74[16];
      *(_OWORD *)v73 = v78;
    }
    else
    {
      v85 = v76 & 1;
      v86 = *(_QWORD *)v74;
      v87 = *((_QWORD *)v74 + 1);
      sub_1001F579C(*(_QWORD *)v74, v87, v76 & 1);
      *(_QWORD *)v73 = v86;
      *(_QWORD *)(v73 + 8) = v87;
      *(_BYTE *)(v73 + 16) = v85;
    }
  }
  else if (v76 == 255)
  {
    sub_1001F6EA8(v73);
    v77 = v74[16];
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_BYTE *)(v73 + 16) = v77;
  }
  else
  {
    v79 = v76 & 1;
    v80 = *(_QWORD *)v74;
    v81 = *((_QWORD *)v74 + 1);
    sub_1001F579C(*(_QWORD *)v74, v81, v76 & 1);
    v82 = *(_QWORD *)v73;
    v83 = *(_QWORD *)(v73 + 8);
    v84 = *(_BYTE *)(v73 + 16);
    *(_QWORD *)v73 = v80;
    *(_QWORD *)(v73 + 8) = v81;
    *(_BYTE *)(v73 + 16) = v79;
    sub_1001F57BC(v82, v83, v84);
  }
  v88 = v12[11];
  v89 = (void **)&a1[v88];
  v90 = &a2[v88];
  v91 = *(void **)&a2[v88];
  v92 = *v89;
  *v89 = v91;
  v93 = v91;

  v94 = (int *)type metadata accessor for SegueContext(0);
  v95 = v94[5];
  v96 = (char *)v89 + v95;
  v97 = &v90[v95];
  v98 = v178((char *)v89 + v95, 1, v179);
  v99 = v178(v97, 1, v179);
  if (v98)
  {
    if (!v99)
    {
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v96, v97, v179);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v96, 0, 1, v179);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v99)
  {
    (*(void (**)(char *, uint64_t))(v176 + 8))(v96, v179);
LABEL_58:
    v100 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(char *, char *, uint64_t))(v176 + 24))(v96, v97, v179);
LABEL_59:
  *((_BYTE *)v89 + v94[6]) = v90[v94[6]];
  v101 = v94[7];
  v102 = (void **)((char *)v89 + v101);
  v103 = &v90[v101];
  v104 = *(uint64_t *)((char *)v89 + v101);
  v105 = *(_QWORD *)&v90[v101];
  if (v104)
  {
    if (v105)
    {
      v106 = *((_QWORD *)v103 + 1);
      *v102 = v105;
      v102[1] = v106;
      swift_retain();
      swift_release();
      goto LABEL_66;
    }
    swift_release();
  }
  else if (v105)
  {
    v107 = *((_QWORD *)v103 + 1);
    *v102 = v105;
    v102[1] = v107;
    swift_retain();
    goto LABEL_66;
  }
  *(_OWORD *)v102 = *(_OWORD *)v103;
LABEL_66:
  v108 = v12[12];
  v109 = &a1[v108];
  v110 = &a2[v108];
  *(_QWORD *)v109 = *(_QWORD *)v110;
  *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v111 = v12[13];
  v112 = &a1[v111];
  v113 = &a2[v111];
  v114 = type metadata accessor for URL(0);
  v115 = *(_QWORD *)(v114 - 8);
  v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  v117 = v116(v112, 1, v114);
  v118 = v116(v113, 1, v114);
  if (!v117)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v112, v113, v114);
      goto LABEL_72;
    }
    (*(void (**)(char *, uint64_t))(v115 + 8))(v112, v114);
    goto LABEL_71;
  }
  if (v118)
  {
LABEL_71:
    v119 = sub_100007E8C(&qword_10119E460);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
LABEL_72:
  v120 = v12[14];
  v121 = *(void **)&a1[v120];
  v122 = *(void **)&a2[v120];
  *(_QWORD *)&a1[v120] = v122;
  v123 = v122;

  v124 = v177[5];
  v125 = &a1[v124];
  v126 = &a2[v124];
  v127 = *(_QWORD *)v126;
  v125[8] = v126[8];
  *(_QWORD *)v125 = v127;
  v128 = v177[6];
  v129 = &a1[v128];
  v130 = &a2[v128];
  v131 = *(id *)v130;
  v132 = v130[8];
  sub_1000A4100(*(id *)v130, v132);
  v133 = *(void **)v129;
  v134 = v129[8];
  *(_QWORD *)v129 = v131;
  v129[8] = v132;
  sub_1000A4224(v133, v134);
  v135 = v177[7];
  v136 = &a1[v135];
  v137 = &a2[v135];
  *(_QWORD *)&a1[v135] = *(_QWORD *)&a2[v135];
  swift_retain();
  swift_release();
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  v138 = v177[8];
  v139 = &a1[v138];
  v140 = &a2[v138];
  *(_QWORD *)&a1[v138] = *(_QWORD *)&a2[v138];
  swift_retain();
  swift_release();
  *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
  v141 = v177[9];
  v142 = &a1[v141];
  v143 = &a2[v141];
  v144 = *(_QWORD *)v143;
  v145 = *((_QWORD *)v143 + 1);
  v146 = v143[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v143, v145);
  v147 = *(_QWORD *)v142;
  v148 = *((_QWORD *)v142 + 1);
  *(_QWORD *)v142 = v144;
  *((_QWORD *)v142 + 1) = v145;
  v142[16] = v146;
  sub_1000A6174(v147, v148);
  v149 = v177[10];
  v150 = &a1[v149];
  v151 = &a2[v149];
  *(_QWORD *)&a1[v149] = *(_QWORD *)&a2[v149];
  swift_retain();
  swift_release();
  *((_QWORD *)v150 + 1) = *((_QWORD *)v151 + 1);
  v152 = v177[11];
  v153 = &a1[v152];
  v154 = &a2[v152];
  *(_QWORD *)&a1[v152] = *(_QWORD *)&a2[v152];
  swift_retain();
  swift_release();
  *((_QWORD *)v153 + 1) = *((_QWORD *)v154 + 1);
  v155 = v177[12];
  v156 = &a1[v155];
  v157 = &a2[v155];
  *(_QWORD *)&a1[v155] = *(_QWORD *)&a2[v155];
  swift_retain();
  swift_release();
  *((_QWORD *)v156 + 1) = *((_QWORD *)v157 + 1);
  v158 = v177[13];
  v159 = &a1[v158];
  v160 = &a2[v158];
  v161 = *(_QWORD *)v160;
  v162 = *((_QWORD *)v160 + 1);
  v163 = v160[16];
  sub_1000A410C(*(_QWORD *)v160, v162, v163);
  v164 = *(_QWORD *)v159;
  v165 = *((_QWORD *)v159 + 1);
  v166 = v159[16];
  *(_QWORD *)v159 = v161;
  *((_QWORD *)v159 + 1) = v162;
  v159[16] = v163;
  sub_1000A4230(v164, v165, v166);
  v167 = v177[14];
  v168 = &a1[v167];
  v169 = &a2[v167];
  v170 = *(_QWORD *)v169;
  v171 = *((_QWORD *)v169 + 1);
  LOBYTE(v161) = v169[16];
  sub_1000A411C(*(_QWORD *)v169, v171, v161);
  v172 = *(_QWORD *)v168;
  v173 = *((_QWORD *)v168 + 1);
  v174 = v168[16];
  *(_QWORD *)v168 = v170;
  *((_QWORD *)v168 + 1) = v171;
  v168[16] = v161;
  sub_1000A4240(v172, v173, v174);
  return a1;
}

char *sub_1009786DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *__dst;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t);
  unsigned int (*v83)(char *, uint64_t);
  uint64_t v84;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t))(v7 + 48);
  v84 = v6;
  v81 = v7;
  if (v8(a2, 1))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v84);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v84);
  }
  v10 = (int *)type metadata accessor for Cover(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  v11 = v10[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v17 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(v15 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = v10[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for ArtworkImage.ViewModel(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v82 = v8;
    v24 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v19, v20, v24);
    v25 = *(int *)(v21 + 20);
    __dst = &v19[v25];
    v26 = &v20[v25];
    v27 = type metadata accessor for Artwork.CropStyle(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(__dst, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    v8 = v82;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v30 = v10[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 10, v33))
  {
    v35 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v83 = v8;
    v36 = type metadata accessor for Playlist.Variant(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v32, 1, v36))
    {
      v38 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v31, v32, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v31, 0, 1, v36);
    }
    v8 = v83;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
  }
  *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
  v39 = v10[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v40[16] = v41[16];
  v42 = v10[11];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];
  v45 = (int *)type metadata accessor for SegueContext(0);
  v46 = v45[5];
  v47 = &v43[v46];
  v48 = &v44[v46];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v8)(&v44[v46], 1, v84))
  {
    v49 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v84);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v84);
  }
  v43[v45[6]] = v44[v45[6]];
  v50 = v45[7];
  v51 = &v43[v50];
  v52 = &v44[v50];
  v53 = *(_QWORD *)v52;
  if (*(_QWORD *)v52)
  {
    v54 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = v53;
    *((_QWORD *)v51 + 1) = v54;
  }
  else
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
  v55 = v10[13];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = sub_100007E8C(&qword_10119E460);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  *(_QWORD *)&a1[v10[14]] = *(_QWORD *)&a2[v10[14]];
  v61 = a3[5];
  v62 = a3[6];
  v63 = &a1[v61];
  v64 = &a2[v61];
  v63[8] = v64[8];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v65 = &a1[v62];
  v66 = &a2[v62];
  v65[8] = v66[8];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v67 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v67] = *(_OWORD *)&a2[v67];
  v68 = a3[9];
  v69 = a3[10];
  v70 = &a1[v68];
  v71 = &a2[v68];
  *(_OWORD *)v70 = *(_OWORD *)v71;
  v70[16] = v71[16];
  *(_OWORD *)&a1[v69] = *(_OWORD *)&a2[v69];
  v72 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v72] = *(_OWORD *)&a2[v72];
  v73 = a3[13];
  v74 = a3[14];
  v75 = &a1[v73];
  v76 = &a2[v73];
  v75[16] = v76[16];
  *(_OWORD *)v75 = *(_OWORD *)v76;
  v77 = &a1[v74];
  v78 = &a2[v74];
  v77[16] = v78[16];
  *(_OWORD *)v77 = *(_OWORD *)v78;
  return a1;
}

char *sub_100978CE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  void *v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(char *, uint64_t, uint64_t);
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void *v121;
  char v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v159;
  int *v160;
  uint64_t (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v162 = v6;
  v10 = v8(a2, 1, v6);
  v160 = a3;
  v161 = v8;
  v159 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Cover(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      if (a1 == a2)
        goto LABEL_21;
      sub_10005B748((uint64_t)v19, type metadata accessor for VerticalLockupGridCell.Subtitle);
      if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
      {
        v28 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v19, v20, v28);
        swift_storeEnumTagMultiPayload(v19, v21, 1);
        goto LABEL_21;
      }
      v27 = *(_QWORD *)(v22 + 64);
LABEL_14:
      memcpy(v19, v20, v27);
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v19, type metadata accessor for VerticalLockupGridCell.Subtitle);
LABEL_13:
    v27 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A6AF0) - 8) + 64);
    goto LABEL_14;
  }
  if (v25)
    goto LABEL_13;
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v26 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v19, v20, v26);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(v22 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_21:
  v29 = v12[7];
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for ArtworkImage.ViewModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34((uint64_t)v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      v47 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v30, v31, v47);
      v48 = *(int *)(v32 + 20);
      v49 = (void *)(v30 + v48);
      v50 = &v31[v48];
      v51 = type metadata accessor for Artwork.CropStyle(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
      v54 = v53(v49, 1, v51);
      v55 = v53(v50, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 40))(v49, v50, v51);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
      }
      v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v45 = v49;
      v46 = v50;
LABEL_28:
      memcpy(v45, v46, v44);
      goto LABEL_34;
    }
    sub_10005B748(v30, type metadata accessor for ArtworkImage.ViewModel);
LABEL_27:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v45 = (void *)v30;
    v46 = v31;
    goto LABEL_28;
  }
  if (v36)
    goto LABEL_27;
  v37 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v30, v31, v37);
  v38 = *(int *)(v32 + 20);
  v39 = (void *)(v30 + v38);
  v40 = &v31[v38];
  v41 = type metadata accessor for Artwork.CropStyle(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_34:
  v56 = v12[8];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 10, v59);
  v63 = v61(v58, 10, v59);
  if (!v62)
  {
    if (!v63)
    {
      v68 = type metadata accessor for Playlist.Variant(0);
      v69 = *(_QWORD *)(v68 - 8);
      v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
      v71 = v70(v57, 1, v68);
      v72 = v70(v58, 1, v68);
      if (v71)
      {
        if (!v72)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v57, v58, v68);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v57, 0, 1, v68);
          goto LABEL_47;
        }
      }
      else
      {
        if (!v72)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 40))(v57, v58, v68);
          goto LABEL_47;
        }
        (*(void (**)(char *, uint64_t))(v69 + 8))(v57, v68);
      }
      v67 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_41:
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      goto LABEL_47;
    }
    sub_10004FF60((uint64_t)v57, (uint64_t *)&unk_1011A3DB0);
LABEL_40:
    v67 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_41;
  }
  if (v63)
    goto LABEL_40;
  v64 = type metadata accessor for Playlist.Variant(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v58, 1, v64))
  {
    v66 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v57, v58, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v57, 0, 1, v64);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 10, v59);
LABEL_47:
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  v73 = v12[10];
  v74 = (uint64_t)&a1[v73];
  v75 = &a2[v73];
  v76 = a1[v73 + 16];
  if (v76 == 255)
  {
LABEL_50:
    *(_OWORD *)v74 = *(_OWORD *)v75;
    *(_BYTE *)(v74 + 16) = v75[16];
    goto LABEL_52;
  }
  v77 = v75[16];
  if (v77 == 255)
  {
    sub_1001F6EA8(v74);
    goto LABEL_50;
  }
  v78 = *(_QWORD *)v74;
  v79 = *(_QWORD *)(v74 + 8);
  *(_OWORD *)v74 = *(_OWORD *)v75;
  *(_BYTE *)(v74 + 16) = v77 & 1;
  sub_1001F57BC(v78, v79, v76 & 1);
LABEL_52:
  v80 = v12[11];
  v81 = &a1[v80];
  v82 = &a2[v80];
  v83 = *(void **)&a1[v80];
  *(_QWORD *)&a1[v80] = *(_QWORD *)&a2[v80];

  v84 = (int *)type metadata accessor for SegueContext(0);
  v85 = v84[5];
  v86 = &v81[v85];
  v87 = &v82[v85];
  v88 = v161(&v81[v85], 1, v162);
  v89 = v161(v87, 1, v162);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v86, v87, v162);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v86, 0, 1, v162);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v159 + 8))(v86, v162);
LABEL_57:
    v90 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(char *, char *, uint64_t))(v159 + 40))(v86, v87, v162);
LABEL_58:
  v81[v84[6]] = v82[v84[6]];
  v91 = v84[7];
  v92 = &v81[v91];
  v93 = &v82[v91];
  v94 = *(_QWORD *)&v81[v91];
  v95 = *(_QWORD *)v93;
  if (v94)
  {
    if (v95)
    {
      v96 = *((_QWORD *)v93 + 1);
      *(_QWORD *)v92 = v95;
      *((_QWORD *)v92 + 1) = v96;
      swift_release();
      goto LABEL_65;
    }
    swift_release();
  }
  else if (v95)
  {
    v97 = *((_QWORD *)v93 + 1);
    *(_QWORD *)v92 = v95;
    *((_QWORD *)v92 + 1) = v97;
    goto LABEL_65;
  }
  *(_OWORD *)v92 = *(_OWORD *)v93;
LABEL_65:
  v98 = v12[12];
  v99 = &a1[v98];
  v100 = &a2[v98];
  v102 = *(_QWORD *)v100;
  v101 = *((_QWORD *)v100 + 1);
  *(_QWORD *)v99 = v102;
  *((_QWORD *)v99 + 1) = v101;
  swift_bridgeObjectRelease();
  v103 = v12[13];
  v104 = &a1[v103];
  v105 = &a2[v103];
  v106 = type metadata accessor for URL(0);
  v107 = *(_QWORD *)(v106 - 8);
  v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
  v109 = v108(v104, 1, v106);
  v110 = v108(v105, 1, v106);
  if (!v109)
  {
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 40))(v104, v105, v106);
      goto LABEL_71;
    }
    (*(void (**)(char *, uint64_t))(v107 + 8))(v104, v106);
    goto LABEL_70;
  }
  if (v110)
  {
LABEL_70:
    v111 = sub_100007E8C(&qword_10119E460);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    goto LABEL_71;
  }
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
LABEL_71:
  v112 = v12[14];
  v113 = *(void **)&a1[v112];
  *(_QWORD *)&a1[v112] = *(_QWORD *)&a2[v112];

  v114 = v160[5];
  v115 = v160[6];
  v116 = &a1[v114];
  v117 = &a2[v114];
  *(_QWORD *)v116 = *(_QWORD *)v117;
  v116[8] = v117[8];
  v118 = &a1[v115];
  v119 = &a2[v115];
  v120 = *(_QWORD *)v119;
  LOBYTE(v119) = v119[8];
  v121 = *(void **)v118;
  v122 = v118[8];
  *(_QWORD *)v118 = v120;
  v118[8] = (char)v119;
  sub_1000A4224(v121, v122);
  v123 = v160[7];
  v124 = &a1[v123];
  v125 = &a2[v123];
  *(_QWORD *)&a1[v123] = *(_QWORD *)&a2[v123];
  swift_release();
  *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
  v126 = v160[8];
  v127 = &a1[v126];
  v128 = &a2[v126];
  *(_QWORD *)&a1[v126] = *(_QWORD *)&a2[v126];
  swift_release();
  *((_QWORD *)v127 + 1) = *((_QWORD *)v128 + 1);
  v129 = v160[9];
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = v131[16];
  v133 = *(_QWORD *)v130;
  v134 = *((_QWORD *)v130 + 1);
  *(_OWORD *)v130 = *(_OWORD *)v131;
  v130[16] = v132;
  sub_1000A6174(v133, v134);
  v135 = v160[10];
  v136 = &a1[v135];
  v137 = &a2[v135];
  *(_QWORD *)&a1[v135] = *(_QWORD *)&a2[v135];
  swift_release();
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  v138 = v160[11];
  v139 = &a1[v138];
  v140 = &a2[v138];
  *(_QWORD *)&a1[v138] = *(_QWORD *)&a2[v138];
  swift_release();
  *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
  v141 = v160[12];
  v142 = &a1[v141];
  v143 = &a2[v141];
  *(_QWORD *)&a1[v141] = *(_QWORD *)&a2[v141];
  swift_release();
  *((_QWORD *)v142 + 1) = *((_QWORD *)v143 + 1);
  v144 = v160[13];
  v145 = &a1[v144];
  v146 = &a2[v144];
  v147 = v146[16];
  v148 = *(_QWORD *)v145;
  v149 = *((_QWORD *)v145 + 1);
  v150 = v145[16];
  *(_OWORD *)v145 = *(_OWORD *)v146;
  v145[16] = v147;
  sub_1000A4230(v148, v149, v150);
  v151 = v160[14];
  v152 = &a1[v151];
  v153 = &a2[v151];
  v154 = v153[16];
  v155 = *(_QWORD *)v152;
  v156 = *((_QWORD *)v152 + 1);
  v157 = v152[16];
  *(_OWORD *)v152 = *(_OWORD *)v153;
  v152[16] = v154;
  sub_1000A4240(v155, v156, v157);
  return a1;
}

uint64_t sub_100979788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100979794);
}

uint64_t sub_100979794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Cover(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_10097981C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100979828);
}

uint64_t sub_100979828(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Cover(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

uint64_t type metadata accessor for CoverView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D1620, (uint64_t)&nominal type descriptor for CoverView);
}

uint64_t sub_1009798B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  result = type metadata accessor for Cover(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100ED8220;
    v4[3] = &unk_100ED8238;
    v4[4] = &unk_100ED8238;
    v4[5] = &unk_100ED8250;
    v4[6] = &unk_100ED8238;
    v4[7] = &unk_100ED8238;
    v4[8] = &unk_100ED8238;
    v4[9] = &unk_100ED8250;
    v4[10] = &unk_100ED8250;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100979950(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_QWORD *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v83;
  unsigned int (*v84)(uint64_t *, uint64_t, uint64_t);
  uint64_t v85;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v84 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v85 = v7;
    v83 = v8;
    if (v84(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      v21 = sub_100007E8C(&qword_1011A6AF0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
      {
        v22 = type metadata accessor for AttributedString(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v16, v17, v22);
        v23 = 1;
      }
      else
      {
        v24 = v17[1];
        *v16 = *v17;
        v16[1] = v24;
        swift_bridgeObjectRetain();
        v23 = 0;
      }
      swift_storeEnumTagMultiPayload(v16, v18, v23);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v25 = a3[7];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = type metadata accessor for ArtworkImage.ViewModel(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v26, v27, v31);
      v32 = *(int *)(v28 + 20);
      v33 = &v26[v32];
      v34 = &v27[v32];
      v35 = type metadata accessor for Artwork.CropStyle(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v38 = a3[8];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
    {
      v43 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Playlist.Variant(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v39, v40, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v44);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 10, v41);
    }
    v47 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *((unsigned __int8 *)a2 + v47 + 16);
    if (v50 == 255)
    {
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v48[16] = v49[16];
    }
    else
    {
      v51 = v50 & 1;
      v52 = *(_QWORD *)v49;
      v53 = *((_QWORD *)v49 + 1);
      sub_1001F579C(*(_QWORD *)v49, v53, v50 & 1);
      *(_QWORD *)v48 = v52;
      *((_QWORD *)v48 + 1) = v53;
      v48[16] = v51;
    }
    v54 = a3[11];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = *(void **)((char *)a2 + v54);
    *(uint64_t *)((char *)a1 + v54) = (uint64_t)v57;
    v58 = (int *)type metadata accessor for SegueContext(0);
    v59 = v58[5];
    v60 = &v55[v59];
    v61 = &v56[v59];
    v62 = v57;
    if (v84((uint64_t *)v61, 1, v85))
    {
      v63 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v60, v61, v85);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v60, 0, 1, v85);
    }
    v55[v58[6]] = v56[v58[6]];
    v64 = v58[7];
    v65 = &v55[v64];
    v66 = &v56[v64];
    if (*(_QWORD *)v66)
    {
      v67 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v67;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v65 = *(_OWORD *)v66;
    }
    v68 = a3[12];
    v69 = a3[13];
    v70 = (uint64_t *)((char *)a1 + v68);
    v71 = (uint64_t *)((char *)a2 + v68);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    v73 = (char *)a1 + v69;
    v74 = (char *)a2 + v69;
    v75 = type metadata accessor for URL(0);
    v76 = *(_QWORD *)(v75 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    if (v77(v74, 1, v75))
    {
      v78 = sub_100007E8C(&qword_10119E460);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    v79 = a3[14];
    v80 = *(void **)((char *)a2 + v79);
    *(uint64_t *)((char *)a1 + v79) = (uint64_t)v80;
    v81 = v80;
  }
  return a1;
}

void sub_100979F00(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  id *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[6];
  v8 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
    {
      v9 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v10 = a1 + a2[7];
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    v13 = v10 + *(int *)(v11 + 20);
    v14 = type metadata accessor for Artwork.CropStyle(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  v16 = a1 + a2[8];
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 10, v17))
  {
    v18 = type metadata accessor for Playlist.Variant(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  v20 = a1 + a2[10];
  v21 = *(unsigned __int8 *)(v20 + 16);
  if (v21 != 255)
    sub_1001F57BC(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), v21 & 1);
  v22 = (id *)(a1 + a2[11]);

  v23 = type metadata accessor for SegueContext(0);
  v24 = (char *)v22 + *(int *)(v23 + 20);
  if (!v6((uint64_t)v24, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  if (*(id *)((char *)v22 + *(int *)(v23 + 28)))
    swift_release();
  swift_bridgeObjectRelease();
  v25 = a1 + a2[13];
  v26 = type metadata accessor for URL(0);
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);

}

char *sub_10097A1B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v83 = v6;
  v81 = v7;
  if (v82(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    v19 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v20 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v14, v15, v20);
      v21 = 1;
    }
    else
    {
      v22 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v22;
      swift_bridgeObjectRetain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for ArtworkImage.ViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v24, v25, v29);
    v30 = *(int *)(v26 + 20);
    v31 = &v24[v30];
    v32 = &v25[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  v45 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = a2[v45 + 16];
  if (v48 == 255)
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
  }
  else
  {
    v49 = v48 & 1;
    v50 = *(_QWORD *)v47;
    v51 = *((_QWORD *)v47 + 1);
    sub_1001F579C(*(_QWORD *)v47, v51, v48 & 1);
    *(_QWORD *)v46 = v50;
    *((_QWORD *)v46 + 1) = v51;
    v46[16] = v49;
  }
  v52 = a3[11];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *(void **)&a2[v52];
  *(_QWORD *)&a1[v52] = v55;
  v56 = (int *)type metadata accessor for SegueContext(0);
  v57 = v56[5];
  v58 = &v53[v57];
  v59 = &v54[v57];
  v60 = v55;
  if (v82(v59, 1, v83))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v58, v59, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v58, 0, 1, v83);
  }
  v53[v56[6]] = v54[v56[6]];
  v62 = v56[7];
  v63 = &v53[v62];
  v64 = &v54[v62];
  if (*(_QWORD *)v64)
  {
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v63 = *(_OWORD *)v64;
  }
  v66 = a3[12];
  v67 = a3[13];
  v68 = &a1[v66];
  v69 = &a2[v66];
  v70 = *((_QWORD *)v69 + 1);
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *((_QWORD *)v68 + 1) = v70;
  v71 = &a1[v67];
  v72 = &a2[v67];
  v73 = type metadata accessor for URL(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  swift_bridgeObjectRetain();
  if (v75(v72, 1, v73))
  {
    v76 = sub_100007E8C(&qword_10119E460);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v77 = a3[14];
  v78 = *(void **)&a2[v77];
  *(_QWORD *)&a1[v77] = v78;
  v79 = v78;
  return a1;
}

char *sub_10097A73C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int v74;
  int v75;
  char v76;
  __int128 v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void **v88;
  char *v89;
  void *v90;
  void *v91;
  id v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  uint64_t v124;
  uint64_t (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v125 = v8;
  v126 = v6;
  v124 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
      {
        v23 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
        v24 = 1;
      }
      else
      {
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
        swift_bridgeObjectRetain();
        v24 = 0;
      }
      swift_storeEnumTagMultiPayload(v16, v18, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_20;
    }
LABEL_13:
    v25 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_20;
  }
  if (v22)
  {
    sub_10005B748((uint64_t)v16, type metadata accessor for VerticalLockupGridCell.Subtitle);
    goto LABEL_13;
  }
  if (a1 != a2)
  {
    sub_10005B748((uint64_t)v16, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v26 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v16, v17, v26);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(v16, v18, 0);
    }
  }
LABEL_20:
  v27 = a3[7];
  v28 = (uint64_t)&a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for ArtworkImage.ViewModel(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32((uint64_t)v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      v45 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v28, v29, v45);
      v46 = *(int *)(v30 + 20);
      v47 = (void *)(v28 + v46);
      v48 = &v29[v46];
      v49 = type metadata accessor for Artwork.CropStyle(0);
      v50 = *(_QWORD *)(v49 - 8);
      v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
      v52 = v51(v47, 1, v49);
      v53 = v51(v48, 1, v49);
      if (v52)
      {
        if (!v53)
        {
          (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          goto LABEL_33;
        }
      }
      else
      {
        if (!v53)
        {
          (*(void (**)(void *, char *, uint64_t))(v50 + 24))(v47, v48, v49);
          goto LABEL_33;
        }
        (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v43 = v47;
      v44 = v48;
LABEL_27:
      memcpy(v43, v44, v42);
      goto LABEL_33;
    }
    sub_10005B748(v28, type metadata accessor for ArtworkImage.ViewModel);
LABEL_26:
    v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v43 = (void *)v28;
    v44 = v29;
    goto LABEL_27;
  }
  if (v34)
    goto LABEL_26;
  v35 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v28, v29, v35);
  v36 = *(int *)(v30 + 20);
  v37 = (void *)(v28 + v36);
  v38 = &v29[v36];
  v39 = type metadata accessor for Artwork.CropStyle(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_33:
  v54 = a3[8];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 10, v57);
  v61 = v59(v56, 10, v57);
  if (!v60)
  {
    if (!v61)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v69 = v68(v55, 1, v66);
      v70 = v68(v56, 1, v66);
      if (v69)
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v55, v56, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v66);
          goto LABEL_46;
        }
      }
      else
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v55, v56, v66);
          goto LABEL_46;
        }
        (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v66);
      }
      v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_40:
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      goto LABEL_46;
    }
    sub_10004FF60((uint64_t)v55, (uint64_t *)&unk_1011A3DB0);
LABEL_39:
    v65 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_40;
  }
  if (v61)
    goto LABEL_39;
  v62 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v56, 1, v62))
  {
    v64 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v55, v56, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v55, 0, 1, v62);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 10, v57);
LABEL_46:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v71 = a3[10];
  v72 = (uint64_t)&a1[v71];
  v73 = &a2[v71];
  v74 = a1[v71 + 16];
  v75 = a2[v71 + 16];
  if (v74 == 255)
  {
    if (v75 == 255)
    {
      v77 = *(_OWORD *)v73;
      *(_BYTE *)(v72 + 16) = v73[16];
      *(_OWORD *)v72 = v77;
    }
    else
    {
      v84 = v75 & 1;
      v85 = *(_QWORD *)v73;
      v86 = *((_QWORD *)v73 + 1);
      sub_1001F579C(v85, v86, v75 & 1);
      *(_QWORD *)v72 = v85;
      *(_QWORD *)(v72 + 8) = v86;
      *(_BYTE *)(v72 + 16) = v84;
    }
  }
  else if (v75 == 255)
  {
    sub_1001F6EA8(v72);
    v76 = v73[16];
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_BYTE *)(v72 + 16) = v76;
  }
  else
  {
    v78 = v75 & 1;
    v79 = *(_QWORD *)v73;
    v80 = *((_QWORD *)v73 + 1);
    sub_1001F579C(v79, v80, v75 & 1);
    v81 = *(_QWORD *)v72;
    v82 = *(_QWORD *)(v72 + 8);
    v83 = *(_BYTE *)(v72 + 16);
    *(_QWORD *)v72 = v79;
    *(_QWORD *)(v72 + 8) = v80;
    *(_BYTE *)(v72 + 16) = v78;
    sub_1001F57BC(v81, v82, v83);
  }
  v87 = a3[11];
  v88 = (void **)&a1[v87];
  v89 = &a2[v87];
  v90 = *(void **)&a2[v87];
  v91 = *v88;
  *v88 = v90;
  v92 = v90;

  v93 = (int *)type metadata accessor for SegueContext(0);
  v94 = v93[5];
  v95 = (char *)v88 + v94;
  v96 = &v89[v94];
  v97 = v125((char *)v88 + v94, 1, v126);
  v98 = v125(v96, 1, v126);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v95, v96, v126);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v95, 0, 1, v126);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v98)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v95, v126);
LABEL_58:
    v99 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v95, v96, v126);
LABEL_59:
  *((_BYTE *)v88 + v93[6]) = v89[v93[6]];
  v100 = v93[7];
  v101 = (void **)((char *)v88 + v100);
  v102 = &v89[v100];
  v103 = *(uint64_t *)((char *)v88 + v100);
  v104 = *(_QWORD *)&v89[v100];
  if (v103)
  {
    if (v104)
    {
      v105 = *((_QWORD *)v102 + 1);
      *v101 = v104;
      v101[1] = v105;
      swift_retain();
      swift_release();
      goto LABEL_66;
    }
    swift_release();
  }
  else if (v104)
  {
    v106 = *((_QWORD *)v102 + 1);
    *v101 = v104;
    v101[1] = v106;
    swift_retain();
    goto LABEL_66;
  }
  *(_OWORD *)v101 = *(_OWORD *)v102;
LABEL_66:
  v107 = a3[12];
  v108 = &a1[v107];
  v109 = &a2[v107];
  *(_QWORD *)v108 = *(_QWORD *)v109;
  *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v110 = a3[13];
  v111 = &a1[v110];
  v112 = &a2[v110];
  v113 = type metadata accessor for URL(0);
  v114 = *(_QWORD *)(v113 - 8);
  v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  v116 = v115(v111, 1, v113);
  v117 = v115(v112, 1, v113);
  if (!v116)
  {
    if (!v117)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 24))(v111, v112, v113);
      goto LABEL_72;
    }
    (*(void (**)(char *, uint64_t))(v114 + 8))(v111, v113);
    goto LABEL_71;
  }
  if (v117)
  {
LABEL_71:
    v118 = sub_100007E8C(&qword_10119E460);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v111, v112, v113);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
LABEL_72:
  v119 = a3[14];
  v120 = *(void **)&a1[v119];
  v121 = *(void **)&a2[v119];
  *(_QWORD *)&a1[v119] = v121;
  v122 = v121;

  return a1;
}

char *sub_10097B100(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v63 = v7;
  if (v64(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v15 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(v13 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for ArtworkImage.ViewModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v62 = v6;
    v22 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v18, v22);
    v23 = *(int *)(v19 + 20);
    v24 = &v17[v23];
    v25 = &v18[v23];
    v26 = type metadata accessor for Artwork.CropStyle(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v6 = v62;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v29 = a3[8];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 10, v32))
  {
    v34 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = v6;
    v36 = type metadata accessor for Playlist.Variant(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v31, 1, v36))
    {
      v38 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v30, v31, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v30, 0, 1, v36);
    }
    v6 = v35;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 10, v32);
  }
  v39 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v40 = &a1[v39];
  v41 = &a2[v39];
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v40[16] = v41[16];
  v42 = a3[11];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];
  v45 = (int *)type metadata accessor for SegueContext(0);
  v46 = v45[5];
  v47 = &v43[v46];
  v48 = &v44[v46];
  if (v64(&v44[v46], 1, v6))
  {
    v49 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v47, v48, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v47, 0, 1, v6);
  }
  v43[v45[6]] = v44[v45[6]];
  v50 = v45[7];
  v51 = &v43[v50];
  v52 = &v44[v50];
  v53 = *(_QWORD *)v52;
  if (*(_QWORD *)v52)
  {
    v54 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = v53;
    *((_QWORD *)v51 + 1) = v54;
  }
  else
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  v55 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = sub_100007E8C(&qword_10119E460);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  return a1;
}

char *sub_10097B634(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void *v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v114 = v7;
  v116 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      if (a1 == a2)
        goto LABEL_21;
      sub_10005B748((uint64_t)v18, type metadata accessor for VerticalLockupGridCell.Subtitle);
      if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
      {
        v27 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v18, v19, v27);
        swift_storeEnumTagMultiPayload(v18, v20, 1);
        goto LABEL_21;
      }
      v26 = *(_QWORD *)(v21 + 64);
LABEL_14:
      memcpy(v18, v19, v26);
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v18, type metadata accessor for VerticalLockupGridCell.Subtitle);
LABEL_13:
    v26 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A6AF0) - 8) + 64);
    goto LABEL_14;
  }
  if (v24)
    goto LABEL_13;
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v25 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v18, v19, v25);
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(v21 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_21:
  v28 = a3[7];
  v29 = (uint64_t)&a1[v28];
  v30 = &a2[v28];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33((uint64_t)v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v29, v30, v46);
      v47 = *(int *)(v31 + 20);
      v48 = (void *)(v29 + v47);
      v49 = &v30[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_28:
      memcpy(v44, v45, v43);
      goto LABEL_34;
    }
    sub_10005B748(v29, type metadata accessor for ArtworkImage.ViewModel);
LABEL_27:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v29;
    v45 = v30;
    goto LABEL_28;
  }
  if (v35)
    goto LABEL_27;
  v115 = v6;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v29, v30, v36);
  v37 = *(int *)(v31 + 20);
  v38 = (void *)(v29 + v37);
  v39 = &v30[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  v6 = v115;
LABEL_34:
  v55 = a3[8];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 10, v58);
  v62 = v60(v57, 10, v58);
  if (!v61)
  {
    if (!v62)
    {
      v67 = type metadata accessor for Playlist.Variant(0);
      v68 = *(_QWORD *)(v67 - 8);
      v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
      v70 = v69(v56, 1, v67);
      v71 = v69(v57, 1, v67);
      if (v70)
      {
        if (!v71)
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v56, v57, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v56, 0, 1, v67);
          goto LABEL_47;
        }
      }
      else
      {
        if (!v71)
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 40))(v56, v57, v67);
          goto LABEL_47;
        }
        (*(void (**)(char *, uint64_t))(v68 + 8))(v56, v67);
      }
      v66 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_41:
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      goto LABEL_47;
    }
    sub_10004FF60((uint64_t)v56, (uint64_t *)&unk_1011A3DB0);
LABEL_40:
    v66 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_41;
  }
  if (v62)
    goto LABEL_40;
  v63 = type metadata accessor for Playlist.Variant(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v57, 1, v63))
  {
    v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v56, v57, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v56, 0, 1, v63);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 10, v58);
LABEL_47:
  v72 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v73 = (uint64_t)&a1[v72];
  v74 = &a2[v72];
  v75 = a1[v72 + 16];
  if (v75 == 255)
  {
LABEL_50:
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_BYTE *)(v73 + 16) = v74[16];
    goto LABEL_52;
  }
  v76 = v74[16];
  if (v76 == 255)
  {
    sub_1001F6EA8(v73);
    goto LABEL_50;
  }
  v77 = *(_QWORD *)v73;
  v78 = *(_QWORD *)(v73 + 8);
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *(_BYTE *)(v73 + 16) = v76 & 1;
  sub_1001F57BC(v77, v78, v75 & 1);
LABEL_52:
  v79 = a3[11];
  v80 = &a1[v79];
  v81 = &a2[v79];
  v82 = *(void **)&a1[v79];
  *(_QWORD *)v80 = *(_QWORD *)&a2[v79];

  v83 = (int *)type metadata accessor for SegueContext(0);
  v84 = v83[5];
  v85 = &v80[v84];
  v86 = &v81[v84];
  v87 = v116(&v80[v84], 1, v6);
  v88 = v116(v86, 1, v6);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v85, v86, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v85, 0, 1, v6);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v85, v6);
LABEL_57:
    v89 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v85, v86, v6);
LABEL_58:
  v80[v83[6]] = v81[v83[6]];
  v90 = v83[7];
  v91 = &v80[v90];
  v92 = &v81[v90];
  v93 = *(_QWORD *)&v80[v90];
  v94 = *(_QWORD *)&v81[v90];
  if (v93)
  {
    if (v94)
    {
      v95 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v91 = v94;
      *((_QWORD *)v91 + 1) = v95;
      swift_release();
      goto LABEL_65;
    }
    swift_release();
  }
  else if (v94)
  {
    v96 = *((_QWORD *)v92 + 1);
    *(_QWORD *)v91 = v94;
    *((_QWORD *)v91 + 1) = v96;
    goto LABEL_65;
  }
  *(_OWORD *)v91 = *(_OWORD *)v92;
LABEL_65:
  v97 = a3[12];
  v98 = &a1[v97];
  v99 = &a2[v97];
  v101 = *(_QWORD *)v99;
  v100 = *((_QWORD *)v99 + 1);
  *(_QWORD *)v98 = v101;
  *((_QWORD *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  v102 = a3[13];
  v103 = &a1[v102];
  v104 = &a2[v102];
  v105 = type metadata accessor for URL(0);
  v106 = *(_QWORD *)(v105 - 8);
  v107 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48);
  v108 = v107(v103, 1, v105);
  v109 = v107(v104, 1, v105);
  if (!v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v103, v104, v105);
      goto LABEL_71;
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v103, v105);
    goto LABEL_70;
  }
  if (v109)
  {
LABEL_70:
    v110 = sub_100007E8C(&qword_10119E460);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_71;
  }
  (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v103, v104, v105);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
LABEL_71:
  v111 = a3[14];
  v112 = *(void **)&a1[v111];
  *(_QWORD *)&a1[v111] = *(_QWORD *)&a2[v111];

  return a1;
}

uint64_t sub_10097BF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10097BF70);
}

uint64_t sub_10097BF70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011A6AF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[6];
    }
    else
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[7];
      }
      else
      {
        v16 = type metadata accessor for ArtworkImage.Placeholder(0);
        v12 = *(_QWORD *)(v16 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v13 = v16;
          v14 = a3[8];
        }
        else
        {
          v17 = type metadata accessor for SegueContext(0);
          v12 = *(_QWORD *)(v17 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v13 = v17;
            v14 = a3[11];
          }
          else
          {
            v13 = sub_100007E8C(&qword_10119E460);
            v12 = *(_QWORD *)(v13 - 8);
            v14 = a3[13];
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_10097C0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10097C0D4);
}

uint64_t sub_10097C0D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C(&qword_1011A6AF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v17 = type metadata accessor for ArtworkImage.Placeholder(0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v18 = type metadata accessor for SegueContext(0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[11];
          }
          else
          {
            v10 = sub_100007E8C(&qword_10119E460);
            v14 = *(_QWORD *)(v10 - 8);
            v15 = a4[13];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10097C21C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[11];

  sub_10015C698(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem);
  if (v3 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v2 - 8) + 64;
    v14[1] = &unk_100ED8238;
    sub_10015C698(319, (unint64_t *)&unk_1011A6B60, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (v5 <= 0x3F)
    {
      v14[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_10015C698(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel);
      if (v7 <= 0x3F)
      {
        v14[3] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for ArtworkImage.Placeholder(319);
        if (v9 <= 0x3F)
        {
          v14[4] = *(_QWORD *)(v8 - 8) + 64;
          v14[5] = (char *)&value witness table for Builtin.Int64 + 64;
          v14[6] = &unk_100ED8270;
          v10 = type metadata accessor for SegueContext(319);
          if (v11 <= 0x3F)
          {
            v14[7] = *(_QWORD *)(v10 - 8) + 64;
            v14[8] = &unk_100ED8238;
            sub_10015C698(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
            if (v13 <= 0x3F)
            {
              v14[9] = *(_QWORD *)(v12 - 8) + 64;
              v14[10] = &unk_100ED8288;
              swift_initStructMetadata(a1, 256, 11, v14, a1 + 16);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10097C378(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FB25C0, 1);
}

uint64_t sub_10097C388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  void (*v40)(__n128);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *i;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t result;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  unsigned int (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;

  v130 = a6;
  v120 = a5;
  LODWORD(v124) = a4;
  v125 = a3;
  v10 = type metadata accessor for TVEpisode(0);
  v118 = *(_QWORD *)(v10 - 8);
  v119 = v10;
  __chkstk_darwin(v10);
  v117 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SegueContext(0);
  __chkstk_darwin(v12);
  v122 = (uint64_t)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GenericMusicItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v126 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v127 = (char *)&v105 - v18;
  __chkstk_darwin(v19);
  v116 = (uint64_t)&v105 - v20;
  v21 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v24);
  v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011A6AF0);
  __chkstk_darwin(v27);
  v29 = (uint64_t *)((char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v30);
  v32 = (char *)&v105 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v123 = (uint64_t)&v105 - v34;
  __chkstk_darwin(v35);
  v37 = (char *)&v105 - v36;
  v39 = __chkstk_darwin(v38);
  v40 = *(void (**)(__n128))(v15 + 56);
  v111 = (uint64_t)&v105 - v41;
  v40(v39);
  v115 = a1;
  *v29 = a1;
  v29[1] = a2;
  v42 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  swift_storeEnumTagMultiPayload(v29, v42, 0);
  v43 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v112 = v29;
  v43(v29, 0, 1, v42);
  v44 = type metadata accessor for ArtworkImage.ViewModel(0);
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
  v113 = v26;
  v45(v26, 1, 1, v44);
  v46 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v114 = v23;
  v47(v23, 1, 10, v46);
  sub_10004A160(v125, (uint64_t)v37, (uint64_t *)&unk_1011A20D0);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v131 = v14;
  v128 = v15;
  v129 = v48;
  LODWORD(v42) = v48((uint64_t)v37, 1, v14);
  v121 = a2;
  swift_bridgeObjectRetain();
  if ((_DWORD)v42 == 1)
  {
    sub_10004FF60((uint64_t)v37, (uint64_t *)&unk_1011A20D0);
    v49 = 1.0;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v49 = v50;
    (*(void (**)(char *, uint64_t))(v128 + 8))(v37, v131);
  }
  v51 = v130;
  v52 = v123;
  if ((v124 & 1) != 0)
  {
    v109 = 0;
    v110 = 0;
    v108 = 1;
  }
  else
  {
    sub_10004A160(v125, v123, (uint64_t *)&unk_1011A20D0);
    if (v129(v52, 1, v131) == 1)
    {
      sub_10004FF60(v52, (uint64_t *)&unk_1011A20D0);
    }
    else
    {
      v53 = v128;
      v54 = v116;
      v55 = v131;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16))(v116, v52, v131);
      v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 88))(v54, v55);
      v57 = enum case for GenericMusicItem.tvEpisode(_:);
      v58 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v58(v54, v55);
      v58(v52, v55);
      if (v56 == v57)
      {
        v59 = v121;
        swift_bridgeObjectRetain();
        v110 = 1;
        v108 = v115;
        v109 = v59;
        v60 = v120;
        goto LABEL_12;
      }
    }
    v108 = 0;
    v109 = 0;
    v110 = 255;
  }
  v60 = v120;
  v59 = v121;
LABEL_12:
  v61 = v122;
  sub_10005B704(v60, v122, type metadata accessor for SegueContext);
  if (v51)
  {
    v62 = v51 & 0xFFFFFFFFFFFFFF8;
    v106 = a7;
    if ((unint64_t)v51 >> 62)
      goto LABEL_37;
    v63 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (i = v126; v63; i = v126)
    {
      v65 = v51 & 0xC000000000000001;
      LODWORD(v123) = enum case for GenericMusicItem.tvEpisode(_:);
      v66 = 4;
      v107 = v32;
      v124 = v51 & 0xC000000000000001;
      while (1)
      {
        v67 = v65
            ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v66 - 4, v51)
            : *(id *)(v51 + 8 * v66);
        v51 = (uint64_t)v67;
        v68 = v66 - 3;
        if (__OFADD__(v66 - 4, 1))
          break;
        v69 = (*(uint64_t (**)(void))((swift_isaMask & *v67) + 0x3C8))();
        if (v70)
        {
          v71 = v69;
          v72 = v70;
          swift_bridgeObjectRelease();
          v73 = HIBYTE(v72) & 0xF;
          if ((v72 & 0x2000000000000000) == 0)
            v73 = v71 & 0xFFFFFFFFFFFFLL;
          if (v73)
          {
LABEL_35:
            swift_bridgeObjectRelease();
            sub_10005B748(v120, type metadata accessor for SegueContext);
            sub_10004FF60(v125, (uint64_t *)&unk_1011A20D0);

            swift_bridgeObjectRelease();
            v59 = v121;
            swift_bridgeObjectRetain();
            v95 = v115;
            v93 = v115;
            v94 = v59;
            a7 = v106;
            v61 = v122;
            goto LABEL_43;
          }
        }
        (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v51) + 0x250))(v69);
        if (v129((uint64_t)v32, 1, v131))
        {
          sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A20D0);
        }
        else
        {
          v74 = v127;
          v75 = v128;
          v76 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
          v77 = v131;
          v76(v127, v32, v131);
          sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A20D0);
          v76(i, v74, v77);
          v78 = (*(uint64_t (**)(char *, uint64_t))(v75 + 88))(i, v77);
          if (v78 == (_DWORD)v123)
          {
            v79 = v128;
            v80 = v131;
            (*(void (**)(char *, uint64_t))(v128 + 96))(i, v131);
            v81 = v117;
            v82 = v118;
            v83 = v79;
            v84 = v119;
            v85 = (*(uint64_t (**)(char *, char *, uint64_t))(v118 + 32))(v117, v126, v119);
            v116 = TVEpisode.shortDescription.getter(v85);
            v87 = v86;
            v88 = *(void (**)(char *, uint64_t))(v82 + 8);
            i = v126;
            v88(v81, v84);
            v89 = *(void (**)(char *, uint64_t))(v83 + 8);
            v32 = v107;
            v89(v127, v80);
            v65 = v124;
            if (v87)
            {
              swift_bridgeObjectRelease();
              v90 = HIBYTE(v87) & 0xF;
              if ((v87 & 0x2000000000000000) == 0)
                v90 = v116 & 0xFFFFFFFFFFFFLL;
              if (v90)
                goto LABEL_35;
            }
          }
          else
          {
            v91 = *(void (**)(char *, uint64_t))(v128 + 8);
            v92 = v131;
            v91(i, v131);
            v91(v74, v92);
            v65 = v124;
          }
        }

        ++v66;
        v51 = v130;
        if (v68 == v63)
          goto LABEL_41;
      }
      __break(1u);
LABEL_37:
      if (v51 >= 0)
        v96 = v62;
      else
        v96 = v51;
      swift_bridgeObjectRetain();
      v63 = _CocoaArrayWrapper.endIndex.getter(v96);
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_10005B748(v120, type metadata accessor for SegueContext);
    sub_10004FF60(v125, (uint64_t *)&unk_1011A20D0);
    swift_bridgeObjectRelease();
    v93 = 0;
    v94 = 0;
    a7 = v106;
    v59 = v121;
    v61 = v122;
  }
  else
  {
    sub_10005B748(v60, type metadata accessor for SegueContext);
    sub_10004FF60(v125, (uint64_t *)&unk_1011A20D0);
    v93 = 0;
    v94 = 0;
  }
  v95 = v115;
LABEL_43:
  v97 = (int *)type metadata accessor for Cover(0);
  v98 = a7 + v97[13];
  v99 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v98, 1, 1, v99);
  sub_100065228(v111, a7, (uint64_t *)&unk_1011A20D0);
  v100 = (uint64_t *)(a7 + v97[5]);
  *v100 = v95;
  v100[1] = v59;
  sub_100065228((uint64_t)v112, a7 + v97[6], &qword_1011A6AF0);
  sub_100065228((uint64_t)v113, a7 + v97[7], (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0((uint64_t)v114, a7 + v97[8], type metadata accessor for ArtworkImage.Placeholder);
  *(double *)(a7 + v97[9]) = v49;
  v101 = a7 + v97[10];
  v102 = v109;
  *(_QWORD *)v101 = v108;
  *(_QWORD *)(v101 + 8) = v102;
  *(_BYTE *)(v101 + 16) = v110;
  result = sub_10005B6C0(v61, a7 + v97[11], type metadata accessor for SegueContext);
  v104 = (uint64_t *)(a7 + v97[12]);
  *v104 = v93;
  v104[1] = v94;
  *(_QWORD *)(a7 + v97[14]) = 0;
  return result;
}

uint64_t sub_10097CCD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  char *v56;
  void (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t result;
  uint64_t v62;
  int v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  uint64_t *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;

  v93 = a7;
  v94 = a8;
  v105 = a6;
  v101 = a4;
  v102 = a5;
  v104 = a3;
  v12 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v12);
  v97 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for SegueContext(0);
  __chkstk_darwin(v90);
  v96 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for GenericMusicItem(0);
  v103 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v84 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v17);
  v85 = (uint64_t)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v83 - v20;
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v22);
  v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011A6AF0);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v28);
  v89 = (uint64_t)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v98 = (char *)&v83 - v31;
  __chkstk_darwin(v32);
  v100 = (uint64_t)&v83 - v33;
  __chkstk_darwin(v34);
  v36 = (char *)&v83 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v83 - v38;
  __chkstk_darwin(v40);
  v88 = (uint64_t)&v83 - v41;
  sub_10004A160(a2, (uint64_t)&v83 - v41, (uint64_t *)&unk_1011A20D0);
  v87 = sub_10097D4AC(a2);
  v86 = v42;
  v91 = v27;
  v99 = a1;
  sub_10097D5DC(a2, v27);
  v92 = v24;
  v43 = (uint64_t)v24;
  v44 = v15;
  sub_10004A160(v104, v43, (uint64_t *)&unk_1011A3E10);
  v45 = v103;
  sub_10004A160(a2, (uint64_t)v39, (uint64_t *)&unk_1011A20D0);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v46(v39, 1, v44) == 1)
  {
    sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011A20D0);
    v47 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v21, 1, 10, v47);
  }
  else
  {
    v48 = v85;
    GenericMusicItem.placeholder.getter(v85);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v39, v44);
    sub_10005B6C0(v48, (uint64_t)v21, type metadata accessor for ArtworkImage.Placeholder);
  }
  sub_10004A160(a2, (uint64_t)v36, (uint64_t *)&unk_1011A20D0);
  v49 = v46(v36, 1, v44);
  v50 = (uint64_t)v98;
  if (v49 == 1)
  {
    sub_10004FF60((uint64_t)v36, (uint64_t *)&unk_1011A20D0);
    v51 = 1.0;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v51 = v52;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v44);
  }
  v53 = v100;
  sub_10004A160(a2, v100, (uint64_t *)&unk_1011A20D0);
  v54 = v93;
  v95 = v21;
  if ((_BYTE)v105 == 0xFF)
  {
    sub_10004A160(v53, v50, (uint64_t *)&unk_1011A20D0);
    if (v46((char *)v50, 1, v44) == 1)
    {
      v55 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
      sub_10004FF60(v53, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60(v50, (uint64_t *)&unk_1011A20D0);
      v101 = 0;
      v102 = 0;
      v105 = 255;
    }
    else
    {
      v56 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v84, v50, v44);
      if ((*(unsigned int (**)(char *, uint64_t))(v45 + 88))(v56, v44) == enum case for GenericMusicItem.tvEpisode(_:))
      {
        v57 = *(void (**)(void))((swift_isaMask & *v99) + 0x3E0);
        v57();
        v59 = v58;
        v60 = swift_bridgeObjectRelease();
        if (v59)
        {
          result = ((uint64_t (*)(__n128))v57)(v60);
          if (!v62)
          {
            __break(1u);
            return result;
          }
          v101 = result;
          v102 = v62;
          v63 = 1;
        }
        else
        {
          v101 = 0;
          v102 = 0;
          v63 = 255;
        }
        v105 = v63;
        v50 = (uint64_t)v98;
      }
      else
      {
        v101 = 0;
        v102 = 0;
        v105 = 255;
      }
      v55 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
      v64 = *(void (**)(char *, uint64_t))(v45 + 8);
      v64(v84, v44);
      sub_10004FF60(v100, (uint64_t *)&unk_1011A20D0);
      v64((char *)v50, v44);
    }
  }
  else
  {
    v55 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
    sub_10004FF60(v53, (uint64_t *)&unk_1011A20D0);
  }
  v65 = v90;
  v66 = v96;
  sub_10004A160(a2, (uint64_t)&v96[*(int *)(v90 + 20)], (uint64_t *)&unk_1011A20D0);
  v67 = v99;
  *v66 = v99;
  *((_BYTE *)v66 + *(int *)(v65 + 24)) = 0;
  v68 = (_QWORD *)((char *)v66 + *(int *)(v65 + 28));
  v69 = v94;
  *v68 = v54;
  v68[1] = v69;
  v70 = v67;
  sub_100048AAC(v54, v69);
  v71 = sub_10097D988(a2);
  v99 = v72;
  v100 = v71;
  v73 = v89;
  sub_10004A160(a2, v89, (uint64_t *)&unk_1011A20D0);
  if (v55(v73, 1, v44) == 1)
  {
    sub_10004BA30(v54, v69);
    sub_10004FF60(v104, (uint64_t *)&unk_1011A3E10);
    sub_10004FF60(a2, (uint64_t *)&unk_1011A20D0);
    sub_10004FF60(v73, (uint64_t *)&unk_1011A20D0);
    v74 = type metadata accessor for URL(0);
    v75 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v97, 1, 1, v74);
  }
  else
  {
    v75 = v97;
    sub_1009189EC(v97);
    sub_10004BA30(v54, v69);
    sub_10004FF60(v104, (uint64_t *)&unk_1011A3E10);
    sub_10004FF60(a2, (uint64_t *)&unk_1011A20D0);
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v73, v44);
  }
  sub_100065228(v88, a9, (uint64_t *)&unk_1011A20D0);
  v76 = (int *)type metadata accessor for Cover(0);
  v77 = (uint64_t *)(a9 + v76[5]);
  v78 = v86;
  *v77 = v87;
  v77[1] = v78;
  sub_100065228((uint64_t)v91, a9 + v76[6], &qword_1011A6AF0);
  sub_100065228((uint64_t)v92, a9 + v76[7], (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0((uint64_t)v95, a9 + v76[8], type metadata accessor for ArtworkImage.Placeholder);
  *(double *)(a9 + v76[9]) = v51;
  v79 = a9 + v76[10];
  v80 = v102;
  *(_QWORD *)v79 = v101;
  *(_QWORD *)(v79 + 8) = v80;
  *(_BYTE *)(v79 + 16) = v105;
  sub_10005B6C0((uint64_t)v66, a9 + v76[11], type metadata accessor for SegueContext);
  v81 = (_QWORD *)(a9 + v76[12]);
  v82 = v99;
  *v81 = v100;
  v81[1] = v82;
  result = sub_100065228(v75, a9 + v76[13], &qword_10119E460);
  *(_QWORD *)(a9 + v76[14]) = v70;
  return result;
}

uint64_t sub_10097D4AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x368))(v4);
  if (!v8)
    goto LABEL_6;
  v9 = v7;
  v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011A20D0);
    v11 = type metadata accessor for GenericMusicItem(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
    {
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A20D0);
      return 0;
    }
    else
    {
      v9 = sub_10097EE54();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    }
  }
  return v9;
}

uint64_t sub_10097D5DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];

  v5 = sub_100007E8C(&qword_1011C4EA0);
  __chkstk_darwin(v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v8);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v35 - v12;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v35 - v16;
  v18 = (*(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0x380))(v15);
  if (v19)
  {
    v20 = v18;
    v21 = v19;
    v22 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0)
      v22 = v18 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      sub_10004A160(a1, (uint64_t)v17, (uint64_t *)&unk_1011A20D0);
      v23 = type metadata accessor for GenericMusicItem(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23) != 1)
      {
        sub_10004A160((uint64_t)v17, (uint64_t)v13, (uint64_t *)&unk_1011A20D0);
        if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v13, v23) == enum case for GenericMusicItem.station(_:))
        {
          v35[0] = v20;
          v35[1] = v21;
          v25 = sub_100007E8C(&qword_1011C7580);
          swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
          MarkupRenderer.init(_:)(v35);
          dispatch thunk of MarkupRenderer.attributedString.getter();
          swift_release();
          v26 = type metadata accessor for AttributedString(0);
          v27 = *(_QWORD *)(v26 - 8);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v26);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) == 1)
          {
            sub_10004FF60((uint64_t)v7, &qword_1011C4EA0);
            v28 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
            (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a2, 1, 1, v28);
          }
          else
          {
            (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 32))(a2, v7, v26);
            v34 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
            swift_storeEnumTagMultiPayload(a2, v34, 1);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a2, 0, 1, v34);
          }
          (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
          return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A20D0);
        }
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
      }
      *a2 = v20;
      a2[1] = v21;
      v33 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
      swift_storeEnumTagMultiPayload(a2, v33, 0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a2, 0, 1, v33);
      return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A20D0);
    }
    swift_bridgeObjectRelease();
  }
  sub_10004A160(a1, (uint64_t)v10, (uint64_t *)&unk_1011A20D0);
  v29 = type metadata accessor for GenericMusicItem(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v10, 1, v29) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
    v31 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
  else
  {
    sub_10097FA68(a2);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v29);
  }
}

uint64_t sub_10097D988(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v35;

  v3 = type metadata accessor for TVEpisode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v35 - v18;
  v20 = (*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x3C8))(v17);
  if (v21)
  {
    v22 = v20;
    v23 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v23 = v20 & 0xFFFFFFFFFFFFLL;
    if (v23)
    {
      sub_10004A160(a1, (uint64_t)v19, (uint64_t *)&unk_1011A20D0);
      v24 = type metadata accessor for GenericMusicItem(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24) == 1)
      {
        v12 = v19;
      }
      else
      {
        sub_10004A160((uint64_t)v19, (uint64_t)v15, (uint64_t *)&unk_1011A20D0);
        if ((*(unsigned int (**)(char *, uint64_t))(v25 + 88))(v15, v24) == enum case for GenericMusicItem.radioShow(_:))
        {
          v33 = swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v15, v24, v33);
          v22 = 0;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v24);
        }
        v12 = v19;
      }
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
  }
  sub_10004A160(a1, (uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  v26 = type metadata accessor for GenericMusicItem(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v26) == 1)
  {
LABEL_19:
    v22 = 0;
    goto LABEL_23;
  }
  sub_10004A160((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t))(v27 + 88))(v9, v26) != enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t))(v27 + 96))(v9, v26);
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  TVEpisode.shortDescription.getter(v28);
  v22 = v29;
  if (v29)
  {
    v30 = String.trim()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = ((unint64_t)v30._object >> 56) & 0xF;
    if (((uint64_t)v30._object & 0x2000000000000000) == 0)
      v32 = v30._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if (v32)
      v22 = TVEpisode.shortDescription.getter(v31);
    else
      v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_23:
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  return v22;
}

uint64_t sub_10097DCD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t KeyPath;
  uint64_t v127;
  uint64_t v128;
  char v129;
  int *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t OpaqueTypeConformance2;
  unint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char *v174;
  uint64_t result;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  unint64_t *v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191[4];
  uint64_t v192;
  int v193;
  int v194;
  void *v195;
  uint64_t v196;
  unint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  int *v226;
  uint64_t (*v227)(char *, uint64_t, uint64_t);
  uint64_t v228;
  _BYTE v229[32];
  uint64_t v230;
  _QWORD v231[5];
  _QWORD v232[5];
  _QWORD v233[5];
  uint64_t v234;
  ValueMetadata *v235;
  _QWORD *v236;
  uint64_t v237;
  _UNKNOWN **v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t (*v242)(char *, uint64_t, uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  void *v253;
  __int128 v254;
  uint64_t v255;

  v2 = v1;
  v215 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v213 = *(_QWORD *)(v3 - 8);
  v214 = v3;
  __chkstk_darwin(v3);
  v212 = (char *)&v192 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CoverView(0);
  __chkstk_darwin(v5);
  v192 = (uint64_t)&v192 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v7);
  v201 = (uint64_t)&v192 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v9);
  v220 = (uint64_t)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A6AF0);
  __chkstk_darwin(v11);
  v224 = (uint64_t)&v192 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v13);
  v216 = (uint64_t)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v199 = (uint64_t)&v192 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v192 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v192 - v21;
  v23 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v192 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v26);
  v28 = (char *)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (int *)type metadata accessor for VerticalLockupGridCell(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v192 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = (uint64_t *)sub_100007E8C(&qword_1011AC418);
  __chkstk_darwin(v217);
  v219 = (uint64_t)&v192 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011D1738);
  v202 = *(_QWORD *)(v33 - 8);
  v203 = v33;
  __chkstk_darwin(v33);
  v225 = (char *)&v192 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C(&qword_1011D1740);
  v205 = *(_QWORD *)(v35 - 8);
  v206 = v35;
  __chkstk_darwin(v35);
  v204 = (uint64_t)&v192 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_100007E8C(&qword_1011D1748);
  __chkstk_darwin(v209);
  v211 = (char *)&v192 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100007E8C(&qword_1011D1750);
  v208 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v207 = (char *)&v192 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = (int *)type metadata accessor for Cover(0);
  v40 = v2 + v39[7];
  v198 = v28;
  sub_10004A160(v40, (uint64_t)v28, (uint64_t *)&unk_1011A3E10);
  v41 = v2 + v39[8];
  v218 = v25;
  sub_10005B704(v41, (uint64_t)v25, type metadata accessor for ArtworkImage.Placeholder);
  v226 = (int *)v5;
  v42 = v2 + *(int *)(v5 + 20);
  v43 = *(_QWORD *)v42;
  v44 = *(_BYTE *)(v42 + 8) == 0;
  v45 = 0x3FF0000000000000;
  if (v44)
    v45 = v43;
  v197 = v45;
  v46 = v39[9];
  v47 = v2 + v39[10];
  v48 = *(_QWORD *)v47;
  v222 = *(_QWORD *)(v47 + 8);
  v223 = v48;
  LODWORD(v221) = *(unsigned __int8 *)(v47 + 16);
  v49 = v2 + v39[5];
  v50 = *(void **)(v49 + 8);
  if (v50)
  {
    v51 = *(_QWORD *)v49;
    v195 = v50;
    v196 = v51;
  }
  else
  {
    v195 = (void *)0xE100000000000000;
    v196 = 45;
  }
  v52 = *(_QWORD *)(v2 + v46);
  v228 = v2;
  sub_10004A160(v2, (uint64_t)v22, (uint64_t *)&unk_1011A20D0);
  v53 = type metadata accessor for GenericMusicItem(0);
  v54 = *(_QWORD *)(v53 - 8);
  v227 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v55 = v227(v22, 1, v53);
  sub_1009807D8(v223, v222, v221);
  swift_bridgeObjectRetain();
  if (v55 == 1)
  {
    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A20D0);
    v194 = 2;
  }
  else
  {
    v194 = GenericMusicItem.explicitBadge(_:)(1);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v53);
  }
  v56 = v53;
  v57 = v228;
  sub_10004A160(v228, (uint64_t)v19, (uint64_t *)&unk_1011A20D0);
  v58 = v227(v19, 1, v56);
  v200 = v54;
  if (v58 == 1)
  {
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A20D0);
    v193 = 2;
  }
  else
  {
    v193 = GenericMusicItem.favoriteBadge.getter();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v56);
  }
  sub_10004A160(v57 + v39[6], v224, &qword_1011A6AF0);
  v59 = (uint64_t *)(v57 + v39[12]);
  v61 = *v59;
  v60 = v59[1];
  v62 = v199;
  sub_10004A160(v57, v199, (uint64_t *)&unk_1011A20D0);
  v63 = v227((char *)v62, 1, v56);
  swift_bridgeObjectRetain();
  v64 = v56;
  if (v63 == 1)
  {
    sub_10004FF60(v62, (uint64_t *)&unk_1011A20D0);
    v65 = type metadata accessor for URL(0);
    v66 = v220;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v220, 1, 1, v65);
  }
  else
  {
    v66 = v220;
    sub_1009189EC(v220);
    (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v62, v64);
  }
  v67 = v228;
  v68 = *(void **)(v228 + v39[14]);
  sub_100065228((uint64_t)v198, (uint64_t)v31, (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0((uint64_t)v218, (uint64_t)&v31[v29[5]], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)&v31[v29[6]] = v52;
  v69 = &v31[v29[7]];
  *(_QWORD *)v69 = v197;
  v69[8] = 0;
  v70 = &v31[v29[8]];
  v71 = v222;
  *(_QWORD *)v70 = v223;
  *((_QWORD *)v70 + 1) = v71;
  v70[16] = (char)v221;
  v72 = (uint64_t *)&v31[v29[9]];
  v73 = (uint64_t)v195;
  *v72 = v196;
  v72[1] = v73;
  v31[v29[10]] = v194;
  v31[v29[11]] = v193;
  sub_100065228(v224, (uint64_t)&v31[v29[12]], &qword_1011A6AF0);
  v74 = &v31[v29[13]];
  *(_QWORD *)v74 = v61;
  *((_QWORD *)v74 + 1) = v60;
  v75 = v67;
  sub_100065228(v66, (uint64_t)&v31[v29[14]], &qword_10119E460);
  *(_QWORD *)&v31[v29[15]] = v68;
  v76 = &v31[v29[16]];
  *(_QWORD *)v76 = swift_getKeyPath(&unk_100ED82F0);
  v77 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v76, v77, 0);
  v78 = &v31[v29[17]];
  *(_QWORD *)v78 = swift_getKeyPath(&unk_100ED8320);
  *((_QWORD *)v78 + 1) = 0;
  *((_QWORD *)v78 + 2) = 0;
  *((_QWORD *)v78 + 3) = 0;
  v78[32] = 0;
  v79 = v75 + v39[11];
  v80 = v68;
  v81 = v219;
  sub_10030F304(v79, v219);
  sub_10005B748((uint64_t)v31, type metadata accessor for VerticalLockupGridCell);
  v82 = Corner.large.unsafeMutableAddressor();
  v83 = *v82;
  v84 = v82[1];
  v85 = *((_BYTE *)v82 + 16);
  v86 = *HI.HoverOutset.grid.unsafeMutableAddressor();
  v87 = sub_100980800();
  v88 = v84;
  v89 = (uint64_t)v217;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v83, v88, v85, 1u, 0, 1, 1, (uint64_t)v217, *(double *)&v86, v87);
  sub_10004FF60(v81, &qword_1011AC418);
  v90 = v216;
  sub_10004A160(v75, v216, (uint64_t *)&unk_1011A20D0);
  if (v227((char *)v90, 1, v64) == 1)
  {
    v91 = sub_10004FF60(v90, (uint64_t *)&unk_1011A20D0);
    v92 = 0;
    v199 = 0;
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v96 = 0;
    v97 = 0;
    v98 = 0;
    v99 = 0;
    v100 = 0;
LABEL_27:
    v227 = v93;
    v223 = v95;
    v224 = v94;
    v221 = v97;
    v222 = v96;
    v219 = v99;
    v220 = v98;
    v217 = &v192;
    v218 = (char *)v100;
    v153 = v199;
    *(_QWORD *)&v250 = v92;
    *((_QWORD *)&v250 + 1) = v199;
    *(_QWORD *)&v251 = v93;
    *((_QWORD *)&v251 + 1) = v94;
    *(_QWORD *)&v252 = v95;
    *((_QWORD *)&v252 + 1) = v96;
    v253 = v97;
    *(_QWORD *)&v254 = v98;
    *((_QWORD *)&v254 + 1) = v99;
    v255 = v100;
    __chkstk_darwin(v91);
    v154 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
    v234 = v89;
    v235 = (ValueMetadata *)v87;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v234, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v156 = sub_1000E3EE4();
    v157 = (_QWORD *)sub_100314AC0();
    v158 = v203;
    v159 = v204;
    v160 = v225;
    View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v250, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100314AB8, (uint64_t)v191, (uint64_t)UIScreen.Dimensions.size.getter, 0, v204, v203, (uint64_t)&type metadata for ActionType, v154, OpaqueTypeConformance2, v156, v157);
    sub_1000E4164(v92, v153, (uint64_t)v227, v224, v223, v222, v221, v220, v219, (uint64_t)v218);
    v161 = (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v160, v158);
    v162 = v212;
    static AccessibilityTraits.isStaticText.getter(v161);
    v234 = v158;
    v235 = &type metadata for ActionType;
    v236 = v154;
    v237 = OpaqueTypeConformance2;
    v238 = (_UNKNOWN **)v156;
    v239 = v157;
    v163 = swift_getOpaqueTypeConformance2(&v234, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v164 = (uint64_t)v211;
    v165 = v206;
    View.accessibilityRemoveTraits(_:)(v162, v206, v163);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v162, v214);
    (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v159, v165);
    v166 = (uint64_t *)(v228 + v226[9]);
    v167 = *v166;
    v168 = v166[1];
    v169 = *((unsigned __int8 *)v166 + 16);
    v170 = sub_100007E8C(&qword_1011A03A8);
    v171 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v172 = StateObject.wrappedValue.getter(v167, v168, v169, v170, v171);
    v173 = sub_10098089C();
    v174 = v207;
    View.shareSheetPresenting(_:)(v172, v209, v173);
    swift_release();
    sub_10004FF60(v164, &qword_1011D1748);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v208 + 32))(v215, v174, v210);
  }
  v101 = Optional<A>.playbackIntent.getter();
  v102 = v226;
  v103 = v75 + v226[6];
  v104 = *(id *)v103;
  v105 = *(_BYTE *)(v103 + 8);
  sub_1000A4100(*(id *)v103, v105);
  v106 = sub_100824044(v104, v105);
  sub_1000A4224(v104, v105);
  v107 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v201, 1, 1, v107);
  v108 = (uint64_t *)(v75 + v102[7]);
  v109 = *v108;
  if (*v108)
  {
    v195 = v106;
    v196 = v101;
    v237 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v238 = &protocol witness table for <A> PresentedViewState<A>;
    v234 = v109;
    v110 = (uint64_t *)(v75 + v102[8]);
    v111 = *v110;
    if (*v110)
    {
      v233[3] = type metadata accessor for NoticePresenter(0);
      v233[4] = &protocol witness table for NoticePresenter;
      v233[0] = v111;
      v253 = 0;
      v251 = 0u;
      v252 = 0u;
      v250 = 0u;
      v254 = xmmword_100EA93A0;
      v112 = v75 + v102[9];
      v113 = *(_QWORD *)v112;
      v114 = *(_QWORD *)(v112 + 8);
      v115 = *(unsigned __int8 *)(v112 + 16);
      swift_retain();
      swift_retain();
      v116 = sub_100007E8C(&qword_1011A03A8);
      v117 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v118 = StateObject.wrappedValue.getter(v113, v114, v115, v116, v117);
      v232[3] = v116;
      v232[4] = &protocol witness table for <A> PresentedViewState<A>;
      v232[0] = v118;
      v119 = (uint64_t *)(v75 + v102[10]);
      v120 = *v119;
      if (*v119)
      {
        v198 = (char *)v64;
        v121 = type metadata accessor for NavigationPusher();
        v231[3] = v121;
        v231[4] = &off_1010D58B0;
        v230 = 0;
        v231[0] = v120;
        memset(v229, 0, sizeof(v229));
        v122 = (_QWORD *)(v75 + v102[11]);
        if (*v122)
        {
          v197 = v87;
          v123 = (_QWORD *)(v75 + v102[12]);
          if (*v123)
          {
            v124 = v75;
            __chkstk_darwin(v121);
            v125 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100ED8348);
            __chkstk_darwin(KeyPath);
            v191[2] = (uint64_t)&type metadata for TabIdentifier;
            v191[3] = v125;
            v127 = swift_getKeyPath(&unk_100ED8380);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v240, v128, KeyPath, v127);
            swift_release();
            swift_release();
            swift_release();
            v129 = v240;
            v130 = v226;
            v131 = v124 + v226[13];
            v132 = *(_QWORD *)v131;
            v133 = *(_QWORD *)(v131 + 8);
            LOBYTE(v127) = *(_BYTE *)(v131 + 16);
            sub_1000A410C(*(_QWORD *)v131, v133, v127);
            sub_100824224(v132, v133, v127);
            sub_1000A4230(v132, v133, v127);
            sub_10066D160(v129);
            v135 = v134;
            v137 = v136;
            swift_release();
            swift_bridgeObjectRelease();
            v138 = v124 + v130[14];
            v139 = *(_QWORD *)v138;
            v140 = *(_QWORD *)(v138 + 8);
            LOBYTE(v133) = *(_BYTE *)(v138 + 16);
            sub_1000A411C(*(_QWORD *)v138, v140, v133);
            sub_100824400(v139, v140, v133, &v240);
            sub_1000A4240(v139, v140, v133);
            v141 = v240;
            v142 = v241;
            v143 = v124;
            v144 = v192;
            sub_10005B704(v143, v192, type metadata accessor for CoverView);
            if (v142 >> 60 != 15)
            {
LABEL_26:
              sub_10005B748(v144, type metadata accessor for CoverView);
              v147 = type metadata accessor for MusicLibrary(0);
              v148 = static MusicLibrary.shared.getter(v147);
              v191[0] = v135;
              v150 = v195;
              v149 = (void *)v196;
              v151 = v201;
              v152 = v216;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)((void *)v196, v195, v148, v201, (uint64_t)&v234, (unint64_t)v233, (unint64_t)&v250, (unint64_t)v232, &v240, (uint64_t)v231, (unint64_t)v229, v191[0], v137, v141, v142);
              v92 = v240;
              v199 = v241;
              v227 = v242;
              v223 = v244;
              v224 = v243;
              v221 = v246;
              v222 = v245;
              v219 = v248;
              v220 = v247;
              v218 = (char *)v249;
              swift_release();
              sub_1000822B4(v141, v142);

              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v229, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v250, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v151, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v231, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v232);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v233);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v234);
              v91 = (*(uint64_t (**)(uint64_t, char *))(v200 + 8))(v152, v198);
              v100 = (uint64_t)v218;
              v99 = v219;
              v98 = v220;
              v97 = v221;
              v96 = v222;
              v95 = v223;
              v94 = v224;
              v93 = v227;
              v89 = (uint64_t)v217;
              v87 = v197;
              goto LABEL_27;
            }
            v145 = (_QWORD *)(v144 + v130[11]);
            if (*v145)
            {
              swift_retain();
              v141 = sub_10066D7A8();
              v142 = v146;
              swift_release();
              goto LABEL_26;
            }
          }
          else
          {
            v187 = v123[1];
            v188 = type metadata accessor for TabSelectionManager(0);
            v189 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v187, v188, v189);
            __break(1u);
          }
          v176 = v145[1];
          goto LABEL_34;
        }
LABEL_31:
        v176 = v122[1];
        swift_retain();
LABEL_34:
        v177 = (uint64_t *)&unk_10119CBE0;
        v178 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v179 = &qword_1011C5B90;
        v180 = &unk_100EC0A50;
        goto LABEL_35;
      }
    }
    else
    {
      v181 = v110[1];
      v182 = type metadata accessor for NoticePresenter(0);
      v183 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v181, v182, v183);
      __break(1u);
    }
    v184 = v119[1];
    v185 = type metadata accessor for NavigationPusher();
    v186 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v184, v185, v186);
    __break(1u);
    goto LABEL_31;
  }
  v176 = v108[1];
  v177 = (uint64_t *)&unk_1011B4E40;
  v178 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v179 = (unint64_t *)&unk_10119CC10;
  v180 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_35:
  v190 = sub_100049F28(v179, v177, (uint64_t)v180);
  result = EnvironmentObject.error()(0, v176, v178, v190);
  __break(1u);
  return result;
}

uint64_t sub_10097EE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  __n128 v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  __n128 v70;
  void (*v71)(char *, uint64_t, __n128);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, __n128);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v84 = type metadata accessor for Logger(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v73 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for Curator(0);
  v115 = *(_QWORD *)(v1 - 8);
  v116 = v1;
  __chkstk_darwin(v1);
  v114 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for TVShow(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for TVSeason(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for TVEpisode(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v110 = *(_QWORD *)(v6 - 8);
  v111 = v6;
  __chkstk_darwin(v6);
  v109 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for UploadedVideo(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for UploadedAudio(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Station(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for Song(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RadioShow(0);
  v101 = *(_QWORD *)(v12 - 8);
  v102 = v12;
  __chkstk_darwin(v12);
  v100 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v104 = *(_QWORD *)(v14 - 8);
  v105 = v14;
  __chkstk_darwin(v14);
  v103 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicVideo(0);
  v107 = *(_QWORD *)(v16 - 8);
  v108 = v16;
  __chkstk_darwin(v16);
  v106 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Genre(0);
  v112 = *(_QWORD *)(v18 - 8);
  v113 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Artist(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for GenericMusicItem(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v78 = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v73 - v34;
  v74 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v30 + 16);
  v74((char *)&v73 - v34, v117, v29, v33);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v35, v29);
  if (v36 != enum case for GenericMusicItem.album(_:))
  {
    if (v36 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
      v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v24, v35, v21);
      v38 = Artist.name.getter(v39);
      v40 = *(void (**)(char *, uint64_t))(v22 + 8);
      v41 = v24;
LABEL_36:
      v40(v41, v21);
      return v38;
    }
    if (v36 == enum case for GenericMusicItem.composer(_:))
      goto LABEL_6;
    if (v36 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
      v42 = v114;
      v43 = v115;
      v21 = v116;
      v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v115 + 32))(v114, v35, v116);
      v45 = Curator.name.getter(v44);
    }
    else
    {
      if (v36 == enum case for GenericMusicItem.genre(_:))
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v46 = v112;
        v21 = v113;
        v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v112 + 32))(v20, v35, v113);
        v38 = Genre.shortName.getter(v47);
        v40 = *(void (**)(char *, uint64_t))(v46 + 8);
        v41 = v20;
        goto LABEL_36;
      }
      if (v36 == enum case for GenericMusicItem.musicMovie(_:))
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v42 = v109;
        v43 = v110;
        v21 = v111;
        v48.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v110 + 32))(v109, v35, v111);
        v45 = MusicMovie.title.getter(v48);
      }
      else if (v36 == enum case for GenericMusicItem.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v42 = v106;
        v43 = v107;
        v21 = v108;
        v49.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v107 + 32))(v106, v35, v108);
        v45 = MusicVideo.title.getter(v49);
      }
      else if (v36 == enum case for GenericMusicItem.playlist(_:))
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v42 = v103;
        v43 = v104;
        v21 = v105;
        v50.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v104 + 32))(v103, v35, v105);
        v45 = Playlist.name.getter(v50);
      }
      else if (v36 == enum case for GenericMusicItem.radioShow(_:))
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
        v42 = v100;
        v43 = v101;
        v21 = v102;
        v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v101 + 32))(v100, v35, v102);
        v45 = RadioShow.name.getter(v51);
      }
      else
      {
        if (v36 == enum case for GenericMusicItem.recordLabel(_:))
        {
LABEL_6:
          (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
          return 0;
        }
        if (v36 == enum case for GenericMusicItem.song(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v98;
          v42 = v97;
          v21 = v99;
          v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(v97, v35, v99);
          v45 = Song.title.getter(v52);
        }
        else if (v36 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v95;
          v42 = v94;
          v21 = v96;
          v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v95 + 32))(v94, v35, v96);
          v45 = Station.name.getter(v53);
        }
        else if (v36 == enum case for GenericMusicItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v92;
          v42 = v91;
          v21 = v93;
          v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 32))(v91, v35, v93);
          v45 = TVEpisode.title.getter(v54);
        }
        else if (v36 == enum case for GenericMusicItem.tvSeason(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v89;
          v42 = v88;
          v21 = v90;
          v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v89 + 32))(v88, v35, v90);
          v45 = TVSeason.title.getter(v55);
        }
        else if (v36 == enum case for GenericMusicItem.tvShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v86;
          v42 = v85;
          v21 = v87;
          v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v86 + 32))(v85, v35, v87);
          v45 = TVShow.name.getter(v56);
        }
        else if (v36 == enum case for GenericMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v80;
          v42 = v79;
          v21 = v81;
          v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 32))(v79, v35, v81);
          v45 = UploadedAudio.title.getter(v57);
        }
        else
        {
          if (v36 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            v60 = Logger.musicKit.unsafeMutableAddressor();
            (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v60, v84);
            v61 = ((uint64_t (*)(char *, uint64_t, uint64_t))v74)(v78, v117, v29);
            v62 = Logger.logObject.getter(v61);
            v64 = static os_log_type_t.fault.getter(v63);
            if (os_log_type_enabled(v62, v64))
            {
              v65 = swift_slowAlloc(22, -1);
              v117 = swift_slowAlloc(64, -1);
              v119 = v117;
              *(_DWORD *)v65 = 136446466;
              v118 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v119);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
              *(_WORD *)(v65 + 12) = 2082;
              v116 = v65 + 14;
              v66 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
              v67 = v78;
              v68 = dispatch thunk of CustomStringConvertible.description.getter(v29, v66);
              v118 = sub_100322200(v68, v69, &v119);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
              v70 = swift_bridgeObjectRelease();
              v71 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
              v71(v67, v29, v70);
              _os_log_impl((void *)&_mh_execute_header, v62, v64, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v65, 0x16u);
              v72 = v117;
              swift_arrayDestroy(v117, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v72, -1, -1);
              swift_slowDealloc(v65, -1, -1);
            }
            else
            {
              v71 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
              ((void (*)(char *, uint64_t))v71)(v78, v29);
            }

            (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
            ((void (*)(char *, uint64_t))v71)(v35, v29);
            return 0;
          }
          (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
          v43 = v76;
          v42 = v75;
          v21 = v77;
          v58.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v76 + 32))(v75, v35, v77);
          v45 = UploadedVideo.title.getter(v58);
        }
      }
    }
    v38 = v45;
    v40 = *(void (**)(char *, uint64_t))(v43 + 8);
    v41 = v42;
    goto LABEL_36;
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
  v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v35, v25);
  v38 = Album.title.getter(v37);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  return v38;
}

uint64_t sub_10097FA68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t *v44;
  uint64_t *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  __n128 v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  __n128 v112;
  void (*v113)(char *, uint64_t, __n128);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t, uint64_t, __n128);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152[2];
  uint64_t v153;
  char v154[8];

  v150 = a1;
  v127 = type metadata accessor for Logger(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v116 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for TVSeason(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MusicMovie(0);
  v148 = *(_QWORD *)(v3 - 8);
  v149 = (char *)v3;
  __chkstk_darwin(v3);
  v147 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for UploadedVideo(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for UploadedAudio(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C4EA0);
  __chkstk_darwin(v7);
  v131 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Station(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v136 = *(_QWORD *)(v10 - 8);
  v137 = v10;
  __chkstk_darwin(v10);
  v135 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v12);
  v141 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RadioShow(0);
  v139 = *(_QWORD *)(v14 - 8);
  v140 = v14;
  __chkstk_darwin(v14);
  v138 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist(0);
  v143 = *(_QWORD *)(v16 - 8);
  v144 = v16;
  __chkstk_darwin(v16);
  v142 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MusicVideo(0);
  v145 = *(_QWORD *)(v18 - 8);
  v146 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Genre(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for GenericMusicItem(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v121 = (char *)&v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v116 - v34;
  v117 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v30 + 16);
  v117((char *)&v116 - v34, v151, v29, v33);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v35, v29);
  if (v36 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v35, v25);
    v38 = Album.artistName.getter(v37);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    v41 = v150;
    *v150 = v38;
    v41[1] = v40;
    v42 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    swift_storeEnumTagMultiPayload(v41, v42, 0);
    v43 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
    v44 = v41;
LABEL_13:
    v56 = 0;
    v57 = v42;
    return v43(v44, v56, 1, v57);
  }
  v45 = v150;
  if (v36 == enum case for GenericMusicItem.artist(_:)
    || v36 == enum case for GenericMusicItem.composer(_:)
    || v36 == enum case for GenericMusicItem.curator(_:))
  {
    goto LABEL_24;
  }
  if (v36 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v46.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v22 + 32))(v24, v35, v21);
    v47 = Genre.name.getter(v46);
    v49 = v48;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
LABEL_11:
    *v45 = v47;
    v45[1] = v49;
LABEL_12:
    v42 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    swift_storeEnumTagMultiPayload(v45, v42, 0);
    v43 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
    v44 = v45;
    goto LABEL_13;
  }
  if (v36 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v51 = v147;
    v50 = v148;
    v52 = (uint64_t)v149;
    v53 = (*(uint64_t (**)(char *, char *, char *))(v148 + 32))(v147, v35, v149);
    v54 = MusicMovie.artistName.getter(v53);
LABEL_10:
    v47 = v54;
    v49 = v55;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
    goto LABEL_11;
  }
  if (v36 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v59 = v145;
    v58 = v146;
    v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v145 + 32))(v20, v35, v146);
    v61 = MusicVideo.artistName.getter(v60);
    v63 = v62;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v58);
LABEL_16:
    *v45 = v61;
    v45[1] = v63;
    goto LABEL_12;
  }
  if (v36 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v65 = v142;
    v64 = v143;
    v66 = v144;
    v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v143 + 32))(v142, v35, v144);
    v47 = Playlist.curatorName.getter(v67);
    v49 = v68;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    if (v49)
      goto LABEL_11;
    goto LABEL_25;
  }
  if (v36 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v70 = v138;
    v69 = v139;
    v71 = v140;
    v72 = (*(uint64_t (**)(char *, char *, uint64_t))(v139 + 32))(v138, v35, v140);
    v73 = (uint64_t)v141;
    RadioShow.editorialNotes.getter(v72);
    v74 = type metadata accessor for EditorialNotes(0);
    v75 = *(_QWORD *)(v74 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74) == 1)
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
      sub_10004FF60(v73, &qword_1011A58C8);
    }
    else
    {
      v61 = EditorialNotes.name.getter();
      v63 = v77;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v74);
      if (v63)
        goto LABEL_16;
    }
LABEL_25:
    v57 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    v43 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
    v44 = v45;
    v56 = 1;
    return v43(v44, v56, 1, v57);
  }
  if (v36 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
    goto LABEL_25;
  }
  if (v36 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v51 = v135;
    v50 = v136;
    v52 = v137;
    v78 = (*(uint64_t (**)(char *, char *, uint64_t))(v136 + 32))(v135, v35, v137);
    v54 = Song.artistName.getter(v78);
    goto LABEL_10;
  }
  if (v36 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v79 = v133;
    v80 = v132;
    v81 = v134;
    v82 = (*(uint64_t (**)(char *, char *, uint64_t))(v133 + 32))(v132, v35, v134);
    v83 = Station.stationProviderName.getter(v82);
    if (v84)
    {
      v85 = v83;
      v86 = v84;
      sub_100007E8C(&qword_1011C7580);
      v152[0] = v85;
      v152[1] = v86;
      dispatch thunk of MarkupRenderer.__allocating_init(_:)(v152);
      v87 = (uint64_t)v131;
      dispatch thunk of MarkupRenderer.attributedString.getter();
      swift_release();
      v88 = type metadata accessor for AttributedString(0);
      v89 = *(_QWORD *)(v88 - 8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v87, 0, 1, v88);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88) != 1)
      {
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v89 + 32))(v45, v87, v88);
        v90 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
        swift_storeEnumTagMultiPayload(v45, v90, 1);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v45, 0, 1, v90);
        return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v80, v81);
      }
    }
    else
    {
      v92 = type metadata accessor for AttributedString(0);
      v87 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v131, 1, 1, v92);
    }
    sub_10004FF60(v87, &qword_1011C4EA0);
    v93 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v45, 1, 1, v93);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v80, v81);
  }
  if (v36 == enum case for GenericMusicItem.tvEpisode(_:))
    goto LABEL_24;
  if (v36 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v50 = v129;
    v51 = v128;
    v52 = v130;
    v91.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v129 + 32))(v128, v35, v130);
    v54 = TVSeason.showName.getter(v91);
    goto LABEL_10;
  }
  if (v36 == enum case for GenericMusicItem.tvShow(_:))
    goto LABEL_24;
  if (v36 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v35, v29);
    v50 = v123;
    v51 = v122;
    v52 = v124;
    v94 = (*(uint64_t (**)(char *, char *, uint64_t))(v123 + 32))(v122, v35, v124);
    v54 = UploadedAudio.artistName.getter(v94);
    goto LABEL_10;
  }
  v95 = v29;
  v149 = v35;
  if (v36 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    v96 = v149;
    (*(void (**)(char *, uint64_t))(v30 + 96))(v149, v29);
    v97 = v119;
    v98 = v118;
    v99 = v120;
    v100 = (*(uint64_t (**)(char *, char *, uint64_t))(v119 + 32))(v118, v96, v120);
    v47 = UploadedVideo.artistName.getter(v100);
    v49 = v101;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
    goto LABEL_11;
  }
  v102 = Logger.musicKit.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v102, v127);
  v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v117)(v121, v151, v29);
  v104 = Logger.logObject.getter(v103);
  v106 = static os_log_type_t.fault.getter(v105);
  if (os_log_type_enabled(v104, v106))
  {
    v107 = swift_slowAlloc(22, -1);
    v151 = swift_slowAlloc(64, -1);
    v152[0] = v151;
    *(_DWORD *)v107 = 136446466;
    v153 = sub_100322200(0xD000000000000010, 0x8000000100E32610, v152);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v154);
    *(_WORD *)(v107 + 12) = 2082;
    v148 = v107 + 14;
    v108 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v109 = v121;
    v110 = dispatch thunk of CustomStringConvertible.description.getter(v95, v108);
    v153 = sub_100322200(v110, v111, v152);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v154);
    v112 = swift_bridgeObjectRelease();
    v113 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
    v113(v109, v95, v112);
    _os_log_impl((void *)&_mh_execute_header, v104, v106, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v107, 0x16u);
    v114 = v151;
    swift_arrayDestroy(v151, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v114, -1, -1);
    swift_slowDealloc(v107, -1, -1);
  }
  else
  {
    v113 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
    ((void (*)(char *, uint64_t))v113)(v121, v95);
  }

  (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
  v115 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v45, 1, 1, v115);
  return ((uint64_t (*)(char *, uint64_t))v113)(v149, v95);
}

uint64_t sub_1009807D8(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1001F579C(result, a2, a3 & 1);
  return result;
}

unint64_t sub_100980800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D1758;
  if (!qword_1011D1758)
  {
    v1 = sub_100044B54(&qword_1011AC418);
    sub_100048748(&qword_1011CCD28, type metadata accessor for VerticalLockupGridCell, (uint64_t)&unk_100EAEC8C);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1758);
  }
  return result;
}

unint64_t sub_10098089C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  result = qword_1011D1760;
  if (!qword_1011D1760)
  {
    v1 = sub_100044B54(&qword_1011D1748);
    v2 = sub_100044B54(&qword_1011D1738);
    v3 = sub_100044B54(&qword_1011AC3B0);
    v7 = sub_100044B54(&qword_1011AC418);
    v8 = (ValueMetadata *)sub_100980800();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v5 = sub_1000E3EE4();
    v6 = sub_100314AC0();
    v7 = v2;
    v8 = &type metadata for ActionType;
    v9 = v3;
    v10 = OpaqueTypeConformance2;
    v11 = v5;
    v12 = v6;
    swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1760);
  }
  return result;
}

uint64_t sub_1009809B8()
{
  return 16;
}

__n128 sub_1009809C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1009809D0()
{
  _QWORD v1[2];

  v1[0] = sub_100044B54(&qword_1011D1748);
  v1[1] = sub_10098089C();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
}

uint64_t sub_100980A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned __int8 v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10004FF60(a1, (uint64_t *)&unk_1011A13B0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
    {
LABEL_6:
      v16 = 0;
      return swift_task_create(v8, v16, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v17 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v9, v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
  v15 = v14;
  swift_unknownObjectRelease(v9);
  if (!(v15 | v13))
    goto LABEL_6;
  v19[0] = 0;
  v19[1] = 0;
  v16 = v19;
  v19[2] = v13;
  v19[3] = v15;
  return swift_task_create(v8, v16, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t sub_100980B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100980B68(a1, a2, a3, &qword_1011A3600);
}

uint64_t sub_100980B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100980B68(a1, a2, a3, &qword_1011D1848);
}

uint64_t sub_100980B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_10004FF60(a1, (uint64_t *)&unk_1011A13B0);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12, v15);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v18 = v17;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v19 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = sub_100007E8C(a4);
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v11, v21, v20, a2, a3);
}

uint64_t PlaybackController.play<A>(_:shuffleMode:startingSing:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D1780
                                                                                     + dword_1011D1780);
  v13 = (_QWORD *)swift_task_alloc(unk_1011D1784);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_10006AEE4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t PlaybackController.play<A, B>(_:from:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D1790
                                                                                              + dword_1011D1790);
  v15 = (_QWORD *)swift_task_alloc(unk_1011D1794);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D17A0
                                                                                              + dword_1011D17A0);
  v15 = (_QWORD *)swift_task_alloc(unk_1011D17A4);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t PlaybackController.play(_:shuffleMode:startingSing:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D17B0 + dword_1011D17B0);
  v9 = (_QWORD *)swift_task_alloc(unk_1011D17B4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10006AEE4;
  return v11(a1, a2, a3, a4);
}

uint64_t PlaybackController.play<A>(_:from:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D17C0 + dword_1011D17C0);
  v11 = (_QWORD *)swift_task_alloc(unk_1011D17C4);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_10006AEE4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t PlaybackController.play<A>(from:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D17D0 + dword_1011D17D0);
  v9 = (_QWORD *)swift_task_alloc(unk_1011D17D4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10005AEE4;
  return v11(a1, a2, a3, a4);
}

uint64_t PlaybackController.queue<A, B>(_:at:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v11 = type metadata accessor for QueueInsertionPosition(0);
  v8[10] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[11] = v12;
  v8[12] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Optional(0, a5);
  v8[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a4 - 8);
  v8[14] = v14;
  v8[15] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009810DC, 0, 0);
}

uint64_t sub_1009810DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  v5 = v0[7];
  v4 = v0[8];
  v7 = v0[5];
  v6 = v0[6];
  v8 = v0[2];
  sub_10004A07C(0, (unint64_t *)&qword_1011A99D0, MPCPlaybackIntent_ptr);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
  v9 = MPCPlaybackIntent.init<A, B>(for:startingAt:)(v1, v3, v7, v6, v5, v4);
  v0[16] = v9;
  v10 = v9;
  v12 = v0[11];
  v11 = v0[12];
  v13 = v0[10];
  v14 = v0[3];
  sub_10098137C(v0[4]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  v15 = sub_10098475C(v11);
  v0[17] = v15;
  v16 = (_QWORD *)swift_task_alloc(dword_1011D869C);
  v0[18] = v16;
  *v16 = v0;
  v16[1] = sub_10098125C;
  return PlaybackController.insert(_:location:)(v10, v15);
}

uint64_t sub_10098125C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100981320;
  }
  else
  {
    sub_100823690(*(id *)(v2 + 136));
    v4 = sub_1009812C8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009812C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);

  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100981320()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 128);
  sub_100823690(*(id *)(v0 + 136));

  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10098137C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  double v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  Class isa;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D1870);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  sub_10004A160(a1, (uint64_t)&v21 - v8, &qword_1011D1870);
  v10 = type metadata accessor for MusicPlayActivityFields(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v9, &qword_1011D1870);
  }
  else
  {
    MusicPlayActivityFields.featureName.getter();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (v15)
    {
      v16 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v13 = swift_bridgeObjectRelease().n128_u64[0];
      goto LABEL_6;
    }
  }
  v16 = 0;
LABEL_6:
  objc_msgSend(v2, "setPlayActivityFeatureName:", v16, v13);

  sub_10004A160(a1, (uint64_t)v6, &qword_1011D1870);
  if (v12(v6, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011D1870);
    isa = 0;
  }
  else
  {
    v18 = MusicPlayActivityFields.recommendationData.getter();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    if (v20 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000822B4(v18, v20);
    }
  }
  objc_msgSend(v2, "setPlayActivityRecommendationData:", isa);

}

uint64_t PlaybackController.queue<A>(_:at:playActivityFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v8 = type metadata accessor for QueueInsertionPosition(0);
  v6[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[9] = v9;
  v6[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v6[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a4 - 8);
  v6[12] = v11;
  v6[13] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100981618, 0, 0);
}

uint64_t sub_100981618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  v5 = v0[5];
  v4 = v0[6];
  v6 = v0[2];
  sub_10004A07C(0, (unint64_t *)&qword_1011A99D0, MPCPlaybackIntent_ptr);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v5);
  v7 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = MPCPlaybackIntent.init<A>(for:startingAt:)(v1, v3, v5, v4);
  v0[14] = v8;
  v9 = v8;
  v11 = v0[9];
  v10 = v0[10];
  v12 = v0[8];
  v13 = v0[3];
  sub_10098137C(v0[4]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
  v14 = sub_10098475C(v10);
  v0[15] = v14;
  v15 = (_QWORD *)swift_task_alloc(dword_1011D869C);
  v0[16] = v15;
  *v15 = v0;
  v15[1] = sub_100981788;
  return PlaybackController.insert(_:location:)(v9, v14);
}

uint64_t sub_100981788()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10098184C;
  }
  else
  {
    sub_100823690(*(id *)(v2 + 120));
    v4 = sub_1009817F4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009817F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);

  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098184C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 112);
  sub_100823690(*(id *)(v0 + 120));

  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall PlaybackController.pause()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  int v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v22[4];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_1010E4CF0, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = v0;
  if (v8 == 1)
  {
    sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011A13B0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v13 = v14 | 0x1C00;
    v15 = *v7;
    if (*v7)
    {
      v16 = v6[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15, v18);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v19;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v20 = sub_100007E8C(&qword_1011A3600);
  if (v12 | v11)
  {
    v22[0] = 0;
    v22[1] = 0;
    v21 = v22;
    v22[2] = v11;
    v22[3] = v12;
  }
  else
  {
    v21 = 0;
  }
  swift_task_create(v13, v21, v20, &unk_1011D17F0, v6);
  swift_release();
}

uint64_t sub_100981A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a4;
  return swift_task_switch(sub_100981A74, 0, 0);
}

uint64_t sub_100981A74()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = &type metadata for Player.PlaybackCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.PlaybackCommand;
  *(_BYTE *)(v0 + 16) = 1;
  v1 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1005098B8;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0, 0, 0);
}

uint64_t PlaybackController.musicPlayer.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(__n128);
  __n128 v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _BYTE v37[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D17F8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicPlayerPath(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v0;
  v13 = &v0[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v0[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v37, 0, 0);
  v14 = *(_QWORD *)v13;
  if (*(_QWORD *)v13)
  {
    v34 = v2;
    v15 = v1;
    v16 = *(uint64_t (**)(__n128))(*(_QWORD *)v14 + 360);
    v17 = swift_retain();
    v18 = (void *)v16(v17);
    swift_release();
    v19 = v18;
    MusicPlayerPath.init(_:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      type metadata accessor for InternalMusicPlayer(0);
      v30 = static InternalMusicPlayer.player(for:)(v12);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      goto LABEL_12;
    }

    sub_10004FF60((uint64_t)v8, &qword_1011D17F8);
    v1 = v15;
    v2 = v34;
  }
  v20 = Logger.playbackController.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v20, v1);
  v21 = v35;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v33 = v21;
    v34 = v1;
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v24 = 138543362;
    v26 = *(_QWORD *)v13;
    if (v26)
    {
      v27 = *(uint64_t (**)(__n128))(*(_QWORD *)v26 + 360);
      v28 = swift_retain();
      v29 = v27(v28);
      swift_release();
      v36 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37);
    }
    else
    {
      v36 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37);
      v29 = 0;
    }
    *v25 = v29;

    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Could not create MusicPlayerPath based on %{public}@, returning .localDevice", v24, 0xCu);
    v31 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v25, 1, v31);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
    v1 = v34;
  }
  else
  {

    v22 = v21;
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  type metadata accessor for InternalMusicPlayer(0);
  v30 = static InternalMusicPlayer.localDevice.getter();
LABEL_12:
  sub_100981E8C();
  return v30;
}

double sub_100981E8C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __n128 v26;
  double result;
  id v28[2];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D1850);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  InternalMusicPlayer.state.getter(v7);
  v10 = (void *)InternalMusicPlayer.State.objectWillChange.getter();
  swift_release();
  v28[1] = v10;
  v11 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v28[0] = (id)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  v19 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v20 = sub_100007E8C(&qword_1011D1858);
  v21 = sub_100049F28(&qword_1011D1860, &qword_1011D1858, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v22 = sub_10006A92C();
  Publisher.receive<A>(on:options:)(v28, v4, v20, v11, v21, v22);
  sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

  swift_release();
  v23 = swift_allocObject(&unk_1010E4DB8, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16);
  v24 = sub_100049F28(&qword_1011D1868, &qword_1011D1850, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v25 = (void *)Publisher<>.sink(receiveValue:)(sub_100984A04, v23, v5, v24);
  v26 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v26);
  if (qword_10119CB20 != -1)
    swift_once(&qword_10119CB20, sub_100982918);
  objc_setAssociatedObject(v1, (const void *)qword_1011D1770, v25, (void *)1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t PlaybackController.playabilityStatus<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  __n128 v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v9 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (_QWORD *)(v4 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v13, v21, 0, 0);
  if (*v13)
  {
    swift_retain();
    v14 = Player.state<A>(for:)(a1, a2, a3);
    v15 = swift_release();
    (*(void (**)(__n128))(*v14 + 256))(v15);
    v16 = swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v10 + 32))(a4, v12, v9, v16);
  }
  else
  {
    v18 = enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:);
    v19 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a4, v18, v19);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(a4, enum case for MusicPlayer.PlayabilityStatus.unplayable(_:), v9);
  }
}

uint64_t (*PlaybackController.onMusicAppPlayerChanged.getter())(uint64_t a1)
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  if (qword_10119CB18 != -1)
    swift_once(&qword_10119CB18, sub_1009828F4);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011D1768);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v7, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1001EBCB4((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    v3 = sub_100007E8C(qword_1011D1800);
    if (swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v3, 6))
    {
      v4 = swift_allocObject(&unk_1010E4D18, 32, 7);
      *(_OWORD *)(v4 + 16) = v6;
      return sub_1005B998C;
    }
  }
  else
  {
    sub_10004FF60((uint64_t)v8, &qword_10119DCC0);
  }
  return 0;
}

double PlaybackController.onMusicAppPlayerChanged.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double result;
  _QWORD v11[2];

  v3 = v2;
  if (qword_10119CB18 != -1)
    swift_once(&qword_10119CB18, sub_1009828F4);
  v6 = (const void *)qword_1011D1768;
  if (a1)
  {
    v7 = swift_allocObject(&unk_1010E4D40, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a2;
    v11[0] = sub_1005B9968;
    v11[1] = v7;
    swift_retain();
    v8 = sub_100007E8C(qword_1011D1800);
    v9 = (void *)_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v11, v8);
  }
  else
  {
    v9 = 0;
  }
  objc_setAssociatedObject(v3, v6, v9, (void *)3);
  sub_10004BA30(a1, a2);
  *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
  return result;
}

void (*PlaybackController.onMusicAppPlayerChanged.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  *v3 = PlaybackController.onMusicAppPlayerChanged.getter();
  v3[1] = v4;
  return sub_10098247C;
}

void sub_10098247C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 2);
  v5 = **a1;
  v4 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    sub_100048AAC(**a1, v4);
    if (qword_10119CB18 != -1)
      swift_once(&qword_10119CB18, sub_1009828F4);
    v6 = (const void *)qword_1011D1768;
    if (v5)
    {
      v7 = swift_allocObject(&unk_1010E4D68, 32, 7);
      *(_QWORD *)(v7 + 16) = v5;
      *(_QWORD *)(v7 + 24) = v4;
      v2[2] = (uint64_t)sub_1005B9DC4;
      v2[3] = v7;
      swift_retain();
      v8 = sub_100007E8C(qword_1011D1800);
      v9 = (void *)_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v3, v8);
    }
    else
    {
      v9 = 0;
    }
    objc_setAssociatedObject((id)v2[4], v6, v9, (void *)3);
    sub_10004BA30(v5, v4);
    swift_unknownObjectRelease(v9);
    sub_10004BA30(*v2, v2[1]);
  }
  else
  {
    if (qword_10119CB18 != -1)
      swift_once(&qword_10119CB18, sub_1009828F4);
    v10 = (const void *)qword_1011D1768;
    if (v5)
    {
      v11 = swift_allocObject(&unk_1010E4D90, 32, 7);
      *(_QWORD *)(v11 + 16) = v5;
      *(_QWORD *)(v11 + 24) = v4;
      v2[2] = (uint64_t)sub_1005B9DC4;
      v2[3] = v11;
      swift_retain();
      v12 = sub_100007E8C(qword_1011D1800);
      v13 = (void *)_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v3, v12);
    }
    else
    {
      v13 = 0;
    }
    objc_setAssociatedObject((id)v2[4], v10, v13, (void *)3);
    sub_10004BA30(v5, v4);
    swift_unknownObjectRelease(v13);
  }
  free(v2);
}

uint64_t PlaybackController.playerObjectWillChange.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  if (qword_10119CB20 != -1)
    swift_once(&qword_10119CB20, sub_100982918);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011D1770);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1001EBCB4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = type metadata accessor for AnyCancellable(0);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
  }
  else
  {
    sub_10004FF60((uint64_t)v7, &qword_10119DCC0);
  }
  return 0;
}

double PlaybackController.playerObjectWillChange.setter(id value)
{
  void *v1;
  double result;

  if (qword_10119CB20 != -1)
    swift_once(&qword_10119CB20, sub_100982918);
  objc_setAssociatedObject(v1, (const void *)qword_1011D1770, value, (void *)1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double (*PlaybackController.playerObjectWillChange.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = PlaybackController.playerObjectWillChange.getter();
  return sub_10098279C;
}

double sub_10098279C(void **a1, char a2)
{
  void *v3;
  uint64_t v4;
  double result;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = qword_10119CB20;
    swift_retain();
    if (v4 != -1)
      swift_once(&qword_10119CB20, sub_100982918);
    objc_setAssociatedObject(a1[1], (const void *)qword_1011D1770, v3, (void *)1);
    swift_release();
  }
  else
  {
    if (qword_10119CB20 != -1)
      swift_once(&qword_10119CB20, sub_100982918);
    objc_setAssociatedObject(a1[1], (const void *)qword_1011D1770, v3, (void *)1);
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10098285C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = PlaybackController.onMusicAppPlayerChanged.getter();
    if (v5)
    {
      v7 = (void (*)(void))v5;
      v8 = v6;
      PlaybackController.musicPlayer.getter();
      v7();
      sub_10004BA30((uint64_t)v7, v8);
      swift_release();
    }

  }
}

uint64_t sub_1009828F4()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011D1768 = result;
  return result;
}

uint64_t sub_100982918()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011D1770 = result;
  return result;
}

uint64_t sub_10098293C()
{
  uint64_t v0;

  return static MusicAppPlayer.requiresPlayabilityChecks.getter(v0);
}

uint64_t sub_100982944()
{
  uint64_t v0;

  return static MusicAppPlayer.requiresNowPlayingTransition.getter(v0);
}

uint64_t sub_10098294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D1790
                                                                                              + dword_1011D1790);
  v15 = (_QWORD *)swift_task_alloc(unk_1011D1794);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1009829F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D17A0
                                                                                              + dword_1011D17A0);
  v15 = (_QWORD *)swift_task_alloc(unk_1011D17A4);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100982A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D17D0 + dword_1011D17D0);
  v9 = (_QWORD *)swift_task_alloc(unk_1011D17D4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10006AEE4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_100982B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc(dword_1011D17DC);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return PlaybackController.queue<A, B>(_:at:playActivityFields:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100982BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(dword_1011D17E4);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_10006AEE4;
  return PlaybackController.queue<A>(_:at:playActivityFields:)(a1, a2, a3, a4, a5);
}

void sub_100982C3C()
{
  PlaybackController.pause()();
}

uint64_t sub_100982C5C()
{
  return PlaybackController.musicPlayer.getter();
}

uint64_t (*sub_100982C7C())(uint64_t a1)
{
  return PlaybackController.onMusicAppPlayerChanged.getter();
}

double sub_100982C9C(uint64_t a1, uint64_t a2)
{
  return PlaybackController.onMusicAppPlayerChanged.setter(a1, a2);
}

void (*sub_100982CBC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PlaybackController.onMusicAppPlayerChanged.modify(v2);
  return sub_1002A837C;
}

uint64_t sub_100982D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return PlaybackController.playabilityStatus<A>(for:)(a1, a2, a3, a4);
}

uint64_t sub_100982D24(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;

  v2 = sub_100007E8C(&qword_1011D1880);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ShuffleMode(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_10004A160(a1, (uint64_t)v5, &qword_1011D1880);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v5, v6);
    if (v9 == enum case for ShuffleMode.off(_:))
    {
      v8 = 0;
      goto LABEL_9;
    }
    if (v9 == enum case for ShuffleMode.items(_:))
    {
      v8 = 1;
      goto LABEL_9;
    }
    if (v9 == enum case for ShuffleMode.containers(_:))
    {
      v8 = 2;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  v8 = 0;
LABEL_9:
  sub_10004FF60(a1, &qword_1011D1880);
  return v8;
}

uint64_t sub_100982E70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v6 + 80) = a5;
  *(_QWORD *)(v6 + 88) = a6;
  *(_QWORD *)(v6 + 64) = a2;
  *(_QWORD *)(v6 + 72) = a4;
  *(_BYTE *)(v6 + 208) = a3;
  *(_QWORD *)(v6 + 56) = a1;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v6 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D1880);
  *(_QWORD *)(v6 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  *(_QWORD *)(v6 + 112) = v10;
  *(_QWORD *)(v6 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v6 + 128) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 136) = v12;
  v13 = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v6 + 144) = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 152) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 160) = swift_task_alloc(v14);
  v15 = *(_QWORD *)(a5 - 8);
  *(_QWORD *)(v6 + 168) = v15;
  *(_QWORD *)(v6 + 176) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  *(_QWORD *)(v6 + 184) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v6 + 192) = v17;
  *(_QWORD *)(v6 + 200) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100982FA4, 0, 0);
}

uint64_t sub_100982FA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 16);
  v4(v1, *(_QWORD *)(v0 + 56), v3);
  v5 = MusicPlaybackIntentDescriptor.init<A>(item:)(v1, v3, v2);
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v38 = v6;
  v8 = *(_QWORD *)(v0 + 184);
  v39 = *(_QWORD *)(v0 + 176);
  v37 = *(_QWORD *)(v0 + 144);
  v35 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 112);
  v40 = *(_QWORD *)(v0 + 104);
  v34 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 80);
  v31 = *(_BYTE *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 72);
  v30 = *(_QWORD *)(v0 + 64);
  v28 = *(_QWORD *)(v0 + 88);
  v29 = *(_QWORD *)(v0 + 56);
  v13 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v5);
  sub_10098137C(v12);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v7, v8);
  swift_storeEnumTagMultiPayload(v9, v10, 1);
  *(_QWORD *)(v0 + 40) = v11;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v28 + 8);
  v14 = sub_100049F68((_QWORD *)(v0 + 16));
  v4(v14, v29, v11);
  sub_10004A160(v30, v40, &qword_1011D1880);
  v15 = sub_100982D24(v40);
  v17 = v9;
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v9, v0 + 16, 3, 0, v15, v16 & 1, 0, 1, v32, 0);
  *(_BYTE *)(v32 + *(int *)(v33 + 32)) = v31 & 1;
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v34, 1, 1, v18);
  sub_1001493F0(v32, v35);
  type metadata accessor for MainActor(0);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v36 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (v37 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1010E4EA8, v24 + 16, v21 | 7);
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
  sub_100149448(v35, v25 + v22);
  *(_QWORD *)(v25 + v23) = 0;
  v26 = (_QWORD *)(v25 + v24);
  *v26 = 0;
  v26[1] = 0;
  sub_100166D14(v34, (uint64_t)&unk_1011D18A0, v25);
  swift_release();
  sub_100108888(v32);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v7, v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v39);
  swift_task_dealloc(v32);
  swift_task_dealloc(v35);
  swift_task_dealloc(v17);
  swift_task_dealloc(v40);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009832D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v7[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v7[15] = v11;
  v7[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v7[17] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v7[18] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[19] = swift_task_alloc(v14);
  v7[20] = swift_task_alloc(v14);
  v15 = type metadata accessor for Optional(0, a4);
  v7[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a5 - 8);
  v7[22] = v16;
  v7[23] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v7[24] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v7[25] = v18;
  v7[26] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100983410, 0, 0);
}

uint64_t sub_100983410()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD **)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 176) + 16))(v1, *(_QWORD *)(v0 + 64), v5);
  v8 = *(_QWORD *)(v6 - 8);
  v40 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16);
  v40(v2, v7, v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v6);
  v9 = MusicPlaybackIntentDescriptor.init<A, B>(items:startingAt:)(v1, v2, v5, v6, v3, v4);
  v10 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 192);
  v37 = v10;
  v38 = *(_QWORD *)(v0 + 184);
  v39 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 160);
  v35 = *(_QWORD *)(v0 + 144);
  v36 = v11;
  v13 = *(_QWORD *)(v0 + 128);
  v33 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 56);
  v18 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
  sub_10098137C(v16);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v11, v12);
  swift_storeEnumTagMultiPayload(v13, v14, 1);
  *(_QWORD *)(v0 + 40) = v17;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v15 + 8);
  v19 = sub_100049F68((_QWORD *)(v0 + 16));
  v40(v19, v30, v17);
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v13, v0 + 16, 3, 0, 0, 1, 0, 1, v31, 0);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v32, 1, 1, v20);
  sub_1001493F0(v31, v33);
  type metadata accessor for MainActor(0);
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v34 + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = (v35 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(&unk_1010E4E80, v26 + 16, v23 | 7);
  *(_QWORD *)(v27 + 16) = v22;
  *(_QWORD *)(v27 + 24) = &protocol witness table for MainActor;
  sub_100149448(v33, v27 + v24);
  *(_QWORD *)(v27 + v25) = 0;
  v28 = (_QWORD *)(v27 + v26);
  *v28 = 0;
  v28[1] = 0;
  sub_100166D14(v32, (uint64_t)&unk_1011D1898, v27);
  swift_release();
  sub_100108888(v31);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v12);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v13);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100983738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v7[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v7[25] = v9;
  v7[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v7[27] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v7[28] = v11;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[29] = swift_task_alloc(v12);
  v7[30] = swift_task_alloc(v12);
  v13 = sub_100007E8C(&qword_1011B69C0);
  v7[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v7[32] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[33] = v15;
  v7[34] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100983848, 0, 0);
}

uint64_t sub_100983848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v35 = *(_QWORD *)(v0 + 256);
  v36 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 224);
  v32 = *(_QWORD *)(v0 + 232);
  v33 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = v3;
  v9 = sub_100049F68((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v9, v7, v5);
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v4;
  v10 = sub_100049F68((_QWORD *)(v0 + 56));
  v11 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v11(v10, v8, v6);
  v12 = type metadata accessor for MusicPlaybackSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v36, 1, 1, v12);
  v13 = MusicPlaybackIntentDescriptor.init(container:startingAt:playbackSource:)(v0 + 16, v0 + 56, v36);
  v30 = v1;
  v14 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v13);
  sub_10098137C(v26);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v27, v1, v35);
  swift_storeEnumTagMultiPayload(v27, v28, 1);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v4 + 8);
  v15 = sub_100049F68((_QWORD *)(v0 + 96));
  v11(v15, v8, v6);
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v27, v0 + 96, 3, 0, 0, 1, 0, 1, v29, 0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v31, 1, 1, v16);
  sub_1001493F0(v29, v32);
  type metadata accessor for MainActor(0);
  v18 = static MainActor.shared.getter(v17);
  v19 = *(unsigned __int8 *)(v33 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = (v34 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1010E4E58, v22 + 16, v19 | 7);
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  sub_100149448(v32, v23 + v20);
  *(_QWORD *)(v23 + v21) = 0;
  v24 = (_QWORD *)(v23 + v22);
  *v24 = 0;
  v24[1] = 0;
  sub_100166D14(v31, (uint64_t)&unk_1011D1890, v23);
  swift_release();
  sub_100108888(v29);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v30, v35);
  swift_task_dealloc(v30);
  swift_task_dealloc(v36);
  swift_task_dealloc(v29);
  swift_task_dealloc(v32);
  swift_task_dealloc(v27);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100983B24(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a4;
  *(_BYTE *)(v4 + 200) = a3;
  *(_QWORD *)(v4 + 56) = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v4 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D1880);
  *(_QWORD *)(v4 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  *(_QWORD *)(v4 + 96) = v7;
  *(_QWORD *)(v4 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v4 + 112) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 120) = v9;
  v10 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v4 + 128) = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 136) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 144) = swift_task_alloc(v11);
  v12 = type metadata accessor for GenericMusicItem(0);
  *(_QWORD *)(v4 + 152) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 160) = v13;
  *(_QWORD *)(v4 + 168) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  *(_QWORD *)(v4 + 176) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 184) = v15;
  *(_QWORD *)(v4 + 192) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100983C5C, 0, 0);
}

uint64_t sub_100983C5C()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(_QWORD *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD **)(v0 + 168);
  v2 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 16);
  v2(v1, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 152));
  v3 = MusicPlaybackIntentDescriptor.init(item:)(v1);
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 176);
  v36 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 128);
  v32 = *(_QWORD *)(v0 + 136);
  v33 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v30 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  v37 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 72);
  v31 = *(_QWORD *)(v0 + 80);
  v29 = *(_BYTE *)(v0 + 200);
  v26 = *(_QWORD *)(v0 + 56);
  v27 = *(_QWORD *)(v0 + 64);
  v35 = v4;
  v11 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v3);
  sub_10098137C(v10);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v4, v6);
  swift_storeEnumTagMultiPayload(v8, v9, 1);
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = sub_100051DDC();
  v12 = sub_100049F68((_QWORD *)(v0 + 16));
  v2(v12, v26, v7);
  sub_10004A160(v27, v37, &qword_1011D1880);
  v13 = sub_100982D24(v37);
  v15 = v8;
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v8, v0 + 16, 3, 0, v13, v14 & 1, 0, 1, v28, 0);
  *(_BYTE *)(v28 + *(int *)(v30 + 32)) = v29 & 1;
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v31, 1, 1, v16);
  sub_1001493F0(v28, v32);
  type metadata accessor for MainActor(0);
  v18 = static MainActor.shared.getter(v17);
  v19 = *(unsigned __int8 *)(v33 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = (v34 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1010E4E30, v22 + 16, v19 | 7);
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  sub_100149448(v32, v23 + v20);
  *(_QWORD *)(v23 + v21) = 0;
  v24 = (_QWORD *)(v23 + v22);
  *v24 = 0;
  v24[1] = 0;
  sub_100166D14(v31, (uint64_t)&unk_1011D1888, v23);
  swift_release();
  sub_100108888(v28);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v35, v6);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v28);
  swift_task_dealloc(v32);
  swift_task_dealloc(v15);
  swift_task_dealloc(v37);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100983F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v5[13] = v8;
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5[15] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[16] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[17] = swift_task_alloc(v11);
  v5[18] = swift_task_alloc(v11);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a4 - 8);
  v5[20] = v13;
  v5[21] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5[22] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[23] = v15;
  v5[24] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009840A0, 0, 0);
}

uint64_t sub_1009840A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD **)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 160) + 16))(v1, *(_QWORD *)(v0 + 64), v4);
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 16);
  v8(v2, v5, v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  v9 = MusicPlaybackIntentDescriptor.init<A>(items:startingAt:)(v1, v2, v4, v3);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 176);
  v35 = v10;
  v36 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 152);
  v33 = *(_QWORD *)(v0 + 128);
  v34 = v11;
  v13 = *(_QWORD *)(v0 + 112);
  v31 = *(_QWORD *)(v0 + 136);
  v32 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 144);
  v30 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 56);
  v16 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
  sub_10098137C(v15);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v11, v12);
  swift_storeEnumTagMultiPayload(v13, v14, 1);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = sub_100051DDC();
  v17 = sub_100049F68((_QWORD *)(v0 + 16));
  v8(v17, v28, v6);
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v13, v0 + 16, 3, 0, 0, 1, 0, 1, v29, 0);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v30, 1, 1, v18);
  sub_1001493F0(v29, v31);
  type metadata accessor for MainActor(0);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v32 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (v33 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1010E4E08, v24 + 16, v21 | 7);
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
  sub_100149448(v31, v25 + v22);
  *(_QWORD *)(v25 + v23) = 0;
  v26 = (_QWORD *)(v25 + v24);
  *v26 = 0;
  v26[1] = 0;
  sub_100166D14(v30, (uint64_t)&unk_1011D1878, v25);
  swift_release();
  sub_100108888(v29);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v12);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v13);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009843C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v4[17] = v6;
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v4[19] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v4[20] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[21] = swift_task_alloc(v9);
  v4[22] = swift_task_alloc(v9);
  v10 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4[23] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[24] = v11;
  v4[25] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009844A4, 0, 0);
}

uint64_t sub_1009844A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(_QWORD *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v1 = *(_QWORD *)(v0 + 96);
  v33 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 40) = v33;
  v2 = sub_100049F68((_QWORD *)(v0 + 16));
  v3 = *(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v3(v2, v1);
  v4 = MusicPlaybackIntentDescriptor.init(stationSeed:)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 184);
  v32 = v7;
  v26 = *(_QWORD *)(v0 + 176);
  v30 = *(_QWORD *)(v0 + 160);
  v31 = v5;
  v8 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v27 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 96);
  v12 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v4);
  sub_10098137C(v11);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, v5, v7);
  swift_storeEnumTagMultiPayload(v8, v9, 1);
  *(_QWORD *)(v0 + 80) = v10;
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v24 + 8);
  v13 = sub_100049F68((_QWORD *)(v0 + 56));
  ((void (*)(_QWORD *, uint64_t, uint64_t))v3)(v13, v25, v10);
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v8, v0 + 56, 3, 0, 0, 1, 0, 1, v26, 0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v27, 1, 1, v14);
  sub_1001493F0(v26, v28);
  type metadata accessor for MainActor(0);
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v29 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v30 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1010E4DE0, v20 + 16, v17 | 7);
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  sub_100149448(v28, v21 + v18);
  *(_QWORD *)(v21 + v19) = 0;
  v22 = (_QWORD *)(v21 + v20);
  *v22 = 0;
  v22[1] = 0;
  sub_100166D14(v27, (uint64_t)&unk_1011A3D90, v21);
  swift_release();
  sub_100108888(v26);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v31, v32);
  swift_task_dealloc(v31);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v8);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098475C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t result;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;

  v2 = type metadata accessor for QueueInsertionPosition(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v14 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v14 - v7, a1, v2);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  v11 = 0;
  if (v10 == enum case for QueueInsertionPosition.afterCurrentEntry(_:))
    goto LABEL_8;
  if (v10 == enum case for QueueInsertionPosition.endOfQueue(_:))
  {
    v11 = 2;
LABEL_8:
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return v11;
  }
  if (v10 == enum case for QueueInsertionPosition.afterLastContainer(_:))
  {
    v11 = 3;
    goto LABEL_8;
  }
  if (v10 == enum case for QueueInsertionPosition.endOfTracklist(_:))
  {
    v11 = 1;
    goto LABEL_8;
  }
  v9(v6, a1, v2);
  v14 = 0;
  v15 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  v13._object = (void *)0x8000000100E49840;
  v13._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v13);
  _print_unlocked<A, B>(_:_:)(v6, &v14, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v14, v15, "Music/PlaybackController+MusicAppPlayer.swift", 45, 2, 219, 0);
  __break(1u);
  return result;
}

uint64_t sub_10098492C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100984958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1011D17EC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  v5[7] = a1;
  v5[8] = v4;
  return swift_task_switch(sub_100981A74, 0, 0);
}

uint64_t sub_1009849BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009849E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100984A04(uint64_t a1)
{
  uint64_t v1;

  sub_10098285C(a1, v1);
}

uint64_t sub_100984A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  unint64_t v13;
  ValueMetadata *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  __n128 v24;
  char *v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  unint64_t v37;
  ValueMetadata *v38;
  unint64_t v39;
  char v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[9];
  unint64_t v46;

  v34 = a1;
  v35 = type metadata accessor for PresentationBackgroundInteraction(0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v31 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ImmersivePresentationView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v30 = sub_100007E8C(&qword_1011D19D0);
  v32 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = sub_100007E8C(&qword_10119F4E8);
  v10 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v11 = ObservedObject.projectedValue.getter(v7, v8, v9, v10);
  KeyPath = swift_getKeyPath(&unk_100ED84D8);
  ObservedObject.Wrapper.subscript.getter(&v36, KeyPath, v11, v10);
  swift_release();
  swift_release();
  v14 = v36;
  v13 = v37;
  v15 = (char)v38;
  sub_1009876C0((uint64_t)v1, (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1010E4F58, v17 + v5, v16 | 7);
  sub_100987EB4((uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  v19 = (uint64_t *)((char *)v1 + *(int *)(v3 + 28));
  v20 = *v19;
  v21 = v19[1];
  v45[0] = 1;
  swift_retain();
  State.init(wrappedValue:)(v45, &type metadata for Bool);
  LOBYTE(v36) = v45[1];
  v37 = v46;
  v38 = v14;
  v39 = v13;
  v40 = v15;
  v41 = sub_100987EF8;
  v42 = v18;
  v43 = v20;
  v44 = v21;
  v22 = sub_100987F3C();
  v23 = v29;
  View.interactiveDismissDisabled(_:)(1, &type metadata for ImmersivePresentationView.IMDecisionSheet, v22);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v24 = swift_release();
  v25 = v31;
  static PresentationBackgroundInteraction.disabled.getter(v24);
  v36 = &type metadata for ImmersivePresentationView.IMDecisionSheet;
  v37 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v36, &opaque type descriptor for <<opaque return type of View.interactiveDismissDisabled(_:)>>, 1);
  v27 = v30;
  View.presentationBackgroundInteraction(_:)(v25, v30, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v27);
}

uint64_t sub_100984D04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  double v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v30[3];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D19E0);
  __chkstk_darwin(v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D19E8);
  __chkstk_darwin(v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v11 = sub_100007E8C(&qword_1011D19F0);
  v12 = sub_100984F14(v2, &v6[*(int *)(v11 + 44)]);
  if (qword_10119CB30 != -1)
    v12 = swift_once(&qword_10119CB30, sub_100986ECC);
  v13 = qword_1011D18B0;
  v14 = static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(v30, v13, 0, 0, 1, v14, v15);
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011D19E0);
  v16 = &v9[*(int *)(v7 + 36)];
  v17 = v30[1];
  *(_OWORD *)v16 = v30[0];
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v30[2];
  v18 = sub_10004FF60((uint64_t)v6, &qword_1011D19E0);
  if (qword_10119CB28 != -1)
    v18 = swift_once(&qword_10119CB28, sub_100986EBC);
  v19 = *(double *)&qword_1011D18A8;
  v20 = static Edge.Set.all.getter(v18);
  v21 = EdgeInsets.init(_all:)(v19);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_10004A160((uint64_t)v9, a1, &qword_1011D19E8);
  v28 = a1 + *(int *)(sub_100007E8C(&qword_1011D19F8) + 36);
  *(_BYTE *)v28 = v20;
  *(double *)(v28 + 8) = v21;
  *(_QWORD *)(v28 + 16) = v23;
  *(_QWORD *)(v28 + 24) = v25;
  *(_QWORD *)(v28 + 32) = v27;
  *(_BYTE *)(v28 + 40) = 0;
  return sub_10004FF60((uint64_t)v9, &qword_1011D19E8);
}

uint64_t sub_100984F14@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  double v140;
  char v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned __int8 v152;
  unsigned __int8 v153;
  unsigned __int8 v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  double v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  _OWORD *v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;
  void (*v184)(char *, char *, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(char *, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v195)(uint64_t, char *, uint64_t);
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  double v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  double v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _OWORD *v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t KeyPath;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  char *v260;
  char v261;
  char v262;
  char v263;
  _DWORD v264[2];
  _DWORD v265[2];
  _DWORD v266[10];
  uint64_t v267;
  unsigned __int8 v268;
  uint64_t v269;
  unsigned __int8 v270;
  uint64_t v271;
  uint64_t v272;
  unsigned __int8 v273;
  _BYTE v274[7];
  _BYTE v275[7];
  unsigned __int8 v276;
  _BYTE v277[7];
  unsigned __int8 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  _OWORD v287[2];
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char v297;
  _BYTE v298[7];
  uint64_t v299;
  char v300;
  _BYTE v301[7];
  uint64_t v302;
  uint64_t v303;
  char v304;
  _BYTE v305[7];
  double v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char v310;

  v215 = a1;
  v226 = a2;
  v2 = sub_100007E8C(&qword_1011D1A00);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v195 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v216 = sub_100007E8C(&qword_1011D1A08);
  __chkstk_darwin(v216);
  v259 = (uint64_t)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v247 = (uint64_t)&v195 - v7;
  v214 = sub_100007E8C(&qword_1011D1A10);
  __chkstk_darwin(v214);
  v9 = (char *)&v195 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v195 - v11;
  v235 = type metadata accessor for ButtonBorderShape(0);
  v210 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v213 = (char *)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = type metadata accessor for BorderlessButtonStyle(0);
  v208 = *(_QWORD *)(v230 - 8);
  __chkstk_darwin(v230);
  v211 = (char *)&v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_100007E8C(&qword_10119DFD8);
  v207 = *(_QWORD *)(v229 - 8);
  __chkstk_darwin(v229);
  v228 = (char *)&v195 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = sub_100007E8C(&qword_1011D1A18);
  v209 = *(_QWORD *)(v231 - 8);
  __chkstk_darwin(v231);
  v212 = (char *)&v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_100007E8C(&qword_1011D1A20);
  __chkstk_darwin(v227);
  v257 = (uint64_t)&v195 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v195 - v19;
  v246 = type metadata accessor for Divider(0);
  v237 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v254 = (char *)&v195 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v255 = (char *)&v195 - v23;
  __chkstk_darwin(v24);
  v251 = (char *)&v195 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v195 - v27;
  v30 = static Alignment.center.getter(v29);
  v244 = v31;
  v245 = v30;
  sub_100986024((uint64_t)&v288);
  v243 = v288;
  v224 = v290;
  v225 = v289;
  v256 = v291;
  v222 = v293;
  v223 = v292;
  if (qword_10119CB48 != -1)
    v32 = swift_once(&qword_10119CB48, sub_100986F00);
  v253 = v20;
  v260 = v9;
  v33 = qword_1011D18C8;
  if (qword_10119CB50 != -1)
    v32 = swift_once(&qword_10119CB50, sub_100986F10);
  v34 = qword_1011D18D0;
  v35 = static Alignment.center.getter(v32);
  v37 = _FrameLayout.init(width:height:alignment:)(&v267, v33, 0, v34, 0, v35, v36);
  v38 = v268;
  v238 = v267;
  v239 = v269;
  v39 = v270;
  v241 = v272;
  v242 = v271;
  v240 = static Edge.Set.bottom.getter(v37);
  if (qword_10119CB40 != -1)
    swift_once(&qword_10119CB40, sub_100986EF0);
  v217 = v4;
  v252 = v28;
  v258 = v12;
  v40 = EdgeInsets.init(_all:)(*(double *)&qword_1011D18C0);
  v220 = v41;
  v221 = v40;
  v218 = v43;
  v219 = v42;
  v278 = v38;
  v276 = v39;
  v273 = 0;
  if (qword_10119CB60 != -1)
    swift_once(&qword_10119CB60, sub_100986F30);
  v288 = qword_1011D18E0;
  v289 = *(_QWORD *)algn_1011D18E8;
  v44 = sub_100055B68();
  swift_bridgeObjectRetain();
  KeyPath = v44;
  v45 = Text.init<A>(_:)(&v288, &type metadata for String, v44);
  v47 = v46;
  v49 = v48;
  v51 = v50 & 1;
  v52 = static Font.title3.getter(v45);
  v53 = Text.font(_:)(v52, v45, v47, v51, v49);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  swift_release();
  sub_100055BAC(v45, v47, v51);
  v60 = swift_bridgeObjectRelease();
  LODWORD(v288) = static HierarchicalShapeStyle.primary.getter(v60);
  v236 = Text.foregroundStyle<A>(_:)(&v288, v53, v55, v57 & 1, v59, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v249 = v61;
  v250 = v62;
  v201 = v63;
  sub_100055BAC(v53, v55, v57 & 1);
  swift_bridgeObjectRelease();
  if (qword_10119CB68 != -1)
    swift_once(&qword_10119CB68, sub_100987014);
  v288 = qword_1011D18F0;
  v289 = *(_QWORD *)algn_1011D18F8;
  swift_bridgeObjectRetain();
  v64 = Text.init<A>(_:)(&v288, &type metadata for String, KeyPath);
  v66 = v65;
  v68 = v67;
  v70 = v69 & 1;
  v71 = static Font.subheadline.getter(v64);
  v72 = Text.font(_:)(v71, v64, v66, v70, v68);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  swift_release();
  sub_100055BAC(v64, v66, v70);
  swift_bridgeObjectRelease();
  LODWORD(v288) = static HierarchicalShapeStyle.secondary.getter(v79);
  v80 = Text.foregroundStyle<A>(_:)(&v288, v72, v74, v76 & 1, v78, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v232 = v81;
  v233 = v80;
  v200 = v82;
  v234 = v83;
  sub_100055BAC(v72, v74, v76 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100ED8570);
  v206 = static Edge.Set.bottom.getter(KeyPath);
  v84 = EdgeInsets.init(_all:)(*(double *)&qword_1011D18C0);
  v204 = v85;
  v205 = v84;
  v202 = v87;
  v203 = v86;
  Divider.init()(v88);
  v89 = swift_allocObject(&unk_1010E5008, 88, 7);
  v90 = v215;
  v91 = *(_OWORD *)(v215 + 48);
  *(_OWORD *)(v89 + 48) = *(_OWORD *)(v215 + 32);
  *(_OWORD *)(v89 + 64) = v91;
  *(_QWORD *)(v89 + 80) = *(_QWORD *)(v90 + 64);
  v92 = *(_OWORD *)(v90 + 16);
  *(_OWORD *)(v89 + 16) = *(_OWORD *)v90;
  *(_OWORD *)(v89 + 32) = v92;
  sub_1009882E4((_QWORD *)v90);
  v93 = v228;
  v94 = Button.init(action:label:)(sub_1009882B4, v89, sub_100986118, 0, &type metadata for Text, &protocol witness table for Text);
  v95 = v211;
  BorderlessButtonStyle.init()(v94);
  v96 = sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v199 = v96;
  v198 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v97 = v212;
  v98 = v229;
  v99 = v230;
  View.buttonStyle<A>(_:)(v95, v229, v230, v96, v198);
  v208 = *(_QWORD *)(v208 + 8);
  ((void (*)(char *, uint64_t))v208)(v95, v99);
  v207 = *(_QWORD *)(v207 + 8);
  v100 = ((uint64_t (*)(char *, uint64_t))v207)(v93, v98);
  v101 = v213;
  static ButtonBorderShape.roundedRectangle.getter(v100);
  v102 = swift_getKeyPath(&unk_100ED85A0);
  v103 = v257;
  v104 = (uint64_t *)(v257 + *(int *)(v227 + 36));
  v197 = sub_100007E8C(&qword_1011A0610);
  v105 = (char *)v104 + *(int *)(v197 + 28);
  v106 = v210;
  v196 = *(void (**)(char *, char *, uint64_t))(v210 + 16);
  v107 = v235;
  v196(v105, v101, v235);
  *v104 = v102;
  v108 = v209;
  v195 = *(void (**)(uint64_t, char *, uint64_t))(v209 + 16);
  v109 = v231;
  v195(v103, v97, v231);
  v210 = *(_QWORD *)(v106 + 8);
  ((void (*)(char *, uint64_t))v210)(v101, v107);
  v209 = *(_QWORD *)(v108 + 8);
  ((void (*)(char *, uint64_t))v209)(v97, v109);
  sub_100065228(v103, (uint64_t)v253, &qword_1011D1A20);
  v110 = swift_allocObject(&unk_1010E5030, 88, 7);
  v111 = *(_OWORD *)(v90 + 48);
  *(_OWORD *)(v110 + 48) = *(_OWORD *)(v90 + 32);
  *(_OWORD *)(v110 + 64) = v111;
  *(_QWORD *)(v110 + 80) = *(_QWORD *)(v90 + 64);
  v112 = *(_OWORD *)(v90 + 16);
  *(_OWORD *)(v110 + 16) = *(_OWORD *)v90;
  *(_OWORD *)(v110 + 32) = v112;
  sub_1009882E4((_QWORD *)v90);
  v113 = v228;
  v114 = Button.init(action:label:)(sub_100988354, v110, sub_100986440, 0, &type metadata for Text, &protocol witness table for Text);
  BorderlessButtonStyle.init()(v114);
  v116 = v229;
  v115 = v230;
  View.buttonStyle<A>(_:)(v95, v229, v230, v199, v198);
  ((void (*)(char *, uint64_t))v208)(v95, v115);
  v117 = ((uint64_t (*)(char *, uint64_t))v207)(v113, v116);
  static ButtonBorderShape.roundedRectangle.getter(v117);
  v118 = swift_getKeyPath(&unk_100ED85A0);
  v119 = (uint64_t *)(v103 + *(int *)(v227 + 36));
  v120 = v235;
  v196((char *)v119 + *(int *)(v197 + 28), v101, v235);
  *v119 = v118;
  v121 = v231;
  v195(v103, v97, v231);
  ((void (*)(char *, uint64_t))v210)(v101, v120);
  v122 = ((uint64_t (*)(char *, uint64_t))v209)(v97, v121);
  LOBYTE(v121) = static Edge.Set.bottom.getter(v122);
  v123 = EdgeInsets.init(_all:)(*(double *)&qword_1011D18C0);
  v125 = v124;
  v127 = v126;
  v129 = v128;
  v130 = (uint64_t)v260;
  sub_10004A160(v103, (uint64_t)v260, &qword_1011D1A20);
  v131 = v130 + *(int *)(v214 + 36);
  *(_BYTE *)v131 = v121;
  *(double *)(v131 + 8) = v123;
  *(_QWORD *)(v131 + 16) = v125;
  *(_QWORD *)(v131 + 24) = v127;
  *(_QWORD *)(v131 + 32) = v129;
  *(_BYTE *)(v131 + 40) = 0;
  sub_10004FF60(v103, &qword_1011D1A20);
  v132 = sub_100065228(v130, (uint64_t)v258, &qword_1011D1A10);
  v133 = Divider.init()(v132);
  v134 = static VerticalAlignment.center.getter(v133);
  v135 = (uint64_t)v217;
  *v217 = v134;
  *(_QWORD *)(v135 + 8) = 0;
  *(_BYTE *)(v135 + 16) = 1;
  v136 = sub_100007E8C(&qword_1011D1A28);
  v137 = sub_100986558(v90, v135 + *(int *)(v136 + 44));
  if (qword_10119CB38 != -1)
    v137 = swift_once(&qword_10119CB38, sub_100986EE0);
  v138 = v200 & 1;
  LODWORD(v228) = v200 & 1;
  v139 = v201 & 1;
  LODWORD(v235) = v201 & 1;
  v140 = *(double *)&qword_1011D18B8;
  v141 = static Edge.Set.all.getter(v137);
  v142 = EdgeInsets.init(_all:)(v140);
  v144 = v143;
  v146 = v145;
  v148 = v147;
  v149 = v259;
  sub_10004A160(v135, v259, &qword_1011D1A00);
  v150 = v149 + *(int *)(v216 + 36);
  *(_BYTE *)v150 = v141;
  *(double *)(v150 + 8) = v142;
  *(_QWORD *)(v150 + 16) = v144;
  *(_QWORD *)(v150 + 24) = v146;
  *(_QWORD *)(v150 + 32) = v148;
  *(_BYTE *)(v150 + 40) = 0;
  sub_10004FF60(v135, &qword_1011D1A00);
  v151 = v247;
  sub_100065228(v149, v247, &qword_1011D1A08);
  v152 = v278;
  LODWORD(v229) = v278;
  v266[0] = *(_DWORD *)v277;
  *(_DWORD *)((char *)v266 + 3) = *(_DWORD *)&v277[3];
  v153 = v276;
  LODWORD(v230) = v276;
  v265[0] = *(_DWORD *)v275;
  *(_DWORD *)((char *)v265 + 3) = *(_DWORD *)&v275[3];
  v264[0] = *(_DWORD *)v274;
  *(_DWORD *)((char *)v264 + 3) = *(_DWORD *)&v274[3];
  v154 = v273;
  LODWORD(v231) = v273;
  v263 = v139;
  v262 = v138;
  v261 = 0;
  v155 = *(void (**)(char *, char *, uint64_t))(v237 + 16);
  v156 = v246;
  v155(v255, v252, v246);
  v227 = (uint64_t)v155;
  v157 = v257;
  sub_10004A160((uint64_t)v253, v257, &qword_1011D1A20);
  sub_10004A160((uint64_t)v258, (uint64_t)v260, &qword_1011D1A10);
  v155(v254, v251, v156);
  sub_10004A160(v151, v149, &qword_1011D1A08);
  *(_QWORD *)&v279 = v245;
  *((_QWORD *)&v279 + 1) = v244;
  *(_QWORD *)&v280 = v243;
  v159 = v224;
  v158 = v225;
  *((_QWORD *)&v280 + 1) = v225;
  *(_QWORD *)&v281 = v224;
  *((_QWORD *)&v281 + 1) = v256;
  v161 = v222;
  v160 = v223;
  *(_QWORD *)&v282 = v223;
  *((_QWORD *)&v282 + 1) = v222;
  *(_QWORD *)&v283 = v238;
  BYTE8(v283) = v152;
  *(_DWORD *)((char *)&v283 + 9) = v266[0];
  HIDWORD(v283) = *(_DWORD *)((char *)v266 + 3);
  *(_QWORD *)&v284 = v239;
  BYTE8(v284) = v153;
  HIDWORD(v284) = *(_DWORD *)((char *)v265 + 3);
  *(_DWORD *)((char *)&v284 + 9) = v265[0];
  *(_QWORD *)&v285 = v242;
  *((_QWORD *)&v285 + 1) = v241;
  LOBYTE(v286) = v240;
  DWORD1(v286) = *(_DWORD *)((char *)v264 + 3);
  *(_DWORD *)((char *)&v286 + 1) = v264[0];
  v163 = v220;
  v162 = v221;
  *((double *)&v286 + 1) = v221;
  *(_QWORD *)&v287[0] = v220;
  v165 = v218;
  v164 = v219;
  *((_QWORD *)&v287[0] + 1) = v219;
  *(_QWORD *)&v287[1] = v218;
  BYTE8(v287[1]) = v154;
  v166 = v280;
  v167 = v157;
  v168 = v226;
  *v226 = v279;
  v168[1] = v166;
  v169 = v281;
  v170 = v282;
  v171 = v284;
  v168[4] = v283;
  v168[5] = v171;
  v168[2] = v169;
  v168[3] = v170;
  v172 = v285;
  v173 = v286;
  v174 = v287[0];
  *(_OWORD *)((char *)v168 + 137) = *(_OWORD *)((char *)v287 + 9);
  v168[7] = v173;
  v168[8] = v174;
  v168[6] = v172;
  v175 = v263;
  v176 = v236;
  *((_QWORD *)v168 + 20) = v236;
  v177 = v176;
  *((_QWORD *)v168 + 21) = v249;
  *((_BYTE *)v168 + 176) = v175;
  *((_QWORD *)v168 + 23) = v250;
  v178 = v262;
  v179 = v232;
  *((_QWORD *)v168 + 24) = v233;
  v180 = v261;
  *((_QWORD *)v168 + 25) = v179;
  *((_BYTE *)v168 + 208) = v178;
  v181 = KeyPath;
  *((_QWORD *)v168 + 27) = v234;
  *((_QWORD *)v168 + 28) = v181;
  *((_BYTE *)v168 + 232) = 1;
  *((_BYTE *)v168 + 240) = v206;
  *(_QWORD *)&v172 = v204;
  *((double *)v168 + 31) = v205;
  *((_QWORD *)v168 + 32) = v172;
  *(_QWORD *)&v172 = v202;
  *((_QWORD *)v168 + 33) = v203;
  *((_QWORD *)v168 + 34) = v172;
  *((_BYTE *)v168 + 280) = v180;
  v182 = (int *)sub_100007E8C(&qword_1011D1A30);
  v183 = v246;
  v184 = (void (*)(char *, char *, uint64_t))v227;
  ((void (*)(char *, char *, uint64_t))v227)((char *)v168 + v182[20], v255, v246);
  sub_10004A160(v167, (uint64_t)v168 + v182[24], &qword_1011D1A20);
  sub_10004A160((uint64_t)v260, (uint64_t)v168 + v182[28], &qword_1011D1A10);
  v184((char *)v168 + v182[32], v254, v183);
  sub_10004A160(v259, (uint64_t)v168 + v182[36], &qword_1011D1A08);
  sub_100988384((uint64_t)&v279);
  v185 = v177;
  v186 = v249;
  sub_100055BBC(v177, v249, v175);
  swift_bridgeObjectRetain();
  v187 = v233;
  sub_100055BBC(v233, v179, v178);
  swift_bridgeObjectRetain();
  swift_retain();
  v188 = v243;
  swift_retain();
  swift_retain();
  sub_100055BBC(v185, v186, v235);
  swift_bridgeObjectRetain();
  v189 = v187;
  LOBYTE(v185) = (_BYTE)v228;
  sub_100055BBC(v187, v179, (char)v228);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004FF60(v247, &qword_1011D1A08);
  v190 = *(void (**)(char *, uint64_t))(v237 + 8);
  v190(v251, v183);
  sub_10004FF60((uint64_t)v258, &qword_1011D1A10);
  sub_10004FF60((uint64_t)v253, &qword_1011D1A20);
  v190(v252, v183);
  sub_100055BAC(v187, v179, v185);
  swift_release();
  swift_bridgeObjectRelease();
  v191 = v236;
  v192 = v249;
  sub_100055BAC(v236, v249, v235);
  v193 = v256;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004FF60(v259, &qword_1011D1A08);
  v190(v254, v183);
  sub_10004FF60((uint64_t)v260, &qword_1011D1A10);
  sub_10004FF60(v257, &qword_1011D1A20);
  v190(v255, v183);
  sub_100055BAC(v189, v232, v262);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v191, v192, v263);
  swift_bridgeObjectRelease();
  v288 = v245;
  v289 = v244;
  v290 = v188;
  v291 = v158;
  v292 = v159;
  v293 = v193;
  v294 = v160;
  v295 = v161;
  v296 = v238;
  v297 = v229;
  *(_DWORD *)v298 = v266[0];
  *(_DWORD *)&v298[3] = *(_DWORD *)((char *)v266 + 3);
  v299 = v239;
  v300 = v230;
  *(_DWORD *)v301 = v265[0];
  *(_DWORD *)&v301[3] = *(_DWORD *)((char *)v265 + 3);
  v302 = v242;
  v303 = v241;
  v304 = v240;
  *(_DWORD *)&v305[3] = *(_DWORD *)((char *)v264 + 3);
  *(_DWORD *)v305 = v264[0];
  v306 = v162;
  v307 = v163;
  v308 = v164;
  v309 = v165;
  v310 = v231;
  return sub_1009883B8((uint64_t)&v288);
}

double sub_100986024@<D0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  double result;

  v2 = (void *)objc_opt_self(NSBundle);
  v3 = Image.init(_:bundle:)(0x6575676F6C616964, 0xEC0000004F50462ELL, objc_msgSend(v2, "mainBundle"));
  if (qword_10119CB58 != -1)
    swift_once(&qword_10119CB58, sub_100986F20);
  v4 = *(double *)&qword_1011D18D8;
  v5 = Image.init(_:bundle:)(0xD000000000000010, 0x8000000100E49A30, objc_msgSend(v2, "mainBundle"));
  *(_QWORD *)a1 = v3;
  result = -v4;
  *(double *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v5;
  *(double *)(a1 + 32) = -v4;
  *(_QWORD *)(a1 + 40) = 0;
  return result;
}

void sub_100986118(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  if (qword_10119CB70 != -1)
    swift_once(&qword_10119CB70, sub_1009870F8);
  v40 = qword_1011D1900;
  v41 = *(_QWORD *)algn_1011D1908;
  v1 = sub_100055B68();
  swift_bridgeObjectRetain();
  v2 = Text.init<A>(_:)(&v40, &type metadata for String, v1);
  v4 = v3;
  v6 = v5;
  v8 = v7 & 1;
  v9 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
  v11 = *v9;
  v10 = v9[1];
  v40 = v11;
  v41 = v10;
  swift_bridgeObjectRetain();
  v12 = Text.init<A>(_:)(&v40, &type metadata for String, v1);
  v14 = v13;
  v16 = v15 & 1;
  v18 = static Text.+ infix(_:_:)(v2, v4, v8, v6, v12, v13, v16, v17);
  v37 = v19;
  v38 = v20;
  v22 = v21 & 1;
  v35 = v21 & 1;
  sub_100055BAC(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_100055BAC(v2, v4, v8);
  swift_bridgeObjectRelease();
  v23 = Image.init(systemName:)(0x70752E776F727261, 0xEE0074686769722ELL);
  v24 = Text.init(_:)(v23);
  v26 = v25;
  v28 = v27 & 1;
  v30 = static Text.+ infix(_:_:)(v18, v37, v22, v38, v24, v25, v28, v29);
  v32 = v31;
  LOBYTE(v8) = v33;
  v36 = v34;
  sub_100055BAC(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_100055BAC(v18, v37, v35);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v30;
  *(_QWORD *)(a1 + 8) = v32;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v36;
}

void sub_10098631C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  __int128 v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v14 = *(_OWORD *)(a1 + 16);
  LOBYTE(v15) = *(_BYTE *)(a1 + 32);
  v19 = 0;
  v8 = sub_100007E8C(&qword_1011A4B88);
  Binding.wrappedValue.setter(&v19, v8);
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication", v14, v15);
  v10 = swift_allocObject(a2, 88, 7);
  v11 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 80) = *(_QWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v12;
  v17 = a3;
  v18 = v10;
  *(_QWORD *)&v14 = _NSConcreteStackBlock;
  *((_QWORD *)&v14 + 1) = 1107296256;
  v15 = sub_1001DBD98;
  v16 = a4;
  v13 = _Block_copy(&v14);
  sub_1009882E4((_QWORD *)a1);
  objc_msgSend(v9, "_performBlockAfterCATransactionCommits:", v13, swift_release().n128_f64[0]);
  _Block_release(v13);

}

void sub_100986440(uint64_t a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  if (qword_10119CB78 != -1)
    swift_once(&qword_10119CB78, sub_1009871DC);
  v17[0] = qword_1011D1910;
  v17[1] = *(_QWORD *)algn_1011D1918;
  v2 = sub_100055B68();
  swift_bridgeObjectRetain();
  v3 = Text.init<A>(_:)(v17, &type metadata for String, v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  LODWORD(v17[0]) = static HierarchicalShapeStyle.secondary.getter(v3);
  v10 = Text.foregroundStyle<A>(_:)(v17, v3, v5, v9, v7, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_100055BAC(v3, v5, v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_BYTE *)(a1 + 16) = v14 & 1;
  *(_QWORD *)(a1 + 24) = v16;
}

uint64_t sub_100986558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  char *v51;
  __n128 v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  __n128 v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t, __n128);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  __n128 v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char v106[16];
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  unsigned __int8 v110;
  __int128 v111;

  v102 = a2;
  v3 = type metadata accessor for ButtonBorderShape(0);
  v100 = *(_QWORD *)(v3 - 8);
  v101 = v3;
  __chkstk_darwin(v3);
  v99 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for ControlSize(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for ButtonToggleStyle(0);
  v92 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100007E8C(&qword_1011D1A38);
  v88 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C(&qword_1011D1A40);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C(&qword_1011D1A48);
  __chkstk_darwin(v87);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_1011D1A50);
  __chkstk_darwin(v93);
  v91 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011D1A58);
  v104 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v105 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v103 = (char *)&v86 - v18;
  v111 = *(_OWORD *)a1;
  v108 = *(_OWORD *)a1;
  v90 = sub_100007E8C(&qword_1011C4DD0);
  State.projectedValue.getter(&v109, v90);
  v19 = v109;
  v20 = v110;
  v107 = a1;
  v21 = sub_100007E8C(&qword_1011D1A60);
  v22 = sub_1009883F4();
  v23 = v21;
  v24 = v15;
  v25 = Toggle.init(isOn:label:)(v19, *((_QWORD *)&v19 + 1), v20, sub_1009883EC, v106, v23, v22);
  ButtonToggleStyle.init()(v25);
  v26 = sub_100049F28(&qword_1011D1A70, &qword_1011D1A38, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v27 = sub_100048748(&qword_1011CE250, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
  v28 = v86;
  v29 = v89;
  View.toggleStyle<A>(_:)(v7, v86, v89, v26, v27);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v7, v29);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v9, v28);
  v30 = v97;
  v31 = v96;
  v32 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, enum case for ControlSize.mini(_:), v98);
  KeyPath = swift_getKeyPath(&unk_100ED85D0);
  v34 = (uint64_t *)&v13[*(int *)(v87 + 36)];
  v35 = sub_100007E8C(&qword_1011A0618);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v34 + *(int *)(v35 + 28), v31, v32);
  *v34 = KeyPath;
  v36 = v94;
  v37 = v95;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v13, v11, v95);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  v39 = v99;
  static ButtonBorderShape.circle.getter(v38);
  v40 = swift_getKeyPath(&unk_100ED85A0);
  v41 = v93;
  v42 = (uint64_t)v91;
  v43 = (uint64_t *)&v91[*(int *)(v93 + 36)];
  v44 = sub_100007E8C(&qword_1011A0610);
  v46 = v100;
  v45 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))((char *)v43 + *(int *)(v44 + 28), v39, v101);
  *v43 = v40;
  sub_10004A160((uint64_t)v13, v42, &qword_1011D1A48);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v45);
  sub_10004FF60((uint64_t)v13, &qword_1011D1A48);
  v109 = v111;
  State.wrappedValue.getter(&v108, v90);
  LOBYTE(v109) = v108;
  v47 = swift_allocObject(&unk_1010E5058, 88, 7);
  v48 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v47 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v47 + 64) = v48;
  *(_QWORD *)(v47 + 80) = *(_QWORD *)(a1 + 64);
  v49 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v47 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v47 + 32) = v49;
  sub_1009882E4((_QWORD *)a1);
  v50 = sub_10098848C();
  v51 = v105;
  View.onChange<A>(of:initial:_:)(&v109, 0, sub_100988484, v47, v41, &type metadata for Bool, v50, &protocol witness table for Bool, v52);
  swift_release();
  sub_10004FF60(v42, &qword_1011D1A50);
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v51, v24);
  if (qword_10119CB80 != -1)
    swift_once(&qword_10119CB80, sub_1009872C0);
  v109 = xmmword_1011D1920;
  v53 = sub_100055B68();
  swift_bridgeObjectRetain();
  v54 = Text.init<A>(_:)(&v109, &type metadata for String, v53);
  v56 = v55;
  v58 = v57;
  v60 = v59 & 1;
  v61 = static Font.subheadline.getter(v54);
  v62 = Text.font(_:)(v61, v54, v56, v60, v58);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  swift_release();
  sub_100055BAC(v54, v56, v60);
  swift_bridgeObjectRelease();
  LODWORD(v109) = static HierarchicalShapeStyle.secondary.getter(v69);
  v70 = Text.foregroundStyle<A>(_:)(&v109, v62, v64, v66 & 1, v68, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v72 = v71;
  v74 = v73;
  LOBYTE(v60) = v75 & 1;
  sub_100055BAC(v62, v64, v66 & 1);
  v76 = swift_bridgeObjectRelease();
  v78 = v104;
  v77 = v105;
  v79 = *(void (**)(char *, char *, uint64_t, __n128))(v104 + 16);
  v80 = v103;
  v79(v105, v103, v24, v76);
  v81 = v102;
  ((void (*)(uint64_t, char *, uint64_t))v79)(v102, v77, v24);
  v82 = v81 + *(int *)(sub_100007E8C(&qword_1011D1A88) + 48);
  *(_QWORD *)v82 = v70;
  *(_QWORD *)(v82 + 8) = v72;
  *(_BYTE *)(v82 + 16) = v60;
  *(_QWORD *)(v82 + 24) = v74;
  sub_100055BBC(v70, v72, v60);
  v83 = *(void (**)(char *, uint64_t))(v78 + 8);
  swift_bridgeObjectRetain();
  v83(v80, v24);
  sub_100055BAC(v70, v72, v60);
  v84 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t, __n128))v83)(v77, v24, v84);
}

_QWORD *sub_100986CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *result;
  char v7;
  uint64_t v8;

  v2 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
  v3 = sub_100007E8C(&qword_1011C4DD0);
  State.wrappedValue.getter(&v8, v3);
  if ((_BYTE)v8)
    v4 = 1.0;
  else
    v4 = 0.0;
  v5 = static Animation.spring(response:dampingFraction:blendDuration:)(0.15, 0.85, 0.25);
  result = State.wrappedValue.getter(&v8, v3);
  v7 = v8;
  *(_QWORD *)a1 = v2;
  *(double *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v7;
  return result;
}

void sub_100986DC4(__int128 *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  __int128 v6;
  uint64_t v7;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v6 = *a1;
  v3 = sub_100007E8C(&qword_1011C4DD0);
  State.wrappedValue.getter(&v7, v3);
  v4 = v7;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setBool:forKey:", v4, v5, v6);

}

uint64_t sub_100986E78@<X0>(uint64_t a1@<X8>)
{
  return sub_100984D04(a1);
}

void sub_100986EBC()
{
  qword_1011D18A8 = 0x4034000000000000;
}

void sub_100986ECC()
{
  qword_1011D18B0 = 0x4071D00000000000;
}

void sub_100986EE0()
{
  qword_1011D18B8 = 0x4030000000000000;
}

void sub_100986EF0()
{
  qword_1011D18C0 = 0x4010000000000000;
}

void sub_100986F00()
{
  qword_1011D18C8 = 0x405E000000000000;
}

void sub_100986F10()
{
  qword_1011D18D0 = 0x404A000000000000;
}

void sub_100986F20()
{
  qword_1011D18D8 = 0x4036000000000000;
}

uint64_t sub_100986F30()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E499F0);
  static Locale.current.getter(v6);
  result = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Header title message for sheet", 30, 2);
  qword_1011D18E0 = result;
  *(_QWORD *)algn_1011D18E8 = v8;
  return result;
}

uint64_t sub_100987014()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x8000000100E49970);
  static Locale.current.getter(v6);
  result = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Header title description for sheet", 34, 2);
  qword_1011D18F0 = result;
  *(_QWORD *)algn_1011D18F8 = v8;
  return result;
}

uint64_t sub_1009870F8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E49920);
  static Locale.current.getter(v6);
  result = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Button to view immersive content", 32, 2);
  qword_1011D1900 = result;
  *(_QWORD *)algn_1011D1908 = v8;
  return result;
}

uint64_t sub_1009871DC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100E498D0);
  static Locale.current.getter(v6);
  result = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Button to view trailer in Music", 31, 2);
  qword_1011D1910 = result;
  *(_QWORD *)algn_1011D1918 = v8;
  return result;
}

uint64_t sub_1009872C0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100E49880);
  static Locale.current.getter(v6);
  result = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Checkbox to show message every time", 35, 2);
  qword_1011D1920 = result;
  *(_QWORD *)algn_1011D1928 = v8;
  return result;
}

uint64_t sub_1009873A4()
{
  id v0;
  NSString v1;
  id v2;
  unsigned __int8 v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100065228((uint64_t)v5, (uint64_t)v6, &qword_10119DCC0);
  if (v7)
  {
    if ((swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      return v4;
  }
  else
  {
    sub_10004FF60((uint64_t)v6, &qword_10119DCC0);
  }
  return 1;
}

uint64_t sub_1009874BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v10 = (int *)type metadata accessor for ImmersivePresentationView(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v27 - v14);
  if ((sub_1009873A4() & 1) == 0)
    return OpenURLAction.callAsFunction(_:)(a3);
  v16 = (char *)v15 + v10[5];
  v17 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a2, v17);
  v18 = (char *)v15 + v10[6];
  v19 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a3, v19);
  swift_retain(a1);
  swift_retain(a5);
  v20 = sub_100007E8C(&qword_10119F4E8);
  v21 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v15 = ObservedObject.init(wrappedValue:)(a1, v20, v21);
  v15[1] = v22;
  v23 = (_QWORD *)((char *)v15 + v10[7]);
  *v23 = a4;
  v23[1] = a5;
  sub_1009876C0((uint64_t)v15, (uint64_t)v13);
  v24 = sub_100048748(&qword_1011D1930, type metadata accessor for ImmersivePresentationView, (uint64_t)&unk_100ED8488);
  v25 = AnyView.init<A>(_:)(v13, v10, v24);
  v28 = v25;
  PresentedViewState.present(_:animated:)(&v28, 1);
  swift_release(v25);
  return sub_100987704((uint64_t)v15);
}

uint64_t type metadata accessor for ImmersivePresentationView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D1990;
  if (!qword_1011D1990)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ImmersivePresentationView);
  return result;
}

uint64_t sub_1009876C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImmersivePresentationView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100987704(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImmersivePresentationView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100987740(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for OpenURLAction(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v7);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
  }
  swift_retain(v20);
  return v4;
}

uint64_t sub_10098782C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

_QWORD *sub_1009878B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for OpenURLAction(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain(v19);
  return a1;
}

_QWORD *sub_100987974(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  v20 = v17[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20);
  return a1;
}

_OWORD *sub_100987A48(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_100987AEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = *(_QWORD *)((char *)a1 + v16 + 8);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_100987BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100987BB0);
}

uint64_t sub_100987BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for OpenURLAction(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100987C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100987C5C);
}

uint64_t sub_100987C5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for OpenURLAction(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100987CF8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = &unk_100ED8470;
  result = type metadata accessor for OpenURLAction(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100987D94(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FB2634, 1);
}

uint64_t sub_100987DA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100987DD0(unsigned __int8 *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

uint64_t sub_100987DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ImmersivePresentationView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  swift_release();
  v6 = v5 + *(int *)(v1 + 20);
  v7 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + *(int *)(v1 + 24);
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100987EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImmersivePresentationView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100987EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ImmersivePresentationView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return OpenURLAction.callAsFunction(_:)(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24));
}

unint64_t sub_100987F3C()
{
  unint64_t result;

  result = qword_1011D19D8;
  if (!qword_1011D19D8)
  {
    result = swift_getWitnessTable(&unk_100ED851C, &type metadata for ImmersivePresentationView.IMDecisionSheet);
    atomic_store(result, (unint64_t *)&qword_1011D19D8);
  }
  return result;
}

uint64_t destroy for ImmersivePresentationView.IMDecisionSheet(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[6]);
  return swift_release(a1[8]);
}

uint64_t initializeWithCopy for ImmersivePresentationView.IMDecisionSheet(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v6;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v8);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for ImmersivePresentationView.IMDecisionSheet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  swift_retain(v10);
  swift_release(v11);
  v13 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain(v12);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for ImmersivePresentationView.IMDecisionSheet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImmersivePresentationView.IMDecisionSheet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImmersivePresentationView.IMDecisionSheet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImmersivePresentationView.IMDecisionSheet()
{
  return &type metadata for ImmersivePresentationView.IMDecisionSheet;
}

uint64_t sub_10098822C()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  ValueMetadata *v3;
  unint64_t v4;

  v0 = sub_100044B54(&qword_1011D19D0);
  v3 = &type metadata for ImmersivePresentationView.IMDecisionSheet;
  v4 = sub_100987F3C();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.interactiveDismissDisabled(_:)>>, 1);
  v3 = (ValueMetadata *)v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.presentationBackgroundInteraction(_:)>>, 1);
}

uint64_t sub_100988298(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FB265C, 1);
}

void sub_1009882B4()
{
  uint64_t v0;

  sub_10098631C(v0 + 16, (uint64_t)&unk_1010E50D0, (uint64_t)Lyrics.TextLine.text.getter, (uint64_t)&unk_1010E50E8);
}

_QWORD *sub_1009882E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[8];
  swift_retain(a1[2]);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v2);
  return a1;
}

void sub_100988354()
{
  uint64_t v0;

  sub_10098631C(v0 + 16, (uint64_t)&unk_1010E5080, (uint64_t)Lyrics.TextLine.words.getter, (uint64_t)&unk_1010E5098);
}

uint64_t sub_100988384(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  swift_retain(*(_QWORD *)(a1 + 16));
  swift_retain(v2);
  return a1;
}

uint64_t sub_1009883B8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(v2);
  return a1;
}

_QWORD *sub_1009883EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100986CDC(a1);
}

unint64_t sub_1009883F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D1A68;
  if (!qword_1011D1A68)
  {
    v1 = sub_100044B54(&qword_1011D1A60);
    sub_100408AA0();
    sub_100049F28((unint64_t *)&qword_1011AFA88, &qword_1011AFA90, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1A68);
  }
  return result;
}

void sub_100988484()
{
  uint64_t v0;

  sub_100986DC4((__int128 *)(v0 + 16));
}

unint64_t sub_10098848C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D1A78;
  if (!qword_1011D1A78)
  {
    v1 = sub_100044B54(&qword_1011D1A50);
    sub_100988510();
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1A78);
  }
  return result;
}

unint64_t sub_100988510()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011D1A80;
  if (!qword_1011D1A80)
  {
    v1 = sub_100044B54(&qword_1011D1A48);
    v2[0] = sub_100044B54(&qword_1011D1A38);
    v2[1] = type metadata accessor for ButtonToggleStyle(255);
    v2[2] = sub_100049F28(&qword_1011D1A70, &qword_1011D1A38, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    v2[3] = sub_100048748(&qword_1011CE250, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1A80);
  }
  return result;
}

uint64_t Lyrics.TextLine.words.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_10098863C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10098864C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100988658()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t Lyrics.TextLine.text.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 56))();
}

unint64_t sub_1009886C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D1A90;
  if (!qword_1011D1A90)
  {
    v1 = sub_100044B54(&qword_1011D19F8);
    sub_10098872C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1A90);
  }
  return result;
}

unint64_t sub_10098872C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D1A98;
  if (!qword_1011D1A98)
  {
    v1 = sub_100044B54(&qword_1011D19E8);
    sub_100049F28(&qword_1011D1AA0, &qword_1011D19E0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D1A98);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC5MusicP33_4C1DA7DDE9EF7D4E498DE106B7EBC58A19ResourceBundleClass);
}

uint64_t sub_1009887D8()
{
  uint64_t result;

  result = sub_1009887F4();
  qword_10124DE50 = result;
  return result;
}

uint64_t sub_1009887F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  char *v45;
  id v46;
  NSURL *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v61 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v54 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v54 - v12;
  v14 = __chkstk_darwin(v11);
  v58 = (void (*)(uint64_t, char *, uint64_t))((char *)&v54 - v15);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - v16;
  v56 = sub_100B23470((uint64_t)_swiftEmptyArrayStorage);
  v18 = sub_100007E8C(&qword_1011D2AE8);
  v19 = *(_QWORD *)(v4 + 72);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 32) & ~v20;
  v62 = v19;
  v22 = swift_allocObject(v18, v21 + 3 * v19, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EA7AC0;
  v57 = v21;
  v55 = v22;
  v23 = v22 + v21;
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = objc_msgSend(v24, "mainBundle");
  v26 = objc_msgSend(v25, "resourceURL");

  v60 = v1;
  if (v26)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 0, 1, v0);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 1, 1, v0);
  }
  sub_10098B02C((uint64_t)v17, v23);
  type metadata accessor for BundleFinder();
  v28 = objc_msgSend(v24, "bundleForClass:", swift_getObjCClassFromMetadata());
  v29 = objc_msgSend(v28, "resourceURL");

  if (v29)
  {
    v30 = (uint64_t)v58;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v31 = 0;
  }
  else
  {
    v31 = 1;
    v30 = (uint64_t)v58;
  }
  v27((char *)v30, v31, 1, v0);
  v32 = v62;
  sub_10098B02C(v30, v23 + v62);
  v33 = v23 + 2 * v32;
  v34 = objc_msgSend(v24, "mainBundle");
  v35 = objc_msgSend(v34, "bundleURL");

  v36 = v61;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

  v37 = v60;
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v60 + 32);
  v58(v33, v36, v0);
  v27((char *)v33, 0, 1, v0);
  v63 = v56;
  sub_100A05168(v55);
  v38 = v63;
  v39 = v63[2];
  if (v39)
  {
    v40 = (uint64_t)v63 + v57;
    v56 = v63;
    v57 = 0x8000000100E4A900;
    v59 = v13;
    do
    {
      sub_10098B074(v40, (uint64_t)v10);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      if (v41(v10, 1, v0) == 1)
      {
        sub_10098B0BC((uint64_t)v10);
        v42 = 1;
      }
      else
      {
        URL.appendingPathComponent(_:)(0xD000000000000020, v57);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v0);
        v42 = 0;
      }
      v27(v13, v42, 1, v0);
      sub_10098B074((uint64_t)v13, (uint64_t)v7);
      if (v41(v7, 1, v0) == 1)
      {
        sub_10098B0BC((uint64_t)v13);
      }
      else
      {
        v43 = v10;
        v44 = v27;
        v45 = v61;
        v58((uint64_t)v61, v7, v0);
        v46 = objc_allocWithZone((Class)NSBundle);
        URL._bridgeToObjectiveC()(v47);
        v49 = v48;
        v50 = v46;
        v37 = v60;
        v51 = objc_msgSend(v50, "initWithURL:", v49);

        v52 = v45;
        v27 = v44;
        v10 = v43;
        v13 = v59;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v0);
        sub_10098B0BC((uint64_t)v13);
        if (v51)
        {
          swift_bridgeObjectRelease(v56);
          return (uint64_t)v51;
        }
      }
      v40 += v62;
      --v39;
    }
    while (v39);
    v38 = v56;
  }
  swift_bridgeObjectRelease(v38);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000035, 0x8000000100E4A8C0, "MusicCore/resource_bundle_accessor.swift", 40, 2, 44, 0);
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Actions.SortPlaylist.Context.playlistVariant@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Variant, a1);
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.actionContext()
{
  return 0;
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.page@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0(type metadata accessor for MetricsEvent.Page, a1);
}

uint64_t variable initialization expression of Notice.thumbnail@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0(type metadata accessor for Notice.Thumbnail, a1);
}

double variable initialization expression of AnyAction.displayConfiguration@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_100EA85A0;
  a1[1] = 0u;
  a1[2] = 0u;
  return result;
}

uint64_t variable initialization expression of ArtworkVideoReportingController.signpostsForIndex(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v5;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a1, &type metadata for ComponentRenderEventSignposts, 0, 0);
  v5 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v5, a1, &type metadata for ComponentRenderEventSignposts, a2);
}

uint64_t variable initialization expression of MetricsEvent.ComponentRender.componentType()
{
  return 24;
}

uint64_t static ActionDisplayConfiguration.Attributes.hidden.getter()
{
  return 4;
}

uint64_t variable initialization expression of MetricsReportingController.componentRenderEventSampler()
{
  return sub_100988DC4(&qword_1011D25B8);
}

uint64_t variable initialization expression of MetricsReportingController.pageRenderEventSampler()
{
  return sub_100988DC4((uint64_t *)&unk_1011D25C0);
}

uint64_t sub_100988DC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_100007E8C(a1);
  v2 = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(v2 + 16) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  return v2;
}

id variable initialization expression of MetricsReportingController.carFocusedMetricsController()
{
  return objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
}

uint64_t variable initialization expression of MetricsReportingController.carMetricsReporter()
{
  uint64_t v0;

  v0 = type metadata accessor for CarNowPlayingMetrics.Reporter();
  return swift_allocObject(v0, 16, 7);
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.Metadata.URL@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for URL, a1);
}

uint64_t variable initialization expression of MetricsEvent.PageRender.request@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

id variable initialization expression of ApplicationCapabilities.hasNetworkConnectivity()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double variable initialization expression of ApplicationCapabilities.ratingWarning@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0x7FFFFFFFFFFFFFFFLL;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

id variable initialization expression of ApplicationCapabilities.subscriptionStatus()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v1 = objc_msgSend(v0, "musicSubscriptionStatus");

  return v1;
}

char *variable initialization expression of ApplicationCapabilities.tabs()
{
  return sub_100A32A24((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ApplicationCapabilities.Controller.storeBag()
{
  uint64_t v1;

  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  return v1;
}

id variable initialization expression of BackgroundRefreshController.cloudClient()
{
  return objc_msgSend(objc_allocWithZone((Class)ICCloudClient), "init");
}

uint64_t variable initialization expression of GroupActivitiesManager.signpostInitiationToFirstAudioFrame@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0(type metadata accessor for Signpost, a1);
}

uint64_t variable initialization expression of BagProvider.durableObservers()
{
  uint64_t v0;

  v0 = type metadata accessor for BagProvider.Observer();
  return WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v0);
}

uint64_t variable initialization expression of BagProvider.logger()
{
  if (qword_1011D1D40 != -1)
    swift_once(&qword_1011D1D40, sub_100A68C6C);
  return Logger.init(_:)((id)static OS_os_log.musicBag);
}

id variable initialization expression of BagProvider.retry()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()), "init");
}

unint64_t variable initialization expression of Collaboration.ArtworkCachingReference.identifier()
{
  return 0xD000000000000027;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._hasDisregardedBanner()
{
  id v0;
  unint64_t v1;
  _QWORD v3[2];
  char v4;
  uint64_t v5;

  v4 = 2;
  v3[0] = 0xD000000000000014;
  v3[1] = 0x8000000100E4A7C0;
  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_10098A8C0();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v4, (uint64_t)v0, (uint64_t)v3, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Bool, v1, (char *)&v5);
  return v5;
}

double variable initialization expression of CloudLibrary.StatusObserver.capabilitiesController()
{
  double result;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._status()
{
  return 0x80000000;
}

uint64_t variable initialization expression of MusicLibrary.ActionableStateController.currentState()
{
  return 0;
}

void variable initialization expression of MusicLibrary.ActionableStateController.itemStateSubscriptions()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_100A4CAA8((uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t variable initialization expression of Library.Context.musicLibrary()
{
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.shared.getter();
}

uint64_t variable initialization expression of Library.Context.album@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t variable initialization expression of Library.Context.artist@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t variable initialization expression of Library.Context.composer@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Composer, a1);
}

uint64_t variable initialization expression of Library.Context.genre@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Genre, a1);
}

uint64_t variable initialization expression of Library.Context.playlist@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t variable initialization expression of Library.Context.tvShow@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t variable initialization expression of Library.Context.tvSeason@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t static MPIdentifierSet.Purpose.Options.all.getter()
{
  return 3;
}

id variable initialization expression of Library.Menu.Request.librarySource()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

unint64_t variable initialization expression of PushNotificationObserver.registeredHandlers()
{
  return sub_100A13B64((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of PushNotificationObserver.connection()
{
  return 0;
}

double variable initialization expression of SharePlayTogetherSession._qrCode@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id variable initialization expression of Player._path()
{
  id v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;
  void *v5;

  v0 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v1 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_1011D1E28 != -1)
    swift_once(&qword_1011D1E28, sub_100AC87B8);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "systemMusicPathWithRoute:playerID:", v0, v2);

  if (objc_msgSend(v0, "isDeviceRoute"))
    v4 = v3;
  else
    v4 = objc_msgSend(v1, "pathWithRoute:bundleID:playerID:", v0, 0, 0);
  v5 = v4;

  return v3;
}

uint64_t variable initialization expression of Player.nowPlayingConfiguration()
{
  uint64_t v0;
  id v1;

  if (qword_1011D1E58 != -1)
    swift_once(&qword_1011D1E58, sub_100AF5398);
  v0 = qword_1011D8CE0;
  v1 = (id)qword_1011D8CE0;
  return v0;
}

unint64_t variable initialization expression of Player.failingPlayerPathTimers()
{
  return sub_100A13D14((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t _s9MusicCore6PlayerC4lock33_031AD420BBF8BBF113A2662767DAC2BBLL0A9Utilities10UnfairLockCvpfi_0()
{
  uint64_t v0;

  v0 = type metadata accessor for UnfairLock();
  swift_allocObject(v0, 24, 7);
  return UnfairLock.init()();
}

id sub_1009894C0()
{
  if (qword_1011D1E58 != -1)
    swift_once(&qword_1011D1E58, sub_100AF5398);
  return (id)qword_1011D8CE0;
}

void *variable initialization expression of Player.NowPlayingConfiguration.tracklistRanges()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of Player.NowPlayingConfiguration.BadCountedSet.dictionary(uint64_t a1, uint64_t a2)
{
  return Dictionary.init()(a1, &type metadata for Int, a2);
}

uint64_t variable initialization expression of MusicItemState._playabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of MusicItemState._previewCapabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:);
  v5 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t variable initialization expression of SequentialVocalCommandsFilter.queuedCommand()
{
  return 0x1000000000000;
}

id variable initialization expression of PlaylistCovers.ArtworkDataSource.cache()
{
  return objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
}

double variable initialization expression of PresentationSource.position@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 40) = -1;
  return result;
}

uint64_t ActionMenuItemConfiguring.menuItemImage.getter()
{
  return 0;
}

uint64_t variable initialization expression of LibraryModelRequest.itemRange()
{
  return 0;
}

uint64_t variable initialization expression of RequestResponse.Controller.enqueuedRevisionCompletions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t FunctionTypeMetadata2;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  return static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
}

uint64_t variable initialization expression of RequestResponse.Controller.revisionIDCompletionsMap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  v9 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v9, 0, 0);
  v11 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v11, &type metadata for Int, v9, &protocol witness table for Int);
}

uint64_t variable initialization expression of SharePlayTogetherSession._host@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0(type metadata accessor for SharePlayTogetherSession.Participant, a1);
}

unint64_t variable initialization expression of SharePlayTogetherSession.participantProfileMap()
{
  return sub_100A13E1C((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SharePlayTogetherSession.Participant.socialProfile@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for SocialProfile, a1);
}

double variable initialization expression of GroupActivitiesManager.Activity.Metadata.artworkSize()
{
  return 300.0;
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.customMetadata@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0(type metadata accessor for GroupActivitiesManager.Activity.Metadata, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.pendingNoticeAlert()
{
  return 0;
}

double variable initialization expression of GroupActivitiesManager._reaction@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t variable initialization expression of GroupActivitiesManager.artworkCachingReference()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4A7E0;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v3, v1);

  return v1;
}

uint64_t variable initialization expression of GroupActivitiesManager.sessionStateObserver()
{
  type metadata accessor for GroupStateObserver(0);
  return GroupStateObserver.__allocating_init()();
}

uint64_t variable initialization expression of GroupActivitiesManager.activity@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0(type metadata accessor for GroupActivitiesManager.Activity, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.autoBugCaptureIntervalBeginDate@<X0>(uint64_t a1@<X8>)
{
  return sub_1009898C0((uint64_t (*)(_QWORD))&type metadata accessor for Date, a1);
}

uint64_t sub_1009898C0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t variable initialization expression of GroupActivitiesManager.eligibilityContext()
{
  return 0;
}

id variable initialization expression of EnvironmentMonitorObserver.environmentMonitor()
{
  return objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
}

uint64_t variable initialization expression of ExplicitRestrictionsController.symbol()
{
  uint64_t v0;

  if (qword_1011D2510 != -1)
    swift_once(&qword_1011D2510, sub_100B66A48);
  v0 = static ExplicitRestrictionsController.symbols;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t variable initialization expression of LaunchURL.Resolver.logger()
{
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0xD000000000000012, 0x8000000100E4A800);
}

uint64_t sub_1009899D0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id UIView.Shadow.color.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_1009899E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2D00, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9E9C);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100989A20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2D00, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9E9C);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100989A60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100989AA0(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EDA8BC, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_100989ADC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EDA8BC, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_100989B24(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  WitnessTable = swift_getWitnessTable(&unk_100EDA8BC, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_100989B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100EDA8BC, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_100989BC8()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerEnqueueErrorDomain);
}

uint64_t sub_100989BD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100989C18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100989C58(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_100989CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_100989D10()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerRequestErrorDomain);
}

uint64_t sub_100989D20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100989D60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100989DA0(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_100989E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_100989E54()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
}

uint64_t sub_100989E64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100989EA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100989EE4(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_100989F48()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_100989F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_100989FCC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCMusicBehaviorErrorDomain);
}

uint64_t sub_100989FDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10098A01C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10098A05C(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10098A0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10098A110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_10098A16C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&qword_1011D88B0, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100EDA9F8);
  v3 = sub_100048748(&qword_1011D2D30, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100EDA2E0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10098A1F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_1011D2D58, (uint64_t (*)(uint64_t))_s3__C4NameVMa_1, (uint64_t)&unk_100ED9D24);
  v3 = sub_100048748(&qword_1011D2D60, (uint64_t (*)(uint64_t))_s3__C4NameVMa_1, (uint64_t)&unk_100ED9CC4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10098A274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_1011D2A70, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100ED9288);
  v3 = sub_100048748(&qword_1011D2A78, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100ED9230);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10098A2F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_1011D2A60, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100ED96CC);
  v3 = sub_100048748(&qword_1011D2A68, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100ED9674);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10098A37C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2CD8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9FC8);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10098A3BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2CD8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9FC8);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10098A3FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10098A43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10098A494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10098A4EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA474);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10098A52C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA474);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10098A56C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10098A5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10098A604(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C28, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA6F0);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10098A644(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C28, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA6F0);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10098A684(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10098A6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10098A71C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748((unint64_t *)&qword_1011D2D48, (uint64_t (*)(uint64_t))_s3__C13AttributeNameVMa_0, (uint64_t)&unk_100EDAA3C);
  v3 = sub_100048748(&qword_1011D2D50, (uint64_t (*)(uint64_t))_s3__C13AttributeNameVMa_0, (uint64_t)&unk_100EDA074);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10098A7A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_1011D2D38, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100EDA1E8);
  v3 = sub_100048748(&qword_1011D2D40, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100EDA188);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10098A824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100048748(&qword_1011D2A50, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100ED9844);
  v3 = sub_100048748(&qword_1011D2A58, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100ED97EC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

_BYTE *sub_10098A8A8@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *v1;

  return sub_100A3CC54(v1, a1);
}

unint64_t sub_10098A8C0()
{
  unint64_t result;

  result = qword_1011D2630;
  if (!qword_1011D2630)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1011D2630);
  }
  return result;
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC9MusicCoreP33_77107B98A7172A040C127BED6BB4A6AC12BundleFinder);
}

{
  return objc_opt_self(_TtC11MusicCoreUIP33_78477A7C4507C6B926161B408121F9AD12BundleFinder);
}

void type metadata accessor for ErrorCorrectionLevel(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28B0, (uint64_t)&unk_1010E7E20);
}

__n128 initializeWithTake for MetricsEvent.Click.ActionContext(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void _s3__C6CGSizeVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28B8, (uint64_t)&unk_1010E7E98);
}

void _s3__C7CGImageCMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28C0, (uint64_t)&unk_1010E7EC0);
}

void type metadata accessor for MSVAutoBugCaptureDomain(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28C8, (uint64_t)&unk_1010E7EF0);
}

void _s3__C23MRGroupSessionRouteTypeOMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28D0, (uint64_t)&unk_1010E7F18);
}

uint64_t sub_10098A99C(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_10098A9E0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28D8, (uint64_t)&unk_1010E7F90);
}

void _s3__C18MPCPlayerDirectionOMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28E0, (uint64_t)&unk_1010E7FB8);
}

void type metadata accessor for ICPrivacyIdentifier(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28E8, (uint64_t)&unk_1010E7FD8);
}

void _s3__C24UIUserInterfaceSizeClassOMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28F0, (uint64_t)&unk_1010E8000);
}

void type metadata accessor for ICMusicSubscriptionStatusType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D28F8, (uint64_t)&unk_1010E8020);
}

void type metadata accessor for ICMusicSubscriptionStatusCapabilities(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2900, (uint64_t)&unk_1010E8040);
}

void type metadata accessor for FeedbackType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2908, (uint64_t)&unk_1010E8068);
}

void type metadata accessor for MPCPlayerRequestTracklistRange(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2910, (uint64_t)&unk_1010E80E0);
}

void type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2918, (uint64_t)&unk_1010E8108);
}

void _s3__C30MPNowPlayingAudioFormatBadgingOMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2920, (uint64_t)&unk_1010E8128);
}

void type metadata accessor for ICEnvironmentNetworkType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2928, (uint64_t)&unk_1010E8148);
}

void type metadata accessor for ICURLBagKey(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2930, (uint64_t)&unk_1010E8168);
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2938, (uint64_t)&unk_1010E8190);
}

void type metadata accessor for MPCPlayerTracklistReplaceIntent(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2940, (uint64_t)&unk_1010E81B8);
}

void type metadata accessor for MPCPlaybackIntentOptions(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2948, (uint64_t)&unk_1010E81D8);
}

void type metadata accessor for MPCPlaybackIntentRepeatMode(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2950, (uint64_t)&unk_1010E8200);
}

void type metadata accessor for MPCPlaybackIntentShuffleMode(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2958, (uint64_t)&unk_1010E8220);
}

void type metadata accessor for MPCExplicitContentAuthorizationReason(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2960, (uint64_t)&unk_1010E8240);
}

__n128 _s14descr1010FB5B1V12RecipeColorsVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void _s3__C6CGRectVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2968, (uint64_t)&unk_1010E82B8);
}

void type metadata accessor for MPMediaLibraryFilteringOptions(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2970, (uint64_t)&unk_1010E82E0);
}

void type metadata accessor for MPModelStoreBrowseContentItemType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2978, (uint64_t)&unk_1010E8308);
}

void _s3__C23UIPopoverArrowDirectionVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2980, (uint64_t)&unk_1010E8328);
}

uint64_t sub_10098ABE0()
{
  return sub_100048748(&qword_1011D2988, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100ED8C68);
}

uint64_t sub_10098AC0C()
{
  return sub_100048748(&qword_1011D2990, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100ED8C38);
}

uint64_t sub_10098AC38()
{
  return sub_100048748(&qword_1011D2998, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100ED8C90);
}

uint64_t sub_10098AC64()
{
  return sub_100048748(&qword_1011D29A0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100ED8CC8);
}

uint64_t sub_10098AC90()
{
  return sub_100048748(&qword_1011D29A8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100ED8E80);
}

uint64_t sub_10098ACBC()
{
  return sub_100048748(&qword_1011D29B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100ED8E4C);
}

uint64_t sub_10098ACE8()
{
  return sub_100048748(&qword_1011D29B8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100ED8EAC);
}

uint64_t sub_10098AD14()
{
  return sub_100048748(&qword_1011D29C0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100ED8EE8);
}

uint64_t sub_10098AD40()
{
  return sub_100048748(&qword_1011D29C8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100ED9060);
}

uint64_t sub_10098AD6C()
{
  return sub_100048748(&qword_1011D29D0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100ED902C);
}

uint64_t sub_10098AD98()
{
  return sub_100048748(&qword_1011D29D8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100ED908C);
}

uint64_t sub_10098ADC4()
{
  return sub_100048748(&qword_1011D29E0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100ED90C8);
}

uint64_t sub_10098ADF0()
{
  return sub_100048748(&qword_1011D29E8, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100ED91F8);
}

uint64_t sub_10098AE1C()
{
  return sub_100048748(&qword_1011D29F0, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100ED91D0);
}

uint64_t sub_10098AE48()
{
  return sub_100048748(&qword_1011D29F8, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100ED9260);
}

uint64_t sub_10098AE74()
{
  return sub_100048748(&qword_1011D2A00, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100ED93EC);
}

uint64_t sub_10098AEA0()
{
  return sub_100048748(&qword_1011D2A08, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100ED93BC);
}

uint64_t sub_10098AECC()
{
  return sub_100048748(&qword_1011D2A10, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100ED9414);
}

uint64_t sub_10098AEF8()
{
  return sub_100048748(&qword_1011D2A18, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100ED944C);
}

uint64_t sub_10098AF24()
{
  return sub_100048748(&qword_1011D2A20, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100ED963C);
}

uint64_t sub_10098AF50()
{
  return sub_100048748(&qword_1011D2A28, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100ED9614);
}

uint64_t sub_10098AF7C()
{
  return sub_100048748(&qword_1011D2A30, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100ED96A4);
}

uint64_t sub_10098AFA8()
{
  return sub_100048748(&qword_1011D2A38, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100ED97B4);
}

uint64_t sub_10098AFD4()
{
  return sub_100048748(&qword_1011D2A40, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100ED978C);
}

uint64_t sub_10098B000()
{
  return sub_100048748(&qword_1011D2A48, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100ED981C);
}

uint64_t sub_10098B02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D2AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10098B074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D2AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10098B0BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011D2AE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s3__C16os_unfair_lock_sVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2AF0, (uint64_t)&unk_1010E8350);
}

void type metadata accessor for MPCMusicBehaviorError(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2AF8, (uint64_t)&unk_1010E8378);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B00, (uint64_t)&unk_1010E83A0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B08, (uint64_t)&unk_1010E83C0);
}

void _s3__C8CFStringCMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B10, (uint64_t)&unk_1010E83E0);
}

void type metadata accessor for MPModelCuratorKind(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B18, (uint64_t)&unk_1010E8410);
}

void type metadata accessor for MPCSharedListeningSessionEventKind(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B20, (uint64_t)&unk_1010E8430);
}

void type metadata accessor for MPCSharedListeningPlaybackEventKind(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B28, (uint64_t)&unk_1010E8450);
}

void type metadata accessor for MPCSharedListeningEventType(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B30, (uint64_t)&unk_1010E8470);
}

void type metadata accessor for MPCError(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B38, (uint64_t)&unk_1010E8490);
}

void _s3__C25OpenExternalURLOptionsKeyVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B40, (uint64_t)&unk_1010E84B8);
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B48, (uint64_t)&unk_1010E84E0);
}

void _s3__C13AttributeNameVMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B50, (uint64_t)&unk_1010E8508);
}

__n128 _s4MenuVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void _s3__C17CGAffineTransformVMa_1(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B58, (uint64_t)&unk_1010E8588);
}

void _s3__C7CGColorCMa_0(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B60, (uint64_t)&unk_1010E85C0);
}

void type metadata accessor for MPCPlayerEnqueueError(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B68, (uint64_t)&unk_1010E85F0);
}

void type metadata accessor for MPCPlayerRequestError(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B70, (uint64_t)&unk_1010E8618);
}

void _s3__C4NameVMa_1(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B78, (uint64_t)&unk_1010E8640);
}

_QWORD *initializeBufferWithCopyOfBuffer for CloudLibrary.UpdateContext(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B80, (uint64_t)&unk_1010E86C0);
}

void _s3__C7CGPointVMa_1(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2B88, (uint64_t)&unk_1010E8740);
}

uint64_t sub_10098B2AC()
{
  return sub_100048748(&qword_1011D2B90, (uint64_t (*)(uint64_t))_s3__C4NameVMa_1, (uint64_t)&unk_100ED9C88);
}

uint64_t sub_10098B2D8()
{
  return sub_100048748(&qword_1011D2B98, (uint64_t (*)(uint64_t))_s3__C4NameVMa_1, (uint64_t)&unk_100ED9C5C);
}

uint64_t sub_10098B304()
{
  return sub_100048748(&qword_1011D2BA0, (uint64_t (*)(uint64_t))_s3__C4NameVMa_1, (uint64_t)&unk_100ED9CF8);
}

uint64_t sub_10098B330()
{
  return sub_100048748(&qword_1011D2BA8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9DB4);
}

uint64_t sub_10098B35C()
{
  return sub_100048748(&qword_1011D2BB0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9DE0);
}

uint64_t sub_10098B388()
{
  return sub_100048748(&qword_1011D2BB8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9EE0);
}

uint64_t sub_10098B3B4()
{
  return sub_100048748(&qword_1011D2BC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9F0C);
}

uint64_t sub_10098B3E0()
{
  return sub_100048748(&qword_1011D2BC8, (uint64_t (*)(uint64_t))_s3__C13AttributeNameVMa_0, (uint64_t)&unk_100EDA038);
}

uint64_t sub_10098B40C()
{
  return sub_100048748(&qword_1011D2BD0, (uint64_t (*)(uint64_t))_s3__C13AttributeNameVMa_0, (uint64_t)&unk_100EDA00C);
}

uint64_t sub_10098B438()
{
  return sub_100048748(&qword_1011D2BD8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100EDA14C);
}

uint64_t sub_10098B464()
{
  return sub_100048748(&qword_1011D2BE0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100EDA120);
}

uint64_t sub_10098B490()
{
  return sub_100048748(&qword_1011D2BE8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100EDA1BC);
}

uint64_t sub_10098B4BC()
{
  return sub_100048748(&qword_1011D2BF0, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100EDA2A4);
}

uint64_t sub_10098B4E8()
{
  return sub_100048748(&qword_1011D2BF8, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100EDA278);
}

uint64_t sub_10098B514()
{
  return sub_100048748(&qword_1011D2C00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA38C);
}

uint64_t sub_10098B540()
{
  return sub_100048748(&qword_1011D2C08, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA3B8);
}

uint64_t sub_10098B56C()
{
  return sub_100048748(&qword_1011D2C10, (uint64_t (*)(uint64_t))_s3__C8CFStringCMa_0, (uint64_t)&unk_100EDA4C8);
}

uint64_t sub_10098B598()
{
  return sub_100048748(&qword_1011D2C18, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA608);
}

uint64_t sub_10098B5C4()
{
  return sub_100048748(&qword_1011D2C20, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA634);
}

uint64_t sub_10098B5F0()
{
  return sub_100048748(&qword_1011D2C28, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA6F0);
}

uint64_t sub_10098B61C()
{
  return sub_100048748(&qword_1011D2C30, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA6BC);
}

uint64_t sub_10098B648()
{
  return sub_100048748(&qword_1011D2C38, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA678);
}

uint64_t sub_10098B674()
{
  return sub_100048748(&qword_1011D2C40, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_100EDA7DC);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
  sub_10004AAF8(a1, (unint64_t *)&unk_1011D2D70, (uint64_t)&unk_1010E8788);
}

uint64_t sub_10098B6B4()
{
  return sub_100048748(&qword_1011D2C48, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_100EDA7A0);
}

unint64_t sub_10098B6E4()
{
  unint64_t result;

  result = qword_1011D2C50;
  if (!qword_1011D2C50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1011D2C50);
  }
  return result;
}

uint64_t sub_10098B728()
{
  return sub_100048748(&qword_1011D2C58, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_100EDA818);
}

uint64_t sub_10098B754()
{
  return sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
}

uint64_t sub_10098B780()
{
  return sub_100048748(&qword_1011D2C68, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EDA5A0);
}

uint64_t sub_10098B7AC()
{
  return sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
}

uint64_t sub_10098B7D8()
{
  return sub_100048748(&qword_1011D2C78, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EDA538);
}

uint64_t sub_10098B804()
{
  return sub_100048748(&qword_1011D2C80, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100EDAA80);
}

uint64_t sub_10098B830()
{
  return sub_100048748(&qword_1011D2C88, (uint64_t (*)(uint64_t))_s3__C8CFStringCMa_0, (uint64_t)&unk_100EDA4F4);
}

uint64_t sub_10098B85C()
{
  return sub_100048748(&qword_1011D2C90, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA474);
}

uint64_t sub_10098B888()
{
  return sub_100048748(&qword_1011D2C98, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA440);
}

uint64_t sub_10098B8B4()
{
  return sub_100048748(&qword_1011D2CA0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA3FC);
}

uint64_t sub_10098B8E0()
{
  return sub_100048748(&qword_1011D2CA8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_100EDA990);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_10004AAF8(a1, &qword_1011D2D68, (uint64_t)&unk_1010E8768);
}

uint64_t sub_10098B920()
{
  return sub_100048748(&qword_1011D2CB0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_100EDA954);
}

uint64_t sub_10098B94C()
{
  return sub_100048748(&qword_1011D2CB8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_100EDA9CC);
}

uint64_t sub_10098B978()
{
  return sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
}

uint64_t sub_10098B9A4()
{
  return sub_100048748(&qword_1011D2CC8, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100EDA314);
}

uint64_t sub_10098B9D0()
{
  return sub_100048748(&qword_1011D2CD0, (uint64_t (*)(uint64_t))_s3__C13AttributeNameVMa_0, (uint64_t)&unk_100EDA0A8);
}

uint64_t sub_10098B9FC()
{
  return sub_100048748(&qword_1011D2CD8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9FC8);
}

uint64_t sub_10098BA28()
{
  return sub_100048748(&qword_1011D2CE0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9F94);
}

uint64_t sub_10098BA54()
{
  return sub_100048748(&qword_1011D2CE8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100ED9F50);
}

uint64_t sub_10098BA80()
{
  return sub_100048748(&qword_1011D2CF0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EDA880);
}

uint64_t sub_10098BAAC()
{
  return sub_100048748(&qword_1011D2CF8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EDA564);
}

uint64_t sub_10098BAD8()
{
  return sub_100048748(&qword_1011D2D00, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9E9C);
}

uint64_t sub_10098BB04()
{
  return sub_100048748(&qword_1011D2D08, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9E68);
}

uint64_t sub_10098BB30()
{
  return sub_100048748(&qword_1011D2D10, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100ED9E24);
}

uint64_t sub_10098BB5C()
{
  return sub_100048748(&qword_1011D2D18, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EDA844);
}

uint64_t sub_10098BB88()
{
  return sub_100048748((unint64_t *)&unk_1011D2D20, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EDA5CC);
}

double static Actions.ReportConcern.action(context:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  double result;
  __int128 v7;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 6);
  *(_BYTE *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v3;
  v5 = *((_OWORD *)a1 + 1);
  v7 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 48) = v4;
  *(_BYTE *)(a2 + 56) = v2;
  *(_QWORD *)(a2 + 64) = sub_10098BC58;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0x4014000000000000;
  *(_QWORD *)(a2 + 88) = &unk_1011D2EA0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = &unk_1011D2EA8;
  *(_QWORD *)(a2 + 112) = 0;
  swift_retain(v5);
  swift_retain(v7);
  *(_QWORD *)&result = swift_retain(v4).n128_u64[0];
  return result;
}

uint64_t sub_10098BC58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_10098BC78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 24);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10005AEE4;
  return v6();
}

uint64_t sub_10098BCCC(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 40);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5();
}

uint64_t (*Actions.ReportConcern.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E8A28, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x8000000100E4A930;
  v1 = swift_allocObject(&unk_1010E8A50, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4A930;
  return sub_10098C424;
}

uint64_t (*sub_10098BDA8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E8B78, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x8000000100E4A930;
  v1 = swift_allocObject(&unk_1010E8BA0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4A930;
  return sub_10098C9EC;
}

uint64_t Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;

  v16 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (*(_QWORD *)(v16 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1010E8A78, v20 + 16, v17 | 7);
  result = sub_10098C5E8(a11, v21 + v18);
  v23 = (_QWORD *)(v21 + v19);
  *v23 = a1;
  v23[1] = a2;
  v24 = (_QWORD *)(v21 + v20);
  *v24 = a3;
  v24[1] = a4;
  *(_BYTE *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = a7;
  *(_QWORD *)(a9 + 24) = a8;
  *(_QWORD *)(a9 + 32) = a10;
  *(_QWORD *)(a9 + 40) = &unk_1011D2EC0;
  *(_QWORD *)(a9 + 48) = v21;
  return result;
}

uint64_t sub_10098BF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v6 = sub_100007E8C(&qword_1011D2AE0);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2EB8);
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[20] = v9;
  v5[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10098BFDC, 0, 0);
}

uint64_t sub_10098BFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  sub_10098C968(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 144), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    sub_1002ED50C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v8;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100EBF9C0;
    *(_BYTE *)(inited + 72) = 3;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 184) = v13;
    *(_QWORD *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v16 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_10098C17C, v18, v19);
  }
}

uint64_t sub_10098C17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(uint64_t **)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_1009AFBBC(v7, v6, 5, 32, v5, v3, v2, v1, v8, v4);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  sub_10004FF60(v5, &qword_1011D2AE0);
  return swift_task_switch(sub_10098C244, 0, 0);
}

uint64_t sub_10098C244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10098C9B0(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO13ReportConcernO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000013, 0x8000000100E4A950);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10098C400()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10098C424()
{
  uint64_t v0;

  return sub_1009B8FB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10098C42C()
{
  uint64_t v0;

  return sub_1009B9030(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10098C434()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(_QWORD *)(v4 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 24);
      v9 = type metadata accessor for URL(0);
      v11 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
}

uint64_t sub_10098C5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D2EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10098C630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = (uint64_t *)(v0 + v4);
  v8 = *v7;
  v9 = v7[1];
  v10 = v0 + v5;
  v11 = *(_QWORD *)(v0 + v5);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D2EB4);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10005AEE4;
  return sub_10098BF2C(v6, v8, v9, v11, v12);
}

unint64_t sub_10098C6E4()
{
  unint64_t result;

  result = qword_1011D2EC8;
  if (!qword_1011D2EC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_1011D2EC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern()
{
  return &type metadata for Actions.ReportConcern;
}

uint64_t _s13ReportConcernO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[2]);
  swift_release(a1[4]);
  return swift_release(a1[6]);
}

uint64_t _s13ReportConcernO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v3);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 initializeWithTake for Alert.Action(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13ReportConcernO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Alert.Action(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert.Action(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern.Context()
{
  return &type metadata for Actions.ReportConcern.Context;
}

uint64_t sub_10098C968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D2EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10098C9B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double static Actions.AddToLibrary.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_10098CA8C;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1011D2F08;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1011D2F10;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_10098CA8C(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t sub_10098CAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10005AEE4;
  return v6();
}

uint64_t sub_10098CB00(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 32);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5();
}

void Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(unint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)();
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (**v54)();
  uint64_t v55;
  uint64_t v56;

  v52 = a4;
  v53 = a8;
  v49 = a7;
  v50 = a5;
  v55 = a2;
  v56 = a6;
  v51 = a3;
  v44 = a1;
  v54 = a9;
  v47 = a11;
  v48 = a12;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v45 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  (*(void (**)(char *))(v12 + 16))((char *)&v43 - v15);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 40) & ~v17;
  v46 = v17 | 7;
  v19 = v13 + 7;
  v20 = (v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  v21 = (uint64_t (*)())swift_allocObject(&unk_1010E8BE0, v20 + 8, v17 | 7);
  *((_QWORD *)v21 + 2) = a10;
  *((_QWORD *)v21 + 3) = a11;
  *((_QWORD *)v21 + 4) = a12;
  v22 = (char *)v21 + v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v22, v16, a10);
  *(_QWORD *)((char *)v21 + v20) = v55;
  v24 = v45;
  v23(v45, (char *)v44, a10);
  v25 = (v17 + 56) & ~v17;
  v26 = (v19 + v25) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 79) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (((v28 + 47) & 0xFFFFFFFFFFFFFFF8) + v30 + 40) & ~v30;
  v32 = (uint64_t (*)())swift_allocObject(&unk_1010E8C08, v31 + *(_QWORD *)(v29 + 64), v46 | v30);
  v33 = v47;
  *((_QWORD *)v32 + 2) = a10;
  *((_QWORD *)v32 + 3) = v33;
  v34 = v56;
  *((_QWORD *)v32 + 4) = v48;
  *((_QWORD *)v32 + 5) = v34;
  v35 = (char *)v32 + v25;
  v36 = v49;
  *((_QWORD *)v32 + 6) = v49;
  v23(v35, v24, a10);
  v37 = v55;
  *(_QWORD *)((char *)v32 + v26) = v55;
  sub_100065228(v50, (uint64_t)v32 + v27, &qword_1011D2F20);
  sub_100064C48(v51, (uint64_t)v32 + v28);
  sub_100065228(v52, (uint64_t)v32 + v44, &qword_1011D2F28);
  sub_100065228(v53, (uint64_t)v32 + v31, &qword_1011D2EB8);
  v38 = swift_allocObject(&unk_1010E8C30, 32, 7);
  v39 = v56;
  *(_QWORD *)(v38 + 16) = v56;
  *(_QWORD *)(v38 + 24) = v36;
  v40 = swift_allocObject(&unk_1010E8C58, 32, 7);
  *(_QWORD *)(v40 + 16) = &unk_1011D2F40;
  *(_QWORD *)(v40 + 24) = v38;
  swift_unknownObjectRetain(v39, v41);
  swift_retain(v37);
  v42 = v54;
  *v54 = sub_10098D0E8;
  v42[1] = v21;
  v42[2] = (uint64_t (*)())&unk_1011D2F30;
  v42[3] = v32;
  v42[4] = (uint64_t (*)())&unk_1011D2F50;
  v42[5] = (uint64_t (*)())v40;
}

uint64_t sub_10098CDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a2;
  v7 = type metadata accessor for MusicLibrary.AddAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_1011D2F58);
  v31 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D2FC8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v14);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a3);
  v24 = swift_dynamicCast(v16, v19, a3, v20, 6);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v16, 1, 1, v20);
    v27 = sub_10004FF60((uint64_t)v16, &qword_1011D2FC8);
    goto LABEL_5;
  }
  v25(v16, 0, 1, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v16, v20);
  v26 = Album.childrenAddStatus(_:)(v36);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (v26 != 1)
  {
LABEL_5:
    static MusicLibraryAction<>.add.getter(v27);
    v29 = v32;
    MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v10, a3, v32, v35, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v29);
    v28 = sub_10098D5CC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v34);
    return v28;
  }
  return 0;
}

uint64_t sub_10098D07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_10098D0E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_10098CDE8((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t Album.childrenAddStatus(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD);
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[4];
  uint64_t v60;

  v56 = a1;
  v1 = type metadata accessor for MusicLibrary.AddAction(0);
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  __chkstk_darwin(v1);
  v53 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011D2F58);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v58 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Track(0);
  v57 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v49 = (char *)&v45 - v8;
  v9 = sub_100007E8C(&qword_1011D2F60);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  v15 = sub_100007E8C(&qword_1011D2F68);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011D2F70);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v45 - v24;
  Album.tracks.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10004FF60((uint64_t)v17, &qword_1011D2F68);
    return 0;
  }
  v48 = v14;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v17, v18);
  v26 = sub_100991A08((unint64_t *)&qword_1011D2F78, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v18);
  dispatch thunk of Collection.endIndex.getter(&v60, v18, v26);
  if (v59[0] == v60)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    return 0;
  }
  v46 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v47 = v19;
  v46(v12, v25, v18);
  v45 = v25;
  dispatch thunk of Collection.startIndex.getter(v18);
  *(_QWORD *)&v12[*(int *)(v9 + 36)] = v59[0];
  v28 = (uint64_t)v48;
  sub_100065228((uint64_t)v12, (uint64_t)v48, &qword_1011D2F60);
  v29 = (uint64_t *)(v28 + *(int *)(v9 + 36));
  v30 = v57;
  v31 = v50;
  while (1)
  {
    v32 = *v29;
    dispatch thunk of Collection.endIndex.getter(v59, v18, v26);
    if (v32 == v59[0])
      break;
    v33 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v59, v29, v18, v26);
    v34 = v49;
    (*(void (**)(char *))(v30 + 16))(v49);
    v33(v59, 0);
    v46(v22, (char *)v28, v18);
    dispatch thunk of Collection.formIndex(after:)(v29, v18, v26);
    v35 = *(void (**)(char *, uint64_t))(v47 + 8);
    v35(v22, v18);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v31, v34, v5);
    v37 = v53;
    static MusicLibraryAction<>.add.getter(v36);
    v38 = v55;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v31, v37, v5, v55, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
    v39 = v37;
    v40 = v58;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
    v41 = sub_10098D5CC();
    v43 = v42;
    v44 = v40;
    v30 = v57;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v52);
    sub_10013B670(v41, v43);
    v28 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v5);
    if (v43 == 1)
    {
      sub_10004FF60(v28, &qword_1011D2F60);
      v35(v45, v18);
      return 1;
    }
  }
  sub_10004FF60(v28, &qword_1011D2F60);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v18);
  return 2;
}

uint64_t sub_10098D5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  __n128 v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, __n128);
  int v29;
  int v30;
  void (*v31)(char *, uint64_t);
  uint64_t result;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v33 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - v5;
  v7 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v33 - v12;
  v14 = sub_100007E8C(&qword_1011D2F58);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v19 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      v29 = v19;
      v27 = 0xD000000000000010;
      if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return 0xD000000000000012;
      }
      else
      {
        v30 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
        v31 = *(void (**)(char *, uint64_t))(v8 + 8);
        v31(v13, v7);
        if (v29 != v30)
        {
          v27 = 0x206E776F6E6B6E55;
          v31(v11, v7);
        }
      }
      return v27;
    }
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    v20 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v6, v11, v2);
    v21 = v34;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v34, v6, v2);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v2);
    if (v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v35 = 0;
      v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease(v36);
      v35 = 0xD000000000000016;
      v36 = 0x8000000100E4A9C0;
      v23 = sub_1009919BC(&qword_1011D2FB8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v23);
      object = v24._object;
      String.append(_:)(v24);
      v26 = swift_bridgeObjectRelease(object);
      v27 = v35;
      v28 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
      v28(v6, v2, v26);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      ((void (*)(char *, uint64_t))v28)(v21, v2);
      return v27;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return 0;
  }
  if (v18 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+AddToLibrary.swift", 36, 2, 158, 0);
  __break(1u);
  return result;
}

uint64_t sub_10098DA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8[81] = v33;
  v8[80] = v32;
  v8[79] = v31;
  v8[78] = a8;
  v8[77] = a7;
  v8[76] = a6;
  v8[75] = a5;
  v8[74] = a4;
  v8[73] = a3;
  v8[72] = a2;
  v8[71] = a1;
  v9 = sub_100007E8C(&qword_1011D2AE0);
  v8[82] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2EB8);
  v8[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Actions.MetricsReportingContext(0);
  v8[84] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[85] = v12;
  v8[86] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice.Variant(0);
  v8[87] = v13;
  v8[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[89] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[90] = v15;
  v8[91] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011D2FC0);
  v8[92] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[93] = swift_task_alloc(v17);
  v8[94] = swift_task_alloc(v17);
  v18 = type metadata accessor for MusicLibrary.AddAction(0);
  v8[95] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[96] = v19;
  v8[97] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D2F58);
  v8[98] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v8[99] = v21;
  v8[100] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011D2F68);
  v8[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2F70);
  v8[102] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v8[103] = v24;
  v8[104] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011D2FC8);
  v8[105] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v31 - 8);
  v8[106] = v26;
  v8[107] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v8[108] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v8[109] = v28;
  v8[110] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2FD0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[111] = swift_task_alloc(v29);
  v8[112] = swift_task_alloc(v29);
  v8[113] = swift_task_alloc(v29);
  v8[114] = swift_task_alloc(v29);
  v8[115] = swift_task_alloc(v29);
  v8[116] = swift_task_alloc(v29);
  v8[117] = swift_task_alloc(v29);
  return swift_task_switch(sub_10098DD1C, 0, 0);
}

uint64_t sub_10098DD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t);
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  void (*v93)(uint64_t, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  void (*v109)(uint64_t, uint64_t);
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t WitnessTable;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t inited;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int16 v145;
  uint64_t v146;
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, uint64_t, uint64_t);
  size_t v174[2];

  if (*(_QWORD *)(v0 + 568))
  {
    v1 = *(_QWORD *)(v0 + 576);
    *(_QWORD *)(v0 + 944) = swift_getObjectType();
    *(_BYTE *)(v0 + 516) = 0;
    *(_QWORD *)(v0 + 952) = *(_QWORD *)(v1 + 8);
    v2 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 960) = static MainActor.shared.getter(v3);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    v6 = v5;
    v7 = sub_10098EB44;
    return swift_task_switch(v7, v4, v6);
  }
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v9 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath("hV4");
  v11 = swift_getKeyPath(&unk_100EDACF0);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v9, KeyPath, v11);
  swift_release();
  swift_release();
  v12 = *(_QWORD *)(v0 + 24);
  v13 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v12 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_1002A4CE4(v0 + 472);
    v14 = *(_QWORD *)(v0 + 928);
    v15 = *(_QWORD *)(v0 + 920);
    v16 = *(_QWORD *)(v0 + 912);
    v17 = *(_QWORD *)(v0 + 904);
    v18 = *(_QWORD *)(v0 + 896);
    v19 = *(_QWORD *)(v0 + 888);
    v20 = *(_QWORD *)(v0 + 880);
    v21 = *(_QWORD *)(v0 + 856);
    v22 = *(_QWORD *)(v0 + 840);
    v158 = *(_QWORD *)(v0 + 832);
    v159 = *(_QWORD *)(v0 + 808);
    v160 = *(_QWORD *)(v0 + 800);
    v161 = *(_QWORD *)(v0 + 776);
    v162 = *(_QWORD *)(v0 + 752);
    v163 = *(_QWORD *)(v0 + 744);
    v164 = *(_QWORD *)(v0 + 728);
    v165 = *(_QWORD *)(v0 + 704);
    v167 = *(_QWORD *)(v0 + 688);
    v169 = *(_QWORD *)(v0 + 664);
    v172 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v163);
    swift_task_dealloc(v164);
    swift_task_dealloc(v165);
    swift_task_dealloc(v167);
    swift_task_dealloc(v169);
    swift_task_dealloc(v172);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v23 = *(_QWORD *)(v0 + 872);
  v24 = *(_QWORD *)(v0 + 864);
  v25 = *(_QWORD *)(v0 + 856);
  v26 = *(_QWORD *)(v0 + 848);
  v27 = *(_QWORD *)(v0 + 840);
  v28 = *(_QWORD *)(v0 + 632);
  v29 = *(_QWORD *)(v0 + 584);
  v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v173(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  *(_QWORD *)(v0 + 968) = v30;
  v30(v25, v29, v28);
  v31 = swift_dynamicCast(v27, v25, v28, v24, 6);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if ((v31 & 1) == 0)
  {
    v43 = *(_QWORD *)(v0 + 840);
    v32(v43, 1, 1, *(_QWORD *)(v0 + 864));
    v44 = &qword_1011D2FC8;
    goto LABEL_13;
  }
  v33 = *(_QWORD *)(v0 + 880);
  v34 = *(_QWORD *)(v0 + 872);
  v35 = *(_QWORD *)(v0 + 864);
  v36 = *(_QWORD *)(v0 + 840);
  v37 = *(_QWORD *)(v0 + 592);
  v32(v36, 0, 1, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v33, v36, v35);
  v38 = Album.childrenAddStatus(_:)(v37);
  v39 = *(_QWORD *)(v0 + 880);
  if (v38 != 1)
  {
    v45 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v39, *(_QWORD *)(v0 + 864));
    goto LABEL_15;
  }
  v40 = *(_QWORD *)(v0 + 824);
  v41 = *(_QWORD *)(v0 + 816);
  v42 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v39);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v42, 1, v41) == 1)
  {
    v43 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v44 = &qword_1011D2F68;
LABEL_13:
    v45 = sub_10004FF60(v43, v44);
LABEL_15:
    v46 = *(_QWORD *)(v0 + 920);
    v47 = *(_QWORD *)(v0 + 800);
    v166 = *(_QWORD *)(v0 + 792);
    v168 = *(_QWORD *)(v0 + 784);
    v170 = *(_QWORD *)(v0 + 936);
    v48 = *(_QWORD *)(v0 + 776);
    v49 = *(_QWORD *)(v0 + 768);
    v50 = *(_QWORD *)(v0 + 760);
    v51 = *(_QWORD *)(v0 + 648);
    v52 = *(_QWORD *)(v0 + 632);
    v53 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v45);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v53, v48, v52, v50, v51, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v46);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v47, v168);
    sub_10004FF60(v170, &qword_1011D2FD0);
    sub_100065228(v46, v170, &qword_1011D2FD0);
    goto LABEL_16;
  }
  v130 = *(_QWORD *)(v0 + 832);
  v131 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v130, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v174[0] = (size_t)_swiftEmptyArrayStorage;
  swift_retain();
  LOBYTE(v130) = sub_1009916F4(v130, v131, v174);
  v132 = swift_release();
  if ((v130 & 1) != 0)
  {
    v133 = *(_QWORD *)(v0 + 880);
    v134 = *(_QWORD *)(v0 + 872);
    v135 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v132);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
  }
  else
  {
    if (*(_QWORD *)(v174[0] + 16))
    {
      (*(void (**)(_QWORD, size_t, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), v174[0]+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)), *(_QWORD *)(v0 + 712), v132);
      v149 = 0;
    }
    else
    {
      v149 = 1;
    }
    v150 = *(_QWORD *)(v0 + 936);
    v151 = *(_QWORD *)(v0 + 928);
    v152 = *(_QWORD *)(v0 + 880);
    v153 = *(_QWORD *)(v0 + 872);
    v154 = *(_QWORD *)(v0 + 864);
    v155 = *(_QWORD *)(v0 + 832);
    v156 = *(_QWORD *)(v0 + 824);
    v157 = *(_QWORD *)(v0 + 816);
    v173(v151, v149, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v155, v157);
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
    sub_10004FF60(v150, &qword_1011D2FD0);
    sub_100065228(v151, v150, &qword_1011D2FD0);
  }
  swift_bridgeObjectRelease();
LABEL_16:
  v54 = *(_QWORD *)(v0 + 936);
  v55 = *(_QWORD *)(v0 + 912);
  v56 = *(_QWORD *)(v0 + 752);
  v57 = *(_QWORD *)(v0 + 736);
  v58 = *(_QWORD *)(v0 + 720);
  v59 = *(_QWORD *)(v0 + 712);
  v60 = *(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104);
  v60(v55, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v59);
  v173(v55, 0, 1, v59);
  v61 = v56 + *(int *)(v57 + 48);
  sub_10004A160(v54, v56, &qword_1011D2FD0);
  sub_10004A160(v55, v61, &qword_1011D2FD0);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  if (v62(v56, 1, v59) == 1)
  {
    v63 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 912), &qword_1011D2FD0);
    if (v62(v61, 1, v63) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 752), &qword_1011D2FD0);
LABEL_31:
      sub_10004A160(*(_QWORD *)(v0 + 600), v0 + 288, &qword_1011D2F20);
      if (*(_QWORD *)(v0 + 344) == 1)
      {
        v94 = *(_QWORD **)(v0 + 608);
        sub_10004FF60(v0 + 288, &qword_1011D2F20);
        v95 = v94[3];
        *(_QWORD *)(v0 + 976) = v95;
        *(_QWORD *)(v0 + 984) = v94[4];
        *(_QWORD *)(v0 + 992) = sub_100007E68(v94, v95);
        v96 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v97);
        v4 = dispatch thunk of Actor.unownedExecutor.getter(v96, &protocol witness table for MainActor);
        v6 = v98;
        v7 = sub_10098F98C;
        return swift_task_switch(v7, v4, v6);
      }
      sub_100064EF0(v0 + 288, v0 + 216);
      v99 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1016) = v99;
      *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v100);
      v101 = dispatch thunk of Actor.unownedExecutor.getter(v99, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 1032) = v101;
      *(_QWORD *)(v0 + 1040) = v102;
      return swift_task_switch(sub_10098FA70, v101, v102);
    }
    goto LABEL_21;
  }
  v64 = *(_QWORD *)(v0 + 712);
  sub_10004A160(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_1011D2FD0);
  v65 = v62(v61, 1, v64);
  v66 = *(_QWORD *)(v0 + 912);
  v67 = *(_QWORD *)(v0 + 904);
  if (v65 == 1)
  {
    v68 = *(_QWORD *)(v0 + 720);
    v69 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 912), &qword_1011D2FD0);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
LABEL_21:
    sub_10004FF60(*(_QWORD *)(v0 + 752), &qword_1011D2FC0);
    goto LABEL_22;
  }
  v171 = *(_QWORD *)(v0 + 752);
  v88 = *(_QWORD *)(v0 + 728);
  v89 = *(_QWORD *)(v0 + 720);
  v90 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v88, v61, v90);
  v91 = sub_1009919BC(&qword_1011D2FD8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v92 = dispatch thunk of static Equatable.== infix(_:_:)(v67, v88, v90, v91);
  v93 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
  v93(v88, v90);
  sub_10004FF60(v66, &qword_1011D2FD0);
  v93(v67, v90);
  sub_10004FF60(v171, &qword_1011D2FD0);
  if ((v92 & 1) != 0)
    goto LABEL_31;
LABEL_22:
  v70 = *(_QWORD *)(v0 + 936);
  v71 = *(_QWORD *)(v0 + 896);
  v72 = *(_QWORD *)(v0 + 744);
  v73 = *(_QWORD *)(v0 + 712);
  v60(v71, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v73);
  v173(v71, 0, 1, v73);
  v74 = v72 + *(int *)(v57 + 48);
  sub_10004A160(v70, v72, &qword_1011D2FD0);
  sub_10004A160(v71, v74, &qword_1011D2FD0);
  if (v62(v72, 1, v73) == 1)
  {
    v75 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 896), &qword_1011D2FD0);
    if (v62(v74, 1, v75) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 744), &qword_1011D2FD0);
LABEL_35:
      v110 = *(_QWORD **)(v0 + 608);
      v111 = v110[3];
      *(_QWORD *)(v0 + 1072) = v111;
      *(_QWORD *)(v0 + 1080) = v110[4];
      *(_QWORD *)(v0 + 1088) = sub_100007E68(v110, v111);
      v112 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v113);
      v4 = dispatch thunk of Actor.unownedExecutor.getter(v112, &protocol witness table for MainActor);
      v6 = v114;
      v7 = sub_10098FD54;
      return swift_task_switch(v7, v4, v6);
    }
    goto LABEL_27;
  }
  v76 = *(_QWORD *)(v0 + 712);
  sub_10004A160(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_1011D2FD0);
  v77 = v62(v74, 1, v76);
  v78 = *(_QWORD *)(v0 + 896);
  v79 = *(_QWORD *)(v0 + 888);
  if (v77 == 1)
  {
    v80 = *(_QWORD *)(v0 + 720);
    v81 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 896), &qword_1011D2FD0);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
LABEL_27:
    sub_10004FF60(*(_QWORD *)(v0 + 744), &qword_1011D2FC0);
    goto LABEL_28;
  }
  v103 = *(_QWORD *)(v0 + 744);
  v104 = *(_QWORD *)(v0 + 728);
  v105 = *(_QWORD *)(v0 + 720);
  v106 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v104, v74, v106);
  v107 = sub_1009919BC(&qword_1011D2FD8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v108 = dispatch thunk of static Equatable.== infix(_:_:)(v79, v104, v106, v107);
  v109 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
  v109(v104, v106);
  sub_10004FF60(v78, &qword_1011D2FD0);
  v109(v79, v106);
  sub_10004FF60(v103, &qword_1011D2FD0);
  if ((v108 & 1) != 0)
    goto LABEL_35;
LABEL_28:
  sub_10004A160(*(_QWORD *)(v0 + 616), v0 + 520, &qword_1011D2F28);
  v82 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v82;
  if (v82)
  {
    v83 = *(_QWORD *)(v0 + 704);
    v84 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_100007E68((_QWORD *)(v0 + 520), v82);
    swift_storeEnumTagMultiPayload(v83, v84, 7);
    v85 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v86);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v85, &protocol witness table for MainActor);
    v6 = v87;
    v7 = sub_10098FFA4;
    return swift_task_switch(v7, v4, v6);
  }
  sub_10004FF60(v0 + 520, &qword_1011D2F28);
  v115 = *(_QWORD *)(v0 + 680);
  v116 = *(_QWORD *)(v0 + 672);
  v117 = *(_QWORD *)(v0 + 664);
  sub_10004A160(*(_QWORD *)(v0 + 624), v117, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v117, 1, v116) != 1)
  {
    v136 = *(_QWORD *)(v0 + 656);
    v137 = *(_QWORD *)(v0 + 632);
    sub_1002ED50C(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v137);
    *(_QWORD *)(v0 + 1152) = v138;
    v139 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v136, 1, 1, v139);
    v140 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v140, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v137);
    *(_QWORD *)(inited + 40) = v142;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 1168) = v143;
    *(_QWORD *)(v0 + 1176) = v144;
    *(_WORD *)(v0 + 514) = v145;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v146 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v147);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v146, &protocol witness table for MainActor);
    v6 = v148;
    v7 = sub_1009902B0;
    return swift_task_switch(v7, v4, v6);
  }
  sub_10004FF60(*(_QWORD *)(v0 + 664), &qword_1011D2EB8);
  v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
  v119 = *(_QWORD *)(v0 + 848);
  v120 = *(_QWORD *)(v0 + 632);
  v121 = *(_QWORD *)(v0 + 584);
  v122 = sub_100A9BBC8(v120, v120);
  v123 = swift_allocObject(v122, ((*(unsigned __int8 *)(v119 + 80) + (unint64_t)*(unsigned int *)(v122 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72), *(unsigned __int8 *)(v119 + 80) | (unint64_t)*(unsigned __int16 *)(v122 + 52));
  v124 = static Array._adoptStorage(_:count:)(v123, 1);
  v118(v125, v121, v120);
  v126 = sub_10014273C(v124);
  *(_QWORD *)(v0 + 1192) = v126;
  *(_QWORD *)(v0 + 560) = v126;
  v127 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  *(_QWORD *)(v0 + 1200) = v127;
  v128 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v128);
  *v127 = v0;
  v127[1] = sub_1009904A4;
  return MusicLibrary.add<A, B>(_:)(v0 + 560, v128, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
}

uint64_t sub_10098EB44()
{
  char *v0;
  void (*v1)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))*((_QWORD *)v0 + 119);
  v2 = *((_QWORD *)v0 + 118);
  v3 = *((_QWORD *)v0 + 72);
  swift_release();
  v4 = sub_10098C6E4();
  v1(v0 + 516, &type metadata for ActionType, v4, v2, v3);
  return swift_task_switch(sub_10098EBC4, 0, 0);
}

uint64_t sub_10098EBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  char v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD, uint64_t);
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)();
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void (*v89)(uint64_t, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void (*v105)(uint64_t, uint64_t);
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t WitnessTable;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t inited;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int16 v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, uint64_t, uint64_t);
  size_t v170[2];

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath("hV4");
  v3 = swift_getKeyPath(&unk_100EDACF0);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v4 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_1002A4CE4(v0 + 472);
    v6 = *(_QWORD *)(v0 + 928);
    v7 = *(_QWORD *)(v0 + 920);
    v8 = *(_QWORD *)(v0 + 912);
    v9 = *(_QWORD *)(v0 + 904);
    v10 = *(_QWORD *)(v0 + 896);
    v11 = *(_QWORD *)(v0 + 888);
    v12 = *(_QWORD *)(v0 + 880);
    v13 = *(_QWORD *)(v0 + 856);
    v14 = *(_QWORD *)(v0 + 840);
    v154 = *(_QWORD *)(v0 + 832);
    v155 = *(_QWORD *)(v0 + 808);
    v156 = *(_QWORD *)(v0 + 800);
    v157 = *(_QWORD *)(v0 + 776);
    v158 = *(_QWORD *)(v0 + 752);
    v159 = *(_QWORD *)(v0 + 744);
    v160 = *(_QWORD *)(v0 + 728);
    v161 = *(_QWORD *)(v0 + 704);
    v163 = *(_QWORD *)(v0 + 688);
    v165 = *(_QWORD *)(v0 + 664);
    v168 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v154);
    swift_task_dealloc(v155);
    swift_task_dealloc(v156);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v163);
    swift_task_dealloc(v165);
    swift_task_dealloc(v168);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v16 = *(_QWORD *)(v0 + 872);
  v17 = *(_QWORD *)(v0 + 864);
  v18 = *(_QWORD *)(v0 + 856);
  v19 = *(_QWORD *)(v0 + 848);
  v20 = *(_QWORD *)(v0 + 840);
  v21 = *(_QWORD *)(v0 + 632);
  v22 = *(_QWORD *)(v0 + 584);
  v169 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v169(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  *(_QWORD *)(v0 + 968) = v23;
  v23(v18, v22, v21);
  v24 = swift_dynamicCast(v20, v18, v21, v17, 6);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if ((v24 & 1) == 0)
  {
    v36 = *(_QWORD *)(v0 + 840);
    v25(v36, 1, 1, *(_QWORD *)(v0 + 864));
    v37 = &qword_1011D2FC8;
    goto LABEL_10;
  }
  v26 = *(_QWORD *)(v0 + 880);
  v27 = *(_QWORD *)(v0 + 872);
  v28 = *(_QWORD *)(v0 + 864);
  v29 = *(_QWORD *)(v0 + 840);
  v30 = *(_QWORD *)(v0 + 592);
  v25(v29, 0, 1, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v29, v28);
  v31 = Album.childrenAddStatus(_:)(v30);
  v32 = *(_QWORD *)(v0 + 880);
  if (v31 != 1)
  {
    v38 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v32, *(_QWORD *)(v0 + 864));
    goto LABEL_12;
  }
  v33 = *(_QWORD *)(v0 + 824);
  v34 = *(_QWORD *)(v0 + 816);
  v35 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v35, 1, v34) == 1)
  {
    v36 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v37 = &qword_1011D2F68;
LABEL_10:
    v38 = sub_10004FF60(v36, v37);
LABEL_12:
    v39 = *(_QWORD *)(v0 + 920);
    v40 = *(_QWORD *)(v0 + 800);
    v162 = *(_QWORD *)(v0 + 792);
    v164 = *(_QWORD *)(v0 + 784);
    v166 = *(_QWORD *)(v0 + 936);
    v41 = *(_QWORD *)(v0 + 776);
    v42 = *(_QWORD *)(v0 + 768);
    v43 = *(_QWORD *)(v0 + 760);
    v44 = *(_QWORD *)(v0 + 648);
    v45 = *(_QWORD *)(v0 + 632);
    v46 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v38);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v46, v41, v45, v43, v44, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v39);
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v40, v164);
    sub_10004FF60(v166, &qword_1011D2FD0);
    sub_100065228(v39, v166, &qword_1011D2FD0);
    goto LABEL_13;
  }
  v126 = *(_QWORD *)(v0 + 832);
  v127 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v126, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v170[0] = (size_t)_swiftEmptyArrayStorage;
  swift_retain();
  LOBYTE(v126) = sub_1009916F4(v126, v127, v170);
  v128 = swift_release();
  if ((v126 & 1) != 0)
  {
    v129 = *(_QWORD *)(v0 + 880);
    v130 = *(_QWORD *)(v0 + 872);
    v131 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v128);
    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v129, v131);
  }
  else
  {
    if (*(_QWORD *)(v170[0] + 16))
    {
      (*(void (**)(_QWORD, size_t, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), v170[0]+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)), *(_QWORD *)(v0 + 712), v128);
      v145 = 0;
    }
    else
    {
      v145 = 1;
    }
    v146 = *(_QWORD *)(v0 + 936);
    v147 = *(_QWORD *)(v0 + 928);
    v148 = *(_QWORD *)(v0 + 880);
    v149 = *(_QWORD *)(v0 + 872);
    v150 = *(_QWORD *)(v0 + 864);
    v151 = *(_QWORD *)(v0 + 832);
    v152 = *(_QWORD *)(v0 + 824);
    v153 = *(_QWORD *)(v0 + 816);
    v169(v147, v145, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v151, v153);
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v148, v150);
    sub_10004FF60(v146, &qword_1011D2FD0);
    sub_100065228(v147, v146, &qword_1011D2FD0);
  }
  swift_bridgeObjectRelease();
LABEL_13:
  v47 = *(_QWORD *)(v0 + 936);
  v48 = *(_QWORD *)(v0 + 912);
  v49 = *(_QWORD *)(v0 + 752);
  v50 = *(_QWORD *)(v0 + 736);
  v51 = *(_QWORD *)(v0 + 720);
  v52 = *(_QWORD *)(v0 + 712);
  v53 = *(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 104);
  v53(v48, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v52);
  v169(v48, 0, 1, v52);
  v54 = v49 + *(int *)(v50 + 48);
  sub_10004A160(v47, v49, &qword_1011D2FD0);
  sub_10004A160(v48, v54, &qword_1011D2FD0);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v55(v49, 1, v52) == 1)
  {
    v56 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 912), &qword_1011D2FD0);
    if (v55(v54, 1, v56) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 752), &qword_1011D2FD0);
LABEL_28:
      sub_10004A160(*(_QWORD *)(v0 + 600), v0 + 288, &qword_1011D2F20);
      if (*(_QWORD *)(v0 + 344) != 1)
      {
        sub_100064EF0(v0 + 288, v0 + 216);
        v95 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1016) = v95;
        *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v96);
        v97 = dispatch thunk of Actor.unownedExecutor.getter(v95, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 1032) = v97;
        *(_QWORD *)(v0 + 1040) = v98;
        return swift_task_switch(sub_10098FA70, v97, v98);
      }
      v90 = *(_QWORD **)(v0 + 608);
      sub_10004FF60(v0 + 288, &qword_1011D2F20);
      v91 = v90[3];
      *(_QWORD *)(v0 + 976) = v91;
      *(_QWORD *)(v0 + 984) = v90[4];
      *(_QWORD *)(v0 + 992) = sub_100007E68(v90, v91);
      v92 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v93);
      v80 = dispatch thunk of Actor.unownedExecutor.getter(v92, &protocol witness table for MainActor);
      v82 = v94;
      v83 = sub_10098F98C;
      return swift_task_switch(v83, v80, v82);
    }
    goto LABEL_18;
  }
  v57 = *(_QWORD *)(v0 + 712);
  sub_10004A160(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_1011D2FD0);
  v58 = v55(v54, 1, v57);
  v59 = *(_QWORD *)(v0 + 912);
  v60 = *(_QWORD *)(v0 + 904);
  if (v58 == 1)
  {
    v61 = *(_QWORD *)(v0 + 720);
    v62 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 912), &qword_1011D2FD0);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
LABEL_18:
    sub_10004FF60(*(_QWORD *)(v0 + 752), &qword_1011D2FC0);
    goto LABEL_19;
  }
  v167 = *(_QWORD *)(v0 + 752);
  v84 = *(_QWORD *)(v0 + 728);
  v85 = *(_QWORD *)(v0 + 720);
  v86 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32))(v84, v54, v86);
  v87 = sub_1009919BC(&qword_1011D2FD8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v88 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v84, v86, v87);
  v89 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
  v89(v84, v86);
  sub_10004FF60(v59, &qword_1011D2FD0);
  v89(v60, v86);
  sub_10004FF60(v167, &qword_1011D2FD0);
  if ((v88 & 1) != 0)
    goto LABEL_28;
LABEL_19:
  v63 = *(_QWORD *)(v0 + 936);
  v64 = *(_QWORD *)(v0 + 896);
  v65 = *(_QWORD *)(v0 + 744);
  v66 = *(_QWORD *)(v0 + 712);
  v53(v64, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v66);
  v169(v64, 0, 1, v66);
  v67 = v65 + *(int *)(v50 + 48);
  sub_10004A160(v63, v65, &qword_1011D2FD0);
  sub_10004A160(v64, v67, &qword_1011D2FD0);
  if (v55(v65, 1, v66) == 1)
  {
    v68 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 896), &qword_1011D2FD0);
    if (v55(v67, 1, v68) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 744), &qword_1011D2FD0);
LABEL_32:
      v106 = *(_QWORD **)(v0 + 608);
      v107 = v106[3];
      *(_QWORD *)(v0 + 1072) = v107;
      *(_QWORD *)(v0 + 1080) = v106[4];
      *(_QWORD *)(v0 + 1088) = sub_100007E68(v106, v107);
      v108 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v109);
      v80 = dispatch thunk of Actor.unownedExecutor.getter(v108, &protocol witness table for MainActor);
      v82 = v110;
      v83 = sub_10098FD54;
      return swift_task_switch(v83, v80, v82);
    }
    goto LABEL_24;
  }
  v69 = *(_QWORD *)(v0 + 712);
  sub_10004A160(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_1011D2FD0);
  v70 = v55(v67, 1, v69);
  v71 = *(_QWORD *)(v0 + 896);
  v72 = *(_QWORD *)(v0 + 888);
  if (v70 == 1)
  {
    v73 = *(_QWORD *)(v0 + 720);
    v74 = *(_QWORD *)(v0 + 712);
    sub_10004FF60(*(_QWORD *)(v0 + 896), &qword_1011D2FD0);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
LABEL_24:
    sub_10004FF60(*(_QWORD *)(v0 + 744), &qword_1011D2FC0);
    goto LABEL_25;
  }
  v99 = *(_QWORD *)(v0 + 744);
  v100 = *(_QWORD *)(v0 + 728);
  v101 = *(_QWORD *)(v0 + 720);
  v102 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v100, v67, v102);
  v103 = sub_1009919BC(&qword_1011D2FD8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v104 = dispatch thunk of static Equatable.== infix(_:_:)(v72, v100, v102, v103);
  v105 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
  v105(v100, v102);
  sub_10004FF60(v71, &qword_1011D2FD0);
  v105(v72, v102);
  sub_10004FF60(v99, &qword_1011D2FD0);
  if ((v104 & 1) != 0)
    goto LABEL_32;
LABEL_25:
  sub_10004A160(*(_QWORD *)(v0 + 616), v0 + 520, &qword_1011D2F28);
  v75 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v75;
  if (v75)
  {
    v76 = *(_QWORD *)(v0 + 704);
    v77 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_100007E68((_QWORD *)(v0 + 520), v75);
    swift_storeEnumTagMultiPayload(v76, v77, 7);
    v78 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v79);
    v80 = dispatch thunk of Actor.unownedExecutor.getter(v78, &protocol witness table for MainActor);
    v82 = v81;
    v83 = sub_10098FFA4;
  }
  else
  {
    sub_10004FF60(v0 + 520, &qword_1011D2F28);
    v111 = *(_QWORD *)(v0 + 680);
    v112 = *(_QWORD *)(v0 + 672);
    v113 = *(_QWORD *)(v0 + 664);
    sub_10004A160(*(_QWORD *)(v0 + 624), v113, &qword_1011D2EB8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v113, 1, v112) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 664), &qword_1011D2EB8);
      v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
      v115 = *(_QWORD *)(v0 + 848);
      v116 = *(_QWORD *)(v0 + 632);
      v117 = *(_QWORD *)(v0 + 584);
      v118 = sub_100A9BBC8(v116, v116);
      v119 = swift_allocObject(v118, ((*(unsigned __int8 *)(v115 + 80) + (unint64_t)*(unsigned int *)(v118 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(_QWORD *)(v115 + 72), *(unsigned __int8 *)(v115 + 80) | (unint64_t)*(unsigned __int16 *)(v118 + 52));
      v120 = static Array._adoptStorage(_:count:)(v119, 1);
      v114(v121, v117, v116);
      v122 = sub_10014273C(v120);
      *(_QWORD *)(v0 + 1192) = v122;
      *(_QWORD *)(v0 + 560) = v122;
      v123 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
      *(_QWORD *)(v0 + 1200) = v123;
      v124 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v124);
      *v123 = v0;
      v123[1] = sub_1009904A4;
      return MusicLibrary.add<A, B>(_:)(v0 + 560, v124, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
    }
    v132 = *(_QWORD *)(v0 + 656);
    v133 = *(_QWORD *)(v0 + 632);
    sub_1002ED50C(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v133);
    *(_QWORD *)(v0 + 1152) = v134;
    v135 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v132, 1, 1, v135);
    v136 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v136, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v133);
    *(_QWORD *)(inited + 40) = v138;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 1168) = v139;
    *(_QWORD *)(v0 + 1176) = v140;
    *(_WORD *)(v0 + 514) = v141;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v142 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v143);
    v80 = dispatch thunk of Actor.unownedExecutor.getter(v142, &protocol witness table for MainActor);
    v82 = v144;
    v83 = sub_1009902B0;
  }
  return swift_task_switch(v83, v80, v82);
}

uint64_t sub_10098F98C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[123];
  swift_release();
  sub_100A56630(0, (uint64_t)(v0 + 52));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[126] = v3;
  *v3 = v0;
  v3[1] = sub_10098FA10;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 52, v0[122], v0[123]);
}

uint64_t sub_10098FA10()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 416);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1008));
  sub_100365848(v1);
  return swift_task_switch(sub_100991A4C, 0, 0);
}

uint64_t sub_10098FA70(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[131] = v2;
  v3 = swift_task_alloc(48);
  v1[132] = v3;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = v1 + 27;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[133] = v4;
  *v4 = v1;
  v4[1] = sub_10098FB30;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 513, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100E4AA20, sub_1009919FC, v3, &type metadata for Bool);
}

uint64_t sub_10098FB30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1056);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1064));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10098FBA0, *(_QWORD *)(v1 + 1032), *(_QWORD *)(v1 + 1040));
}

uint64_t sub_10098FBA0()
{
  swift_release();
  return swift_task_switch(sub_10098FBDC, 0, 0);
}

uint64_t sub_10098FBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  sub_100064B4C(v0 + 216);
  sub_10004FF60(v1, &qword_1011D2FD0);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v10 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098FD54()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[135];
  swift_release();
  sub_100A56824(0, (uint64_t)(v0 + 45));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[138] = v3;
  *v3 = v0;
  v3[1] = sub_10098FDD8;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 45, v0[134], v0[135]);
}

uint64_t sub_10098FDD8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 360);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1104));
  sub_100365848(v1);
  return swift_task_switch(sub_10098FE38, 0, 0);
}

uint64_t sub_10098FE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10004FF60(*(_QWORD *)(v0 + 936), &qword_1011D2FD0);
  v1 = *(_QWORD *)(v0 + 928);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = *(_QWORD *)(v0 + 912);
  v4 = *(_QWORD *)(v0 + 904);
  v5 = *(_QWORD *)(v0 + 896);
  v6 = *(_QWORD *)(v0 + 888);
  v7 = *(_QWORD *)(v0 + 880);
  v8 = *(_QWORD *)(v0 + 856);
  v9 = *(_QWORD *)(v0 + 840);
  v11 = *(_QWORD *)(v0 + 832);
  v12 = *(_QWORD *)(v0 + 808);
  v13 = *(_QWORD *)(v0 + 800);
  v14 = *(_QWORD *)(v0 + 776);
  v15 = *(_QWORD *)(v0 + 752);
  v16 = *(_QWORD *)(v0 + 744);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 704);
  v19 = *(_QWORD *)(v0 + 688);
  v20 = *(_QWORD *)(v0 + 664);
  v21 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098FFA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[140];
  v2 = v0[139];
  v3 = v0[88];
  swift_release();
  sub_1009FF5F0(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_10099001C, 0, 0);
}

uint64_t sub_10099001C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 520));
  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 664);
  sub_10004A160(*(_QWORD *)(v0 + 624), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 664), &qword_1011D2EB8);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
    v5 = *(_QWORD *)(v0 + 848);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = *(_QWORD *)(v0 + 584);
    v8 = sub_100A9BBC8(v6, v6);
    v9 = swift_allocObject(v8, ((*(unsigned __int8 *)(v5 + 80) + (unint64_t)*(unsigned int *)(v8 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | (unint64_t)*(unsigned __int16 *)(v8 + 52));
    v10 = static Array._adoptStorage(_:count:)(v9, 1);
    v4(v11, v7, v6);
    v12 = sub_10014273C(v10);
    *(_QWORD *)(v0 + 1192) = v12;
    *(_QWORD *)(v0 + 560) = v12;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
    *(_QWORD *)(v0 + 1200) = v13;
    v14 = type metadata accessor for Array(0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
    *v13 = v0;
    v13[1] = sub_1009904A4;
    return MusicLibrary.add<A, B>(_:)(v0 + 560, v14, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 656);
    v18 = *(_QWORD *)(v0 + 632);
    sub_1002ED50C(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v18);
    *(_QWORD *)(v0 + 1152) = v19;
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    v21 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v21, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v18);
    *(_QWORD *)(inited + 40) = v23;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 1168) = v24;
    *(_QWORD *)(v0 + 1176) = v25;
    *(_WORD *)(v0 + 514) = v26;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v27 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v28);
    v29 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009902B0, v29, v30);
  }
}

uint64_t sub_1009902B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 1176);
  v2 = *(_QWORD *)(v0 + 1168);
  v3 = *(void **)(v0 + 1160);
  v4 = *(_QWORD *)(v0 + 1152);
  v5 = *(_QWORD *)(v0 + 1144);
  v6 = *(uint64_t **)(v0 + 688);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(unsigned __int16 *)(v0 + 514);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_10099038C, 0, 0);
}

uint64_t sub_10099038C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t WitnessTable;

  sub_10005B748(v0[86], type metadata accessor for Actions.MetricsReportingContext);
  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[121];
  v2 = v0[106];
  v3 = v0[79];
  v4 = v0[73];
  v5 = sub_100A9BBC8(v3, v3);
  v6 = swift_allocObject(v5, ((*(unsigned __int8 *)(v2 + 80) + (unint64_t)*(unsigned int *)(v5 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72), *(unsigned __int8 *)(v2 + 80) | (unint64_t)*(unsigned __int16 *)(v5 + 52));
  v7 = static Array._adoptStorage(_:count:)(v6, 1);
  v1(v8, v4, v3);
  v9 = sub_10014273C(v7);
  v0[149] = v9;
  v0[70] = v9;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  v0[150] = v10;
  v11 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v11);
  *v10 = v0;
  v10[1] = sub_1009904A4;
  return MusicLibrary.add<A, B>(_:)(v0 + 70, v11, v0[79], WitnessTable, v0[80]);
}

uint64_t sub_1009904A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1200);
  *(_QWORD *)(*(_QWORD *)v1 + 1208) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v3 = sub_100990530;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_100991A4C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100990530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v11 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  sub_10004FF60(v1, &qword_1011D2FD0);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009906A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 79) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v22 = *(_QWORD *)(v7 + 64);
  v9 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v9);
  swift_release();
  v11 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v4, v10);
    v12 = *(unsigned __int8 *)(v11 + 48);
    if (v12 != 255)
      sub_100064AA4(*(id *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), v12);
    if (*(_QWORD *)(v11 + 56))
      swift_release();
  }
  v13 = (v8 + v6 + 40) & ~v8;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v5));
  if (*(_QWORD *)(v0 + v6 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v6));
  v14 = v0 + v13;
  v15 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v0 + v13, 1, v15))
  {
    if (*(_QWORD *)(v14 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v16 = v14 + *(int *)(v15 + 20);
    v17 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v16 + *(int *)(v17 + 24);
      v19 = type metadata accessor for URL(0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v13 + v22);
}

uint64_t sub_1009908F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0[2] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8) + 80);
  v9 = v8 + v7 + 40;
  v10 = v0[5];
  v11 = v0[6];
  v12 = (uint64_t)v0 + v3;
  v13 = *(_QWORD *)((char *)v0 + v4);
  v14 = (uint64_t)v0 + v5;
  v15 = (uint64_t)v0 + v6;
  v16 = (uint64_t)v0 + v7;
  v17 = (uint64_t)v0 + (v9 & ~v8);
  v18 = (_QWORD *)swift_task_alloc(dword_1011D2F1C);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_10005AEE4;
  return sub_10098DA40(v10, v11, v12, v13, v14, v15, v16, v17);
}

BOOL sub_100990A08(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  size_t *v25;
  size_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v35;
  char *v36;
  size_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a3;
  v38 = a2;
  v4 = sub_100007E8C(&qword_1011D2FD0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for MusicLibrary.AddAction(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D2F58);
  v39 = *(_QWORD *)(v17 - 8);
  v40 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.add.getter(v20);
  v21 = type metadata accessor for Track(0);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v16, v21, v13, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011D2FD0);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v22(v12, v6, v7);
    v23 = v36;
    v24 = v7;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v36, v12, v7);
    v25 = v37;
    v26 = *v37;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v37);
    *v25 = v26;
    v28 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v26 = sub_1009B96E8(0, *(_QWORD *)(v26 + 16) + 1, 1, (char *)v26);
      *v25 = v26;
    }
    v30 = *(_QWORD *)(v26 + 16);
    v29 = *(_QWORD *)(v26 + 24);
    if (v30 >= v29 >> 1)
    {
      v26 = sub_1009B96E8(v29 > 1, v30 + 1, 1, (char *)v26);
      *v37 = v26;
    }
    *(_QWORD *)(v26 + 16) = v30 + 1;
    v22((char *)(v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30), v28, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v24);
  }
  v31 = sub_10098D5CC();
  v33 = v32 == 1;
  sub_10013B670(v31, v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v40);
  return v33;
}

uint64_t MusicLibrary.SupportedStatus<>.unaddableReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D2F58);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v21 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v2, v4, v13);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v16(v15, v7, v8);
    v16(v11, v15, v8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) == enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
      v17 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
      v18 = *(_QWORD *)(v17 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v11, v17);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v20 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
}

uint64_t sub_100990EEC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100990F58, v5, v6);
}

uint64_t sub_100990F58()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 40) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_10098C6E4();
    v5(v0 + 40, &type metadata for ActionType, v6, ObjectType, v3);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100990FDC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100991000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D2F3C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10005AEE4;
  return sub_100990EEC(v2, v3);
}

uint64_t sub_100991050(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100169E9C;
  return v4();
}

uint64_t sub_1009910A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009910CC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1011D2F4C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return ((uint64_t (*)(int *))((char *)&dword_1011D2F48 + dword_1011D2F48))(v2);
}

uint64_t Actions.AddToLibrary.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x4C206F7420646441, 0xEE00797261726269);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.AddToLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E8C80, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1010E8CA8, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10098C424;
}

uint64_t (*sub_10099131C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E8E38, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1010E8E60, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10098C9EC;
}

uint64_t sub_100991394()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1009913BC()
{
  unint64_t result;

  result = qword_1011D2FB0;
  if (!qword_1011D2FB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Album.ChildrenAddStatus, &type metadata for Album.ChildrenAddStatus);
    atomic_store(result, (unint64_t *)&qword_1011D2FB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary()
{
  return &type metadata for Actions.AddToLibrary;
}

uint64_t _s12AddToLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t _s12AddToLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *_s12AddToLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12AddToLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary.Context()
{
  return &type metadata for Actions.AddToLibrary.Context;
}

_BYTE *initializeBufferWithCopyOfBuffer for Library.ContentFilterOption(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s17ChildrenAddStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10099166C + 4 * byte_100EDABF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1009916A0 + 4 * asc_100EDABF0[v4]))();
}

uint64_t sub_1009916A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009916A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009916B0);
  return result;
}

uint64_t sub_1009916BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009916C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1009916C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009916D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Album.ChildrenAddStatus()
{
  return &type metadata for Album.ChildrenAddStatus;
}

BOOL sub_1009916F4(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];
  uint64_t v48;

  v43 = a2;
  v44 = a3;
  v4 = type metadata accessor for Track(0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v40 = (char *)&v35 - v8;
  v9 = sub_100007E8C(&qword_1011D2F70);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D2F60);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v10;
  v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v37(v12, a1, v9, v14);
  v17 = sub_100991A08(&qword_1011D2FE0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v38 = v12;
  dispatch thunk of Sequence.makeIterator()(v9, v17);
  v18 = &v16[*(int *)(v13 + 36)];
  v19 = sub_100991A08((unint64_t *)&qword_1011D2F78, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v36 = v16;
  v20 = v40;
  while (1)
  {
    v21 = *(_QWORD *)v18;
    dispatch thunk of Collection.endIndex.getter(v47, v9, v19);
    v45 = v47[0];
    v46 = v21;
    if (v21 == v47[0])
    {
LABEL_5:
      v33 = (uint64_t)v16;
      goto LABEL_7;
    }
    v22 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v47, v18, v9, v19);
    v23 = v41;
    v24 = v9;
    v25 = v18;
    v26 = v16;
    v27 = v42;
    (*(void (**)(char *))(v41 + 16))(v20);
    v22(v47, 0);
    v28 = v38;
    v29 = v26;
    v18 = v25;
    v9 = v24;
    ((void (*)(char *, char *, uint64_t))v37)(v38, v29, v24);
    dispatch thunk of Collection.formIndex(after:)(v18, v24, v19);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v24);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v6, v20, v27);
    v30 = v48;
    v31 = sub_100990A08((uint64_t)v6, v43, v44);
    v48 = v30;
    if (v30)
      break;
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v27);
    v16 = v36;
    if (v32)
      goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v27);
  v33 = (uint64_t)v36;
LABEL_7:
  sub_10004FF60(v33, &qword_1011D2F60);
  return v46 != v45;
}

uint64_t sub_1009919BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1009919FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100A74C3C(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100991A08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100044B54(&qword_1011D2F70);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double static Actions.AddToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 2;
  *(_QWORD *)(a2 + 56) = sub_10098CA8C;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1011D2FE8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1011D2FF0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t (*Actions.AddToPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E8EE0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_1010E8F08, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_10098C424;
}

uint64_t (*sub_100991B7C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9008, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_1010E9030, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_10098C9EC;
}

double Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v13;
  double result;
  _OWORD v15[2];
  __int128 v16;

  sub_1009967EC(a1, a2, a3, a4, a5, a6, a7, a8, (unint64_t (**)())v15, a10, a11, a12);
  swift_release();
  v13 = v15[1];
  *a9 = v15[0];
  a9[1] = v13;
  result = *(double *)&v16;
  a9[2] = v16;
  return result;
}

unint64_t sub_100991C60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  __n128 v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  __n128 v45;
  void (*v46)(char *, uint64_t, __n128);
  int v47;
  int v48;
  void (*v49)(char *, uint64_t);
  int v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v59 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v57 = *(_QWORD *)(v59 - 8);
  v2 = __chkstk_darwin(v59);
  v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v56 = (char *)&v53 - v4;
  v5 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v53 - v10;
  v12 = sub_100007E8C(&qword_1011D2F58);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v54 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v55 = (char *)&v53 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v53 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21 = a1;
  v20((char *)&v53 - v18, a1, v12);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v19, v12);
  if (v22 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v22 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      if (qword_1011D1B60 != -1)
        swift_once(&qword_1011D1B60, sub_100A01630);
      v32 = type metadata accessor for Logger(0);
      sub_100048B14(v32, (uint64_t)static Logger.actions);
      v33 = v55;
      v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v55, v21, v12);
      v35 = Logger.logObject.getter(v34);
      v37 = static os_log_type_t.fault.getter(v36);
      if (os_log_type_enabled(v35, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v60 = v39;
        *(_DWORD *)v38 = 136315138;
        v40 = v54;
        v20(v54, (uint64_t)v33, v12);
        v41 = (char *)String.init<A>(describing:)(v40, v12);
        v42 = v33;
        v44 = v43;
        *(_QWORD *)(v38 + 4) = sub_10099627C(v41, v43, &v60);
        v45 = swift_bridgeObjectRelease(v44);
        v46 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        v46(v42, v12, v45);
        _os_log_impl((void *)&_mh_execute_header, v35, v37, "Unknown status=%s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);
      }
      else
      {
        v46 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        ((void (*)(char *, uint64_t))v46)(v33, v12);
      }

      v31 = 0x206E776F6E6B6E55;
      ((void (*)(char *, uint64_t))v46)(v19, v12);
      return v31;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v19, v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v19, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v23 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
  {
    v47 = v23;
    if (v23 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
    {
      v31 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v31;
    }
    if (v23 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      goto LABEL_27;
    v48 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
    v49 = *(void (**)(char *, uint64_t))(v6 + 8);
    v49(v11, v5);
    if (v47 != v48)
    {
      v31 = 0x206E776F6E6B6E55;
      v49(v9, v5);
      return v31;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
  v25 = v56;
  v24 = v57;
  v26 = v9;
  v27 = v59;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v26, v59);
  v28 = v58;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v58, v25, v27);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v28, v27);
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
    goto LABEL_26;
  v30 = v29;
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
    goto LABEL_26;
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001CLL;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001ELL;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000014;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000025;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
  {
LABEL_26:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0;
  }
  if (v29 == enum case for MusicLibrary.AddStatus.UnaddableReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000016;
  }
  else
  {
    v31 = 0x206E776F6E6B6E55;
    v51 = enum case for MusicLibrary.AddStatus.UnaddableReason.unknown(_:);
    v52 = *(void (**)(char *, uint64_t))(v24 + 8);
    v52(v25, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    if (v30 != v51)
      v52(v28, v27);
  }
  return v31;
}

uint64_t sub_100992364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[48] = v17;
  v8[49] = v18;
  v8[46] = a7;
  v8[47] = a8;
  v8[44] = a5;
  v8[45] = a6;
  v8[42] = a3;
  v8[43] = a4;
  v8[40] = a1;
  v8[41] = a2;
  v9 = sub_100007E8C(&qword_1011D2F68);
  v8[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2F70);
  v8[51] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[52] = v11;
  v8[53] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D2FD0);
  v8[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[55] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[56] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[57] = swift_task_alloc(v15);
  v8[58] = swift_task_alloc(v15);
  v8[59] = swift_task_alloc(v15);
  return swift_task_switch(sub_100992468, 0, 0);
}

uint64_t sub_100992468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  __n128 v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 432);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 432), &qword_1011D2FD0);
    v4 = (_QWORD *)swift_task_alloc(dword_1011D2FFC);
    *(_QWORD *)(v0 + 480) = v4;
    *v4 = v0;
    v4[1] = sub_10099294C;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 360));
  }
  v6 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 448);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, *(_QWORD *)(v0 + 432), v8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v10(v6, v7, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v6, v8);
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
  {
    v12 = *(_QWORD **)(v0 + 328);
    v13 = v12[3];
    *(_QWORD *)(v0 + 488) = v13;
    *(_QWORD *)(v0 + 496) = v12[4];
    *(_QWORD *)(v0 + 504) = sub_100007E68(v12, v13);
    v14 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v15);
    v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
    v18 = v17;
    v19 = sub_100992A90;
    return swift_task_switch(v19, v16, v18);
  }
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
  {
    sub_10004A160(*(_QWORD *)(v0 + 336), v0 + 88, &qword_1011D2F20);
    if (*(_QWORD *)(v0 + 144) == 1)
    {
      v20 = *(_QWORD **)(v0 + 328);
      sub_10004FF60(v0 + 88, &qword_1011D2F20);
      v21 = v20[3];
      *(_QWORD *)(v0 + 528) = v21;
      *(_QWORD *)(v0 + 536) = v20[4];
      *(_QWORD *)(v0 + 544) = sub_100007E68(v20, v21);
      v22 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 552) = static MainActor.shared.getter(v23);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
      v18 = v24;
      v19 = sub_100992BF8;
      return swift_task_switch(v19, v16, v18);
    }
    sub_100064EF0(v0 + 88, v0 + 16);
    v28 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 568) = v28;
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v29);
    v30 = dispatch thunk of Actor.unownedExecutor.getter(v28, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 584) = v30;
    *(_QWORD *)(v0 + 592) = v31;
    return swift_task_switch(sub_100992CDC, v30, v31);
  }
  else
  {
    if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v25 = *(_QWORD *)(v0 + 472);
      v26 = *(_QWORD *)(v0 + 440);
      v27 = *(_QWORD *)(v0 + 448);
      *(_OWORD *)(v0 + 272) = 0u;
      *(_OWORD *)(v0 + 288) = 0u;
      *(_QWORD *)(v0 + 304) = 0;
      *(_BYTE *)(v0 + 312) = -2;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 272);
      sub_1002A4CE4(v0 + 272);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    else
    {
      if (qword_1011D1B60 != -1)
        swift_once(&qword_1011D1B60, sub_100A01630);
      v32 = *(_QWORD *)(v0 + 472);
      v33 = *(_QWORD *)(v0 + 456);
      v34 = *(_QWORD *)(v0 + 440);
      v35 = type metadata accessor for Logger(0);
      sub_100048B14(v35, (uint64_t)static Logger.actions);
      v36 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v33, v32, v34);
      v37 = Logger.logObject.getter(v36);
      v39 = static os_log_type_t.fault.getter(v38);
      v40 = os_log_type_enabled(v37, v39);
      v41 = *(_QWORD *)(v0 + 472);
      v43 = *(_QWORD *)(v0 + 448);
      v42 = *(_QWORD *)(v0 + 456);
      v44 = *(_QWORD *)(v0 + 440);
      if (v40)
      {
        v45 = swift_slowAlloc(12, -1);
        v46 = swift_slowAlloc(32, -1);
        v57 = v46;
        *(_DWORD *)v45 = 136315138;
        v47 = sub_100048748(&qword_1011D2FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v48 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v44, v47);
        *(_QWORD *)(v45 + 4) = sub_10099627C(v48, v49, &v57);
        v50 = swift_bridgeObjectRelease();
        v51 = *(void (**)(uint64_t, uint64_t, __n128))(v43 + 8);
        v51(v42, v44, v50);
        _os_log_impl((void *)&_mh_execute_header, v37, v39, "Unhandled unaddableReason=%s", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v45, -1, -1);

      }
      else
      {

        v51 = *(void (**)(uint64_t, uint64_t, __n128))(v43 + 8);
        ((void (*)(uint64_t, uint64_t))v51)(v42, v44);
      }
      ((void (*)(uint64_t, uint64_t))v51)(v41, v44);
      ((void (*)(_QWORD, _QWORD))v51)(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    }
    v52 = *(_QWORD *)(v0 + 464);
    v53 = *(_QWORD *)(v0 + 456);
    v55 = *(_QWORD *)(v0 + 424);
    v54 = *(_QWORD *)(v0 + 432);
    v56 = *(_QWORD *)(v0 + 400);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10099294C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  return swift_task_switch(sub_1009929A0, 0, 0);
}

uint64_t sub_1009929A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int *v8;

  v1 = v0[51];
  v2 = v0[52];
  v3 = v0[50];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v4, &protocol witness table for Track);
    sub_10004FF60(v3, &qword_1011D2F68);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[53], v3, v1);
  }
  v5 = *(int **)(v0[49] + 8);
  v8 = (int *)((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc(v5[1]);
  v0[78] = v6;
  *v6 = v0;
  v6[1] = sub_100992EE4;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v8)(v0[53], v0[43], v0[45], v0[47], v0[48], v0[46], v0[49]);
}

uint64_t sub_100992A90()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[62];
  swift_release();
  sub_100A56824(0, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[65] = v3;
  *v3 = v0;
  v3[1] = sub_100992B10;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[61], v0[62]);
}

uint64_t sub_100992B10()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  sub_100365848(v1);
  return swift_task_switch(sub_100992B70, 0, 0);
}

uint64_t sub_100992B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100992BF8()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release();
  sub_100A56630(2, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_100992C7C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[66], v0[67]);
}

uint64_t sub_100992C7C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_100365848(v1);
  return swift_task_switch(sub_100997168, 0, 0);
}

uint64_t sub_100992CDC(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_100992DA0;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 313, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100E4AA20, sub_1009919FC, v3, &type metadata for Bool);
}

uint64_t sub_100992DA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100992E10, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_100992E10()
{
  swift_release();
  return swift_task_switch(sub_100992E4C, 0, 0);
}

uint64_t sub_100992E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  sub_100064B4C(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100992EE4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 624));
  return swift_task_switch(sub_100992F38, 0, 0);
}

uint64_t sub_100992F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 8))(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 408));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MusicPlaylistAddable.tracks.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v5 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v7);
  v3[9] = swift_task_alloc(v7);
  v8 = sub_100007E8C(&qword_1011D3000);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Entry(0);
  v3[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[12] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v11);
  v3[14] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_1011D3008);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Track(0);
  v3[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[17] = v14;
  v3[18] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011D3010);
  v3[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicVideo(0);
  v3[20] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[21] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v18);
  v3[23] = swift_task_alloc(v18);
  v19 = sub_100007E8C(&qword_1011D3018);
  v3[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Song(0);
  v3[25] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[26] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[27] = swift_task_alloc(v22);
  v3[28] = swift_task_alloc(v22);
  v23 = sub_100007E8C(&qword_1011D2F70);
  v3[29] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[30] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[31] = swift_task_alloc(v25);
  v3[32] = swift_task_alloc(v25);
  v26 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2F68) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v26);
  v3[34] = swift_task_alloc(v26);
  v3[35] = swift_task_alloc(v26);
  v27 = sub_100007E8C(&qword_1011D6830);
  v3[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Playlist(0);
  v3[37] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[38] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[39] = swift_task_alloc(v30);
  v3[40] = swift_task_alloc(v30);
  v3[41] = swift_task_alloc(v30);
  v31 = sub_100007E8C(&qword_1011D2FC8);
  v3[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(a2 - 8);
  v3[43] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[44] = swift_task_alloc(v33);
  v3[45] = swift_task_alloc(v33);
  v3[46] = swift_task_alloc(v33);
  v3[47] = swift_task_alloc(v33);
  v3[48] = swift_task_alloc(v33);
  v3[49] = swift_task_alloc(v33);
  v3[50] = swift_task_alloc(v33);
  v3[51] = swift_task_alloc(v33);
  v34 = type metadata accessor for Album(0);
  v3[52] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v3[53] = v35;
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[54] = swift_task_alloc(v36);
  v3[55] = swift_task_alloc(v36);
  return swift_task_switch(sub_10099334C, 0, 0);
}

uint64_t sub_10099334C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  __n128 v153;
  os_log_type_t v154;
  _BOOL4 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  __n128 v168;
  void (*v169)(uint64_t, uint64_t, __n128);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 344) + 16);
  *(_QWORD *)(v0 + 448) = v7;
  v7(v3, v5, v6);
  v8 = swift_dynamicCast(v4, v3, v6, v1, 6);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 416);
    v12 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 336);
    v9(v13, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v13, v11);
    v14 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100EA7A90;
    sub_100007E8C(&qword_1011D3040);
    v16 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v206 = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v0 + 456) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v0 + 464) = v18;
    v19 = sub_100048748(&qword_1011D3048, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    *v18 = v0;
    v18[1] = sub_100994038;
    return MusicItem<>.with(_:)(*(_QWORD *)(v0 + 432), v17, *(_QWORD *)(v0 + 416), &protocol witness table for Album, &protocol witness table for Album, v19);
  }
  v21 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 336);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  v27 = *(_QWORD *)(v0 + 32);
  v26 = *(_QWORD *)(v0 + 40);
  v9(v22, 1, 1, *(_QWORD *)(v0 + 416));
  sub_10004FF60(v22, &qword_1011D2FC8);
  v7(v21, v26, v27);
  v28 = swift_dynamicCast(v25, v21, v27, v23, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v28)
  {
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_QWORD *)(v0 + 288);
    v29(v33, 0, 1, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v33, v31);
    v34 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    *(_QWORD *)(v0 + 480) = v34;
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v0 + 488) = sub_100007E8C(&qword_1011D3030);
    v36 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v35 + 32) = v36;
    v206 = v35;
    specialized Array._endMutation()(v36);
    *(_QWORD *)(v0 + 496) = v35;
    v37 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 504) = v37;
    *v37 = v0;
    v37[1] = sub_1009942BC;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 320), v35, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
  }
  v38 = *(_QWORD *)(v0 + 392);
  v39 = *(_QWORD *)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 32);
  v43 = *(_QWORD *)(v0 + 40);
  v29(v39, 1, 1, *(_QWORD *)(v0 + 296));
  sub_10004FF60(v39, &qword_1011D6830);
  v7(v38, v43, v44);
  v45 = swift_dynamicCast(v42, v38, v44, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if (v45)
  {
    v47 = *(_QWORD *)(v0 + 240);
    v203 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 224);
    v49 = *(_QWORD *)(v0 + 200);
    v50 = *(_QWORD *)(v0 + 208);
    v51 = *(_QWORD *)(v0 + 192);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v46(v51, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v51, v49);
    v55 = sub_100007E8C(&qword_1011D3028);
    v56 = *(unsigned __int8 *)(v52 + 80);
    v57 = (v56 + 32) & ~v56;
    v58 = swift_allocObject(v55, v57 + *(_QWORD *)(v52 + 72), v56 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_100EA7AA0;
    v59 = v58 + v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.song(_:);
  }
  else
  {
    v61 = *(_QWORD *)(v0 + 384);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 168);
    v65 = *(_QWORD *)(v0 + 152);
    v67 = *(_QWORD *)(v0 + 32);
    v66 = *(_QWORD *)(v0 + 40);
    v46(v62, 1, 1, *(_QWORD *)(v0 + 200));
    sub_10004FF60(v62, &qword_1011D3018);
    v7(v61, v66, v67);
    v68 = swift_dynamicCast(v65, v61, v67, v63, 6);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    if (!v68)
    {
      v87 = *(_QWORD *)(v0 + 376);
      v88 = *(_QWORD *)(v0 + 152);
      v89 = *(_QWORD *)(v0 + 128);
      v90 = *(_QWORD *)(v0 + 136);
      v91 = *(_QWORD *)(v0 + 120);
      v93 = *(_QWORD *)(v0 + 32);
      v92 = *(_QWORD *)(v0 + 40);
      v69(v88, 1, 1, *(_QWORD *)(v0 + 160));
      sub_10004FF60(v88, &qword_1011D3010);
      v7(v87, v92, v93);
      v94 = swift_dynamicCast(v91, v87, v93, v89, 6);
      v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
      if (v94)
      {
        v96 = *(_QWORD *)(v0 + 232);
        v97 = *(_QWORD *)(v0 + 240);
        v99 = *(_QWORD *)(v0 + 136);
        v98 = *(_QWORD *)(v0 + 144);
        v101 = *(_QWORD *)(v0 + 120);
        v100 = *(_QWORD *)(v0 + 128);
        v102 = *(_QWORD *)(v0 + 24);
        v95(v101, 0, 1, v100);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v98, v101, v100);
        v103 = sub_100007E8C(&qword_1011D3028);
        v104 = *(unsigned __int8 *)(v99 + 80);
        v105 = (v104 + 32) & ~v104;
        v106 = swift_allocObject(v103, v105 + *(_QWORD *)(v99 + 72), v104 | 7);
        *(_OWORD *)(v106 + 16) = xmmword_100EA7AA0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v106 + v105, v98, v100);
        MusicItemCollection.init(arrayLiteral:)(v106, v100, &protocol witness table for Track);
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56);
        v75 = v102;
        v76 = 0;
      }
      else
      {
        v107 = *(_QWORD *)(v0 + 368);
        v108 = *(_QWORD *)(v0 + 120);
        v109 = *(_QWORD *)(v0 + 88);
        v110 = *(_QWORD *)(v0 + 96);
        v111 = *(_QWORD *)(v0 + 80);
        v113 = *(_QWORD *)(v0 + 32);
        v112 = *(_QWORD *)(v0 + 40);
        v95(v108, 1, 1, *(_QWORD *)(v0 + 128));
        sub_10004FF60(v108, &qword_1011D3008);
        v7(v107, v112, v113);
        v114 = swift_dynamicCast(v111, v107, v113, v109, 6);
        v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
        if (v114)
        {
          v116 = *(_QWORD *)(v0 + 112);
          v117 = *(_QWORD *)(v0 + 88);
          v118 = *(_QWORD *)(v0 + 96);
          v120 = *(_QWORD *)(v0 + 72);
          v119 = *(_QWORD *)(v0 + 80);
          v121 = *(_QWORD *)(v0 + 48);
          v122 = *(_QWORD *)(v0 + 56);
          v115(v119, 0, 1, v117);
          v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 32))(v116, v119, v117);
          Playlist.Entry.internalItem.getter(v123);
          v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 88))(v120, v121);
          if (v124 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
          {
            v201 = *(_QWORD *)(v0 + 240);
            v203 = *(_QWORD *)(v0 + 232);
            v125 = *(_QWORD *)(v0 + 168);
            v126 = *(_QWORD *)(v0 + 176);
            v127 = *(_QWORD *)(v0 + 160);
            v129 = *(_QWORD *)(v0 + 128);
            v128 = *(_QWORD *)(v0 + 136);
            v130 = *(_QWORD *)(v0 + 96);
            v195 = *(_QWORD *)(v0 + 88);
            v198 = *(_QWORD *)(v0 + 112);
            v131 = *(_QWORD *)(v0 + 72);
            v132 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v131, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v126, v131, v127);
            v133 = sub_100007E8C(&qword_1011D3028);
            v134 = *(unsigned __int8 *)(v128 + 80);
            v135 = (v134 + 32) & ~v134;
            v136 = swift_allocObject(v133, v135 + *(_QWORD *)(v128 + 72), v134 | 7);
            *(_OWORD *)(v136 + 16) = xmmword_100EA7AA0;
            v137 = v136 + v135;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v137, v126, v127);
            v138 = (unsigned int *)&enum case for Track.musicVideo(_:);
          }
          else
          {
            if (v124 != enum case for Playlist.Entry.InternalItem.song(_:))
            {
              if (qword_1011D1B60 != -1)
                swift_once(&qword_1011D1B60, sub_100A01630);
              v146 = *(_QWORD *)(v0 + 104);
              v147 = *(_QWORD *)(v0 + 112);
              v148 = *(_QWORD *)(v0 + 88);
              v149 = *(_QWORD *)(v0 + 96);
              v150 = type metadata accessor for Logger(0);
              sub_100048B14(v150, (uint64_t)static Logger.actions);
              v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v146, v147, v148);
              v152 = Logger.logObject.getter(v151);
              v154 = static os_log_type_t.fault.getter(v153);
              v155 = os_log_type_enabled(v152, v154);
              v157 = *(_QWORD *)(v0 + 104);
              v156 = *(_QWORD *)(v0 + 112);
              v159 = *(_QWORD *)(v0 + 88);
              v158 = *(_QWORD *)(v0 + 96);
              if (v155)
              {
                v160 = *(_QWORD *)(v0 + 64);
                v199 = *(_QWORD *)(v0 + 56);
                v205 = *(_QWORD *)(v0 + 112);
                v161 = *(_QWORD *)(v0 + 48);
                v162 = swift_slowAlloc(12, -1);
                v202 = swift_slowAlloc(32, -1);
                v206 = v202;
                *(_DWORD *)v162 = 136315138;
                v196 = v158;
                Playlist.Entry.internalItem.getter(v202);
                v163 = sub_100048748(&qword_1011D3020, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
                v164 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v161, v163);
                v165 = v159;
                v167 = v166;
                (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v160, v161);
                *(_QWORD *)(v162 + 4) = sub_10099627C(v164, v167, &v206);
                v168 = swift_bridgeObjectRelease(v167);
                v169 = *(void (**)(uint64_t, uint64_t, __n128))(v196 + 8);
                v169(v157, v165, v168);
                _os_log_impl((void *)&_mh_execute_header, v152, v154, "Unsupported Playlist.Entry.InternalItem=%s", (uint8_t *)v162, 0xCu);
                swift_arrayDestroy(v202, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v202, -1, -1);
                swift_slowDealloc(v162, -1, -1);

                v170 = v205;
                v171 = v165;
              }
              else
              {

                v169 = *(void (**)(uint64_t, uint64_t, __n128))(v158 + 8);
                ((void (*)(uint64_t, uint64_t))v169)(v157, v159);
                v170 = v156;
                v171 = v159;
              }
              ((void (*)(uint64_t, uint64_t))v169)(v170, v171);
              v172 = *(_QWORD *)(v0 + 72);
              v173 = *(_QWORD *)(v0 + 48);
              v174 = *(_QWORD *)(v0 + 56);
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
              (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v172, v173);
              goto LABEL_12;
            }
            v201 = *(_QWORD *)(v0 + 240);
            v203 = *(_QWORD *)(v0 + 232);
            v125 = *(_QWORD *)(v0 + 208);
            v126 = *(_QWORD *)(v0 + 216);
            v127 = *(_QWORD *)(v0 + 200);
            v129 = *(_QWORD *)(v0 + 128);
            v128 = *(_QWORD *)(v0 + 136);
            v130 = *(_QWORD *)(v0 + 96);
            v195 = *(_QWORD *)(v0 + 88);
            v198 = *(_QWORD *)(v0 + 112);
            v142 = *(_QWORD *)(v0 + 72);
            v132 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v142, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v126, v142, v127);
            v143 = sub_100007E8C(&qword_1011D3028);
            v144 = *(unsigned __int8 *)(v128 + 80);
            v145 = (v144 + 32) & ~v144;
            v136 = swift_allocObject(v143, v145 + *(_QWORD *)(v128 + 72), v144 | 7);
            *(_OWORD *)(v136 + 16) = xmmword_100EA7AA0;
            v137 = v136 + v145;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v137, v126, v127);
            v138 = (unsigned int *)&enum case for Track.song(_:);
          }
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v128 + 104))(v137, *v138, v129);
          MusicItemCollection.init(arrayLiteral:)(v136, v129, &protocol witness table for Track);
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v127);
          (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v198, v195);
          v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v201 + 56);
          v75 = v132;
          goto LABEL_10;
        }
        v96 = *(_QWORD *)(v0 + 232);
        v139 = *(_QWORD *)(v0 + 240);
        v140 = *(_QWORD *)(v0 + 80);
        v141 = *(_QWORD *)(v0 + 24);
        v115(v140, 1, 1, *(_QWORD *)(v0 + 88));
        sub_10004FF60(v140, &qword_1011D3000);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56);
        v75 = v141;
        v76 = 1;
      }
      v77 = v96;
      goto LABEL_11;
    }
    v47 = *(_QWORD *)(v0 + 240);
    v203 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 184);
    v49 = *(_QWORD *)(v0 + 160);
    v50 = *(_QWORD *)(v0 + 168);
    v70 = *(_QWORD *)(v0 + 152);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v69(v70, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v70, v49);
    v71 = sub_100007E8C(&qword_1011D3028);
    v72 = *(unsigned __int8 *)(v52 + 80);
    v73 = (v72 + 32) & ~v72;
    v58 = swift_allocObject(v71, v73 + *(_QWORD *)(v52 + 72), v72 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_100EA7AA0;
    v59 = v58 + v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.musicVideo(_:);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v59, *v60, v53);
  MusicItemCollection.init(arrayLiteral:)(v58, v53, &protocol witness table for Track);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v75 = v54;
LABEL_10:
  v76 = 0;
  v77 = v203;
LABEL_11:
  v74(v75, v76, 1, v77);
LABEL_12:
  v78 = *(_QWORD *)(v0 + 432);
  v80 = *(_QWORD *)(v0 + 400);
  v79 = *(_QWORD *)(v0 + 408);
  v81 = *(_QWORD *)(v0 + 384);
  v82 = *(_QWORD *)(v0 + 392);
  v84 = *(_QWORD *)(v0 + 368);
  v83 = *(_QWORD *)(v0 + 376);
  v86 = *(_QWORD *)(v0 + 352);
  v85 = *(_QWORD *)(v0 + 360);
  v175 = *(_QWORD *)(v0 + 336);
  v176 = *(_QWORD *)(v0 + 328);
  v177 = *(_QWORD *)(v0 + 320);
  v178 = *(_QWORD *)(v0 + 312);
  v179 = *(_QWORD *)(v0 + 288);
  v180 = *(_QWORD *)(v0 + 280);
  v181 = *(_QWORD *)(v0 + 272);
  v182 = *(_QWORD *)(v0 + 264);
  v183 = *(_QWORD *)(v0 + 256);
  v184 = *(_QWORD *)(v0 + 248);
  v185 = *(_QWORD *)(v0 + 224);
  v186 = *(_QWORD *)(v0 + 216);
  v187 = *(_QWORD *)(v0 + 192);
  v188 = *(_QWORD *)(v0 + 184);
  v189 = *(_QWORD *)(v0 + 176);
  v190 = *(_QWORD *)(v0 + 152);
  v191 = *(_QWORD *)(v0 + 144);
  v192 = *(_QWORD *)(v0 + 120);
  v193 = *(_QWORD *)(v0 + 112);
  v194 = *(_QWORD *)(v0 + 104);
  v197 = *(_QWORD *)(v0 + 80);
  v200 = *(_QWORD *)(v0 + 72);
  v204 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v187);
  swift_task_dealloc(v188);
  swift_task_dealloc(v189);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v192);
  swift_task_dealloc(v193);
  swift_task_dealloc(v194);
  swift_task_dealloc(v197);
  swift_task_dealloc(v200);
  swift_task_dealloc(v204);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100994038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_10099565C;
  else
    v4 = sub_1009940A4;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009940A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 424);
  Album.tracks.getter();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 376);
  v14 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 360);
  v16 = *(_QWORD *)(v0 + 336);
  v17 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v36 = *(_QWORD *)(v0 + 80);
  v37 = *(_QWORD *)(v0 + 72);
  v38 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009942BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100994668;
  else
    v4 = sub_100994328;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100994328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = *(_QWORD *)(v1 + 280);
  v3 = *(_QWORD *)(v1 + 232);
  v4 = *(_QWORD *)(v1 + 240);
  Playlist.tracks.getter(a1);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v1 + 520) = v5;
  v6 = v5(v2, 1, v3);
  v7 = *(_QWORD *)(v1 + 280);
  if (v6 == 1)
  {
    v8 = sub_10004FF60(*(_QWORD *)(v1 + 280), &qword_1011D2F68);
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 232);
    v10 = *(_QWORD *)(v1 + 240);
    v11 = MusicItemCollection.hasNextBatch.getter(v9);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    *(_QWORD *)(v1 + 528) = v12;
    v8 = v12(v7, v9);
    if ((v11 & 1) != 0)
    {
      v13 = swift_allocObject(*(_QWORD *)(v1 + 480), 40, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100EA7A90;
      v14 = static PartialMusicProperty<A>.tracks.getter();
      v15 = MusicRelationshipProperty.limit(_:)(10000);
      swift_release(v14);
      *(_QWORD *)(v13 + 32) = v15;
      specialized Array._endMutation()(v16);
      *(_QWORD *)(v1 + 536) = v13;
      v17 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
      *(_QWORD *)(v1 + 544) = v17;
      *v17 = v1;
      v17[1] = sub_100994A98;
      return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v1 + 312), v13, *(_QWORD *)(v1 + 296), &protocol witness table for Playlist);
    }
  }
  v20 = *(_QWORD *)(v1 + 320);
  v19 = *(_QWORD *)(v1 + 328);
  v21 = *(_QWORD *)(v1 + 296);
  v22 = *(_QWORD *)(v1 + 304);
  Playlist.tracks.getter(v8);
  v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v23(v20, v21);
  v23(v19, v21);
  v24 = *(_QWORD *)(v1 + 432);
  v26 = *(_QWORD *)(v1 + 400);
  v25 = *(_QWORD *)(v1 + 408);
  v27 = *(_QWORD *)(v1 + 384);
  v28 = *(_QWORD *)(v1 + 392);
  v30 = *(_QWORD *)(v1 + 368);
  v29 = *(_QWORD *)(v1 + 376);
  v32 = *(_QWORD *)(v1 + 352);
  v31 = *(_QWORD *)(v1 + 360);
  v33 = *(_QWORD *)(v1 + 336);
  v34 = *(_QWORD *)(v1 + 328);
  v35 = *(_QWORD *)(v1 + 320);
  v36 = *(_QWORD *)(v1 + 312);
  v37 = *(_QWORD *)(v1 + 288);
  v38 = *(_QWORD *)(v1 + 280);
  v39 = *(_QWORD *)(v1 + 272);
  v40 = *(_QWORD *)(v1 + 264);
  v41 = *(_QWORD *)(v1 + 256);
  v42 = *(_QWORD *)(v1 + 248);
  v43 = *(_QWORD *)(v1 + 224);
  v44 = *(_QWORD *)(v1 + 216);
  v45 = *(_QWORD *)(v1 + 192);
  v46 = *(_QWORD *)(v1 + 184);
  v47 = *(_QWORD *)(v1 + 176);
  v48 = *(_QWORD *)(v1 + 152);
  v49 = *(_QWORD *)(v1 + 144);
  v50 = *(_QWORD *)(v1 + 120);
  v51 = *(_QWORD *)(v1 + 112);
  v52 = *(_QWORD *)(v1 + 104);
  v53 = *(_QWORD *)(v1 + 80);
  v54 = *(_QWORD *)(v1 + 72);
  v55 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 440));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100994668()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  v1 = *(_QWORD *)(v0 + 512);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v3 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v12 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 360);
    v58 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v61[0] = v15;
    *(_DWORD *)v14 = 136446466;
    v10(v12, v11, v13);
    v16 = (char *)String.init<A>(describing:)(v12, v13);
    v18 = v17;
    *(_QWORD *)(v14 + 4) = sub_10099627C(v16, v17, v61);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v58 + 8))(v11, v13, v19);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 16, v20);
    v23 = v22;
    *(_QWORD *)(v14 + 14) = sub_10099627C(v21, v22, v61);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 360);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v27 = *(_QWORD *)(v0 + 432);
  v29 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 384);
  v31 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 376);
  v35 = *(_QWORD *)(v0 + 352);
  v34 = *(_QWORD *)(v0 + 360);
  v37 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 328);
  v39 = *(_QWORD *)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 312);
  v41 = *(_QWORD *)(v0 + 288);
  v42 = *(_QWORD *)(v0 + 280);
  v43 = *(_QWORD *)(v0 + 272);
  v44 = *(_QWORD *)(v0 + 264);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 224);
  v48 = *(_QWORD *)(v0 + 216);
  v49 = *(_QWORD *)(v0 + 192);
  v50 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 176);
  v52 = *(_QWORD *)(v0 + 152);
  v53 = *(_QWORD *)(v0 + 144);
  v54 = *(_QWORD *)(v0 + 120);
  v55 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 104);
  v57 = *(_QWORD *)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 72);
  v60 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100994A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100994E6C;
  else
    v4 = sub_100994B08;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100994B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 520);
  v4 = *(_QWORD *)(v1 + 304);
  v3 = *(_QWORD *)(v1 + 312);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_QWORD *)(v1 + 272);
  v7 = *(_QWORD *)(v1 + 232);
  Playlist.tracks.getter(a1);
  v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v1 + 560) = v8;
  v8(v3, v5);
  v9 = v2(v6, 1, v7);
  v10 = *(_QWORD *)(v1 + 272);
  if (v9 == 1)
  {
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, *(_QWORD *)(v1 + 128), &protocol witness table for Track);
    sub_10004FF60(v10, &qword_1011D2F68);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 240) + 32))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 232));
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v1 + 232)) & 1) != 0)
  {
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v1 + 568) = v11;
    v12 = sub_100048748(&qword_1011D3038, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v11 = v1;
    v11[1] = sub_1009952AC;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v1 + 264), 10000, 0, *(_QWORD *)(v1 + 232), v12);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v1 + 560);
    v15 = *(_QWORD *)(v1 + 328);
    v16 = *(_QWORD *)(v1 + 296);
    v17 = *(_QWORD *)(v1 + 256);
    v18 = *(_QWORD *)(v1 + 232);
    v19 = *(_QWORD *)(v1 + 240);
    v20 = *(_QWORD *)(v1 + 24);
    v14(*(_QWORD *)(v1 + 320), v16);
    v14(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v20, v17, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v18);
    v21 = *(_QWORD *)(v1 + 432);
    v23 = *(_QWORD *)(v1 + 400);
    v22 = *(_QWORD *)(v1 + 408);
    v24 = *(_QWORD *)(v1 + 384);
    v25 = *(_QWORD *)(v1 + 392);
    v27 = *(_QWORD *)(v1 + 368);
    v26 = *(_QWORD *)(v1 + 376);
    v29 = *(_QWORD *)(v1 + 352);
    v28 = *(_QWORD *)(v1 + 360);
    v30 = *(_QWORD *)(v1 + 336);
    v31 = *(_QWORD *)(v1 + 328);
    v32 = *(_QWORD *)(v1 + 320);
    v33 = *(_QWORD *)(v1 + 312);
    v34 = *(_QWORD *)(v1 + 288);
    v35 = *(_QWORD *)(v1 + 280);
    v36 = *(_QWORD *)(v1 + 272);
    v37 = *(_QWORD *)(v1 + 264);
    v38 = *(_QWORD *)(v1 + 256);
    v39 = *(_QWORD *)(v1 + 248);
    v40 = *(_QWORD *)(v1 + 224);
    v41 = *(_QWORD *)(v1 + 216);
    v42 = *(_QWORD *)(v1 + 192);
    v43 = *(_QWORD *)(v1 + 184);
    v44 = *(_QWORD *)(v1 + 176);
    v45 = *(_QWORD *)(v1 + 152);
    v46 = *(_QWORD *)(v1 + 144);
    v47 = *(_QWORD *)(v1 + 120);
    v48 = *(_QWORD *)(v1 + 112);
    v49 = *(_QWORD *)(v1 + 104);
    v50 = *(_QWORD *)(v1 + 80);
    v51 = *(_QWORD *)(v1 + 72);
    v52 = *(_QWORD *)(v1 + 64);
    swift_task_dealloc(*(_QWORD *)(v1 + 440));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v25);
    swift_task_dealloc(v24);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100994E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
  v3(*(_QWORD *)(v0 + 320), v2);
  v3(v1, v2);
  v4 = *(_QWORD *)(v0 + 552);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v9 = type metadata accessor for Logger(0);
  sub_100048B14(v9, (uint64_t)static Logger.actions);
  v5(v6, v7, v8);
  swift_errorRetain(v4);
  v10 = swift_errorRetain(v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v15 = *(_QWORD *)(v0 + 352);
    v14 = *(_QWORD *)(v0 + 360);
    v61 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 32);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v64[0] = v18;
    *(_DWORD *)v17 = 136446466;
    v13(v15, v14, v16);
    v19 = (char *)String.init<A>(describing:)(v15, v16);
    v21 = v20;
    *(_QWORD *)(v17 + 4) = sub_10099627C(v19, v20, v64);
    v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t, __n128))(v61 + 8))(v14, v16, v22);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v4;
    swift_errorRetain(v4);
    v23 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v24 = (char *)String.init<A>(describing:)(v0 + 16, v23);
    v26 = v25;
    *(_QWORD *)(v17 + 14) = sub_10099627C(v24, v25, v64);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v4);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v30 = *(_QWORD *)(v0 + 432);
  v32 = *(_QWORD *)(v0 + 400);
  v31 = *(_QWORD *)(v0 + 408);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 376);
  v38 = *(_QWORD *)(v0 + 352);
  v37 = *(_QWORD *)(v0 + 360);
  v40 = *(_QWORD *)(v0 + 336);
  v41 = *(_QWORD *)(v0 + 328);
  v42 = *(_QWORD *)(v0 + 320);
  v43 = *(_QWORD *)(v0 + 312);
  v44 = *(_QWORD *)(v0 + 288);
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 272);
  v47 = *(_QWORD *)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 256);
  v49 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 152);
  v56 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = *(_QWORD *)(v0 + 104);
  v60 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 72);
  v63 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009952AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  *(_QWORD *)(*(_QWORD *)v1 + 576) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100995A8C;
  else
    v3 = sub_100995310;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100995310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 520))(v1, 1, v2) == 1)
  {
    sub_10004FF60(v1, &qword_1011D2F68);
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    v5 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 32))(v5, v1, v2);
    static MusicItemCollection.+= infix(_:_:)(v4, v5, v6, &protocol witness table for Track);
    v3(v5, v2);
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v7;
    v8 = sub_100048748(&qword_1011D3038, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v7 = v0;
    v7[1] = sub_1009952AC;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v8);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 24);
    v10(*(_QWORD *)(v0 + 320), v12);
    v10(v11, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v13, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 384);
    v21 = *(_QWORD *)(v0 + 392);
    v23 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 376);
    v25 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 360);
    v26 = *(_QWORD *)(v0 + 336);
    v27 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 320);
    v29 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 288);
    v31 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 192);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 104);
    v46 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 72);
    v48 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10099565C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
  v1 = *(_QWORD *)(v0 + 472);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v3 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v12 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 360);
    v58 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v61[0] = v15;
    *(_DWORD *)v14 = 136446466;
    v10(v12, v11, v13);
    v16 = (char *)String.init<A>(describing:)(v12, v13);
    v18 = v17;
    *(_QWORD *)(v14 + 4) = sub_10099627C(v16, v17, v61);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v58 + 8))(v11, v13, v19);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 16, v20);
    v23 = v22;
    *(_QWORD *)(v14 + 14) = sub_10099627C(v21, v22, v61);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 360);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v27 = *(_QWORD *)(v0 + 432);
  v29 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 384);
  v31 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 376);
  v35 = *(_QWORD *)(v0 + 352);
  v34 = *(_QWORD *)(v0 + 360);
  v37 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 328);
  v39 = *(_QWORD *)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 312);
  v41 = *(_QWORD *)(v0 + 288);
  v42 = *(_QWORD *)(v0 + 280);
  v43 = *(_QWORD *)(v0 + 272);
  v44 = *(_QWORD *)(v0 + 264);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 224);
  v48 = *(_QWORD *)(v0 + 216);
  v49 = *(_QWORD *)(v0 + 192);
  v50 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 176);
  v52 = *(_QWORD *)(v0 + 152);
  v53 = *(_QWORD *)(v0 + 144);
  v54 = *(_QWORD *)(v0 + 120);
  v55 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 104);
  v57 = *(_QWORD *)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 72);
  v60 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100995A8C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[2];

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD))(v0 + 528))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));
  v1(v2, v4);
  v1(v3, v4);
  v5 = *(_QWORD *)(v0 + 576);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v7 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = type metadata accessor for Logger(0);
  sub_100048B14(v10, (uint64_t)static Logger.actions);
  v6(v7, v8, v9);
  swift_errorRetain(v5);
  v11 = swift_errorRetain(v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v16 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 360);
    v62 = *(_QWORD *)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v65[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v14(v16, v15, v17);
    v20 = (char *)String.init<A>(describing:)(v16, v17);
    v22 = v21;
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, v65);
    v23 = swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v15, v17, v23);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v24 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v25 = (char *)String.init<A>(describing:)(v0 + 16, v24);
    v27 = v26;
    *(_QWORD *)(v18 + 14) = sub_10099627C(v25, v26, v65);
    swift_bridgeObjectRelease(v27);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 344);
    v30 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v31 = *(_QWORD *)(v0 + 432);
  v33 = *(_QWORD *)(v0 + 400);
  v32 = *(_QWORD *)(v0 + 408);
  v34 = *(_QWORD *)(v0 + 384);
  v35 = *(_QWORD *)(v0 + 392);
  v37 = *(_QWORD *)(v0 + 368);
  v36 = *(_QWORD *)(v0 + 376);
  v39 = *(_QWORD *)(v0 + 352);
  v38 = *(_QWORD *)(v0 + 360);
  v41 = *(_QWORD *)(v0 + 336);
  v42 = *(_QWORD *)(v0 + 328);
  v43 = *(_QWORD *)(v0 + 320);
  v44 = *(_QWORD *)(v0 + 312);
  v45 = *(_QWORD *)(v0 + 288);
  v46 = *(_QWORD *)(v0 + 280);
  v47 = *(_QWORD *)(v0 + 272);
  v48 = *(_QWORD *)(v0 + 264);
  v49 = *(_QWORD *)(v0 + 256);
  v50 = *(_QWORD *)(v0 + 248);
  v51 = *(_QWORD *)(v0 + 224);
  v52 = *(_QWORD *)(v0 + 216);
  v53 = *(_QWORD *)(v0 + 192);
  v54 = *(_QWORD *)(v0 + 184);
  v55 = *(_QWORD *)(v0 + 176);
  v56 = *(_QWORD *)(v0 + 152);
  v57 = *(_QWORD *)(v0 + 144);
  v58 = *(_QWORD *)(v0 + 120);
  v59 = *(_QWORD *)(v0 + 112);
  v60 = *(_QWORD *)(v0 + 104);
  v61 = *(_QWORD *)(v0 + 80);
  v63 = *(_QWORD *)(v0 + 72);
  v64 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100995EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_100007E8C(&qword_1011D2AE0);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2EB8);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100995F8C, 0, 0);
}

uint64_t sub_100995F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1002ED50C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100EA93A0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 184) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10099615C, v19, v20);
  }
}

uint64_t sub_10099615C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_10099622C, 0, 0);
}

uint64_t sub_10099622C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10098C9B0(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_10099627C(char *a1, char *a2, uint64_t *a3)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v12[3];
  void *ObjectType;

  v6 = sub_10099634C(v12, 0, 0, 1, (uint64_t)a1, (unint64_t)a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10004FA40((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10004FA40((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v12);
  return v7;
}

char *sub_10099634C(char **a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  char *result;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          result = 0;
          *((_BYTE *)__dst + v10) = 0;
          *a1 = (char *)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_100996448(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    result = (char *)((a6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    result = (char *)_StringObject.sharedUTF8.getter(a5, a6);
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (char *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
}

char *sub_100996448(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (char *)sub_1009964DC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100996574(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_100996574((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

_QWORD *sub_1009964DC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *result;
  char v7;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100B60BBC(v4, 0);
      result = (_QWORD *)_StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v7 & 1) != 0)
        break;
      if (result == (_QWORD *)v4)
        return v5;
      __break(1u);
LABEL_9:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_100996574(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3080);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t _s9MusicCore7ActionsO13AddToPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000014, 0x8000000100E4AB10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1009967C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009967EC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t (*v55)();
  uint64_t v56;
  uint64_t result;
  unint64_t (**v58)();
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t (**v73)();
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = a2;
  v66 = a8;
  v71 = a3;
  v72 = a6;
  v68 = a4;
  v69 = a5;
  v73 = a9;
  v67 = a12;
  v79 = a10;
  v80 = a7;
  v75 = *(_QWORD *)(a7 - 8);
  v76 = a11;
  v78 = *(_QWORD *)(v75 + 64);
  v13 = __chkstk_darwin(a1);
  v70 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v77 = (char *)&v60 - v15;
  v16 = type metadata accessor for MusicLibrary.AddAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D2F58);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v74 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v60 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v60 - v28;
  static MusicLibraryAction<>.add.getter(v27);
  v64 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, v80, v16, a11, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v29, v20);
  v30 = *(unsigned __int8 *)(v21 + 80);
  v31 = (v30 + 16) & ~v30;
  v62 = v30 | 7;
  v65 = swift_allocObject(&unk_1010E9058, v31 + v22, v30 | 7);
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v63 = v20;
  v32(v65 + v31, v26, v20);
  v32((uint64_t)v74, v29, v20);
  v33 = v75;
  v34 = v80;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v77, a1, v80);
  v35 = (v30 + 56) & ~v30;
  v36 = (v22 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(unsigned __int8 *)(v33 + 80);
  v39 = (v37 + v38 + 72) & ~v38;
  v40 = v66;
  v41 = *(_QWORD *)(v66 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v61 = (v39 + v78 + v42) & ~v42;
  v43 = (char *)swift_allocObject(&unk_1010E9080, v61 + *(_QWORD *)(v41 + 64), v62 | v38 | v42);
  *((_QWORD *)v43 + 2) = v34;
  *((_QWORD *)v43 + 3) = v40;
  v44 = v76;
  *((_QWORD *)v43 + 4) = v79;
  *((_QWORD *)v43 + 5) = v44;
  v45 = &v43[v35];
  v46 = v67;
  *((_QWORD *)v43 + 6) = v67;
  v32((uint64_t)v45, v74, v63);
  sub_100064C48(v68, (uint64_t)&v43[v36]);
  sub_100065228(v69, (uint64_t)&v43[v37], &qword_1011D2F20);
  v47 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v48 = v80;
  v47(&v43[v39], v77, v80);
  v49 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v43[v61], v71, v40);
  v50 = v70;
  v47(v70, v64, v48);
  v51 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v52 = *(unsigned __int8 *)(v51 + 80);
  v53 = (v52 + 56) & ~v52;
  v54 = (*(_QWORD *)(v51 + 64) + v38 + v53) & ~v38;
  v55 = (unint64_t (*)())swift_allocObject(&unk_1010E90A8, v54 + v78, v38 | v52 | 7);
  *((_QWORD *)v55 + 2) = v48;
  *((_QWORD *)v55 + 3) = v49;
  v56 = v76;
  *((_QWORD *)v55 + 4) = v79;
  *((_QWORD *)v55 + 5) = v56;
  *((_QWORD *)v55 + 6) = v46;
  sub_100065228(v72, (uint64_t)v55 + v53, &qword_1011D2EB8);
  result = ((uint64_t (*)(char *, char *, uint64_t))v47)((char *)v55 + v54, v50, v48);
  v58 = v73;
  v59 = v65;
  *v73 = sub_100996C54;
  v58[1] = (unint64_t (*)())v59;
  v58[2] = (unint64_t (*)())&unk_1011D3090;
  v58[3] = (unint64_t (*)())v43;
  v58[4] = (unint64_t (*)())&unk_1011D30A0;
  v58[5] = v55;
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist()
{
  return &type metadata for Actions.AddToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist.Context()
{
  return &type metadata for Actions.AddToPlaylist.Context;
}

uint64_t sub_100996BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011D2F58);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

unint64_t sub_100996C54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2F58) - 8) + 80);
  return sub_100991C60(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_100996C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = sub_100007E8C(&qword_1011D2F58);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v2 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v1 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v19 = *(_QWORD *)(v10 + 64);
  v20 = *(_QWORD *)(v8 + 64);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v3);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v6));
  v14 = v0 + v7;
  if (*(_QWORD *)(v0 + v7 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v7, v12);
    v15 = *(unsigned __int8 *)(v14 + 48);
    if (v15 != 255)
      sub_100064AA4(*(id *)(v14 + 8), *(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), v15);
    if (*(_QWORD *)(v14 + 56))
      v13 = swift_release();
  }
  v16 = (v9 + v7 + 72) & ~v9;
  v17 = (v20 + v11 + v16) & ~v11;
  (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v0 + v16, v2, v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v17, v1);
  return swift_deallocObject(v0, v17 + v19);
}

uint64_t sub_100996DD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v3 = v0[2];
  v2 = v0[3];
  v18 = v0[4];
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2F58) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v11 = (uint64_t)v0 + v5;
  v12 = (uint64_t)v0 + v6;
  v13 = (uint64_t)v0 + v7;
  v14 = (uint64_t)v0 + v9;
  v15 = (uint64_t)v0 + ((*(_QWORD *)(v8 + 64) + v10 + v9) & ~v10);
  v16 = (_QWORD *)swift_task_alloc(dword_1011D308C);
  *(_QWORD *)(v1 + 16) = v16;
  *v16 = v1;
  v16[1] = sub_10005AEE4;
  return sub_100992364(v11, v12, v13, v14, v15, v3, v2, v18);
}

uint64_t sub_100996EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_10099709C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D309C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10006AEE4;
  return sub_100995EE0(v8, v9, v2, v3, v4);
}

uint64_t Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a5;
  v30 = a6;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a7, a1, v12);
  v15 = (int *)type metadata accessor for Actions.Collaborate.Context(0);
  v16 = (_QWORD *)(a7 + v15[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = swift_allocObject(&unk_1010E90E8, 32, 7);
  v18 = v29;
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = (_QWORD *)(a7 + v15[6]);
  *v19 = &unk_1011D30B0;
  v19[1] = v17;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v20((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v21 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = (v23 + *(_QWORD *)(v21 + 64) + v24) & ~v24;
  v26 = swift_allocObject(&unk_1010E9110, v25 + v14, v22 | v24 | 7);
  sub_10098C5E8(v30, v26 + v23);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v26 + v25, (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v28 = (_QWORD *)(a7 + v15[7]);
  *v28 = &unk_1011D30C0;
  v28[1] = v26;
  return result;
}

uint64_t type metadata accessor for Actions.Collaborate.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D3168;
  if (!qword_1011D3168)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.Collaborate.Context);
  return result;
}

uint64_t sub_100997324(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return sub_1002A4C38(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10099735C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100997380()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;

  v2 = *(void (**)(void))(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1011D30AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return ((uint64_t (*)(void (*)(void)))((char *)&dword_1011D30A8 + dword_1011D30A8))(v2);
}

uint64_t sub_1009973E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D2EB8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10099748C, 0, 0);
}

uint64_t sub_10099748C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_10098C968(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 96), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = sub_1002ED50C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = Playlist.catalogID.getter(v8);
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = sub_1009AE324();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 152) = v15;
    *(_QWORD *)(v0 + 160) = v16;
    *(_WORD *)(v0 + 176) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_10099761C, v20, v21);
  }
}

uint64_t sub_10099761C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_1009AFBBC(v9, v4, 5, 8, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_100997710, 0, 0);
}

uint64_t sub_100997710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10098C9B0(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100997760()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v2;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v2, 1, v9))
  {
    v19 = v7;
    v20 = v3;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v3 = v20;
  }
  v13 = (v2 + v3 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v4);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_100997928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D30BC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10005AEE4;
  return sub_1009973E4(v7, v8);
}

int *static Actions.Collaborate.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *result;
  uint64_t (**v4)(uint64_t);
  _QWORD *v5;
  _QWORD *v6;

  sub_100997A44(a1, a2);
  result = (int *)sub_100007E8C(&qword_1011D30D8);
  *(_BYTE *)(a2 + result[13]) = 7;
  *(_QWORD *)(a2 + result[15]) = 0x4014000000000000;
  v4 = (uint64_t (**)(uint64_t))(a2 + result[14]);
  *v4 = sub_100997A88;
  v4[1] = 0;
  v5 = (_QWORD *)(a2 + result[16]);
  *v5 = &unk_1011D30C8;
  v5[1] = 0;
  v6 = (_QWORD *)(a2 + result[17]);
  *v6 = &unk_1011D30D0;
  v6[1] = 0;
  return result;
}

uint64_t sub_100997A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.Collaborate.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100997A88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.Collaborate.Context(0);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 20)))();
}

uint64_t sub_100997ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch(sub_100997AD4, 0, 0);
}

uint64_t sub_100997AD4()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 24));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_100997B3C;
  return v5();
}

uint64_t sub_100997B3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100997B84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100997B9C, 0, 0);
}

uint64_t sub_100997B9C()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 28));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_100998300;
  return v5();
}

uint64_t Actions.Collaborate.Context.menuItemTitle.getter()
{
  char active;

  active = Playlist.hasActiveCollaboration.getter();
  return _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0(active & 1);
}

uint64_t (*Actions.Collaborate.Context.menuItemImage.getter())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x8000000100E4AB30;
  v3 = swift_allocObject(&unk_1010E9138, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1010E9160, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_100997DA4;
}

uint64_t (*sub_100997CE0())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x8000000100E4AB30;
  v3 = swift_allocObject(&unk_1010E91D8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1010E9200, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_1009982F8;
}

uint64_t sub_100997DA4()
{
  uint64_t v0;

  return sub_1009B91F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100997DAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100997DD0()
{
  uint64_t v0;

  return sub_1009B9224(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for Actions.Collaborate()
{
  return &type metadata for Actions.Collaborate;
}

uint64_t *_s11CollaborateO7ContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain(v12);
    swift_retain(v15);
  }
  swift_retain(v19);
  return v4;
}

uint64_t _s11CollaborateO7ContextVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t _s11CollaborateO7ContextVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v18);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  v16 = v13[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  v21 = v18[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  swift_release(v12);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100998180);
}

uint64_t sub_100998180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s11CollaborateO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100998208);
}

uint64_t sub_100998208(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100998280(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t static Actions.DeleteFromLibrary.action(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;

  v4 = *a1;
  v5 = a1[7];
  v6 = (_OWORD *)swift_allocObject(&unk_1010E9240, 80, 7);
  v7 = *(_OWORD *)(a1 + 1);
  v11 = *(_OWORD *)(a1 + 3);
  v12 = *(_OWORD *)(a1 + 5);
  v8 = *((_OWORD *)a1 + 1);
  v6[1] = *(_OWORD *)a1;
  v6[2] = v8;
  v9 = *((_OWORD *)a1 + 3);
  v6[3] = *((_OWORD *)a1 + 2);
  v6[4] = v9;
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v5;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_100998460;
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1011D31A8;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1011D31B0;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v7, 2);
  swift_retain_n(v11, 2);
  swift_retain_n(v12, 2);
  return swift_retain_n(v5, 2);
}

uint64_t sub_1009983FC(uint64_t (**a1)(void), uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (*a1)();
  if (v4 == 1)
  {
    v5 = (*(uint64_t (**)(uint64_t))(a2 + 32))(result);
    v7 = v6;
    sub_10013B670(v5, v6);
    if (v7 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_100998460(uint64_t (**a1)(void))
{
  uint64_t v1;

  return sub_1009983FC(a1, v1 + 16);
}

uint64_t sub_100998468(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 48);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5();
}

uint64_t sub_1009984BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D3208);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_1009985E4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_1009985E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  v9 = sub_100007E8C(&qword_1011D3208);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = String.init<A>(describing:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v14;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+DeleteFromLibrary.swift", 41, 2, 94, 0);
  __break(1u);
  return result;
}

uint64_t sub_1009987C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v10 = a1[6];
  v9 = a1[7];
  v11 = (_QWORD *)swift_allocObject(&unk_1010E9480, 80, 7);
  v11[2] = v4;
  v11[3] = v3;
  v11[4] = v6;
  v11[5] = v5;
  v11[6] = v8;
  v11[7] = v7;
  v11[8] = v10;
  v11[9] = v9;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v9;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_100999AE4;
  *(_QWORD *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1011D31A8;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1011D31B0;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v3, 2);
  swift_retain_n(v5, 2);
  swift_retain_n(v7, 2);
  return swift_retain_n(v9, 2);
}

uint64_t (*Actions.DeleteFromLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9268, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1010E9290, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10098C424;
}

uint64_t (*sub_100998928())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9430, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1010E9458, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10098C9EC;
}

uint64_t Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (**v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (**v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v81 = a7;
  v82 = a8;
  v76 = a4;
  v77 = a9;
  v72 = a3;
  v83 = a2;
  v63 = a10;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = __chkstk_darwin(a1);
  v75 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v71 = (char *)&v63 - v17;
  v18 = __chkstk_darwin(v16);
  v66 = (char *)&v63 - v19;
  v21 = v20;
  v74 = v20;
  __chkstk_darwin(v18);
  v23 = (char *)&v63 - v22;
  v80 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v65 = a1;
  v80((char *)&v63 - v22, (uint64_t)a1, v24);
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = v25;
  v64 = v21 + 7;
  v28 = (v21 + 7 + v26) & 0xFFFFFFFFFFFFFFF8;
  v69 = v28 + 8;
  v70 = v26;
  v68 = v28;
  v29 = v25 | 7;
  v79 = v25 | 7;
  v30 = (_QWORD *)swift_allocObject(&unk_1010E92B8, v28 + 8, v25 | 7);
  v30[2] = a5;
  v30[3] = a6;
  v31 = v82;
  v30[4] = v81;
  v30[5] = v31;
  v30[6] = a10;
  v32 = v30;
  v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30;
  v78 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v78((char *)v30 + v26, v23, a5);
  *(_QWORD *)((char *)v32 + v28) = v83;
  v33 = v66;
  v80(v66, (uint64_t)a1, a5);
  v34 = a6;
  v35 = *(_QWORD *)(a6 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = *(_QWORD *)(v35 + 64);
  v67 = v27;
  v39 = (v38 + v27 + v37) & ~v27;
  v40 = v29 | v36;
  v41 = (v64 + v39) & 0xFFFFFFFFFFFFFFF8;
  v42 = (char *)swift_allocObject(&unk_1010E92E0, v41 + 8, v40);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = v34;
  v43 = v34;
  v45 = v81;
  v44 = v82;
  *((_QWORD *)v42 + 4) = v81;
  *((_QWORD *)v42 + 5) = v44;
  v46 = v63;
  *((_QWORD *)v42 + 6) = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v42[v37], v72, v43);
  v47 = v78;
  v78(&v42[v39], v33, a5);
  v48 = v83;
  *(_QWORD *)&v42[v41] = v83;
  v49 = v71;
  v50 = v65;
  v80(v71, (uint64_t)v65, a5);
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_1010E9308, v69, v79);
  *((_QWORD *)v51 + 2) = a5;
  *((_QWORD *)v51 + 3) = v43;
  *((_QWORD *)v51 + 4) = v45;
  v52 = v82;
  *((_QWORD *)v51 + 5) = v82;
  v53 = (char *)v51 + v70;
  *((_QWORD *)v51 + 6) = v46;
  v47(v53, v49, a5);
  *(_QWORD *)((char *)v51 + v68) = v48;
  v54 = v75;
  v47(v75, v50, a5);
  v55 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 56) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v67 + v57) & ~v67;
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_1010E9330, v58 + v74, v79 | v56);
  *((_QWORD *)v59 + 2) = a5;
  *((_QWORD *)v59 + 3) = v43;
  *((_QWORD *)v59 + 4) = v81;
  *((_QWORD *)v59 + 5) = v52;
  *((_QWORD *)v59 + 6) = v46;
  sub_10098C5E8(v76, (uint64_t)v59 + v57);
  v78((char *)v59 + v58, v54, a5);
  result = swift_retain_n(v83, 2);
  v61 = v77;
  v62 = v73;
  *v77 = sub_1009993F0;
  v61[1] = v62;
  v61[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_1011D31C0;
  v61[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42;
  v61[4] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100999608;
  v61[5] = v51;
  v61[6] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_1011D31D0;
  v61[7] = v59;
  return result;
}

uint64_t sub_100998D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a6;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v8[16] = v9;
  v8[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100998D84, 0, 0);
}

uint64_t sub_100998D84()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 16))(v0[17], v0[10], v0[12]);
  v1 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100998E00, v3, v4);
}

uint64_t sub_100998E00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;

  v1 = v0[17];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  swift_release();
  sub_100A4FA28(v1, v6, v5, v4, (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  v7 = *(int **)(v3 + 8);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[19] = v8;
  *v8 = v0;
  v8[1] = sub_100998EBC;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v10)(v0 + 2, v0[13], v0[15]);
}

uint64_t sub_100998EBC()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (_QWORD *)(*v0 + 16);
  v2 = *(_QWORD *)(*v0 + 136);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  sub_100365848(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100998F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_100007E8C(&qword_1011D2AE0);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2EB8);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100998FCC, 0, 0);
}

uint64_t sub_100998FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10098C968(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1002ED50C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 184) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10099918C, v19, v20);
  }
}

uint64_t sub_10099918C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 14, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_10099622C, 0, 0);
}

uint64_t _s9MusicCore7ActionsO17DeleteFromLibraryO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E2EBF0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1009993C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009993F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1009984BC(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 40));
}

uint64_t sub_100999424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v3 | v6 | 7;
  v9 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v8);
}

uint64_t sub_1009994CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2 - 8);
  v10 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (uint64_t)v0 + v8;
  v12 = (uint64_t)v0 + v10;
  v13 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1011D31BC);
  *(_QWORD *)(v1 + 16) = v14;
  *v14 = v1;
  v14[1] = sub_10005AEE4;
  return sub_100998D24(v11, v12, v13, v2, v3, v4, v5, v6);
}

uint64_t sub_10099959C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 56) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100999608()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1009A1AE4((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[4], v0[5]);
}

uint64_t sub_10099963C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009997FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D31CC);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10006AEE4;
  return sub_100998F20(v8, v9, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary()
{
  return &type metadata for Actions.DeleteFromLibrary;
}

uint64_t _s17DeleteFromLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s17DeleteFromLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s17DeleteFromLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

__n128 _s17DeleteFromLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s17DeleteFromLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary.Context()
{
  return &type metadata for Actions.DeleteFromLibrary.Context;
}

uint64_t sub_100999A9C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100999AE8(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v19[-v12];
  if (!a2)
  {
    if ((a1 & 1) != 0)
    {
      v15 = 0x8000000100E4AEE0;
      v14 = 0xD000000000000010;
    }
    else
    {
      v14 = 0x442065766F6D6552;
      v15 = 0xEF64616F6C6E776FLL;
    }
    goto LABEL_10;
  }
  if (a2 == 1)
  {
    v14 = 0xD000000000000013;
    v15 = 0x8000000100E2EBF0;
LABEL_10:
    String.LocalizationValue.init(stringLiteral:)(v14, v15);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v17 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    return v16;
  }
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v16 = static String.cancelButtonTitle;
  swift_bridgeObjectRetain();
  return v16;
}

_UNKNOWN **static Actions.DeleteOrRemoveDownload.Choice.allCases.getter()
{
  return &off_1010E5480;
}

uint64_t Actions.DeleteOrRemoveDownload.Choice.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6F4465766F6D6572;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x6C65636E6163;
}

uint64_t sub_100999D78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1009A46F0(*a1, *a2);
}

Swift::Int sub_100999D84()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0x8000000100E49B20;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100999E30(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x8000000100E49B20;
  v3 = 0xD000000000000011;
  if (*v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100999EB8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0x8000000100E49B20;
  v4 = 0xD000000000000011;
  if (v2 != 1)
  {
    v4 = 0x6C65636E6163;
    v3 = 0xE600000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x6F4465766F6D6572;
  if (v2)
    v6 = v3;
  else
    v6 = 0xEE0064616F6C6E77;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100999F60@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100999F8C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE0064616F6C6E77;
  v4 = 0x8000000100E49B20;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x6C65636E6163;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6F4465766F6D6572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_100999FF8(_QWORD *a1@<X8>)
{
  *a1 = &off_1010E54A8;
}

uint64_t static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_10099D048(a1, a2);
  result = swift_allocObject(&unk_1010E94C0, 32, 7);
  *(_QWORD *)(result + 16) = &unk_1011D3210;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_10099A080;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_1011D3228;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_1011D3218;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

unint64_t sub_10099A080(uint64_t (**a1)(void))
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v2 = sub_100007E8C(&qword_1011D32F8);
  inited = swift_initStackObject(v2, &v8);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = (*a1)();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = a1[4]();
  *(_QWORD *)(inited + 56) = v5;
  v6 = _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for ActionSupportedStatus);
  return v6;
}

uint64_t sub_10099A124(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[28] = a1;
  v2[29] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[30] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[31] = v5;
  v2[32] = v6;
  return swift_task_switch(sub_10099A190, v5, v6);
}

uint64_t sub_10099A190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  sub_10099D048(*(_QWORD *)(v0 + 224), v0 + 16);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 264) = v2;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v0 + 16;
  *(_QWORD *)(v4 + 24) = v1;
  swift_bridgeObjectRetain();
  v5 = sub_10099A930((void (*)(uint64_t *__return_ptr, char *))sub_10099DD04, v4, (uint64_t)&off_1010E54D0);
  *(_QWORD *)(v0 + 272) = v5;
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_QWORD *)(v0 + 176) = v3;
  *(_QWORD *)(v0 + 184) = v2;
  *(_BYTE *)(v0 + 192) = 1;
  *(_QWORD *)(v0 + 200) = v5;
  *(_QWORD *)(v0 + 208) = 0;
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  sub_100007E68((_QWORD *)(v0 + 96), v6);
  v8 = *(int **)(v7 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  *(_QWORD *)(v0 + 280) = v9;
  *v9 = v0;
  v9[1] = sub_10099A29C;
  return v11(v0 + 160, v6, v7);
}

uint64_t sub_10099A29C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 280));
  return swift_task_switch(sub_10099A2E8, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_10099A2E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10099DD20((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10099A350@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _OWORD v29[7];
  _OWORD v30[2];

  v8 = sub_100007E8C(&qword_1011D32B8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = *a1;
  if (*a1)
  {
    if (v11 == 1)
    {
      v28 = 0x8000000100E49B20;
      v12 = 0xD000000000000011;
    }
    else
    {
      v28 = 0xE600000000000000;
      v12 = 0x6C65636E6163;
    }
  }
  else
  {
    v28 = 0xEE0064616F6C6E77;
    v12 = 0x6F4465766F6D6572;
  }
  v27 = v12;
  v26 = sub_100999AE8(*(_BYTE *)(a2 + 136), v11);
  v25 = v13;
  sub_10099D048(a2, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 161) & ~v14;
  v16 = swift_allocObject(&unk_1010E9818, v15 + v10, v14 | 7);
  v17 = v29[4];
  *(_OWORD *)(v16 + 104) = v29[5];
  v18 = v30[0];
  *(_OWORD *)(v16 + 120) = v29[6];
  *(_OWORD *)(v16 + 136) = v18;
  *(_OWORD *)(v16 + 145) = *(_OWORD *)((char *)v30 + 9);
  v19 = v29[0];
  *(_OWORD *)(v16 + 40) = v29[1];
  v20 = v29[3];
  *(_OWORD *)(v16 + 56) = v29[2];
  *(_OWORD *)(v16 + 72) = v20;
  *(_OWORD *)(v16 + 88) = v17;
  *(_BYTE *)(v16 + 16) = v11;
  *(_OWORD *)(v16 + 24) = v19;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v22 = v28;
  *(_QWORD *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v22;
  v23 = v25;
  *(_QWORD *)(a4 + 16) = v26;
  *(_QWORD *)(a4 + 24) = v23;
  *(_BYTE *)(a4 + 32) = v11 < 2;
  *(_QWORD *)(a4 + 40) = &unk_1011D32E0;
  *(_QWORD *)(a4 + 48) = v16;
  return result;
}

uint64_t sub_10099A544(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = a3;
  *(_BYTE *)(v3 + 153) = a1;
  v4 = sub_100007E8C(&qword_1011D32B8);
  *(_QWORD *)(v3 + 176) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 184) = v5;
  v6 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v3 + 192) = v6;
  *(_QWORD *)(v3 + 200) = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10099A5D4, 0, 0);
}

uint64_t sub_10099A5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_BYTE *)(v0 + 153);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  sub_10099D048(v7, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 177) & ~v10;
  v12 = swift_allocObject(&unk_1010E9840, v11 + v4, v10 | 7);
  v13 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v12 + 120) = *(_OWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v12 + 136) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v12 + 152) = v14;
  *(_OWORD *)(v12 + 161) = *(_OWORD *)(v0 + 137);
  v15 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v0 + 32);
  v16 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v12 + 88) = v16;
  *(_OWORD *)(v12 + 104) = v13;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = v8;
  *(_OWORD *)(v12 + 40) = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v11, v2, v5);
  sub_100B237E0(v1, (uint64_t)&unk_1011D32F0, v12);
  swift_release();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10099A718(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = a5;
  *(_QWORD *)(v6 + 24) = a6;
  *(_BYTE *)(v6 + 49) = a4;
  return swift_task_switch(sub_10099A734, 0, 0);
}

uint64_t sub_10099A734()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v3)();
  int *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t (*v8)(void);

  if (*(_BYTE *)(v0 + 49))
  {
    if (*(_BYTE *)(v0 + 49) != 1)
    {
      *(_BYTE *)(v0 + 48) = 2;
      v6 = sub_100007E8C(&qword_1011D32B8);
      CheckedContinuation.resume(returning:)(v0 + 48, v6);
      v5 = *(uint64_t (**)(void))(v0 + 8);
      return v5();
    }
    v1 = *(int **)(*(_QWORD *)(v0 + 16) + 16);
    v8 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 40) = v2;
    v3 = sub_10099A8C4;
  }
  else
  {
    v4 = *(int **)(*(_QWORD *)(v0 + 16) + 48);
    v8 = (uint64_t (*)(void))((char *)v4 + *v4);
    v2 = (_QWORD *)swift_task_alloc(v4[1]);
    *(_QWORD *)(v0 + 32) = v2;
    v3 = sub_10099A804;
  }
  *v2 = v0;
  v2[1] = v3;
  v5 = v8;
  return v5();
}

uint64_t sub_10099A804()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_10099A870, 0, 0);
}

uint64_t sub_10099A870()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 48) = *(_BYTE *)(v0 + 49);
  v1 = sub_100007E8C(&qword_1011D32B8);
  CheckedContinuation.resume(returning:)(v0 + 48, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10099A8C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_10099DFB4, 0, 0);
}

_QWORD *sub_10099A930(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  __int128 v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  _QWORD *v32;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v32 = _swiftEmptyArrayStorage;
    sub_1009F24B4(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (char *)(a3 + 32);
    while (1)
    {
      v9 = *v8++;
      v25 = v9;
      a1(&v26, &v25);
      if (v4)
        break;
      v4 = 0;
      v11 = v26;
      v10 = v27;
      v13 = v28;
      v12 = v29;
      v14 = v30;
      v15 = v31;
      v32 = v6;
      v17 = v6[2];
      v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        v23 = v31;
        v22 = v27;
        v19 = v29;
        v21 = v30;
        sub_1009F24B4((char *)(v16 > 1), v17 + 1, 1);
        v14 = v21;
        v12 = v19;
        v10 = v22;
        v15 = v23;
        v6 = v32;
      }
      v6[2] = v17 + 1;
      v18 = &v6[7 * v17];
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v13;
      v18[7] = v12;
      *((_BYTE *)v18 + 64) = v14;
      *(_OWORD *)(v18 + 9) = v15;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_10099AA70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10099AA88, 0, 0);
}

uint64_t sub_10099AA88()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 16) + 64);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_100997B3C;
  return v4();
}

uint64_t sub_10099AAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_10099D048(a1, a2);
  result = swift_allocObject(&unk_1010E97C8, 32, 7);
  *(_QWORD *)(result + 16) = &unk_1011D3210;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_10099A080;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_1011D32A8;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_1011D3218;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)()@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t (*v43)();
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)();
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)();
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)();
  void (*v87)(uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (**v100)();
  uint64_t (*v101)();
  uint64_t (*v102)();
  uint64_t (*v103)();
  uint64_t (*v104)();
  uint64_t result;
  uint64_t (*v106)();
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)();
  char *v126;
  uint64_t (*v127)();
  char *v128;
  uint64_t (*v129)();
  uint64_t v130;
  uint64_t (**v131)();
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t (*v142)();
  __int128 v143;
  uint64_t v144;
  uint64_t v145;

  v137 = a4;
  v138 = a8;
  v130 = a2;
  v131 = a9;
  v139 = a1;
  v141 = a10;
  v142 = a3;
  v113 = type metadata accessor for Playlist(0);
  v108 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v112 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for Album(0);
  v111 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v128 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D2EB8);
  v122 = *(_QWORD *)(v17 - 8);
  v123 = *(_QWORD *)(v122 + 64);
  v18 = __chkstk_darwin(v17);
  v121 = (uint64_t)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a5 - 8);
  v21 = __chkstk_darwin(v18);
  v109 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v132 = (char *)&v107 - v24;
  v25 = __chkstk_darwin(v23);
  v126 = (char *)&v107 - v26;
  v27 = __chkstk_darwin(v25);
  v120 = (char *)&v107 - v28;
  v29 = __chkstk_darwin(v27);
  v118 = (char *)&v107 - v30;
  v31 = __chkstk_darwin(v29);
  v116 = (char *)&v107 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v107 - v34;
  v125 = (uint64_t (*)())((char *)&v107 - v34);
  v37 = v36;
  v117 = v36;
  __chkstk_darwin(v33);
  v39 = (char *)&v107 - v38;
  v140 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v140((char *)&v107 - v38, a1, a5);
  v119 = *(unsigned __int8 *)(v20 + 80);
  v40 = ((v119 + 64) & ~v119) + v37;
  v41 = (v119 + 64) & ~v119;
  v133 = (_QWORD *)v41;
  v134 = v119 | 7;
  v42 = (uint64_t (*)())swift_allocObject(&unk_1010E94E8, v40, v119 | 7);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = a6;
  v114 = a6;
  *((_QWORD *)v42 + 4) = a7;
  *((_QWORD *)v42 + 5) = a8;
  v43 = v142;
  *((_QWORD *)v42 + 6) = v141;
  *((_QWORD *)v42 + 7) = v43;
  v129 = v42;
  v110 = v20;
  v44 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v45 = v39;
  v46 = a5;
  v44((char *)v42 + v41, v45, a5);
  v136 = v44;
  v47 = v35;
  v48 = v139;
  v49 = v140;
  v140(v47, v139, v46);
  v115 = v40;
  v50 = v134;
  v51 = (uint64_t (*)())swift_allocObject(&unk_1010E9510, v40, v134);
  v52 = v46;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = a6;
  v53 = a7;
  v135 = a7;
  v54 = v138;
  *((_QWORD *)v51 + 4) = a7;
  *((_QWORD *)v51 + 5) = v54;
  v55 = v133;
  v56 = (char *)v133 + (_QWORD)v51;
  v57 = v141;
  *((_QWORD *)v51 + 6) = v141;
  *((_QWORD *)v51 + 7) = v43;
  v127 = v51;
  v58 = v52;
  ((void (*)(char *, uint64_t (*)()))v44)(v56, v125);
  v59 = v116;
  v49(v116, v48, v58);
  v60 = (char *)swift_allocObject(&unk_1010E9538, v40, v50);
  v61 = v58;
  *((_QWORD *)v60 + 2) = v58;
  v62 = v114;
  *((_QWORD *)v60 + 3) = v114;
  *((_QWORD *)v60 + 4) = v53;
  *((_QWORD *)v60 + 5) = v54;
  v63 = v54;
  v64 = (char *)v55 + (_QWORD)v60;
  v65 = v57;
  *((_QWORD *)v60 + 6) = v57;
  v125 = (uint64_t (*)())v60;
  v66 = v142;
  *((_QWORD *)v60 + 7) = v142;
  v67 = v136;
  v136(v64, v59, v61);
  v68 = v118;
  v69 = v139;
  v49(v118, v139, v61);
  v70 = (_QWORD *)swift_allocObject(&unk_1010E9560, v115, v50);
  v70[2] = v61;
  v70[3] = v62;
  v71 = v135;
  v70[4] = v135;
  v70[5] = v63;
  v72 = (char *)v133 + (_QWORD)v70;
  v70[6] = v65;
  v70[7] = v66;
  v133 = v70;
  v67(v72, v68, v61);
  v73 = v121;
  sub_10004A160(v137, v121, &qword_1011D2EB8);
  v74 = v120;
  v140(v120, v69, v61);
  v75 = *(unsigned __int8 *)(v122 + 80);
  v76 = (v75 + 56) & ~v75;
  v77 = (v123 + v119 + v76) & ~v119;
  v78 = (uint64_t (*)())swift_allocObject(&unk_1010E9588, v77 + v117, v134 | v75);
  *((_QWORD *)v78 + 2) = v61;
  *((_QWORD *)v78 + 3) = v62;
  v79 = v138;
  *((_QWORD *)v78 + 4) = v71;
  *((_QWORD *)v78 + 5) = v79;
  v80 = v141;
  *((_QWORD *)v78 + 6) = v141;
  sub_10098C5E8(v73, (uint64_t)v78 + v76);
  v67((char *)v78 + v77, v74, v61);
  v144 = v62;
  v145 = v80;
  v81 = sub_100049F68(&v143);
  v82 = *(_QWORD *)(v62 - 8);
  v83 = v130;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v82 + 16))(v81, v130, v62);
  swift_retain_n(v142, 3);
  v84 = v139;
  v85 = sub_10099B91C(v139, v61);
  v142 = v86;
  sub_10004FF60(v137, &qword_1011D2EB8);
  v87 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v88 = v128;
  v87(v83, v62);
  v89 = v126;
  v140(v126, v84, v61);
  v90 = v124;
  if (swift_dynamicCast(v88, v89, v61, v124, 6))
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v88, v90);
    v91 = v132;
    v136(v132, (char *)v84, v61);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v91, v61);
    v92 = 1;
  }
  else
  {
    v93 = v85;
    v94 = v132;
    v95 = v136;
    v136(v132, (char *)v84, v61);
    v96 = v109;
    v95(v109, v94, v61);
    v97 = v112;
    v98 = v61;
    v99 = v113;
    if (swift_dynamicCast(v112, v96, v98, v113, 6))
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v97, v99);
      v92 = 1;
    }
    else
    {
      v92 = 0;
    }
    v85 = v93;
  }
  v100 = v131;
  v101 = v129;
  *v131 = sub_10099D124;
  v100[1] = v101;
  v102 = v127;
  v100[2] = (uint64_t (*)())&unk_1011D3238;
  v100[3] = v102;
  v103 = v125;
  v100[4] = sub_10099D1E0;
  v100[5] = v103;
  v104 = (uint64_t (*)())v133;
  v100[6] = (uint64_t (*)())&unk_1011D3248;
  v100[7] = v104;
  v100[8] = (uint64_t (*)())&unk_1011D3258;
  v100[9] = v78;
  result = sub_100064C48(&v143, (uint64_t)(v100 + 10));
  v106 = v142;
  v100[15] = (uint64_t (*)())v85;
  v100[16] = v106;
  *((_BYTE *)v100 + 136) = v92;
  return result;
}

uint64_t sub_10099B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D3208);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_1009985E4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_10099B38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_10006AEE4;
  return MusicLibrary.remove<A>(_:)(a2, a3, a5);
}

uint64_t sub_10099B3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D32B0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_1009A1C0C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_10099B524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_10006AEE4;
  return MusicLibrary.removeDownload<A>(_:)(a2, a3, a5);
}

uint64_t sub_10099B594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a3;
  v5[12] = a5;
  v5[9] = a1;
  v5[10] = a2;
  v6 = sub_100007E8C(&qword_1011D2AE0);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2EB8);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[16] = v9;
  v5[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10099B640, 0, 0);
}

uint64_t sub_10099B640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10099B7FC, v19, v20);
  }
}

uint64_t sub_10099B7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 30, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_10099B8CC, 0, 0);
}

uint64_t sub_10099B8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10098C9B0(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10099B91C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  NSObject *v108;
  __n128 v109;
  os_log_type_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  __n128 v118;
  void (*v119)(char *, uint64_t, __n128);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  char *v126;
  char *v127;
  void (*v128)(char *, uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;

  v161 = a1;
  v133 = type metadata accessor for Genre(0);
  v130 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v132 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for Composer(0);
  v131 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v135 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for Artist(0);
  v134 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v138 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for TVEpisode(0);
  v137 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for TVSeason(0);
  v140 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for TVShow(0);
  v143 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v146 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for MusicMovie(0);
  v148 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v150 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for Song(0);
  v149 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v154 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for Playlist(0);
  v152 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v157 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v155 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v160 = (char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v127 - v22;
  v24 = type metadata accessor for Album(0);
  v158 = *(char **)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v25);
  v127 = (char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v129 = (char *)&v127 - v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v127 - v32;
  v159 = v34;
  v128 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v128((char *)&v127 - v32, v161, a2);
  if (swift_dynamicCast(v27, v33, a2, v24, 0))
  {
    v161 = a2;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E4AE40);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    v35 = v17;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v36 = qword_10124DE50;
    v37 = (id)qword_10124DE50;
    v38 = v160;
    static Locale.current.getter(v37);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v36, v38, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v35);
    (*((void (**)(char *, uint64_t))v158 + 1))(v27, v24);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v33, v161);
    return v39;
  }
  v40 = v33;
  if (swift_dynamicCast(v14, v33, a2, v12, 0))
  {
    v41 = v12;
    v42 = v14;
    v43 = v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E377B0);
    v44 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v45 = qword_10124DE50;
    v46 = (id)qword_10124DE50;
    v47 = v160;
    static Locale.current.getter(v46);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v45, v47, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v17);
    (*(void (**)(char *, uint64_t))(v155 + 8))(v42, v41);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v159 + 8))(v40, a2);
    return v39;
  }
  v48 = v156;
  v49 = v21;
  if (swift_dynamicCast(v157, v33, a2, v156, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000100E4ADE0);
    v50 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v51 = qword_10124DE50;
    v52 = (id)qword_10124DE50;
    v53 = v160;
    static Locale.current.getter(v52);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v51, v53, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v157, v48);
    goto LABEL_17;
  }
  v54 = v153;
  if (swift_dynamicCast(v154, v33, a2, v153, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x8000000100E37810);
    v55 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v56 = qword_10124DE50;
    v57 = (id)qword_10124DE50;
    v58 = v160;
    static Locale.current.getter(v57);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v56, v58, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v154, v54);
    goto LABEL_17;
  }
  v60 = v17;
  if (swift_dynamicCast(v150, v33, a2, v151, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E4AD80);
    v61 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v23, v17);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v62 = qword_10124DE50;
    v63 = (id)qword_10124DE50;
    v64 = v160;
    static Locale.current.getter(v63);
    v65 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v62, v64, 0, 0, 256);
    v66 = *(void (**)(char *, uint64_t))(v61 + 8);
    v39 = v65;
    v66(v23, v17);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v150, v151);
    goto LABEL_17;
  }
  v158 = v23;
  v67 = v146;
  v68 = v147;
  if (swift_dynamicCast(v146, v33, a2, v147, 0))
  {
    (*(void (**)(char *, uint64_t))(v143 + 8))(v67, v68);
LABEL_27:
    v72 = v158;
    (*(void (**)(char *, uint64_t))(v159 + 8))(v40, a2);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x8000000100E4AD20);
    v73 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v72, v60);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v74 = qword_10124DE50;
    v75 = (id)qword_10124DE50;
    v76 = v160;
    static Locale.current.getter(v75);
    v39 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v74, v76, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v60);
    return v39;
  }
  v69 = v60;
  v70 = v144;
  v71 = v145;
  if (swift_dynamicCast(v144, v40, a2, v145, 0))
  {
    (*(void (**)(char *, uint64_t))(v140 + 8))(v70, v71);
    v60 = v69;
    goto LABEL_27;
  }
  v77 = swift_dynamicCast(v141, v40, a2, v142, 0);
  v78 = v158;
  if (v77)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000056, 0x8000000100E4ACC0);
    v79 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v80 = qword_10124DE50;
    v81 = (id)qword_10124DE50;
    v82 = v160;
    static Locale.current.getter(v81);
    v83 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v80, v82, 0, 0, 256);
    v84 = *(void (**)(char *, uint64_t))(v79 + 8);
    v39 = v83;
    v84(v78, v69);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v141, v142);
    goto LABEL_17;
  }
  v85 = v69;
  if (swift_dynamicCast(v138, v40, a2, v139, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x8000000100E4AC60);
    v86 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v87 = qword_10124DE50;
    v88 = (id)qword_10124DE50;
    v89 = v160;
    static Locale.current.getter(v88);
    v90 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v87, v89, 0, 0, 256);
    v91 = *(void (**)(char *, uint64_t))(v86 + 8);
    v39 = v90;
    v91(v78, v69);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v138, v139);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v135, v40, a2, v136, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000100E4AC00);
    v92 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v93 = qword_10124DE50;
    v94 = (id)qword_10124DE50;
    v95 = v160;
    static Locale.current.getter(v94);
    v96 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v93, v95, 0, 0, 256);
    v97 = *(void (**)(char *, uint64_t))(v92 + 8);
    v39 = v96;
    v97(v78, v69);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v135, v136);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v132, v40, a2, v133, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E4ABA0);
    v98 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v99 = qword_10124DE50;
    v100 = (id)qword_10124DE50;
    v101 = v160;
    static Locale.current.getter(v100);
    v102 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v99, v101, 0, 0, 256);
    v103 = *(void (**)(char *, uint64_t))(v98 + 8);
    v39 = v102;
    v103(v78, v69);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v132, v133);
    goto LABEL_17;
  }
  v158 = v40;
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v104 = type metadata accessor for Logger(0);
  sub_100048B14(v104, (uint64_t)static Logger.actions);
  v105 = v129;
  v106 = v128;
  v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v128)(v129, v161, a2);
  v108 = Logger.logObject.getter(v107);
  v110 = static os_log_type_t.fault.getter(v109);
  if (os_log_type_enabled(v108, v110))
  {
    v111 = swift_slowAlloc(12, -1);
    v161 = swift_slowAlloc(32, -1);
    v162 = v161;
    *(_DWORD *)v111 = 136315138;
    v112 = (void (*)(char *, char *, uint64_t))v106;
    v113 = v127;
    v112(v127, v105, a2);
    v114 = (char *)String.init<A>(describing:)(v113, a2);
    v115 = v105;
    v117 = v116;
    *(_QWORD *)(v111 + 4) = sub_10099627C(v114, v116, &v162);
    v118 = swift_bridgeObjectRelease(v117);
    v119 = *(void (**)(char *, uint64_t, __n128))(v159 + 8);
    v119(v115, a2, v118);
    _os_log_impl((void *)&_mh_execute_header, v108, v110, "DeleteOrRemoveDownload: unhandled item type=%s", (uint8_t *)v111, 0xCu);
    v120 = v161;
    swift_arrayDestroy(v161, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v120, -1, -1);
    swift_slowDealloc(v111, -1, -1);
  }
  else
  {
    v121 = v105;
    v119 = *(void (**)(char *, uint64_t, __n128))(v159 + 8);
    ((void (*)(char *, uint64_t))v119)(v121, a2);
  }

  v122 = v158;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x8000000100E37810);
  v123 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v85);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v124 = qword_10124DE50;
  v125 = (id)qword_10124DE50;
  v126 = v160;
  static Locale.current.getter(v125);
  v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v124, v126, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v23, v85);
  ((void (*)(char *, uint64_t))v119)(v122, a2);
  return v39;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x80E265766F6D6552, 0xA9000000000000A6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.DeleteOrRemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E95B0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1010E95D8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10098C424;
}

uint64_t (*sub_10099CBC8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9778, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1010E97A0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10098C9EC;
}

double sub_10099CC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  double result;
  uint64_t v25;
  _OWORD v26[12];
  uint64_t v27;

  v8 = sub_100007E8C(&qword_1011D32B8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_10004A160(a4, (uint64_t)v26, &qword_1011D32C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 248) & ~v15;
  v17 = swift_allocObject(&unk_1010E97F0, v16 + v10, v15 | 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  v18 = v26[11];
  *(_OWORD *)(v17 + 208) = v26[10];
  *(_OWORD *)(v17 + 224) = v18;
  *(_QWORD *)(v17 + 240) = v27;
  v19 = v26[7];
  *(_OWORD *)(v17 + 144) = v26[6];
  *(_OWORD *)(v17 + 160) = v19;
  v20 = v26[9];
  *(_OWORD *)(v17 + 176) = v26[8];
  *(_OWORD *)(v17 + 192) = v20;
  v21 = v26[3];
  *(_OWORD *)(v17 + 80) = v26[2];
  *(_OWORD *)(v17 + 96) = v21;
  v22 = v26[5];
  *(_OWORD *)(v17 + 112) = v26[4];
  *(_OWORD *)(v17 + 128) = v22;
  v23 = v26[1];
  *(_OWORD *)(v17 + 48) = v26[0];
  *(_OWORD *)(v17 + 64) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  sub_100B237E0((uint64_t)v13, (uint64_t)&unk_1011D32D0, v17);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10099CE0C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10005AEE4;
  return v12(a6, a7);
}

uint64_t sub_10099CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_10099CE98, 0, 0);
}

uint64_t sub_10099CE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_10099CF48;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD00000000000003ALL, 0x8000000100E4AEA0, sub_10099DB74, v2, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_10099CF48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v5;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10099CFCC, 0, 0);
  v5 = *(_BYTE **)(v3 + 16);
  swift_task_dealloc(*(_QWORD *)(v3 + 48));
  *v5 = *(_BYTE *)(v3 + 72);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10099CFCC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E5418, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_10099D048(uint64_t a1, uint64_t a2)
{
  _s22DeleteOrRemoveDownloadO7ContextVwcp(a2, a1);
  return a2;
}

uint64_t sub_10099D07C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10099D0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1011D3224);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D3220 + dword_1011D3220))(a1, a2, v7, v6);
}

uint64_t sub_10099D124()
{
  return sub_10099D1EC((uint64_t (*)(_QWORD, uint64_t))sub_10099B264);
}

uint64_t sub_10099D134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3234);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10006AEE4;
  return MusicLibrary.remove<A>(_:)(v5, v2, v3);
}

uint64_t sub_10099D1E0()
{
  return sub_10099D1EC((uint64_t (*)(_QWORD, uint64_t))sub_10099B3FC);
}

uint64_t sub_10099D1EC(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 56), v1 + ((v2 + 64) & ~v2));
}

uint64_t sub_10099D218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10099D284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3244);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10006AEE4;
  return MusicLibrary.removeDownload<A>(_:)(v5, v2, v3);
}

uint64_t sub_10099D32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_10099D4EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D3254);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10006AEE4;
  return sub_10099B594(v8, v9, v2, v3, v4);
}

uint64_t sub_10099D5AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10099D5D4()
{
  unint64_t result;

  result = qword_1011D3260;
  if (!qword_1011D3260)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.DeleteOrRemoveDownload.Choice, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
    atomic_store(result, (unint64_t *)&qword_1011D3260);
  }
  return result;
}

unint64_t sub_10099D61C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3268;
  if (!qword_1011D3268)
  {
    v1 = sub_100044B54(&qword_1011D3270);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D3268);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload()
{
  return &type metadata for Actions.DeleteOrRemoveDownload;
}

double _s22DeleteOrRemoveDownloadO7ContextVwxx(_QWORD *a1)
{
  double result;

  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  swift_release(a1[9]);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1 + 10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[16]).n128_u64[0];
  return result;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  v13 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v13;
  v14 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v14;
  v5 = *(_QWORD *)(a2 + 72);
  v15 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 72) = v5;
  v6 = a1 + 80;
  v7 = a2 + 80;
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain(v4);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v5);
  v10(v6, v7, v9);
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain();
  swift_release();
  sub_100625DD8((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

__n128 _s22DeleteOrRemoveDownloadO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 80));
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 137))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Context()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Context;
}

uint64_t _s22DeleteOrRemoveDownloadO6ChoiceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10099DA74 + 4 * byte_100EDADF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10099DAA8 + 4 * asc_100EDADF0[v4]))();
}

uint64_t sub_10099DAA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10099DAB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10099DAB8);
  return result;
}

uint64_t sub_10099DAC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10099DACCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10099DAD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10099DAD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Choice()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Choice;
}

uint64_t sub_10099DAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1011D3224);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D3220 + dword_1011D3220))(a1, a2, v7, v6);
}

double sub_10099DB74(uint64_t a1)
{
  uint64_t *v1;

  return sub_10099CC44(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10099DB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011D32B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10099DC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D32B8) - 8) + 80);
  v3 = *(int **)(v0 + 32);
  v4 = v0 + 48;
  v5 = v0 + ((v2 + 248) & ~v2);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D32CC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v7 = (_QWORD *)swift_task_alloc(v3[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10005AEE4;
  return v9(v4, v5);
}

uint64_t sub_10099DD04@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10099A350(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *sub_10099DD20(_QWORD *a1)
{
  _s22DeleteOrRemoveDownloadO7ContextVwxx(a1);
  return a1;
}

uint64_t sub_10099DD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011D32B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 104));
  v5 = swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10099DDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D32B8) - 8) + 80);
  v3 = v0 + 24;
  v4 = v0 + ((v2 + 161) & ~v2);
  v5 = *(_BYTE *)(v0 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D32DC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10005AEE4;
  return sub_10099A544(v5, v3, v4);
}

uint64_t sub_10099DE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011D32B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 177) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 120));
  v5 = swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10099DF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D32B8) - 8) + 80);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = v0 + 40;
  v5 = v0 + ((v2 + 177) & ~v2);
  v6 = swift_task_alloc(dword_1011D32EC);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_10006AEE4;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 49) = v3;
  return swift_task_switch(sub_10099A734, 0, 0);
}

double static Actions.Download.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_10098CA8C;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1011D3300;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1011D3308;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t (**a8)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t (*v58)();
  uint64_t v59;
  uint64_t result;
  unint64_t (**v61)();
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  __int128 *v67;
  char *v68;
  uint64_t v69;
  unint64_t (**v70)();
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v77 = a6;
  v69 = a4;
  v70 = a8;
  v66 = a2;
  v67 = a3;
  v72 = *(_QWORD *)(a5 - 8);
  v73 = a7;
  v74 = *(_QWORD *)(v72 + 64);
  v11 = __chkstk_darwin(a1);
  v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v78 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  v71 = (char *)&v62 - v15;
  v16 = type metadata accessor for MusicLibrary.DownloadAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011D3310);
  v64 = *(_QWORD *)(v79 - 8);
  v20 = *(_QWORD *)(v64 + 64);
  v21 = __chkstk_darwin(v79);
  v76 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v62 - v23;
  v62 = (char *)&v62 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v62 - v26;
  static MusicLibraryAction<>.download.getter(v25);
  v75 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, a5, v16, a7, &protocol witness table for MusicLibrary.DownloadAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v28 = v72;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v29 = a5;
  v65(v71, a1, a5);
  v30 = v64;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v24, v27, v79);
  v31 = *(unsigned __int8 *)(v28 + 80);
  v32 = (v31 + 40) & ~v31;
  v33 = *(unsigned __int8 *)(v30 + 80);
  v34 = v30;
  v35 = v74;
  v36 = (v74 + v32 + v33) & ~v33;
  v63 = v31 | v33 | 7;
  v37 = (unint64_t (*)())swift_allocObject(&unk_1010E98F8, v36 + v20, v63);
  v38 = v29;
  *((_QWORD *)v37 + 2) = v29;
  v39 = v77;
  v40 = v73;
  *((_QWORD *)v37 + 3) = v77;
  *((_QWORD *)v37 + 4) = v40;
  v41 = (char *)v37 + v32;
  v72 = *(_QWORD *)(v72 + 32);
  v42 = v38;
  ((void (*)(char *, char *))v72)(v41, v71);
  v43 = (char *)v37 + v36;
  v44 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v45 = v79;
  v44(v43, v62, v79);
  v44(v76, v27, v45);
  v65(v78, v75, v42);
  v46 = (v33 + 80) & ~v33;
  v47 = (v20 + v31 + v46) & ~v31;
  v48 = (v35 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = (unint64_t (*)())swift_allocObject(&unk_1010E9920, v48 + 8, v63);
  *((_QWORD *)v49 + 2) = v42;
  *((_QWORD *)v49 + 3) = v39;
  v50 = v73;
  *((_QWORD *)v49 + 4) = v73;
  sub_100064C48(v67, (uint64_t)v49 + 40);
  v44((char *)v49 + v46, v76, v79);
  v51 = (void (*)(char *, uint64_t, uint64_t))v72;
  ((void (*)(char *, char *, uint64_t))v72)((char *)v49 + v47, v78, v42);
  *(_QWORD *)((char *)v49 + v48) = v66;
  v52 = v68;
  v51(v68, v75, v42);
  v53 = (uint64_t (*)(char *, char *, uint64_t))v51;
  v54 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = (v55 + 40) & ~v55;
  v57 = (*(_QWORD *)(v54 + 64) + v31 + v56) & ~v31;
  v58 = (unint64_t (*)())swift_allocObject(&unk_1010E9948, v57 + v74, v31 | v55 | 7);
  v59 = v77;
  *((_QWORD *)v58 + 2) = v42;
  *((_QWORD *)v58 + 3) = v59;
  *((_QWORD *)v58 + 4) = v50;
  sub_10098C5E8(v69, (uint64_t)v58 + v56);
  result = v53((char *)v58 + v57, v52, v42);
  v61 = v70;
  *v70 = sub_10099E7A4;
  v61[1] = v37;
  v61[2] = (unint64_t (*)())&unk_1011D3320;
  v61[3] = v49;
  v61[4] = (unint64_t (*)())&unk_1011D3330;
  v61[5] = v58;
  return result;
}

unint64_t sub_10099E434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v35 = a2;
  v36 = a1;
  v4 = sub_100007E8C(&qword_1011D3398);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D6820);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D6830);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v36, a3);
  v21 = swift_dynamicCast(v13, v16, a3, v17, 6);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v21 & 1) == 0)
  {
    v22(v13, 1, 1, v17);
    v26 = &qword_1011D6830;
    v27 = (uint64_t)v13;
    goto LABEL_5;
  }
  v23 = v9;
  v22(v13, 0, 1, v17);
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v13, v17);
  Playlist.entries.getter(v24);
  v25 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v26 = &qword_1011D3398;
    v27 = (uint64_t)v6;
LABEL_5:
    sub_10004FF60(v27, v26);
    return sub_10099E81C();
  }
  v29 = v23;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v23, v6, v7);
  v30 = sub_1009A12EC();
  dispatch thunk of Collection.startIndex.getter(v7);
  dispatch thunk of Collection.endIndex.getter(v37, v7, v30);
  v32 = v37[0];
  v31 = v37[1];
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v31 == v32)
    return 0xD000000000000011;
  return sub_10099E81C();
}

uint64_t sub_10099E6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100007E8C(&qword_1011D3310);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, v8);
}

unint64_t sub_10099E7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D3310) - 8) + 80);
  return sub_10099E434(v0 + v3, v0 + ((v3 + v4 + v5) & ~v5), v1);
}

uint64_t sub_10099E81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  __n128 v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43[2];

  v1 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v39 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v39 - v9;
  v11 = sub_100007E8C(&qword_1011D3310);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v40 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v41 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v42 = v0;
  v19((char *)&v39 - v17, v0, v11);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v20 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v18, v11);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v18, v1);
    v21 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v21(v8, v10, v1);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v8, v1) != enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v21(v5, v10, v1);
      v22 = String.init<A>(describing:)(v5, v1);
      v23 = *(void (**)(char *, uint64_t))(v2 + 8);
      v23(v10, v1);
      v23(v8, v1);
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
    return 0;
  }
  if (v20 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v24 = type metadata accessor for Logger(0);
  sub_100048B14(v24, (uint64_t)static Logger.actions);
  v25 = v41;
  v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v41, v42, v11);
  v27 = Logger.logObject.getter(v26);
  v29 = static os_log_type_t.fault.getter(v28);
  if (os_log_type_enabled(v27, v29))
  {
    v30 = swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v43[0] = v31;
    *(_DWORD *)v30 = 136315138;
    v32 = v40;
    v19(v40, (uint64_t)v25, v11);
    v33 = (char *)String.init<A>(describing:)(v32, v11);
    v35 = v34;
    *(_QWORD *)(v30 + 4) = sub_10099627C(v33, v34, v43);
    v36 = swift_bridgeObjectRelease(v35);
    v37 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
    v37(v25, v11, v36);
    _os_log_impl((void *)&_mh_execute_header, v27, v29, "Unknown status=%s", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
    ((void (*)(char *, uint64_t))v37)(v25, v11);
  }

  v43[0] = 0;
  v43[1] = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(v42, v43, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v22 = v43[0];
  ((void (*)(char *, uint64_t))v37)(v18, v11);
  return v22;
}

uint64_t sub_10099EBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  v9 = type metadata accessor for Locale(0);
  v7[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v7[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[28] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[29] = swift_task_alloc(v12);
  v7[30] = swift_task_alloc(v12);
  v13 = *(_QWORD *)(a5 - 8);
  v7[31] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v7[32] = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[33] = swift_task_alloc(v15);
  v7[34] = swift_task_alloc(v15);
  v16 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v7[35] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[36] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[37] = swift_task_alloc(v18);
  v7[38] = swift_task_alloc(v18);
  v7[39] = swift_task_alloc(v18);
  v7[40] = swift_task_alloc(v18);
  v19 = sub_100007E8C(&qword_1011D3310);
  v7[41] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[42] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[43] = swift_task_alloc(v21);
  v7[44] = swift_task_alloc(v21);
  v7[45] = swift_task_alloc(v21);
  return swift_task_switch(sub_10099ED5C, 0, 0);
}

uint64_t sub_10099ED5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  __n128 v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __n128 v32;
  void (*v33)(uint64_t, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __n128 v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unsigned __int8 v59;
  void *v60;
  id v61;
  NSString v62;
  unsigned __int8 v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v4(v1, *(_QWORD *)(v0 + 160), v2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v6 = *(_QWORD *)(v0 + 360);
    v8 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 288);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 336) + 96))(v6, *(_QWORD *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v6, v9);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v11(v8, v7, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v8, v9) == enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v12 = *(_QWORD *)(v0 + 152);
      v13 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 368) = v13;
      *(_QWORD *)(v13 + 16) = v12;
      v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 376) = v14;
      *v14 = v0;
      v14[1] = sub_10099F5F0;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 440, 0, 0, 0xD00000000000001DLL, 0x8000000100E4AFD0, sub_1009A10DC, v13, &type metadata for Bool);
    }
    else
    {
      if (qword_1011D1B60 != -1)
        swift_once(&qword_1011D1B60, sub_100A01630);
      v34 = *(_QWORD *)(v0 + 320);
      v35 = *(_QWORD *)(v0 + 304);
      v36 = *(_QWORD *)(v0 + 280);
      v37 = type metadata accessor for Logger(0);
      sub_100048B14(v37, (uint64_t)static Logger.actions);
      v38 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v35, v34, v36);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter(v39);
      v41 = os_log_type_enabled(v39, v40);
      v42 = *(_QWORD *)(v0 + 320);
      v43 = *(_QWORD *)(v0 + 304);
      if (v41)
      {
        v44 = *(_QWORD *)(v0 + 296);
        v102 = *(_QWORD *)(v0 + 288);
        v45 = *(_QWORD *)(v0 + 280);
        v46 = swift_slowAlloc(12, -1);
        v47 = swift_slowAlloc(32, -1);
        v105 = v47;
        *(_DWORD *)v46 = 136315138;
        v11(v44, v43, v45);
        v48 = (char *)String.init<A>(describing:)(v44, v45);
        *(_QWORD *)(v46 + 4) = sub_10099627C(v48, v49, &v105);
        v50 = swift_bridgeObjectRelease();
        v51 = *(void (**)(uint64_t, uint64_t, __n128))(v102 + 8);
        v51(v43, v45, v50);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Couldn't download for reason: %s", (uint8_t *)v46, 0xCu);
        swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v46, -1, -1);

      }
      else
      {
        v45 = *(_QWORD *)(v0 + 280);
        v65 = *(_QWORD *)(v0 + 288);

        v51 = *(void (**)(uint64_t, uint64_t, __n128))(v65 + 8);
        ((void (*)(uint64_t, uint64_t))v51)(v43, v45);
      }
      ((void (*)(uint64_t, uint64_t))v51)(v42, v45);
      ((void (*)(_QWORD, _QWORD))v51)(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
      v66 = *(_QWORD *)(v0 + 352);
      v67 = *(_QWORD *)(v0 + 344);
      v69 = *(_QWORD *)(v0 + 312);
      v68 = *(_QWORD *)(v0 + 320);
      v71 = *(_QWORD *)(v0 + 296);
      v70 = *(_QWORD *)(v0 + 304);
      v73 = *(_QWORD *)(v0 + 264);
      v72 = *(_QWORD *)(v0 + 272);
      v74 = *(_QWORD *)(v0 + 240);
      v99 = *(_QWORD *)(v0 + 232);
      v103 = *(_QWORD *)(v0 + 208);
      swift_task_dealloc(*(_QWORD *)(v0 + 360));
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v99);
      swift_task_dealloc(v103);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  if (v5 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    if (qword_1011D1B60 != -1)
      swift_once(&qword_1011D1B60, sub_100A01630);
    v16 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 328);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = type metadata accessor for Logger(0);
    sub_100048B14(v19, (uint64_t)static Logger.actions);
    v20 = v4(v16, v18, v17);
    v21 = Logger.logObject.getter(v20);
    v23 = static os_log_type_t.fault.getter(v22);
    v24 = os_log_type_enabled(v21, v23);
    v25 = *(_QWORD *)(v0 + 352);
    if (v24)
    {
      v26 = *(_QWORD *)(v0 + 344);
      v101 = *(_QWORD *)(v0 + 336);
      v27 = *(_QWORD *)(v0 + 328);
      v28 = swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v105 = v29;
      *(_DWORD *)v28 = 136315138;
      v4(v26, v25, v27);
      v30 = (char *)String.init<A>(describing:)(v26, v27);
      *(_QWORD *)(v28 + 4) = sub_10099627C(v30, v31, &v105);
      v32 = swift_bridgeObjectRelease();
      v33 = *(void (**)(uint64_t, uint64_t, __n128))(v101 + 8);
      v33(v25, v27, v32);
      _os_log_impl((void *)&_mh_execute_header, v21, v23, "Unknown status=%s", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      v33 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 336) + 8);
      ((void (*)(_QWORD, _QWORD))v33)(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
    }

    ((void (*)(_QWORD, _QWORD))v33)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 328));
  }
  v52 = *(_QWORD *)(v0 + 272);
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v54(v52, *(_QWORD *)(v0 + 168), v53);
  v55 = sub_100007E8C(&qword_1011D3368);
  if ((swift_dynamicCast(v0 + 112, v52, v53, v55, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_10004FF60(v0 + 112, &qword_1011D3370);
    goto LABEL_21;
  }
  sub_100064C48((__int128 *)(v0 + 112), v0 + 72);
  v57 = *(_QWORD *)(v0 + 96);
  v56 = *(_QWORD *)(v0 + 104);
  sub_100007E68((_QWORD *)(v0 + 72), v57);
  if (!sub_100A65B20(v57, v56))
    goto LABEL_19;
  v58 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v59 = objc_msgSend(v58, "prefersSpatialDownloads");

  if ((v59 & 1) != 0
    || (v60 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v60,
        v61 = objc_msgSend(v60, "standardUserDefaults"),
        v62 = String._bridgeToObjectiveC()(),
        v63 = objc_msgSend(v61, "BOOLForKey:", v62),
        v62,
        v61,
        (v63 & 1) != 0))
  {
LABEL_19:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
LABEL_21:
    v64 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v64;
    *v64 = v0;
    v64[1] = sub_10099FDDC;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v75 = *(_QWORD *)(v0 + 232);
  v76 = *(_QWORD *)(v0 + 240);
  v77 = *(_QWORD *)(v0 + 216);
  v78 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x8000000100E4AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v75, v76, v77);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v79 = *(_QWORD *)(v0 + 248);
  v96 = *(_QWORD *)(v0 + 264);
  v97 = *(_QWORD *)(v0 + 256);
  v81 = *(_QWORD *)(v0 + 232);
  v80 = *(_QWORD *)(v0 + 240);
  v83 = *(_QWORD *)(v0 + 216);
  v82 = *(_QWORD *)(v0 + 224);
  v84 = *(_QWORD *)(v0 + 208);
  v85 = *(_QWORD *)(v0 + 168);
  v98 = *(_QWORD *)(v0 + 176);
  v100 = *(_QWORD *)(v0 + 200);
  v86 = qword_10124DE50;
  v87 = (id)qword_10124DE50;
  v104 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v87);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v86, v84, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v88;
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v83);
  v54(v96, v85, v104);
  v89 = *(unsigned __int8 *)(v79 + 80);
  v90 = (v89 + 48) & ~v89;
  v91 = swift_allocObject(&unk_1010E9AE8, v90 + v97, v89 | 7);
  *(_QWORD *)(v0 + 408) = v91;
  *(_OWORD *)(v91 + 16) = v104;
  *(_QWORD *)(v91 + 32) = v100;
  *(_QWORD *)(v91 + 40) = v98;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v79 + 32))(v91 + v90, v96, v104);
  v92 = type metadata accessor for MainActor(0);
  v93 = swift_retain();
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v93);
  v94 = dispatch thunk of Actor.unownedExecutor.getter(v92, &protocol witness table for MainActor);
  return swift_task_switch(sub_10099FB3C, v94, v95);
}

uint64_t sub_10099F5F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 368);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10099F64C, 0, 0);
}

uint64_t sub_10099F64C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned __int8 v17;
  void *v18;
  id v19;
  NSString v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;

  v1 = *(unsigned __int8 *)(v0 + 440);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.actions);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67109120;
    *(_DWORD *)(v6 + 4) = v1;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Cellular data enablement: %{BOOL}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (!v1)
  {
    v22 = *(_QWORD *)(v0 + 352);
    v23 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 312);
    v24 = *(_QWORD *)(v0 + 320);
    v27 = *(_QWORD *)(v0 + 296);
    v26 = *(_QWORD *)(v0 + 304);
    v29 = *(_QWORD *)(v0 + 264);
    v28 = *(_QWORD *)(v0 + 272);
    v30 = *(_QWORD *)(v0 + 240);
    v57 = *(_QWORD *)(v0 + 232);
    v59 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v12(v10, *(_QWORD *)(v0 + 168), v11);
  v13 = sub_100007E8C(&qword_1011D3368);
  if ((swift_dynamicCast(v0 + 112, v10, v11, v13, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_10004FF60(v0 + 112, &qword_1011D3370);
    goto LABEL_13;
  }
  sub_100064C48((__int128 *)(v0 + 112), v0 + 72);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 104);
  sub_100007E68((_QWORD *)(v0 + 72), v14);
  if (!sub_100A65B20(v14, v15))
    goto LABEL_10;
  v16 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v17 = objc_msgSend(v16, "prefersSpatialDownloads");

  if ((v17 & 1) != 0
    || (v18 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v18,
        v19 = objc_msgSend(v18, "standardUserDefaults"),
        v20 = String._bridgeToObjectiveC()(),
        v21 = objc_msgSend(v19, "BOOLForKey:", v20),
        v20,
        v19,
        (v21 & 1) != 0))
  {
LABEL_10:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
LABEL_13:
    v32 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v32;
    *v32 = v0;
    v32[1] = sub_10099FDDC;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v33 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 240);
  v35 = *(_QWORD *)(v0 + 216);
  v36 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x8000000100E4AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v34, v35);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v37 = *(_QWORD *)(v0 + 248);
  v54 = *(_QWORD *)(v0 + 264);
  v55 = *(_QWORD *)(v0 + 256);
  v39 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 240);
  v41 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 208);
  v43 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 176);
  v58 = *(_QWORD *)(v0 + 200);
  v44 = qword_10124DE50;
  v45 = (id)qword_10124DE50;
  v60 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v45);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, v44, v42, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v46;
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
  v12(v54, v43, v60);
  v47 = *(unsigned __int8 *)(v37 + 80);
  v48 = (v47 + 48) & ~v47;
  v49 = swift_allocObject(&unk_1010E9AE8, v48 + v55, v47 | 7);
  *(_QWORD *)(v0 + 408) = v49;
  *(_OWORD *)(v49 + 16) = v60;
  *(_QWORD *)(v49 + 32) = v58;
  *(_QWORD *)(v49 + 40) = v56;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v37 + 32))(v49 + v48, v54, v60);
  v50 = type metadata accessor for MainActor(0);
  v51 = swift_retain();
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v51);
  v52 = dispatch thunk of Actor.unownedExecutor.getter(v50, &protocol witness table for MainActor);
  return swift_task_switch(sub_10099FB3C, v52, v53);
}

uint64_t sub_10099FB3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[51];
  v3 = v0[49];
  v2 = v0[50];
  swift_release();
  sub_100A571B8(v3, v2, (uint64_t)&unk_1011D3380, v1, (uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch(sub_10099FBB4, 0, 0);
}

uint64_t sub_10099FBB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 424) = v5;
  *v5 = v0;
  v5[1] = sub_10099FC3C;
  return v7(v0 + 16, v2, v3);
}

uint64_t sub_10099FC3C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_10099FC90, 0, 0);
}

uint64_t sub_10099FC90()
{
  uint64_t v0;
  id v1;
  Class isa;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(*(id *)(v0 + 384), "standardUserDefaults");
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v3);

  sub_100365848((_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10099FDDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(*v0 + 432);
  v2 = *v0;
  swift_task_dealloc(v1);
  v3 = *(_QWORD *)(v2 + 352);
  v4 = *(_QWORD *)(v2 + 344);
  v6 = *(_QWORD *)(v2 + 312);
  v5 = *(_QWORD *)(v2 + 320);
  v8 = *(_QWORD *)(v2 + 296);
  v7 = *(_QWORD *)(v2 + 304);
  v9 = *(_QWORD *)(v2 + 272);
  v11 = *(_QWORD *)(v2 + 264);
  v12 = *(_QWORD *)(v2 + 240);
  v13 = *(_QWORD *)(v2 + 232);
  v14 = *(_QWORD *)(v2 + 208);
  swift_task_dealloc(*(_QWORD *)(v2 + 360));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10099FED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_100007E8C(&qword_1011D3310);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 40));
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  swift_release();
  return swift_deallocObject(v0, v7);
}

uint64_t sub_10099FFA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011D3310) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t)(v0 + 5);
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v8;
  v12 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_1011D331C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10005AEE4;
  return sub_10099EBF4(v9, v10, v11, v12, v2, v3, v4);
}

double sub_1009A0078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  __int128 v20[2];

  v4 = sub_100007E8C(&qword_1011D77A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_100064C78(a2, (uint64_t)v20);
  type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_1010E9B10, v16 + 40, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v7, v4);
  sub_100064C48(v20, v17 + v16);
  sub_100A3F884((uint64_t)v10, (uint64_t)&unk_1011D3390, v17);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1009A01F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_100007E8C(&qword_1011D77A0);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[13] = v8;
  v5[14] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[15] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[16] = v11;
  v5[17] = v12;
  return swift_task_switch(sub_1009A0294, v11, v12);
}

uint64_t sub_1009A0294()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t **v18;
  uint64_t (*v20)(uint64_t *, uint64_t, uint64_t);

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.actions);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Will present cellular data enablement alert", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[13];
  v6 = v0[14];
  v8 = v0[11];
  v9 = v0[12];
  v11 = v0[9];
  v10 = (_QWORD *)v0[10];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v11, v8);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_1010E9B38, v13 + v7, v12 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v6, v8);
  sub_100A5755C((uint64_t)sub_1009A1284, v14, v0 + 2);
  swift_release();
  v15 = v10[3];
  v16 = v10[4];
  sub_100007E68(v10, v15);
  v17 = *(int **)(v16 + 8);
  v20 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v17 + *v17);
  v18 = (uint64_t **)swift_task_alloc(v17[1]);
  v0[18] = (uint64_t)v18;
  *v18 = v0;
  v18[1] = (uint64_t *)sub_1009A044C;
  return v20(v0 + 2, v15, v16);
}

uint64_t sub_1009A044C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_1009A0498, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_1009A0498()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_100365848((_QWORD *)(v0 + 16));
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A04DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  *(_QWORD *)(v5 + 24) = v9;
  *v9 = v5;
  v9[1] = sub_1009A054C;
  return MusicLibrary.download<A>(_:)(a3, a4, a5);
}

uint64_t sub_1009A054C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1009A05B8, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1009A05B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 32);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v11 = (char *)String.init<A>(describing:)(v0 + 16, v10);
    *(_QWORD *)(v8 + 4) = sub_10099627C(v11, v12, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Download: perform failed: %{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 32));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A077C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009A0828, 0, 0);
}

uint64_t sub_1009A0828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10098C968(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009A09DC, v19, v20);
  }
}

uint64_t sub_1009A09DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 12, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_10099B8CC, 0, 0);
}

uint64_t sub_1009A0AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009A0C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D332C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009A077C(v7, v8, v2, v3);
}

uint64_t Actions.Download.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.Download.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9970, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x8000000100E3AC10;
  v1 = swift_allocObject(&unk_1010E9998, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x8000000100E3AC10;
  return sub_10098C424;
}

uint64_t (*sub_1009A0F04())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9A98, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x8000000100E3AC10;
  v1 = swift_allocObject(&unk_1010E9AC0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x8000000100E3AC10;
  return sub_10098C9EC;
}

uint64_t sub_1009A0F88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.Download()
{
  return &type metadata for Actions.Download;
}

ValueMetadata *type metadata accessor for Actions.Download.Context()
{
  return &type metadata for Actions.Download.Context;
}

uint64_t sub_1009A0FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009A1038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 48) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D337C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  v6[3] = v7;
  *v7 = v6;
  v7[1] = sub_1009A054C;
  return MusicLibrary.download<A>(_:)(v5, v2, v3);
}

double sub_1009A10DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1009A0078(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1009A10E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011D77A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v4));
  return swift_deallocObject(v0, v4 + 40);
}

uint64_t sub_1009A1178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D77A0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D338C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1009A01F8(a1, v6, v7, v8, v9);
}

uint64_t sub_1009A1220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011D77A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1009A1284(char a1)
{
  uint64_t v2;
  char v4;

  sub_100007E8C(&qword_1011D77A0);
  v4 = a1;
  v2 = sub_100007E8C(&qword_1011D77A0);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

unint64_t sub_1009A12EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6850;
  if (!qword_1011D6850)
  {
    v1 = sub_100044B54(&qword_1011D6820);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D6850);
  }
  return result;
}

uint64_t NSUserDefaults.ValueTransformer.transform.getter(uint64_t a1, uint64_t a2)
{
  swift_retain(a2);
  return a1;
}

uint64_t NSUserDefaults.ValueTransformer.transform.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain(a4);
  return a3;
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

double (*UIView.Shadow.radius.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.EditPlaylist.Context.init(canEditPlaylist:presentEditPlaylistView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = swift_allocObject(&unk_1010E9B78, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  return a1;
}

uint64_t sub_1009A1478(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009A14E4, v5, v6);
}

uint64_t sub_1009A14E4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A151C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009A1540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D33A4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011D33A0 + dword_1011D33A0))(v2, v3);
}

double static Actions.EditPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 25;
  *(_QWORD *)(a5 + 40) = sub_10098CA8C;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_1011D33B0;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_1011D33B8;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain(a2);
  *(_QWORD *)&result = swift_retain(a4).n128_u64[0];
  return result;
}

uint64_t sub_1009A1608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100169E9C;
  return v6();
}

double sub_1009A165C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 25;
  *(_QWORD *)(a2 + 40) = sub_10098CA8C;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_1011D33B0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_1011D33B8;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t Actions.EditPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.EditPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9BA0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_1010E9BC8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_10098C424;
}

uint64_t (*sub_1009A18A8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9CC0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_1010E9CE8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_10098C9EC;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist()
{
  return &type metadata for Actions.EditPlaylist;
}

uint64_t _s12EditPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *_s12EditPlaylistO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformPlayIndicator.ColorPalette(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformPlayIndicator.ColorPalette(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist.Context()
{
  return &type metadata for Actions.EditPlaylist.Context;
}

uint64_t sub_1009A1AB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009A1AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D32B0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_1009A1C0C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_1009A1C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_100007E8C(&qword_1011D32B0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.unsupportedType(_:))
    {
      v15 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.removalNotPermitted(_:))
      {
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        v15 = 0xD000000000000015;
      }
      else
      {
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.notDownloaded(_:))
        {
          v15 = 0x6E776F6420746F4ELL;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v15;
        }
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.sharedLibrary(_:))
        {
          v15 = 0x61685320656D6F48;
        }
        else
        {
          v15 = 0x206E776F6E6B6E55;
          v16(v6, v2);
        }
      }
      v16(v8, v2);
    }
    return v15;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+RemoveDownload.swift", 38, 2, 109, 0);
  __break(1u);
  return result;
}

double static Actions.RemoveDownload.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = v2;
  *(_BYTE *)(a2 + 64) = 40;
  *(_QWORD *)(a2 + 72) = sub_1009A1F94;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1011D33F0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1011D33F8;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_1009A1F94(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t (**)(uint64_t))a1;
  result = (*(uint64_t (**)(void))(a1 + 16))();
  if (v3 == 1)
  {
    v4 = v1(result);
    v6 = v5;
    sub_10013B670(v4, v5);
    if (v6 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_1009A1FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10006AEE4;
  return v6();
}

uint64_t sub_1009A2050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10005AEE4;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t Actions.RemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x442065766F6D6552, 0xEF64616F6C6E776FLL);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9D28, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1010E9D50, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10098C424;
}

uint64_t (*sub_1009A22B0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9EF0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_1010E9F18, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10098C9EC;
}

uint64_t Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t result;
  uint64_t (**v52)();
  uint64_t (*v53)();
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)();
  char *v63;
  uint64_t v64;
  uint64_t (**v65)();
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;

  v67 = a6;
  v64 = a3;
  v65 = a7;
  v69 = a2;
  v11 = *(_QWORD *)(a4 - 8);
  v12 = __chkstk_darwin(a1);
  v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v59 = (char *)&v54 - v15;
  v16 = __chkstk_darwin(v14);
  v58 = (char *)&v54 - v17;
  v19 = v18;
  v60 = v18;
  __chkstk_darwin(v16);
  v21 = (char *)&v54 - v20;
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v68((char *)&v54 - v20, a1, v22);
  v61 = *(unsigned __int8 *)(v11 + 80);
  v23 = (v61 + 40) & ~v61;
  v66 = v61 | 7;
  v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  v56 = v24;
  v57 = v24 + 8;
  v26 = (_QWORD *)swift_allocObject(&unk_1010E9D78, v24 + 8, v61 | 7);
  v26[2] = a4;
  v26[3] = a5;
  v27 = a5;
  v54 = a5;
  v26[4] = a6;
  v28 = v26;
  v62 = (uint64_t (*)())v26;
  v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v29((char *)v26 + v23, v21, a4);
  v30 = v29;
  v55 = (void (*)(char *, uint64_t, uint64_t))v29;
  v31 = v68;
  v32 = v69;
  *(_QWORD *)((char *)v28 + v24) = v69;
  v33 = v58;
  v31(v58, a1, a4);
  v34 = v25;
  v35 = v66;
  v36 = (uint64_t (*)())swift_allocObject(&unk_1010E9DA0, v34, v66);
  *((_QWORD *)v36 + 2) = a4;
  *((_QWORD *)v36 + 3) = v27;
  v37 = v67;
  *((_QWORD *)v36 + 4) = v67;
  v30((char *)v36 + v23, v33, a4);
  v38 = v56;
  *(_QWORD *)((char *)v36 + v56) = v32;
  v39 = v59;
  v40 = a1;
  v68(v59, a1, a4);
  v41 = (uint64_t (*)())swift_allocObject(&unk_1010E9DC8, v57, v35);
  v42 = v54;
  *((_QWORD *)v41 + 2) = a4;
  *((_QWORD *)v41 + 3) = v42;
  *((_QWORD *)v41 + 4) = v37;
  v43 = v55;
  v55((char *)v41 + v23, (uint64_t)v39, a4);
  v44 = v69;
  *(_QWORD *)((char *)v41 + v38) = v69;
  v45 = v63;
  v43(v63, v40, a4);
  v46 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v47 = *(unsigned __int8 *)(v46 + 80);
  v48 = (v47 + 40) & ~v47;
  v49 = (*(_QWORD *)(v46 + 64) + v61 + v48) & ~v61;
  v50 = (uint64_t (*)())swift_allocObject(&unk_1010E9DF0, v49 + v60, v66 | v47);
  *((_QWORD *)v50 + 2) = a4;
  *((_QWORD *)v50 + 3) = v42;
  *((_QWORD *)v50 + 4) = v67;
  sub_10098C5E8(v64, (uint64_t)v50 + v48);
  v43((char *)v50 + v49, (uint64_t)v45, a4);
  result = swift_retain_n(v44, 2);
  v52 = v65;
  v53 = v62;
  *v65 = sub_1009A2A20;
  v52[1] = v53;
  v52[2] = (uint64_t (*)())sub_1009A2A58;
  v52[3] = v36;
  v52[4] = (uint64_t (*)())&unk_1011D3408;
  v52[5] = v41;
  v52[6] = (uint64_t (*)())&unk_1011D3418;
  v52[7] = v50;
  return result;
}

uint64_t sub_1009A2630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)swift_task_alloc(dword_1011D3454);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10006AEE4;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v8[2] = v9;
  *v9 = v8;
  v9[1] = sub_10005AEE4;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t sub_1009A26C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009A2774, 0, 0);
}

uint64_t sub_1009A2774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10098C968(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009A2928, v19, v20);
  }
}

uint64_t sub_1009A2928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 29, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_10099B8CC, 0, 0);
}

uint64_t sub_1009A29F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009A2A20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1009984BC((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t sub_1009A2A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1009A1AE4(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 32));
}

uint64_t sub_1009A2A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1009A2AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + v5;
  v7 = *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_1011D3404);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10005AEE4;
  return sub_1009A2630(v6, v7, v2, v3);
}

uint64_t sub_1009A2B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009A2D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D3414);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009A26C8(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload()
{
  return &type metadata for Actions.RemoveDownload;
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload.Context()
{
  return &type metadata for Actions.RemoveDownload.Context;
}

double static Actions.RemoveFromPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 41;
  *(_QWORD *)(a2 + 56) = sub_10098CA8C;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1011D3458;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1011D3460;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t (*Actions.RemoveFromPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010E9F58, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_1010E9F80, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_10098C424;
}

uint64_t (*sub_1009A2F48())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EA0F8, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_1010EA120, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_10098C9EC;
}

uint64_t Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t (**v48)();
  char *v49;
  uint64_t v50;

  v46 = a3;
  v47 = a4;
  v42 = a2;
  v48 = a5;
  v49 = a1;
  v43 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v43 - 8);
  v50 = *(_QWORD *)(v6 + 64);
  v7 = __chkstk_darwin(v43);
  v45 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - v9;
  v40 = (char *)&v39 - v9;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v39 - v15, a2, v11);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = v17 | 7;
  v44 = swift_allocObject(&unk_1010E9FA8, v18 + v13, v17 | 7);
  v20 = v44 + v18;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v21(v20, v16, v11);
  v22 = v10;
  v23 = v43;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v49, v43);
  v21((uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v11);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = (v50 + v17 + v25) & ~v17;
  v27 = swift_allocObject(&unk_1010E9FD0, v26 + v13, v19 | v24);
  *(_QWORD *)(v27 + 16) = v46;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v29 = v23;
  v28(v27 + v25, v40, v23);
  v21(v27 + v26, v41, v11);
  v30 = v45;
  v28((uint64_t)v45, v49, v29);
  v31 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 16) & ~v32;
  v34 = (*(_QWORD *)(v31 + 64) + v24 + v33) & ~v24;
  v35 = swift_allocObject(&unk_1010E9FF8, v34 + v50, v24 | v32 | 7);
  sub_10098C5E8(v47, v35 + v33);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v35 + v34, v30, v29);
  v37 = v48;
  v38 = v44;
  *v48 = sub_1009A3D24;
  v37[1] = (unint64_t (*)())v38;
  v37[2] = (unint64_t (*)())&unk_1011D3470;
  v37[3] = (unint64_t (*)())v27;
  v37[4] = (unint64_t (*)())&unk_1011D3480;
  v37[5] = (unint64_t (*)())v35;
  return result;
}

unint64_t sub_1009A325C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v0 = type metadata accessor for Playlist.EditableComponents(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011D6C10);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011D6C10);
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    v8 = sub_1009A4128();
    v9 = dispatch thunk of SetAlgebra.isSuperset(of:)(v3, v0, v8);
    v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v3, v0);
    v10(v7, v0);
    if ((v9 & 1) != 0)
      return 0;
  }
  return 0xD00000000000001ALL;
}

uint64_t sub_1009A339C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[3] = a2;
  v3[4] = a3;
  v6 = type metadata accessor for Playlist(0);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[6] = v7;
  v3[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v3[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[9] = v9;
  v3[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove(_:from:)[1]);
  v3[11] = v10;
  *v10 = v3;
  v10[1] = sub_1009A3458;
  return MusicLibrary.remove(_:from:)(a2, a3);
}

uint64_t sub_1009A3458()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1009A34DC, 0, 0);
  v5 = *(_QWORD *)(v3 + 56);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1009A34DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  NSObject *log;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v35 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = type metadata accessor for Logger(0);
  sub_100048B14(v9, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v35, v7, v6);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 48);
  if (v13)
  {
    log = v11;
    v21 = swift_slowAlloc(32, -1);
    v36 = swift_slowAlloc(96, -1);
    v37 = v36;
    *(_DWORD *)v21 = 136446722;
    v22 = (char *)Playlist.Entry.description.getter();
    *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v23, &v37);
    v24 = swift_bridgeObjectRelease();
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v16, v18, v24);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = (char *)Playlist.description.getter(v25);
    *(_QWORD *)(v21 + 14) = sub_10099627C(v26, v27, &v37);
    v28 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(v17, v20, v28);
    *(_WORD *)(v21 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v14;
    swift_errorRetain(v14);
    v29 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v30 = (char *)String.init<A>(describing:)(v0 + 16, v29);
    *(_QWORD *)(v21 + 24) = sub_10099627C(v30, v31, &v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, log, v12, "Failed to remove entry=%{public}s from playlist=%{public}s with error=%{public}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy(v36, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    swift_errorRelease(v14);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v20);
    swift_errorRelease(v14);
    swift_errorRelease(v14);

  }
  v32 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A37A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D2EB8);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009A384C, 0, 0);
}

uint64_t sub_1009A384C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10098C968(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 120), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = sub_1002ED50C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    v9 = Playlist.Entry.catalogID.getter(v8);
    *(_QWORD *)(v0 + 152) = v10;
    *(_QWORD *)(v0 + 160) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = Playlist.Entry.metricsContentType.getter();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100EA93A0;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 168) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 176) = v15;
    *(_QWORD *)(v0 + 184) = v16;
    *(_WORD *)(v0 + 200) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009A39F0, v20, v21);
  }
}

uint64_t sub_1009A39F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 200);
  swift_release();
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_1009AFBBC(v9, v4, 5, 31, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009A3AE4, 0, 0);
}

uint64_t sub_1009A3AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10098C9B0(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO18RemoveFromPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E4B080);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1009A3CA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009A3CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1009A3D24()
{
  type metadata accessor for Playlist(0);
  return sub_1009A325C();
}

uint64_t sub_1009A3D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1009A3E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D346C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10005AEE4;
  return sub_1009A339C(v7, v8, v9);
}

uint64_t sub_1009A3EA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for Playlist.Entry(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v2;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v2, 1, v9))
  {
    v19 = v7;
    v20 = v3;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v3 = v20;
  }
  v13 = (v2 + v3 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v4);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009A4070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D347C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009A37A4(v7, v8);
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist()
{
  return &type metadata for Actions.RemoveFromPlaylist;
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist.Context()
{
  return &type metadata for Actions.RemoveFromPlaylist.Context;
}

unint64_t sub_1009A4128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D34B8;
  if (!qword_1011D34B8)
  {
    v1 = type metadata accessor for Playlist.EditableComponents(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist.EditableComponents, v1);
    atomic_store(result, (unint64_t *)&qword_1011D34B8);
  }
  return result;
}

uint64_t sub_1009A417C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001CLL;
  else
    v3 = 0xD00000000000001DLL;
  if (v2)
    v4 = 0x8000000100E4A5D0;
  else
    v4 = 0x8000000100E4A5F0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001CLL;
  else
    v5 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100E4A5F0;
  else
    v6 = 0x8000000100E4A5D0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1009A4224(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1009A4274(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1009A42D8 + 4 * byte_100EDB064[a2]))(v2 + 16);
}

uint64_t sub_1009A42D8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x8000000100E4A2D0;
  if (a1 == v1 + 16 && v2 == 0x8000000100E4A2D0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 16, 0x8000000100E4A2D0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_1009A4374(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A43D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A4438 + 4 * byte_100EDB06C[a2]))(0x6C61727475656ELL);
}

uint64_t sub_1009A4438(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61727475656ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C61727475656ELL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_1009A44E8(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  v2 = 0xE900000000000073;
  v3 = 7105633;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x657469726F766166;
    else
      v4 = 0x64616F6C6E776F64;
    v5 = 0xE900000000000073;
    v6 = a2;
    if (a2)
    {
LABEL_6:
      if (v6 == 1)
        v3 = 0x657469726F766166;
      else
        v3 = 0x64616F6C6E776F64;
      if (v4 != v3)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 7105633;
    v6 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xE300000000000000;
  if (v4 != 7105633)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v3, v2, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v5 != v2)
    goto LABEL_15;
  v7 = 1;
  v2 = v5;
LABEL_16:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  return v7 & 1;
}

uint64_t sub_1009A45E8(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64657463656C6573;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 7105633;
    else
      v4 = 0x6E6F6973726576;
    if (v3 == 1)
      v5 = 0xE300000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 7105633;
      else
        v2 = 0x6E6F6973726576;
      if (v6 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x64657463656C6573;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x64657463656C6573)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1009A46F0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE0064616F6C6E77;
  v3 = 0x6F4465766F6D6572;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000011;
    else
      v5 = 0x6C65636E6163;
    if (v4 == 1)
      v6 = 0x8000000100E49B20;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6F4465766F6D6572;
  v6 = 0xEE0064616F6C6E77;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x6C65636E6163;
    if (v7 == 1)
      v2 = 0x8000000100E49B20;
    else
      v2 = 0xE600000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_1009A4810(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A487C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A48F0 + 4 * byte_100EDB075[a2]))(0x656C746974);
}

uint64_t sub_1009A48F0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_1009A49B0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1009A49FC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1009A4A60 + 4 * byte_100EDB07E[a2]))(v2 + 11);
}

uint64_t sub_1009A4A60(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x8000000100E4A3C0;
  if (a1 == v1 + 11 && v2 == 0x8000000100E4A3C0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 11, 0x8000000100E4A3C0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_1009A4AFC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x8000000100E4A350;
  else
    v4 = 0x8000000100E4A370;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100E4A370;
  else
    v6 = 0x8000000100E4A350;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1009A4BA8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A4BF8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A4C80 + 4 * byte_100EDB088[a2]))(0x6F4E6E657473696CLL);
}

uint64_t sub_1009A4C80(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4E6E657473696CLL && v1 == 0xE900000000000077)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F4E6E657473696CLL, 0xE900000000000077, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000077);
  return v2 & 1;
}

void sub_1009A4D58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A4DA8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A4E44 + 4 * byte_100EDB095[a2]))(0x756F795F726F66);
}

uint64_t sub_1009A4E44(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x756F795F726F66 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x756F795F726F66, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_1009A4F34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A4F90(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A5000 + 4 * byte_100EDB0A0[a2]))(0x63697373616C63);
}

uint64_t sub_1009A5000(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x63697373616C63 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x63697373616C63, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_1009A50B8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1009A5104(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A5170 + 4 * byte_100EDB0A8[a2]))(0x6E776F6E6B6E75);
}

uint64_t sub_1009A5170(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E776F6E6B6E75 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_1009A5220(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x8000000100E4A750;
  else
    v4 = 0x8000000100E4A770;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100E4A770;
  else
    v6 = 0x8000000100E4A750;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1009A52C8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D75626C61;
  else
    v3 = 0x747369747261;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D75626C61;
  else
    v5 = 0x747369747261;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1009A5364(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E69646E6570;
  else
    v3 = 1852403562;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E69646E6570;
  else
    v5 = 1852403562;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1009A5400(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x7972617262696CLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7473696C79616C70;
  else
    v5 = 0x7972617262696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1009A54A4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A54EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A5558 + 4 * byte_100EDB0B0[a2]))(0x747369747241);
}

uint64_t sub_1009A5558(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x747369747241 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x747369747241, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_1009A5608(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A5648(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A56C0 + 4 * byte_100EDB0B8[a2]))(0x6C616974726170);
}

uint64_t sub_1009A56C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C616974726170 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C616974726170, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t Actions.SortPlaylist.Context.sortOption.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t Actions.SortPlaylist.Context.currentSort.getter()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 2))
    v1 = 256;
  else
    v1 = 0;
  return v1 | *(unsigned __int8 *)(v0 + 1);
}

uint64_t Actions.SortPlaylist.Context.currentSort.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  *(_BYTE *)(v1 + 2) = BYTE1(result) & 1;
  return result;
}

double (*Actions.SortPlaylist.Context.currentSort.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_1009A582C(v3, a1);
}

uint64_t type metadata accessor for Actions.SortPlaylist.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D35A8;
  if (!qword_1011D35A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.SortPlaylist.Context);
  return result;
}

uint64_t sub_1009A582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D34C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_1009A58A4(a1, v3);
}

uint64_t sub_1009A58A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D34C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double (*Actions.SortPlaylist.Context.playlistVariant.modify())(_QWORD)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.SortPlaylist.Context.didSelectSort.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  swift_retain();
  return v1;
}

void Actions.SortPlaylist.Context.didSelectSort.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  swift_release();
  *v5 = a1;
  v5[1] = a2;
}

double (*Actions.SortPlaylist.Context.didSelectSort.modify())(_QWORD)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.SortPlaylist.Context.init(sortOption:currentSort:playlistVariant:didSelectSort:)@<X0>(char a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v12 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v13 = (uint64_t)&a6[*(int *)(v12 + 24)];
  v14 = type metadata accessor for Playlist.Variant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = HIBYTE(a2) & 1;
  result = sub_1009A58A4(a3, v13);
  v16 = &a6[*(int *)(v12 + 28)];
  *v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t static Actions.SortPlaylist.action(context:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t result;
  uint64_t (**v17)();
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  sub_1009A5BBC((uint64_t)a1, (uint64_t)&v20 - v9);
  v11 = 0x1D1B1C1E1FuLL >> (8 * *a1);
  sub_1009A5BBC((uint64_t)a1, (uint64_t)v8);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_1010EA160, v13 + v6, v12 | 7);
  sub_1009A5E14((uint64_t)v8, v14 + v13);
  v15 = (int *)sub_100007E8C(&qword_1011D34E0);
  *(_BYTE *)(a2 + v15[13]) = v11;
  result = sub_1009A5E14((uint64_t)v10, a2);
  *(_QWORD *)(a2 + v15[15]) = 0x4014000000000000;
  v17 = (uint64_t (**)())(a2 + v15[14]);
  *v17 = variable initialization expression of _NSRange.NSRangeIterator.current;
  v17[1] = 0;
  v18 = (_QWORD *)(a2 + v15[16]);
  *v18 = &unk_1011D34D0;
  v18[1] = v14;
  v19 = (_QWORD *)(a2 + v15[17]);
  *v19 = &unk_1011D34D8;
  v19[1] = 0;
  return result;
}

uint64_t sub_1009A5BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009A5C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a3;
  return swift_task_switch(sub_1009A5C18, 0, 0);
}

uint64_t sub_1009A5C18()
{
  uint64_t v0;
  unsigned int v1;
  char v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v1 = **(unsigned __int8 **)(v0 + 16);
  *(_BYTE *)(v0 + 52) = v1;
  sub_1009A4810(v1);
  if ((v2 & 1) != 0)
  {
    v3 = 0;
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_BYTE *)(v4 + 2);
    v6 = 256;
  }
  else
  {
    v6 = 0;
    v5 = v1 < 4;
    v4 = *(_QWORD *)(v0 + 16);
    v3 = 256;
  }
  *(_BYTE *)(v0 + 53) = v5;
  *(_WORD *)(v0 + 50) = v3;
  *(_WORD *)(v0 + 48) = v6;
  v7 = (_QWORD *)(v4 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  *(_QWORD *)(v0 + 24) = *v7;
  *(_QWORD *)(v0 + 32) = v7[1];
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009A5CF0, v10, v11);
}

uint64_t sub_1009A5CF0()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  unsigned int v2;
  unsigned __int16 *v3;
  int v4;

  v1 = *(void (**)(_QWORD))(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 52);
  if (*(_BYTE *)(v0 + 53))
    v3 = (unsigned __int16 *)(v0 + 50);
  else
    v3 = (unsigned __int16 *)(v0 + 48);
  v4 = *v3;
  swift_release(*(_QWORD *)(v0 + 40));
  v1(v4 | v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A5D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3 + *(int *)(v1 + 24);
  v6 = type metadata accessor for Playlist.Variant(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1009A5E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009A5E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actions.SortPlaylist.Context(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D34CC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10005AEE4;
  v4[2] = v3;
  return swift_task_switch(sub_1009A5C18, 0, 0);
}

uint64_t Actions.SortPlaylist.TrackListSort.init(option:isAscending:)(unsigned __int8 a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return v2 & 0xFFFFFF00 | a1;
}

void Actions.SortPlaylist.Context.menuItemTitle.getter()
{
  char *v0;
  char v1;
  uint64_t v2;

  v1 = *v0;
  v2 = (uint64_t)&v0[*(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24)];
  sub_1009A5F1C(v2, v1);
}

void sub_1009A5F1C(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  v11[1] = a1;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v11[3] = *(_QWORD *)(v5 - 8);
  v11[4] = v5;
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin(v7);
  v8 = sub_100007E8C(&qword_1011D3620);
  __chkstk_darwin(v8);
  v9 = sub_100007E8C(&qword_1011D34C0);
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  __asm { BR              X10 }
}

uint64_t sub_1009A60B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v0, enum case for Playlist.Variant.favoriteSongs(_:), v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v0, 0, 1, v1);
  v10 = v5 + *(int *)(v3 + 48);
  sub_1009A582C(*(_QWORD *)(v9 - 120), v5);
  sub_1009A582C(v0, v10);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v11(v5, 1, v1) != 1)
  {
    sub_1009A582C(v5, v8);
    if (v11(v10, 1, v1) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v10, v1);
      v14 = sub_1009A8460();
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v1, v14);
      v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v16(v6, v1);
      sub_10004FF60(v0, &qword_1011D34C0);
      v16(v8, v1);
      sub_10004FF60(v5, &qword_1011D34C0);
      if ((v15 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v12 = 0x7473696C79616C50;
      v13 = 0x726564724F20;
      goto LABEL_10;
    }
    sub_10004FF60(v0, &qword_1011D34C0);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v1);
LABEL_6:
    sub_10004FF60(v5, &qword_1011D3620);
    goto LABEL_7;
  }
  sub_10004FF60(v0, &qword_1011D34C0);
  if (v11(v10, 1, v1) != 1)
    goto LABEL_6;
  sub_10004FF60(v5, &qword_1011D34C0);
LABEL_9:
  v12 = 0x7661462065746144;
  v13 = 0x64657469726FLL;
LABEL_10:
  String.LocalizationValue.init(stringLiteral:)(v12, v13 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000);
  v18 = *(_QWORD *)(v9 - 104);
  v17 = *(_QWORD *)(v9 - 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, v2, v17);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v19 = qword_10124DE50;
  v20 = (id)qword_10124DE50;
  v21 = *(_QWORD *)(v9 - 112);
  static Locale.current.getter(v20);
  v22 = String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, v19, v21, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
  return v22;
}

void Actions.SortPlaylist.Context.menuItemImage.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1009A6408@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)&loc_1009A6468 + *((int *)qword_1009A66D8 + a1)))(0x656C746974);
}

uint64_t (*sub_1009A6478(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    goto LABEL_5;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
LABEL_5:
    v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
    if (*(_BYTE *)(v1 + 2) == 1)
    {
      v5 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v6)
        goto LABEL_9;
    }
    else
    {
      v7 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      if (v6)
      {
LABEL_9:
        v8 = objc_msgSend(v6, "imageWithConfiguration:", v4);

LABEL_11:
        v9 = swift_allocObject(&unk_1010EA188, 24, 7);
        *(_QWORD *)(v9 + 16) = v8;
        v10 = swift_allocObject(&unk_1010EA1B0, 32, 7);
        *(_QWORD *)(v10 + 16) = JSSegue.Context.pageDetailsProvider.getter;
        *(_QWORD *)(v10 + 24) = v9;
        swift_retain();
        return sub_1009A7580;
      }
    }

    v8 = 0;
    goto LABEL_11;
  }
  return 0;
}

void Actions.SortPlaylist.Context.menuItemState.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1009A675C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A67CC + 4 * byte_100EDB0C6[a1]))(0x656C746974);
}

uint64_t sub_1009A67CC(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    return 1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(0xE500000000000000);
    return v3 & 1;
  }
}

void sub_1009A6894(uint64_t a1)
{
  char *v1;

  sub_1009A5F1C((uint64_t)&v1[*(int *)(a1 + 24)], *v1);
}

uint64_t sub_1009A68A8()
{
  uint64_t v0;
  char v1;

  sub_1009A4810(*(_BYTE *)(v0 + 1));
  return v1 & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

_UNKNOWN **static Actions.SortPlaylist.TrackListSort.Option.allCases.getter()
{
  return &off_1010E5590;
}

uint64_t Actions.SortPlaylist.TrackListSort.Option.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1009A6928 + 4 * byte_100EDB0CB[a1]))(0x7473696C79616C70, 0xED0000726564724FLL);
}

uint64_t sub_1009A6928()
{
  return 0x656C746974;
}

uint64_t sub_1009A693C()
{
  return 0x747369747261;
}

uint64_t sub_1009A6950()
{
  return 0x6D75626C61;
}

uint64_t sub_1009A6964()
{
  return 0x44657361656C6572;
}

uint64_t sub_1009A6984(char *a1)
{
  char v1;

  sub_1009A4810(*a1);
  return v1 & 1;
}

void sub_1009A69A4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1009A69FC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_1009A6A80()
{
  __asm { BR              X10 }
}

uint64_t sub_1009A6AC8(uint64_t a1)
{
  String.hash(into:)(a1, 0x656C746974, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_1009A6B38(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1009A6B8C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1009A6C10@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1009A6C3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1009A6C78 + 4 * byte_100EDB0DF[*v0]))();
}

void sub_1009A6C78(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_1009A6C90(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747261;
  a1[1] = 0xE600000000000000;
}

void sub_1009A6CA8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D75626C61;
  a1[1] = 0xE500000000000000;
}

void sub_1009A6CC0(_QWORD *a1@<X8>)
{
  *a1 = 0x44657361656C6572;
  a1[1] = 0xEB00000000657461;
}

uint64_t sub_1009A6CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1009A83D8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1009A6D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1009A83D8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1009A6D8C(_QWORD *a1@<X8>)
{
  *a1 = &off_1010E55B8;
}

void Actions.SortPlaylist.TrackListSort.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_1009A6DF0()
{
  __int16 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
}

void static Actions.SortPlaylist.TrackListSort.__derived_struct_equals(_:_:)(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1009A6EF0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1009A6F60 + 4 * byte_100EDB0EE[a1]))(0x656C746974);
}

uint64_t sub_1009A6F60(uint64_t a1)
{
  __int16 v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t result;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(0xE500000000000000);
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  return ((v1 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

uint64_t sub_1009A703C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009A75D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009A7064(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009A75D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Actions.SortPlaylist.TrackListSort.encode(to:)(_QWORD *a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = sub_100007E8C(&qword_1011D34E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_1009A75D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v11, v9, v10);
  v17 = a2;
  v16 = 0;
  v12 = sub_1009A7614();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v16, v5, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v12);
  if (!v2)
  {
    v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(HIBYTE(a2) & 1, &v15, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void Actions.SortPlaylist.TrackListSort.hashValue.getter(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_1009A7214()
{
  __int16 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
  return Hasher._finalize()();
}

uint64_t Actions.SortPlaylist.TrackListSort.init(from:)(_QWORD *a1)
{
  return sub_1009A7658(a1) & 0x1FF;
}

void sub_1009A72BC()
{
  char *v0;

  Actions.SortPlaylist.TrackListSort.hashValue.getter(*v0);
}

void sub_1009A72D8()
{
  __asm { BR              X10 }
}

void sub_1009A732C()
{
  Swift::UInt8 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
}

void sub_1009A73B4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1009A7410()
{
  Swift::UInt8 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

uint64_t sub_1009A74A4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1009A7658(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1009A74D4(_QWORD *a1)
{
  unsigned __int8 *v1;
  __int16 v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  return Actions.SortPlaylist.TrackListSort.encode(to:)(a1, v2 | *v1);
}

uint64_t sub_1009A7500(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1009A4810(*(_BYTE *)a1);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t sub_1009A7538()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009A755C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009A7580()
{
  uint64_t v0;

  return sub_1009B9180(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E54F8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_1009A75D0()
{
  unint64_t result;

  result = qword_1011D34F0;
  if (!qword_1011D34F0)
  {
    result = swift_getWitnessTable(&unk_100EDB450, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D34F0);
  }
  return result;
}

unint64_t sub_1009A7614()
{
  unint64_t result;

  result = qword_1011D34F8;
  if (!qword_1011D34F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1011D34F8);
  }
  return result;
}

uint64_t sub_1009A7658(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  char v12;
  int v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v3 = sub_100007E8C(&qword_1011D3610);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100007E68(a1, v7);
  v9 = sub_1009A75D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v9, v7, v8);
  if (v1)
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v17 = 0;
  v10 = sub_1009A841C();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v18, &type metadata for Actions.SortPlaylist.TrackListSort.Option, &v17, v3, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v10);
  v11 = v18;
  v16 = 1;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  if ((v12 & 1) != 0)
    v14 = 256;
  else
    v14 = 0;
  return v14 | v11;
}

unint64_t sub_1009A77CC()
{
  unint64_t result;

  result = qword_1011D3530;
  if (!qword_1011D3530)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1011D3530);
  }
  return result;
}

unint64_t sub_1009A7814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3538;
  if (!qword_1011D3538)
  {
    v1 = sub_100044B54(&qword_1011D3540);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D3538);
  }
  return result;
}

unint64_t sub_1009A7864()
{
  unint64_t result;

  result = qword_1011D3548;
  if (!qword_1011D3548)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort, &type metadata for Actions.SortPlaylist.TrackListSort);
    atomic_store(result, (unint64_t *)&qword_1011D3548);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist()
{
  return &type metadata for Actions.SortPlaylist;
}

_QWORD *_s12SortPlaylistO7ContextVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Playlist.Variant(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C(&qword_1011D34C0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 28);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
  }
  swift_retain();
  return v4;
}

uint64_t _s12SortPlaylistO7ContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Playlist.Variant(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t _s12SortPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011D34C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain();
  return a1;
}

_BYTE *_s12SortPlaylistO7ContextVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D34C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011D34C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D34C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009A7EA4);
}

uint64_t sub_1009A7EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C(&qword_1011D34C0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s12SortPlaylistO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009A7F34);
}

uint64_t sub_1009A7F34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011D34C0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_1009A7FB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EDB348;
  v4[1] = &unk_100EDB360;
  sub_1009A803C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1009A803C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011D35B8)
  {
    v2 = type metadata accessor for Playlist.Variant(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011D35B8);
  }
}

_WORD *initializeBufferWithCopyOfBuffer for ApplicationCapabilities.Tabs.Configuration(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s12SortPlaylistO13TrackListSortVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009A80E8 + 4 * byte_100EDB107[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1009A811C + 4 * byte_100EDB102[v4]))();
}

uint64_t sub_1009A811C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1009A8124(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1009A812CLL);
  return result;
}

uint64_t sub_1009A8138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1009A8140);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1009A8144(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1009A814C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort;
}

uint64_t _s12SortPlaylistO13TrackListSortV6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1009A81B4 + 4 * byte_100EDB111[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1009A81E8 + 4 * byte_100EDB10C[v4]))();
}

uint64_t sub_1009A81E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009A81F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009A81F8);
  return result;
}

uint64_t sub_1009A8204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009A820CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1009A8210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009A8218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort.Option()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort.Option;
}

uint64_t _s12SortPlaylistO13TrackListSortV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009A8280 + 4 * byte_100EDB11B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009A82B4 + 4 * byte_100EDB116[v4]))();
}

uint64_t sub_1009A82B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009A82BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009A82C4);
  return result;
}

uint64_t sub_1009A82D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009A82D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009A82DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009A82E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12SortPlaylistO13TrackListSortV10CodingKeysOMa()
{
  return &_s12SortPlaylistO13TrackListSortV10CodingKeysON;
}

unint64_t sub_1009A8304()
{
  unint64_t result;

  result = qword_1011D35F0;
  if (!qword_1011D35F0)
  {
    result = swift_getWitnessTable(&unk_100EDB428, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D35F0);
  }
  return result;
}

unint64_t sub_1009A834C()
{
  unint64_t result;

  result = qword_1011D35F8;
  if (!qword_1011D35F8)
  {
    result = swift_getWitnessTable(&unk_100EDB398, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D35F8);
  }
  return result;
}

unint64_t sub_1009A8394()
{
  unint64_t result;

  result = qword_1011D3600;
  if (!qword_1011D3600)
  {
    result = swift_getWitnessTable(&unk_100EDB3C0, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D3600);
  }
  return result;
}

unint64_t sub_1009A83D8()
{
  unint64_t result;

  result = qword_1011D3608;
  if (!qword_1011D3608)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1011D3608);
  }
  return result;
}

unint64_t sub_1009A841C()
{
  unint64_t result;

  result = qword_1011D3618;
  if (!qword_1011D3618)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_1011D3618);
  }
  return result;
}

unint64_t sub_1009A8460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6160;
  if (!qword_1011D6160)
  {
    v1 = type metadata accessor for Playlist.Variant(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist.Variant, v1);
    atomic_store(result, (unint64_t *)&qword_1011D6160);
  }
  return result;
}

uint64_t Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v28[4];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(a9, a1, a11);
  v28[0] = a11;
  v28[1] = a12;
  v28[2] = a13;
  v28[3] = a14;
  v21 = (int *)type metadata accessor for Action(0, (uint64_t)v28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(a9 + v21[13], a2, a12);
  *(double *)(a9 + v21[15]) = a10;
  v23 = (_QWORD *)(a9 + v21[14]);
  *v23 = a3;
  v23[1] = a4;
  v24 = (_QWORD *)(a9 + v21[16]);
  *v24 = a5;
  v24[1] = a6;
  v25 = (_QWORD *)(a9 + v21[17]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

{
  _QWORD *v21;

  v21 = (_QWORD *)swift_allocObject(&unk_1010EA4D0, 64, 7);
  v21[2] = a11;
  v21[3] = a12;
  v21[4] = a13;
  v21[5] = a14;
  v21[6] = a5;
  v21[7] = a6;
  return Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, a2, a3, a4, (uint64_t)&unk_1011D3648, (uint64_t)v21, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t type metadata accessor for Action(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Action);
}

uint64_t Action.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t Action.supportedStatus()(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 56)))(v1);
}

uint64_t Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 340) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  v6 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v4 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 80) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 88) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 96) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 112) = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v4 + 128) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 136) = v13;
  *(_QWORD *)(v4 + 144) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  *(_QWORD *)(v4 + 152) = v14;
  v15 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v4 + 160) = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 200) = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 208) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v4 + 216) = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 224) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 232) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 240) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 248) = swift_task_alloc(v19);
  return swift_task_switch(sub_1009A8854, 0, 0);
}

uint64_t sub_1009A8854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int **v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t type;
  os_log_type_t typea;
  os_log_type_t typeb[8];
  NSObject *log;
  os_log_t loga;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, __n128);
  int *v115;
  uint64_t v116;
  uint64_t v117[2];

  if ((*(_BYTE *)(v0 + 340) & 1) != 0
    || (v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56)))(), v2 == 1))
  {
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v10 = sub_100048B14(v4, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 256) = v10;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 264) = v11;
    v11(v3, v10, v4);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16);
    *(_QWORD *)(v0 + 272) = v12;
    v114 = v12;
    v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v6, v8, v9);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 152);
    if (v16)
    {
      v22 = *(_QWORD *)(v0 + 144);
      v98 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 128);
      v110 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 48);
      v106 = *(_QWORD *)(v0 + 208);
      v25 = swift_slowAlloc(12, -1);
      type = swift_slowAlloc(32, -1);
      v117[0] = type;
      *(_DWORD *)v25 = 136446210;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v22, v20 + *(int *)(v24 + 52), v23);
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v20, v24);
      v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, *(_QWORD *)(*(_QWORD *)(v24 + 40) + 8));
      v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v22, v23);
      *(_QWORD *)(v25 + 4) = sub_10099627C(v27, v29, v117);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s: performing…", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v110, v106);
    }
    else
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 48));

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    *(_QWORD *)(v0 + 280) = v26;
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 120);
    v107 = *(_QWORD *)(v0 + 72);
    v111 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v0 + 56);
    sub_1009AB16C();
    v36 = *(double *)(v34 + *(int *)(v35 + 60));
    v37 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v38 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 1, 1, v38);
    v39 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v37, NSRunLoopCommonModes, v33, v36);

    sub_10004FF60(v33, &qword_1011D3658);
    *(_QWORD *)(v0 + 16) = v39;
    v40 = type metadata accessor for NSTimer.TimerPublisher(0);
    v41 = sub_1009AB1A8();
    v42 = ConnectablePublisher.autoconnect()(v40, v41);
    v43 = swift_release(v39);
    *(_QWORD *)(v0 + 24) = v42;
    v114(v30, v34, v35, v43);
    LODWORD(v44) = *(_DWORD *)(v31 + 80);
    *(_DWORD *)(v0 + 336) = v44;
    v44 = v44;
    v45 = (v44 + 48) & ~v44;
    v46 = (char *)swift_allocObject(&unk_1010EA4F8, v45 + v32, v44 | 7);
    v47 = *(_QWORD *)(v35 + 16);
    *(_QWORD *)(v0 + 288) = v47;
    *((_QWORD *)v46 + 2) = v47;
    *((_QWORD *)v46 + 3) = v111;
    *((_QWORD *)v46 + 4) = v107;
    v48 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v0 + 296) = v48;
    *((_QWORD *)v46 + 5) = v48;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    *(_QWORD *)(v0 + 304) = v49;
    v49(&v46[v45], v30, v35);
    v50 = sub_100007E8C(&qword_1011D3670);
    v51 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 312) = Publisher<>.sink(receiveValue:)(sub_1009AB1F4, v46, v50, v51);
    swift_release(v46);
    swift_release(*(_QWORD *)(v0 + 24));
    v52 = (int **)(v34 + *(int *)(v35 + 64));
    v115 = (int *)((char *)*v52 + **v52);
    v53 = (_QWORD *)swift_task_alloc((*v52)[1]);
    *(_QWORD *)(v0 + 320) = v53;
    *v53 = v0;
    v53[1] = sub_1009A9074;
    return ((uint64_t (*)(_QWORD, _QWORD))v115)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 56));
  }
  else
  {
    v55 = v1;
    v56 = v2;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v57 = *(_QWORD *)(v0 + 248);
    v58 = *(_QWORD *)(v0 + 208);
    v59 = *(_QWORD *)(v0 + 216);
    v60 = *(_QWORD *)(v0 + 200);
    v61 = *(_QWORD *)(v0 + 152);
    v63 = *(_QWORD *)(v0 + 48);
    v62 = *(_QWORD *)(v0 + 56);
    v64 = sub_100048B14(v58, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v64, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v62, v63);
    sub_1003351D4(v55, v56);
    v65 = swift_bridgeObjectRetain();
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter();
    v68 = os_log_type_enabled(v66, v67);
    v69 = *(_QWORD *)(v0 + 248);
    v70 = *(_QWORD *)(v0 + 208);
    v71 = *(_QWORD *)(v0 + 216);
    v72 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 152);
    if (v68)
    {
      v112 = *(_QWORD *)(v0 + 208);
      v116 = *(_QWORD *)(v0 + 248);
      log = v66;
      v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 144);
      v76 = *(_QWORD *)(v0 + 128);
      typea = v67;
      v77 = *(_QWORD *)(v0 + 48);
      v108 = *(_QWORD *)(v0 + 216);
      v78 = swift_slowAlloc(22, -1);
      v99 = swift_slowAlloc(64, -1);
      v117[0] = v99;
      *(_DWORD *)v78 = 136446466;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v75, v72 + *(int *)(v77 + 52), v76);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v77);
      v79 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v76, *(_QWORD *)(*(_QWORD *)(v77 + 40) + 8));
      v81 = v80;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      *(_QWORD *)(v78 + 4) = sub_10099627C(v79, v81, v117);
      swift_bridgeObjectRelease(v81);
      *(_WORD *)(v78 + 12) = 2082;
      swift_bridgeObjectRetain();
      v82 = (char *)Optional<A>.description.getter(v55, v56);
      v84 = v83;
      sub_10013B670(v55, v56);
      *(_QWORD *)(v78 + 14) = sub_10099627C(v82, v84, v117);
      swift_bridgeObjectRelease(v84);
      sub_10013B670(v55, v56);
      sub_10013B670(v55, v56);
      _os_log_impl((void *)&_mh_execute_header, log, typea, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy(v99, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v99, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v116, v112);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v73 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 48));
      sub_10013B670(v55, v56);
      sub_10013B670(v55, v56);

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v70);
    }
    v85 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v85, 0, 0);
    *v86 = v55;
    v86[1] = v56;
    v88 = *(_QWORD *)(v0 + 240);
    v87 = *(_QWORD *)(v0 + 248);
    v90 = *(_QWORD *)(v0 + 224);
    v89 = *(_QWORD *)(v0 + 232);
    v91 = *(_QWORD *)(v0 + 192);
    v92 = *(_QWORD *)(v0 + 200);
    v93 = *(_QWORD *)(v0 + 176);
    v94 = *(_QWORD *)(v0 + 184);
    v96 = *(_QWORD *)(v0 + 168);
    v97 = *(_QWORD *)(v0 + 144);
    v100 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 112);
    loga = *(os_log_t *)(v0 + 104);
    v109 = *(_QWORD *)(v0 + 96);
    v113 = *(_QWORD *)(v0 + 64);
    swift_willThrow(v95);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v91);
    swift_task_dealloc(v94);
    swift_task_dealloc(v93);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v100);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(loga);
    swift_task_dealloc(v109);
    swift_task_dealloc(v113);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009A9074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009A964C;
  else
    v3 = sub_1009A90D8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009A90D8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  void *object;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v96;
  _QWORD v97[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v91 = *(_QWORD *)(v0 + 112);
  v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v85 = *(_QWORD *)(v0 + 80);
  v88 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 40);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v94(v5, v6, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16);
  v10 = v9(v91, v8, v88);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v9;
  if (os_log_type_enabled(v11, v12))
  {
    v89 = v12;
    v92 = v11;
    v13 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 104);
    v81 = *(_QWORD *)(v0 + 296);
    v83 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v86 = swift_slowAlloc(64, -1);
    v96 = v86;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v13 + *(int *)(v20 + 52), v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, *(_QWORD *)(v81 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v24, &v96);
    v25 = swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = v95(v18, v83, v19, v25);
    v27 = swift_dynamicCast(v26, v18, v19, (char *)&type metadata for () + 8, 6);
    v28 = (char *)0xE000000000000000;
    if ((v27 & 1) != 0)
    {
      v29 = 0;
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 112);
      v37 = *(_QWORD *)(v0 + 96);
      v38 = *(_QWORD *)(v0 + 72);
      v97[0] = 0;
      v97[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v39 = swift_bridgeObjectRelease(v97[1]);
      strcpy((char *)v97, " with result: ");
      HIBYTE(v97[1]) = -18;
      v95(v37, v36, v38, v39);
      v40._countAndFlagsBits = String.init<A>(describing:)(v37, v38);
      object = v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(object);
      v29 = (char *)v97[0];
      v28 = (char *)v97[1];
    }
    v42 = *(_QWORD *)(v0 + 232);
    v43 = *(_QWORD *)(v0 + 208);
    v44 = *(_QWORD *)(v0 + 216);
    v45 = *(_QWORD *)(v0 + 112);
    v47 = *(_QWORD *)(v0 + 72);
    v46 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v21 + 14) = sub_10099627C(v29, v28, &v96);
    v48 = swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t, uint64_t, __n128))(v46 + 8))(v45, v47, v48);
    _os_log_impl((void *)&_mh_execute_header, v92, v89, "%{public}s: perform success%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 232);
    v32 = *(_QWORD *)(v0 + 208);
    v31 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 72);
    v35 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 48));
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  }
  v72 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 304);
  v73 = *(_QWORD *)(v0 + 312);
  v70 = *(_QWORD *)(v0 + 288);
  v71 = *(_QWORD *)(v0 + 296);
  v49 = *(unsigned __int8 *)(v0 + 336);
  v74 = *(_QWORD *)(v0 + 248);
  v75 = *(_QWORD *)(v0 + 240);
  v76 = *(_QWORD *)(v0 + 232);
  v77 = *(_QWORD *)(v0 + 224);
  v50 = *(_QWORD *)(v0 + 184);
  v78 = *(_QWORD *)(v0 + 200);
  v79 = *(_QWORD *)(v0 + 192);
  v80 = *(_QWORD *)(v0 + 176);
  v82 = *(_QWORD *)(v0 + 168);
  v66 = *(_QWORD *)(v0 + 160);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v84 = *(_QWORD *)(v0 + 144);
  v69 = *(_QWORD *)(v0 + 128);
  v87 = *(_QWORD *)(v0 + 120);
  v90 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 96);
  v93 = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 80);
  v65 = *(_QWORD *)(v0 + 88);
  v53 = *(_QWORD *)(v0 + 64);
  v54 = *(_QWORD *)(v0 + 72);
  v68 = v53;
  v56 = *(_QWORD *)(v0 + 48);
  v55 = *(_QWORD *)(v0 + 56);
  v57 = *(_QWORD *)(v0 + 40);
  v58 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v53, 1, 1, v58);
  v67(v50, v55, v56);
  ((void (*)(uint64_t, uint64_t, uint64_t))v95)(v51, v57, v54);
  v59 = (v49 + 64) & ~v49;
  v60 = *(unsigned __int8 *)(v52 + 80);
  v61 = (v66 + v59 + v60) & ~v60;
  v62 = (char *)swift_allocObject(&unk_1010EA520, v61 + v65, v49 | v60 | 7);
  *((_QWORD *)v62 + 2) = 0;
  *((_QWORD *)v62 + 3) = 0;
  *((_QWORD *)v62 + 4) = v70;
  *((_QWORD *)v62 + 5) = v69;
  *((_QWORD *)v62 + 6) = v54;
  *((_QWORD *)v62 + 7) = v71;
  v72(&v62[v59], v50, v56);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(&v62[v61], v51, v54);
  v63 = sub_1009AA68C(v68, (uint64_t)&unk_1011D3688, (uint64_t)v62);
  swift_release(v63);
  swift_release(v73);
  sub_10004FF60(v68, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v50);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v93);
  swift_task_dealloc(v51);
  swift_task_dealloc(v68);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A964C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];

  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 264);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v10 = swift_release(*(_QWORD *)(v0 + 312));
  v3(v5, v4, v6, v10);
  v2(v7, v8, v9);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 216);
    v53 = *(_QWORD *)(v0 + 208);
    v55 = *(_QWORD *)(v0 + 224);
    type = v13;
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(64, -1);
    v56[0] = v47;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v15 + *(int *)(v20 + 52), v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v45 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v24, v56);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v14;
    swift_errorRetain(v14);
    v25 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v26 = (char *)String.init<A>(describing:)(v0 + 32, v25);
    v28 = v27;
    *(_QWORD *)(v21 + 14) = sub_10099627C(v26, v27, v56);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v51 + 8))(v55, v53);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 328);
    v32 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(v0 + 280))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 48));
    swift_errorRelease(v30);
    swift_errorRelease(v30);

    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v35 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  v40 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 120);
  v48 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 96);
  v54 = *(_QWORD *)(v0 + 64);
  swift_willThrow(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(*(_QWORD *)typea);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A99B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v8[13] = a8;
  v8[14] = v21;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v12 = sub_100007E8C(&qword_1011D3658);
  v8[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[2] = a6;
  v8[3] = a7;
  v8[4] = a8;
  v8[5] = v21;
  v13 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  v8[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[17] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[18] = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[19] = swift_task_alloc(v16);
  v8[20] = swift_task_alloc(v16);
  v8[21] = swift_task_alloc(v16);
  v8[22] = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  v8[23] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[24] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[25] = swift_task_alloc(v19);
  v8[26] = swift_task_alloc(v19);
  v8[27] = swift_task_alloc(v19);
  return swift_task_switch(sub_1009A9AD8, 0, 0);
}

uint64_t sub_1009A9AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int **v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, __n128);
  int *v58;
  uint64_t v59;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 224) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 232) = v9;
  v9(v1, v8, v2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  *(_QWORD *)(v0 + 240) = v10;
  v57 = v10;
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 136);
  if (v14)
  {
    v55 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 96);
    v53 = *(_QWORD *)(v0 + 184);
    v22 = swift_slowAlloc(12, -1);
    v52 = v17;
    v23 = swift_slowAlloc(32, -1);
    v59 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, *(_QWORD *)(v21 + 8));
    *(_QWORD *)(v22 + 4) = sub_10099627C(v24, v25, &v59);
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    v27(v18, v20, v26);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    v28 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v28(v55, v53);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    ((void (*)(_QWORD, _QWORD))v27)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 128));

    v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v15, v16);
  }
  *(_QWORD *)(v0 + 248) = v28;
  *(_QWORD *)(v0 + 256) = v27;
  v29 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 72);
  sub_1009AB16C();
  v35 = *(double *)(v34 + *(int *)(v32 + 60));
  v54 = *(_OWORD *)(v0 + 104);
  v56 = *(_OWORD *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v33, v35);

  sub_10004FF60(v33, &qword_1011D3658);
  *(_QWORD *)(v0 + 48) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_1009AB1A8();
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  v42 = swift_release();
  *(_QWORD *)(v0 + 56) = v41;
  v57(v29, v34, v32, v42);
  v43 = *(unsigned __int8 *)(v30 + 80);
  v44 = (v43 + 48) & ~v43;
  v45 = swift_allocObject(&unk_1010EA6E8, v44 + v31, v43 | 7);
  *(_OWORD *)(v45 + 16) = v56;
  *(_OWORD *)(v45 + 32) = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v45 + v44, v29, v32);
  v46 = sub_100007E8C(&qword_1011D3670);
  v47 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 264) = Publisher<>.sink(receiveValue:)(sub_1009AC1B8, v45, v46, v47);
  swift_release();
  swift_release();
  v48 = (int **)(v34 + *(int *)(v32 + 68));
  v58 = (int *)((char *)*v48 + **v48);
  v49 = (_QWORD *)swift_task_alloc((*v48)[1]);
  *(_QWORD *)(v0 + 272) = v49;
  *v49 = v0;
  v49[1] = sub_1009A9ED4;
  return ((uint64_t (*)(_QWORD, _QWORD))v58)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1009A9ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009AA170;
  else
    v3 = sub_1009A9F38;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009A9F38()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 72);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v9 = v1(v6, v8, v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 256);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 128);
  if (v12)
  {
    v35 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 96);
    v20 = swift_slowAlloc(12, -1);
    v34 = v16;
    v21 = swift_slowAlloc(32, -1);
    v36 = v21;
    *(_DWORD *)v20 = 136446210;
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v33, *(_QWORD *)(v19 + 8));
    *(_QWORD *)(v20 + 4) = sub_10099627C(v22, v23, &v36);
    v24 = swift_bridgeObjectRelease();
    v13(v17, v18, v24);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
    swift_release();

    v14(v35, v34);
  }
  else
  {
    ((void (*)(_QWORD, _QWORD))v13)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128));
    swift_release();

    v14(v15, v16);
  }
  v25 = *(_QWORD *)(v0 + 208);
  v26 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 168);
  v27 = *(_QWORD *)(v0 + 176);
  v30 = *(_QWORD *)(v0 + 152);
  v29 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009AA170()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v41)(uint64_t, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = swift_release();
  v3(v5, v4, v6, v10);
  v2(v7, v9, v8);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 280);
    v41 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 256);
    v44 = *(_QWORD *)(v0 + 200);
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v43 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = swift_slowAlloc(22, -1);
    v42 = swift_slowAlloc(64, -1);
    v46 = v42;
    *(_DWORD *)v19 = 136446466;
    v20 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v17 + 8));
    *(_QWORD *)(v19 + 4) = sub_10099627C(v20, v21, &v46);
    v22 = swift_bridgeObjectRelease();
    v41(v15, v16, v22);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 64) = v14;
    swift_errorRetain(v14);
    v23 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v24 = (char *)String.init<A>(describing:)(v0 + 64, v23);
    *(_QWORD *)(v19 + 14) = sub_10099627C(v24, v25, &v46);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(v14);
    v45(v44, v43);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 280);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v29 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v26);
    v27(v31, v32);
    swift_errorRelease(v26);
    swift_errorRelease(v26);

    v28(v29, v30);
  }
  v33 = *(_QWORD *)(v0 + 208);
  v34 = *(_QWORD *)(v0 + 200);
  v36 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 176);
  v38 = *(_QWORD *)(v0 + 152);
  v37 = *(_QWORD *)(v0 + 160);
  v39 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009AA440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[4];

  v33 = a4;
  v34[0] = a3;
  v34[1] = a4;
  v34[2] = a5;
  v32 = a6;
  v34[3] = a6;
  v9 = type metadata accessor for Action(0, (uint64_t)v34);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v17 = sub_100048B14(v13, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v30 = a7;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v31 = v14;
    v24 = v23;
    v34[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v33, *(_QWORD *)(v32 + 8));
    v27 = v26;
    *(_QWORD *)(v22 + 4) = sub_10099627C(v25, v26, v34);
    v28 = swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v28);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v30, (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v16, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1009AA68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1009AC05C(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011D8CF0);
    v11 = 4096;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12, v15);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v18 = v17;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = v19 | 0x1000;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_1010EA6C0, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v11, v21, (char *)&type metadata for () + 8, &unk_1011D6BB0, v20);
}

unint64_t ActionError.description.getter(uint64_t a1, void *a2)
{
  void *v4;
  Swift::String v5;

  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a2)
  {
    v4 = a2;
  }
  else
  {
    a1 = 0x6E776F6E6B6E75;
    v4 = (void *)0xE700000000000000;
  }
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = a1;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return 0xD000000000000020;
}

BOOL static ActionError.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
    return a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0);
  if (a4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

uint64_t sub_1009AA91C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      v6 = v5 == *a2 && v3 == v4;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0) & 1) != 0)
        return 1;
    }
    return 0;
  }
  if (v4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

unint64_t sub_1009AA980()
{
  uint64_t v0;

  return ActionError.description.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

uint64_t sub_1009AA988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch(sub_1009AA9AC, 0, 0);
}

uint64_t sub_1009AA9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_OWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 64) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_1009AAA54;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD00000000000003ALL, 0x8000000100E4AEA0, sub_1009AC250, v2, *(_QWORD *)(v0 + 64));
}

uint64_t sub_1009AAA54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1009AAAC8, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1009AAAC8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1009AAAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];

  v41 = a6;
  v42 = a8;
  v40 = a5;
  v38 = a4;
  v44 = a2;
  v45 = a3;
  v43 = a1;
  v12 = sub_100044B54((uint64_t *)&unk_1011D67C0);
  v39 = a7;
  v13 = type metadata accessor for CheckedContinuation(0, a7, v12, &protocol self-conformance witness table for Error);
  v14 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v36 - v16;
  v46[0] = a5;
  v46[1] = a6;
  v46[2] = a7;
  v46[3] = a8;
  v18 = type metadata accessor for Action(0, (uint64_t)v46);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v22 = (char *)&v36 - v21;
  v23 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v38, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v43, v13);
  v27 = *(unsigned __int8 *)(v19 + 80);
  v28 = (v27 + 80) & ~v27;
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v20 + v28 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_1010EA710, v30 + v15, v27 | v29 | 7);
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  v32 = v41;
  *((_QWORD *)v31 + 4) = v40;
  *((_QWORD *)v31 + 5) = v32;
  v33 = v42;
  *((_QWORD *)v31 + 6) = v39;
  *((_QWORD *)v31 + 7) = v33;
  v34 = v45;
  *((_QWORD *)v31 + 8) = v44;
  *((_QWORD *)v31 + 9) = v34;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[v28], v22, v18);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v31[v30], v17, v37);
  swift_retain();
  sub_100B237E0((uint64_t)v25, (uint64_t)&unk_1011D3720, (uint64_t)v31);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1009AAD28(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10005AEE4;
  return v12(a6, a7);
}

uint64_t sub_1009AAD98()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D3628);
  sub_100048B14(v0, (uint64_t)qword_1011D3628);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x6E6F69746341, 0xE600000000000000);
}

unint64_t _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t inited;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25[64];

  v1 = a1[2];
  if (!v1)
    return 0xD000000000000015;
  v4 = a1[4];
  v3 = a1[5];
  swift_bridgeObjectRetain();
  sub_1003351D4(v4, v3);
  v5 = v1 - 1;
  v24 = a1;
  if (v1 != 1)
  {
    v8 = a1 + 7;
    while (1)
    {
      v6 = *(v8 - 1);
      v15 = *v8;
      if (v3 == 1 && v15 == 1)
      {
        sub_1009AC4C0(v4, 1);
        v3 = 1;
        goto LABEL_10;
      }
      v16 = sub_100007E8C(&qword_1011D32F8);
      inited = swift_initStackObject(v16, v25);
      *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
      *(_QWORD *)(inited + 32) = v4;
      *(_QWORD *)(inited + 40) = v3;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v15;
      if (v3 == 1)
      {
        sub_1003351D4(v6, v15);
      }
      else
      {
        sub_1003351D4(v6, v15);
        if (v3)
        {
          sub_1009AC4D0(v4, v3);
          sub_1003351D4(v6, v15);
          sub_1009AC4D0(v4, v3);
          v18 = sub_1009B96FC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
          v20 = *((_QWORD *)v18 + 2);
          v19 = *((_QWORD *)v18 + 3);
          if (v20 >= v19 >> 1)
            v18 = sub_1009B96FC((char *)(v19 > 1), v20 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v20 + 1;
          v21 = &v18[16 * v20];
          *((_QWORD *)v21 + 4) = v4;
          *((_QWORD *)v21 + 5) = v3;
          if (v15 < 2)
            goto LABEL_9;
LABEL_22:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
            v18 = sub_1009B96FC(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
          v23 = *((_QWORD *)v18 + 2);
          v22 = *((_QWORD *)v18 + 3);
          if (v23 >= v22 >> 1)
            v18 = sub_1009B96FC((char *)(v22 > 1), v23 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v23 + 1;
          v9 = &v18[16 * v23];
          *((_QWORD *)v9 + 4) = v6;
          *((_QWORD *)v9 + 5) = v15;
          goto LABEL_9;
        }
      }
      sub_1003351D4(v6, v15);
      v18 = (char *)_swiftEmptyArrayStorage;
      if (v15 >= 2)
        goto LABEL_22;
LABEL_9:
      swift_release(inited);
      v10 = sub_100007E8C(&qword_1011D3728);
      v11 = sub_100049F28((unint64_t *)&qword_1011D6E40, &qword_1011D3728, (uint64_t)&protocol conformance descriptor for [A]);
      v12 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
      v14 = v13;
      swift_bridgeObjectRelease(v18);
      sub_10013B670(v6, v15);
      sub_1009AC4C0(v4, v3);
      v6 = v12;
      v3 = v14;
LABEL_10:
      v8 += 2;
      v4 = v6;
      if (!--v5)
        goto LABEL_4;
    }
  }
  v6 = v4;
LABEL_4:
  swift_bridgeObjectRelease(v24);
  return v6;
}

uint64_t sub_1009AB0CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1009AB0F0(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v6 = swift_task_alloc(dword_1011D3644);
  v8 = v2[2];
  v7 = v2[3];
  v9 = v2[1];
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_10005AEE4;
  *(_OWORD *)(v6 + 48) = v9;
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch(sub_1009AA9AC, 0, 0);
}

unint64_t sub_1009AB16C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3660;
  if (!qword_1011D3660)
  {
    v1 = objc_opt_self(NSTimer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D3660);
  }
  return result;
}

unint64_t sub_1009AB1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3668;
  if (!qword_1011D3668)
  {
    v1 = type metadata accessor for NSTimer.TimerPublisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSTimer.TimerPublisher, v1);
    atomic_store(result, (unint64_t *)&qword_1011D3668);
  }
  return result;
}

uint64_t sub_1009AB1F4(uint64_t a1)
{
  return sub_1009AC1C4(a1, "%{public}s: waiting for perform to return…");
}

uint64_t sub_1009AB200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  _QWORD v14[2];
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 40);
  v14[0] = *(_QWORD *)(v0 + 32);
  v1 = v14[0];
  v14[1] = v2;
  v15 = *(_OWORD *)(v0 + 48);
  v13 = v15;
  v3 = type metadata accessor for Action(0, (uint64_t)v14);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v13 - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  v9 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = v0 + v5;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v1 - 8) + 8))(v10, v1, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v10 + *(int *)(v3 + 52), v2);
  swift_release();
  swift_release();
  v11 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v6 + 8))(v0 + v7, v13, v11);
  return swift_deallocObject(v0, v8);
}

uint64_t sub_1009AB32C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v11 = v1[2];
  v12 = v1[3];
  v13 = (uint64_t)v1 + v9;
  v14 = (uint64_t)v1 + ((v9 + *(_QWORD *)(v8 + 64) + v10) & ~v10);
  v15 = (_QWORD *)swift_task_alloc(dword_1011D3684);
  v2[6] = v15;
  *v15 = v2;
  v15[1] = sub_10071FA14;
  return sub_1009A99B0(a1, v11, v12, v13, v14, v4, v5, v6);
}

unint64_t sub_1009AB410()
{
  unint64_t result;

  result = qword_1011D3690[0];
  if (!qword_1011D3690[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionError, &type metadata for ActionError);
    atomic_store(result, qword_1011D3690);
  }
  return result;
}

uint64_t sub_1009AB454(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
}

uint64_t sub_1009AB460(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = (char *)&value witness table for () + 64;
      v5[5] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 6, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1009AB50C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v26 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain(v18);
    swift_retain(v23);
  }
  swift_retain(v26);
  return v4;
}

uint64_t sub_1009AB680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v8 + 8));
  v9 = (((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 8));
  return swift_release(*(_QWORD *)(((v9 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1009AB71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain(v16);
  swift_retain(v21);
  swift_retain(v24);
  return a1;
}

uint64_t sub_1009AB804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  v23 = v20[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  v27 = v24[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain(v26);
  swift_release(v27);
  return a1;
}

uint64_t sub_1009AB908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *v18;
  _OWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1009AB9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = v13 + v12;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v16);
  v18 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (v17 & 0xFFFFFFFFFFFFF8) + 15;
  *v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 8);
  v22 = (v19 & 0xFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v20 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)(v23 + 8);
  *(_OWORD *)v23 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFF8);
  swift_release(v24);
  return a1;
}

uint64_t sub_1009ABAB0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1009ABB68 + 4 * byte_100EDB4A0[v15]))();
  }
}

void sub_1009ABC10(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1009ABD44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1009ABDD4);
}

void sub_1009ABD4C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1009ABD54);
  JUMPOUT(0x1009ABDD4);
}

void sub_1009ABD98()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1009ABDD4);
}

void sub_1009ABDA0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1009ABDD4);
}

uint64_t sub_1009ABDA8(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x1009ABDD4);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x1009ABDB4);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

unint64_t destroy for ActionSupportedStatus(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s9MusicCore21ActionSupportedStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for ActionSupportedStatus(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 + 1;
  if (v7 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_12;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease(v4);
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSupportedStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t sub_1009ABFEC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1009AC00C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionSupportedStatus()
{
  return &type metadata for ActionSupportedStatus;
}

ValueMetadata *type metadata accessor for ActionError()
{
  return &type metadata for ActionError;
}

uint64_t sub_1009AC05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009AC0A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009AC0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 16);
  v1 = v10;
  v11 = *(_OWORD *)(v0 + 24);
  v9 = v11;
  v12 = v2;
  v3 = type metadata accessor for Action(0, (uint64_t)&v10);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = v0 + v5;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7 + *(int *)(v3 + 52));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v6);
}

uint64_t sub_1009AC1B8(uint64_t a1)
{
  return sub_1009AC1C4(a1, "%{public}s: waiting for finish to return…");
}

uint64_t sub_1009AC1C4(uint64_t a1, const char *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v11) - 8) + 80);
  return sub_1009AA440(a1, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

double sub_1009AC250(uint64_t a1)
{
  uint64_t *v1;

  return sub_1009AAAFC(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1009AC264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  _QWORD v17[2];
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 40);
  v17[0] = *(_QWORD *)(v0 + 32);
  v2 = v17[0];
  v17[1] = v1;
  v18 = *(_OWORD *)(v0 + 48);
  v16 = v18;
  v3 = type metadata accessor for Action(0, (uint64_t)v17);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = sub_100044B54((uint64_t *)&unk_1011D67C0);
  v8 = type metadata accessor for CheckedContinuation(0, v16, v7, &protocol self-conformance witness table for Error);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v10 + *(_QWORD *)(v9 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = swift_release();
  v13 = v0 + v5;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 8) + 8))(v13, v2, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v13 + *(int *)(v3 + 52), v1);
  swift_release();
  swift_release();
  v14 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v9 + 8))(v0 + v10, v8, v14);
  return swift_deallocObject(v0, v11);
}

uint64_t sub_1009AC3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v14;
  v2 = *(_QWORD *)(type metadata accessor for Action(0, v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100044B54((uint64_t *)&unk_1011D67C0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CheckedContinuation(0, v14, v5, &protocol self-conformance witness table for Error)- 8)+ 80);
  v7 = v3 + v4 + v6;
  v8 = *(int **)(v0 + 64);
  v9 = v0 + v3;
  v10 = v0 + (v7 & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_1011D371C);
  *(_QWORD *)(v1 + 48) = v11;
  *v11 = v1;
  v11[1] = sub_10071FA14;
  *(_QWORD *)&v14 = (char *)v8 + *v8;
  v12 = (_QWORD *)swift_task_alloc(v8[1]);
  v11[2] = v12;
  *v12 = v11;
  v12[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v9, v10);
}

uint64_t sub_1009AC4C0(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_10013B670(a1, a2);
  return a1;
}

uint64_t sub_1009AC4D0(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_1003351D4(a1, a2);
  return a1;
}

uint64_t sub_1009AC4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20;
  _QWORD v22[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_1009AE148(a1);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
    {
LABEL_6:
      v19 = 0;
      return swift_task_create(v11, v19, a4, a2, a3);
    }
  }
  else
  {
    v20 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v20 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
      goto LABEL_6;
  }
  v13 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v12, v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
  v18 = v17;
  swift_unknownObjectRelease(v12);
  if (!(v18 | v16))
    goto LABEL_6;
  v22[0] = 0;
  v22[1] = 0;
  v19 = v22;
  v22[2] = v16;
  v22[3] = v18;
  return swift_task_create(v11, v19, a4, a2, a3);
}

uint64_t ActionMenu.Element.id.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;

  v5 = v4;
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = type metadata accessor for ActionMenu.Item(0, v8, v7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v17 + 16))(v16, v5, a1, v14);
  if (swift_getEnumCaseMultiPayload(v16, a1) == 1)
  {
    v18 = *v16;
    v19 = (void *)v16[6];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v16, v9);
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v8, *(_QWORD *)(v7 + 8));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v18;
}

uint64_t static ActionMenu.Element.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _OWORD *v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[5];
  _OWORD v41[6];

  v39 = a2;
  v36 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v34 = (char *)&v34 - v7;
  v37 = a3;
  v38 = a4;
  v9 = type metadata accessor for ActionMenu.Element(0, a3, a4, v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (_OWORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, v9, 0, 0);
  v17 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v18 = __chkstk_darwin(TupleTypeMetadata2);
  v20 = (char *)&v34 - v19;
  v22 = (_OWORD *)((char *)&v34 + *(int *)(v21 + 48) - v19);
  v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v23((char *)&v34 - v19, a1, v9, v18);
  ((void (*)(_OWORD *, uint64_t, uint64_t))v23)(v22, v39, v9);
  if (swift_getEnumCaseMultiPayload(v20, v9) != 1)
  {
    ((void (*)(char *, char *, uint64_t))v23)(v15, v20, v9);
    if (swift_getEnumCaseMultiPayload(v22, v9) != 1)
    {
      v29 = v35;
      v30 = (uint64_t)v34;
      v31 = v36;
      (*(void (**)(char *, _OWORD *, uint64_t))(v35 + 32))(v34, v22, v36);
      v28 = static ActionMenu.Item.== infix(_:_:)((uint64_t)v15, v30, v37, v38);
      v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v32(v30, v31);
      v32((uint64_t)v15, v31);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
    goto LABEL_7;
  }
  ((void (*)(_OWORD *, char *, uint64_t))v23)(v12, v20, v9);
  v24 = v12[3];
  v40[2] = v12[2];
  v40[3] = v24;
  v40[4] = v12[4];
  v25 = v12[1];
  v40[0] = *v12;
  v40[1] = v25;
  if (swift_getEnumCaseMultiPayload(v22, v9) != 1)
  {
    sub_1002A4984(v40);
LABEL_7:
    v28 = 0;
    v10 = v17;
    v9 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v26 = v22[3];
  v41[2] = v22[2];
  v41[3] = v26;
  v41[4] = v22[4];
  v27 = v22[1];
  v41[0] = *v22;
  v41[1] = v27;
  v28 = static ActionMenu.== infix(_:_:)((uint64_t *)v40, v41);
  sub_1002A4984(v41);
  sub_1002A4984(v40);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
  return v28 & 1;
}

uint64_t sub_1009ACA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = ActionMenu.Element.id.getter(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1009ACA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Element.__derived_enum_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t static ActionMenu.ElementBuilder.buildBlock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1009ACA84(a1, a2, a3, (uint64_t)sub_1009AE188);
}

uint64_t static ActionMenu.ElementBuilder.buildArray(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1009ACA84(a1, a2, a3, (uint64_t)sub_1009AD1D0);
}

uint64_t sub_1009ACA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  _QWORD v10[6];

  v10[5] = a1;
  v10[2] = a2;
  v10[3] = a3;
  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v5 = type metadata accessor for Array(255);
  v6 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  return Sequence.flatMap<A>(_:)(a4, v10, v6, v5, WitnessTable, v8);
}

uint64_t static ActionMenu.ElementBuilder.buildIf(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    v5 = type metadata accessor for ActionMenu.Element(0, a2, a3, a4);
    v4 = static Array._allocateUninitialized(_:)(0, v5);
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];

  v69 = a3;
  v70 = a6;
  v71[0] = a3;
  v71[1] = a2;
  v71[2] = a4;
  v71[3] = a5;
  v59 = a5;
  v10 = type metadata accessor for Action(0, (uint64_t)v71);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  v13 = *(_QWORD *)(v11 + 64);
  v14 = __chkstk_darwin(v10);
  v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v62 = (char *)&v52 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v52 - v18;
  v57 = (char *)&v52 - v18;
  v20 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v17);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v22;
  v24 = type metadata accessor for ActionMenu.Element(255, a2, a5, v23);
  v65 = v24;
  v25 = type metadata accessor for _ContiguousArrayStorage(0, v24);
  v26 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
  v63 = static Array._adoptStorage(_:count:)(v26, 1);
  v61 = v27;
  v28 = *(int *)(v12 + 52);
  v68 = a1;
  v29 = a1 + v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v56 = a2;
  v30(v22, v29, a2);
  v31 = v11;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v32 = v12;
  v58(v19, a1, v12);
  v33 = *(unsigned __int8 *)(v11 + 80);
  v34 = (v33 + 56) & ~v33;
  v35 = v34 + v13;
  v67 = v33 | 7;
  v54 = v34 + v13;
  v36 = (char *)swift_allocObject(&unk_1010EA7A8, v34 + v13, v33 | 7);
  v37 = v69;
  v38 = v70;
  *((_QWORD *)v36 + 2) = a2;
  *((_QWORD *)v36 + 3) = v37;
  v55 = a4;
  v39 = v59;
  *((_QWORD *)v36 + 4) = a4;
  *((_QWORD *)v36 + 5) = v39;
  *((_QWORD *)v36 + 6) = v38;
  v53 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v66 = v32;
  v53(&v36[v34], v57, v32);
  v40 = v62;
  v41 = v58;
  v58(v62, v68, v32);
  v42 = (char *)swift_allocObject(&unk_1010EA7D0, v35, v67);
  v43 = v56;
  *((_QWORD *)v42 + 2) = v56;
  *((_QWORD *)v42 + 3) = v37;
  *((_QWORD *)v42 + 4) = a4;
  *((_QWORD *)v42 + 5) = v39;
  *((_QWORD *)v42 + 6) = v38;
  v44 = v40;
  v45 = v66;
  v46 = v53;
  v53(&v42[v34], v44, v66);
  v47 = v64;
  v41(v64, v68, v45);
  v48 = (char *)swift_allocObject(&unk_1010EA7F8, v54, v67);
  v49 = v69;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v49;
  *((_QWORD *)v48 + 4) = v55;
  *((_QWORD *)v48 + 5) = v39;
  *((_QWORD *)v48 + 6) = v70;
  v46(&v48[v34], v47, v66);
  v50 = v61;
  sub_1009B8410((uint64_t)v60, (uint64_t)sub_1009AD1F0, (uint64_t)v36, (uint64_t)sub_1009AD270, (uint64_t)v42, (uint64_t)&unk_1011D3738, (uint64_t)v48, v43, v61, v39);
  swift_storeEnumTagMultiPayload(v50, v65, 0);
  type metadata accessor for Array(0);
  return v63;
}

uint64_t sub_1009ACE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[2] = a3;
  v6[3] = a2;
  v6[4] = a4;
  v6[5] = a5;
  v7 = type metadata accessor for Action(0, (uint64_t)(v6 + 2));
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v6[14] = v9;
  v6[15] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009ACF38, 0, 0);
}

uint64_t sub_1009ACF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 56);
  v14 = *(_OWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v7, v5);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 72) & ~v9;
  v11 = swift_allocObject(&unk_1010EA890, v10 + v3, v9 | 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_OWORD *)(v11 + 32) = v13;
  *(_OWORD *)(v11 + 48) = v14;
  *(_QWORD *)(v11 + 64) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v5);
  sub_1009AC4E0(v1, (uint64_t)&unk_1011D3848, v11, v14);
  swift_release();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009AD054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v14;
  uint64_t v15;

  v14 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  v8[2] = a6;
  v8[3] = a5;
  v8[4] = a7;
  v8[5] = a8;
  v8[6] = v14;
  v15 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  *v14 = v8;
  v14[1] = sub_10071FA14;
  return Action.execute(bypassSupportedStatusCheck:)(a1, 0, v15);
}

uint64_t static ActionMenu.ElementBuilder.buildExpression(_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v5 = type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v6 = type metadata accessor for _ContiguousArrayStorage(0, v5);
  v7 = swift_allocObject(v6, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  *v9 = *a1;
  v10 = a1[4];
  v12 = a1[1];
  v11 = a1[2];
  v9[3] = a1[3];
  v9[4] = v10;
  v9[1] = v12;
  v9[2] = v11;
  swift_storeEnumTagMultiPayload(v9, v5, 1);
  type metadata accessor for Array(0);
  sub_1002A49E4((uint64_t)a1);
  return v8;
}

uint64_t sub_1009AD19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CustomStringConvertible.description.getter(a2, a3);
}

uint64_t type metadata accessor for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Element);
}

uint64_t sub_1009AD1D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1009AD1F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];
  __int128 v11;

  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 48);
  v10[0] = *(_QWORD *)(v1 + 24);
  v4 = v10[0];
  v10[1] = v3;
  v11 = *(_OWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v10) - 8) + 80);
  v7 = v1 + ((v6 + 56) & ~v6);
  a1[3] = v4;
  a1[4] = v5;
  v8 = sub_100049F68(a1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v8, v7, v4);
}

uint64_t sub_1009AD270()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[2];
  v3 = v0[4];
  v4 = v0[5];
  v7 = v0[3];
  v2 = v7;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  type metadata accessor for Action(0, (uint64_t)&v7);
  v7 = v2;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  v5 = type metadata accessor for Action(0, (uint64_t)&v7);
  return Action.supportedStatus()(v5);
}

uint64_t sub_1009AD2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 16);
  v9[0] = *(_QWORD *)(v0 + 24);
  v2 = v9[0];
  v9[1] = v1;
  v10 = *(_OWORD *)(v0 + 32);
  v3 = type metadata accessor for Action(0, (uint64_t)v9);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = v0 + v5;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v7 + *(int *)(v3 + 52), v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v6);
}

uint64_t sub_1009AD3D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v1[2] = v3;
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v5;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v1 + 2)) - 8) + 80);
  v8 = (uint64_t)v0 + ((v7 + 56) & ~v7);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D3734);
  v1[6] = v9;
  *v9 = v1;
  v9[1] = sub_10071FA14;
  return sub_1009ACE94(v8, v2, v3, v4, v5, v6);
}

uint64_t sub_1009AD474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "P";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v7);
    return 0;
  }
  return result;
}

uint64_t sub_1009AD4E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) & 0xF8;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4 + ((unsigned __int16)(v3 + 23) & (unsigned __int16)~(_WORD)v3 & 0x1F8);
  swift_retain(v4);
  return v5;
}

uint64_t sub_1009AD530(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = 80;
  if (((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x50)
    v5 = ((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = v5 & 0xFFFFFFF8;
  if (v6 >= 2 && v7 != 0)
    v6 = *(_DWORD *)a1 + 2;
  if (v6 == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

    v9 = (_QWORD *)(a1 + 72);
  }
  else
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
    v10 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v10 + 8));
    v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v11 + 8));
    v9 = (_QWORD *)(((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  return swift_release(*v9);
}

uint64_t sub_1009AD60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v11;
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v12;
    v13 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    v15 = v13;
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    v17 = (_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v24[1];
    *v23 = *v24;
    v23[1] = v14;
    swift_retain(v19);
    swift_retain(v22);
    v16 = 0;
  }
  swift_retain(v14);
  *(_BYTE *)(a1 + v7) = v16;
  return a1;
}

uint64_t sub_1009AD764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v16 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v18 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v18;
      v19 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v19;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 64);
      v21 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v20;
      *(_QWORD *)(a1 + 72) = v21;
      *(_BYTE *)(a1 + v8) = 1;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v22 = v19;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v23 = (_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v24 = (_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      v21 = v30[1];
      *v29 = *v30;
      v29[1] = v21;
      *(_BYTE *)(a1 + v8) = 0;
      swift_retain(v25);
      swift_retain(v28);
    }
    swift_retain(v21);
  }
  return a1;
}

_OWORD *sub_1009AD978(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  __int128 v10;
  __int128 v11;
  char v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_OWORD *)(a2 + 48);
    a1[2] = *(_OWORD *)(a2 + 32);
    a1[3] = v10;
    a1[4] = *(_OWORD *)(a2 + 64);
    v11 = *(_OWORD *)(a2 + 16);
    *a1 = *(_OWORD *)a2;
    a1[1] = v11;
    v12 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, uint64_t))(v5 + 32))(a1, a2);
    v12 = 0;
    v13 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v14 = (_OWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
    v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v7) = v12;
  return a1;
}

uint64_t sub_1009ADA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      LOBYTE(v14) = 0;
      v18 = (_OWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v19 = (_OWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *v18 = *v19;
      v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
      v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
      *v20 = *v21;
      *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    }
    *(_BYTE *)(a1 + v8) = v14;
  }
  return a1;
}

uint64_t sub_1009ADC18(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  int v7;
  int v9;
  int v10;
  unsigned int v11;

  v3 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v3 <= 0x50)
    v3 = 80;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_20;
  v4 = v3 | 1;
  v5 = 8 * (v3 | 1);
  if ((v3 | 1) <= 3)
  {
    v6 = (a2 + ~(-1 << v5) - 254) >> v5;
    if (v6 > 0xFFFE)
    {
      v7 = *(_DWORD *)&a1[v4];
      if (!v7)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v6 > 0xFE)
    {
      v7 = *(unsigned __int16 *)&a1[v4];
      if (!*(_WORD *)&a1[v4])
        goto LABEL_20;
      goto LABEL_13;
    }
    if (!v6)
      goto LABEL_20;
  }
  v7 = a1[v4];
  if (!a1[v4])
  {
LABEL_20:
    v11 = a1[v3];
    if (v11 >= 2)
      return (v11 ^ 0xFF) + 1;
    else
      return 0;
  }
LABEL_13:
  v9 = (v7 - 1) << v5;
  if (v4 >= 4)
    v9 = 0;
  if ((_DWORD)v4 == 1)
    v10 = *a1;
  else
    v10 = *(_DWORD *)a1;
  return (v10 | v9) + 255;
}

void sub_1009ADD00(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v5 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v5 <= 0x50)
    v5 = 80;
  v6 = v5 | 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = (a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6);
    if (v9 > 0xFFFE)
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0xFF)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 != 0;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    v8 &= ~(-1 << (8 * v6));
    bzero(a1, v6);
    if ((_DWORD)v6 == 1)
    {
      *a1 = v8;
      goto LABEL_18;
    }
  }
  else
  {
    bzero(a1, v5 | 1);
  }
  *(_DWORD *)a1 = v8;
LABEL_18:
  __asm { BR              X10 }
}

uint64_t sub_1009ADEA4(_DWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = 80;
  if (((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x50)
    v2 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v3 = *((unsigned __int8 *)a1 + v2);
  v4 = v2 & 0xFFFFFFF8;
  if (v3 >= 2 && v4 != 0)
    return (*a1 + 2);
  return v3;
}

void sub_1009ADEFC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char v5;
  unsigned int v6;

  v4 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v4 <= 0x50)
    v4 = 80;
  if (a2 > 1)
  {
    if ((_DWORD)v4)
      v5 = 2;
    else
      v5 = a2;
    if ((_DWORD)v4)
      v6 = a2 - 2;
    else
      v6 = 0;
    a1[v4] = v5;
    bzero(a1, v4);
    *(_DWORD *)a1 = v6;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for ActionMenu.ElementBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.ElementBuilder);
}

uint64_t sub_1009ADF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD v10[2];
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 32);
  v10[0] = *(_QWORD *)(v0 + 40);
  v2 = v10[0];
  v10[1] = v1;
  v11 = *(_OWORD *)(v0 + 48);
  v3 = type metadata accessor for Action(0, (uint64_t)v10);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v5;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 8) + 8))(v8, v2, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v8 + *(int *)(v3 + 52), v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v6);
}

uint64_t sub_1009AE07C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v5;
  v2[3] = v4;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)v1 + ((v8 + 72) & ~v8);
  v12 = (_QWORD *)swift_task_alloc(dword_1011D3844);
  v2[6] = v12;
  *v12 = v2;
  v12[1] = sub_100720B48;
  return sub_1009AD054(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_1009AE148(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009AE188@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1009AD1D0(a1, a2);
}

void *MetricsEvent.Click.ActionDetails.init(_:)(uint64_t a1)
{
  void *v1;

  v1 = sub_1009AF7AC(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  return sub_1009AFBBC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t MusicItem.metricsTargetIdentifier.getter(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = __chkstk_darwin(a1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v5 + 16))(v4, v2);
  v6 = sub_100007E8C(&qword_1011D3850);
  if ((swift_dynamicCast(&v13, v4, a1, v6, 6) & 1) == 0)
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    sub_10004FF60((uint64_t)&v13, (uint64_t *)&unk_1011D9690);
    return 0x497972617262694CLL;
  }
  v7 = *((_QWORD *)&v14 + 1);
  v8 = v15;
  sub_100007E68(&v13, *((uint64_t *)&v14 + 1));
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  if (!v10)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v13);
    return 0x497972617262694CLL;
  }
  v11 = v9;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v13);
  return v11;
}

uint64_t sub_1009AE324()
{
  return sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, qword_1011D3968);
}

uint64_t sub_1009AE338()
{
  return sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for Album, &qword_1011D3930);
}

uint64_t sub_1009AE34C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[4];
  Swift::String v18;

  v17[0] = a1(0);
  v3 = sub_100007E8C(a2);
  v4 = String.init<A>(describing:)(v17, v3);
  v6 = v5;
  sub_1009AFE04(1, v4, v5);
  v7 = Substring.lowercased()();
  swift_bridgeObjectRelease();
  v8 = sub_1009AFE8C(1uLL, v4, v6);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease();
  v18 = v7;
  v17[0] = v8;
  v17[1] = v10;
  v17[2] = v12;
  v17[3] = v14;
  v15 = sub_1009AFF28();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v17, &type metadata for Substring, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18._countAndFlagsBits;
}

uint64_t MusicItem.metricsContentType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t MetatypeMetadata;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[4];
  Swift::String v18;

  v17[0] = swift_getDynamicType(v1, a1, 0);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v4 = String.init<A>(describing:)(v17, MetatypeMetadata);
  v6 = v5;
  sub_1009AFE04(1, v4, v5);
  v7 = Substring.lowercased()();
  swift_bridgeObjectRelease();
  v8 = sub_1009AFE8C(1uLL, v4, v6);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease();
  v18 = v7;
  v17[0] = v8;
  v17[1] = v10;
  v17[2] = v12;
  v17[3] = v14;
  v15 = sub_1009AFF28();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v17, &type metadata for Substring, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18._countAndFlagsBits;
}

uint64_t Playlist.Entry.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v0 = type metadata accessor for UploadedVideo(0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v31 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UploadedAudio(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVEpisode(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v20);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v21 != enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    if (v21 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      v23 = v42;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v19, v42);
      v22 = sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_1011D3940);
      v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    }
    else
    {
      if (v21 == enum case for Playlist.Entry.InternalItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
        v25 = v40;
        v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v15, v19, v41);
        v22 = sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_1011D3938);
        v24 = *(void (**)(char *, uint64_t))(v25 + 8);
        v26 = v15;
LABEL_15:
        v24(v26, v23);
        return v22;
      }
      if (v21 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
        v12 = v37;
        v27 = v38;
        v23 = v39;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v19, v39);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode;
        v29 = (uint64_t *)&unk_1011D3950;
      }
      else if (v21 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
        v12 = v34;
        v27 = v35;
        v23 = v36;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v19, v36);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio;
        v29 = (uint64_t *)&unk_1011D3958;
      }
      else
      {
        if (v21 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
          return 1735290739;
        }
        (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
        v12 = v31;
        v27 = v32;
        v23 = v33;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v19, v33);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo;
        v29 = (uint64_t *)&unk_1011D3960;
      }
      v22 = sub_1009AE34C(v28, v29);
      v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    }
    v26 = v12;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v19, v6);
  v22 = sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, &qword_1011D3948);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v22;
}

uint64_t Actions.MetricsReportingContext.actionContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_10064B114(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Actions.MetricsReportingContext.actionContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1009AFF6C(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t Actions.MetricsReportingContext.page.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Actions.MetricsReportingContext(0);
  return sub_10004A160(v1 + *(int *)(v3 + 20), a1, &qword_1011D3860);
}

uint64_t Actions.MetricsReportingContext.page.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  return sub_1009AFFCC(a1, v3);
}

double (*Actions.MetricsReportingContext.page.modify())(_QWORD)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.MetricsReportingContext.pageContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

void Actions.MetricsReportingContext.pageContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Actions.MetricsReportingContext.pageContext.modify())(_QWORD)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.MetricsReportingContext.locations.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

void Actions.MetricsReportingContext.locations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*Actions.MetricsReportingContext.locations.modify())(_QWORD)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.MetricsReportingContext.impressions.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

void Actions.MetricsReportingContext.impressions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*Actions.MetricsReportingContext.impressions.modify())(_QWORD)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 36));
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for Actions.MetricsReportingContext(0);
  v8 = v3 + *(int *)(result + 36);
  *(_BYTE *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_QWORD *)(v8 + 16) = a3;
  return result;
}

double (*Actions.MetricsReportingContext.sharedListeningContext.modify())(_QWORD)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return UIScreen.Dimensions.size.getter;
}

void Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v16 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[6]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v16[7];
  *(_QWORD *)((char *)a9 + v20) = 0;
  v21 = v16[8];
  *(_QWORD *)((char *)a9 + v21) = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_1009AFFCC(a3, v17);
  swift_bridgeObjectRelease(v19[1]);
  *v19 = a4;
  v19[1] = a5;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v20));
  *(_QWORD *)((char *)a9 + v20) = a6;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v21));
  *(_QWORD *)((char *)a9 + v21) = a7;
  v22 = (char *)a9 + v16[9];
  *v22 = a8;
  *((_QWORD *)v22 + 1) = a10;
  *((_QWORD *)v22 + 2) = a11;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E5738, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473696C79616C70;
  else
    return 0x7972617262696CLL;
}

uint64_t sub_1009AEE94(char *a1, char *a2)
{
  return sub_1009A5400(*a1, *a2);
}

Swift::Int sub_1009AEEA0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1009AEF20(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1009AEF7C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x7972617262696CLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1009AEFF8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E5738, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1009AF054(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7972617262696CLL;
  if (*v1)
    v2 = 0x7473696C79616C70;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

BOOL MetricsEvent.Click.ActionDetails.Key.PlayType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E5788, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.PlayType.rawValue.getter()
{
  return 0x7453657461657263;
}

Swift::Int sub_1009AF0FC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_1009AF158(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7453657461657263, 0xED00006E6F697461);
}

Swift::Int sub_1009AF17C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_1009AF1D4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E57C0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1009AF224(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "createStation");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.NavigationType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1009AF280 + 4 * byte_100EDB6E0[a1]))(0x6D75626C41, 0xE500000000000000);
}

uint64_t sub_1009AF280()
{
  return 0x747369747241;
}

uint64_t sub_1009AF294()
{
  return 0x7473696C79616C50;
}

uint64_t sub_1009AF2AC()
{
  return 0x434174726F706552;
}

void sub_1009AF2D0(char *a1)
{
  sub_1009A54A4(*a1);
}

void sub_1009AF2DC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1009AF324()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_1009AF39C()
{
  __asm { BR              X10 }
}

uint64_t sub_1009AF3D4(uint64_t a1)
{
  String.hash(into:)(a1, 0x747369747241, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1009AF438(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1009AF47C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1009AF4F4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1009AF520()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1009AF54C + 4 * byte_100EDB6F0[*v0]))();
}

void sub_1009AF54C(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747241;
  a1[1] = 0xE600000000000000;
}

void sub_1009AF564(_QWORD *a1@<X8>)
{
  *a1 = 0x7473696C79616C50;
  a1[1] = 0xE800000000000000;
}

void sub_1009AF580(char *a1@<X8>)
{
  strcpy(a1, "ReportAConcern");
  a1[15] = -18;
}

uint64_t Track.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for MusicVideo(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Track(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, v1, v10, v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v14, v6);
    v16 = sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_1011D3938);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v15 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
    v16 = sub_1009AE34C((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_1011D3940);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 1735290739;
  }
  return v16;
}

void *sub_1009AF7AC(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_1009AF87C + *((int *)qword_1009AFB98 + *(unsigned __int8 *)(swift_bridgeObjectRetain() + 48));
    __asm { BR              X8 }
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1009AFBBC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;

  v35 = a6;
  v36 = a8;
  v38 = a3;
  v39 = a4;
  v31 = a2;
  v37 = a1;
  v12 = sub_100007E8C(&qword_1011D3860);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v14;
  v15 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v17;
  v18 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v18);
  v33 = (uint64_t)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a5, (uint64_t)v17, &qword_1011D2AE0);
  v20 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v21 = *(uint64_t *)((char *)a10 + v20[7]);
  v22 = *a10;
  v23 = a10[1];
  sub_10004A160((uint64_t)a10 + v20[5], (uint64_t)v14, &qword_1011D3860);
  v24 = *(uint64_t *)((char *)a10 + v20[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10064B114(v22, v23);
  v25 = v35;
  v26 = v36;
  sub_10056C0E8(v35, a7, v36, a9);
  swift_bridgeObjectRetain();
  v30 = v24;
  v27 = v33;
  *((_QWORD *)&v29 + 1) = a7;
  *(_QWORD *)&v29 = v25;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(v37, v31, v38, v39, (uint64_t)v34, v21, v22, v23, v33, v29, v26, a9, (uint64_t)v32, v30);
  if (qword_1011D1C18 != -1)
    swift_once(&qword_1011D1C18, sub_100A19B6C);
  MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(v27, *(uint64_t *)((char *)a10 + v20[6]), *(uint64_t *)((char *)a10 + v20[6] + 8), *((_BYTE *)a10 + v20[9]), *(uint64_t *)((char *)a10 + v20[9] + 8), *(uint64_t *)((char *)a10 + v20[9] + 16));
  return sub_10005B748(v27, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_1009AFE04(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

unint64_t sub_1009AFE8C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v5 = HIBYTE(a3) & 0xF;
    else
      v5 = a2 & 0xFFFFFFFFFFFFLL;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v8 & 1) != 0)
      result = v7;
    if (4 * v5 >= result >> 14)
      return String.subscript.getter(result, v7, a2, a3);
  }
  __break(1u);
  return result;
}

unint64_t sub_1009AFF28()
{
  unint64_t result;

  result = qword_1011D3858;
  if (!qword_1011D3858)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1011D3858);
  }
  return result;
}

uint64_t sub_1009AFF6C(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_1009AFF7C(a1, a2);
  return a1;
}

uint64_t sub_1009AFF7C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t type metadata accessor for Actions.MetricsReportingContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D38E0;
  if (!qword_1011D38E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.MetricsReportingContext);
  return result;
}

uint64_t sub_1009AFFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D3860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E57F8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1009B0060()
{
  unint64_t result;

  result = qword_1011D3868;
  if (!qword_1011D3868)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.DestinationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType);
    atomic_store(result, (unint64_t *)&qword_1011D3868);
  }
  return result;
}

unint64_t sub_1009B00A8()
{
  unint64_t result;

  result = qword_1011D3870;
  if (!qword_1011D3870)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.PlayType, &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType);
    atomic_store(result, (unint64_t *)&qword_1011D3870);
  }
  return result;
}

unint64_t sub_1009B00F0()
{
  unint64_t result;

  result = qword_1011D3878;
  if (!qword_1011D3878)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.NavigationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType);
    atomic_store(result, (unint64_t *)&qword_1011D3878);
  }
  return result;
}

uint64_t *_s23MetricsReportingContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7 > 9)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C(&qword_1011D3860);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v42 = v12;
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      v17 = v11[6];
      __dst = (char *)v9 + v17;
      v18 = (char *)v10 + v17;
      v19 = type metadata accessor for URL(0);
      v39 = *(_QWORD *)(v19 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40(v18, 1, v19))
      {
        v20 = sub_100007E8C(&qword_1011D2AE0);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v19);
      }
      *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
      v21 = v11[8];
      v22 = (_QWORD *)((char *)v9 + v21);
      v23 = (_QWORD *)((char *)v10 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
      v25 = v11[10];
      v26 = (_QWORD *)((char *)v9 + v25);
      v27 = (_QWORD *)((char *)v10 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v9, 0, 1, v11);
    }
    v30 = a3[6];
    v31 = a3[7];
    v32 = (uint64_t *)((char *)a1 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)a1 + v31) = *(uint64_t *)((char *)a2 + v31);
    v35 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double _s23MetricsReportingContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  if (*(_QWORD *)(a1 + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *_s23MetricsReportingContextVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v40;

  v6 = a2[1];
  if (v6 > 9)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011D3860);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v40 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v15 = v10[6];
    __dst = (char *)v8 + v15;
    v16 = (char *)v9 + v15;
    v17 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v17 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38(v16, 1, v17))
    {
      v18 = sub_100007E8C(&qword_1011D2AE0);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v17);
    }
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    v19 = v10[8];
    v20 = (_QWORD *)((char *)v8 + v19);
    v21 = (_QWORD *)((char *)v9 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v8 + v10[9]) = *((_BYTE *)v9 + v10[9]);
    v23 = v10[10];
    v24 = (_QWORD *)((char *)v8 + v23);
    v25 = (_QWORD *)((char *)v9 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v8, 0, 1, v10);
  }
  v28 = a3[6];
  v29 = a3[7];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v33 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s23MetricsReportingContextVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  void (*v36)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v50;
  char *v51;
  void *v52;
  char *__dst;
  int *v54;
  int *v55;

  v6 = a1[1];
  v7 = a2[1];
  if (v6 == 9)
  {
    if (v7 >= 0xA)
      goto LABEL_16;
    goto LABEL_6;
  }
  if (v7 == 9)
  {
    sub_1001C5334((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6 < 9)
  {
    if (v7 >= 9)
    {
LABEL_16:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_7;
  }
  if (v7 < 9)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011D3880);
    goto LABEL_6;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10005B748((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_13;
    }
    v55 = a3;
    *v9 = *v10;
    v9[1] = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9[2] = v10[2];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21 = v11[6];
    v22 = (char *)v9 + v21;
    v23 = (char *)v10 + v21;
    v24 = type metadata accessor for URL(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v52 = v22;
    LODWORD(v22) = v26(v22, 1, v24);
    v27 = v26(v23, 1, v24);
    if ((_DWORD)v22)
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v52, v23, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v52, 0, 1, v24);
        goto LABEL_30;
      }
      v28 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64);
      v29 = v52;
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v25 + 24))(v52, v23, v24);
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v25 + 8))(v52, v24);
      v28 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64);
      v29 = v52;
    }
    memcpy(v29, v23, v28);
LABEL_30:
    *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v37 = v11[8];
    v38 = (_QWORD *)((char *)v9 + v37);
    v39 = (_QWORD *)((char *)v10 + v37);
    *v38 = *v39;
    v38[1] = v39[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v40 = v11[10];
    v41 = (_QWORD *)((char *)v9 + v40);
    v42 = (_QWORD *)((char *)v10 + v40);
    *v41 = *v42;
    v41[1] = v42[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a3 = v55;
    goto LABEL_31;
  }
  if (v15)
  {
LABEL_13:
    v20 = sub_100007E8C(&qword_1011D3860);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_31;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  v16 = v11[6];
  __dst = (char *)v9 + v16;
  v54 = a3;
  v51 = (char *)v10 + v16;
  v17 = type metadata accessor for URL(0);
  v50 = *(_QWORD *)(v17 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v51, 1, v17))
  {
    v19 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v51, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v17);
  }
  a3 = v54;
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  v30 = v11[8];
  v31 = (_QWORD *)((char *)v9 + v30);
  v32 = (_QWORD *)((char *)v10 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  v33 = v11[10];
  v34 = (_QWORD *)((char *)v9 + v33);
  v35 = (_QWORD *)((char *)v10 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  v36 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v9, 0, 1, v11);
LABEL_31:
  v43 = a3[6];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[9];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  *v47 = *v48;
  *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
  *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
  return a1;
}

_OWORD *_s23MetricsReportingContextVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011D3860);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = v9[6];
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C(&qword_1011D2AE0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *((_BYTE *)v7 + v9[9]) = *((_BYTE *)v8 + v9[9]);
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  return a1;
}

uint64_t _s23MetricsReportingContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6 == 9)
    goto LABEL_7;
  if (v7 == 9)
  {
    sub_1001C5334(a1);
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 9)
    goto LABEL_7;
  if (v7 < 9)
  {
    sub_10004FF60(a1, &qword_1011D3880);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10005B748((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_14;
    }
    v23 = v10[1];
    *v9 = *v10;
    v9[1] = v23;
    swift_bridgeObjectRelease();
    v24 = v10[3];
    v9[2] = v10[2];
    v9[3] = v24;
    swift_bridgeObjectRelease();
    v25 = v11[6];
    v26 = (char *)v9 + v25;
    v27 = (char *)v10 + v25;
    v28 = type metadata accessor for URL(0);
    v52 = *(_QWORD *)(v28 - 8);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
    __dsta = v26;
    LODWORD(v26) = v29(v26, 1, v28);
    v30 = v29(v27, 1, v28);
    if ((_DWORD)v26)
    {
      if (!v30)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 32))(__dsta, v27, v28);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dsta, 0, 1, v28);
        goto LABEL_26;
      }
      v31 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64);
      v32 = __dsta;
    }
    else
    {
      if (!v30)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 40))(__dsta, v27, v28);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v52 + 8))(__dsta, v28);
      v31 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64);
      v32 = __dsta;
    }
    memcpy(v32, v27, v31);
LABEL_26:
    *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
    swift_bridgeObjectRelease();
    v33 = v11[8];
    v34 = (_QWORD *)((char *)v9 + v33);
    v35 = (_QWORD *)((char *)v10 + v33);
    v37 = *v35;
    v36 = v35[1];
    *v34 = v37;
    v34[1] = v36;
    swift_bridgeObjectRelease();
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v38 = v11[10];
    v39 = (_QWORD *)((char *)v9 + v38);
    v40 = (_QWORD *)((char *)v10 + v38);
    v42 = *v40;
    v41 = v40[1];
    *v39 = v42;
    v39[1] = v41;
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v15)
  {
LABEL_14:
    v22 = sub_100007E8C(&qword_1011D3860);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_27;
  }
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  v17 = v11[6];
  __dst = (char *)v9 + v17;
  v18 = (char *)v10 + v17;
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  *(_OWORD *)((char *)v9 + v11[8]) = *(_OWORD *)((char *)v10 + v11[8]);
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  *(_OWORD *)((char *)v9 + v11[10]) = *(_OWORD *)((char *)v10 + v11[10]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_27:
  v43 = a3[6];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_BYTE *)v49 = *(_BYTE *)v50;
  *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
  return a1;
}

uint64_t _s23MetricsReportingContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009B11D8);
}

uint64_t sub_1009B11D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100007E8C(&qword_1011D3860);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s23MetricsReportingContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009B1278);
}

uint64_t sub_1009B1278(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011D3860);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_1009B12FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100EDB918;
  sub_1009B1390(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EDB930;
    v4[3] = &unk_100EDB948;
    v4[4] = &unk_100EDB948;
    v4[5] = &unk_100EDB960;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_1009B1390(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011D38F0)
  {
    v2 = type metadata accessor for MetricsEvent.Page(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011D38F0);
  }
}

uint64_t sub_1009B13E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t _s3KeyOwxx(uint64_t a1)
{
  return sub_1009B140C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1009B140C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s3KeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1009B13E8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s3KeyOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1009B13E8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1009B140C(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for GroupActivitiesManager.EligibilityContext(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s3KeyOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1009B140C(v4, v5, v6);
  return a1;
}

uint64_t _s3KeyOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s3KeyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1009B15A0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1009B15B8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key;
}

uint64_t _s3KeyO15DestinationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009B162C + 4 * byte_100EDB6F9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009B1660 + 4 * byte_100EDB6F4[v4]))();
}

uint64_t sub_1009B1660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009B1668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009B1670);
  return result;
}

uint64_t sub_1009B167C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009B1684);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009B1688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009B1690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType;
}

uint64_t _s3KeyO8PlayTypeOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1009B16F0 + 4 * byte_100EDB6FE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1009B1710 + 4 * byte_100EDB703[v4]))();
}

_BYTE *sub_1009B16F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1009B1710(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009B1718(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1009B1720(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1009B1728(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009B1730(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType;
}

uint64_t _s3KeyO14NavigationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1009B1798 + 4 * byte_100EDB70D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1009B17CC + 4 * byte_100EDB708[v4]))();
}

uint64_t sub_1009B17CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009B17D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009B17DCLL);
  return result;
}

uint64_t sub_1009B17E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009B17F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1009B17F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009B17FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType;
}

uint64_t View.actionContextMenu<A>(title:menu:excluding:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t, uint64_t);
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t OpaqueTypeConformance2;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, uint64_t);
  char **v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v59;
  char *v60;
  char **v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t (*v72)(_QWORD *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(_QWORD, _QWORD, _QWORD);
  void *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[10];
  _OWORD v92[5];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;

  v76 = a9;
  v79 = a7;
  v69 = a2;
  v70 = (char *)a4;
  v68 = a1;
  v13 = type metadata accessor for ActionMenu(255, a6, a8, a4);
  v14 = type metadata accessor for Optional(0, v13);
  v72 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15 = v72(v91, a3, v14);
  v65 = v91[1];
  v66 = v91[3];
  v67 = v91[5];
  v63 = (id)v91[6];
  v64 = v91[9];
  v61 = *(char ***)(a5 - 8);
  __chkstk_darwin(v15);
  v60 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v59 = (char *)&v59 - v18;
  v20 = type metadata accessor for ActionMenuView(255, a6, a8, v19);
  *(_QWORD *)&v93 = a6;
  *((_QWORD *)&v93 + 1) = a6;
  *(_QWORD *)&v94 = a8;
  *((_QWORD *)&v94 + 1) = a8;
  v21 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v93);
  v22 = type metadata accessor for Optional(255, v21);
  v23 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v22);
  v24 = type metadata accessor for ModifiedContent(255, v20, v23);
  v25 = type metadata accessor for Section(255, &type metadata for Text, v24, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v20);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v23);
  v89 = WitnessTable;
  v90 = v27;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v86 = &protocol witness table for Text;
  v87 = v28;
  v88 = &protocol witness table for EmptyView;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v25);
  *(_QWORD *)&v93 = a5;
  *((_QWORD *)&v93 + 1) = v25;
  v78 = v25;
  v30 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))v29;
  *(_QWORD *)&v94 = v79;
  *((_QWORD *)&v94 + 1) = v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v62 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v59 - v35;
  v37 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a5);
  v73 = *(_QWORD *)(v37 - 8);
  v74 = v37;
  v38 = __chkstk_darwin(v37);
  v77 = (char *)&v59 - v39;
  v71 = a3;
  v40 = ((uint64_t (*)(_OWORD *, uint64_t, uint64_t, __n128))v72)(v92, a3, v14, v38);
  if (*((_QWORD *)&v92[0] + 1))
  {
    v61 = &v59;
    v95 = v92[2];
    v96 = v92[3];
    v97 = v92[4];
    v93 = v92[0];
    v94 = v92[1];
    __chkstk_darwin(v40);
    v72 = v30;
    *(&v59 - 10) = (char *)a5;
    *(&v59 - 9) = (char *)a6;
    v41 = (uint64_t)v79;
    *(&v59 - 8) = v79;
    *(&v59 - 7) = (char *)a8;
    *(&v59 - 6) = v75;
    *(&v59 - 5) = (char *)&v93;
    v42 = v69;
    *(&v59 - 4) = v68;
    *(&v59 - 3) = v42;
    *(&v59 - 2) = v70;
    v43 = v63;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = swift_checkMetadataState(0, v78);
    v30 = v72;
    View.contextMenu<A>(menuItems:)(sub_1009B207C, &v59 - 12, a5, v44, v41, v72);
    v82 = a5;
    v83 = v44;
    v84 = v41;
    v85 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    v46 = v62;
    v47 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    v47(v36, v33, OpaqueTypeMetadata2);
    v48 = *(void (**)(char *, uint64_t))(v46 + 8);
    v48(v33, OpaqueTypeMetadata2);
    v47(v33, v36, OpaqueTypeMetadata2);
    sub_100817130((uint64_t)v33, OpaqueTypeMetadata2, a5, OpaqueTypeConformance2, v41);
    sub_1000E411C(v71);
    v48(v33, OpaqueTypeMetadata2);
    v48(v36, OpaqueTypeMetadata2);
  }
  else
  {
    v49 = v61;
    v50 = v61[2];
    v51 = v59;
    ((void (*)(char *, char *, uint64_t))v50)(v59, v75, a5);
    v52 = (uint64_t)v60;
    ((void (*)(char *, char *, uint64_t))v50)(v60, v51, a5);
    v41 = (uint64_t)v79;
    *(_QWORD *)&v93 = a5;
    *((_QWORD *)&v93 + 1) = v78;
    *(_QWORD *)&v94 = v79;
    *((_QWORD *)&v94 + 1) = v30;
    v53 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    sub_1008171F4(v52, OpaqueTypeMetadata2, a5, v53, v41);
    v54 = v49[1];
    ((void (*)(uint64_t, uint64_t))v54)(v52, a5);
    ((void (*)(char *, uint64_t))v54)(v51, a5);
  }
  v82 = a5;
  v83 = v78;
  v84 = v41;
  v85 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
  v80 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v81 = v41;
  v55 = v74;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v74);
  v56 = v73;
  v57 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v76, v77, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v55);
}

uint64_t type metadata accessor for ActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView);
}

uint64_t type metadata accessor for ActionMenuView.Excluding(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ActionMenuView.Excluding);
}

uint64_t sub_1009B1D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v34 = a6;
  v35 = a8;
  v31 = a4;
  v32 = a5;
  v30 = a3;
  v33 = a1;
  v36 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v42[0] = a7;
  v42[1] = a7;
  v42[2] = a10;
  v42[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v42);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v30 - v22;
  sub_1009B1F44(a2, v30, v31, v32, v34, a7, v35, a10);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v12);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v37 = &protocol witness table for Text;
  v38 = v26;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v20, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v20, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_1009B1F44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  unint64_t v18;
  _QWORD v20[10];
  _QWORD v21[4];
  _QWORD v22[2];

  if (a3)
    v10 = a2;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (a3)
    v11 = a3;
  v22[0] = v10;
  v22[1] = v11;
  v20[2] = a5;
  v20[3] = a6;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = a1;
  v20[7] = a4;
  v12 = type metadata accessor for ActionMenuView(255, a6, a8, a4);
  swift_bridgeObjectRetain();
  v21[0] = a6;
  v21[1] = a6;
  v21[2] = a8;
  v21[3] = a8;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v21);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v20[8] = swift_getWitnessTable(&unk_100EDBA70, v12);
  v20[9] = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v18 = sub_10098A8C0();
  return Section<>.init<A>(_:content:)(v22, sub_1009B62F8, v20, v16, &type metadata for String, WitnessTable, v18);
}

uint64_t sub_1009B207C@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1009B1D5C(v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3], v1[4], a1, v1[5]);
}

uint64_t View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, _QWORD *a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t OpaqueTypeConformance2;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[5];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;

  v81 = a9;
  v76 = a7;
  v77 = a8;
  v74 = a5;
  v75 = a6;
  v72 = a2;
  v73 = a4;
  v85 = a3;
  v71 = a1;
  v15 = a13;
  v78 = a12;
  v16 = a10;
  v69 = *(_QWORD *)(a10 - 8);
  v17 = __chkstk_darwin(a1);
  v68 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v67 = (char *)&v66 - v19;
  v21 = type metadata accessor for ActionMenuView(255, a11, a14, v20);
  *(_QWORD *)&v101 = a11;
  *((_QWORD *)&v101 + 1) = a11;
  *(_QWORD *)&v102 = a14;
  *((_QWORD *)&v102 + 1) = a14;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v101);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(255, v21, v24);
  v26 = type metadata accessor for Section(255, &type metadata for Text, v25, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v21);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v98 = WitnessTable;
  v99 = v28;
  v29 = v25;
  v30 = v78;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v95 = &protocol witness table for Text;
  v96 = v31;
  v97 = &protocol witness table for EmptyView;
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v26);
  *(_QWORD *)&v101 = a10;
  *((_QWORD *)&v101 + 1) = v26;
  v83 = v26;
  v84 = a15;
  *(_QWORD *)&v102 = v30;
  *((_QWORD *)&v102 + 1) = a13;
  v86 = v32;
  *(_QWORD *)&v103 = v32;
  *((_QWORD *)&v103 + 1) = a15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v101, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v70 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v34 = __chkstk_darwin(OpaqueTypeMetadata2);
  v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v38 = (char *)&v66 - v37;
  v39 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a10);
  v80 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v79 = (char *)&v66 - v40;
  v42 = type metadata accessor for ActionMenu(255, a11, a14, v41);
  v43 = type metadata accessor for Optional(0, v42);
  v44 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v100, v85, v43);
  if (*((_QWORD *)&v100[0] + 1))
  {
    v68 = (char *)&v66;
    v103 = v100[2];
    v104 = v100[3];
    v105 = v100[4];
    v101 = v100[0];
    v102 = v100[1];
    v45 = __chkstk_darwin(v44);
    v66 = &v66 - 14;
    v67 = v38;
    *(&v66 - 12) = (_QWORD *)a10;
    *(&v66 - 11) = (_QWORD *)a11;
    *(&v66 - 10) = v30;
    *(&v66 - 9) = (_QWORD *)a13;
    v46 = v30;
    v47 = v84;
    *(&v66 - 8) = (_QWORD *)a14;
    *(&v66 - 7) = v47;
    v69 = v39;
    *(&v66 - 6) = v82;
    *(&v66 - 5) = &v101;
    __chkstk_darwin(v45);
    *(&v66 - 8) = (_QWORD *)a10;
    *(&v66 - 7) = (_QWORD *)a11;
    *(&v66 - 6) = v46;
    *(&v66 - 5) = (_QWORD *)a13;
    v48 = swift_allocObject(&unk_1010EABA8, 32, 7);
    v49 = v77;
    *(_QWORD *)(v48 + 16) = v76;
    *(_QWORD *)(v48 + 24) = v49;
    sub_1009B2980(v85);
    swift_retain(v49);
    v50 = swift_checkMetadataState(0, v83);
    View.contextMenu<A, B>(menuItems:preview:previewAction:)(sub_1009B2844, v66, sub_1009B2948, &v66 - 10, sub_10004D5F4, v48, a10, v50, v46, a13, v86, v47);
    swift_release(v48);
    v89 = a10;
    v90 = v50;
    v91 = v46;
    v92 = a13;
    v93 = v86;
    v94 = v47;
    v30 = v46;
    v15 = a13;
    v16 = a10;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v52 = v70;
    v53 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    v54 = v67;
    v53(v67, v36, OpaqueTypeMetadata2);
    v55 = *(void (**)(char *, uint64_t))(v52 + 8);
    v55(v36, OpaqueTypeMetadata2);
    v53(v36, v54, OpaqueTypeMetadata2);
    v56 = v79;
    v57 = OpaqueTypeConformance2;
    v39 = v69;
    sub_100817130((uint64_t)v36, OpaqueTypeMetadata2, a10, v57, a13);
    sub_1000E411C(v85);
    v55(v36, OpaqueTypeMetadata2);
    v55(v54, OpaqueTypeMetadata2);
  }
  else
  {
    v58 = v69;
    v59 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v60 = v67;
    v59(v67, (char *)v82, a10);
    v61 = (uint64_t)v68;
    v59(v68, v60, a10);
    *(_QWORD *)&v101 = a10;
    *((_QWORD *)&v101 + 1) = v83;
    *(_QWORD *)&v102 = v30;
    *((_QWORD *)&v102 + 1) = a13;
    *(_QWORD *)&v103 = v86;
    *((_QWORD *)&v103 + 1) = v84;
    v62 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v56 = v79;
    sub_1008171F4(v61, OpaqueTypeMetadata2, a10, v62, a13);
    v63 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v63(v61, a10);
    v63((uint64_t)v60, a10);
  }
  v89 = v16;
  v90 = v83;
  v91 = v30;
  v92 = v15;
  v93 = v86;
  v94 = v84;
  v87 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  v88 = v15;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v39);
  v64 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v81, v56, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v56, v39);
}

uint64_t sub_1009B2660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v34 = a1;
  v35 = a6;
  v32 = a4;
  v33 = a5;
  v36 = a8;
  v30 = a3;
  v31 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v42[0] = a7;
  v42[1] = a7;
  v42[2] = a10;
  v42[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v42);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_1009B1F44(a2, v30, v32, v33, v35, a7, v31, a10);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v12);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v37 = &protocol witness table for Text;
  v38 = v26;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_1009B2844@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1009B2660(v1[8], v1[9], v1[10], v1[11], v1[12], v1[2], v1[3], a1, v1[5], v1[6]);
}

uint64_t sub_1009B2880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(void))__chkstk_darwin(v6);
  v11 = (char *)&v15 - v10;
  v9();
  v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_1009B2948@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1009B2880(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1009B295C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009B2980(uint64_t a1)
{
  sub_100495AC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

_QWORD *sub_1009B29C8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, __int128 *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *, __int128 *, uint64_t);
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[7];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  sub_1002A49E4((uint64_t)a1);
  sub_1009B2C30(a1, 1, 0, 0, a3, a4, (uint64_t)v39);
  v45 = v39[4];
  v46 = v39[5];
  v47 = v39[6];
  *(_QWORD *)&v48 = v40;
  v41 = v39[0];
  v42 = v39[1];
  v43 = v39[2];
  v44 = v39[3];
  *(_QWORD *)&v50 = a3;
  *((_QWORD *)&v50 + 1) = a3;
  *(_QWORD *)&v51 = a4;
  *((_QWORD *)&v51 + 1) = a4;
  v10 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)&v50);
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)(v11 + 16) = a2;
  v13 = type metadata accessor for ActionMenuView(0, a3, a4, v12);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v13);
  v15 = swift_getWitnessTable(&unk_100EDBA38, v10);
  View.environmentObject<A>(_:)(v11, v13, v10, WitnessTable, v15);
  swift_release(v11);
  sub_1009B6308(v39);
  v47 = v56;
  v48 = v57;
  v43 = v52;
  v44 = v53;
  v45 = v54;
  v46 = v55;
  v41 = v50;
  v42 = v51;
  v27 = v56;
  v28 = v57;
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v49 = v58;
  v29 = v58;
  v21 = v50;
  v22 = v51;
  v16 = type metadata accessor for Optional(255, v10);
  v17 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v16);
  v18 = type metadata accessor for ModifiedContent(0, v13, v17);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v19 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(&v30, &v21, v18);
  sub_1009B638C(&v41);
  v56 = v36;
  v57 = v37;
  v52 = v32;
  v53 = v33;
  v54 = v34;
  v55 = v35;
  v50 = v30;
  v51 = v31;
  v27 = v36;
  v28 = v37;
  v23 = v32;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v58 = v38;
  v29 = v38;
  v21 = v30;
  v22 = v31;
  v19(a5, &v21, v18);
  return sub_1009B638C(&v50);
}

__n128 sub_1009B2C30@<Q0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  __n128 result;
  uint64_t v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];

  v21 = a1[1];
  v22 = *a1;
  v20 = a1[2];
  v12 = *((_QWORD *)a1 + 6);
  v13 = *((_BYTE *)a1 + 56) & 1;
  v23[0] = a5;
  v23[1] = a5;
  v23[2] = a6;
  v23[3] = a6;
  v14 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v23);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA38, v14);
  v19 = (__n128)a1[4];
  v16 = EnvironmentObject.init()(v14, WitnessTable);
  *(_OWORD *)a7 = v22;
  *(_OWORD *)(a7 + 16) = v21;
  *(_OWORD *)(a7 + 32) = v20;
  *(_QWORD *)(a7 + 48) = v12;
  *(_BYTE *)(a7 + 56) = v13;
  result = v19;
  *(__n128 *)(a7 + 64) = v19;
  *(_BYTE *)(a7 + 80) = a2;
  *(_QWORD *)(a7 + 88) = a3;
  *(_QWORD *)(a7 + 96) = a4;
  *(_QWORD *)(a7 + 104) = v16;
  *(_QWORD *)(a7 + 112) = v18;
  return result;
}

uint64_t sub_1009B2D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73[16];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;

  v63 = a7;
  v66 = a6;
  v67 = a5;
  v65 = a4;
  v68 = a3;
  v62 = a2;
  v61 = a1;
  v72 = a9;
  v55 = a11;
  v54 = a10;
  v71 = type metadata accessor for MenuOrder(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a8 + 16);
  v13 = *(_QWORD *)(a8 + 24);
  v16 = type metadata accessor for ActionMenuView(255, v14, v13, v15);
  v17 = type metadata accessor for Section(255, &type metadata for Text, v16, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v16);
  v87 = &protocol witness table for Text;
  v88 = WitnessTable;
  v89 = &protocol witness table for EmptyView;
  v58 = v17;
  v57 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v83 = a10;
  v84 = v17;
  v85 = a11;
  v86 = v57;
  v19 = type metadata accessor for Menu(0, &v83);
  v60 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v56 = (char *)&v51 - v20;
  v21 = v14;
  v83 = v14;
  v84 = v14;
  v85 = v13;
  v86 = v13;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v83);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(0, v19, v24);
  v59 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (char *)&v51 - v26;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v19);
  v51 = v28;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v81 = v28;
  v82 = v29;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v83 = v25;
  v84 = v52;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v83, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 0);
  v53 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v31 = __chkstk_darwin(OpaqueTypeMetadata2);
  v33 = (char *)&v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v51 - v34;
  v36 = v54;
  v74 = v21;
  v75 = v54;
  v37 = v55;
  v76 = v13;
  v77 = v55;
  v78 = v61;
  v79 = v62;
  v80 = v64;
  v38 = v63;
  v39 = swift_retain(v63);
  v50 = v37;
  v40 = v56;
  Menu.init(onPresentationChanged:content:label:)(v66, v38, sub_1009B33A4, v73, v65, v67, v36, v58, v39, v50, v57);
  v41 = swift_allocObject(v22, 24, 7);
  *(_QWORD *)(v41 + 16) = v68;
  swift_bridgeObjectRetain();
  v42 = swift_getWitnessTable(&unk_100EDBA38, v22);
  View.environmentObject<A>(_:)(v41, v19, v22, v51, v42);
  v43 = swift_release(v41);
  v44 = (*(uint64_t (**)(char *, uint64_t, __n128))(v60 + 8))(v40, v19, v43);
  v45 = v69;
  static MenuOrder.fixed.getter(v44);
  View.menuOrder(_:)(v45, v25, v52);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v71);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v25);
  v46 = v53;
  v47 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v47(v35, v33, OpaqueTypeMetadata2);
  v48 = *(void (**)(char *, uint64_t))(v46 + 8);
  v48(v33, OpaqueTypeMetadata2);
  v47(v72, v35, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v48)(v35, OpaqueTypeMetadata2);
}

uint64_t sub_1009B31E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t WitnessTable;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  _QWORD v40[2];

  v28 = a3;
  v29 = a7;
  v27 = a5;
  v30 = a8;
  v12 = type metadata accessor for ActionMenuView(255, a4, a6, a4);
  v13 = type metadata accessor for Section(0, &type metadata for Text, v12, &type metadata for EmptyView);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  if (a2)
    v20 = a1;
  else
    v20 = 0;
  v21 = 0xE000000000000000;
  if (a2)
    v21 = a2;
  v40[0] = v20;
  v40[1] = v21;
  v32 = a4;
  v33 = v27;
  v34 = a6;
  v35 = v29;
  v36 = v28;
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v12);
  v23 = sub_10098A8C0();
  Section<>.init<A>(_:content:)(v40, sub_1009B62E8, v31, v12, &type metadata for String, WitnessTable, v23);
  v37 = &protocol witness table for Text;
  v38 = WitnessTable;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v13);
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v19, v17, v13);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  v24(v30, v19, v13);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v13);
}

uint64_t sub_1009B33A4@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1009B31E0(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

double sub_1009B33B8@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, __int128 *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *, __int128 *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  char v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[7];
  uint64_t v38;

  sub_1002A49E4((uint64_t)a1);
  sub_1009B2C30(a1, 1, 0, 0, a2, a3, (uint64_t)v37);
  v24 = v37[4];
  v25 = v37[5];
  *(_OWORD *)v26 = v37[6];
  *(_QWORD *)&v26[16] = v38;
  v20 = v37[0];
  v21 = v37[1];
  v22 = v37[2];
  v23 = v37[3];
  v8 = type metadata accessor for ActionMenuView(0, a2, a3, v7);
  swift_getWitnessTable(&unk_100EDBA70, v8);
  v9 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(&v27, &v20, v8);
  sub_1009B6308(v37);
  v10 = *((_QWORD *)&v27 + 1);
  v11 = *((_QWORD *)&v28 + 1);
  v12 = *((_QWORD *)&v29 + 1);
  v13 = v30;
  v14 = *((_QWORD *)&v32 + 1);
  v15 = v34;
  v16 = v35;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  *(_QWORD *)&v23 = v30;
  BYTE8(v23) = v31;
  v24 = v32;
  LOBYTE(v25) = v33;
  *((_QWORD *)&v25 + 1) = v34;
  *(_QWORD *)v26 = v35;
  v18 = v36;
  *(_OWORD *)&v26[8] = v36;
  v9(a4, &v20, v8);
  swift_release(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);

  sub_10004BA30(v15, v16);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1009B3540@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t result;
  _OWORD v6[2];

  v3 = *(_OWORD *)(a1 + 96);
  v6[0] = *(_OWORD *)(a1 + 80);
  v6[1] = v3;
  v4 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v6);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a2 = result;
  return result;
}

uint64_t sub_1009B3590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(__n128);
  void (*v50)(__n128);
  void (*v51)(__n128);
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t KeyPath;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  void (*v105)(uint64_t, uint64_t, __n128);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t WitnessTable;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  void (*v143)(__n128);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  _QWORD v155[2];
  uint64_t v156[13];
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;

  v3 = v2;
  v149 = a2;
  v5 = sub_100044B54(&qword_1011D3A70);
  v6 = *(_QWORD *)(a1 + 24);
  v150 = *(_QWORD *)(a1 + 16);
  v145 = v6;
  type metadata accessor for ActionMenu.Element(255, v150, v6, v7);
  v8 = type metadata accessor for Array(255);
  v10 = type metadata accessor for ActionMenuView.ItemView(255, v150, v6, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v10, a1);
  *(_QWORD *)&v157 = v8;
  *((_QWORD *)&v157 + 1) = &type metadata for String;
  *(_QWORD *)&v158 = v11;
  *((_QWORD *)&v158 + 1) = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v132 = *((_QWORD *)&v158 + 1);
  *(_QWORD *)&v159 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v157);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_1009B5F28();
  v156[11] = swift_getWitnessTable(&unk_100EDBB28, v10);
  v156[12] = swift_getWitnessTable(&unk_100EDBA70, a1);
  v133 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  v156[10] = WitnessTable;
  v131 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v156[8] = v131;
  v156[9] = (uint64_t)&protocol witness table for _AppearanceActionModifier;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v127 = v5;
  *(_QWORD *)&v157 = v5;
  *((_QWORD *)&v157 + 1) = v13;
  v126 = v14;
  *(_QWORD *)&v158 = v14;
  *((_QWORD *)&v158 + 1) = v15;
  v136 = v15;
  v16 = type metadata accessor for Menu(0, &v157);
  v120 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v123 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v122 = (char *)&v114 - v19;
  v20 = sub_100044B54(&qword_1011D3A90);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v20, 0, 0);
  v22 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v125 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v124 = (char *)&v114 - v23;
  v119 = v20;
  __chkstk_darwin(v24);
  v118 = (uint64_t)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v121 = (char *)&v114 - v27;
  v144 = v16;
  v28 = type metadata accessor for _ConditionalContent(0, v22, v16);
  v139 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v138 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v137 = (char *)&v114 - v31;
  v135 = v12;
  v129 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v32);
  v128 = (char *)&v114 - v33;
  v140 = v13;
  v142 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v34);
  v117 = (char *)&v114 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v141 = (char *)&v114 - v37;
  __chkstk_darwin(v38);
  v146 = (char *)&v114 - v39;
  v148 = type metadata accessor for _ConditionalContent(0, &type metadata for EmptyView, v28);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v41 = (char *)&v114 - v40;
  v42 = *(_OWORD *)(v3 + 48);
  v159 = *(_OWORD *)(v3 + 32);
  v160 = v42;
  v161 = *(_OWORD *)(v3 + 64);
  v43 = *(_OWORD *)(v3 + 16);
  v157 = *(_OWORD *)v3;
  v158 = v43;
  sub_1009B5FAC(a1);
  v44 = v145;
  v46 = type metadata accessor for ActionMenu(0, v150, v145, v45);
  v47 = swift_bridgeObjectRetain();
  v48 = ActionMenu.elements(excluding:)(v47, v46);
  v143 = v49;
  v51 = v50;
  swift_bridgeObjectRelease();
  v156[0] = v48;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v134 = v8;
  v53 = Collection.isEmpty.getter(v8, v52);
  if ((v53 & 1) != 0)
  {
    v54 = swift_bridgeObjectRelease();
    v143(v54);
    v55 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
    v56 = v144;
    v57 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v144);
    v151 = v55;
    v152 = v57;
    v58 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28);
    sub_100817130(v58, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v58);
    swift_release();
    v59 = v41;
  }
  else
  {
    v116 = v41;
    v115 = v28;
    v60 = v144;
    v156[0] = v48;
    __chkstk_darwin(v53);
    v61 = v150;
    v112 = v150;
    v113 = v44;
    KeyPath = swift_getKeyPath(&unk_100EDBAC0);
    v63 = swift_allocObject(&unk_1010EACE0, 152, 7);
    *(_QWORD *)(v63 + 16) = v61;
    *(_QWORD *)(v63 + 24) = v44;
    v64 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v63 + 96) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v63 + 112) = v64;
    *(_OWORD *)(v63 + 128) = *(_OWORD *)(v3 + 96);
    *(_QWORD *)(v63 + 144) = *(_QWORD *)(v3 + 112);
    v65 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v63 + 32) = *(_OWORD *)v3;
    *(_OWORD *)(v63 + 48) = v65;
    v66 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v63 + 64) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v63 + 80) = v66;
    sub_1009B60DC(v3);
    v67 = v128;
    ForEach<>.init(_:id:content:)(v156, KeyPath, sub_1009B60D0, v63, v134, v133, v132, &protocol witness table for String, WitnessTable);
    v68 = swift_allocObject(&unk_1010EAD08, 32, 7);
    *(_QWORD *)(v68 + 16) = v143;
    *(_QWORD *)(v68 + 24) = v51;
    v143 = v51;
    swift_retain();
    v69 = v146;
    v70 = v135;
    View.onAppear(perform:)(v146, sub_10013C910, v68, v135, v131);
    v71 = swift_release();
    v72 = (*(uint64_t (**)(char *, uint64_t, __n128))(v129 + 8))(v67, v70, v71);
    if ((BYTE8(v160) & 1) != 0)
    {
      __chkstk_darwin(v72);
      *(&v114 - 4) = v61;
      *(&v114 - 3) = v44;
      __chkstk_darwin(v73);
      *(&v114 - 4) = v61;
      *(&v114 - 3) = v44;
      v112 = v3;
      v74 = (uint64_t)v123;
      v75 = v140;
      Menu.init(content:label:)(sub_1009B6164, v76, sub_1009B6170, &v114 - 6, v127, v140, v126, v136);
      v56 = v60;
      v77 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v60);
      v78 = v120;
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
      v80 = v122;
      v79(v122, v74, v60);
      v81 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v81(v74, v60);
      v79((char *)v74, (uint64_t)v80, v60);
      v82 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
      v83 = v137;
      sub_1008171F4(v74, v22, v56, v82, v77);
      v81(v74, v56);
      v81((uint64_t)v80, v56);
      v59 = v116;
      v84 = v142;
    }
    else
    {
      v85 = *(uint64_t (**)(char *, char *, uint64_t))(v142 + 16);
      v75 = v140;
      v86 = v85(v141, v69, v140);
      v56 = v60;
      v83 = v137;
      if ((*(_BYTE *)(v3 + 80) & 1) != 0)
      {
        v88 = (uint64_t)v121;
        Divider.init()(v86);
        v89 = type metadata accessor for Divider(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
      }
      else
      {
        v87 = type metadata accessor for Divider(0);
        v88 = (uint64_t)v121;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v121, 1, 1, v87);
      }
      v59 = v116;
      v90 = (uint64_t)v117;
      v85(v117, v141, v75);
      v156[0] = v90;
      v91 = v118;
      sub_1009B617C(v88, v118);
      v156[1] = v91;
      v155[0] = v75;
      v155[1] = v119;
      v153 = v136;
      v154 = sub_1009B61C4();
      v92 = (uint64_t)v124;
      sub_1004D49B8(v156, 2uLL, (uint64_t)v155);
      sub_1009B6270(v91);
      v93 = v142;
      v94 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
      v94(v90, v75);
      v95 = v88;
      v96 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
      v97 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v56);
      sub_100817130(v92, v22, v56, v96, v97);
      v98 = v92;
      v84 = v93;
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v98, v22);
      sub_1009B6270(v95);
      v94((uint64_t)v141, v75);
    }
    v99 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
    v100 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v56);
    v156[6] = v99;
    v156[7] = v100;
    v28 = v115;
    v101 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v115);
    v102 = v139;
    v103 = (uint64_t)v138;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v138, v83, v28);
    sub_1008171F4(v103, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v101);
    v104 = swift_release();
    v105 = *(void (**)(uint64_t, uint64_t, __n128))(v102 + 8);
    v105(v103, v28, v104);
    ((void (*)(char *, uint64_t))v105)(v83, v28);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v146, v75);
  }
  v106 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
  v107 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v56);
  v156[4] = v106;
  v156[5] = v107;
  v108 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28);
  v156[2] = (uint64_t)&protocol witness table for EmptyView;
  v156[3] = v108;
  v109 = v148;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v148);
  v110 = v147;
  (*(void (**)(uint64_t, char *, uint64_t))(v147 + 16))(v149, v59, v109);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v59, v109);
}

uint64_t sub_1009B4190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(__int128 *, __int128 *, uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  uint64_t WitnessTable;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  void *v79;
  char v80;
  __int128 v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[2];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  void *v96;
  char v97;
  __int128 v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  _OWORD v103[7];
  uint64_t v104;
  __int128 v105[6];

  v65 = a1;
  v66 = a2;
  v71 = a5;
  v7 = type metadata accessor for ActionMenuView.ItemView(0, a3, a4, a4);
  v62 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v64 = (char *)&v57 - v11;
  v63 = type metadata accessor for ActionMenu.Item(0, a3, a4, v12);
  *(_QWORD *)&v67 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v57 - v16;
  v19 = type metadata accessor for ActionMenu.Element(0, a3, a4, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (__int128 *)((char *)&v57 - v21);
  v24 = type metadata accessor for ActionMenuView(255, a3, a4, v23);
  v68 = v7;
  v72 = v24;
  v25 = type metadata accessor for _ConditionalContent(0, v7, v24);
  v69 = *(_QWORD *)(v25 - 8);
  v70 = v25;
  v26 = __chkstk_darwin(v25);
  v73 = (char *)&v57 - v27;
  (*(void (**)(__int128 *, uint64_t, uint64_t, __n128))(v20 + 16))(v22, v65, v19, v26);
  if (swift_getEnumCaseMultiPayload(v22, v19) == 1)
  {
    v28 = v22[3];
    v105[2] = v22[2];
    v105[3] = v28;
    v105[4] = v22[4];
    v29 = v22[1];
    v105[0] = *v22;
    v105[1] = v29;
    v30 = *(_QWORD *)(v66 + 88);
    v31 = *(_QWORD *)(v66 + 96);
    sub_1002A49E4((uint64_t)v105);
    sub_100048AAC(v30, v31);
    sub_1009B2C30(v105, 1, v30, v31, a3, a4, (uint64_t)v103);
    v90 = v103[4];
    v91 = v103[5];
    v92[0] = v103[6];
    *(_QWORD *)&v92[1] = v104;
    v86 = v103[0];
    v87 = v103[1];
    v88 = v103[2];
    v89 = v103[3];
    v32 = v72;
    WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v72);
    v33 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    v33(&v93, &v86, v32);
    sub_1009B6308(v103);
    v63 = *((_QWORD *)&v94 + 1);
    v64 = (char *)*((_QWORD *)&v93 + 1);
    v62 = *((_QWORD *)&v95 + 1);
    v58 = v96;
    v60 = *((_QWORD *)&v98 + 1);
    v65 = v101;
    v66 = v100;
    v76 = v93;
    v77 = v94;
    v78 = v95;
    v79 = v96;
    v80 = v97;
    v81 = v98;
    v82 = v99;
    v83 = v100;
    v84 = v101;
    v67 = v102;
    v85 = v102;
    v33(&v86, &v76, v32);
    v34 = (void *)v89;
    v36 = *((_QWORD *)&v91 + 1);
    v35 = *(_QWORD *)&v92[0];
    v76 = v86;
    v77 = v87;
    v78 = v88;
    v79 = (void *)v89;
    v80 = BYTE8(v89);
    v81 = v90;
    v82 = v91;
    v83 = *((_QWORD *)&v91 + 1);
    v84 = *(_QWORD *)&v92[0];
    v59 = *(_OWORD *)((char *)v92 + 8);
    v85 = *(_OWORD *)((char *)v92 + 8);
    v37 = v68;
    v38 = swift_getWitnessTable(&unk_100EDBB28, v68);
    sub_1008171F4((uint64_t)&v76, v37, v32, v38, WitnessTable);
    sub_1002A4984(v105);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_10004BA30(v36, v35);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    sub_10004BA30(v66, v65);
    swift_release();
  }
  else
  {
    v39 = v67;
    v40 = v63;
    (*(void (**)(char *, __int128 *, uint64_t))(v67 + 32))(v17, v22, v63);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v14, v17, v40);
    v41 = *(_QWORD *)(v66 + 88);
    v42 = *(_QWORD *)(v66 + 96);
    sub_1009B4740((uint64_t)v14, v41, v42, a3, a4, (uint64_t)v9);
    v43 = v68;
    v66 = swift_getWitnessTable(&unk_100EDBB28, v68);
    v44 = v62;
    v45 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    v46 = v64;
    v45(v64, v9, v43);
    sub_100048AAC(v41, v42);
    v47 = *(void (**)(char *, uint64_t))(v44 + 8);
    v47(v9, v43);
    v45(v9, v46, v43);
    v48 = v72;
    v49 = swift_getWitnessTable(&unk_100EDBA70, v72);
    sub_100817130((uint64_t)v9, v43, v48, v66, v49);
    v50 = v9;
    v37 = v43;
    v47(v50, v43);
    v47(v46, v43);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v17, v40);
  }
  v51 = swift_getWitnessTable(&unk_100EDBB28, v37);
  v52 = swift_getWitnessTable(&unk_100EDBA70, v72);
  v74 = v51;
  v75 = v52;
  v53 = v70;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v70);
  v54 = v69;
  v55 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v71, v73, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v53);
}

uint64_t sub_1009B4740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v12 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for ActionMenuView.ItemView(0, a4, a5, v13);
  v15 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t sub_1009B47C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t WitnessTable;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD v24[5];
  _QWORD v25[5];

  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v9 = type metadata accessor for Array(255);
  v11 = type metadata accessor for ActionMenuView.ItemView(255, a2, a3, v10);
  v13 = type metadata accessor for ActionMenuView(255, a2, a3, v12);
  v14 = type metadata accessor for _ConditionalContent(255, v11, v13);
  v25[0] = v9;
  v25[1] = &type metadata for String;
  v25[2] = v14;
  v25[3] = swift_getWitnessTable(&protocol conformance descriptor for [A], v9);
  v25[4] = &protocol witness table for String;
  v15 = type metadata accessor for ForEach(255, v25);
  v16 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _AppearanceActionModifier);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v24 - v18;
  WitnessTable = swift_getWitnessTable(&unk_100EDBB28, v11);
  v21 = swift_getWitnessTable(&unk_100EDBA70, v13);
  v24[3] = WitnessTable;
  v24[4] = v21;
  v24[2] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14);
  v24[0] = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v15);
  v24[1] = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v22(v19, a1, v16);
  v22(a5, (uint64_t)v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_1009B498C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];

  v8 = sub_100007E8C(&qword_1011D3A88);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(qword_1011D3AA8);
  __chkstk_darwin(v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[6])
  {
    __chkstk_darwin(v13);
    v28[1] = a4;
    v28[-4] = a2;
    v28[-3] = a3;
    v28[-2] = a1;
    __chkstk_darwin(v16);
    v28[-2] = v17;
    v18 = v17;
    Label.init(title:icon:)(sub_1009B62B0, &v28[-6], sub_1009B62BC, &v28[-4], &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image, v19);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
    swift_storeEnumTagMultiPayload(v15, v12, 0);
    v20 = sub_100049F28(&qword_1011D3A80, &qword_1011D3A88, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v20, &protocol witness table for Text);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v22 = a1[5];
    v29[0] = a1[4];
    v29[1] = v22;
    v23 = sub_10098A8C0();
    swift_bridgeObjectRetain();
    *(_QWORD *)v15 = Text.init<A>(_:)(v29, &type metadata for String, v23);
    *((_QWORD *)v15 + 1) = v24;
    v15[16] = v25 & 1;
    *((_QWORD *)v15 + 3) = v26;
    swift_storeEnumTagMultiPayload(v15, v12, 1);
    v27 = sub_100049F28(&qword_1011D3A80, &qword_1011D3A88, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    return _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v27, &protocol witness table for Text);
  }
}

uint64_t sub_1009B4BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 40);
  v9[0] = *(_QWORD *)(a1 + 32);
  v9[1] = v3;
  v4 = sub_10098A8C0();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1009B4C64@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = sub_100007E8C(&qword_1011D3B30);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100007E8C(&qword_1011D3B38);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  __chkstk_darwin(v9);
  v35 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v34 = (char *)&v32 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v16 = *(int *)(type metadata accessor for ActionMenu.Item(0, v13, v14, v15) + 36);
  v33 = v2;
  (*(void (**)(_QWORD *__return_ptr))(v2 + v16))(v39);
  v17 = v40;
  v18 = v41;
  sub_100007E68(v39, v40);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18) & 1) != 0)
  {
    static ButtonRole.destructive.getter(v8);
    v20 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  }
  else
  {
    v19 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v33, a1);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(&unk_1010EAD88, v22 + v5, v21 | 7);
  *(_QWORD *)(v23 + 16) = v13;
  *(_QWORD *)(v23 + 24) = v14;
  v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __chkstk_darwin(v24);
  *(&v32 - 2) = (uint64_t)v39;
  v25 = sub_100007E8C(&qword_1011D3B40);
  v26 = sub_100049F28(&qword_1011D3B48, &qword_1011D3B40, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v27 = v35;
  Button.init(role:action:label:)(v8, sub_1009B7104, v23, sub_1009B7154, &v32 - 4, v25, v26);
  v28 = v37;
  v29 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v30 = v34;
  v29(v34, v27, v37);
  v29(v38, v30, v28);
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v39);
}

uint64_t ActionMenuItemStyle.buttonRole.getter@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    static ButtonRole.destructive.getter(a2);
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 0;
  }
  else
  {
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 1;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t sub_1009B4F84(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 112);
}

uint64_t sub_1009B4FC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, v5, v6, a4);
  v18 = v5;
  v19 = v5;
  v20 = v6;
  v21 = v6;
  v9 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v18);
  v10 = type metadata accessor for Optional(255, v9);
  v11 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v10);
  v12 = type metadata accessor for ModifiedContent(255, v8, v11);
  v13 = type metadata accessor for Section(255, &type metadata for Text, v12, &type metadata for EmptyView);
  swift_getWitnessTable(&unk_100EDBA70, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v13);
  v18 = v4;
  v19 = v13;
  v20 = v7;
  v21 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v16 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v18 = v4;
  v19 = v13;
  v20 = v7;
  v21 = WitnessTable;
  swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v16);
}

uint64_t sub_1009B514C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = type metadata accessor for ActionMenuView(255, v5, v8, a4);
  v23 = v5;
  v24 = v5;
  v25 = v8;
  v26 = v8;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v23);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  v15 = type metadata accessor for Section(255, &type metadata for Text, v14, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v10);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v32 = WitnessTable;
  v33 = v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v29 = &protocol witness table for Text;
  v30 = v18;
  v31 = &protocol witness table for EmptyView;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v15);
  v23 = v4;
  v24 = v15;
  v25 = v7;
  v26 = v6;
  v27 = v19;
  v28 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v21 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v23 = v4;
  v24 = v15;
  v25 = v7;
  v26 = v6;
  v27 = v19;
  v28 = v9;
  swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
}

uint64_t sub_1009B52E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t WitnessTable;
  void *v23;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, *a1, v6, a4);
  v9 = type metadata accessor for Section(255, &type metadata for Text, v8, &type metadata for EmptyView);
  v21 = &protocol witness table for Text;
  WitnessTable = swift_getWitnessTable(&unk_100EDBA70, v8);
  v23 = &protocol witness table for EmptyView;
  v17 = v5;
  v18 = v9;
  v19 = v7;
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
  v10 = type metadata accessor for Menu(255, &v17);
  v17 = v4;
  v18 = v4;
  v19 = v6;
  v20 = v6;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v17);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v17 = v14;
  v18 = v15;
  return swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
}

uint64_t sub_1009B543C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_release(*(_QWORD *)(a1 + 72));
  if (*(_QWORD *)(a1 + 88))
    swift_release(*(_QWORD *)(a1 + 96));
  return swift_release(*(_QWORD *)(a1 + 104));
}

uint64_t sub_1009B5494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = (_OWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v11 = v7;
  swift_retain(v8);
  if (v10)
  {
    v12 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v9;
  }
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain(v13);
  return a1;
}

uint64_t sub_1009B555C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  if (!v15)
  {
    if (v16)
    {
      v19 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v16;
      *(_QWORD *)(a1 + 96) = v19;
      swift_retain(v19);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v16)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  swift_retain(v17);
  swift_release(v18);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v21;
  swift_retain(v21);
  swift_release(v20);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for ApplicationCapabilities(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_1009B56C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!v11)
  {
    if (v10)
    {
      v14 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v10;
      *(_QWORD *)(a1 + 96) = v14;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  swift_release(v13);
LABEL_8:
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v15);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t sub_1009B57B8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1009B5800(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1009B585C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FB3568, 1);
}

double sub_1009B5890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for ActionMenuView.ItemView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1010EADB0, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  sub_100B237E0((uint64_t)v14, (uint64_t)&unk_1011D3B88, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1009B59F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v9;
  v6[7] = v10;
  return swift_task_switch(sub_1009B5A64, v9, v10);
}

uint64_t sub_1009B5A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_1009B5AD0;
  return v9();
}

uint64_t sub_1009B5AD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009B5B98;
  else
    v4 = sub_1009B5B30;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1009B5B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v5 = *(void (**)(void))(v3 + *(int *)(type metadata accessor for ActionMenuView.ItemView(0, v2, v1, v4) + 36));
  if (v5)
    v5();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009B5B98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009B5BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __n128 v5;
  _QWORD v7[4];
  _BYTE v8[16];
  uint64_t v9;

  v9 = a1;
  v7[2] = a1;
  v1 = sub_100007E8C(&qword_1011D3B50);
  v2 = sub_100007E8C(&qword_1011D3B58);
  v3 = sub_100049F28(&qword_1011D3B60, &qword_1011D3B50, (uint64_t)&protocol conformance descriptor for LabelGroup<A>);
  v4 = sub_1009B716C();
  return Label.init(title:icon:)(sub_1009B715C, v8, sub_1009B7164, v7, v1, v2, v3, v4, v5);
}

uint64_t sub_1009B5C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v4[2] = a1;
  v1 = sub_100007E8C(&qword_1011D3B70);
  v2 = sub_100049F28(&qword_1011D3B78, &qword_1011D3B70, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return LabelGroup.init(content:)(sub_1009B71C8, v4, v1, v2);
}

double sub_1009B5CEC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  unint64_t v29;

  v4 = a1[3];
  v5 = a1[4];
  sub_100007E68(a1, v4);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v29 = v6;
  v7 = sub_10098A8C0();
  v8 = Text.init<A>(_:)(&v28, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = a1[3];
  v15 = a1[4];
  sub_100007E68(a1, v16);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
  if (v18)
    v19 = v17;
  else
    v19 = 0;
  v20 = 0xE000000000000000;
  if (v18)
    v20 = v18;
  v28 = v19;
  v29 = v20;
  v21 = Text.init<A>(_:)(&v28, &type metadata for String, v7);
  v23 = v22;
  LOBYTE(v28) = v14;
  v25 = v24 & 1;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v24 & 1;
  *(_QWORD *)(a2 + 56) = v26;
  sub_100055BBC(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_100055BBC(v21, v23, v25);
  swift_bridgeObjectRetain();
  sub_100055BAC(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_100055BAC(v8, v10, v28);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1009B5E5C(_QWORD *a1@<X0>, uint64_t (**a2)(__n128)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  v5 = (uint64_t (*)(__n128))(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v5)
  {
    v6 = swift_release();
    v5 = (uint64_t (*)(__n128))v5(v6);
    swift_release();
  }
  *a2 = v5;
}

uint64_t sub_1009B5ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009B3590(a1, a2);
}

uint64_t type metadata accessor for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView.ItemView);
}

unint64_t sub_1009B5F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3A78;
  if (!qword_1011D3A78)
  {
    v1 = sub_100044B54(&qword_1011D3A70);
    sub_100049F28(&qword_1011D3A80, &qword_1011D3A88, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D3A78);
  }
  return result;
}

uint64_t sub_1009B5FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t result;
  _QWORD v8[4];

  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(a1 + 24);
  v8[0] = *(_QWORD *)(a1 + 16);
  v8[1] = v8[0];
  v8[2] = v4;
  v8[3] = v4;
  v5 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v8);
  WitnessTable = swift_getWitnessTable(&unk_100EDBA38, v5);
  if (v3)
    return v3;
  result = EnvironmentObject.error()(0, v2, v5, WitnessTable);
  __break(1u);
  return result;
}

uint64_t sub_1009B6024@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = type metadata accessor for ActionMenu.Element(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = ActionMenu.Element.id.getter(v5, v6, v7, v8);
  *a4 = result;
  a4[1] = v10;
  return result;
}

uint64_t sub_1009B605C()
{
  return 16;
}

__n128 sub_1009B6068(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1009B6074()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 104));
  if (*(_QWORD *)(v0 + 120))
    swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1009B60D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1009B4190(a1, v2 + 32, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1009B60DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(id *)(a1 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100048AAC(v2, v3);
  swift_retain();
  return a1;
}

uint64_t sub_1009B6164@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_1009B47C4(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_1009B6170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1009B498C(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1009B617C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D3A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1009B61C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3A98;
  if (!qword_1011D3A98)
  {
    v1 = sub_100044B54(&qword_1011D3A90);
    sub_1009B6228();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011D3A98);
  }
  return result;
}

unint64_t sub_1009B6228()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3AA0;
  if (!qword_1011D3AA0)
  {
    v1 = type metadata accessor for Divider(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Divider, v1);
    atomic_store(result, (unint64_t *)&qword_1011D3AA0);
  }
  return result;
}

uint64_t sub_1009B6270(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011D3A90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009B62B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1009B4BFC(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1009B62BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Image.init(uiImage:)(*(id *)(v1 + 16));
  *a1 = result;
  return result;
}

double sub_1009B62E8@<D0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_1009B33B8(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

_QWORD *sub_1009B62F8@<X0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_1009B29C8(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

_QWORD *sub_1009B6308(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_10004BA30(v6, v7);
  swift_release(v8);
  return a1;
}

_QWORD *sub_1009B638C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  v9 = a1[15];
  v10 = a1[16];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_10004BA30(v6, v7);
  swift_release(v9);
  swift_release(v8);
  swift_release(v10);
  return a1;
}

uint64_t sub_1009B642C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = &unk_100EDBB00;
    swift_initStructMetadata(a1, 0, 2, v7, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_1009B64A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    v11 = v7 + 16;
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v13 = (char *)a2 + 7;
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v12 = *v14;
    v12[1] = v15;
    v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = ((unint64_t)v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (unint64_t *)((unint64_t)&v13[v11] & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    swift_retain(v15);
    swift_retain(v18);
    swift_retain(v21);
    if (v24 < 0xFFFFFFFF)
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      return v4;
    }
    v10 = v23[1];
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v10;
  }
  swift_retain(v10);
  return v4;
}

uint64_t sub_1009B65EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD *v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + 7;
  v5 = (v4 + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v6 + 8));
  result = swift_release(*(_QWORD *)(((v6 + 23) & 0xFFFFFFFFFFFFF8) + 8));
  v8 = (_QWORD *)((a1 + (((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL)
    return swift_release(v8[1]);
  return result;
}

uint64_t sub_1009B669C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v17 = (a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (unint64_t *)((a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v18;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  if (v19 < 0xFFFFFFFF)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  else
  {
    v20 = v18[1];
    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    swift_retain(v20);
  }
  return a1;
}

uint64_t sub_1009B679C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v20 = (_QWORD *)((a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)((a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      swift_retain(v25);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (v22 < 0xFFFFFFFF)
  {
    swift_release(v20[1]);
    goto LABEL_7;
  }
  v23 = v21[1];
  v24 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

uint64_t sub_1009B68F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v12 = (a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (uint64_t *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if ((unint64_t)*v13 < 0xFFFFFFFF)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v15 = v13[1];
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
  }
  return a1;
}

uint64_t sub_1009B69C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *v8;
  swift_release(v9);
  v10 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = *(_QWORD *)(v10 + 8);
  *(_OWORD *)v10 = *v11;
  swift_release(v12);
  v13 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  v15 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = (_QWORD *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (unint64_t *)((a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  if (*v16 < 0xFFFFFFFFuLL)
  {
    if (v18 >= 0xFFFFFFFF)
    {
      v21 = v17[1];
      *v16 = v18;
      v16[1] = v21;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  if (v18 < 0xFFFFFFFF)
  {
    swift_release(v16[1]);
    goto LABEL_7;
  }
  v19 = v17[1];
  v20 = v16[1];
  *v16 = v18;
  v16[1] = v19;
  swift_release(v20);
  return a1;
}

uint64_t sub_1009B6AF8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1009B6B8C + 4 * byte_100EDB9A8[v10]))();
  }
}

void sub_1009B6C10(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1009B6D1C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1009B6D94);
}

void sub_1009B6D24(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1009B6D2CLL);
  JUMPOUT(0x1009B6D94);
}

void sub_1009B6D6C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1009B6D94);
}

void sub_1009B6D74()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1009B6D94);
}

uint64_t sub_1009B6D7C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1009B6D94);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1009B6D90);
    JUMPOUT(0x1009B6D88);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1009B6DAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t WitnessTable;
  void *v28;

  v4 = *a1;
  v5 = a1[1];
  type metadata accessor for ActionMenu.Element(255, *a1, v5, a4);
  v6 = type metadata accessor for Array(255);
  v8 = type metadata accessor for ActionMenuView.ItemView(255, v4, v5, v7);
  v10 = type metadata accessor for ActionMenuView(255, v4, v5, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v8, v10);
  v24 = v6;
  v25 = &type metadata for String;
  v26 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v28 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v24);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_100044B54(&qword_1011D3A90);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v14, 0, 0);
  v16 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = sub_100044B54(&qword_1011D3A70);
  v18 = sub_1009B5F28();
  swift_getWitnessTable(&unk_100EDBB28, v8);
  swift_getWitnessTable(&unk_100EDBA70, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v24 = v17;
  v25 = (_QWORD *)v13;
  v26 = v18;
  WitnessTable = v19;
  v20 = type metadata accessor for Menu(255, &v24);
  v21 = type metadata accessor for _ConditionalContent(255, v16, v20);
  v22 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v21);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v16);
  swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v20);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v22);
}

uint64_t sub_1009B6FF4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FB359C, 1);
}

uint64_t sub_1009B7028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  type metadata accessor for ActionMenu.Item(0, v5, v6, v11);
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v4 + v9 + *(int *)(v7 + 36)))
    swift_release();
  return swift_deallocObject(v4, v9 + v10);
}

double sub_1009B7104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4) - 8) + 80);
  return sub_1009B5890(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_1009B7154()
{
  uint64_t v0;

  return sub_1009B5BCC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1009B715C()
{
  uint64_t v0;

  return sub_1009B5C74(*(_QWORD *)(v0 + 16));
}

void sub_1009B7164(uint64_t (**a1)(__n128)@<X8>)
{
  uint64_t v1;

  sub_1009B5E5C(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_1009B716C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D3B68;
  if (!qword_1011D3B68)
  {
    v1 = sub_100044B54(&qword_1011D3B58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011D3B68);
  }
  return result;
}

double sub_1009B71C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1009B5CEC(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_1009B71D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;

  v5 = *((_QWORD *)v4 + 4);
  v6 = *((_QWORD *)v4 + 5);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v4[v9], v5, v11);
  type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)&v4[v9 + *(int *)(v7 + 36)])
    swift_release();
  return swift_deallocObject(v4, v9 + v10);
}

uint64_t sub_1009B72B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D3B84);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10005AEE4;
  return sub_1009B59F4(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_1009B7354()
{
  return sub_100049F28(&qword_1011D3B90, &qword_1011D3B38, (uint64_t)&protocol conformance descriptor for Button<A>);
}

UIMenu_optional __swiftcall ActionMenu.uiMenu(excluding:)(Swift::OpaquePointer excluding)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(__n128);
  void (*v8)(__n128);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  UIMenuElementSize preferredElementSize;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _BOOL8 v30;
  id v31;
  Swift::String v32;
  UIMenu v33;
  Swift::Bool v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *isa;
  Swift::OpaquePointer v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  void *rawValue;
  UIMenuElementSize v43;
  UIMenu_optional result;
  UIImage_optional v45;

  v3 = v2;
  v4 = v1;
  v6 = ActionMenu.elements(excluding:)((uint64_t)excluding._rawValue, v1);
  v8 = v7;
  v10 = v9;
  v43 = v6;
  v11 = *(_QWORD *)(v4 + 24);
  v40 = *(_QWORD *)(v4 + 16);
  v41 = v11;
  rawValue = excluding._rawValue;
  type metadata accessor for ActionMenu.Element(255, v40, v11, v12);
  v13 = type metadata accessor for Array(0);
  v14 = (char *)sub_100007E8C(&qword_1011D3B98);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
  v17 = sub_10053A818((void (*)(char *, char *))sub_1009B75E4, (uint64_t)v39, v13, v14, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v16);
  swift_bridgeObjectRelease(v6);
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v43 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v19 = *(_QWORD *)(v17 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v19; ++i)
    {
      v22 = *(void **)(v17 + 8 * i + 32);
      if (v22)
      {
        v23 = v22;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v25 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized Array._endMutation()(v21);
      }
    }
    swift_bridgeObjectRelease(v17);
    preferredElementSize = v43;
  }
  v26 = swift_bridgeObjectRelease(v17);
  v8(v26);
  if ((unint64_t)preferredElementSize >> 62)
  {
    if (preferredElementSize < UIMenuElementSizeSmall)
      v35 = preferredElementSize;
    else
      v35 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(preferredElementSize);
    if (v36)
      goto LABEL_11;
LABEL_16:
    swift_release(v10);
    swift_bridgeObjectRelease(preferredElementSize);
    v33.super.super.isa = 0;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_11:
  sub_10004A07C(0, &qword_1011D3BA0, UIMenu_ptr);
  v27 = *(_QWORD *)(v3 + 32);
  v28 = *(void **)(v3 + 40);
  v29 = *(void **)(v3 + 48);
  v30 = (*(_BYTE *)(v3 + 56) & 1) == 0;
  v31 = v29;
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = v27;
  v32._object = v28;
  v45.value.super.isa = (Class)v29;
  v45.is_nil = 0;
  v33.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v45, (UIMenuIdentifier_optional)v30, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v38).super.super.isa;
  swift_release(v10);
LABEL_17:
  isa = v33.super.super.isa;
  result.value.super.super.isa = isa;
  result.is_nil = v34;
  return result;
}

id sub_1009B75E4@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::OpaquePointer v8;
  uint64_t v9;
  uint64_t v10;
  id result;

  v4 = v2[2];
  v5 = v2[3];
  v6 = (void *)v2[4];
  v7 = type metadata accessor for ActionMenu.Element(0, v4, v5, a1);
  v8._rawValue = v6;
  result = sub_1009B7638(v8, v7, v9, v10);
  *a2 = result;
  return result;
}

id sub_1009B7638(Swift::OpaquePointer a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  Swift::String *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  id v24;
  id v25;
  Swift::String v26;
  void *v27;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  Swift::String v31;
  unint64_t v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(Swift::String *__return_ptr, __n128);
  __n128 v40;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(__n128);
  uint64_t v53;
  uint64_t (*v54)(__n128);
  uint64_t v55;
  __n128 v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, char *, uint64_t);
  uint64_t v72;
  void *v73;
  Swift::String v74;
  void *v75;
  uint64_t v76;
  Swift::String v77;
  unint64_t v78;
  Swift::String v79;
  unint64_t v80;
  NSString v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, Swift::String *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  unint64_t v94;
  Swift::String v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;

  v5 = v4;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = type metadata accessor for ActionMenu.Item(0, v9, v8, a4);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v92 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v83 - v15;
  __chkstk_darwin(v14);
  v18 = (Swift::String *)((char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(Swift::String *, uint64_t, uint64_t))(v19 + 16))(v18, v5, a2);
  if (swift_getEnumCaseMultiPayload(v18, a2) == 1)
  {
    v21 = v18[3];
    v97 = v18[2];
    v98 = v21;
    v99 = v18[4];
    v22 = v18[1];
    v95 = *v18;
    v96 = v22;
    type metadata accessor for ActionMenu(0, v9, v8, v20);
    v23 = (void *)ActionMenu.uiMenu(excluding:)(a1);
    v24 = v23;
    if (v23)
    {
      v93 = 0;
      v94 = 0xE000000000000000;
      v25 = v23;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v94);
      v93 = 0xD000000000000012;
      v94 = 0x8000000100E4B0F0;
      v26 = v95;
      swift_bridgeObjectRetain();
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v26._object);
      v28 = v93;
      v27 = (void *)v94;
      if (qword_1011D1F50 != -1)
        swift_once(&qword_1011D1F50, sub_100B51BB0);
      v93 = qword_1011DBBC8;
      v94 = unk_1011DBBD0;
      swift_bridgeObjectRetain();
      v29._countAndFlagsBits = 46;
      v29._object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      v30 = v94;
      swift_bridgeObjectRetain();
      v31._countAndFlagsBits = v28;
      v31._object = v27;
      String.append(_:)(v31);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v27);
      v32 = v94;
      v33 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setAccessibilityIdentifier:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);
      sub_1002A4984(&v95);

    }
    else
    {
      sub_1002A4984(&v95);
    }
  }
  else
  {
    v90 = v8;
    v91 = v11;
    v89 = *(void (**)(char *, Swift::String *, uint64_t))(v11 + 32);
    v89(v16, v18, v10);
    v34 = v10;
    v35 = *(int *)(v10 + 36);
    v36 = v16;
    v37 = &v16[v35];
    v39 = *(void (**)(Swift::String *__return_ptr, __n128))v37;
    v38 = *((_QWORD *)v37 + 1);
    v40 = swift_retain(v38);
    v39(&v95, v40);
    swift_release(v38);
    object = v96._object;
    countAndFlagsBits = v97._countAndFlagsBits;
    sub_100007E68(&v95, (uint64_t)v96._object);
    v43 = (*(uint64_t (**)(void *, uint64_t))(countAndFlagsBits + 8))(object, countAndFlagsBits);
    v87 = v44;
    v88 = v43;
    v45 = v96._object;
    v46 = v97._countAndFlagsBits;
    sub_100007E68(&v95, (uint64_t)v96._object);
    v47 = (*(uint64_t (**)(void *, uint64_t))(v46 + 16))(v45, v46);
    v85 = v48;
    v86 = v47;
    v49 = v96._object;
    v50 = v97._countAndFlagsBits;
    sub_100007E68(&v95, (uint64_t)v96._object);
    if ((*(uint64_t (**)(void *, uint64_t))(v50 + 24))(v49, v50))
    {
      v54 = v52;
      v55 = v53;
      v56 = swift_release(v51);
      v84 = v54(v56);
      swift_release(v55);
    }
    else
    {
      v84 = 0;
    }
    v57 = v96._object;
    v58 = v97._countAndFlagsBits;
    sub_100007E68(&v95, (uint64_t)v96._object);
    v59 = 2 * ((*(uint64_t (**)(void *, uint64_t))(v58 + 32))(v57, v58) & 1);
    sub_10004A07C(0, &qword_1011D7760, UIAction_ptr);
    v61 = v96._object;
    v60 = v97._countAndFlagsBits;
    sub_100007E68(&v95, (uint64_t)v96._object);
    v62 = (*(uint64_t (**)(void *, uint64_t))(v60 + 40))(v61, v60);
    v64 = v91;
    v63 = v92;
    v65 = v36;
    v66 = v36;
    v67 = v34;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v92, v66, v34);
    v68 = *(unsigned __int8 *)(v64 + 80);
    v69 = (v68 + 32) & ~v68;
    v70 = swift_allocObject(&unk_1010EAE40, v69 + v12, v68 | 7);
    v71 = (void (*)(uint64_t, char *, uint64_t))v89;
    v72 = v90;
    *(_QWORD *)(v70 + 16) = v9;
    *(_QWORD *)(v70 + 24) = v72;
    v71(v70 + v69, v63, v67);
    v73 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v88, v87, v86, v85, v84, 0, 0, 0, 0, v59, v62, sub_1009B7F3C, v70);
    v93 = 0;
    v94 = 0xE000000000000000;
    v24 = v73;
    _StringGuts.grow(_:)(20);
    v74._object = (void *)0x8000000100E4B0F0;
    v74._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v74);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v65, v9, *(_QWORD *)(v72 + 8));
    v76 = v93;
    v75 = (void *)v94;
    if (qword_1011D1F50 != -1)
      swift_once(&qword_1011D1F50, sub_100B51BB0);
    v93 = qword_1011DBBC8;
    v94 = unk_1011DBBD0;
    swift_bridgeObjectRetain();
    v77._countAndFlagsBits = 46;
    v77._object = (void *)0xE100000000000000;
    String.append(_:)(v77);
    v78 = v94;
    swift_bridgeObjectRetain();
    v79._countAndFlagsBits = v76;
    v79._object = v75;
    String.append(_:)(v79);
    swift_bridgeObjectRelease(v78);
    swift_bridgeObjectRelease(v75);
    v80 = v94;
    v81 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setAccessibilityIdentifier:", v81, swift_bridgeObjectRelease(v80).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v65, v67);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v95);
  }
  return v24;
}

double sub_1009B7BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1010EAE68, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a3;
  *((_QWORD *)v20 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  v21 = sub_100B237E0((uint64_t)v14, (uint64_t)&unk_1011D3BB0, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1009B7D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v9;
  v6[7] = v10;
  return swift_task_switch(sub_1009B7D90, v9, v10);
}

uint64_t sub_1009B7D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_1009B7DFC;
  return v9();
}

uint64_t sub_1009B7DFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009B5B98;
  else
    v4 = sub_1009B7E5C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1009B7E5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009B7E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v5, *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v8);
}

double sub_1009B7F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v6, v7, a4) - 8) + 80);
  return sub_1009B7BB4(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_1009B7F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v5 = *((_QWORD *)v4 + 4);
  v6 = *(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v5, *((_QWORD *)v4 + 5), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  v9 = swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v4[v7], v5, v9);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v8);
}

uint64_t sub_1009B8048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D3BAC);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10005AEE4;
  return sub_1009B7D20(a1, v10, v11, v12, v7, v8);
}

uint64_t (*ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject(&unk_1010EAE90, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject(&unk_1010EAEB8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return sub_1009B9004;
}

uint64_t (*ActionMenuItemImage.init(uiImage:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject(&unk_1010EAEE0, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  return sub_1009B91CC;
}

uint64_t static ActionMenu.Item.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v7 = (*(_QWORD *(**)(_QWORD *__return_ptr))(a1 + *(int *)(v6 + 36)))(v39);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(a2 + *(int *)(v6 + 36)))(v36, v7);
  v8 = v40;
  v9 = v41;
  sub_100007E68(v39, v40);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v12 = v11;
  v13 = v37;
  v14 = v38;
  sub_100007E68(v36, v37);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (v10 == v15 && v12 == v16)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    sub_100064C78((uint64_t)v39, (uint64_t)v33);
    sub_100064C78((uint64_t)v36, (uint64_t)v30);
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v15, v16, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100064C78((uint64_t)v39, (uint64_t)v33);
    sub_100064C78((uint64_t)v36, (uint64_t)v30);
    v19 = 0;
    if ((v18 & 1) == 0)
      goto LABEL_18;
  }
  v20 = v34;
  v21 = v35;
  sub_100007E68(v33, v34);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  v24 = v23;
  v25 = v31;
  v26 = v32;
  sub_100007E68(v30, v31);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  if (v24)
  {
    if (v28)
    {
      if (v22 == v27 && v24 == v28)
      {
        swift_bridgeObjectRelease();
        v19 = 1;
      }
      else
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v27, v28, 0);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v19 = 0;
    }
  }
  else
  {
    if (!v28)
    {
      v19 = 1;
      goto LABEL_18;
    }
    v19 = 0;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v33);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v30);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v36);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v39);
  return v19 & 1;
}

int *sub_1009B8410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  int *result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  result = (int *)type metadata accessor for ActionMenu.Item(0, a8, a10, v18);
  v20 = (_QWORD *)(a9 + result[9]);
  *v20 = a2;
  v20[1] = a3;
  v21 = (_QWORD *)(a9 + result[10]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)(a9 + result[11]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t ActionMenu.elements(excluding:)(uint64_t a1, uint64_t a2)
{
  uint64_t (**v2)(void);
  uint64_t (**v3)(void);
  Swift::String v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[5];
  uint64_t v29;
  unint64_t v30;

  v3 = v2;
  v29 = 0;
  v30 = 0xE000000000000000;
  v6._countAndFlagsBits = 8254;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  v7 = *((_OWORD *)v2 + 3);
  v28[2] = *((_OWORD *)v2 + 2);
  v28[3] = v7;
  v28[4] = *((_OWORD *)v2 + 4);
  v8 = *((_OWORD *)v2 + 1);
  v28[0] = *(_OWORD *)v2;
  v28[1] = v8;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v28, a2);
  v9 = v29;
  v10 = v30;
  v11 = sub_1009B96FC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v13 = *((_QWORD *)v11 + 2);
  v12 = *((_QWORD *)v11 + 3);
  if (v13 >= v12 >> 1)
    v11 = sub_1009B96FC((char *)(v12 > 1), v13 + 1, 1, v11);
  v14 = swift_allocObject(&unk_1010EAF08, 24, 7);
  *((_QWORD *)v11 + 2) = v13 + 1;
  v15 = &v11[16 * v13];
  *((_QWORD *)v15 + 4) = v9;
  *((_QWORD *)v15 + 5) = v10;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)&v28[0] = v3[8]();
  __chkstk_darwin(*(_QWORD *)&v28[0]);
  v16 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = v16;
  v26 = a1;
  v27 = v14 + 16;
  type metadata accessor for ActionMenu.Element(255, v24, v16, v17);
  v18 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v18);
  v20 = _ArrayProtocol.filter(_:)(sub_1009B9820, &v23, v18, WitnessTable);
  *(_QWORD *)&v28[0] = v20;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v18);
  result = Collection.isEmpty.getter(v18, v21);
  if ((result & 1) == 0)
    return v20;
  if (*(_QWORD *)(*(_QWORD *)(v14 + 16) + 16))
  {
    sub_1009BAB70(1uLL, 1, 0xD00000000000001CLL, 0x8000000100E4B110);
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t ActionMenu.init(_:image:style:id:debugDescription:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  void *v17;
  id v19;
  id v20;
  Swift::String v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];

  strcpy((char *)v26, "ActionMenu: ");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  if (a8)
  {
    v17 = a8;
    v19 = a3;
  }
  else
  {
    v20 = a3;
    swift_bridgeObjectRetain(a6);
    a7 = a5;
    v17 = a6;
  }
  v21._countAndFlagsBits = a7;
  v21._object = v17;
  String.append(_:)(v21);

  result = swift_bridgeObjectRelease(v17);
  v23 = v26[0];
  v24 = v26[1];
  *(_QWORD *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = v23;
  *(_QWORD *)(a9 + 24) = v24;
  *(_QWORD *)(a9 + 32) = a1;
  *(_QWORD *)(a9 + 40) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(_BYTE *)(a9 + 56) = a4 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

uint64_t sub_1009B87A4(uint64_t a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t WitnessTable;
  Swift::String v24;
  Swift::String v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  char **v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char **v50;
  char *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char **v57;
  uint64_t v58;
  unint64_t v59;

  v57 = a3;
  v9 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v14 = type metadata accessor for ActionMenu.Element(0, a4, a5, v13);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v56 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v56 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v18 = v16[1];
    v19 = v16[3];
    v20 = v16[5];
    v21 = (void *)v16[6];
    swift_release(v16[9]);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

    return 1;
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v12, v16, v9);
  v58 = a2;
  v22 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  if ((Sequence<>.contains(_:)(v12, v22, WitnessTable, *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8)) & 1) != 0)
  {
    v58 = 0;
    v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    v24._countAndFlagsBits = 544743456;
    v24._object = (void *)0xE400000000000000;
    String.append(_:)(v24);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v25._countAndFlagsBits = 0x756C637865202D20;
    v25._object = (void *)0xEB00000000646564;
    String.append(_:)(v25);
  }
  else
  {
    v26 = &v12[*(int *)(v9 + 40)];
    v28 = *(uint64_t (**)(__n128))v26;
    v27 = *((_QWORD *)v26 + 1);
    v29 = swift_retain(v27);
    v30 = v28(v29);
    v32 = v31;
    swift_release(v27);
    if (v32 == 1)
    {
      v58 = 0;
      v59 = 0xE000000000000000;
      v33._countAndFlagsBits = 0x20939CE22020;
      v33._object = (void *)0xA600000000000000;
      String.append(_:)(v33);
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
      v34 = v58;
      v35 = v59;
      v36 = v57;
      v37 = *v57;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
      *v36 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v37 = sub_1009B96FC(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
        *v36 = v37;
      }
      v40 = *((_QWORD *)v37 + 2);
      v39 = *((_QWORD *)v37 + 3);
      if (v40 >= v39 >> 1)
      {
        v37 = sub_1009B96FC((char *)(v39 > 1), v40 + 1, 1, v37);
        *v36 = v37;
      }
      *((_QWORD *)v37 + 2) = v40 + 1;
      v41 = &v37[16 * v40];
      *((_QWORD *)v41 + 4) = v34;
      *((_QWORD *)v41 + 5) = v35;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 1;
    }
    v58 = 0;
    v59 = 0xE000000000000000;
    v43._countAndFlagsBits = 544743456;
    v43._object = (void *)0xE400000000000000;
    String.append(_:)(v43);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v44._countAndFlagsBits = 2108704;
    v44._object = (void *)0xE300000000000000;
    String.append(_:)(v44);
    if (v32)
      v45 = v30;
    else
      v45 = 0x6E776F6E6B6E75;
    if (v32)
      v46 = v32;
    else
      v46 = 0xE700000000000000;
    v47 = v46;
    String.append(_:)(*(Swift::String *)&v45);
    swift_bridgeObjectRelease(v46);
  }
  v48 = v58;
  v49 = v59;
  v50 = v57;
  v51 = *v57;
  v52 = swift_isUniquelyReferenced_nonNull_native(*v57);
  *v50 = v51;
  if ((v52 & 1) == 0)
  {
    v51 = sub_1009B96FC(0, *((_QWORD *)v51 + 2) + 1, 1, v51);
    *v50 = v51;
  }
  v54 = *((_QWORD *)v51 + 2);
  v53 = *((_QWORD *)v51 + 3);
  if (v54 >= v53 >> 1)
  {
    v51 = sub_1009B96FC((char *)(v53 > 1), v54 + 1, 1, v51);
    *v50 = v51;
  }
  *((_QWORD *)v51 + 2) = v54 + 1;
  v55 = &v51[16 * v54];
  *((_QWORD *)v55 + 4) = v48;
  *((_QWORD *)v55 + 5) = v49;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return 0;
}

double sub_1009B8B7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char **v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&result = swift_beginAccess(a1 + 16, v30, 0, 0).n128_u64[0];
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = qword_1011D1B50;
    swift_bridgeObjectRetain();
    if (v9 != -1)
      swift_once(&qword_1011D1B50, sub_1009B92C4);
    v24 = v7;
    v11 = (char **)(v7 + 40);
    v12 = qword_1011D3BB8;
    *(_QWORD *)&v10 = 136446210;
    v26 = v10;
    v25 = (char *)&type metadata for Any + 8;
    v27 = v3;
    v28 = v2;
    do
    {
      v14 = *(v11 - 1);
      v13 = *v11;
      v15 = sub_100048B14(v2, (uint64_t)v12);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
      v16 = swift_bridgeObjectRetain_n(v13, 2);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(12, -1);
        v20 = v12;
        v21 = swift_slowAlloc(32, -1);
        v29 = v21;
        *(_DWORD *)v19 = v26;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v19 + 4) = sub_10099627C(v14, v13, &v29);
        swift_bridgeObjectRelease_n(v13, 3);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy(v21, 1, v25);
        v22 = v21;
        v12 = v20;
        swift_slowDealloc(v22, -1, -1);
        v23 = v19;
        v3 = v27;
        v2 = v28;
        swift_slowDealloc(v23, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v13, 2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v11 += 2;
      --v8;
    }
    while (v8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  return result;
}

uint64_t ActionMenu.Item.menuItemConfiguring.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

uint64_t ActionMenu.Item.execute.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtFront(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v1;
  v5 = swift_allocObject(&unk_1010EAF30, 56, 7);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(Swift::OpaquePointer *)(v5 + 32) = a1;
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = sub_1009BACC8;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_1009B8E84(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a2();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(a1, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtEnd(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v3 = v1;
  v5 = swift_allocObject(&unk_1010EAF58, 56, 7);
  v6 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  *(Swift::OpaquePointer *)(v5 + 48) = a1;
  *(_QWORD *)(v2 + 64) = sub_1009BAD00;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_1009B8F48(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a1();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(v8, a3, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1009B8FB0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(systemName:)(a1, a2);
}

uint64_t sub_1009B8FE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009B9004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  return Image.init(systemName:)(v1, v2);
}

id sub_1009B9030(uint64_t a1, uint64_t a2)
{
  return sub_1009B9230(a1, a2, (SEL *)&selRef_systemImageNamed_);
}

id sub_1009B903C()
{
  uint64_t v0;

  return sub_1009B9230(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_systemImageNamed_);
}

uint64_t sub_1009B905C()
{
  return sub_1009B9120(0x696D2E636973756DLL, 0xE900000000000063, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1009B9080()
{
  return sub_1009B9120(0xD000000000000016, 0x8000000100E2C250, (SEL *)&selRef_imageNamed_);
}

uint64_t sub_1009B90A4()
{
  return sub_1009B9120(0x6F6E2E636973756DLL, 0xEF7473696C2E6574, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1009B90D0()
{
  return sub_1009B9120(0x75622E65746F7571, 0xEC000000656C6262, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1009B90F8()
{
  return sub_1009B9120(0x71732E636973756DLL, 0xEC00000065726175, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_1009B9120(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v4);

  if (v5)
    return Image.init(uiImage:)(v5);
  else
    return 0;
}

uint64_t sub_1009B9180(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_1009B91A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009B91CC()
{
  uint64_t v0;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_1009B91F4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(_internalSystemName:)(a1, a2);
}

id sub_1009B9224(uint64_t a1, uint64_t a2)
{
  return sub_1009B9230(a1, a2, (SEL *)&selRef__systemImageNamed_);
}

id sub_1009B9230(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v5;
  id v6;

  swift_bridgeObjectRetain(a2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v5);

  return v6;
}

uint64_t type metadata accessor for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Item);
}

uint64_t sub_1009B92B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Item.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1009B92C4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D3BB8);
  sub_100048B14(v0, (uint64_t)qword_1011D3BB8);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x654D6E6F69746341, 0xEA0000000000756ELL);
}

size_t sub_1009B933C(size_t result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  unint64_t v18;
  char *v19;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100007E8C(&qword_1011D2AE8);
  v11 = *(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (char *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  *((_QWORD *)v15 + 2) = v8;
  *((_QWORD *)v15 + 3) = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = &v15[v18];
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v19 >= &a4[v18 + *(_QWORD *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v19);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v19);
    }
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v19);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

char *sub_1009B94B8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1009BA194(a1, a2, a3, a4, &qword_1011D3E10);
}

char *sub_1009B94C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3D68);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1009B95B8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D8810);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_1009B96D4(size_t a1, int64_t a2, char a3, char *a4)
{
  return sub_1009BA6B8(a1, a2, a3, a4, &qword_1011D3E00, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

size_t sub_1009B96E8(size_t a1, int64_t a2, char a3, char *a4)
{
  return sub_1009BA6B8(a1, a2, a3, a4, &qword_1011D3E40, (uint64_t (*)(_QWORD))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason);
}

char *sub_1009B96FC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_1009B97FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009B9820(uint64_t a1)
{
  uint64_t v1;

  return sub_1009B87A4(a1, *(_QWORD *)(v1 + 32), *(char ***)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

double sub_1009B9840()
{
  uint64_t v0;

  return sub_1009B8B7C(v0);
}

char *sub_1009B9848(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3E38);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1009B9948(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3E28);
    v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[11 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 88 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D3E30);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1009B9A80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DF0);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    type metadata accessor for ICURLBagKey(0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1009B9B9C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1009B9F28(a1, a2, a3, a4, &qword_1011D3DC0);
}

_QWORD *sub_1009B9BA8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1009BA940(a1, a2, a3, a4, (uint64_t *)&unk_1011D96C0, &qword_1011D86F0);
}

_QWORD *sub_1009B9BBC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DF8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D3728);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_1009B9CDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3E18);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D3E20);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1009B9DFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3E08);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C((uint64_t *)&unk_1011D67C0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1009B9F1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1009B9F28(a1, a2, a3, a4, &qword_1011D3DE8);
}

_QWORD *sub_1009B9F28(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = a4[3];
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = a4[2];
  if (v8 <= v9)
    v10 = a4[2];
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_100007E8C(a5);
    v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    v12[2] = v9;
    v12[3] = 2 * (v14 >> 4);
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v12 + 4 >= &a4[2 * v9 + 4])
      memmove(v12 + 4, a4 + 4, 16 * v9);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D3D70);
    swift_arrayInitWithCopy(v12 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

_QWORD *sub_1009BA044(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DE0);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&a4[2 * v8 + 4])
    {
      swift_arrayInitWithTakeFrontToBack(v14);
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1009BA168(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1009BA194(a1, a2, a3, a4, &qword_1011D3DD0);
}

_QWORD *sub_1009BA174(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1009BA940(a1, a2, a3, a4, &qword_1011D61C0, &qword_1011D3DD8);
}

char *sub_1009BA188(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1009BA194(a1, a2, a3, a4, &qword_1011D3DC8);
}

char *sub_1009BA194(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_100007E8C(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v9);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

char *sub_1009BA278(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3D60);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1009BA370(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DB8);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1009BA48C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DB0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1009BA584(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DA0);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D3DA8);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_1009BA6A4(size_t a1, int64_t a2, char a3, char *a4)
{
  return sub_1009BA6B8(a1, a2, a3, a4, &qword_1011D3D58, type metadata accessor for SharePlayTogetherSession.Participant);
}

size_t sub_1009BA6B8(size_t result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  unint64_t v21;
  char *v22;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = *((_QWORD *)a4 + 3);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *((_QWORD *)a4 + 2);
  if (v10 <= v11)
    v12 = *((_QWORD *)a4 + 2);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100007E8C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (char *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = j__malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  *((_QWORD *)v18 + 2) = v11;
  *((_QWORD *)v18 + 3) = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = *(_QWORD *)(a6(0) - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = &v18[v21];
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v22 >= &a4[v21 + *(_QWORD *)(v20 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v22);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v22);
    }
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v22);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v18;
}

char *sub_1009BA82C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3D98);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1009BA92C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1009BA940(a1, a2, a3, a4, &qword_1011D3D88, &qword_1011D3D90);
}

_QWORD *sub_1009BA940(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_100007E8C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size_0(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[5 * v11 + 4])
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(a6);
    swift_arrayInitWithCopy(v14 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v14;
}

char *sub_1009BAA78(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3D80);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1009BAB70(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  char *v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  char *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > *((_QWORD *)v6 + 3) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1009B96FC(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[16 * v8 + 32];
  result = swift_arrayDestroy(v16, v9, &type metadata for String);
  if (!v10)
    goto LABEL_19;
  v17 = *((_QWORD *)v6 + 2);
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_25;
  result = (unint64_t)(v16 + 16);
  v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19])
    result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  v21 = *((_QWORD *)v6 + 2);
  v18 = __OFADD__(v21, v10);
  v22 = v21 + v10;
  if (!v18)
  {
    *((_QWORD *)v6 + 2) = v22;
LABEL_19:
    *(_QWORD *)v16 = a3;
    *((_QWORD *)v16 + 1) = a4;
    *v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1009BAC9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1009BACC8()
{
  return sub_1009BAD0C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009B8E84);
}

uint64_t sub_1009BACD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1009BAD00()
{
  return sub_1009BAD0C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009B8F48);
}

uint64_t sub_1009BAD0C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1009BAD20(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for ActionMenu<A>.Style, a1);
}

uint64_t sub_1009BAD30(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
}

unint64_t sub_1009BAD40()
{
  unint64_t result;

  result = qword_1011D3BD0[0];
  if (!qword_1011D3BD0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenuItemStyle, &type metadata for ActionMenuItemStyle);
    atomic_store(result, qword_1011D3BD0);
  }
  return result;
}

uint64_t sub_1009BAD84(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  return swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t sub_1009BADC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t sub_1009BAE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v15);
  return a1;
}

__n128 initializeWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1009BAF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  return a1;
}

uint64_t type metadata accessor for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu);
}

uint64_t type metadata accessor for ActionMenu.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Style);
}

uint64_t sub_1009BAFB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1009BB034(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain(v11);
    swift_retain(v14);
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_1009BB134(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  return swift_release(*(_QWORD *)(((v5 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1009BB194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  return a1;
}

uint64_t sub_1009BB234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t sub_1009BB2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1009BB36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + a2;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v9);
  v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFF8uLL;
  v12 = *(_QWORD *)(v11 + 8);
  *(_OWORD *)v11 = *(_OWORD *)v10;
  swift_release(v12);
  v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  return a1;
}

uint64_t sub_1009BB408(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1009BB494 + 4 * byte_100EDBB80[v10]))();
  }
}

void sub_1009BB518(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1009BB61C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1009BB694);
}

void sub_1009BB624(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1009BB62CLL);
  JUMPOUT(0x1009BB694);
}

void sub_1009BB66C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1009BB694);
}

void sub_1009BB674()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1009BB694);
}

uint64_t sub_1009BB67C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1009BB694);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1009BB690);
    JUMPOUT(0x1009BB688);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

ValueMetadata *type metadata accessor for ActionMenuItemImage()
{
  return &type metadata for ActionMenuItemImage;
}

uint64_t _s9MusicCore19ActionMenuItemStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009BB708 + 4 * byte_100EDBB94[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009BB73C + 4 * byte_100EDBB8F[v4]))();
}

uint64_t sub_1009BB73C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009BB744(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009BB74CLL);
  return result;
}

uint64_t sub_1009BB758(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009BB760);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009BB764(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009BB76C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenuItemStyle()
{
  return &type metadata for ActionMenuItemStyle;
}

char *sub_1009BB788(char *result, int64_t a2, char a3)
{
  char **v3;
  char *v5;
  int64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  size_t v16;
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *((_QWORD *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = result;
  v8 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)result || v10 > *((_QWORD *)v5 + 3) >> 1)
  {
    if (v6 <= v10)
      v12 = v6 + v9;
    else
      v12 = v6;
    result = sub_1009BA194(result, v12, 1, v5, &qword_1011D3DD0);
    v5 = result;
  }
  v13 = v5 + 32;
  v14 = &v7[(_QWORD)(v5 + 32)];
  if (!v9)
    goto LABEL_19;
  v15 = *((_QWORD *)v5 + 2);
  v16 = v15 - a2;
  if (__OFSUB__(v15, a2))
    goto LABEL_25;
  result = v14 + 1;
  v17 = &v13[a2];
  if (v14 + 1 != &v13[a2] || result >= &v17[v16])
    result = (char *)memmove(result, v17, v16);
  v18 = *((_QWORD *)v5 + 2);
  v19 = __OFADD__(v18, v9);
  v20 = v18 + v9;
  if (!v19)
  {
    *((_QWORD *)v5 + 2) = v20;
LABEL_19:
    *v14 = a3;
    *v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1009BB898(char *result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  char *v6;
  int64_t v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  char *v16;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = &result[-a2];
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = (int64_t)&v8[v5];
    else
      v10 = v5;
    result = sub_1009BA194(result, v10, 1, v4, &qword_1011D3DD0);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *((_QWORD *)v4 + 2);
  v12 = v11 - a2;
  if (__OFSUB__(v11, a2))
    goto LABEL_26;
  result = &v6[(_QWORD)(v4 + 32)];
  v13 = &v4[a2 + 32];
  if (v6 != (char *)a2 || result >= &v13[v12])
    result = (char *)memmove(result, v13, v12);
  v14 = *((_QWORD *)v4 + 2);
  v15 = __OFADD__(v14, v8);
  v16 = &v8[v14];
  if (!v15)
  {
    *((_QWORD *)v4 + 2) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1009BB9A0(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1009B9A80(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  type metadata accessor for ICURLBagKey(0);
  result = swift_arrayDestroy(&v4[v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[a2 + 4];
  if (v6 != a2 || &v4[v6 + 4] >= (_QWORD *)&v16[8 * v15])
    result = (uint64_t)memmove(&v4[v6 + 4], v16, 8 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1009BBAB8(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1009B9F28(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_1011D3D78);
  }
  v12 = sub_100007E8C(&qword_1011D3D70);
  result = swift_arrayDestroy(&v4[2 * v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[2 * a2 + 4];
  if (v6 != a2 || &v4[2 * v6 + 4] >= (_QWORD *)&v16[16 * v15])
    result = (uint64_t)memmove(&v4[2 * v6 + 4], v16, 16 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1009BBBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (v5 < 0)
    v20 = v5;
  else
    v20 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_33;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_41:
    __break(1u);
LABEL_42:
    if (v5 < 0)
      v22 = v5;
    else
      v22 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_36:
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_41;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_42;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = type metadata accessor for BagProvider.Observer();
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
  {
LABEL_27:
    specialized Array._endMutation()(v14);
    return;
  }
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v5 < 0)
    v23 = v5;
  else
    v23 = v11;
  swift_bridgeObjectRetain();
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v5);
  v16 = v24 - v2;
  if (__OFSUB__(v24, v2))
    goto LABEL_51;
LABEL_21:
  v17 = (const void *)(v11 + 32 + 8 * v2);
  if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
    v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
  if ((unint64_t)v5 >> 62)
  {
LABEL_52:
    if (v5 < 0)
      v25 = v5;
    else
      v25 = v11;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v5);
    v19 = v26 + v6;
    if (!__OFADD__(v26, v6))
      goto LABEL_26;
    goto LABEL_57;
  }
  v18 = *(_QWORD *)(v11 + 16);
  v19 = v18 + v6;
  if (!__OFADD__(v18, v6))
  {
LABEL_26:
    *(_QWORD *)(v11 + 16) = v19;
    goto LABEL_27;
  }
LABEL_57:
  __break(1u);
}

uint64_t sub_1009BBE54(uint64_t result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *((_QWORD *)v4 + 3) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1009B96FC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy(&v4[16 * v6 + 32], v7, &type metadata for String);
  if (!v7)
    goto LABEL_19;
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_25;
  v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14])
    result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  v16 = *((_QWORD *)v4 + 2);
  v13 = __OFADD__(v16, v8);
  v17 = v16 - v7;
  if (!v13)
  {
    *((_QWORD *)v4 + 2) = v17;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1009BBF68(unint64_t result, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = v5 + v8;
    else
      v10 = v5;
    result = (unint64_t)sub_1009BAA78((char *)result, v10, 1, (char *)v4);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFSUB__(v11, a2);
  v13 = v11 - a2;
  if (v12)
    goto LABEL_26;
  result = v4 + 32 + 16 * v6;
  v14 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 16 * v13)
    result = (unint64_t)memmove((void *)result, v14, 16 * v13);
  v15 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v15, v8);
  v16 = v15 + v8;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1009BC070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EBD78, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EBDA0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EBDC8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CF6D8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D40E8;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BC1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EBEB8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EBEE0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EBF08, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CFAD8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D4108;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BC2F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EC070, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_1010EC098, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_1010EC0C0, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1009CFFE4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CEB64;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1011D4158;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100376DA4((_QWORD *)a1);
  sub_100376DA4((_QWORD *)a1);
  sub_100376DA4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BC43C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EC138, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_1010EC160, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_1010EC188, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1009D0128;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CEB64;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1011D4178;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D0214((_QWORD *)a1);
  sub_1009D0214((_QWORD *)a1);
  sub_1009D0214((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BC580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EC200, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EC228, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EC250, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009D0408;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D4198;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BC6C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EBFA8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EBFD0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EBFF8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CFE2C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D4128;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BC808(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 72);
  v5 = swift_allocObject(&unk_1010EB6C0, 152, 7);
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(a1 + 128);
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v9;
  v10 = swift_allocObject(&unk_1010EB6E8, 152, 7);
  v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v10 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v10 + 128) = v11;
  *(_QWORD *)(v10 + 144) = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v10 + 64) = v12;
  v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v10 + 96) = v13;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v14;
  v15 = swift_allocObject(&unk_1010EB710, 152, 7);
  v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 32) = v19;
  *(_BYTE *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = sub_1009CDE04;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CDE10;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1011D3FD8;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009CDF2C(a1);
  sub_1009CDF2C(a1);
  sub_1009CDF2C(a1);
  return v3;
}

uint64_t sub_1009BC964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EBC10, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EBC38, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EBC60, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CEE74;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D40B0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BCAA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EBA80, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_1010EBAA8, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_1010EBAD0, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1009CEB24;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CEA08;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1011D4070;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009CEC2C((_QWORD *)a1);
  sub_1009CEC2C((_QWORD *)a1);
  sub_1009CEC2C((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BCBEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB9B8, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_1010EB9E0, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_1010EBA08, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_1009CE9C8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CEA08;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_1011D4050;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009CEC2C((_QWORD *)a1);
  sub_1009CEC2C((_QWORD *)a1);
  sub_1009CEC2C((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BCD30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB8A0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EB8C8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EB8F0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CE758;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D4020;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BCE74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EBB48, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EBB70, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EBB98, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CED58;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D4090;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BCFB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB5F8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EB620, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EB648, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CDBF0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D3FB0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BD0FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB530, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EB558, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EB580, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CDAD4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D3F90;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BD240(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB468, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EB490, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EB4B8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CD9A0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CD9D4;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D3F70;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BD384(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB3A0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EB3C8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EB3F0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1009CD884;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009D0B24;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D3F50;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  sub_1009D04E4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1009BD4C8(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100007E8C(&qword_1011D3E28);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  v4 = *((_BYTE *)a1 + 32);
  v5 = (_OWORD *)swift_allocObject(&unk_1010EB2D8, 112, 7);
  v6 = a1[3];
  v5[3] = a1[2];
  v5[4] = v6;
  v7 = a1[5];
  v5[5] = a1[4];
  v5[6] = v7;
  v8 = a1[1];
  v5[1] = *a1;
  v5[2] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1010EB300, 112, 7);
  v10 = a1[3];
  v9[3] = a1[2];
  v9[4] = v10;
  v11 = a1[5];
  v9[5] = a1[4];
  v9[6] = v11;
  v12 = a1[1];
  v9[1] = *a1;
  v9[2] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1010EB328, 112, 7);
  v14 = a1[3];
  v13[3] = a1[2];
  v13[4] = v14;
  v15 = a1[5];
  v13[5] = a1[4];
  v13[6] = v15;
  v16 = *a1;
  v17 = a1[1];
  *(_BYTE *)(v3 + 32) = v4;
  v13[1] = v16;
  v13[2] = v17;
  *(_QWORD *)(v3 + 40) = sub_1009CD6D4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1009CD6E0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_1011D3F30;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100974678(a1);
  sub_100974678(a1);
  sub_100974678(a1);
  return v3;
}

uint64_t sub_1009BD5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 216) = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009BD650, 0, 0);
}

uint64_t sub_1009BD650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  sub_10004A160(v2, v0 + 16, &qword_1011D32C0);
  v4 = swift_allocObject(&unk_1010EB968, 232, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 208) = v5;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v0 + 208);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + 144) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v4 + 176) = v7;
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 80) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v4 + 112) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v10;
  sub_100B237F0(v1, (uint64_t)&unk_1011D4040, v4);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaylistContext.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaylistContext.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t PlaylistContext.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PlaylistContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D3ED0;
  if (!qword_1011D3ED0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistContext);
  return result;
}

uint64_t PlaylistContext.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

double (*PlaylistContext.playlist.modify())(_QWORD)
{
  type metadata accessor for PlaylistContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaylistContext.init(entry:playlist:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v8 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

__n128 MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];
  uint64_t v38;
  unsigned __int8 v39;
  __n128 v40;

  v33 = a4;
  v32 = a7;
  *(_QWORD *)&v36 = a6;
  *(_QWORD *)&v35 = a5;
  v31 = a9;
  v30 = a10;
  v18 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011D3E48);
  __chkstk_darwin(v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  sub_1009C9248(v34, a1, a2, a3, (uint64_t)v23, v33, v35, v36, (uint64_t *)v37, v32, v31, *((unint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12, (uint64_t)v20, a13, a14);
  v35 = v37[1];
  v36 = v37[0];
  v34 = v37[2];
  v26 = v38;
  v27 = v39;
  sub_10004FF60((uint64_t)v20, &qword_1011D2EB8);
  sub_10004FF60((uint64_t)v23, &qword_1011D3E48);
  result = v40;
  v29 = v35;
  *(_OWORD *)a8 = v36;
  *(_OWORD *)(a8 + 16) = v29;
  *(_OWORD *)(a8 + 32) = v34;
  *(_QWORD *)(a8 + 48) = v26;
  *(_QWORD *)(a8 + 56) = v27;
  *(__n128 *)(a8 + 64) = result;
  return result;
}

uint64_t GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, __n128);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  __n128 v182;
  void (*v183)(char *, uint64_t, __n128);
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  void *v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t *v239;
  uint64_t v240;
  unint64_t v241;
  __int128 v242;
  __int128 v243;
  uint64_t v244;
  __int128 v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unsigned __int8 v255;
  uint64_t v256;
  uint64_t v257;

  v232 = a8;
  v241 = a7;
  v237 = a6;
  v236 = a5;
  v211 = a4;
  v235 = a3;
  v234 = a2;
  v233 = a1;
  v239 = a9;
  v228 = a15;
  v229 = a14;
  v230 = a13;
  v231 = a12;
  v238 = a11;
  v227 = type metadata accessor for UploadedVideo(0);
  v186 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v185 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for TVShow(0);
  v189 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v188 = (char *)&v184 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = type metadata accessor for TVSeason(0);
  v192 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v191 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = type metadata accessor for TVEpisode(0);
  v194 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v193 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for Station(0);
  v197 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v196 = (char *)&v184 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for Song(0);
  v200 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v199 = (char *)&v184 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for RadioShow(0);
  v204 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v203 = (char *)&v184 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for Playlist(0);
  v206 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v205 = (char *)&v184 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for MusicVideo(0);
  v209 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v208 = (char *)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = type metadata accessor for MusicMovie(0);
  v214 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v213 = (char *)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = type metadata accessor for Genre(0);
  v216 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v215 = (char *)&v184 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for EditorialItem(0);
  v219 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v218 = (char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = type metadata accessor for Curator(0);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v221 = (char *)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for Artist(0);
  v225 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v29 = (char *)&v184 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v30);
  v32 = (char *)&v184 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011D3E48);
  __chkstk_darwin(v33);
  v35 = (char *)&v184 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Album(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v184 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for GenericMusicItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v187 = (char *)&v184 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __chkstk_darwin(v43);
  v46 = (char *)&v184 - v45;
  v47 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v41 + 16);
  v47((char *)&v184 - v45, v240, v40, v44);
  v48 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v46, v40);
  if (v48 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v46, v36);
    v49 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v35, 1, 1, v49);
    v50 = type metadata accessor for Actions.MetricsReportingContext(0);
    v245 = 0u;
    v246 = 0u;
    v247 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v32, 1, 1, v50);
    sub_1009C4F10((uint64_t)v39, v233, v234, v235, (uint64_t)v35, v236, v237, v241, &v248, v232, (uint64_t)&v245, v238, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v51 = v252;
    v237 = v251;
    v52 = v253;
    v53 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60((uint64_t)v32, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60((uint64_t)v35, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
    v57 = v53;
    v58 = v51;
    v59 = v39;
LABEL_3:
    v60 = v36;
LABEL_29:
    result = v56(v59, v60);
    goto LABEL_30;
  }
  v61 = v238;
  v62 = v227;
  if (v48 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v63 = v225;
    v64 = v226;
    (*(void (**)(char *, char *, uint64_t))(v225 + 32))(v29, v46, v226);
    v65 = type metadata accessor for PlaylistContext(0);
    v66 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v35, 1, 1, v65);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v67 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v68 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v32, 1, 1, v67);
    sub_1009C5380((uint64_t)v29, v233, v234, v235, (uint64_t)v35, v236, v237, v241, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v69 = v256;
    v236 = v257;
    sub_10004FF60(v68, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v66, &qword_1011D3E48);
    v70 = v29;
    v55 = v69;
    result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v70, v64);
    goto LABEL_30;
  }
  if (v48 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v72 = v222;
    v73 = (uint64_t)v221;
    v36 = v223;
    (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v221, v46, v223);
    v74 = type metadata accessor for PlaylistContext(0);
    v75 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v35, 1, 1, v74);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v76 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v77 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v32, 1, 1, v76);
    sub_1009C57F0(v73, v233, v234, v235, (uint64_t)v35, v236, v237, v241, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v77, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v75, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v72 + 8);
    v59 = (char *)v73;
    goto LABEL_3;
  }
  if (v48 == enum case for GenericMusicItem.editorialItem(_:))
  {
    v78 = v40;
    v79 = (uint64_t)v35;
    v80 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v78);
    v81 = v219;
    v82 = (uint64_t)v218;
    (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v218, v46, v224);
    v83 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v35, 1, 1, v83);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v84 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v85 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v32, 1, 1, v84);
    sub_1009C5C60(v82, v233, v234, v235, (uint64_t)v35, v236, v237, v80, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v85, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v79, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
    v59 = (char *)v82;
    v86 = (uint64_t *)&v251;
LABEL_28:
    v60 = *(v86 - 32);
    goto LABEL_29;
  }
  if (v48 == enum case for GenericMusicItem.genre(_:))
  {
    v87 = v40;
    v88 = (uint64_t)v35;
    v89 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v87);
    v90 = v216;
    v91 = (uint64_t)v215;
    (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v215, v46, v220);
    v92 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v35, 1, 1, v92);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v93 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v94 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v32, 1, 1, v93);
    sub_1009C60EC(v91, v233, v234, v235, (uint64_t)v35, v236, v237, v89, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v94, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v88, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v90 + 8);
    v59 = (char *)v91;
    v86 = &v247;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v95 = v40;
    v96 = (uint64_t)v35;
    v97 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v95);
    v98 = v214;
    v99 = (uint64_t)v32;
    v100 = (uint64_t)v213;
    (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v213, v46, v217);
    v101 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v35, 1, 1, v101);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v102 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v32, 1, 1, v102);
    sub_1009C655C(v100, v233, v234, v235, (uint64_t)v35, v236, v237, v97, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v99, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v96, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v98 + 8);
    v59 = (char *)v100;
    v86 = (uint64_t *)&v245 + 1;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v103 = v40;
    v104 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v103);
    v105 = v209;
    v106 = (uint64_t)v208;
    (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v208, v46, v212);
    v107 = type metadata accessor for Actions.MetricsReportingContext(0);
    v108 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v32, 1, 1, v107);
    sub_1009C69E8(v106, v233, v234, v235, v211, v236, v237, v104, &v248, v232, a10, v61, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v108, &qword_1011D2EB8);
    v56 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
    v59 = (char *)v106;
    v86 = (uint64_t *)&v243;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.playlist(_:))
  {
    v109 = v40;
    v110 = (uint64_t)v35;
    v111 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v109);
    v112 = v206;
    v113 = (uint64_t)v205;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v205, v46, v210);
    v114 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v35, 1, 1, v114);
    v115 = type metadata accessor for Actions.MetricsReportingContext(0);
    v245 = 0u;
    v246 = 0u;
    v247 = 0;
    v116 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v32, 1, 1, v115);
    sub_1009C6E58(v113, v233, v234, v235, (uint64_t)v35, v236, v237, v111, &v248, v232, (uint64_t)&v245, v61, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v116, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v110, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v112 + 8);
    v59 = (char *)v113;
    v86 = (uint64_t *)&v242;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.radioShow(_:))
  {
    v117 = v40;
    v118 = (uint64_t)v35;
    v119 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v117);
    v120 = v204;
    v121 = (uint64_t)v203;
    (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v203, v46, v207);
    v122 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v35, 1, 1, v122);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v123 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v124 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v32, 1, 1, v123);
    sub_1009C72C8(v121, v233, v234, v235, (uint64_t)v35, v236, v237, v119, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v124, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v118, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v120 + 8);
    v59 = (char *)v121;
    v86 = (uint64_t *)&v239;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.song(_:))
  {
    v125 = v40;
    v126 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v125);
    v127 = v200;
    v128 = (uint64_t)v199;
    (*(void (**)(char *, char *, uint64_t))(v200 + 32))(v199, v46, v202);
    v129 = type metadata accessor for Actions.MetricsReportingContext(0);
    v130 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v32, 1, 1, v129);
    sub_1009C7738(v128, v233, v234, v235, v211, v236, v237, v126, &v248, v232, a10, v61, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v130, &qword_1011D2EB8);
    v56 = *(uint64_t (**)(char *, uint64_t))(v127 + 8);
    v59 = (char *)v128;
    v86 = (uint64_t *)&v234;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.station(_:))
  {
    v131 = v40;
    v132 = (uint64_t)v35;
    v133 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v131);
    v134 = v197;
    v135 = (uint64_t)v196;
    (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v196, v46, v201);
    v136 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v35, 1, 1, v136);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v137 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v138 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v32, 1, 1, v137);
    sub_1009C7BA8(v135, v233, v234, v235, (uint64_t)v35, v236, v237, v133, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v138, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v132, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v134 + 8);
    v59 = (char *)v135;
    v86 = (uint64_t *)&v233;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v139 = v40;
    v140 = (uint64_t)v35;
    v141 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v139);
    v142 = v194;
    v143 = (uint64_t)v193;
    (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v193, v46, v198);
    v144 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v35, 1, 1, v144);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v145 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v146 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v32, 1, 1, v145);
    sub_1009C8018(v143, v233, v234, v235, (uint64_t)v35, v236, v237, v141, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v146, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v140, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v142 + 8);
    v59 = (char *)v143;
    v86 = &v230;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v147 = v40;
    v148 = (uint64_t)v35;
    v149 = v241;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v147);
    v150 = v192;
    v151 = (uint64_t)v191;
    (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v191, v46, v195);
    v152 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v35, 1, 1, v152);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v153 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v154 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v32, 1, 1, v153);
    sub_1009C84A4(v151, v233, v234, v235, (uint64_t)v35, v236, v237, v149, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v154, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    sub_10004FF60(v148, &qword_1011D3E48);
    v56 = *(uint64_t (**)(char *, uint64_t))(v150 + 8);
    v59 = (char *)v151;
    v86 = &v227;
    goto LABEL_28;
  }
  if (v48 == enum case for GenericMusicItem.tvShow(_:))
  {
    v159 = v35;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v160 = v189;
    v161 = (uint64_t)v188;
    v162 = v190;
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v188, v46, v190);
    v163 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v35, 1, 1, v163);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v164 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v165 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 56))(v32, 1, 1, v164);
    sub_1009C8930(v161, v233, v234, v235, (uint64_t)v35, v236, v237, v241, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v165, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    v166 = (uint64_t)v159;
LABEL_35:
    sub_10004FF60(v166, &qword_1011D3E48);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v161, v162);
    goto LABEL_30;
  }
  if (v48 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v46, v40);
    v160 = v186;
    v161 = (uint64_t)v185;
    v162 = v62;
    (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v185, v46, v62);
    v167 = type metadata accessor for PlaylistContext(0);
    v168 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v35, 1, 1, v167);
    v247 = 0;
    v245 = 0u;
    v246 = 0u;
    v169 = type metadata accessor for Actions.MetricsReportingContext(0);
    v242 = 0u;
    v243 = 0u;
    v244 = 0;
    v170 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v32, 1, 1, v169);
    sub_1009C8DBC(v161, v233, v234, v235, (uint64_t)v35, v236, v237, v241, &v248, v232, (uint64_t)&v245, (unint64_t)&v242, v231, v230, v229, v228, (uint64_t)v32);
    v240 = v248;
    v241 = v249;
    v238 = v250;
    v58 = v252;
    v237 = v251;
    v52 = v253;
    v57 = v254;
    v54 = v255;
    v55 = v256;
    v236 = v257;
    sub_10004FF60(v170, &qword_1011D2EB8);
    sub_10004FF60((uint64_t)&v242, &qword_1011D3E58);
    sub_10004FF60((uint64_t)&v245, &qword_1011D3E60);
    v166 = (uint64_t)v168;
    goto LABEL_35;
  }
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v171 = type metadata accessor for Logger(0);
  sub_100048B14(v171, (uint64_t)static Logger.actions);
  v172 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v187, v240, v40);
  v173 = Logger.logObject.getter(v172);
  v174 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v173, v174))
  {
    v175 = swift_slowAlloc(12, -1);
    v176 = swift_slowAlloc(32, -1);
    v248 = v176;
    *(_DWORD *)v175 = 136315138;
    v177 = sub_100048748(&qword_1011D3E50, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v178 = v187;
    v179 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v40, v177);
    v181 = v180;
    *(_QWORD *)(v175 + 4) = sub_10099627C(v179, v180, &v248);
    v182 = swift_bridgeObjectRelease(v181);
    v183 = *(void (**)(char *, uint64_t, __n128))(v41 + 8);
    v183(v178, v40, v182);
    _os_log_impl((void *)&_mh_execute_header, v173, v174, "GenericMusicItem %s actions not handled.", (uint8_t *)v175, 0xCu);
    swift_arrayDestroy(v176, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v176, -1, -1);
    swift_slowDealloc(v175, -1, -1);
  }
  else
  {
    v183 = *(void (**)(char *, uint64_t, __n128))(v41 + 8);
    ((void (*)(char *, uint64_t))v183)(v187, v40);
  }

  result = ((uint64_t (*)(char *, uint64_t))v183)(v46, v40);
  v240 = 0;
  v241 = 0;
  v238 = 0;
  v237 = 0;
  v58 = 0;
  v52 = 0;
  v57 = 0;
  v54 = 0;
  v55 = 0;
  v236 = 0;
LABEL_30:
  v155 = v239;
  v156 = v241;
  *v239 = v240;
  v155[1] = v156;
  v157 = v237;
  v155[2] = v238;
  v155[3] = v157;
  v155[4] = v58;
  v155[5] = v52;
  v155[6] = v57;
  v155[7] = v54;
  v158 = v236;
  v155[8] = v55;
  v155[9] = v158;
  return result;
}

void sub_1009BFDF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  id v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  Swift::String v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  int64_t v148;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  _QWORD *v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183[2];
  __int128 v184[2];
  uint64_t v185;
  __int128 v186[2];
  uint64_t v187;
  __int128 v188[3];
  uint64_t v189;
  unsigned __int8 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  unsigned __int8 v196;
  __int128 v197;
  __int128 v198[3];
  uint64_t v199;
  unsigned __int8 v200;
  __int128 v201;

  v166 = a8;
  v172 = a6;
  *(_QWORD *)&v181 = a5;
  v168 = a4;
  *(_QWORD *)&v182 = a3;
  v19 = sub_100007E8C(&qword_1011D3E48);
  __chkstk_darwin(v19);
  *(_QWORD *)&v169 = (char *)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for PlaylistContext(0);
  *(_QWORD *)&v170 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v164 = v21;
  v165 = (_QWORD *)((char *)&v157 - (((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  *(_QWORD *)&v171 = (char *)&v157 - v23;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011D2EB8);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v28);
  v31 = (char *)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = a1;
  sub_10004A160(a1, (uint64_t)&v192, &qword_1011D3E60);
  v179 = a7;
  *(_QWORD *)&v180 = a2;
  v177 = v25;
  *(_QWORD *)&v178 = v24;
  v175 = v31;
  v176 = v27;
  v173 = v29;
  v174 = v30;
  if (*((_QWORD *)&v193 + 1))
  {
    sub_100064C48(&v192, (uint64_t)v198);
    sub_100064C78(a2, (uint64_t)&v192);
    v32 = sub_100007E8C(&qword_1011D8A50);
    v163 = String.init<A>(describing:)(&v192, v32);
    v33 = v27;
    v35 = v34;
    sub_100064C78(a2, (uint64_t)&v192);
    sub_100064C78((uint64_t)v198, (uint64_t)v188);
    sub_10004A160(v182, (uint64_t)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
    v36 = *(unsigned __int8 *)(v29 + 80);
    v37 = (v36 + 96) & ~v36;
    v38 = swift_allocObject(&unk_1010EBD50, v37 + v30, v36 | 7);
    sub_100064C48(&v192, v38 + 16);
    sub_100064C48(v188, v38 + 56);
    v39 = sub_100065228((uint64_t)v31, v38 + v37, &qword_1011D2EB8);
    v40 = UUID.init()(v39);
    v41 = UUID.uuidString.getter(v40);
    v43 = v42;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
    strcpy((char *)&v192, "ActionMenu: ");
    BYTE13(v192) = 0;
    HIWORD(v192) = -5120;
    v44._countAndFlagsBits = v163;
    v44._object = v35;
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    v45 = v192;
    v46 = sub_100007E8C(&qword_1011D3E28);
    v47 = swift_allocObject(v46, 120, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v47 + 32) = v41;
    *(_QWORD *)(v47 + 40) = v43;
    *(_OWORD *)(v47 + 48) = v45;
    *(_OWORD *)(v47 + 64) = xmmword_100EA9390;
    *(_QWORD *)(v47 + 80) = 0;
    *(_QWORD *)(v47 + 88) = 0;
    *(_QWORD *)(v47 + 96) = sub_1009CF69C;
    *(_QWORD *)(v47 + 104) = v38;
    *(_BYTE *)(v47 + 112) = 1;
    *(_QWORD *)&v192 = _swiftEmptyArrayStorage;
    sub_100A0526C(v47);
    v160 = (_QWORD *)v192;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v198);
  }
  else
  {
    sub_10004FF60((uint64_t)&v192, &qword_1011D3E60);
    v160 = _swiftEmptyArrayStorage;
  }
  v48 = v170;
  v49 = v169;
  v50 = v167;
  sub_10004A160((uint64_t)v168, v169, &qword_1011D3E48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v50) == 1)
  {
    sub_10004FF60(v49, &qword_1011D3E48);
    v51 = _swiftEmptyArrayStorage;
    v52 = v179;
    v53 = v180;
    v54 = (_OWORD *)&unk_100EA7000;
  }
  else
  {
    v55 = v49;
    v56 = v171;
    sub_100496148(v55, v171);
    v53 = v180;
    sub_100064C78(v180, (uint64_t)v198);
    v57 = sub_100007E8C(&qword_1011D8A50);
    *(_QWORD *)&v170 = String.init<A>(describing:)(v198, v57);
    v59 = v58;
    v60 = (uint64_t)v165;
    sub_10049618C(v56, (uint64_t)v165);
    v61 = (uint64_t)v175;
    sub_10004A160(v182, (uint64_t)v175, &qword_1011D2EB8);
    v62 = *(unsigned __int8 *)(v48 + 80);
    v63 = (v62 + 16) & ~v62;
    v64 = ((unint64_t)v164 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = *(unsigned __int8 *)(v173 + 80);
    v66 = (v65 + v64 + 8) & ~v65;
    v67 = swift_allocObject(&unk_1010EBD28, v66 + v174, v62 | v65 | 7);
    sub_100496148(v60, v67 + v63);
    *(_QWORD *)(v67 + v64) = v181;
    sub_100065228(v61, v67 + v66, &qword_1011D2EB8);
    swift_retain();
    v68 = v176;
    v70 = UUID.init()(v69);
    v71 = UUID.uuidString.getter(v70);
    v73 = v72;
    (*(void (**)(char *, _QWORD))(v177 + 8))(v68, v178);
    strcpy((char *)v198, "ActionMenu: ");
    BYTE13(v198[0]) = 0;
    HIWORD(v198[0]) = -5120;
    v74._countAndFlagsBits = v170;
    v74._object = v59;
    String.append(_:)(v74);
    swift_bridgeObjectRelease();
    v76 = *((_QWORD *)&v198[0] + 1);
    v75 = *(_QWORD *)&v198[0];
    v77 = sub_100007E8C(&qword_1011D3E28);
    v78 = swift_allocObject(v77, 120, 7);
    *(_OWORD *)(v78 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v78 + 32) = v71;
    *(_QWORD *)(v78 + 40) = v73;
    *(_OWORD *)(v78 + 48) = __PAIR128__(v76, v75);
    *(_OWORD *)(v78 + 64) = xmmword_100EA9390;
    *(_QWORD *)(v78 + 80) = 0;
    *(_QWORD *)(v78 + 88) = 0;
    *(_QWORD *)(v78 + 96) = sub_1009CF45C;
    *(_QWORD *)(v78 + 104) = v67;
    *(_BYTE *)(v78 + 112) = 1;
    v54 = &unk_100EA7000;
    *(_QWORD *)&v198[0] = _swiftEmptyArrayStorage;
    sub_100A0526C(v78);
    v51 = *(_QWORD **)&v198[0];
    sub_1009CF4D0(v171);
    v52 = v179;
  }
  v79 = (uint64_t)a16;
  sub_100064C78(v53, (uint64_t)v188);
  v80 = sub_100007E8C(&qword_1011D8A50);
  v81 = sub_100007E8C(&qword_1011D3FF0);
  if ((swift_dynamicCast(&v192, v188, v80, v81, 6) & 1) != 0)
  {
    sub_100145714(&v192, v198);
    sub_100064C78(v52, (uint64_t)&v192);
    v82 = v182;
    sub_1009CC2F4(v198, v181, v172, (uint64_t)&v192, v166, a9, v182, (uint64_t)v188);
    v170 = v188[1];
    v171 = v188[0];
    v169 = v188[2];
    v83 = v189;
    v84 = v190;
    sub_10004FF60((uint64_t)&v192, &qword_1011D2F28);
    v85 = sub_100007E8C(&qword_1011D3E28);
    v86 = swift_allocObject(v85, 120, 7);
    v87 = v171;
    *(_OWORD *)(v86 + 16) = v54[170];
    *(_OWORD *)(v86 + 32) = v87;
    v88 = v169;
    *(_OWORD *)(v86 + 48) = v170;
    *(_OWORD *)(v86 + 64) = v88;
    *(_QWORD *)(v86 + 80) = v83;
    *(_QWORD *)(v86 + 88) = v84;
    *(_OWORD *)(v86 + 96) = v191;
    *(_BYTE *)(v86 + 112) = 1;
    *(_QWORD *)&v192 = _swiftEmptyArrayStorage;
    sub_100A0526C(v86);
    v89 = (_QWORD *)v192;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v198);
  }
  else
  {
    v193 = 0u;
    v194 = 0u;
    v192 = 0u;
    sub_10004FF60((uint64_t)&v192, &qword_1011D40C8);
    v89 = _swiftEmptyArrayStorage;
    v82 = v182;
  }
  *(_QWORD *)&v171 = a15;
  *(_QWORD *)&v170 = a14;
  *(_QWORD *)&v169 = a13;
  v167 = a12;
  v168 = a11;
  sub_100064C78(v53, (uint64_t)&v192);
  v90 = sub_100007E8C(&qword_1011D3E68);
  v91 = swift_dynamicCast(v186, &v192, v80, v90, 6);
  v164 = v89;
  v165 = v51;
  if ((v91 & 1) == 0)
  {
    v187 = 0;
    memset(v186, 0, sizeof(v186));
    sub_10004FF60((uint64_t)v186, &qword_1011D40D0);
LABEL_15:
    *(_QWORD *)&v159 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  sub_100064C48(v186, (uint64_t)v198);
  if (!a10)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v198);
    goto LABEL_15;
  }
  v92 = a10;
  v161 = a16;
  v93 = v92;
  sub_1009CC7C8((uint64_t)v198, v92, v168, v52, v167, v169, v170, (uint64_t)&v192, v171, v82);
  v158 = v193;
  v159 = v192;
  v157 = v194;
  v94 = v195;
  v95 = v196;
  v96 = sub_100007E8C(&qword_1011D3E28);
  v97 = swift_allocObject(v96, 120, 7);
  v98 = v159;
  *(_OWORD *)(v97 + 16) = v54[170];
  *(_OWORD *)(v97 + 32) = v98;
  v99 = v157;
  *(_OWORD *)(v97 + 48) = v158;
  *(_OWORD *)(v97 + 64) = v99;
  *(_QWORD *)(v97 + 80) = v94;
  *(_QWORD *)(v97 + 88) = v95;
  v79 = (uint64_t)v161;
  *(_OWORD *)(v97 + 96) = v197;
  *(_BYTE *)(v97 + 112) = 1;
  *(_QWORD *)&v186[0] = _swiftEmptyArrayStorage;
  sub_100A0526C(v97);

  *(_QWORD *)&v159 = *(_QWORD *)&v186[0];
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v198);
LABEL_16:
  v100 = v162;
  v102 = v173;
  v101 = v174;
  v163 = v80;
  sub_100064C78(v53, (uint64_t)v198);
  v103 = String.init<A>(describing:)(v198, v80);
  v161 = v104;
  v162 = v103;
  sub_100064C78(v53, (uint64_t)v198);
  sub_100064C78(v79, (uint64_t)v186);
  v105 = (uint64_t)v175;
  sub_10004A160(v82, (uint64_t)v175, &qword_1011D2EB8);
  sub_10004A160(v100, (uint64_t)v184, &qword_1011D3E60);
  sub_100064C78(v52, (uint64_t)v183);
  v106 = *(unsigned __int8 *)(v102 + 80);
  v107 = (v106 + 96) & ~v106;
  v108 = (v101 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
  v109 = (v108 + 47) & 0xFFFFFFFFFFFFFFF8;
  v110 = (v109 + 15) & 0xFFFFFFFFFFFFFFF8;
  v111 = (v110 + 15) & 0xFFFFFFFFFFFFFFF8;
  v112 = (v111 + 47) & 0xFFFFFFFFFFFFFFF8;
  v113 = (v112 + 23) & 0xFFFFFFFFFFFFFFF8;
  v114 = swift_allocObject(&unk_1010EBD00, v113 + 16, v106 | 7);
  sub_100064C48(v198, v114 + 16);
  sub_100064C48(v186, v114 + 56);
  sub_100065228(v105, v114 + v107, &qword_1011D2EB8);
  sub_100065228((uint64_t)v184, v114 + v108, &qword_1011D3E60);
  v115 = v181;
  *(_QWORD *)(v114 + v109) = v181;
  v116 = v168;
  *(_QWORD *)(v114 + v110) = v168;
  sub_100064C48(v183, v114 + v111);
  v117 = (_QWORD *)(v114 + v112);
  v118 = v169;
  *v117 = v167;
  v117[1] = v118;
  v119 = (_QWORD *)(v114 + v113);
  v120 = v170;
  v121 = v171;
  *v119 = v170;
  v119[1] = v121;
  swift_retain();
  v122 = v116;
  swift_bridgeObjectRetain();
  v123 = sub_1000A0168(v120, v121);
  v124 = v176;
  v125 = UUID.init()(v123);
  v126 = UUID.uuidString.getter(v125);
  v128 = v127;
  (*(void (**)(char *, _QWORD))(v177 + 8))(v124, v178);
  strcpy((char *)v198, "ActionMenu: ");
  BYTE13(v198[0]) = 0;
  HIWORD(v198[0]) = -5120;
  v129._countAndFlagsBits = v162;
  v129._object = v161;
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  v130 = v198[0];
  v131 = sub_100007E8C(&qword_1011D3E28);
  v132 = swift_allocObject(v131, 120, 7);
  v178 = xmmword_100EA7AA0;
  *(_OWORD *)(v132 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v132 + 32) = v126;
  *(_QWORD *)(v132 + 40) = v128;
  *(_OWORD *)(v132 + 48) = v130;
  *(_OWORD *)(v132 + 64) = xmmword_100EA9390;
  *(_QWORD *)(v132 + 80) = 0;
  *(_QWORD *)(v132 + 88) = 0;
  *(_QWORD *)(v132 + 96) = sub_1009CF1B0;
  *(_QWORD *)(v132 + 104) = v114;
  *(_BYTE *)(v132 + 112) = 1;
  sub_100064C78(v180, (uint64_t)v198);
  v133 = sub_100007E8C(&qword_1011D3E70);
  if ((swift_dynamicCast(v184, v198, v163, v133, 6) & 1) != 0)
  {
    sub_100064C48(v184, (uint64_t)v186);
    sub_100064C78(v179, (uint64_t)v184);
    sub_1009CCA0C((uint64_t)v186, v115, v172, (uint64_t)v184, v166, v182, 0, 0, (uint64_t)v198);
    v181 = v198[1];
    v182 = v198[0];
    v180 = v198[2];
    v134 = v199;
    v135 = v200;
    sub_10004FF60((uint64_t)v184, &qword_1011D2F28);
    v136 = swift_allocObject(v131, 120, 7);
    v137 = v182;
    *(_OWORD *)(v136 + 16) = v178;
    *(_OWORD *)(v136 + 32) = v137;
    v138 = v180;
    *(_OWORD *)(v136 + 48) = v181;
    *(_OWORD *)(v136 + 64) = v138;
    *(_QWORD *)(v136 + 80) = v134;
    *(_QWORD *)(v136 + 88) = v135;
    *(_OWORD *)(v136 + 96) = v201;
    *(_BYTE *)(v136 + 112) = 1;
    *(_QWORD *)&v184[0] = _swiftEmptyArrayStorage;
    sub_100A0526C(v136);
    v139 = *(_QWORD **)&v184[0];
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v186);
  }
  else
  {
    v185 = 0;
    memset(v184, 0, sizeof(v184));
    sub_10004FF60((uint64_t)v184, &qword_1011D40D8);
    v139 = _swiftEmptyArrayStorage;
  }
  v140 = sub_100007E8C(&qword_1011D3F18);
  v141 = (_QWORD *)swift_allocObject(v140, 80, 7);
  v141[4] = v160;
  *(_QWORD *)&v182 = v141 + 4;
  v142 = v164;
  v141[5] = v165;
  v141[6] = v142;
  v141[7] = v159;
  v141[8] = v132;
  v141[9] = v139;
  v143 = 4;
  v144 = _swiftEmptyArrayStorage;
  while (1)
  {
    v145 = v141[v143];
    v146 = *(_QWORD *)(v145 + 16);
    v147 = v144[2];
    v148 = v147 + v146;
    if (__OFADD__(v147, v146))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v144);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v148 <= v144[3] >> 1)
    {
      if (*(_QWORD *)(v145 + 16))
        goto LABEL_31;
    }
    else
    {
      if (v147 <= v148)
        v150 = v147 + v146;
      else
        v150 = v147;
      v144 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v150, 1, v144);
      if (*(_QWORD *)(v145 + 16))
      {
LABEL_31:
        v151 = v144[2];
        if ((v144[3] >> 1) - v151 < v146)
          goto LABEL_38;
        v152 = (uint64_t)&v144[11 * v151 + 4];
        sub_100007E8C(&qword_1011D3E30);
        swift_arrayInitWithCopy(v152);
        if (v146)
        {
          v153 = v144[2];
          v154 = __OFADD__(v153, v146);
          v155 = v153 + v146;
          if (v154)
            goto LABEL_39;
          v144[2] = v155;
        }
        goto LABEL_21;
      }
    }
    if (v146)
      goto LABEL_37;
LABEL_21:
    swift_bridgeObjectRelease();
    if (++v143 == 10)
    {
      swift_setDeallocating(v141);
      v156 = sub_100007E8C(&qword_1011D3F20);
      swift_arrayDestroy(v182, 6, v156);
      swift_deallocClassInstance(v141, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

_QWORD *sub_1009C0B08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v27[2];
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t (**)(void));
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v6 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_100007E68(a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = sub_100007E68(a2, v12);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, __n128))(v18 + 16))(v17, v11, v9, v15);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t, __n128))(v23 + 16))(v22, v14, v12, v20);
  sub_10004A160(a3, (uint64_t)v8, &qword_1011D2EB8);
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v24 = static ApplicationCapabilities.Controller.shared;
  swift_retain();
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v17, v24, (uint64_t)v22, (uint64_t)v8, v9, v12, v10, v13, &v29);
  v33 = v29;
  v27[1] = v30;
  v27[0] = v31;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v37 = 4;
  v38 = sub_1009D6A28;
  v39 = 0;
  v40 = 0x4014000000000000;
  v41 = &unk_1011D41F0;
  v42 = 0;
  v43 = &unk_1011D41F8;
  v44 = 0;
  v25 = sub_1009BC070((uint64_t)&v33);
  swift_release();
  swift_release();
  swift_release();
  v28 = _swiftEmptyArrayStorage;
  sub_100A0526C(v25);
  return v28;
}

_QWORD *sub_1009C0D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(uint64_t, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, __n128);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v67[6];
  char v68;
  uint64_t (*v69)(uint64_t (**)(void));
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  v60 = a3;
  v65 = a2;
  v4 = sub_100007E8C(&qword_1011D2EB8);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for Playlist.Entry(0);
  v18 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  v57 = v18;
  __chkstk_darwin(v17);
  v61 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v64 = (char *)&v52 - v21;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v52 - v24;
  v56 = *(void (**)(char *, uint64_t, __n128))(v26 + 16);
  v54 = (char *)&v52 - v24;
  v56((char *)&v52 - v24, a1, v23);
  v27 = a1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v28(v16, v27, v8);
  sub_10004A160(v60, (uint64_t)v7, &qword_1011D2EB8);
  v28(v13, (uint64_t)v16, v8);
  v29 = *(unsigned __int8 *)(v9 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = v29 | 7;
  v60 = swift_allocObject(&unk_1010EBE40, v30 + v10, v29 | 7);
  v32 = v60 + v30;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v34 = v8;
  v53 = v8;
  v33(v32, v13, v8);
  v35 = v55;
  ((void (*)(char *, char *, uint64_t))v56)(v64, v25, v55);
  v36 = v58;
  v33((uint64_t)v58, v16, v34);
  v37 = v57;
  v38 = *(unsigned __int8 *)(v57 + 80);
  v39 = (v38 + 24) & ~v38;
  v40 = (v19 + v29 + v39) & ~v29;
  v41 = swift_allocObject(&unk_1010EBE68, v40 + v10, v31 | v38);
  v42 = v64;
  *(_QWORD *)(v41 + 16) = v65;
  v43 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
  v43(v41 + v39, v42, v35);
  v33(v41 + v40, v36, v53);
  v44 = v61;
  v45 = v35;
  v43((uint64_t)v61, v54, v35);
  v46 = *(unsigned __int8 *)(v62 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = (v63 + v38 + v47) & ~v38;
  v49 = swift_allocObject(&unk_1010EBE90, v48 + v19, v38 | v46 | 7);
  sub_100065228((uint64_t)v59, v49 + v47, &qword_1011D2EB8);
  v43(v49 + v48, v44, v45);
  v67[0] = sub_1009A3D24;
  v67[1] = v60;
  v67[2] = &unk_1011D3470;
  v67[3] = v41;
  v67[4] = &unk_1011D3480;
  v67[5] = v49;
  v68 = 41;
  v69 = sub_10098CA8C;
  v70 = 0;
  v71 = 0x4014000000000000;
  v72 = &unk_1011D3458;
  v73 = 0;
  v74 = &unk_1011D3460;
  v75 = 0;
  swift_retain();
  v50 = sub_1009BC1B4((uint64_t)v67);
  swift_release();
  swift_release();
  swift_release();
  v66 = _swiftEmptyArrayStorage;
  sub_100A0526C(v50);
  return v66;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v9;
  __n128 result;
  _OWORD v11[5];

  sub_1009CC2F4(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t sub_1009C11A0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(char *, char *, uint64_t), int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t (**v16)();
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t (*v24)();
  unint64_t (*v25)();
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  int64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t (**v95)();
  _QWORD *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  _QWORD *v102;
  _OWORD v103[3];
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  unint64_t (*v111[8])();
  _OWORD v112[4];
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[8];
  char v118;
  uint64_t (*v119)(uint64_t (**)(void));
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  _QWORD v126[18];

  *(_QWORD *)&v99 = a8;
  *(_QWORD *)&v98 = a7;
  v101 = a5;
  v97 = a11;
  v96 = (_QWORD *)a10;
  v100 = a9;
  v16 = v111;
  v17 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C78(a1, (uint64_t)v112);
  v20 = sub_100007E8C(&qword_1011D8A50);
  v21 = sub_100007E8C(&qword_1011D4140);
  v22 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast(&v113, v112, v20, v21, 6) & 1) == 0)
  {
    v115 = 0;
    v113 = 0u;
    v114 = 0u;
    sub_10004FF60((uint64_t)&v113, &qword_1011D4148);
    v95 = (unint64_t (**)())_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  sub_100064C48(&v113, (uint64_t)v103);
  sub_100064C78((uint64_t)v103, (uint64_t)v126);
  sub_100064C78(a2, (uint64_t)v117);
  sub_10004A160(a3, (uint64_t)v19, &qword_1011D2EB8);
  if (qword_1011D1C28 != -1)
    goto LABEL_47;
  while (1)
  {
    v23 = static ApplicationCapabilities.Controller.shared;
    swift_retain();
    sub_1009F2FBC(v126, v23, v117, (uint64_t)v19, v111);
    v24 = v111[6];
    v25 = v111[7];
    v26 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v26;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v117[6] = v24;
    v117[7] = v25;
    v118 = 42;
    v119 = sub_10098CA8C;
    v120 = 0;
    v121 = 0x4014000000000000;
    v122 = &unk_1011D4758;
    v123 = 0;
    v124 = &unk_1011D4760;
    v125 = 0;
    v27 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v27;
    v28 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v28;
    v29 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v29;
    v30 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v30;
    v31 = sub_1009BC2F8((uint64_t)v126);
    sub_1009CFF44(v117, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_QWORD *)&v109 = v22;
    sub_100A0526C(v31);
    v95 = (unint64_t (**)())v109;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v103);
LABEL_5:
    v93 = v19;
    sub_10004A160((uint64_t)a4, (uint64_t)&v109, &qword_1011D3E60);
    v94 = a3;
    if (v110)
    {
      sub_100064C48(&v109, (uint64_t)&v113);
      v32 = *(_QWORD *)(a1 + 24);
      v91 = *(_QWORD *)(a1 + 32);
      v33 = sub_100007E68((_QWORD *)a1, v32);
      v92 = a6;
      v34 = v33;
      v35 = *((_QWORD *)&v114 + 1);
      v89 = v115;
      v36 = (_QWORD *)a1;
      v37 = sub_100007E68(&v113, *((uint64_t *)&v114 + 1));
      v90 = &v88;
      v38 = __chkstk_darwin(v37);
      v40 = (char *)&v88 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      v42 = (*(uint64_t (**)(char *, _QWORD *, uint64_t, __n128))(v41 + 16))(v40, v34, v32, v38);
      v43 = __chkstk_darwin(v42);
      v45 = (char *)&v88 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t, __n128))(v46 + 16))(v45, v37, v35, v43);
      v47 = (uint64_t)v93;
      sub_10004A160(a3, (uint64_t)v93, &qword_1011D2EB8);
      v48 = (uint64_t)v45;
      a6 = v92;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v40, v48, v47, v32, v35, v91, v89, v112);
      v49 = *((_OWORD *)v16 + 6);
      v50 = *((_OWORD *)v16 + 7);
      v51 = *((_OWORD *)v16 + 5);
      v103[0] = *((_OWORD *)v16 + 4);
      v103[1] = v51;
      v103[2] = v49;
      v104 = v50;
      LOBYTE(v105) = 17;
      *((_QWORD *)&v105 + 1) = sub_1009D6A18;
      *(_QWORD *)&v106 = 0;
      *((_QWORD *)&v106 + 1) = 0x4014000000000000;
      *(_QWORD *)&v107 = &unk_1011D4210;
      *((_QWORD *)&v107 + 1) = 0;
      *(_QWORD *)&v108 = &unk_1011D4218;
      *((_QWORD *)&v108 + 1) = 0;
      v52 = v106;
      *((_OWORD *)v16 + 15) = v105;
      *((_OWORD *)v16 + 16) = v52;
      v53 = v108;
      *((_OWORD *)v16 + 17) = v107;
      *((_OWORD *)v16 + 18) = v53;
      v54 = v103[1];
      *((_OWORD *)v16 + 11) = v103[0];
      *((_OWORD *)v16 + 12) = v54;
      v55 = v104;
      *((_OWORD *)v16 + 13) = v103[2];
      *((_OWORD *)v16 + 14) = v55;
      v56 = sub_1009BC43C((uint64_t)v117);
      sub_1001C748C(v103);
      v102 = _swiftEmptyArrayStorage;
      sub_100A0526C(v56);
      v57 = v102;
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v113);
    }
    else
    {
      sub_10004FF60((uint64_t)&v109, &qword_1011D3E60);
      v57 = _swiftEmptyArrayStorage;
      v36 = (_QWORD *)a1;
      v47 = (uint64_t)v93;
    }
    v58 = v36[3];
    v59 = v36[4];
    v60 = sub_100007E68(v36, v58);
    v19 = (char *)&v88;
    v61 = __chkstk_darwin(v60);
    v63 = (char *)&v88 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v64 + 16))(v63, v61);
    sub_100064C78(v98, (uint64_t)v103);
    sub_10004A160(v94, v47, &qword_1011D2EB8);
    v87 = v47;
    v22 = v96;
    a1 = v97;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v63, v101, (void *)a6, (uint64_t)v103, v99, v100, (uint64_t)v96, v97, (unint64_t (**)())&v113, v87, v58, v59);
    v65 = *(_OWORD *)(v16 + 17);
    v98 = *(_OWORD *)(v16 + 19);
    v99 = v65;
    *(_QWORD *)&v103[0] = v113;
    *(_OWORD *)((char *)v103 + 8) = v65;
    *(_OWORD *)((char *)&v103[1] + 8) = v98;
    *((_QWORD *)&v103[2] + 1) = v116;
    LOBYTE(v104) = 5;
    *((_QWORD *)&v104 + 1) = sub_10098CA8C;
    *(_QWORD *)&v105 = 0;
    *((_QWORD *)&v105 + 1) = 0x4014000000000000;
    *(_QWORD *)&v106 = &unk_1011D4590;
    *((_QWORD *)&v106 + 1) = 0;
    *(_QWORD *)&v107 = &unk_1011D4598;
    *((_QWORD *)&v107 + 1) = 0;
    swift_retain();
    v66 = (id)a6;
    swift_bridgeObjectRetain();
    sub_1000A0168((uint64_t)v22, a1);
    v67 = sub_1009BC580((uint64_t)v103);
    swift_release();
    swift_release();
    swift_release();
    v68 = sub_100007E8C(&qword_1011D3F18);
    v69 = (_QWORD *)swift_allocObject(v68, 56, 7);
    v16 = v95;
    v69[4] = v95;
    a3 = (uint64_t)(v69 + 4);
    v69[5] = v57;
    v69[6] = v67;
    v70 = (int64_t)v16[2];
    swift_bridgeObjectRetain();
    v71 = sub_1009B9948(0, v70, 1, _swiftEmptyArrayStorage);
    a4 = v71;
    if (v16[2])
    {
      v72 = v71[2];
      if ((v71[3] >> 1) - v72 < v70)
        goto LABEL_44;
      v73 = (uint64_t)&v71[11 * v72 + 4];
      sub_100007E8C(&qword_1011D3E30);
      result = swift_arrayInitWithCopy(v73);
      if (v70)
      {
        v75 = a4[2];
        v76 = __OFADD__(v75, v70);
        v77 = v75 + v70;
        if (v76)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v77;
      }
    }
    else if (v70)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    v78 = v69[5];
    v19 = *(char **)(v78 + 16);
    a6 = a4[2];
    v16 = (unint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19)
          goto LABEL_17;
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16)
      v81 = (int64_t)&v19[a6];
    else
      v81 = a6;
    a4 = sub_1009B9948((_QWORD *)1, v81, 1, a4);
    a6 = a4[2];
    if (*(_QWORD *)(v78 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19)
        goto LABEL_45;
      sub_100007E8C(&qword_1011D3E30);
      result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
      if (v19)
      {
        v79 = a4[2];
        v76 = __OFADD__(v79, v19);
        v80 = &v19[v79];
        if (v76)
          goto LABEL_49;
        a4[2] = v80;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19)
      goto LABEL_42;
LABEL_27:
    swift_bridgeObjectRelease();
    v82 = v69[6];
    v19 = *(char **)(v82 + 16);
    a6 = a4[2];
    v16 = (unint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19)
          goto LABEL_39;
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16)
      v85 = (int64_t)&v19[a6];
    else
      v85 = a6;
    a4 = sub_1009B9948((_QWORD *)1, v85, 1, a4);
    a6 = a4[2];
    if (!*(_QWORD *)(v82 + 16))
    {
LABEL_39:
      if (!v19)
        goto LABEL_40;
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once(&qword_1011D1C28, sub_100A2D554);
  }
  sub_100007E8C(&qword_1011D3E30);
  result = swift_arrayInitWithCopy(&a4[11 * a6 + 4]);
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_setDeallocating(v69);
    v86 = sub_100007E8C(&qword_1011D3F20);
    swift_arrayDestroy(a3, 3, v86);
    swift_deallocClassInstance(v69, 32, 7);
    return (uint64_t)a4;
  }
  v83 = a4[2];
  v76 = __OFADD__(v83, v19);
  v84 = &v19[v83];
  if (!v76)
  {
    a4[2] = v84;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v10;
  __n128 result;
  _OWORD v12[5];

  sub_1009CCA0C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

void sub_1009C1A58(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  int64_t v71;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  unint64_t (*v92)();
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[136];
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[136];
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[136];
  _BYTE v105[16];
  id v106;
  _BYTE v107[16];
  id v108;
  _BYTE v109[16];
  id v110;
  unint64_t (*v111)();
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  char v115;
  uint64_t (*v116)(uint64_t (**)(void));
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;

  v87 = a6;
  v88 = a8;
  v90 = a7;
  v91 = (_QWORD *)a4;
  v82 = a5;
  v89 = a9;
  v13 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v86 = a1[4];
  v17 = sub_100007E68(a1, v16);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v21 + 16))(v20, v18);
  v22 = a8;
  v23 = (uint64_t)v15;
  sub_10004A160(v22, (uint64_t)v15, &qword_1011D2EB8);
  v24 = a2;
  v25 = a3;
  v26 = v82;
  swift_bridgeObjectRetain();
  v27 = v87;
  v28 = v90;
  sub_1000A0168(v87, v90);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v20, (uint64_t)v24, (uint64_t)v25, (uint64_t)v91, v26, v27, v28, v23, &v92, v16, v86);
  v85 = v93;
  v112 = v93;
  v84 = v94;
  v113 = v94;
  v111 = v92;
  v114 = v95;
  v115 = 23;
  v116 = sub_1009D6A28;
  v117 = 0;
  v118 = 0x4014000000000000;
  v119 = &unk_1011D45C8;
  v120 = 0;
  v121 = &unk_1011D45D0;
  v122 = 0;
  v86 = sub_1009BC6C4((uint64_t)&v111);
  swift_release();
  swift_release();
  swift_release();
  v29 = a1[3];
  *(_QWORD *)&v85 = a1[4];
  v30 = sub_100007E68(a1, v29);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v34 + 16))(v33, v31);
  sub_100064C78(v89, (uint64_t)v104);
  sub_10004A160(v88, v23, &qword_1011D2EB8);
  v35 = v24;
  v36 = v25;
  *(_QWORD *)&v84 = v36;
  swift_bridgeObjectRetain();
  v37 = v87;
  v38 = v90;
  sub_1000A0168(v87, v90);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v33, v35, (uint64_t)v36, (uint64_t)v104, (uint64_t)v91, v26, v37, &v96, v38, v23, v29, v85);
  sub_1009DF590(&v96, (uint64_t)v98);
  sub_1009CDD08(&v96, &v110);
  sub_1009CDD44(&v110);
  sub_100065228((uint64_t)&v97, (uint64_t)v109, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v109);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&v85 = sub_1009BC808((uint64_t)v98);
  sub_1009CDD6C((uint64_t)v98);
  v39 = a1[3];
  v81 = a1[4];
  v40 = sub_100007E68(a1, v39);
  v41 = __chkstk_darwin(v40);
  v43 = (char *)&v80 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v44 + 16))(v43, v41);
  sub_100064C78(v89, (uint64_t)v104);
  v45 = v23;
  v83 = v23;
  sub_10004A160(v88, v23, &qword_1011D2EB8);
  v46 = v35;
  v47 = (id)v84;
  v48 = v26;
  swift_bridgeObjectRetain();
  v49 = v90;
  sub_1000A0168(v37, v90);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v43, v46, (uint64_t)v47, (uint64_t)v104, (uint64_t)v91, v48, v37, &v99, v49, v45, v39, v81);
  sub_1009DF590(&v99, (uint64_t)v101);
  sub_1009CDD08(&v99, &v108);
  sub_1009CDD44(&v108);
  sub_100065228((uint64_t)&v100, (uint64_t)v107, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v107);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&v84 = sub_1009BC808((uint64_t)v101);
  sub_1009CDD6C((uint64_t)v101);
  v51 = a1[3];
  v50 = a1[4];
  v52 = sub_100007E68(a1, v51);
  v53 = __chkstk_darwin(v52);
  v55 = (char *)&v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v56 + 16))(v55, v53);
  sub_100064C78(v89, (uint64_t)v104);
  v57 = v83;
  sub_10004A160(v88, v83, &qword_1011D2EB8);
  v58 = v46;
  v59 = v47;
  swift_bridgeObjectRetain();
  v60 = v87;
  v61 = v90;
  sub_1000A0168(v87, v90);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v55, v58, (uint64_t)v59, (uint64_t)v104, (uint64_t)v91, v48, v60, &v102, v61, v57, v51, v50);
  sub_1009DF590(&v102, (uint64_t)v104);
  sub_1009CDD08(&v102, &v106);
  sub_1009CDD44(&v106);
  sub_100065228((uint64_t)&v103, (uint64_t)v105, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v105);
  swift_release();
  swift_release();
  swift_release();
  v62 = sub_1009BC808((uint64_t)v104);
  sub_1009CDD6C((uint64_t)v104);
  v63 = sub_100007E8C(&qword_1011D3F18);
  v64 = (_QWORD *)swift_allocObject(v63, 64, 7);
  v64[4] = v86;
  v91 = v64 + 4;
  v65 = v84;
  v64[5] = v85;
  v64[6] = v65;
  v64[7] = v62;
  v66 = _swiftEmptyArrayStorage;
  v67 = 4;
  while (1)
  {
    v68 = v64[v67];
    v69 = *(_QWORD *)(v68 + 16);
    v70 = v66[2];
    v71 = v70 + v69;
    if (__OFADD__(v70, v69))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v66);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v71 <= v66[3] >> 1)
    {
      if (*(_QWORD *)(v68 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v70 <= v71)
        v73 = v70 + v69;
      else
        v73 = v70;
      v66 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v73, 1, v66);
      if (*(_QWORD *)(v68 + 16))
      {
LABEL_13:
        v74 = v66[2];
        if ((v66[3] >> 1) - v74 < v69)
          goto LABEL_20;
        v75 = (uint64_t)&v66[11 * v74 + 4];
        sub_100007E8C(&qword_1011D3E30);
        swift_arrayInitWithCopy(v75);
        if (v69)
        {
          v76 = v66[2];
          v77 = __OFADD__(v76, v69);
          v78 = v76 + v69;
          if (v77)
            goto LABEL_21;
          v66[2] = v78;
        }
        goto LABEL_3;
      }
    }
    if (v69)
      goto LABEL_19;
LABEL_3:
    swift_bridgeObjectRelease();
    if (++v67 == 8)
    {
      swift_setDeallocating(v64);
      v79 = sub_100007E8C(&qword_1011D3F20);
      swift_arrayDestroy(v91, 4, v79);
      swift_deallocClassInstance(v64, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

void static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  __int128 v51[3];

  v46 = a5;
  v47 = a6;
  v42 = a3;
  v44 = a8;
  v45 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D2EB8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C78(a1, (uint64_t)v51);
  v21 = sub_100007E8C(&qword_1011D3E68);
  v43 = String.init<A>(describing:)(v51, v21);
  v23 = v22;
  sub_100064C78(a1, (uint64_t)v51);
  sub_10004A160(a4, (uint64_t)v50, &qword_1011D2F28);
  sub_10004A160(a10, (uint64_t)v20, &qword_1011D2EB8);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 144) & ~v24;
  v26 = (_QWORD *)swift_allocObject(&unk_1010EB220, v25 + v19, v24 | 7);
  sub_100064C48(v51, (uint64_t)(v26 + 2));
  v27 = v42;
  v26[7] = a2;
  v26[8] = v27;
  sub_100065228((uint64_t)v50, (uint64_t)(v26 + 9), &qword_1011D2F28);
  v28 = v47;
  v26[14] = v46;
  v26[15] = v28;
  v29 = (uint64_t)v26 + v25;
  v31 = v44;
  v30 = v45;
  v26[16] = v44;
  v26[17] = v30;
  sub_100065228((uint64_t)v20, v29, &qword_1011D2EB8);
  v32 = a2;
  v33 = v27;
  swift_bridgeObjectRetain();
  v34 = sub_1000A0168(v31, v30);
  v35 = UUID.init()(v34);
  v36 = UUID.uuidString.getter(v35);
  v38 = v37;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v39._countAndFlagsBits = v43;
  v39._object = v23;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v23);
  v40 = v51[0];
  *(_QWORD *)a7 = v36;
  *(_QWORD *)(a7 + 8) = v38;
  *(_OWORD *)(a7 + 16) = v40;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = 0xE000000000000000;
  *(_QWORD *)(a7 + 48) = 0;
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = sub_1009CCEB8;
  *(_QWORD *)(a7 + 72) = v26;
}

void sub_1009C23EC(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD v91[8];
  _BYTE v92[136];
  uint64_t v93;
  _QWORD v94[8];
  _BYTE v95[136];
  uint64_t v96;
  _QWORD v97[8];
  _BYTE v98[136];
  uint64_t v99;
  _QWORD v100[8];
  _BYTE v101[136];
  _BYTE v102[16];
  id v103;
  _BYTE v104[16];
  id v105;
  _BYTE v106[16];
  id v107;
  _BYTE v108[16];
  id v109[2];

  v85 = a8;
  v86 = a4;
  v88 = a7;
  v89 = (_QWORD *)a5;
  v79 = a6;
  v87 = a9;
  v13 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v13);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v84 = a1[4];
  v17 = sub_100007E68(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  sub_10004A160(a4, (uint64_t)v101, &qword_1011D2F28);
  sub_10004A160(a9, (uint64_t)v15, &qword_1011D2EB8);
  v21 = a2;
  v22 = a3;
  v23 = v79;
  swift_bridgeObjectRetain();
  v24 = v88;
  v25 = v85;
  sub_1000A0168(v88, v85);
  v77 = v25;
  v26 = v22;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, v21, (uint64_t)v22, (uint64_t)v101, (uint64_t)v89, v23, v24, &v90, v77, (uint64_t)v15, v16, v84);
  sub_1009DF590(&v90, (uint64_t)v92);
  sub_1009CDD08(&v90, v109);
  sub_1009CDD44(v109);
  sub_100065228((uint64_t)v91, (uint64_t)v108, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v108);
  swift_release(v91[3]);
  swift_release(v91[5]);
  swift_release(v91[7]);
  v84 = sub_1009BC808((uint64_t)v92);
  sub_1009CDD6C((uint64_t)v92);
  v27 = a1[3];
  v83 = a1[4];
  v28 = sub_100007E68(a1, v27);
  __chkstk_darwin(v28);
  v30 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_10004A160(v86, (uint64_t)v101, &qword_1011D2F28);
  v32 = (uint64_t)v15;
  sub_10004A160(v87, (uint64_t)v15, &qword_1011D2EB8);
  v33 = v21;
  v34 = v26;
  v35 = v23;
  swift_bridgeObjectRetain();
  v36 = v88;
  v37 = v85;
  sub_1000A0168(v88, v85);
  v78 = v37;
  v38 = v33;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v30, v33, (uint64_t)v34, (uint64_t)v101, (uint64_t)v89, v35, v36, &v93, v78, v32, v27, v83);
  sub_1009DF590(&v93, (uint64_t)v95);
  sub_1009CDD08(&v93, &v107);
  sub_1009CDD44(&v107);
  sub_100065228((uint64_t)v94, (uint64_t)v106, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v106);
  swift_release(v94[3]);
  swift_release(v94[5]);
  swift_release(v94[7]);
  v83 = sub_1009BC808((uint64_t)v95);
  sub_1009CDD6C((uint64_t)v95);
  v39 = a1[3];
  v82 = a1[4];
  v40 = sub_100007E68(a1, v39);
  __chkstk_darwin(v40);
  v42 = (char *)&v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  sub_10004A160(v86, (uint64_t)v101, &qword_1011D2F28);
  v44 = v32;
  sub_10004A160(v87, v32, &qword_1011D2EB8);
  v45 = v38;
  v80 = v45;
  v46 = v34;
  v81 = v46;
  v47 = v35;
  swift_bridgeObjectRetain();
  v48 = v88;
  v49 = v85;
  sub_1000A0168(v88, v85);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v42, v45, (uint64_t)v46, (uint64_t)v101, (uint64_t)v89, v47, v48, &v96, v49, v44, v39, v82);
  sub_1009DF590(&v96, (uint64_t)v98);
  sub_1009CDD08(&v96, &v105);
  sub_1009CDD44(&v105);
  sub_100065228((uint64_t)v97, (uint64_t)v104, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v104);
  swift_release(v97[3]);
  swift_release(v97[5]);
  swift_release(v97[7]);
  v82 = sub_1009BC808((uint64_t)v98);
  sub_1009CDD6C((uint64_t)v98);
  v51 = a1[3];
  v50 = a1[4];
  v52 = sub_100007E68(a1, v51);
  __chkstk_darwin(v52);
  v54 = (char *)&v79 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v55 + 16))(v54);
  sub_10004A160(v86, (uint64_t)v101, &qword_1011D2F28);
  sub_10004A160(v87, v44, &qword_1011D2EB8);
  v56 = v80;
  v57 = v81;
  swift_bridgeObjectRetain();
  v58 = v88;
  sub_1000A0168(v88, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v54, v56, (uint64_t)v57, (uint64_t)v101, (uint64_t)v89, v47, v58, &v99, v49, v44, v51, v50);
  sub_1009DF590(&v99, (uint64_t)v101);
  sub_1009CDD08(&v99, &v103);
  sub_1009CDD44(&v103);
  sub_100065228((uint64_t)v100, (uint64_t)v102, &qword_1011D3FC8);
  sub_1001C7464((uint64_t)v102);
  swift_release(v100[3]);
  swift_release(v100[5]);
  swift_release(v100[7]);
  v59 = sub_1009BC808((uint64_t)v101);
  sub_1009CDD6C((uint64_t)v101);
  v60 = sub_100007E8C(&qword_1011D3F18);
  v61 = (_QWORD *)swift_allocObject(v60, 64, 7);
  v61[4] = v84;
  v89 = v61 + 4;
  v62 = v82;
  v61[5] = v83;
  v61[6] = v62;
  v61[7] = v59;
  v63 = _swiftEmptyArrayStorage;
  v64 = 4;
  while (1)
  {
    v65 = v61[v64];
    v66 = *(_QWORD *)(v65 + 16);
    v67 = v63[2];
    v68 = v67 + v66;
    if (__OFADD__(v67, v66))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v63);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v68 <= v63[3] >> 1)
    {
      if (*(_QWORD *)(v65 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v67 <= v68)
        v70 = v67 + v66;
      else
        v70 = v67;
      v63 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v70, 1, v63);
      if (*(_QWORD *)(v65 + 16))
      {
LABEL_13:
        v71 = v63[2];
        if ((v63[3] >> 1) - v71 < v66)
          goto LABEL_20;
        v72 = (uint64_t)&v63[11 * v71 + 4];
        sub_100007E8C(&qword_1011D3E30);
        swift_arrayInitWithCopy(v72);
        if (v66)
        {
          v73 = v63[2];
          v74 = __OFADD__(v73, v66);
          v75 = v73 + v66;
          if (v74)
            goto LABEL_21;
          v63[2] = v75;
        }
        goto LABEL_3;
      }
    }
    if (v66)
      goto LABEL_19;
LABEL_3:
    swift_bridgeObjectRelease(v65);
    if (++v64 == 8)
    {
      swift_setDeallocating(v61);
      v76 = sub_100007E8C(&qword_1011D3F20);
      swift_arrayDestroy(v89, 4, v76);
      swift_deallocClassInstance(v61, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_1009C2B58(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  int64_t v100;
  char *v101;
  int64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  int64_t v132;
  uint64_t result;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  uint64_t v142;
  int64_t v143;
  int64_t v144;
  int64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  _OWORD v164[12];
  uint64_t v165;
  __int128 v166[3];
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  _OWORD v171[5];
  uint64_t v172;
  __int128 v173[3];
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  __int128 v184[3];
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  _BYTE v189[25];
  char v190;
  unint64_t (*v191)(uint64_t (**)(void));
  uint64_t v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  _OWORD v198[4];
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211[2];
  _OWORD v212[4];
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  _OWORD v217[8];
  _OWORD v218[9];

  *(_QWORD *)&v162 = a6;
  *(_QWORD *)&v163 = a5;
  v160 = a4;
  v13 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v13);
  v161 = (uint64_t)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1009BC964(a1);
  v16 = v15;
  v17 = _swiftEmptyArrayStorage;
  if ((a2 & 1) != 0)
  {
    v152 = a7;
    v153 = a8;
    v154 = v15;
    v18 = a3[3];
    *(_QWORD *)&v158 = a3[4];
    *(_QWORD *)&v157 = a3[5];
    v19 = sub_100007E68(a3, v18);
    v20 = v160[3];
    *(_QWORD *)&v156 = v160[4];
    v21 = sub_100007E68(v160, v20);
    *(_QWORD *)&v155 = &v151;
    __chkstk_darwin(v21);
    v159 = a3;
    v23 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v25 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v24 + 16))(v23, v19, v18);
    __chkstk_darwin(v25);
    v27 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v28 + 16))(v27, v21, v20);
    v29 = v161;
    sub_10004A160(v162, v161, &qword_1011D2EB8);
    v30 = v163;
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v23, v163, (uint64_t)v27, v29, v18, v20, v158, v157, (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v212, v156);
    v31 = *(_QWORD *)&v212[0];
    v32 = *((_QWORD *)&v212[3] + 1);
    v156 = *(_OWORD *)((char *)v212 + 8);
    v157 = *(_OWORD *)((char *)&v212[1] + 8);
    v158 = *(_OWORD *)((char *)&v212[2] + 8);
    v33 = (_OWORD *)swift_allocObject(&unk_1010EB7D8, 80, 7);
    v34 = v212[1];
    v33[1] = v212[0];
    v33[2] = v34;
    v35 = v212[3];
    v33[3] = v212[2];
    v33[4] = v35;
    *(_OWORD *)((char *)v198 + 8) = v156;
    *(_OWORD *)((char *)&v198[1] + 8) = v157;
    *(_OWORD *)((char *)&v198[2] + 8) = v158;
    *(_QWORD *)&v198[0] = v31;
    *((_QWORD *)&v198[3] + 1) = v32;
    LOBYTE(v199) = 8;
    *((_QWORD *)&v199 + 1) = sub_100998460;
    *(_QWORD *)&v200 = v33;
    *((_QWORD *)&v200 + 1) = 0x4014000000000000;
    *(_QWORD *)&v201 = &unk_1011D31A8;
    *((_QWORD *)&v201 + 1) = 0;
    *(_QWORD *)&v202 = &unk_1011D31B0;
    *((_QWORD *)&v202 + 1) = 0;
    v218[2] = v198[2];
    v218[3] = v198[3];
    v218[0] = v198[0];
    v218[1] = v198[1];
    v218[4] = v199;
    v218[5] = v200;
    v218[6] = v201;
    v218[7] = v202;
    swift_retain(v30);
    swift_retain(v156);
    swift_retain(v157);
    swift_retain(v158);
    swift_retain(v32);
    *(_QWORD *)&v158 = sub_1009BCAA8((uint64_t)v218);
    sub_1009CFF44(v198, (void (*)(uint64_t))&_swift_release);
    v36 = v159;
    v37 = v159[3];
    v38 = v159[4];
    v39 = v159[5];
    v40 = sub_100007E68(v159, v37);
    __chkstk_darwin(v40);
    v42 = (char *)&v151 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    v44 = v161;
    sub_10004A160(v162, v161, &qword_1011D2EB8);
    v45 = (uint64_t)v42;
    v46 = v163;
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v45, v163, v44, v37, v38, v39, (uint64_t (**)())&v213);
    v203 = v213;
    v204 = v214;
    v205 = v215;
    v206 = v216;
    LOBYTE(v207) = 40;
    *((_QWORD *)&v207 + 1) = sub_1009A1F94;
    *(_QWORD *)&v208 = 0;
    *((_QWORD *)&v208 + 1) = 0x4014000000000000;
    *(_QWORD *)&v209 = &unk_1011D33F0;
    *((_QWORD *)&v209 + 1) = 0;
    *(_QWORD *)&v210 = &unk_1011D33F8;
    *((_QWORD *)&v210 + 1) = 0;
    v217[4] = v207;
    v217[5] = v208;
    v217[6] = v209;
    v217[7] = v210;
    v217[0] = v213;
    v217[1] = v214;
    v217[2] = v215;
    v217[3] = v216;
    swift_retain(v46);
    *(_QWORD *)&v157 = sub_1009BCBEC((uint64_t)v217);
    sub_1009CFF44(&v203, (void (*)(uint64_t))&_swift_release);
    v47 = v36[3];
    *(_QWORD *)&v156 = v36[4];
    *(_QWORD *)&v155 = v36[5];
    v48 = sub_100007E68(v36, v47);
    v50 = v160[3];
    v49 = v160[4];
    v51 = sub_100007E68(v160, v50);
    __chkstk_darwin(v51);
    v53 = (char *)&v151 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v54 + 16))(v53, v48, v47);
    __chkstk_darwin(v55);
    v57 = (char *)&v151 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v58 + 16))(v57, v51, v50);
    v59 = v161;
    sub_10004A160(v162, v161, &qword_1011D2EB8);
    v60 = (uint64_t (*)())v163;
    swift_retain(v163);
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v53, (uint64_t)v57, v60, v59, v47, v50, v156, v155, (uint64_t (**)())v173, v49);
    sub_10099D048((uint64_t)v173, (uint64_t)v166);
    v61 = 4;
    v62 = swift_allocObject(&unk_1010EB800, 32, 7);
    *(_QWORD *)(v62 + 16) = &unk_1011D3210;
    *(_QWORD *)(v62 + 24) = 0;
    v190 = 39;
    v187 = v169;
    v188 = v170;
    *(_OWORD *)v189 = v171[0];
    *(_OWORD *)&v189[9] = *(_OWORD *)((char *)v171 + 9);
    v184[2] = v166[2];
    v185 = v167;
    v186 = v168;
    v184[0] = v166[0];
    v184[1] = v166[1];
    v191 = sub_10099A080;
    v192 = 0;
    v193 = 0x403E000000000000;
    v194 = &unk_1011D3228;
    v195 = v62;
    v196 = &unk_1011D3218;
    v197 = 0;
    sub_10099DD20(v173);
    v63 = sub_100007E8C(&qword_1011D3E28);
    v64 = swift_allocObject(v63, 120, 7);
    *(_OWORD *)(v64 + 16) = xmmword_100EA7AA0;
    LOBYTE(v57) = v190;
    sub_10004A160((uint64_t)v184, (uint64_t)v173, &qword_1011D32C0);
    v65 = swift_allocObject(&unk_1010EB828, 216, 7);
    v66 = v182;
    *(_OWORD *)(v65 + 176) = v181;
    *(_OWORD *)(v65 + 192) = v66;
    *(_QWORD *)(v65 + 208) = v183;
    v67 = v178;
    *(_OWORD *)(v65 + 112) = v177;
    *(_OWORD *)(v65 + 128) = v67;
    v68 = v180;
    *(_OWORD *)(v65 + 144) = v179;
    *(_OWORD *)(v65 + 160) = v68;
    v69 = v174;
    *(_OWORD *)(v65 + 48) = v173[2];
    *(_OWORD *)(v65 + 64) = v69;
    v70 = v176;
    *(_OWORD *)(v65 + 80) = v175;
    *(_OWORD *)(v65 + 96) = v70;
    v71 = v173[1];
    *(_OWORD *)(v65 + 16) = v173[0];
    *(_OWORD *)(v65 + 32) = v71;
    sub_10004A160((uint64_t)v184, (uint64_t)v166, &qword_1011D32C0);
    v72 = swift_allocObject(&unk_1010EB850, 216, 7);
    v73 = v171[4];
    *(_OWORD *)(v72 + 176) = v171[3];
    *(_OWORD *)(v72 + 192) = v73;
    *(_QWORD *)(v72 + 208) = v172;
    v74 = v171[0];
    *(_OWORD *)(v72 + 112) = v170;
    *(_OWORD *)(v72 + 128) = v74;
    v75 = v171[2];
    *(_OWORD *)(v72 + 144) = v171[1];
    *(_OWORD *)(v72 + 160) = v75;
    v76 = v167;
    *(_OWORD *)(v72 + 48) = v166[2];
    *(_OWORD *)(v72 + 64) = v76;
    v77 = v169;
    *(_OWORD *)(v72 + 80) = v168;
    *(_OWORD *)(v72 + 96) = v77;
    v78 = v166[1];
    *(_OWORD *)(v72 + 16) = v166[0];
    *(_OWORD *)(v72 + 32) = v78;
    sub_10004A160((uint64_t)v184, (uint64_t)v164, &qword_1011D32C0);
    v79 = swift_allocObject(&unk_1010EB878, 216, 7);
    v80 = v164[11];
    *(_OWORD *)(v79 + 176) = v164[10];
    *(_OWORD *)(v79 + 192) = v80;
    *(_QWORD *)(v79 + 208) = v165;
    v81 = v164[7];
    *(_OWORD *)(v79 + 112) = v164[6];
    *(_OWORD *)(v79 + 128) = v81;
    v82 = v164[9];
    *(_OWORD *)(v79 + 144) = v164[8];
    *(_OWORD *)(v79 + 160) = v82;
    v83 = v164[3];
    *(_OWORD *)(v79 + 48) = v164[2];
    *(_OWORD *)(v79 + 64) = v83;
    v84 = v164[5];
    *(_OWORD *)(v79 + 80) = v164[4];
    *(_OWORD *)(v79 + 96) = v84;
    v85 = v164[1];
    *(_OWORD *)(v79 + 16) = v164[0];
    *(_OWORD *)(v79 + 32) = v85;
    *(_BYTE *)(v64 + 32) = (_BYTE)v57;
    *(_QWORD *)(v64 + 40) = sub_1009CE61C;
    *(_QWORD *)(v64 + 48) = v65;
    *(_QWORD *)(v64 + 56) = sub_1009CE6E0;
    *(_QWORD *)(v64 + 64) = v72;
    *(_QWORD *)(v64 + 72) = &unk_1011D4010;
    *(_QWORD *)(v64 + 80) = v79;
    *(_BYTE *)(v64 + 112) = 0;
    sub_10004FF60((uint64_t)v184, &qword_1011D32C0);
    v86 = v159[3];
    v87 = v159[4];
    v88 = v159[5];
    v89 = sub_100007E68(v159, v86);
    __chkstk_darwin(v89);
    v91 = (char *)&v151 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v92 + 16))(v91);
    sub_100064C78((uint64_t)v160, (uint64_t)v184);
    v93 = v59;
    sub_10004A160(v162, v59, &qword_1011D2EB8);
    v94 = v163;
    swift_retain(v163);
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v91, v94, v184, v93, v86, v87, v88, (unint64_t (**)())v164);
    v95 = *((_QWORD *)&v164[2] + 1);
    v155 = *(_OWORD *)((char *)&v164[1] + 8);
    v156 = *(_OWORD *)((char *)v164 + 8);
    *(__int128 *)((char *)v184 + 8) = *(_OWORD *)((char *)v164 + 8);
    *(__int128 *)((char *)&v184[1] + 8) = *(_OWORD *)((char *)&v164[1] + 8);
    *(_QWORD *)&v184[0] = *(_QWORD *)&v164[0];
    *((_QWORD *)&v184[2] + 1) = *((_QWORD *)&v164[2] + 1);
    LOBYTE(v185) = 9;
    *((_QWORD *)&v185 + 1) = sub_10098CA8C;
    *(_QWORD *)&v186 = 0;
    *((_QWORD *)&v186 + 1) = 0x4014000000000000;
    *(_QWORD *)&v187 = &unk_1011D3300;
    *((_QWORD *)&v187 + 1) = 0;
    *(_QWORD *)&v188 = &unk_1011D3308;
    *((_QWORD *)&v188 + 1) = 0;
    v96 = sub_1009BCD30((uint64_t)v184);
    swift_release(v95);
    swift_release(v155);
    swift_release(v156);
    v97 = sub_100007E8C(&qword_1011D3F18);
    v98 = (_QWORD *)swift_allocObject(v97, 64, 7);
    v98[4] = v158;
    *(_QWORD *)&v156 = v98 + 4;
    v98[5] = v157;
    v98[6] = v64;
    v98[7] = v96;
    v17 = _swiftEmptyArrayStorage;
    v99 = 88;
    v100 = (int64_t)&qword_1011D3E30;
    while (1)
    {
      v101 = (char *)v98[v61];
      v102 = *((_QWORD *)v101 + 2);
      v103 = (_QWORD *)v17[2];
      v104 = (_QWORD *)((char *)v103 + v102);
      if (__OFADD__(v103, v102))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v17);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && (uint64_t)v104 <= v17[3] >> 1)
      {
        if (*((_QWORD *)v101 + 2))
          goto LABEL_14;
      }
      else
      {
        if ((uint64_t)v103 <= (uint64_t)v104)
          v106 = (int64_t)v103 + v102;
        else
          v106 = (int64_t)v103;
        v17 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v106, 1, v17);
        if (*((_QWORD *)v101 + 2))
        {
LABEL_14:
          v107 = v17[2];
          if ((v17[3] >> 1) - v107 < v102)
            goto LABEL_40;
          v103 = &v17[11 * v107 + 4];
          v104 = v101 + 32;
          sub_100007E8C(&qword_1011D3E30);
          swift_arrayInitWithCopy(v103);
          if (v102)
          {
            v108 = v17[2];
            v109 = __OFADD__(v108, v102);
            v110 = v108 + v102;
            if (v109)
              goto LABEL_41;
            v17[2] = v110;
          }
          goto LABEL_4;
        }
      }
      if (v102)
        goto LABEL_39;
LABEL_4:
      swift_bridgeObjectRelease(v101);
      if (++v61 == 8)
      {
        swift_setDeallocating(v98);
        v111 = sub_100007E8C(&qword_1011D3F20);
        swift_arrayDestroy(v156, 4, v111);
        swift_deallocClassInstance(v98, 32, 7);
        a8 = v153;
        v16 = v154;
        a7 = v152;
        a3 = v159;
        break;
      }
    }
  }
  sub_1001488FC((uint64_t)a3, (uint64_t)v173);
  v112 = sub_100007E8C(&qword_1011D3FF0);
  v113 = sub_100007E8C(&qword_1011D3FF8);
  if (swift_dynamicCast(v166, v173, v112, v113, 6))
  {
    sub_100145714(v166, &v203);
    sub_10004A160(a7, (uint64_t)v173, &qword_1011D3E58);
    if (*((_QWORD *)&v173[1] + 1))
    {
      sub_100064C48(v173, (uint64_t)v198);
      v114 = *((_QWORD *)&v204 + 1);
      *(_QWORD *)&v158 = *((_QWORD *)&v205 + 1);
      v159 = (_QWORD *)v205;
      v115 = sub_100007E68(&v203, *((uint64_t *)&v204 + 1));
      v116 = *((_QWORD *)&v198[1] + 1);
      *(_QWORD *)&v156 = *(_QWORD *)&v198[2];
      v117 = sub_100007E68(v198, *((uint64_t *)&v198[1] + 1));
      *(_QWORD *)&v157 = &v151;
      __chkstk_darwin(v117);
      v119 = (char *)&v151 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
      v121 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v120 + 16))(v119, v115, v114);
      __chkstk_darwin(v121);
      v123 = (char *)&v151 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v124 + 16))(v123, v117, v116);
      sub_100064C78((uint64_t)v160, (uint64_t)v211);
      sub_10004A160(a8, (uint64_t)v173, &qword_1011D2F20);
      v125 = v161;
      sub_10004A160(v162, v161, &qword_1011D2EB8);
      v126 = v163;
      swift_retain(v163);
      sub_1009967EC(v119, v126, (uint64_t)v123, v211, (uint64_t)v173, v125, v114, v116, (unint64_t (**)())v166, (uint64_t)v159, v158, v156);
      v127 = *(_QWORD *)&v166[0];
      v128 = *((_QWORD *)&v166[2] + 1);
      swift_release(v126);
      v162 = *(__int128 *)((char *)&v166[1] + 8);
      v163 = *(__int128 *)((char *)v166 + 8);
      *(__int128 *)((char *)v173 + 8) = *(__int128 *)((char *)v166 + 8);
      *(__int128 *)((char *)&v173[1] + 8) = *(__int128 *)((char *)&v166[1] + 8);
      *(_QWORD *)&v173[0] = v127;
      *((_QWORD *)&v173[2] + 1) = v128;
      LOBYTE(v174) = 2;
      *((_QWORD *)&v174 + 1) = sub_10098CA8C;
      *(_QWORD *)&v175 = 0;
      *((_QWORD *)&v175 + 1) = 0x4014000000000000;
      *(_QWORD *)&v176 = &unk_1011D2FE8;
      *((_QWORD *)&v176 + 1) = 0;
      *(_QWORD *)&v177 = &unk_1011D2FF0;
      *((_QWORD *)&v177 + 1) = 0;
      v129 = sub_1009BCE74((uint64_t)v173);
      swift_release(v128);
      swift_release(v162);
      swift_release(v163);
      *(_QWORD *)&v211[0] = _swiftEmptyArrayStorage;
      sub_100A0526C(v129);
      v130 = *(_QWORD **)&v211[0];
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v198);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v203);
      goto LABEL_25;
    }
    sub_10004FF60((uint64_t)v173, &qword_1011D3E58);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v203);
  }
  else
  {
    memset(v166, 0, sizeof(v166));
    sub_10004FF60((uint64_t)v166, &qword_1011D4000);
  }
  v130 = _swiftEmptyArrayStorage;
LABEL_25:
  v131 = sub_100007E8C(&qword_1011D3F18);
  v103 = (_QWORD *)swift_allocObject(v131, 56, 7);
  v103[4] = v16;
  v104 = v103 + 4;
  v103[5] = v17;
  v103[6] = v130;
  v132 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_1009B9948(0, v132, 1, _swiftEmptyArrayStorage);
  v99 = result;
  if (*(_QWORD *)(v16 + 16))
  {
    v134 = *(_QWORD *)(result + 16);
    if ((*(_QWORD *)(result + 24) >> 1) - v134 < v132)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v135 = result + 88 * v134 + 32;
    sub_100007E8C(&qword_1011D3E30);
    result = swift_arrayInitWithCopy(v135);
    if (v132)
    {
      v136 = *(_QWORD *)(v99 + 16);
      v109 = __OFADD__(v136, v132);
      v137 = v136 + v132;
      if (v109)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      *(_QWORD *)(v99 + 16) = v137;
    }
  }
  else if (v132)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease(v16);
  v102 = v17[2];
  v100 = *(_QWORD *)(v99 + 16);
  v101 = (char *)(v100 + v102);
  if (__OFADD__(v100, v102))
    goto LABEL_42;
  v138 = *(_QWORD *)(v99 + 24);
  result = swift_bridgeObjectRetain();
  if ((uint64_t)v101 > (uint64_t)(v138 >> 1))
  {
LABEL_43:
    if (v100 <= (uint64_t)v101)
      v141 = (int64_t)v101;
    else
      v141 = v100;
    result = (uint64_t)sub_1009B9948((_QWORD *)1, v141, 1, (_QWORD *)v99);
    v99 = result;
    v100 = *(_QWORD *)(result + 16);
    if (v17[2])
      goto LABEL_34;
    goto LABEL_47;
  }
  if (!v102)
  {
LABEL_47:
    if (!v102)
      goto LABEL_48;
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v100 < v102)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  sub_100007E8C(&qword_1011D3E30);
  result = swift_arrayInitWithCopy(v99 + 88 * v100 + 32);
  if (v102)
  {
    v139 = *(_QWORD *)(v99 + 16);
    v109 = __OFADD__(v139, v102);
    v140 = v139 + v102;
    if (v109)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    *(_QWORD *)(v99 + 16) = v140;
  }
LABEL_48:
  swift_bridgeObjectRelease(v17);
  v142 = v103[6];
  v143 = *(_QWORD *)(v142 + 16);
  v144 = *(_QWORD *)(v99 + 16);
  v145 = v144 + v143;
  if (__OFADD__(v144, v143))
  {
    __break(1u);
  }
  else
  {
    v146 = *(_QWORD *)(v99 + 24);
    result = swift_bridgeObjectRetain();
    if (v145 <= (uint64_t)(v146 >> 1))
    {
      if (v143)
        goto LABEL_51;
      goto LABEL_60;
    }
  }
  if (v144 <= v145)
    v149 = v144 + v143;
  else
    v149 = v144;
  result = (uint64_t)sub_1009B9948((_QWORD *)1, v149, 1, (_QWORD *)v99);
  v99 = result;
  v144 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v142 + 16))
  {
LABEL_60:
    if (!v143)
      goto LABEL_61;
    goto LABEL_64;
  }
LABEL_51:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v144 < v143)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  sub_100007E8C(&qword_1011D3E30);
  result = swift_arrayInitWithCopy(v99 + 88 * v144 + 32);
  if (!v143)
  {
LABEL_61:
    swift_bridgeObjectRelease(v142);
    swift_setDeallocating(v103);
    v150 = sub_100007E8C(&qword_1011D3F20);
    swift_arrayDestroy(v104, 3, v150);
    swift_deallocClassInstance(v103, 32, 7);
    return v99;
  }
  v147 = *(_QWORD *)(v99 + 16);
  v109 = __OFADD__(v147, v143);
  v148 = v147 + v143;
  if (!v109)
  {
    *(_QWORD *)(v99 + 16) = v148;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

void sub_1009C3B6C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  int64_t v59;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t (*v77)();
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t (*v81)();
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t (*v85)();
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t (*v89)();
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t (*v93)();
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  char v97;
  uint64_t (*v98)(uint64_t (**)(void));
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t (*v105)();
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  char v109;
  uint64_t (*v110)(uint64_t (**)(void));
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t (*v117)();
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  char v121;
  uint64_t (*v122)(uint64_t (**)(void));
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t (*v129)();
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  char v133;
  uint64_t (*v134)(uint64_t (**)(void));
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;

  v70 = a7;
  *(_QWORD *)&v71 = a8;
  v72 = a6;
  *(_QWORD *)&v73 = a5;
  v74 = a3;
  *(_QWORD *)&v76 = a2;
  v13 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  v18 = sub_100007E68(a1, v16);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v22 + 16))(v21, v19);
  sub_100064C78(a3, (uint64_t)&v117);
  v23 = a4;
  sub_10004A160(a4, (uint64_t)&v105, &qword_1011D2F28);
  sub_10004A160(a5, (uint64_t)&v129, &qword_1011D2F20);
  sub_10004A160(a6, (uint64_t)v15, &qword_1011D2EB8);
  v24 = v70;
  v25 = v71;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v21, v76, (__int128 *)&v117, (uint64_t)&v105, (uint64_t)&v129, (uint64_t)v15, v70, v71, &v77, v16, v17);
  v69 = v78;
  v130 = v78;
  v68 = v79;
  v131 = v79;
  v129 = v77;
  v132 = v80;
  v133 = 10;
  v134 = sub_1009D6A28;
  v135 = 0;
  v136 = 0x4014000000000000;
  v137 = &unk_1011D4C28;
  v138 = 0;
  v139 = &unk_1011D4C30;
  v140 = 0;
  swift_retain();
  sub_100048AAC(v24, v25);
  v75 = sub_1009BCFB8((uint64_t)&v129);
  swift_release();
  swift_release();
  swift_release();
  v26 = a1[3];
  v27 = a1[4];
  v28 = sub_100007E68(a1, v26);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v32 + 16))(v31, v29);
  sub_100064C78(v74, (uint64_t)&v105);
  sub_10004A160(v23, (uint64_t)&v93, &qword_1011D2F28);
  sub_10004A160(v73, (uint64_t)&v117, &qword_1011D2F20);
  v33 = v72;
  sub_10004A160(v72, (uint64_t)v15, &qword_1011D2EB8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v31, v76, (__int128 *)&v105, (uint64_t)&v93, (uint64_t)&v117, (uint64_t)v15, v24, v25, &v81, v26, v27);
  v73 = v82;
  v118 = v82;
  v69 = v83;
  v119 = v83;
  v117 = v81;
  v120 = v84;
  v121 = 55;
  v122 = sub_1009D6A28;
  v123 = 0;
  v124 = 0x4014000000000000;
  v125 = &unk_1011D4C58;
  v126 = 0;
  v127 = &unk_1011D4C60;
  v128 = 0;
  swift_retain();
  sub_100048AAC(v24, v25);
  v74 = sub_1009BD0FC((uint64_t)&v117);
  swift_release();
  swift_release();
  swift_release();
  v34 = a1[3];
  v35 = a1[4];
  v36 = sub_100007E68(a1, v34);
  v37 = __chkstk_darwin(v36);
  v39 = (char *)&v68 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v40 + 16))(v39, v37);
  sub_10004A160(v23, (uint64_t)&v105, &qword_1011D2F28);
  v41 = v33;
  sub_10004A160(v33, (uint64_t)v15, &qword_1011D2EB8);
  v42 = v76;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v39, v76, (uint64_t)&v105, (uint64_t)v15, v34, v35, &v85);
  v73 = v86;
  v106 = v86;
  v71 = v87;
  v107 = v87;
  v109 = 54;
  v105 = v85;
  v108 = v88;
  v110 = sub_10098CA8C;
  v111 = 0;
  v112 = 0x4014000000000000;
  v113 = &unk_1011D4C88;
  v114 = 0;
  v115 = &unk_1011D4C90;
  v116 = 0;
  swift_retain();
  v43 = sub_1009BD240((uint64_t)&v105);
  swift_release();
  swift_release();
  swift_release();
  v44 = a1[3];
  v45 = a1[4];
  v46 = sub_100007E68(a1, v44);
  v47 = __chkstk_darwin(v46);
  v49 = (char *)&v68 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v50 + 16))(v49, v47);
  sub_10004A160(v23, (uint64_t)&v93, &qword_1011D2F28);
  sub_10004A160(v41, (uint64_t)v15, &qword_1011D2EB8);
  swift_retain();
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v49, v42, (uint64_t)v15, v44, v45, &v89);
  v76 = v90;
  v94 = v90;
  v73 = v91;
  v95 = v91;
  v93 = v89;
  v96 = v92;
  v97 = 56;
  v98 = sub_1009D6A28;
  v99 = 0;
  v100 = 0x4014000000000000;
  v101 = &unk_1011D4CB8;
  v102 = 0;
  v103 = &unk_1011D4CC0;
  v104 = 0;
  v51 = sub_1009BD384((uint64_t)&v93);
  swift_release();
  swift_release();
  swift_release();
  v52 = sub_100007E8C(&qword_1011D3F18);
  v53 = (_QWORD *)swift_allocObject(v52, 64, 7);
  v53[4] = v75;
  *(_QWORD *)&v76 = v53 + 4;
  v53[5] = v74;
  v53[6] = v43;
  v53[7] = v51;
  v54 = _swiftEmptyArrayStorage;
  v55 = 4;
  while (1)
  {
    v56 = v53[v55];
    v57 = *(_QWORD *)(v56 + 16);
    v58 = v54[2];
    v59 = v58 + v57;
    if (__OFADD__(v58, v57))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v54);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v59 <= v54[3] >> 1)
    {
      if (*(_QWORD *)(v56 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v58 <= v59)
        v61 = v58 + v57;
      else
        v61 = v58;
      v54 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v61, 1, v54);
      if (*(_QWORD *)(v56 + 16))
      {
LABEL_13:
        v62 = v54[2];
        if ((v54[3] >> 1) - v62 < v57)
          goto LABEL_20;
        v63 = (uint64_t)&v54[11 * v62 + 4];
        sub_100007E8C(&qword_1011D3E30);
        swift_arrayInitWithCopy(v63);
        if (v57)
        {
          v64 = v54[2];
          v65 = __OFADD__(v64, v57);
          v66 = v64 + v57;
          if (v65)
            goto LABEL_21;
          v54[2] = v66;
        }
        goto LABEL_3;
      }
    }
    if (v57)
      goto LABEL_19;
LABEL_3:
    swift_bridgeObjectRelease();
    if (++v55 == 8)
    {
      swift_setDeallocating(v53);
      v67 = sub_100007E8C(&qword_1011D3F20);
      swift_arrayDestroy(v76, 4, v67);
      swift_deallocClassInstance(v53, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

void static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];
  _BYTE v54[40];
  __int128 v55[2];
  __int128 v56[2];

  v44 = a8;
  v50 = a6;
  v49 = a5;
  v45 = a2;
  v48 = a11;
  v47 = a10;
  v52 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011D2EB8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C78(a1, (uint64_t)v53);
  v22 = sub_100007E8C(&qword_1011D3E70);
  v46 = String.init<A>(describing:)(v53, v22);
  v24 = v23;
  sub_100064C78(a1, (uint64_t)v56);
  sub_100064C78(a3, (uint64_t)v55);
  sub_10004A160(a4, (uint64_t)v54, &qword_1011D2F28);
  sub_100064AC8(a7, (uint64_t)v53);
  sub_10004A160(v44, (uint64_t)v21, &qword_1011D2EB8);
  v25 = *(unsigned __int8 *)(v19 + 80);
  v26 = (v25 + 216) & ~v25;
  v27 = (v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1010EB248, v28 + 16, v25 | 7);
  sub_100064C48(v56, v29 + 16);
  v30 = v45;
  *(_QWORD *)(v29 + 56) = v45;
  sub_100064C48(v55, v29 + 64);
  sub_100065228((uint64_t)v54, v29 + 104, &qword_1011D2F28);
  sub_100064EF0((uint64_t)v53, v29 + 144);
  sub_100065228((uint64_t)v21, v29 + v26, &qword_1011D2EB8);
  v31 = (uint64_t *)(v29 + v27);
  v32 = v47;
  v33 = v48;
  *v31 = v47;
  v31[1] = v33;
  v34 = (_QWORD *)(v29 + v28);
  v35 = v50;
  *v34 = v49;
  v34[1] = v35;
  swift_retain(v30);
  sub_100048AAC(v32, v33);
  swift_retain(v35);
  v37 = UUID.init()(v36);
  v38 = UUID.uuidString.getter(v37);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
  strcpy((char *)v53, "ActionMenu: ");
  BYTE5(v53[1]) = 0;
  HIWORD(v53[1]) = -5120;
  v41._countAndFlagsBits = v46;
  v41._object = v24;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v24);
  v42 = v53[0];
  v43 = v53[1];
  *(_QWORD *)a9 = v38;
  *(_QWORD *)(a9 + 8) = v40;
  *(_QWORD *)(a9 + 16) = v42;
  *(_QWORD *)(a9 + 24) = v43;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_1009CD118;
  *(_QWORD *)(a9 + 72) = v29;
}

void sub_1009C45E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  int64_t v79;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  _QWORD v98[5];
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)();
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t (*v107)();
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t (*v111)();
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t (*v115)();
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t (*v128)();
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  char v132;
  uint64_t (*v133)(uint64_t (**)(void));
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t (*v140)();
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  uint64_t (*v145)(uint64_t (**)(void));
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t (*v152)();
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  char v156;
  uint64_t (*v157)(uint64_t (**)(void));
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t (*v164)();
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  char v168;
  uint64_t (*v169)(uint64_t (**)(void));
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;

  v92 = a8;
  v93 = a3;
  *(_QWORD *)&v90 = a7;
  v96 = a5;
  *(_QWORD *)&v97 = a4;
  v95 = a2;
  v15 = sub_100007E8C(&qword_1011D2EB8);
  __chkstk_darwin(v15);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v20 = sub_100007E68(a1, v19);
  __chkstk_darwin(v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  sub_100064C78(a3, (uint64_t)&v152);
  sub_10004A160(a4, (uint64_t)&v140, &qword_1011D2F28);
  sub_100064AC8(a5, (uint64_t)&v164);
  *(_QWORD *)&v91 = a6;
  v24 = v95;
  sub_10004A160(a6, (uint64_t)v17, &qword_1011D2EB8);
  v25 = v90;
  v26 = v92;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v22, v24, (__int128 *)&v152, (uint64_t)&v140, (uint64_t)&v164, (uint64_t)v17, v90, v92, &v103, v19, v18);
  v27 = v106;
  v89 = v104;
  v165 = v104;
  v88 = v105;
  v166 = v105;
  v164 = v103;
  v167 = v106;
  v168 = 10;
  v169 = sub_1009D6A28;
  v170 = 0;
  v171 = 0x4014000000000000;
  v172 = &unk_1011D4C28;
  v173 = 0;
  v174 = &unk_1011D4C30;
  v175 = 0;
  swift_retain(v24);
  sub_100048AAC(v25, v26);
  v94 = sub_1009BCFB8((uint64_t)&v164);
  swift_release(v27);
  swift_release(v88);
  swift_release(v89);
  v28 = a1[3];
  v29 = a1[4];
  v30 = sub_100007E68(a1, v28);
  __chkstk_darwin(v30);
  v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_100064C78(v93, (uint64_t)&v140);
  sub_10004A160(v97, (uint64_t)&v128, &qword_1011D2F28);
  sub_100064AC8(v96, (uint64_t)&v152);
  sub_10004A160(a6, (uint64_t)v17, &qword_1011D2EB8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v32, v24, (__int128 *)&v140, (uint64_t)&v128, (uint64_t)&v152, (uint64_t)v17, v25, v26, &v107, v28, v29);
  v34 = v110;
  v89 = v108;
  v153 = v108;
  v88 = v109;
  v154 = v109;
  v156 = 55;
  v152 = v107;
  v155 = v110;
  v157 = sub_1009D6A28;
  v158 = 0;
  v159 = 0x4014000000000000;
  v160 = &unk_1011D4C58;
  v161 = 0;
  v162 = &unk_1011D4C60;
  v163 = 0;
  swift_retain(v24);
  sub_100048AAC(v25, v26);
  v93 = sub_1009BD0FC((uint64_t)&v152);
  swift_release(v34);
  swift_release(v88);
  swift_release(v89);
  v35 = a1[3];
  v36 = a1[4];
  v37 = sub_100007E68(a1, v35);
  __chkstk_darwin(v37);
  v39 = (char *)&v88 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v39);
  v41 = v97;
  sub_10004A160(v97, (uint64_t)&v140, &qword_1011D2F28);
  v42 = v91;
  sub_10004A160(v91, (uint64_t)v17, &qword_1011D2EB8);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v39, v24, (uint64_t)&v140, (uint64_t)v17, v35, v36, &v111);
  v43 = v114;
  v90 = v112;
  v141 = v112;
  v89 = v113;
  v142 = v113;
  v144 = 54;
  v140 = v111;
  v143 = v114;
  v145 = sub_10098CA8C;
  v146 = 0;
  v147 = 0x4014000000000000;
  v148 = &unk_1011D4C88;
  v149 = 0;
  v150 = &unk_1011D4C90;
  v151 = 0;
  swift_retain(v24);
  v92 = sub_1009BD240((uint64_t)&v140);
  swift_release(v43);
  swift_release(v89);
  swift_release(v90);
  v44 = a1[3];
  v45 = a1[4];
  v46 = sub_100007E68(a1, v44);
  __chkstk_darwin(v46);
  v48 = (char *)&v88 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v49 + 16))(v48);
  sub_10004A160(v41, (uint64_t)&v128, &qword_1011D2F28);
  sub_10004A160(v42, (uint64_t)v17, &qword_1011D2EB8);
  swift_retain(v24);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v48, v24, (uint64_t)v17, v44, v45, &v115);
  v50 = v118;
  v97 = v116;
  v129 = v116;
  v91 = v117;
  v130 = v117;
  v128 = v115;
  v131 = v118;
  v132 = 56;
  v133 = sub_1009D6A28;
  v134 = 0;
  v135 = 0x4014000000000000;
  v136 = &unk_1011D4CB8;
  v137 = 0;
  v138 = &unk_1011D4CC0;
  v139 = 0;
  v51 = sub_1009BD384((uint64_t)&v128);
  swift_release(v50);
  swift_release(v91);
  swift_release(v97);
  sub_100064C78((uint64_t)a1, (uint64_t)v98);
  v52 = sub_100007E8C(&qword_1011D3E70);
  v53 = sub_100007E8C(&qword_1011D3F08);
  if ((swift_dynamicCast(&v119, v98, v52, v53, 6) & 1) != 0)
  {
    sub_100145714(&v119, &v99);
    v54 = v100;
    v55 = v101;
    v56 = v102;
    v57 = sub_100007E68(&v99, v100);
    __chkstk_darwin(v57);
    v59 = (char *)&v88 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v60 + 16))(v59);
    sub_100064AC8(v96, (uint64_t)&v119);
    v61 = (_QWORD *)swift_allocObject(&unk_1010EB2B0, 56, 7);
    v61[2] = v54;
    v61[3] = v55;
    v61[4] = v56;
    v61[5] = a9;
    v61[6] = a10;
    v62 = v95;
    v63 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v59, v95, (uint64_t)sub_1009CD658, (uint64_t)v61, (uint64_t)&v119, v54, v55, v56);
    v65 = v64;
    v67 = v66;
    *(_QWORD *)&v119 = v63;
    *((_QWORD *)&v119 + 1) = v64;
    *(_QWORD *)&v120 = v68;
    *((_QWORD *)&v120 + 1) = v66;
    LOBYTE(v121) = 38;
    *((_QWORD *)&v121 + 1) = sub_10098CA8C;
    v122 = 0;
    v123 = 0x4014000000000000;
    v124 = &unk_1011D4DB8;
    v125 = 0;
    v126 = &unk_1011D4DC0;
    v127 = 0;
    swift_retain(v62);
    swift_retain(a10);
    v69 = sub_1009BD4C8(&v119);
    swift_release(v67);
    swift_release(v65);
    v98[0] = _swiftEmptyArrayStorage;
    sub_100A0526C(v69);
    v70 = (_QWORD *)v98[0];
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v99);
  }
  else
  {
    v120 = 0u;
    v121 = 0u;
    v119 = 0u;
    sub_10004FF60((uint64_t)&v119, &qword_1011D3F10);
    v70 = _swiftEmptyArrayStorage;
  }
  v71 = sub_100007E8C(&qword_1011D3F18);
  v72 = (_QWORD *)swift_allocObject(v71, 72, 7);
  v72[4] = v94;
  *(_QWORD *)&v97 = v72 + 4;
  v73 = v92;
  v72[5] = v93;
  v72[6] = v73;
  v72[7] = v51;
  v72[8] = v70;
  v74 = _swiftEmptyArrayStorage;
  v75 = 4;
  while (1)
  {
    v76 = v72[v75];
    v77 = *(_QWORD *)(v76 + 16);
    v78 = v74[2];
    v79 = v78 + v77;
    if (__OFADD__(v78, v77))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v74);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v79 <= v74[3] >> 1)
    {
      if (*(_QWORD *)(v76 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v78 <= v79)
        v81 = v78 + v77;
      else
        v81 = v78;
      v74 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v81, 1, v74);
      if (*(_QWORD *)(v76 + 16))
      {
LABEL_16:
        v82 = v74[2];
        if ((v74[3] >> 1) - v82 < v77)
          goto LABEL_23;
        v83 = (uint64_t)&v74[11 * v82 + 4];
        sub_100007E8C(&qword_1011D3E30);
        swift_arrayInitWithCopy(v83);
        if (v77)
        {
          v84 = v74[2];
          v85 = __OFADD__(v84, v77);
          v86 = v84 + v77;
          if (v85)
            goto LABEL_24;
          v74[2] = v86;
        }
        goto LABEL_6;
      }
    }
    if (v77)
      goto LABEL_22;
LABEL_6:
    swift_bridgeObjectRelease(v76);
    if (++v75 == 9)
    {
      swift_setDeallocating(v72);
      v87 = sub_100007E8C(&qword_1011D3F20);
      swift_arrayDestroy(v97, 5, v87);
      swift_deallocClassInstance(v72, 32, 7);
      return;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_1009C4F10@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Album(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Album;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EBCD8, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C5380@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Artist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Artist;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC2C8, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C57F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Curator(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Curator;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC2F0, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C5C60@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EditorialItem(0);
  v94[3] = v26;
  v94[4] = sub_100048748(&qword_1011D41B0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v66, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC318, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v64, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v65, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v42 = v78;
  v43 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v77;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v70);
  v48 = v41 + v72;
  v49 = v80;
  *v47 = v44;
  v47[1] = v49;
  sub_100064C48(v87, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v49);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C60EC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Genre(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Genre;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC340, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C655C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicMovie(0);
  v94[3] = v26;
  v94[4] = sub_100048748(&qword_1011D41B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v66, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC368, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v64, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v65, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v42 = v78;
  v43 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v77;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v70);
  v48 = v41 + v72;
  v49 = v80;
  *v47 = v44;
  v47[1] = v49;
  sub_100064C48(v87, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v49);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C69E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicVideo(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for MusicVideo;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC390, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C6E58@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Playlist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Playlist;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC3B8, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C72C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RadioShow(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for RadioShow;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC3E0, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C7738@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Song(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Song;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC408, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C7BA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Station(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Station;
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v64, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC430, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v65, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v66, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v43 = v79;
  v42 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  v47 = v78;
  *v46 = v77;
  v46[1] = v47;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  *v48 = v44;
  v48[1] = v42;
  sub_100064C48(v87, v49);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v42);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C8018@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVEpisode(0);
  v94[3] = v26;
  v94[4] = sub_100048748(&qword_1011D41C0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v66, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC458, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v64, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v65, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v42 = v78;
  v43 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v77;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v70);
  v48 = v41 + v72;
  v49 = v80;
  *v47 = v44;
  v47[1] = v49;
  sub_100064C48(v87, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v49);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C84A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVSeason(0);
  v94[3] = v26;
  v94[4] = sub_100048748(&qword_1011D41C8, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v66, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC480, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v64, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v65, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v42 = v78;
  v43 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v77;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v70);
  v48 = v41 + v72;
  v49 = v80;
  *v47 = v44;
  v47[1] = v49;
  sub_100064C48(v87, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v49);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C8930@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVShow(0);
  v94[3] = v26;
  v94[4] = sub_100048748(&qword_1011D41D0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v66, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC4A8, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v64, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v65, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v42 = v78;
  v43 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v77;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v70);
  v48 = v41 + v72;
  v49 = v80;
  *v47 = v44;
  v47[1] = v49;
  sub_100064C48(v87, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v49);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C8DBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011D3E48);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011D2EB8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UploadedVideo(0);
  v94[3] = v26;
  v94[4] = sub_100048748(&qword_1011D41D8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  v27 = sub_100049F68(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_100064C78((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100007E8C(&qword_1011D8A50);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_10004A160(v66, (uint64_t)v93, &qword_1011D3E60);
  sub_100064C78((uint64_t)v94, (uint64_t)v92);
  sub_10004A160(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v69, (uint64_t)v91);
  sub_100064C78(v70, (uint64_t)v90);
  sub_10004A160(v73, (uint64_t)v89, &qword_1011D2F20);
  sub_10004A160(v71, (uint64_t)v88, &qword_1011D3E58);
  sub_100064C78(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1010EC4D0, v72 + 40, v31 | v33 | 7);
  sub_100065228((uint64_t)v93, v41 + 16, &qword_1011D3E60);
  sub_100064C48(v92, v41 + 56);
  sub_100065228(v64, v41 + v32, &qword_1011D2EB8);
  sub_100065228(v65, v41 + v34, &qword_1011D3E48);
  *(_QWORD *)(v41 + v35) = v76;
  sub_100064C48(v91, v41 + v36);
  sub_100064C48(v90, v41 + v37);
  sub_100065228((uint64_t)v89, v41 + v38, &qword_1011D2F20);
  sub_100065228((uint64_t)v88, v41 + v39, &qword_1011D3E58);
  v42 = v78;
  v43 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v46 = (_QWORD *)(v41 + v40);
  *v46 = v77;
  v46[1] = v42;
  v47 = (uint64_t *)(v41 + v70);
  v48 = v41 + v72;
  v49 = v80;
  *v47 = v44;
  v47[1] = v49;
  sub_100064C48(v87, v48);
  v50 = v43;
  v51 = v45;
  swift_bridgeObjectRetain();
  swift_retain();
  v52 = sub_1000A0168(v44, v49);
  v53 = v83;
  v54 = UUID.init()(v52);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_1009CEF90;
  v63[9] = v41;
  return result;
}

uint64_t sub_1009C9248@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  void *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  __int128 v89[2];
  _BYTE v90[40];
  _QWORD v91[9];
  __int128 v92[2];
  __int128 v93[2];
  __int128 v94[2];
  _BYTE v95[40];
  _QWORD v96[6];

  v75 = a8;
  v71 = a6;
  v72 = a7;
  v70 = a5;
  v78 = a4;
  v83 = a3;
  v81 = a2;
  v88 = a9;
  v84 = a15;
  v80 = a14;
  v79 = a13;
  v73 = a12;
  v82 = a16;
  v69 = a17;
  v74 = a10;
  v66 = a11;
  v20 = type metadata accessor for UUID(0);
  v86 = *(_QWORD *)(v20 - 8);
  v87 = v20;
  __chkstk_darwin(v20);
  v85 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011D3E48);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v68 = (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011D2EB8);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v67 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96[3] = a18;
  v96[4] = a19;
  v28 = sub_100049F68(v96);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v28, a1, a18);
  sub_100064C78((uint64_t)v96, (uint64_t)v91);
  v29 = sub_100007E8C(&qword_1011D8A50);
  v30 = String.init<A>(describing:)(v91, v29);
  v76 = v31;
  v77 = v30;
  sub_10004A160(v66, (uint64_t)v95, &qword_1011D3E60);
  sub_100064C78((uint64_t)v96, (uint64_t)v94);
  sub_10004A160(v69, (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D2EB8);
  sub_10004A160(v70, (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011D3E48);
  sub_100064C78(v71, (uint64_t)v93);
  sub_100064C78(v72, (uint64_t)v92);
  sub_10004A160(v75, (uint64_t)v91, &qword_1011D2F20);
  sub_10004A160(v73, (uint64_t)v90, &qword_1011D3E58);
  sub_100064C78(v74, (uint64_t)v89);
  v32 = *(unsigned __int8 *)(v26 + 80);
  v33 = (v32 + 96) & ~v32;
  v34 = *(unsigned __int8 *)(v23 + 80);
  v35 = (v27 + v34 + v33) & ~v34;
  v36 = (v24 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 79) & 0xFFFFFFFFFFFFFFF8;
  v75 = (v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v74 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject(&unk_1010EC4F8, v74 + 40, v32 | v34 | 7);
  sub_100065228((uint64_t)v95, v42 + 16, &qword_1011D3E60);
  sub_100064C48(v94, v42 + 56);
  sub_100065228(v67, v42 + v33, &qword_1011D2EB8);
  sub_100065228(v68, v42 + v35, &qword_1011D3E48);
  v43 = v78;
  *(_QWORD *)(v42 + v36) = v78;
  sub_100064C48(v93, v42 + v37);
  sub_100064C48(v92, v42 + v38);
  sub_100065228((uint64_t)v91, v42 + v39, &qword_1011D2F20);
  sub_100065228((uint64_t)v90, v42 + v40, &qword_1011D3E58);
  v45 = v81;
  v44 = v82;
  *(_QWORD *)(v42 + v75) = v81;
  v47 = v83;
  v46 = v84;
  *(_QWORD *)(v42 + v73) = v83;
  v48 = (_QWORD *)(v42 + v41);
  v49 = v80;
  *v48 = v79;
  v48[1] = v49;
  v50 = (uint64_t *)(v42 + v72);
  v51 = v42 + v74;
  *v50 = v46;
  v50[1] = v44;
  sub_100064C48(v89, v51);
  v52 = v45;
  v53 = v47;
  swift_bridgeObjectRetain();
  swift_retain(v43);
  v54 = sub_1000A0168(v46, v44);
  v55 = v85;
  v56 = UUID.init()(v54);
  v57 = UUID.uuidString.getter(v56);
  v59 = v58;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v55, v87);
  strcpy((char *)v91, "ActionMenu: ");
  BYTE5(v91[1]) = 0;
  HIWORD(v91[1]) = -5120;
  v61 = v76;
  v60._countAndFlagsBits = v77;
  v60._object = v76;
  String.append(_:)(v60);
  swift_bridgeObjectRelease(v61);
  v62 = v91[0];
  v63 = v91[1];
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v96);
  v65 = v88;
  *v88 = v57;
  v65[1] = v59;
  v65[2] = v62;
  v65[3] = v63;
  v65[4] = 0;
  v65[5] = 0xE000000000000000;
  v65[6] = 0;
  *((_BYTE *)v65 + 56) = 0;
  v65[8] = (uint64_t)sub_1009CEF90;
  v65[9] = v42;
  return result;
}

uint64_t sub_1009C96A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009C9738, 0, 0);
}

uint64_t sub_1009C9738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EBDF0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D40F8, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C9884(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7A7C;
  v12 = (char *)&dword_1011D7A78 + dword_1011D7A78;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009C9914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009C99A4, 0, 0);
}

uint64_t sub_1009C99A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EBF30, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D4118, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C9AF0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7A9C;
  v12 = (char *)&dword_1011D7A98 + dword_1011D7A98;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009C9B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009C9C10, 0, 0);
}

uint64_t sub_1009C9C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EC278, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D41A8, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C9D5C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7B1C;
  v12 = (char *)&dword_1011D7B18 + dword_1011D7B18;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009C9DEC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  v8 = swift_allocObject(&unk_1010EC1D8, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v6;
  v10 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v10;
  v11 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = v7;
  swift_bridgeObjectRetain(v4);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v7);
}

uint64_t sub_1009C9EA4(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1009C9F20, 0, 0);
}

uint64_t sub_1009C9F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1010EC1B0, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1009D0214((_QWORD *)(v0 + 16));
  sub_100B237E0(v1, (uint64_t)&unk_1011D4188, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C9FE4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1011D7AFC;
  v13 = (char *)&dword_1011D7AF8 + dword_1011D7AF8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B20;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1009CA074@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  v8 = swift_allocObject(&unk_1010EC110, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v4;
  v9 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 24) = v9;
  v11 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v7;
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v5);
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_1009CA124(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1009CA1A0, 0, 0);
}

uint64_t sub_1009CA1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1010EC0E8, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100376DA4((_QWORD *)(v0 + 16));
  sub_100B237E0(v1, (uint64_t)&unk_1011D4168, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CA264(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1011D7ADC;
  v13 = (char *)&dword_1011D7AD8 + dword_1011D7AD8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B20;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

double sub_1009CA2F4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;
  __int128 v12;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  v9 = swift_allocObject(&unk_1010EB760, 88, 7);
  *a2 = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v11 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = v11;
  *(_OWORD *)(v9 + 64) = v12;
  *(_QWORD *)(v9 + 80) = v8;
  sub_100149434(v4);
  swift_bridgeObjectRetain();
  swift_retain(v11);
  swift_retain(v12);
  *(_QWORD *)&result = swift_retain(v8).n128_u64[0];
  return result;
}

uint64_t sub_1009CA3B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(v1 + 152) = v4;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v8;
  return swift_task_switch(sub_1009CA430, 0, 0);
}

uint64_t sub_1009CA430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1010EB738, 168, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v0 + 144);
  v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  sub_1009CDF2C(v0 + 16);
  sub_100B237E0(v1, (uint64_t)&unk_1011D3FE8, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CA4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  v9 = *(_OWORD *)(a4 + 16);
  v10 = unk_1011D79DC;
  v13 = (char *)&dword_1011D79D8 + dword_1011D79D8;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 152) = v11;
  *v11 = v4;
  v11[1] = sub_1009CA594;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1009CA594()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1009CA5DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CA66C, 0, 0);
}

uint64_t sub_1009CA66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EC020, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D4138, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CA7B8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7ABC;
  v12 = (char *)&dword_1011D7AB8 + dword_1011D7AB8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CA848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CA8D8, 0, 0);
}

uint64_t sub_1009CA8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EBBC0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D40A0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CAA24(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7A3C;
  v12 = (char *)&dword_1011D7A38 + dword_1011D7A38;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CAAB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CAB44, 0, 0);
}

uint64_t sub_1009CAB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EB918, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D4030, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CAC90(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7844;
  v12 = (char *)&dword_1011D7840 + dword_1011D7840;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CAD20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(char);

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (*)(char))((char *)&dword_1011D7830 + dword_1011D7830);
  v2 = (_QWORD *)swift_task_alloc(unk_1011D7834);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1009CAD84;
  return v4(0);
}

uint64_t sub_1009CAD84(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1009CADE0(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1009CAE5C, 0, 0);
}

uint64_t sub_1009CAE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1010EBA30, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1009CEC2C((_QWORD *)(v0 + 16));
  sub_100B237E0(v1, (uint64_t)&unk_1011D4060, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CAF20(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1011D79FC;
  v13 = (char *)&dword_1011D79F8 + dword_1011D79F8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1009CAFB0;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1009CAFB0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1009CAFF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;

  v7 = *a1;
  v8 = a1[7];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 80, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 72) = v8;
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  return swift_retain(v8);
}

uint64_t sub_1009CB094(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_1009CB110, 0, 0);
}

uint64_t sub_1009CB110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1010EBAF8, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1009CEC2C((_QWORD *)(v0 + 16));
  sub_100B237E0(v1, (uint64_t)&unk_1011D4080, v3);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CB1D4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_1011D7A1C;
  v13 = (char *)&dword_1011D7A18 + dword_1011D7A18;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B20;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_1009CB264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CB2F4, 0, 0);
}

uint64_t sub_1009CB2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EBC88, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D40C0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CB440(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D7A5C;
  v12 = (char *)&dword_1011D7A58 + dword_1011D7A58;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CB4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CB560, 0, 0);
}

uint64_t sub_1009CB560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EB418, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D3F60, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CB6AC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D795C;
  v12 = (char *)&dword_1011D7958 + dword_1011D7958;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CB73C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CB7CC, 0, 0);
}

uint64_t sub_1009CB7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EB4E0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D3F80, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CB918(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D797C;
  v12 = (char *)&dword_1011D7978 + dword_1011D7978;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009CB9A8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CB9A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1009CB9F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CBA80, 0, 0);
}

uint64_t sub_1009CBA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EB5A8, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D3FA0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CBBCC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D799C;
  v12 = (char *)&dword_1011D7998 + dword_1011D7998;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CBC5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;

  v7 = *a1;
  v8 = a1[5];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 64, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 56) = v8;
  swift_retain(v10);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_1009CBCE0(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 48);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_1009CBD38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1009CBDC8, 0, 0);
}

uint64_t sub_1009CBDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EB670, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v15;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D3FC0, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CBF14(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1011D79BC;
  v12 = (char *)&dword_1011D79B8 + dword_1011D79B8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1009D0B1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CBFA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  v6 = swift_allocObject(&unk_1010EB378, 48, 7);
  *a2 = v6;
  *(_QWORD *)(v6 + 16) = v4;
  v7 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  swift_retain(v7);
  return swift_retain(v5);
}

uint64_t sub_1009CC01C(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[2];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 32);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_1009CC06C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_BYTE *)(v1 + 112) = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  return swift_task_switch(sub_1009CC0F4, 0, 0);
}

uint64_t sub_1009CC0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1010EB350, 128, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v13;
  *(_QWORD *)(v11 + 56) = v7;
  *(_BYTE *)(v11 + 64) = v6;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v4;
  *(_QWORD *)(v11 + 88) = v3;
  *(_QWORD *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v14;
  *(_QWORD *)(v11 + 120) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B237E0(v8, (uint64_t)&unk_1011D3F40, v11);
  swift_release();
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009CC224(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  v8 = a4[1];
  v9 = unk_1011D793C;
  v12 = (char *)&dword_1011D7938 + dword_1011D7938;
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 112) = v10;
  *v10 = v4;
  v10[1] = sub_1009CC2AC;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_1009CC2AC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1009CC2F4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70[3];
  _QWORD v71[9];
  __int128 v72[2];
  uint64_t (*v73)();
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _DWORD v77[3];

  v67 = a7;
  v68 = a5;
  v60 = a6;
  *(_QWORD *)&v66 = a4;
  v12 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011D2EB8);
  v57 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v58 = v17;
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  *(_QWORD *)&v65 = a1[4];
  v20 = a1[5];
  v21 = sub_100007E68(a1, v19);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v59 = a3;
  sub_100064C78(a3, (uint64_t)v70);
  sub_10004A160(v66, (uint64_t)v72, &qword_1011D2F28);
  sub_10004A160(v68, (uint64_t)v71, &qword_1011D2F20);
  sub_10004A160(v67, (uint64_t)v18, &qword_1011D2EB8);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v23, a2, v70, (uint64_t)v72, (uint64_t)v71, 0, 0, (uint64_t)v18, &v73, v19, v65, v20);
  v65 = v74;
  v66 = v75;
  v55 = v73;
  v25 = v76;
  sub_1001488FC((uint64_t)a1, (uint64_t)v71);
  v61 = a2;
  v26 = a2;
  v27 = v56;
  swift_retain(v26);
  v28 = sub_100007E8C(&qword_1011D3FF0);
  if ((swift_dynamicCast(v27, v71, v28, v14, 6) & 1) != 0)
  {
    v29 = v73;
    v30 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v27, v14);
    v31 = ((uint64_t (*)(uint64_t))v29)(v30);
    v33 = v32 != 1;
    sub_10013B670(v31, v32);
  }
  else
  {
    v33 = 1;
  }
  sub_1001488FC((uint64_t)a1, (uint64_t)v71);
  v56 = (char *)String.init<A>(describing:)(v71, v28);
  v35 = v34;
  sub_1001488FC((uint64_t)a1, (uint64_t)v70);
  sub_100064C78(v59, (uint64_t)v72);
  sub_10004A160(v67, (uint64_t)v18, &qword_1011D2EB8);
  sub_10004A160(v60, (uint64_t)v69, &qword_1011D3E58);
  sub_10004A160(v68, (uint64_t)v71, &qword_1011D2F20);
  v36 = *(unsigned __int8 *)(v57 + 80);
  v37 = (v36 + 232) & ~v36;
  v38 = (v58 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_1010EB7B0, v39 + 72, v36 | 7);
  *(_QWORD *)(v40 + 16) = v55;
  *(_OWORD *)(v40 + 24) = v65;
  *(_OWORD *)(v40 + 40) = v66;
  *(_QWORD *)(v40 + 56) = v25;
  *(_BYTE *)(v40 + 64) = 0;
  *(_DWORD *)(v40 + 65) = v77[0];
  *(_DWORD *)(v40 + 68) = *(_DWORD *)((char *)v77 + 3);
  *(_QWORD *)(v40 + 72) = sub_10098CA8C;
  *(_QWORD *)(v40 + 80) = 0;
  *(_QWORD *)(v40 + 88) = 0x4014000000000000;
  *(_QWORD *)(v40 + 96) = &unk_1011D2F08;
  *(_QWORD *)(v40 + 104) = 0;
  *(_QWORD *)(v40 + 112) = &unk_1011D2F10;
  *(_QWORD *)(v40 + 120) = 0;
  *(_BYTE *)(v40 + 128) = v33;
  sub_100145714(v70, (_OWORD *)(v40 + 136));
  sub_100064C48(v72, v40 + 184);
  v41 = v61;
  *(_QWORD *)(v40 + 224) = v61;
  sub_100065228((uint64_t)v18, v40 + v37, &qword_1011D2EB8);
  sub_100065228((uint64_t)v69, v40 + v38, &qword_1011D3E58);
  sub_100065228((uint64_t)v71, v40 + v39, &qword_1011D2F20);
  swift_retain(v41);
  v42 = v65;
  swift_retain(v65);
  v43 = v66;
  swift_retain(v66);
  swift_retain(v25);
  v44 = v62;
  v46 = UUID.init()(v45);
  v47 = UUID.uuidString.getter(v46);
  v49 = v48;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
  strcpy((char *)v71, "ActionMenu: ");
  BYTE5(v71[1]) = 0;
  HIWORD(v71[1]) = -5120;
  v50._countAndFlagsBits = (uint64_t)v56;
  v50._object = v35;
  String.append(_:)(v50);
  swift_release(v25);
  swift_release(v43);
  swift_release(v42);
  swift_bridgeObjectRelease(v35);
  v51 = v71[0];
  v52 = v71[1];
  *(_QWORD *)a8 = v47;
  *(_QWORD *)(a8 + 8) = v49;
  *(_QWORD *)(a8 + 16) = v51;
  *(_QWORD *)(a8 + 24) = v52;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_1009CE580;
  *(_QWORD *)(a8 + 72) = v40;
}

void sub_1009CC7C8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  __int128 v50[3];

  v40 = a4;
  v41 = a7;
  v45 = a5;
  v46 = a6;
  v43 = a9;
  v14 = type metadata accessor for UUID(0);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D2EB8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C78(a1, (uint64_t)v50);
  v21 = sub_100007E8C(&qword_1011D3E68);
  v44 = String.init<A>(describing:)(v50, v21);
  v42 = v22;
  sub_100064C78(a1, (uint64_t)v50);
  sub_10004A160(a10, (uint64_t)v20, &qword_1011D2EB8);
  sub_100064C78(v40, (uint64_t)v49);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 104) & ~v23;
  v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)swift_allocObject(&unk_1010EBF80, v25 + 40, v23 | 7);
  sub_100064C48(v50, (uint64_t)(v26 + 2));
  v26[7] = a2;
  v26[8] = a3;
  v27 = v46;
  v26[9] = v45;
  v26[10] = v27;
  v28 = (uint64_t)v26 + v24;
  v29 = v41;
  v30 = v43;
  v26[11] = v41;
  v26[12] = v30;
  sub_100065228((uint64_t)v20, v28, &qword_1011D2EB8);
  sub_100064C48(v49, (uint64_t)v26 + v25);
  v31 = a2;
  v32 = a3;
  swift_bridgeObjectRetain();
  v33 = sub_1000A0168(v29, v30);
  v34 = UUID.init()(v33);
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
  strcpy((char *)v50, "ActionMenu: ");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  v38._countAndFlagsBits = v44;
  v38._object = v42;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39 = v50[0];
  *(_QWORD *)a8 = v35;
  *(_QWORD *)(a8 + 8) = v37;
  *(_OWORD *)(a8 + 16) = v39;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_1009CFDC4;
  *(_QWORD *)(a8 + 72) = v26;
}

void sub_1009CCA0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[9];
  _BYTE v46[40];
  __int128 v47[2];
  __int128 v48[3];

  v42 = a8;
  v41 = a7;
  v38 = a6;
  v39 = a2;
  v44 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011D2EB8);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C78(a1, (uint64_t)v45);
  v20 = sub_100007E8C(&qword_1011D3E70);
  v40 = String.init<A>(describing:)(v45, v20);
  v22 = v21;
  sub_100064C78(a1, (uint64_t)v48);
  sub_100064C78(a3, (uint64_t)v47);
  sub_10004A160(a4, (uint64_t)v46, &qword_1011D2F28);
  sub_10004A160(a5, (uint64_t)v45, &qword_1011D2F20);
  sub_10004A160(v38, (uint64_t)v19, &qword_1011D2EB8);
  v23 = *(unsigned __int8 *)(v17 + 80);
  v24 = (v23 + 216) & ~v23;
  v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_1010EB788, v25 + 16, v23 | 7);
  sub_100064C48(v48, v26 + 16);
  *(_QWORD *)(v26 + 56) = v39;
  sub_100064C48(v47, v26 + 64);
  sub_100065228((uint64_t)v46, v26 + 104, &qword_1011D2F28);
  sub_100065228((uint64_t)v45, v26 + 144, &qword_1011D2F20);
  sub_100065228((uint64_t)v19, v26 + v24, &qword_1011D2EB8);
  v27 = (uint64_t *)(v26 + v25);
  v28 = v41;
  v29 = v42;
  *v27 = v41;
  v27[1] = v29;
  swift_retain();
  v30 = sub_100048AAC(v28, v29);
  v31 = UUID.init()(v30);
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v44);
  strcpy((char *)v45, "ActionMenu: ");
  BYTE5(v45[1]) = 0;
  HIWORD(v45[1]) = -5120;
  v35._countAndFlagsBits = v40;
  v35._object = v22;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  v36 = v45[0];
  v37 = v45[1];
  *(_QWORD *)a9 = v32;
  *(_QWORD *)(a9 + 8) = v34;
  *(_QWORD *)(a9 + 16) = v36;
  *(_QWORD *)(a9 + 24) = v37;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_1009CE2F4;
  *(_QWORD *)(a9 + 72) = v26;
}

uint64_t sub_1009CCCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 96))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  v4 = (v2 + 144) & ~v2;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 136);
  if (v5 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + 128), v5);
  v6 = v0 + v4;
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {
    if (*(_QWORD *)(v6 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 20);
    v9 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 24);
      v11 = type metadata accessor for URL(0);
      v13 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v4 + v3);
}

void sub_1009CCEB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8) + 80);
  sub_1009C23EC((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v0 + ((v1 + 144) & ~v1));
}

uint64_t sub_1009CCF0C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 104));
  v5 = v3 + v2;
  swift_unknownObjectWeakDestroy(v0 + 144, v4);
  v6 = *(unsigned __int8 *)(v0 + 192);
  if (v6 != 255)
    sub_100064AA4(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
  v7 = v5 + 7;
  if (*(_QWORD *)(v0 + 200))
    swift_release();
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v2;
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    if (*(_QWORD *)(v9 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v11 + *(int *)(v12 + 24);
      v14 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + v8))
    swift_release();
  swift_release();
  return swift_deallocObject(v0, ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
}

void sub_1009CD118()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1009C45E8((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009CD4A4);
}

uint64_t sub_1009CD4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009CD524);
}

uint64_t sub_1009CD524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Playlist(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1009CD5A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

uint64_t sub_1009CD634()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1009CD658(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v4 = v1[4];
  v5 = (uint64_t (*)(_QWORD *))v1[5];
  v10 = v1[2];
  v3 = v10;
  v11 = v4;
  v6 = sub_100049F68(v9);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, a1, v3);
  v7 = v5(v9);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);
  return v7;
}

uint64_t sub_1009CD6D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBFA4((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1009CD6E0()
{
  uint64_t v0;

  return sub_1009CC01C(v0 + 16);
}

uint64_t sub_1009CD6EC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[8]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1009CD730()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D3F2C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D3F28 + dword_1011D3F28))(v0 + 16);
}

uint64_t sub_1009CD788()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1009CD7D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3F3C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D3F38 + dword_1011D3F38))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CD854()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009CD884@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, (uint64_t)&unk_1010EB440, a1);
}

uint64_t sub_1009CD8BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D3F4C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D3F48 + dword_1011D3F48))(v0 + 16);
}

uint64_t sub_1009CD918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3F5C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D3F58 + dword_1011D3F58))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CD9A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, (uint64_t)&unk_1010EB508, a1);
}

uint64_t sub_1009CD9D4()
{
  uint64_t v0;

  return sub_1009CBCE0(v0 + 16);
}

uint64_t sub_1009CD9F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D3F6C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D3F68 + dword_1011D3F68))(v0 + 16);
}

